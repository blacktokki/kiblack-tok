{"version":3,"sources":["node_modules/react-native-web/dist/exports/Text/index.js","../src/createIconSet.tsx","node_modules/@expo/vector-icons/build/vendor/react-native-vector-icons/lib/ensure-native-module-available.js","node_modules/@expo/vector-icons/build/vendor/react-native-vector-icons/lib/create-icon-set.js","node_modules/@expo/vector-icons/build/vendor/react-native-vector-icons/lib/create-icon-source-cache.js","node_modules/react-native-web/dist/modules/usePressEvents/PressResponder.js","node_modules/react-native-web/dist/modules/usePressEvents/index.js","../src/MaterialCommunityIcons.ts","node_modules/react-native-web/dist/exports/TouchableHighlight/index.js","node_modules/@expo/vector-icons/build/vendor/react-native-vector-icons/lib/icon-button.js","node_modules/@expo/vector-icons/build/vendor/react-native-vector-icons/lib/object-utils.js","node_modules/@expo/vector-icons/build/vendor/react-native-vector-icons/Fonts/MaterialCommunityIcons.ttf"],"names":["_excluded","forwardPropsList","Object","assign","forwardedProps","href","lang","pointerEvents","Text","React","props","forwardedRef","hrefAttrs","numberOfLines","onClick","onLayout","onPress","onMoveShouldSetResponder","onMoveShouldSetResponderCapture","onResponderEnd","onResponderGrant","onResponderMove","onResponderReject","onResponderRelease","onResponderStart","onResponderTerminate","onResponderTerminationRequest","onScrollShouldSetResponder","onScrollShouldSetResponderCapture","onSelectionChangeShouldSetResponder","onSelectionChangeShouldSetResponderCapture","onStartShouldSetResponder","onStartShouldSetResponderCapture","selectable","rest","_objectWithoutPropertiesLoose","hasTextAncestor","TextAncestorContext","hostRef","contextDirection","useLocaleContext","direction","useElementLayout","useResponderEvents","handleClick","e","stopPropagation","component","langDirection","getLocaleDirection","componentDirection","dir","writingDirection","supportedProps","pick","pickProps","style","WebkitLineClamp","styles","textHasAncestor$raw","text$raw","textOneLine","textMultiLine","notSelectable","pressable","download","rel","target","charAt","platformMethodsRef","usePlatformMethods","setRef","useMergeRefs","ref","element","createElement","Provider","value","displayName","textStyle","backgroundColor","border","boxSizing","color","display","font","listStyle","margin","padding","textAlign","textDecoration","whiteSpace","wordWrap","StyleSheet","create","_objectSpread","maxWidth","overflow","textOverflow","WebkitBoxOrient","userSelect","cursor","glyphMap","fontName","expoAssetId","fontStyle","RNVIconComponent","_mounted","state","fontIsLoaded","this","setState","_icon","setNativeProps","view","Component","defaultProps","Button","getRawGlyphMap","getFontFamily","loadFont","NativeIconAPI","NativeModules","RNVectorIconsManager","RNVectorIconsModule","ensureNativeModuleAvailable","Platform","OS","Error","DEFAULT_ICON_SIZE","DEFAULT_ICON_COLOR","createIconSet","fontFamily","fontFile","fontBasename","replace","fontReference","select","windows","android","web","default","Icon","_PureComponent","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","root","handleRef","_createClass","key","nativeProps","_this$props","name","size","children","_objectWithoutProperties","glyph","String","fromCodePoint","styleDefaults","fontSize","styleOverrides","fontWeight","_jsxs","PureComponent","allowFontScaling","imageSourceCache","cache","Map","setValue","set","type","data","setError","error","has","get","_cache$get","createIconSourceCache","resolveGlyph","_getImageSource","_asyncToGenerator","undefined","processedColor","processColor","cacheKey","imagePath","getImageForFont","uri","scale","PixelRatio","_loadFont","file","loadFontWithFileName","_toConsumableArray","split","createIconButtonComponent","getImageSource","_x","getImageSourceSync","getImageForFontSync","hasIcon","prototype","hasOwnProperty","ERROR","Transitions","freeze","NOT_RESPONDER","DELAY","RESPONDER_GRANT","RESPONDER_RELEASE","RESPONDER_TERMINATED","LONG_PRESS_DETECTED","RESPONDER_INACTIVE_PRESS_START","RESPONDER_ACTIVE_PRESS_START","RESPONDER_ACTIVE_LONG_PRESS_START","isActiveSignal","signal","isButtonRole","getAttribute","isPressStartSignal","isValidKeyPress","event","role","PressResponder","config","_eventHandlers","_isPointerTouch","_longPressDelayTimeout","_longPressDispatched","_pressDelayTimeout","_pressOutDelayTimeout","_touchState","configure","_config","_cancelLongPressDelayTimeout","_cancelPressDelayTimeout","_cancelPressOutDelayTimeout","_createEventHandlers","start","shouldDelay","persist","_selectionTerminated","nativeEvent","_receiveSignal","delayPressStart","normalizeDelay","setTimeout","delayLongPress","_handleLongPress","end","keyupHandler","document","removeEventListener","elementType","tagName","toLowerCase","disabled","currentTarget","onKeyDown","addEventListener","preventDefault","onPressMove","touch","getTouchFromResponderEvent","_touchActivatePosition","deltaX","pageX","deltaY","pageY","Math","hypot","_this$_config","cancelable","onLongPress","_this$_config2","altKey","onContextMenu","_this$_config3","defaultPrevented","prevState","nextState","console","_performTransitionSideEffects","_this2","isTerminalSignal","isPrevActive","isNextActive","_activate","_deactivate","_this$_config4","_onLongPress","_this$_config5","onPressChange","onPressStart","_this$_config6","onPressEnd","delayPressEnd","clearTimeout","delay","min","fallback","max","_event$nativeEvent","changedTouches","touches","usePressEvents","pressResponderRef","useRef","current","pressResponder","useEffect","reset","useDebugValue","getEventHandlers","createExtraStyles","activeOpacity","underlayColor","child","opacity","underlay","hasPressHandler","onPressIn","onPressOut","actionable","touchAction","MemoedTouchableHighlight","delayPressIn","delayPressOut","focusable","onHideUnderlay","onShowUnderlay","rejectResponderTermination","testOnly_pressed","_useState","useState","extraStyles","setExtraStyles","showUnderlay","useCallback","hideUnderlay","pressConfig","useMemo","pressEventHandlers","only","View","_extends","accessibilityDisabled","compose","container","flexDirection","justifyContent","alignItems","touchable","icon","marginRight","text","TEXT_PROP_NAMES","TOUCHABLE_PROP_NAMES","_class","IconButton","iconStyle","restProps","iconProps","touchableProps","omit","keys","colorStyle","blockStyle","_jsx","TouchableHighlight","borderRadius","module","exports","obj","flat","filter","reduce","acc","_len2","keysToOmit","_key2","keysToOmitSet","Set","getOwnPropertyNames"],"mappings":"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","file":"static/js/0.3491de48.chunk.js","sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"hrefAttrs\", \"numberOfLines\", \"onClick\", \"onLayout\", \"onPress\", \"onMoveShouldSetResponder\", \"onMoveShouldSetResponderCapture\", \"onResponderEnd\", \"onResponderGrant\", \"onResponderMove\", \"onResponderReject\", \"onResponderRelease\", \"onResponderStart\", \"onResponderTerminate\", \"onResponderTerminationRequest\", \"onScrollShouldSetResponder\", \"onScrollShouldSetResponderCapture\", \"onSelectionChangeShouldSetResponder\", \"onSelectionChangeShouldSetResponderCapture\", \"onStartShouldSetResponder\", \"onStartShouldSetResponderCapture\", \"selectable\"];\n\n/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport * as React from 'react';\nimport createElement from '../createElement';\nimport * as forwardedProps from '../../modules/forwardedProps';\nimport pick from '../../modules/pick';\nimport useElementLayout from '../../modules/useElementLayout';\nimport useMergeRefs from '../../modules/useMergeRefs';\nimport usePlatformMethods from '../../modules/usePlatformMethods';\nimport useResponderEvents from '../../modules/useResponderEvents';\nimport StyleSheet from '../StyleSheet';\nimport TextAncestorContext from './TextAncestorContext';\nimport { useLocaleContext, getLocaleDirection } from '../../modules/useLocale';\nvar forwardPropsList = Object.assign({}, forwardedProps.defaultProps, forwardedProps.accessibilityProps, forwardedProps.clickProps, forwardedProps.focusProps, forwardedProps.keyboardProps, forwardedProps.mouseProps, forwardedProps.touchProps, forwardedProps.styleProps, {\n  href: true,\n  lang: true,\n  pointerEvents: true\n});\n\nvar pickProps = props => pick(props, forwardPropsList);\n\nvar Text = /*#__PURE__*/React.forwardRef((props, forwardedRef) => {\n  var hrefAttrs = props.hrefAttrs,\n      numberOfLines = props.numberOfLines,\n      onClick = props.onClick,\n      onLayout = props.onLayout,\n      onPress = props.onPress,\n      onMoveShouldSetResponder = props.onMoveShouldSetResponder,\n      onMoveShouldSetResponderCapture = props.onMoveShouldSetResponderCapture,\n      onResponderEnd = props.onResponderEnd,\n      onResponderGrant = props.onResponderGrant,\n      onResponderMove = props.onResponderMove,\n      onResponderReject = props.onResponderReject,\n      onResponderRelease = props.onResponderRelease,\n      onResponderStart = props.onResponderStart,\n      onResponderTerminate = props.onResponderTerminate,\n      onResponderTerminationRequest = props.onResponderTerminationRequest,\n      onScrollShouldSetResponder = props.onScrollShouldSetResponder,\n      onScrollShouldSetResponderCapture = props.onScrollShouldSetResponderCapture,\n      onSelectionChangeShouldSetResponder = props.onSelectionChangeShouldSetResponder,\n      onSelectionChangeShouldSetResponderCapture = props.onSelectionChangeShouldSetResponderCapture,\n      onStartShouldSetResponder = props.onStartShouldSetResponder,\n      onStartShouldSetResponderCapture = props.onStartShouldSetResponderCapture,\n      selectable = props.selectable,\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var hasTextAncestor = React.useContext(TextAncestorContext);\n  var hostRef = React.useRef(null);\n\n  var _useLocaleContext = useLocaleContext(),\n      contextDirection = _useLocaleContext.direction;\n\n  useElementLayout(hostRef, onLayout);\n  useResponderEvents(hostRef, {\n    onMoveShouldSetResponder,\n    onMoveShouldSetResponderCapture,\n    onResponderEnd,\n    onResponderGrant,\n    onResponderMove,\n    onResponderReject,\n    onResponderRelease,\n    onResponderStart,\n    onResponderTerminate,\n    onResponderTerminationRequest,\n    onScrollShouldSetResponder,\n    onScrollShouldSetResponderCapture,\n    onSelectionChangeShouldSetResponder,\n    onSelectionChangeShouldSetResponderCapture,\n    onStartShouldSetResponder,\n    onStartShouldSetResponderCapture\n  });\n  var handleClick = React.useCallback(e => {\n    if (onClick != null) {\n      onClick(e);\n    } else if (onPress != null) {\n      e.stopPropagation();\n      onPress(e);\n    }\n  }, [onClick, onPress]);\n  var component = hasTextAncestor ? 'span' : 'div';\n  var langDirection = props.lang != null ? getLocaleDirection(props.lang) : null;\n  var componentDirection = props.dir || langDirection;\n  var writingDirection = componentDirection || contextDirection;\n  var supportedProps = pickProps(rest);\n  supportedProps.dir = componentDirection; // 'auto' by default allows browsers to infer writing direction (root elements only)\n\n  if (!hasTextAncestor) {\n    supportedProps.dir = componentDirection != null ? componentDirection : 'auto';\n  }\n\n  if (onClick || onPress) {\n    supportedProps.onClick = handleClick;\n  }\n\n  supportedProps.style = [numberOfLines != null && numberOfLines > 1 && {\n    WebkitLineClamp: numberOfLines\n  }, hasTextAncestor === true ? styles.textHasAncestor$raw : styles.text$raw, numberOfLines === 1 && styles.textOneLine, numberOfLines != null && numberOfLines > 1 && styles.textMultiLine, props.style, selectable === true && styles.selectable, selectable === false && styles.notSelectable, onPress && styles.pressable];\n\n  if (props.href != null) {\n    component = 'a';\n\n    if (hrefAttrs != null) {\n      var download = hrefAttrs.download,\n          rel = hrefAttrs.rel,\n          target = hrefAttrs.target;\n\n      if (download != null) {\n        supportedProps.download = download;\n      }\n\n      if (rel != null) {\n        supportedProps.rel = rel;\n      }\n\n      if (typeof target === 'string') {\n        supportedProps.target = target.charAt(0) !== '_' ? '_' + target : target;\n      }\n    }\n  }\n\n  var platformMethodsRef = usePlatformMethods(supportedProps);\n  var setRef = useMergeRefs(hostRef, platformMethodsRef, forwardedRef);\n  supportedProps.ref = setRef;\n  var element = createElement(component, supportedProps, {\n    writingDirection\n  });\n  return hasTextAncestor ? element : /*#__PURE__*/React.createElement(TextAncestorContext.Provider, {\n    value: true\n  }, element);\n});\nText.displayName = 'Text';\nvar textStyle = {\n  backgroundColor: 'transparent',\n  border: '0 solid black',\n  boxSizing: 'border-box',\n  color: 'black',\n  display: 'inline',\n  font: '14px System',\n  listStyle: 'none',\n  margin: 0,\n  padding: 0,\n  textAlign: 'inherit',\n  textDecoration: 'none',\n  whiteSpace: 'pre-wrap',\n  wordWrap: 'break-word'\n};\nvar styles = StyleSheet.create({\n  text$raw: textStyle,\n  textHasAncestor$raw: _objectSpread(_objectSpread({}, textStyle), {}, {\n    color: 'inherit',\n    font: 'inherit',\n    whiteSpace: 'inherit'\n  }),\n  textOneLine: {\n    maxWidth: '100%',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    wordWrap: 'normal'\n  },\n  // See #13\n  textMultiLine: {\n    display: '-webkit-box',\n    maxWidth: '100%',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    WebkitBoxOrient: 'vertical'\n  },\n  notSelectable: {\n    userSelect: 'none'\n  },\n  selectable: {\n    userSelect: 'text'\n  },\n  pressable: {\n    cursor: 'pointer'\n  }\n});\nexport default Text;","import * as Font from \"expo-font\";\nimport React, { ComponentClass } from \"react\";\nimport {\n  Text,\n  TextProps,\n  TouchableHighlightProps,\n  ViewProps,\n  OpaqueColorValue,\n  TextStyle,\n  ViewStyle,\n} from \"react-native\";\n\nimport createIconSet from \"./vendor/react-native-vector-icons/lib/create-icon-set\";\nimport createIconButtonComponent from \"./vendor/react-native-vector-icons/lib/icon-button\";\n\nexport {\n  DEFAULT_ICON_COLOR,\n  DEFAULT_ICON_SIZE,\n} from \"./vendor/react-native-vector-icons/lib/create-icon-set\";\n\nexport interface IconProps<GLYPHS extends string> extends TextProps {\n  /**\n   * Size of the icon, can also be passed as fontSize in the style object.\n   *\n   * @default 12\n   */\n  size?: number;\n\n  /**\n   * Name of the icon to show\n   *\n   * See Icon Explorer app\n   * {@link https://expo.github.io/vector-icons/}\n   */\n  name: GLYPHS;\n\n  /**\n   * Color of the icon. Can be a string or OpaqueColorValue (returned from\n   * PlatformColor(..))\n   *\n   */\n  color?: string | OpaqueColorValue;\n}\n\nexport interface IconButtonProps<GLYPHS extends string>\n  extends IconProps<GLYPHS>,\n    ViewProps,\n    TouchableHighlightProps {\n  /**\n   * Text and icon color\n   * Use iconStyle or nest a Text component if you need different colors.\n   * Can be a string or OpaqueColorValue (returned from PlatformColor(..))\n   *\n   *  @default 'white'\n   */\n  color?: string | OpaqueColorValue;\n\n  /**\n   * Border radius of the button\n   * Set to 0 to disable.\n   *\n   * @default 5\n   */\n  borderRadius?: number;\n\n  /**\n   * Styles applied to the icon only\n   * Good for setting margins or a different color.\n   *\n   * @default {marginRight: 10}\n   */\n  iconStyle?: TextStyle;\n\n  /**\n   * Style prop inherited from TextProps and TouchableWithoutFeedbackProperties\n   * Only exist here so we can have ViewStyle or TextStyle\n   *\n   */\n  style?: ViewStyle | TextStyle;\n\n  /**\n   * Background color of the button. Can be a string or OpaqueColorValue (returned from\n   * PlatformColor(..))\n   *\n   * @default '#007AFF'\n   */\n  backgroundColor?: string | OpaqueColorValue;\n}\n\nexport type GlyphMap<G extends string> = { [K in G]: number | string };\n\nexport interface Icon<G extends string, FN extends string> {\n  defaultProps: any;\n  Button: ComponentClass<IconButtonProps<G>>;\n  glyphMap: GlyphMap<G>;\n  getRawGlyphMap: () => GlyphMap<G>;\n  getFontFamily: () => FN;\n  loadFont: () => Promise<void>;\n  font: { [x: string]: any };\n  new (props: IconProps<G>): React.Component<IconProps<G>>;\n}\n\nexport default function <G extends string, FN extends string>(\n  glyphMap: GlyphMap<G>,\n  fontName: FN,\n  expoAssetId,\n  fontStyle?: any\n): Icon<G, FN> {\n  const font = { [fontName]: expoAssetId };\n  const RNVIconComponent = createIconSet(glyphMap, fontName, null, fontStyle);\n\n  return class Icon extends React.Component<IconProps<G>> {\n    static defaultProps = RNVIconComponent.defaultProps;\n    static Button = createIconButtonComponent(Icon);\n    static glyphMap = glyphMap;\n    static getRawGlyphMap = () => glyphMap;\n    static getFontFamily = () => fontName;\n    static loadFont = () => Font.loadAsync(font);\n    static font = font;\n\n    _mounted = false;\n    _icon?: any;\n\n    state = {\n      fontIsLoaded: Font.isLoaded(fontName),\n    };\n\n    async componentDidMount() {\n      this._mounted = true;\n      if (!this.state.fontIsLoaded) {\n        await Font.loadAsync(font);\n        this._mounted && this.setState({ fontIsLoaded: true });\n      }\n    }\n\n    componentWillUnmount() {\n      this._mounted = false;\n    }\n\n    setNativeProps(props) {\n      if (this._icon) {\n        this._icon.setNativeProps(props);\n      }\n    }\n\n    render() {\n      if (__DEV__ && this.props.name && !(this.props.name in glyphMap)) {\n        console.warn(\n          `\"${this.props.name}\" is not a valid icon name for family \"${fontName}\"`\n        );\n      }\n\n      if (!this.state.fontIsLoaded) {\n        return <Text />;\n      }\n\n      return (\n        <RNVIconComponent\n          ref={(view) => {\n            this._icon = view;\n          }}\n          {...this.props}\n        />\n      );\n    }\n  };\n}\n","import { Platform, NativeModules } from 'react-native';\n\nconst NativeIconAPI =\n  NativeModules.RNVectorIconsManager || NativeModules.RNVectorIconsModule;\n\nexport default function ensureNativeModuleAvailable() {\n  if (!NativeIconAPI) {\n    if (Platform.OS === 'android') {\n      throw new Error(\n        'RNVectorIconsModule not available, did you properly integrate the module? Try running `react-native link react-native-vector-icons` and recompiling.'\n      );\n    }\n    throw new Error(\n      'RNVectorIconsManager not available, did you add the library to your project and link with libRNVectorIcons.a? Try running `react-native link react-native-vector-icons` and recompiling.'\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport {\n  NativeModules,\n  Platform,\n  PixelRatio,\n  processColor,\n  Text,\n} from 'react-native';\n\nimport ensureNativeModuleAvailable from './ensure-native-module-available';\nimport createIconSourceCache from './create-icon-source-cache';\nimport createIconButtonComponent from './icon-button';\n\nexport const NativeIconAPI =\n  NativeModules.RNVectorIconsManager || NativeModules.RNVectorIconsModule;\n\nexport const DEFAULT_ICON_SIZE = 12;\nexport const DEFAULT_ICON_COLOR = 'black';\n\nexport default function createIconSet(\n  glyphMap,\n  fontFamily,\n  fontFile,\n  fontStyle\n) {\n  // Android doesn't care about actual fontFamily name, it will only look in fonts folder.\n  const fontBasename = fontFile\n    ? fontFile.replace(/\\.(otf|ttf)$/, '')\n    : fontFamily;\n\n  const fontReference = Platform.select({\n    windows: `/Assets/${fontFile}#${fontFamily}`,\n    android: fontBasename,\n    web: fontBasename,\n    default: fontFamily,\n  });\n\n  class Icon extends PureComponent {\n    root = null;\n\n    static defaultProps = {\n      size: DEFAULT_ICON_SIZE,\n      allowFontScaling: false,\n    };\n\n    setNativeProps(nativeProps) {\n      if (this.root) {\n        this.root.setNativeProps(nativeProps);\n      }\n    }\n\n    handleRef = ref => {\n      this.root = ref;\n    };\n\n    render() {\n      const { name, size, color, style, children, ...props } = this.props;\n\n      let glyph = name ? glyphMap[name] || '?' : '';\n      if (typeof glyph === 'number') {\n        glyph = String.fromCodePoint(glyph);\n      }\n\n      const styleDefaults = {\n        fontSize: size,\n        color,\n      };\n\n      const styleOverrides = {\n        fontFamily: fontReference,\n        fontWeight: 'normal',\n        fontStyle: 'normal',\n      };\n\n      props.style = [styleDefaults, style, styleOverrides, fontStyle || {}];\n      props.ref = this.handleRef;\n\n      return (\n        <Text selectable={false} {...props}>\n          {glyph}\n          {children}\n        </Text>\n      );\n    }\n  }\n\n  const imageSourceCache = createIconSourceCache();\n\n  function resolveGlyph(name) {\n    const glyph = glyphMap[name] || '?';\n    if (typeof glyph === 'number') {\n      return String.fromCodePoint(glyph);\n    }\n    return glyph;\n  }\n\n  function getImageSourceSync(\n    name,\n    size = DEFAULT_ICON_SIZE,\n    color = DEFAULT_ICON_COLOR\n  ) {\n    ensureNativeModuleAvailable();\n\n    const glyph = resolveGlyph(name);\n    const processedColor = processColor(color);\n    const cacheKey = `${glyph}:${size}:${processedColor}`;\n\n    if (imageSourceCache.has(cacheKey)) {\n      return imageSourceCache.get(cacheKey);\n    }\n    try {\n      const imagePath = NativeIconAPI.getImageForFontSync(\n        fontReference,\n        glyph,\n        size,\n        processedColor\n      );\n      const value = { uri: imagePath, scale: PixelRatio.get() };\n      imageSourceCache.setValue(cacheKey, value);\n      return value;\n    } catch (error) {\n      imageSourceCache.setError(cacheKey, error);\n      throw error;\n    }\n  }\n\n  async function getImageSource(\n    name,\n    size = DEFAULT_ICON_SIZE,\n    color = DEFAULT_ICON_COLOR\n  ) {\n    ensureNativeModuleAvailable();\n\n    const glyph = resolveGlyph(name);\n    const processedColor = processColor(color);\n    const cacheKey = `${glyph}:${size}:${processedColor}`;\n\n    if (imageSourceCache.has(cacheKey)) {\n      return imageSourceCache.get(cacheKey);\n    }\n    try {\n      const imagePath = await NativeIconAPI.getImageForFont(\n        fontReference,\n        glyph,\n        size,\n        processedColor\n      );\n      const value = { uri: imagePath, scale: PixelRatio.get() };\n      imageSourceCache.setValue(cacheKey, value);\n      return value;\n    } catch (error) {\n      imageSourceCache.setError(cacheKey, error);\n      throw error;\n    }\n  }\n\n  async function loadFont(file = fontFile) {\n    if (Platform.OS === 'ios') {\n      ensureNativeModuleAvailable();\n      if (!file) {\n        throw new Error('Unable to load font, because no file was specified. ');\n      }\n      await NativeIconAPI.loadFontWithFileName(...file.split('.'));\n    }\n  }\n\n  function hasIcon(name) {\n    return Object.prototype.hasOwnProperty.call(glyphMap, name);\n  }\n\n  function getRawGlyphMap() {\n    return glyphMap;\n  }\n\n  function getFontFamily() {\n    return fontReference;\n  }\n\n  Icon.Button = createIconButtonComponent(Icon);\n  Icon.getImageSource = getImageSource;\n  Icon.getImageSourceSync = getImageSourceSync;\n  Icon.loadFont = loadFont;\n  Icon.hasIcon = hasIcon;\n  Icon.getRawGlyphMap = getRawGlyphMap;\n  Icon.getFontFamily = getFontFamily;\n\n  return Icon;\n}\n","const TYPE_VALUE = 'value';\nconst TYPE_ERROR = 'error';\n\nexport default function createIconSourceCache() {\n  const cache = new Map();\n\n  const setValue = (key, value) =>\n    cache.set(key, { type: TYPE_VALUE, data: value });\n\n  const setError = (key, error) =>\n    cache.set(key, { type: TYPE_ERROR, data: error });\n\n  const has = key => cache.has(key);\n\n  const get = key => {\n    if (!cache.has(key)) {\n      return undefined;\n    }\n    const { type, data } = cache.get(key);\n    if (type === TYPE_ERROR) {\n      throw data;\n    }\n    return data;\n  };\n\n  return { setValue, setError, has, get };\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nvar DELAY = 'DELAY';\nvar ERROR = 'ERROR';\nvar LONG_PRESS_DETECTED = 'LONG_PRESS_DETECTED';\nvar NOT_RESPONDER = 'NOT_RESPONDER';\nvar RESPONDER_ACTIVE_LONG_PRESS_START = 'RESPONDER_ACTIVE_LONG_PRESS_START';\nvar RESPONDER_ACTIVE_PRESS_START = 'RESPONDER_ACTIVE_PRESS_START';\nvar RESPONDER_INACTIVE_PRESS_START = 'RESPONDER_INACTIVE_PRESS_START';\nvar RESPONDER_GRANT = 'RESPONDER_GRANT';\nvar RESPONDER_RELEASE = 'RESPONDER_RELEASE';\nvar RESPONDER_TERMINATED = 'RESPONDER_TERMINATED';\nvar Transitions = Object.freeze({\n  NOT_RESPONDER: {\n    DELAY: ERROR,\n    RESPONDER_GRANT: RESPONDER_INACTIVE_PRESS_START,\n    RESPONDER_RELEASE: ERROR,\n    RESPONDER_TERMINATED: ERROR,\n    LONG_PRESS_DETECTED: ERROR\n  },\n  RESPONDER_INACTIVE_PRESS_START: {\n    DELAY: RESPONDER_ACTIVE_PRESS_START,\n    RESPONDER_GRANT: ERROR,\n    RESPONDER_RELEASE: NOT_RESPONDER,\n    RESPONDER_TERMINATED: NOT_RESPONDER,\n    LONG_PRESS_DETECTED: ERROR\n  },\n  RESPONDER_ACTIVE_PRESS_START: {\n    DELAY: ERROR,\n    RESPONDER_GRANT: ERROR,\n    RESPONDER_RELEASE: NOT_RESPONDER,\n    RESPONDER_TERMINATED: NOT_RESPONDER,\n    LONG_PRESS_DETECTED: RESPONDER_ACTIVE_LONG_PRESS_START\n  },\n  RESPONDER_ACTIVE_LONG_PRESS_START: {\n    DELAY: ERROR,\n    RESPONDER_GRANT: ERROR,\n    RESPONDER_RELEASE: NOT_RESPONDER,\n    RESPONDER_TERMINATED: NOT_RESPONDER,\n    LONG_PRESS_DETECTED: RESPONDER_ACTIVE_LONG_PRESS_START\n  },\n  ERROR: {\n    DELAY: NOT_RESPONDER,\n    RESPONDER_GRANT: RESPONDER_INACTIVE_PRESS_START,\n    RESPONDER_RELEASE: NOT_RESPONDER,\n    RESPONDER_TERMINATED: NOT_RESPONDER,\n    LONG_PRESS_DETECTED: NOT_RESPONDER\n  }\n});\n\nvar isActiveSignal = signal => signal === RESPONDER_ACTIVE_PRESS_START || signal === RESPONDER_ACTIVE_LONG_PRESS_START;\n\nvar isButtonRole = element => element.getAttribute('role') === 'button';\n\nvar isPressStartSignal = signal => signal === RESPONDER_INACTIVE_PRESS_START || signal === RESPONDER_ACTIVE_PRESS_START || signal === RESPONDER_ACTIVE_LONG_PRESS_START;\n\nvar isTerminalSignal = signal => signal === RESPONDER_TERMINATED || signal === RESPONDER_RELEASE;\n\nvar isValidKeyPress = event => {\n  var key = event.key,\n      target = event.target;\n  var role = target.getAttribute('role');\n  var isSpacebar = key === ' ' || key === 'Spacebar';\n  return key === 'Enter' || isSpacebar && role === 'button';\n};\n\nvar DEFAULT_LONG_PRESS_DELAY_MS = 450; // 500 - 50\n\nvar DEFAULT_PRESS_DELAY_MS = 50;\n/**\n * =========================== PressResponder Tutorial ===========================\n *\n * The `PressResponder` class helps you create press interactions by analyzing the\n * geometry of elements and observing when another responder (e.g. ScrollView)\n * has stolen the touch lock. It offers hooks for your component to provide\n * interaction feedback to the user:\n *\n * - When a press has activated (e.g. highlight an element)\n * - When a press has deactivated (e.g. un-highlight an element)\n * - When a press sould trigger an action, meaning it activated and deactivated\n *   while within the geometry of the element without the lock being stolen.\n *\n * A high quality interaction isn't as simple as you might think. There should\n * be a slight delay before activation. Moving your finger beyond an element's\n * bounds should trigger deactivation, but moving the same finger back within an\n * element's bounds should trigger reactivation.\n *\n * In order to use `PressResponder`, do the following:\n *\n *     const pressResponder = new PressResponder(config);\n *\n * 2. Choose the rendered component who should collect the press events. On that\n *    element, spread `pressability.getEventHandlers()` into its props.\n *\n *    return (\n *      <View {...this.state.pressResponder.getEventHandlers()} />\n *    );\n *\n * 3. Reset `PressResponder` when your component unmounts.\n *\n *    componentWillUnmount() {\n *      this.state.pressResponder.reset();\n *    }\n *\n * ==================== Implementation Details ====================\n *\n * `PressResponder` only assumes that there exists a `HitRect` node. The `PressRect`\n * is an abstract box that is extended beyond the `HitRect`.\n *\n * # Geometry\n *\n *  ┌────────────────────────┐\n *  │  ┌──────────────────┐  │ - Presses start anywhere within `HitRect`.\n *  │  │  ┌────────────┐  │  │\n *  │  │  │ VisualRect │  │  │\n *  │  │  └────────────┘  │  │ - When pressed down for sufficient amount of time\n *  │  │    HitRect       │  │   before letting up, `VisualRect` activates.\n *  │  └──────────────────┘  │\n *  │       Out Region   o   │\n *  └────────────────────│───┘\n *                       └────── When the press is released outside the `HitRect`,\n *                               the responder is NOT eligible for a \"press\".\n *\n * # State Machine\n *\n * ┌───────────────┐ ◀──── RESPONDER_RELEASE\n * │ NOT_RESPONDER │\n * └───┬───────────┘ ◀──── RESPONDER_TERMINATED\n *     │\n *     │ RESPONDER_GRANT (HitRect)\n *     │\n *     ▼\n * ┌─────────────────────┐          ┌───────────────────┐              ┌───────────────────┐\n * │ RESPONDER_INACTIVE_ │  DELAY   │ RESPONDER_ACTIVE_ │  T + DELAY   │ RESPONDER_ACTIVE_ │\n * │ PRESS_START         ├────────▶ │ PRESS_START       ├────────────▶ │ LONG_PRESS_START  │\n * └─────────────────────┘          └───────────────────┘              └───────────────────┘\n *\n * T + DELAY => LONG_PRESS_DELAY + DELAY\n *\n * Not drawn are the side effects of each transition. The most important side\n * effect is the invocation of `onLongPress`. Only when the browser produces a\n * `click` event is `onPress` invoked.\n */\n\nexport default class PressResponder {\n  constructor(config) {\n    this._eventHandlers = null;\n    this._isPointerTouch = false;\n    this._longPressDelayTimeout = null;\n    this._longPressDispatched = false;\n    this._pressDelayTimeout = null;\n    this._pressOutDelayTimeout = null;\n    this._touchState = NOT_RESPONDER;\n    this.configure(config);\n  }\n\n  configure(config) {\n    this._config = config;\n  }\n  /**\n   * Resets any pending timers. This should be called on unmount.\n   */\n\n\n  reset() {\n    this._cancelLongPressDelayTimeout();\n\n    this._cancelPressDelayTimeout();\n\n    this._cancelPressOutDelayTimeout();\n  }\n  /**\n   * Returns a set of props to spread into the interactive element.\n   */\n\n\n  getEventHandlers() {\n    if (this._eventHandlers == null) {\n      this._eventHandlers = this._createEventHandlers();\n    }\n\n    return this._eventHandlers;\n  }\n\n  _createEventHandlers() {\n    var start = (event, shouldDelay) => {\n      event.persist();\n\n      this._cancelPressOutDelayTimeout();\n\n      this._longPressDispatched = false;\n      this._selectionTerminated = false;\n      this._touchState = NOT_RESPONDER;\n      this._isPointerTouch = event.nativeEvent.type === 'touchstart';\n\n      this._receiveSignal(RESPONDER_GRANT, event);\n\n      var delayPressStart = normalizeDelay(this._config.delayPressStart, 0, DEFAULT_PRESS_DELAY_MS);\n\n      if (shouldDelay !== false && delayPressStart > 0) {\n        this._pressDelayTimeout = setTimeout(() => {\n          this._receiveSignal(DELAY, event);\n        }, delayPressStart);\n      } else {\n        this._receiveSignal(DELAY, event);\n      }\n\n      var delayLongPress = normalizeDelay(this._config.delayLongPress, 10, DEFAULT_LONG_PRESS_DELAY_MS);\n      this._longPressDelayTimeout = setTimeout(() => {\n        this._handleLongPress(event);\n      }, delayLongPress + delayPressStart);\n    };\n\n    var end = event => {\n      this._receiveSignal(RESPONDER_RELEASE, event);\n    };\n\n    var keyupHandler = event => {\n      var onPress = this._config.onPress;\n      var target = event.target;\n\n      if (this._touchState !== NOT_RESPONDER && isValidKeyPress(event)) {\n        end(event);\n        document.removeEventListener('keyup', keyupHandler);\n        var role = target.getAttribute('role');\n        var elementType = target.tagName.toLowerCase();\n        var isNativeInteractiveElement = role === 'link' || elementType === 'a' || elementType === 'button' || elementType === 'input' || elementType === 'select' || elementType === 'textarea';\n\n        if (onPress != null && !isNativeInteractiveElement) {\n          onPress(event);\n        }\n      }\n    };\n\n    return {\n      onStartShouldSetResponder: event => {\n        var disabled = this._config.disabled;\n\n        if (disabled && isButtonRole(event.currentTarget)) {\n          event.stopPropagation();\n        }\n\n        if (disabled == null) {\n          return true;\n        }\n\n        return !disabled;\n      },\n      onKeyDown: event => {\n        var disabled = this._config.disabled;\n        var key = event.key,\n            target = event.target;\n\n        if (!disabled && isValidKeyPress(event)) {\n          if (this._touchState === NOT_RESPONDER) {\n            start(event, false); // Listen to 'keyup' on document to account for situations where\n            // focus is moved to another element during 'keydown'.\n\n            document.addEventListener('keyup', keyupHandler);\n          }\n\n          var role = target.getAttribute('role');\n          var isSpacebarKey = key === ' ' || key === 'Spacebar';\n\n          var _isButtonRole = role === 'button' || role === 'menuitem';\n\n          if (isSpacebarKey && _isButtonRole) {\n            // Prevent spacebar scrolling the window\n            event.preventDefault();\n          }\n\n          event.stopPropagation();\n        }\n      },\n      onResponderGrant: event => start(event),\n      onResponderMove: event => {\n        if (this._config.onPressMove != null) {\n          this._config.onPressMove(event);\n        }\n\n        var touch = getTouchFromResponderEvent(event);\n\n        if (this._touchActivatePosition != null) {\n          var deltaX = this._touchActivatePosition.pageX - touch.pageX;\n          var deltaY = this._touchActivatePosition.pageY - touch.pageY;\n\n          if (Math.hypot(deltaX, deltaY) > 10) {\n            this._cancelLongPressDelayTimeout();\n          }\n        }\n      },\n      onResponderRelease: event => end(event),\n      onResponderTerminate: event => {\n        if (event.nativeEvent.type === 'selectionchange') {\n          this._selectionTerminated = true;\n        }\n\n        this._receiveSignal(RESPONDER_TERMINATED, event);\n      },\n      onResponderTerminationRequest: event => {\n        var _this$_config = this._config,\n            cancelable = _this$_config.cancelable,\n            disabled = _this$_config.disabled,\n            onLongPress = _this$_config.onLongPress; // If `onLongPress` is provided, don't terminate on `contextmenu` as default\n        // behavior will be prevented for non-mouse pointers.\n\n        if (!disabled && onLongPress != null && this._isPointerTouch && event.nativeEvent.type === 'contextmenu') {\n          return false;\n        }\n\n        if (cancelable == null) {\n          return true;\n        }\n\n        return cancelable;\n      },\n      // NOTE: this diverges from react-native in 3 significant ways:\n      // * The `onPress` callback is not connected to the responder system (the native\n      //  `click` event must be used but is dispatched in many scenarios where no pointers\n      //   are on the screen.) Therefore, it's possible for `onPress` to be called without\n      //   `onPress{Start,End}` being called first.\n      // * The `onPress` callback is only be called on the first ancestor of the native\n      //   `click` target that is using the PressResponder.\n      // * The event's `nativeEvent` is a `MouseEvent` not a `TouchEvent`.\n      onClick: event => {\n        var _this$_config2 = this._config,\n            disabled = _this$_config2.disabled,\n            onPress = _this$_config2.onPress;\n\n        if (!disabled) {\n          // If long press dispatched, cancel default click behavior.\n          // If the responder terminated because text was selected during the gesture,\n          // cancel the default click behavior.\n          event.stopPropagation();\n\n          if (this._longPressDispatched || this._selectionTerminated) {\n            event.preventDefault();\n          } else if (onPress != null && event.altKey === false) {\n            onPress(event);\n          }\n        } else {\n          if (isButtonRole(event.currentTarget)) {\n            event.stopPropagation();\n          }\n        }\n      },\n      // If `onLongPress` is provided and a touch pointer is being used, prevent the\n      // default context menu from opening.\n      onContextMenu: event => {\n        var _this$_config3 = this._config,\n            disabled = _this$_config3.disabled,\n            onLongPress = _this$_config3.onLongPress;\n\n        if (!disabled) {\n          if (onLongPress != null && this._isPointerTouch && !event.defaultPrevented) {\n            event.preventDefault();\n            event.stopPropagation();\n          }\n        } else {\n          if (isButtonRole(event.currentTarget)) {\n            event.stopPropagation();\n          }\n        }\n      }\n    };\n  }\n  /**\n   * Receives a state machine signal, performs side effects of the transition\n   * and stores the new state. Validates the transition as well.\n   */\n\n\n  _receiveSignal(signal, event) {\n    var prevState = this._touchState;\n    var nextState = null;\n\n    if (Transitions[prevState] != null) {\n      nextState = Transitions[prevState][signal];\n    }\n\n    if (this._touchState === NOT_RESPONDER && signal === RESPONDER_RELEASE) {\n      return;\n    }\n\n    if (nextState == null || nextState === ERROR) {\n      console.error(\"PressResponder: Invalid signal \" + signal + \" for state \" + prevState + \" on responder\");\n    } else if (prevState !== nextState) {\n      this._performTransitionSideEffects(prevState, nextState, signal, event);\n\n      this._touchState = nextState;\n    }\n  }\n  /**\n   * Performs a transition between touchable states and identify any activations\n   * or deactivations (and callback invocations).\n   */\n\n\n  _performTransitionSideEffects(prevState, nextState, signal, event) {\n    if (isTerminalSignal(signal)) {\n      // Pressable suppression of contextmenu on windows.\n      // On Windows, the contextmenu is displayed after pointerup.\n      // https://github.com/necolas/react-native-web/issues/2296\n      setTimeout(() => {\n        this._isPointerTouch = false;\n      }, 0);\n      this._touchActivatePosition = null;\n\n      this._cancelLongPressDelayTimeout();\n    }\n\n    if (isPressStartSignal(prevState) && signal === LONG_PRESS_DETECTED) {\n      var onLongPress = this._config.onLongPress; // Long press is not supported for keyboards because 'click' can be dispatched\n      // immediately (and multiple times) after 'keydown'.\n\n      if (onLongPress != null && event.nativeEvent.key == null) {\n        onLongPress(event);\n        this._longPressDispatched = true;\n      }\n    }\n\n    var isPrevActive = isActiveSignal(prevState);\n    var isNextActive = isActiveSignal(nextState);\n\n    if (!isPrevActive && isNextActive) {\n      this._activate(event);\n    } else if (isPrevActive && !isNextActive) {\n      this._deactivate(event);\n    }\n\n    if (isPressStartSignal(prevState) && signal === RESPONDER_RELEASE) {\n      var _this$_config4 = this._config,\n          _onLongPress = _this$_config4.onLongPress,\n          onPress = _this$_config4.onPress;\n\n      if (onPress != null) {\n        var isPressCanceledByLongPress = _onLongPress != null && prevState === RESPONDER_ACTIVE_LONG_PRESS_START;\n\n        if (!isPressCanceledByLongPress) {\n          // If we never activated (due to delays), activate and deactivate now.\n          if (!isNextActive && !isPrevActive) {\n            this._activate(event);\n\n            this._deactivate(event);\n          }\n        }\n      }\n    }\n\n    this._cancelPressDelayTimeout();\n  }\n\n  _activate(event) {\n    var _this$_config5 = this._config,\n        onPressChange = _this$_config5.onPressChange,\n        onPressStart = _this$_config5.onPressStart;\n    var touch = getTouchFromResponderEvent(event);\n    this._touchActivatePosition = {\n      pageX: touch.pageX,\n      pageY: touch.pageY\n    };\n\n    if (onPressStart != null) {\n      onPressStart(event);\n    }\n\n    if (onPressChange != null) {\n      onPressChange(true);\n    }\n  }\n\n  _deactivate(event) {\n    var _this$_config6 = this._config,\n        onPressChange = _this$_config6.onPressChange,\n        onPressEnd = _this$_config6.onPressEnd;\n\n    function end() {\n      if (onPressEnd != null) {\n        onPressEnd(event);\n      }\n\n      if (onPressChange != null) {\n        onPressChange(false);\n      }\n    }\n\n    var delayPressEnd = normalizeDelay(this._config.delayPressEnd);\n\n    if (delayPressEnd > 0) {\n      this._pressOutDelayTimeout = setTimeout(() => {\n        end();\n      }, delayPressEnd);\n    } else {\n      end();\n    }\n  }\n\n  _handleLongPress(event) {\n    if (this._touchState === RESPONDER_ACTIVE_PRESS_START || this._touchState === RESPONDER_ACTIVE_LONG_PRESS_START) {\n      this._receiveSignal(LONG_PRESS_DETECTED, event);\n    }\n  }\n\n  _cancelLongPressDelayTimeout() {\n    if (this._longPressDelayTimeout != null) {\n      clearTimeout(this._longPressDelayTimeout);\n      this._longPressDelayTimeout = null;\n    }\n  }\n\n  _cancelPressDelayTimeout() {\n    if (this._pressDelayTimeout != null) {\n      clearTimeout(this._pressDelayTimeout);\n      this._pressDelayTimeout = null;\n    }\n  }\n\n  _cancelPressOutDelayTimeout() {\n    if (this._pressOutDelayTimeout != null) {\n      clearTimeout(this._pressOutDelayTimeout);\n      this._pressOutDelayTimeout = null;\n    }\n  }\n\n}\n\nfunction normalizeDelay(delay, min, fallback) {\n  if (min === void 0) {\n    min = 0;\n  }\n\n  if (fallback === void 0) {\n    fallback = 0;\n  }\n\n  return Math.max(min, delay !== null && delay !== void 0 ? delay : fallback);\n}\n\nfunction getTouchFromResponderEvent(event) {\n  var _event$nativeEvent = event.nativeEvent,\n      changedTouches = _event$nativeEvent.changedTouches,\n      touches = _event$nativeEvent.touches;\n\n  if (touches != null && touches.length > 0) {\n    return touches[0];\n  }\n\n  if (changedTouches != null && changedTouches.length > 0) {\n    return changedTouches[0];\n  }\n\n  return event.nativeEvent;\n}","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport PressResponder from './PressResponder';\nimport { useDebugValue, useEffect, useRef } from 'react';\nexport default function usePressEvents(hostRef, config) {\n  var pressResponderRef = useRef(null);\n\n  if (pressResponderRef.current == null) {\n    pressResponderRef.current = new PressResponder(config);\n  }\n\n  var pressResponder = pressResponderRef.current; // Re-configure to use the current node and configuration.\n\n  useEffect(() => {\n    pressResponder.configure(config);\n  }, [config, pressResponder]); // Reset the `pressResponder` when cleanup needs to occur. This is\n  // a separate effect because we do not want to rest the responder when `config` changes.\n\n  useEffect(() => {\n    return () => {\n      pressResponder.reset();\n    };\n  }, [pressResponder]);\n  useDebugValue(config);\n  return pressResponder.getEventHandlers();\n}","import createIconSet from './createIconSet';\nimport font from './vendor/react-native-vector-icons/Fonts/MaterialCommunityIcons.ttf';\nimport glyphMap from './vendor/react-native-vector-icons/glyphmaps/MaterialCommunityIcons.json';\n\nexport default createIconSet(glyphMap, 'material-community', font);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"activeOpacity\", \"children\", \"delayPressIn\", \"delayPressOut\", \"delayLongPress\", \"disabled\", \"focusable\", \"onHideUnderlay\", \"onLongPress\", \"onPress\", \"onPressIn\", \"onPressOut\", \"onShowUnderlay\", \"rejectResponderTermination\", \"style\", \"testOnly_pressed\", \"underlayColor\"];\nimport * as React from 'react';\nimport { useCallback, useMemo, useState, useRef } from 'react';\nimport useMergeRefs from '../../modules/useMergeRefs';\nimport usePressEvents from '../../modules/usePressEvents';\nimport StyleSheet from '../StyleSheet';\nimport View from '../View';\n\nfunction createExtraStyles(activeOpacity, underlayColor) {\n  return {\n    child: {\n      opacity: activeOpacity !== null && activeOpacity !== void 0 ? activeOpacity : 0.85\n    },\n    underlay: {\n      backgroundColor: underlayColor === undefined ? 'black' : underlayColor\n    }\n  };\n}\n\nfunction hasPressHandler(props) {\n  return props.onPress != null || props.onPressIn != null || props.onPressOut != null || props.onLongPress != null;\n}\n/**\n * A wrapper for making views respond properly to touches.\n * On press down, the opacity of the wrapped view is decreased, which allows\n * the underlay color to show through, darkening or tinting the view.\n *\n * The underlay comes from wrapping the child in a new View, which can affect\n * layout, and sometimes cause unwanted visual artifacts if not used correctly,\n * for example if the backgroundColor of the wrapped view isn't explicitly set\n * to an opaque color.\n *\n * TouchableHighlight must have one child (not zero or more than one).\n * If you wish to have several child components, wrap them in a View.\n */\n\n\nfunction TouchableHighlight(props, forwardedRef) {\n  var activeOpacity = props.activeOpacity,\n      children = props.children,\n      delayPressIn = props.delayPressIn,\n      delayPressOut = props.delayPressOut,\n      delayLongPress = props.delayLongPress,\n      disabled = props.disabled,\n      focusable = props.focusable,\n      onHideUnderlay = props.onHideUnderlay,\n      onLongPress = props.onLongPress,\n      onPress = props.onPress,\n      onPressIn = props.onPressIn,\n      onPressOut = props.onPressOut,\n      onShowUnderlay = props.onShowUnderlay,\n      rejectResponderTermination = props.rejectResponderTermination,\n      style = props.style,\n      testOnly_pressed = props.testOnly_pressed,\n      underlayColor = props.underlayColor,\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var hostRef = useRef(null);\n  var setRef = useMergeRefs(forwardedRef, hostRef);\n\n  var _useState = useState(testOnly_pressed === true ? createExtraStyles(activeOpacity, underlayColor) : null),\n      extraStyles = _useState[0],\n      setExtraStyles = _useState[1];\n\n  var showUnderlay = useCallback(() => {\n    if (!hasPressHandler(props)) {\n      return;\n    }\n\n    setExtraStyles(createExtraStyles(activeOpacity, underlayColor));\n\n    if (onShowUnderlay != null) {\n      onShowUnderlay();\n    }\n  }, [activeOpacity, onShowUnderlay, props, underlayColor]);\n  var hideUnderlay = useCallback(() => {\n    if (testOnly_pressed === true) {\n      return;\n    }\n\n    if (hasPressHandler(props)) {\n      setExtraStyles(null);\n\n      if (onHideUnderlay != null) {\n        onHideUnderlay();\n      }\n    }\n  }, [onHideUnderlay, props, testOnly_pressed]);\n  var pressConfig = useMemo(() => ({\n    cancelable: !rejectResponderTermination,\n    disabled,\n    delayLongPress,\n    delayPressStart: delayPressIn,\n    delayPressEnd: delayPressOut,\n    onLongPress,\n    onPress,\n\n    onPressStart(event) {\n      showUnderlay();\n\n      if (onPressIn != null) {\n        onPressIn(event);\n      }\n    },\n\n    onPressEnd(event) {\n      hideUnderlay();\n\n      if (onPressOut != null) {\n        onPressOut(event);\n      }\n    }\n\n  }), [delayLongPress, delayPressIn, delayPressOut, disabled, onLongPress, onPress, onPressIn, onPressOut, rejectResponderTermination, showUnderlay, hideUnderlay]);\n  var pressEventHandlers = usePressEvents(hostRef, pressConfig);\n  var child = React.Children.only(children);\n  return /*#__PURE__*/React.createElement(View, _extends({}, rest, pressEventHandlers, {\n    accessibilityDisabled: disabled,\n    focusable: !disabled && focusable !== false,\n    pointerEvents: disabled ? 'none' : undefined,\n    ref: setRef,\n    style: [styles.root, style, !disabled && styles.actionable, extraStyles && extraStyles.underlay]\n  }), /*#__PURE__*/React.cloneElement(child, {\n    style: StyleSheet.compose(child.props.style, extraStyles && extraStyles.child)\n  }));\n}\n\nvar styles = StyleSheet.create({\n  root: {\n    userSelect: 'none'\n  },\n  actionable: {\n    cursor: 'pointer',\n    touchAction: 'manipulation'\n  }\n});\nvar MemoedTouchableHighlight = /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(TouchableHighlight));\nMemoedTouchableHighlight.displayName = 'TouchableHighlight';\nexport default MemoedTouchableHighlight;","import React, { PureComponent } from 'react';\nimport { StyleSheet, Text, TouchableHighlight, View } from 'react-native';\nimport { pick, omit } from './object-utils';\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    padding: 8,\n  },\n  touchable: {\n    overflow: 'hidden',\n  },\n  icon: {\n    marginRight: 10,\n  },\n  text: {\n    fontWeight: '600',\n    backgroundColor: 'transparent',\n  },\n});\n\nconst IOS7_BLUE = '#007AFF';\n\nconst TEXT_PROP_NAMES = [\n  'ellipsizeMode',\n  'numberOfLines',\n  'textBreakStrategy',\n  'selectable',\n  'suppressHighlighting',\n  'allowFontScaling',\n  'adjustsFontSizeToFit',\n  'minimumFontScale',\n];\n\nconst TOUCHABLE_PROP_NAMES = [\n  'accessible',\n  'accessibilityLabel',\n  'accessibilityHint',\n  'accessibilityComponentType',\n  'accessibilityRole',\n  'accessibilityStates',\n  'accessibilityTraits',\n  'onFocus',\n  'onBlur',\n  'disabled',\n  'onPress',\n  'onPressIn',\n  'onPressOut',\n  'onLayout',\n  'onLongPress',\n  'nativeID',\n  'testID',\n  'delayPressIn',\n  'delayPressOut',\n  'delayLongPress',\n  'activeOpacity',\n  'underlayColor',\n  'selectionColor',\n  'onShowUnderlay',\n  'onHideUnderlay',\n  'hasTVPreferredFocus',\n  'tvParallaxProperties',\n];\n\nexport default function createIconButtonComponent(Icon) {\n  return class IconButton extends PureComponent {\n    static defaultProps = {\n      backgroundColor: IOS7_BLUE,\n      borderRadius: 5,\n      color: 'white',\n      size: 20,\n    };\n\n    render() {\n      const { style, iconStyle, children, ...restProps } = this.props;\n\n      const iconProps = pick(\n        restProps,\n        TEXT_PROP_NAMES,\n        'style',\n        'name',\n        'size',\n        'color'\n      );\n      const touchableProps = pick(restProps, TOUCHABLE_PROP_NAMES);\n      const props = omit(\n        restProps,\n        Object.keys(iconProps),\n        Object.keys(touchableProps),\n        'iconStyle',\n        'borderRadius',\n        'backgroundColor'\n      );\n      iconProps.style = iconStyle ? [styles.icon, iconStyle] : styles.icon;\n\n      const colorStyle = pick(this.props, 'color');\n      const blockStyle = pick(this.props, 'backgroundColor', 'borderRadius');\n\n      return (\n        <TouchableHighlight\n          style={[styles.touchable, blockStyle]}\n          {...touchableProps}\n        >\n          <View style={[styles.container, blockStyle, style]} {...props}>\n            <Icon {...iconProps} />\n            {typeof children === 'string' ? (\n              <Text style={[styles.text, colorStyle]} selectable={false}>\n                {children}\n              </Text>\n            ) : (\n              children\n            )}\n          </View>\n        </TouchableHighlight>\n      );\n    }\n  };\n}\n","const pick = (obj, ...keys) =>\n  keys\n    .flat()\n    .filter(key => Object.prototype.hasOwnProperty.call(obj, key))\n    .reduce((acc, key) => {\n      acc[key] = obj[key];\n      return acc;\n    }, {});\n\nconst omit = (obj, ...keysToOmit) => {\n  const keysToOmitSet = new Set(keysToOmit.flat());\n  return Object.getOwnPropertyNames(obj)\n    .filter(key => !keysToOmitSet.has(key))\n    .reduce((acc, key) => {\n      acc[key] = obj[key];\n      return acc;\n    }, {});\n};\n\nmodule.exports = { pick, omit };\n","module.exports = __webpack_public_path__ + \"./fonts/MaterialCommunityIcons.ttf\";"],"sourceRoot":""}