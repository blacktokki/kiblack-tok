{"version":3,"file":"static/js/553.38404802.chunk.js","mappings":"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","sources":["src/lib/react-native-paper/Avatar.tsx","src/components/Avatar.tsx","src/components/CommonButton.tsx","src/components/CommonSection.tsx","src/components/EditorPreview.tsx","src/components/ModalSection.tsx","src/components/Themed.tsx","src/constants/Colors.ts","src/hooks/lists/useMessengerContentList.ts","src/hooks/useModalEffect.ts","src/hooks/useModalsContext.tsx","src/hooks/useResizeContext.tsx","src/hooks/useUploadContext.tsx","src/hooks/useWebsocketContext.tsx","src/modals/MessageModal.tsx","src/components/LinkPreview.tsx","src/components/FilePreview.tsx","src/screens/main/ChatScreen/Messages.tsx","src/hooks/lists/useMessengerViewerList.ts","src/screens/main/ChatScreen/TimerTags.tsx","src/hooks/lists/useTimerMessageContent.ts"],"sourcesContent":["import * as React from 'react';\r\nimport { Avatar } from 'react-native-paper';\r\nimport { AvatarProps } from '../../types';\r\n\r\nconst normalizeHash = (hash: number, min: number, max: number) => {\r\n    return Math.floor((hash % (max - min)) + min);\r\n};\r\n\r\nconst stringToHSL = (str: string, initHash?:number) => {\r\n    let hash = initHash || 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\r\n    }\r\n    hash = Math.abs(hash);\r\n    return `hsl(${normalizeHash(hash, 0, 360)}, ${normalizeHash(hash, 0, 100)}%, ${normalizeHash(hash, 25, 75)}%)`;\r\n};\r\n\r\nexport default (props:AvatarProps) => {\r\n    const backgroundColor = stringToHSL(props.name, props.userId)\r\n    return <Avatar.Text style={{backgroundColor}} size={props.size} label={props.name.split(' ').map(v=>v[0]).join().toUpperCase()} />\r\n};","import React from 'react';\r\nimport Avatar from '../lib/react-native-paper/Avatar';\r\nimport { AvatarProps, MessengerChannel, User } from '../types';\r\n\r\nexport function avatarFromChannel(item:MessengerChannel, user?:User|null){\r\n    let avatar;\r\n    let name = item.name\r\n    if (item.member_count<3){\r\n        avatar = (item.member_count==1 || user?.id == item.subowner.id)?item.owner:item.subowner\r\n        name = name.length>0?name:avatar.name \r\n    }\r\n    return {avatar, name}\r\n}\r\n\r\nexport default (props:AvatarProps)=>{\r\n    return <Avatar {...props}/>\r\n}\r\n\r\n","import React, { useState } from 'react';\r\nimport { Text, StyleSheet, Pressable, StyleProp, ViewStyle} from 'react-native';\r\nimport Colors from '../constants/Colors';\r\nimport useColorScheme from '../hooks/useColorScheme';\r\nimport { CustomButtonProps } from '../types';\r\n\r\nconst DefaultButton = (props:CustomButtonProps & {borderColor:string})=>{\r\n    const [hover, setHover] = useState(false)\r\n    return <Pressable\r\n        onPress={()=>props.onPress()}\r\n        //@ts-ignore\r\n        onHoverIn={()=>setHover(true)}\r\n        onHoverOut={()=>setHover(false)}\r\n        disabled={props.disabled}\r\n        style={[\r\n            {\r\n                paddingVertical:5, \r\n                paddingHorizontal:16\r\n            },\r\n            props.style,\r\n            (hover || props.disabled)?{backgroundColor:props.color, borderColor:props.borderColor}:{}\r\n        ]}>\r\n            {props.children?props.children:\r\n            <Text selectable={false} style={[{fontSize:14}, props.textStyle]}>{props.title}</Text>}\r\n        </Pressable>\r\n}\r\n\r\nexport default (props:CustomButtonProps)=>{\r\n    const theme = useColorScheme()\r\n    const _props = {\r\n        color:Colors[theme].hoverColor,\r\n        borderColor:theme=='light'?Colors[theme].buttonBorderColor:'#7d8590',\r\n        ...props,\r\n        style:[\r\n            styles.style,\r\n            {\r\n                backgroundColor:Colors[theme].buttonBackgroundColor,\r\n                borderColor:Colors[theme].buttonBorderColor\r\n            },\r\n            props.style,\r\n        ] as StyleProp<ViewStyle>,\r\n        textStyle:[\r\n            styles.text, \r\n            {color:Colors[theme].text},\r\n            props.textStyle\r\n        ]\r\n    }\r\n    return <DefaultButton {..._props}/>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    style:{\r\n        borderRadius:6, \r\n        borderWidth:1, \r\n    },\r\n    text:{\r\n        textAlign:'center', \r\n        fontWeight:'600'\r\n    }\r\n});\r\n","import * as React from 'react';\r\nimport { View, Text } from './Themed';\r\nimport { StyleSheet, StyleProp, ViewStyle, TextStyle } from 'react-native';\r\nimport Colors from '../constants/Colors';\r\n\r\nexport type SectionParamList = {\r\n    title?: string,\r\n    titleStyle?:StyleProp<TextStyle>\r\n    outerContainerStyle?:StyleProp<TextStyle>\r\n    containerStyle?:StyleProp<ViewStyle>\r\n    bodyStyle?:StyleProp<ViewStyle>\r\n    subtitle?: string\r\n    withSeparator?: boolean\r\n    autoScale?:boolean\r\n    children?: React.ReactNode\r\n}\r\n\r\nexport default function CommonSection(props:SectionParamList){\r\n  return (\r\n    <View style={[styles.outerContainer, props.autoScale?{}:styles.outerContainerFill, props.outerContainerStyle]}>\r\n        <View style={[styles.container, props.containerStyle]}>\r\n            {props.withSeparator?<View style={styles.separator} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />:undefined}\r\n            {props.title?<View style={styles.titleView}>\r\n              <Text style={[styles.title, props.titleStyle]}>{props.title}</Text>\r\n              <Text style={styles.subtitle}>{props.subtitle}</Text>\r\n            </View>:undefined}\r\n            <View style={[styles.bodyView, props.bodyStyle]}>\r\n            {props.children}\r\n            </View>\r\n          </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  outerContainer:{\r\n    alignItems:'stretch',\r\n    backgroundColor:'transparent'\r\n  },\r\n  outerContainerFill:{\r\n    width:'100%',\r\n    maxWidth:1080,\r\n  },\r\n  container: {\r\n      marginHorizontal:20,\r\n      marginVertical: 10,\r\n      backgroundColor:'transparent',\r\n    },\r\n    titleView:{\r\n      width: '100%',\r\n      flexDirection:'row',\r\n      backgroundColor:'transparent',\r\n      marginBottom:5,\r\n    },\r\n    title: {\r\n      flex:1,\r\n      fontSize: 16,\r\n    },\r\n    subtitle: {\r\n      flex:1,\r\n      fontSize: 12,\r\n      textAlign: 'right',\r\n      marginTop:4\r\n    },\r\n    separator: {\r\n      marginBottom: 0,\r\n      height: 1,\r\n      width: '100%',\r\n    },\r\n    bodyView:{\r\n      width: '100%',\r\n      padding: 20,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      borderWidth:1,\r\n      borderColor:Colors.borderColor,\r\n      borderRadius:6\r\n    }\r\n  });\r\n  ","import React, { Suspense } from 'react'\r\nimport CommonSection from \"./CommonSection\"\r\nimport { View, Text } from \"./Themed\"\r\nimport { EditorContent } from \"../types\"\r\nimport useColorScheme from \"../hooks/useColorScheme\";\r\nimport Colors from \"../constants/Colors\";\r\n\r\nconst RenderHTML = React.lazy(()=> import('react-native-render-html'))\r\n\r\nexport const regexForStripHTML = /<\\/?[^>]*>/gi;\r\n\r\nexport default React.memo(({content}:{content:EditorContent})=>{\r\n    const theme = useColorScheme()\r\n    return <View>\r\n        <Text style={{fontSize:18, fontWeight:'600', minWidth:140}}>{content.title}</Text>\r\n        <CommonSection containerStyle={{width:'100%', margin:0}} bodyStyle={{borderWidth:0, borderRadius:0, borderTopWidth:1, padding:0, alignItems:\"flex-start\"}}>\r\n            <Suspense fallback={<Text>{content.description.replaceAll(regexForStripHTML, '')}</Text>}>\r\n                <RenderHTML contentWidth={320} source={{'html':content.description}} baseStyle={{color:Colors[theme].text}}/>\r\n            </Suspense>\r\n        </CommonSection>\r\n    </View>\r\n})","import React from 'react'\r\nimport CommonSection from \"./CommonSection\";\r\nimport useResizeContext from '../hooks/useResizeContext';\r\n\r\nexport default (props:{children?: React.ReactNode})=>{\r\n    const windowType = useResizeContext();\r\n    return <CommonSection\r\n        autoScale\r\n        outerContainerStyle={{flex:1, alignSelf:'center', backgroundColor:'#8888', flexShrink:1, width:'100%'}}\r\n        containerStyle={{flex:1, margin:0, justifyContent:'center', alignItems:'center'}}\r\n        bodyStyle={windowType=='landscape'?{width:'90%', height:'90%', padding:'5%'}:{width:'100%', height:'100%', maxWidth:1080}}\r\n    >\r\n        {props.children}\r\n    </CommonSection>\r\n}\r\n\r\nexport const BottomSheet = (props:{children?: React.ReactNode})=><CommonSection\r\n    autoScale\r\n    outerContainerStyle={{flex:1, alignSelf:'center', backgroundColor:'#8888', width:'100%'}}\r\n    containerStyle={{flex:1, margin:0, justifyContent:'flex-end'}}\r\n>\r\n    {props.children}\r\n</CommonSection>","/**\r\n * Learn more about Light and Dark modes:\r\n * https://docs.expo.io/guides/color-schemes/\r\n */\r\n\r\nimport * as React from 'react';\r\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\r\n\r\nimport Colors from '../constants/Colors'\r\nimport useColorScheme from '../hooks/useColorScheme';\r\n\r\nexport function useThemeColor(\r\n  props: { light?: string; dark?: string },\r\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\r\n) {\r\n  const theme = useColorScheme();\r\n  const colorFromProps = props[theme];\r\n\r\n  if (colorFromProps) {\r\n    return colorFromProps;\r\n  } else {\r\n    return Colors[theme][colorName];\r\n  }\r\n}\r\n\r\ntype ThemeProps = {\r\n  lightColor?: string;\r\n  darkColor?: string;\r\n};\r\n\r\nexport type TextProps = ThemeProps & DefaultText['props'];\r\nexport type ViewProps = ThemeProps & DefaultView['props'];\r\n\r\nexport function Text(props: TextProps) {\r\n  const { style, lightColor, darkColor, ...otherProps } = props;\r\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\r\n\r\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\r\n}\r\n\r\nexport function View(props: ViewProps) {\r\n  const { style, lightColor, darkColor, ...otherProps } = props;\r\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\r\n\r\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\r\n}\r\n","const tintColorLight = '#2f95dc';\r\nconst tintColorDark = '#fff';\r\n\r\nexport default {\r\n  light: {\r\n    text: '#000',\r\n    background: '#fff',\r\n    tint: tintColorLight,\r\n    tabIconDefault: '#ccc',\r\n    tabIconSelected: tintColorLight,\r\n    hoverColor:'rgb(242,242,242)',\r\n    buttonBackgroundColor: '#f6f8fa', //'rgba(9,30,66,0.08)',//rgb(242,242,242)\\\r\n    header:'#f6f8fa',\r\n    headerBottomColor:'rgb(216, 216, 216)',\r\n    buttonBorderColor:'rgba(27,31,36,0.15)',\r\n    iconColor: 'black'\r\n  },\r\n  dark: {\r\n    text: '#fff',\r\n    background: '#000',\r\n    tint: tintColorDark,\r\n    tabIconDefault: '#ccc',\r\n    tabIconSelected: tintColorDark,\r\n    hoverColor: '#010409',//'rgb(1,4,9)',\r\n    buttonBackgroundColor: '#010409',//'#282624',\r\n    header:'#010409',\r\n    headerBottomColor:'rgb(40, 40, 40)',\r\n    buttonBorderColor:'rgba(229,225,220,0.15)',\r\n    iconColor: 'white'\r\n  },\r\n  borderColor:'#d0d7de',\r\n  \r\n  focus:'#0065A4',\r\n};\r\n","import { useEffect } from \"react\"\r\nimport { InfiniteData, Query, QueryKey, useInfiniteQuery, useMutation, useQueryClient } from \"react-query\"\r\nimport { getMessengerContentList, postMessage, patchMessengerContent, getNewMessengerContentList } from \"../../services\"\r\nimport { EditMessage, MessengerContent } from \"../../types\"\r\nimport useWebsocketContext from \"../useWebsocketContext\"\r\nimport useUploadContext from \"../useUploadContext\"\r\n\r\nexport type MessengerContentPage = {\r\n  next?:MessengerContentPage\r\n  current:MessengerContent[]\r\n}\r\n\r\nconst updateContnetPage = (pages:MessengerContentPage[], updateMessages:MessengerContent[])=>{\r\n  let update_i = 0\r\n  pages.forEach(page=>{\r\n    if (update_i == updateMessages.length)\r\n      return\r\n    page.current.forEach(v=>{\r\n      if (update_i == updateMessages.length)\r\n        return\r\n      if (v.id==updateMessages[update_i].id){\r\n        v.timer = updateMessages[update_i].timer\r\n        v.is_archive = updateMessages[update_i].is_archive\r\n        update_i += 1\r\n      }\r\n    })\r\n    page.current = page.current.filter(v=>!v.is_archive)\r\n  })\r\n}\r\n\r\nexport default function useMessengerContentList(channel_id:number){  \r\n  const queryClient = useQueryClient()\r\n  const refetch = (query:Query<MessengerContentPage, unknown, InfiniteData<MessengerContentPage>, QueryKey>)=>{\r\n    const updated_gte = new Date(query.state.dataUpdatedAt).toISOString()\r\n    const newData = {...query.state.data}\r\n    getNewMessengerContentList(channel_id, updated_gte).then(contents=>{\r\n      if(newData.pages){\r\n        const lastMessageId = newData.pages[0].current[0].id || 0\r\n        const nextMessages = contents.filter(v=>v.id>lastMessageId && v.is_archive==false)\r\n        const updateMessages = contents.filter(v=>v.id<=lastMessageId)\r\n        const timerMessageRefetch = nextMessages.findIndex(v=>v.timer) >= 0 || updateMessages.length > 0\r\n        newData.pages[0].current = [...nextMessages, ...newData.pages[0].current]\r\n        updateContnetPage(newData.pages, updateMessages)\r\n        timerMessageRefetch && queryClient.invalidateQueries([\"TimerMessageContentList\", channel_id])\r\n      }\r\n    })\r\n    return false\r\n  }\r\n  const { data, fetchNextPage } = useInfiniteQuery<MessengerContentPage>(\r\n    [\"MessengerContentList\", channel_id], \r\n    async({pageParam})=>getMessengerContentList(channel_id, pageParam).then(current=>({current})), \r\n    {\r\n      select:data=>{\r\n        if(data.pages.length > 1)\r\n          data.pages[data.pages.length - 2].next = data.pages[data.pages.length - 1]\r\n        return data;\r\n      },\r\n      getNextPageParam:(lastPage)=>lastPage?.current.length?lastPage.current[lastPage.current.length - 1].id:undefined,\r\n      refetchOnReconnect:false,\r\n      refetchOnWindowFocus:refetch\r\n    }\r\n  )\r\n  const { lastJsonMessage } = useWebsocketContext()\r\n  useEffect(()=>{\r\n    if(lastJsonMessage !=null && lastJsonMessage['data']['channel'] == channel_id){\r\n      if(lastJsonMessage['type']=='next_message'){\r\n        queryClient.setQueryData<InfiniteData<MessengerContentPage>>([\"MessengerContentList\", channel_id], (_data)=>{\r\n          if(_data?.pages[0].current && _data?.pages[0].current[0].id != lastJsonMessage['data'].id)\r\n            _data.pages[0].current = [lastJsonMessage['data'], ..._data?.pages[0].current]\r\n          return {...(_data || {pages:[], pageParams:[]})}\r\n        })\r\n      }\r\n      if(lastJsonMessage['type']=='update_message'){\r\n        queryClient.setQueryData<InfiniteData<MessengerContentPage>>([\"MessengerContentList\", channel_id], (_data)=>{\r\n          _data?.pages && updateContnetPage(_data.pages, [lastJsonMessage['data']])\r\n          return {...(_data || {pages:[], pageParams:[]})}\r\n        })\r\n      }\r\n    }\r\n  }, [lastJsonMessage])\r\n  return { data, fetchNextPage }\r\n}\r\n\r\nexport function useMessengerContentMutation(channelId?:number){\r\n  // const queryClient = useQueryClient()\r\n  const {dispatch:uploadDispatch} = useUploadContext()\r\n  const create = useMutation((message:EditMessage)=>postMessage(message, uploadDispatch), {\r\n    onSuccess: () => {\r\n      // queryClient.setQueryData(['MessengerContentList'], (data:any) => ({\r\n      //   pages: data.pages.slice(0, 1),\r\n      //   pageParams: data.pageParams.slice(0, 1),\r\n      // }))\r\n      // queryClient.invalidateQueries(\"MessengerContentList\")\r\n    }\r\n  });\r\n  const _patch = useMutation(patchMessengerContent);\r\n  return { create:create.mutate, patch:_patch.mutate }\r\n}","import { DependencyList, useEffect } from \"react\";\r\nimport { EventArg, useNavigation } from \"@react-navigation/core\";\r\n\r\n\r\nexport default (callback:()=>void, deps?:DependencyList)=>{\r\n    const navigation = useNavigation()\r\n    useEffect(()=>{\r\n        const event = (e:EventArg<any, true, any>)=> {\r\n            e.preventDefault();\r\n            callback()\r\n        }\r\n        navigation.addListener('beforeRemove', event)\r\n        return () => {\r\n            navigation.removeListener('beforeRemove', event)\r\n        }\r\n  }, deps)\r\n}","import React, { useState, createContext, useContext, useEffect } from \"react\";\r\nimport { Modal } from \"react-native\";\r\nimport useResizeContext from \"./useResizeContext\";\r\n\r\ntype ModalProps = any\r\n\r\ntype ModalState = {\r\n  Component:React.ComponentType<ModalProps>,\r\n  props:any\r\n  visible:boolean\r\n}\r\ntype SetModal = (Component:ModalState[\"Component\"]|null, props:ModalProps|null)=>void\r\n\r\nconst ModalsContext = createContext<{setModal: SetModal}>({\r\n    setModal: () => {}\r\n});\r\n\r\nexport const ModalsProvider = ({children, modals:allModals}:{children:React.ReactNode, modals:React.ComponentType<ModalProps>[]}) => {\r\n    const [modals, setModals] = useState<ModalState[]>([]);\r\n    const windowType = useResizeContext();\r\n    const [animationType, setAnimationType] = useState('none')\r\n    const setModal:SetModal = (Component, props) => {\r\n        const newModals = modals.map(m=>{\r\n            if(Component==null){\r\n                return {\r\n                    ...m,\r\n                    visible:false\r\n                }\r\n            }\r\n            else if(m.Component == Component){\r\n                return {\r\n                    Component, \r\n                    props:props!==null?props:m.props,\r\n                    visible:props!==null\r\n                }\r\n            }\r\n            return m        \r\n        })\r\n        setModals(newModals);\r\n    }\r\n    useEffect(()=>{\r\n        if (modals.filter(v=>v.visible).length == 0)\r\n            setAnimationType(windowType == 'landscape'?'fade':'slide')\r\n    }, [windowType])\r\n    useEffect(()=>{\r\n        setModals(allModals.map((Component)=>({Component, props:null, visible:false})))\r\n    }, [allModals])\r\n    return <ModalsContext.Provider value={{setModal}}>\r\n        {children}\r\n        {modals.map((modal, index)=>{\r\n            const { Component, props, visible } = modal;\r\n            return <Modal key={index} animationType={animationType as any} visible={visible} transparent>\r\n                <Component {...props}/>\r\n            </Modal>\r\n        })}\r\n    </ModalsContext.Provider>\r\n}\r\n\r\nexport default ()=>{\r\n    const modalsContext = useContext(ModalsContext)\r\n    return modalsContext\r\n}\r\n\r\n","import React, { useState, useEffect, createContext, useContext, useMemo } from 'react';\r\nimport { Dimensions, ScaledSize, useWindowDimensions } from 'react-native';\r\n//@ts-ignore\r\nimport useMobileDetect from 'use-mobile-detect-hook';\r\n\r\ntype WindowType = 'portrait' | 'landscape'\r\n\r\nconst getWindowType = (window:{width:number, height:number})=> window.height >= window.width?'portrait':'landscape' as WindowType;\r\n\r\nconst ResizeContextContext = createContext<WindowType>(getWindowType(Dimensions.get('window')));\r\n\r\nexport const ResizeContextProvider = ({children}:{children:React.ReactNode})=>{\r\n  const detectMobile = useMobileDetect();\r\n  const {width, height} = useWindowDimensions()\r\n  const [windowType, setWindowType] = useState(getWindowType({width, height}))\r\n  useEffect(()=>{\r\n    setWindowType(getWindowType({width, height}))\r\n  }, [width, height])\r\n  return <ResizeContextContext.Provider value={detectMobile.isMobile()?'portrait':windowType}>\r\n    {children}\r\n  </ResizeContextContext.Provider>\r\n}\r\n\r\nexport default function useResizeContext() {\r\n  const windowType = useContext(ResizeContextContext)\r\n  return windowType\r\n}","import React, { createContext, useContext, Dispatch, useReducer } from 'react';\r\n\r\ntype UploadState = Record<number, {\r\n  filename: string,\r\n  progress?: number,\r\n}[]>\r\n\r\ntype UploadAction = {\r\n  channel:number,\r\n  filename:string,\r\n  progress?:number\r\n}\r\n\r\ntype UploadContextType = {\r\n  upload:UploadState,\r\n  dispatch:Dispatch<UploadAction>\r\n}\r\n\r\nconst UploadContext = createContext<UploadContextType>({upload:{} as UploadState, dispatch:()=>{}});\r\n\r\nconst uploadReducer =(initialState:UploadState, action:UploadAction)=>{\r\n  const files = [...(initialState[action.channel] || [])]\r\n  const index = files.findIndex(f=>f.filename==action.filename)\r\n  if (index >= 0){\r\n    files[index] = {filename:action.filename, progress:action.progress} \r\n  }\r\n  else{\r\n    files.push({filename:action.filename, progress:action.progress})\r\n  }\r\n  return {\r\n    ...initialState,\r\n    [action.channel] : files.filter(f=>(f.progress || 0)<1)\r\n  }\r\n}\r\n\r\nexport const UploadContextProvider = ({children}:{children:React.ReactNode})=>{\r\n  const [upload, dispatch] = useReducer(uploadReducer, {})\r\n  return <UploadContext.Provider value={{upload, dispatch}}>\r\n    {children}\r\n  </UploadContext.Provider>\r\n}\r\n\r\nexport default function useUploadContext() {\r\n  const upload = useContext(UploadContext)\r\n  return upload\r\n}","import React, { Context, createContext,  useContext, useEffect, useState } from \"react\"\r\nimport useWebSocket from \"react-use-websocket\"\r\nimport { SendJsonMessage } from \"react-use-websocket/dist/lib/types\"\r\nimport {websockerURL } from \"../constants/Envs\"\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { AppState, AppStateStatus } from \"react-native\";\r\n\r\ntype WebsocketContextType = {lastJsonMessage:any, sendJsonMessage:SendJsonMessage }\r\nconst defaultContext = {lastJsonMessage:undefined, sendJsonMessage:()=>{}}\r\nconst WebSocketContext = createContext<WebsocketContextType>(defaultContext);\r\n\r\nexport const WebSocketInternalProvider = ({children, path, Context, useBackground}:{children:React.ReactNode, path:string, Context:Context<WebsocketContextType>, useBackground?:boolean})=>{\r\n  const [token, setToken] = useState<string|null>(null)\r\n  const [isActive, setIsActive] = useState<boolean>(useBackground || AppState.currentState == 'active')\r\n  const { lastJsonMessage, sendJsonMessage } = useWebSocket(`${websockerURL}/${path}`,{\r\n    shouldReconnect: (closeEvent) => true,\r\n    protocols: token?['Authorization',  token]:undefined,\r\n    onOpen: (e)=>{console.log(`success websocket connection(${path})`)},\r\n    onClose: (e)=> {console.log(`closed websocket connection(${path})`)},\r\n  }, isActive && token!=null)\r\n  useEffect(()=>{\r\n    AsyncStorage.getItem('Authorization').then(setToken)\r\n    const onChange = (nextState:AppStateStatus)=>setIsActive(useBackground || nextState == 'active')\r\n    const listener = AppState.addEventListener(\"change\", onChange)\r\n    return ()=> listener.remove()\r\n  }, [])\r\n  return <Context.Provider value={token!=null?{lastJsonMessage, sendJsonMessage}:defaultContext}>\r\n      {children}\r\n    </Context.Provider>\r\n}\r\n\r\nexport const WebSocketProvider = ({disable, children}:{disable?:boolean, children:React.ReactNode})=>{\r\n  return disable?<>{children}</>:<WebSocketInternalProvider path={'messenger/ws/'} Context={WebSocketContext}>\r\n    {children}\r\n  </WebSocketInternalProvider>\r\n}\r\n\r\nexport default ()=>{\r\n  const webSocketContext = useContext(WebSocketContext)\r\n  return webSocketContext\r\n}\r\n\r\n","import React from 'react';\r\nimport Clipboard from '@react-native-clipboard/clipboard/dist';\r\nimport CommonButton from '../components/CommonButton';\r\nimport useModalsContext from '../hooks/useModalsContext';\r\nimport { Text, View } from '../components/Themed';\r\nimport useLangContext from '../hooks/useLangContext';\r\nimport { BottomSheet } from '../components/ModalSection';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\nimport Colors from '../constants/Colors';\r\nimport { Ionicons } from '../lib/@expo/vector-icons';\r\nimport useColorScheme from '../hooks/useColorScheme';\r\nimport { useMessengerContentMutation } from '../hooks/lists/useMessengerContentList';\r\nimport useModalEffect from '../hooks/useModalEffect';\r\nimport { EditorContent, MessengerContent } from '../types';\r\nimport { regexForStripHTML } from '../components/EditorPreview';\r\n\r\n\r\n\r\nexport default function MessageModal({content, isOwner, sendToScreen}:{content:MessengerContent, isOwner:boolean, sendToScreen?:(e:{value:string, editorValue:string})=>void}) {\r\n  const message = content.message_set[0]\r\n  const editorContents = (content.attatchment_set.filter(v=>v.type=='editor') as EditorContent[])\r\n  const editor  = editorContents.length>0?editorContents[0]:undefined\r\n  const fullContent = editor?editor.title.concat('\\r\\n', editor.description.replaceAll(regexForStripHTML, '')):message.content\r\n  const { lang } = useLangContext()\r\n  const { setModal } = useModalsContext()\r\n  const theme = useColorScheme()\r\n  const contentMutation = useMessengerContentMutation()\r\n  const back = ()=>{\r\n    setModal(MessageModal, null)\r\n  }\r\n  useModalEffect(back, [])\r\n  return <BottomSheet>\r\n    <View style={{flexDirection:'row', width:'100%'}}>\r\n      <View style={{flex:1, flexDirection:'row'}}>\r\n        <TouchableOpacity onPress={back}>\r\n          <Ionicons size={20} name=\"arrow-back\" color={Colors[theme].text}/>\r\n        </TouchableOpacity>\r\n      </View>\r\n      <View style={{flex:1}}>\r\n        <Text style={{fontSize:20, textAlign:'center'}}>{lang('Message')}</Text>\r\n      </View>\r\n      <View style={{flex:1}}/>\r\n    </View>\r\n    <View style={{marginBottom: 20, height: 1, width: '100%'}} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />\r\n      <CommonButton style={{height:40, width:'100%', maxWidth:320, justifyContent:'center'}} title={lang('copy')} onPress={()=>{Clipboard.setString(fullContent);back()}}/>\r\n      {editor && sendToScreen && <CommonButton style={{height:40, width:'100%', maxWidth:320, justifyContent:'center'}} title={lang('move to editor')} onPress={()=>{sendToScreen({value:editor.title, editorValue:editor.description});back()}}/>}\r\n      {isOwner && content.timer && <CommonButton style={{height:40, width:'100%', maxWidth:320, justifyContent:'center'}} textStyle={{color:'red'}} title={lang('delete timer')} onPress={()=>{contentMutation.patch({id:content.id, timer:null});back()}}/>}\r\n      {isOwner && <CommonButton style={{height:40, width:'100%', maxWidth:320, justifyContent:'center'}} textStyle={{color:'red'}} title={lang('delete')} onPress={()=>{contentMutation.patch({id:content.id, is_archive:true});back()}}/>}\r\n  </BottomSheet>\r\n}\r\n","import React, { MutableRefObject } from 'react'\r\nimport { Image, Linking } from \"react-native\"\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport CommonSection from \"./CommonSection\"\r\nimport { View, Text } from \"./Themed\"\r\nimport { Link } from \"../types\"\r\n\r\n\r\n\r\nexport default ({link, isMobile, touchableRef}:{link:Link, isMobile:boolean, touchableRef:MutableRefObject<()=>boolean>})=>{\r\n    return <CommonSection containerStyle={{marginHorizontal:0}} bodyStyle={{padding:0}}>\r\n    <TouchableOpacity \r\n        onPress={()=>touchableRef.current() && Linking.openURL(link.url)}\r\n        onLongPress={()=>{}}\r\n        style={{width:'100%', flexDirection:'row'}}\r\n    >\r\n        {link.image_url?<Image source={{uri:link.image_url}} resizeMode=\"cover\" style={{ width:'100%', maxWidth:isMobile?120:150, maxHeight:isMobile?120:150, borderWidth:1}}/>:undefined}\r\n        <View style={{flex:1, marginHorizontal:20}}>\r\n            <Text style={{fontSize:18}}>{link.title}</Text>\r\n            <Text style={{fontSize:14}}>{link.description}</Text>\r\n            <Text style={{fontSize:12}}>{link.url}</Text>\r\n        </View>\r\n    </TouchableOpacity>\r\n    </CommonSection>\r\n}","import React, { MutableRefObject } from 'react'\r\nimport { Image, Linking } from \"react-native\"\r\nimport {TouchableOpacity} from \"react-native-gesture-handler\"\r\nimport CommonSection from \"./CommonSection\"\r\nimport { FontAwesome } from '../lib/@expo/vector-icons'; \r\nimport { View, Text } from \"./Themed\"\r\nimport { File } from \"../types\"\r\nimport useColorScheme from '../hooks/useColorScheme';\r\nimport Colors from '../constants/Colors';\r\n\r\nfunction humanFileSize(size:number) {\r\n    var i = size == 0 ? 0 : Math.floor(Math.log(size) / Math.log(1024));\r\n    return (size / Math.pow(1024, i)).toFixed(2) + ' ' + ['B', 'kB', 'MB', 'GB', 'TB'][i];\r\n  }\r\n  \r\n\r\nexport default ({file, isMobile, showBorder, touchableRef}:{file:File, isMobile:boolean, showBorder:ConstrainBoolean, touchableRef:MutableRefObject<()=>boolean>})=>{\r\n    const theme = useColorScheme()\r\n    return <CommonSection containerStyle={{marginHorizontal:0}} bodyStyle={showBorder?{padding:10}:{borderWidth:0, padding:0}}>\r\n    <TouchableOpacity \r\n        onPress={()=>touchableRef.current() && Linking.openURL(file.file)} \r\n        onLongPress={()=>{}}\r\n        style={{flexDirection:'row', alignItems:'flex-start', width:'100%'}} \r\n    >\r\n        {   file.thumbnail?\r\n            <Image source={{uri:file.thumbnail}} resizeMode=\"cover\" style={{width:isMobile?120:150, height:isMobile?120:150, borderWidth:1}}/>:\r\n            <FontAwesome name=\"file-o\" size={20} color={Colors[theme].iconColor} />}\r\n        <View style={{flex:1, marginHorizontal:10}}>\r\n            <Text style={{fontSize:18}}>{file.filename}</Text>\r\n            <Text style={{fontSize:14}}>{humanFileSize(file.filesize)}</Text>\r\n        </View>\r\n    </TouchableOpacity>\r\n    </CommonSection>\r\n}","import React, {useCallback, useMemo, useRef} from \"react\"\r\nimport { View, TouchableOpacity } from 'react-native';\r\nimport { FlatList } from \"react-native-gesture-handler\";\r\nimport { Auth } from \"../../../hooks/useAuthContext\";\r\nimport useMessengerContentList, { MessengerContentPage } from \"../../../hooks/lists/useMessengerContentList\"\r\nimport useIsMobile from \"../../../hooks/useIsMobile\"\r\nimport useModalsContext from \"../../../hooks/useModalsContext\"\r\nimport { Text } from '../../../components/Themed' \r\nimport Avatar from '../../../components/Avatar';\r\nimport LinkPreview from '../../../components/LinkPreview';\r\nimport FilePreview from '../../../components/FilePreview';\r\nimport MessageModal from '../../../modals/MessageModal';\r\nimport CommonSection from \"../../../components/CommonSection\";\r\nimport Hyperlink from \"react-native-hyperlink\";\r\nimport { timerToString } from \"./TimerTags\";\r\nimport useViewerContentList from \"../../../hooks/lists/useMessengerViewerList\";\r\nimport EditorPreview from \"../../../components/EditorPreview\";\r\nimport { MessengerContent } from \"../../../types\";\r\n\r\nconst MessengerContentPageItem = React.memo((props:MessengerContentPage & {ownerId?:number, reverse?:boolean, getOnPress?:(content:MessengerContent)=>()=>void})=>{\r\n    const lastTouchRef = useRef(Date.now()) \r\n    const touchableRef = useRef(()=>{\r\n      return Date.now() - lastTouchRef.current > 500\r\n    })\r\n    const isMobile = useIsMobile()\r\n    let nextPage = props.next;\r\n      while(nextPage?.next && nextPage.current.length==0){\r\n        nextPage = nextPage.next\r\n      }\r\n      const nextContent = nextPage?.current[0]\r\n      return <View \r\n        style={{flexDirection: props.reverse?'column-reverse':'column'}}\r\n        onTouchMove={()=>{lastTouchRef.current=Date.now()}}\r\n      >  \r\n        {props.current.map((content, index2)=>{\r\n          const next = index2 + 1 < props.current.length?props.current[index2+1]:nextContent\r\n          const created:string = content.created.slice(0, 16)\r\n          const date = created.slice(0, 10)\r\n          const isSystem = content.user == null\r\n          const isFirst = next==undefined || (content.user != next.user || created != next.created.slice(0, 16))\r\n          const isSelf = props.ownerId == content.user\r\n          const dayChanged = next==undefined || date != next.created.slice(0, 10)\r\n          const message = content.message_set[0]\r\n          if (isSystem)\r\n            return <View key={content.id} style={{flexDirection:'row', justifyContent:'center', width:'100%', marginVertical:5}}>\r\n              <Text>{message.content}</Text>\r\n            </View>\r\n          return <View key={content.id}>\r\n            {dayChanged?<View style={{flexDirection:'row', justifyContent:'center', width:'100%'}}><Text>{date}</Text></View>:undefined}\r\n            <View key={content.id} style={{flexDirection:'row', justifyContent:isSelf?'space-between':'flex-start', width:'100%'}}>\r\n              {isFirst && !isSelf? <View style={{marginTop:3, marginLeft:12}}><Avatar name={content.name} userId={content.user} size={36}/></View>:<View style={{width:48}}/>}\r\n              <CommonSection autoScale outerContainerStyle={{maxWidth:'90%'}} title={isFirst?content.name:undefined} titleStyle={{flex:undefined}} bodyStyle={{padding:10}} subtitle={`${created.slice(11)}`}>\r\n                <TouchableOpacity onLongPress={props.getOnPress?.(content)}>\r\n                  {content.timer && <View style={{flexDirection:'row', alignItems:'stretch'}}>\r\n                    <Text style={{fontSize:12}}>⌚</Text>\r\n                    <Text style={{fontSize:12}} selectable={!isMobile}>{timerToString(content.timer)}</Text>\r\n                  </View>}\r\n                  {/* @ts-ignore */}\r\n                  <Hyperlink linkDefault={ true } style={{wordBreak:\"break-word\"}} linkStyle={{color: '#12b886'}} onPress={touchableRef.current()?undefined:()=>{}}>\r\n                    <Text selectable={!isMobile} style={{textAlign:isSelf?'right':'left'}}>{message.content}</Text>\r\n                  </Hyperlink> \r\n                  {\r\n                    content.attatchment_set.map((attatchment, aIndex)=>{\r\n                      if (attatchment.type=='editor')\r\n                        return <EditorPreview key={aIndex} content={attatchment}/>\r\n                      if (attatchment.type=='file')\r\n                        return <FilePreview key={aIndex} file={attatchment} isMobile={isMobile} showBorder={false} touchableRef={touchableRef}/>\r\n                      if (attatchment.type=='link')\r\n                        return <LinkPreview key={aIndex} link={attatchment} isMobile={isMobile} touchableRef={touchableRef}/>\r\n                    })\r\n                  }\r\n                </TouchableOpacity>\r\n              </CommonSection>\r\n            </View>\r\n          </View>\r\n        })}\r\n      </View>\r\n  \r\n  })\r\n\r\nexport default (props:{channel_id:number, auth?:Auth, reverse?:boolean, sendToScreen?:(e:any)=>void})=>{\r\n    const height = useRef(0)\r\n    const {data, fetchNextPage } = props.auth?useMessengerContentList(props.channel_id):useViewerContentList(props.channel_id)\r\n    const ownerId = useMemo(()=>props.auth?.user?.id, [props.auth])\r\n    const { setModal } = useModalsContext()\r\n    const getOnPress = (content: MessengerContent)=>()=>setModal(MessageModal, {content, isOwner:ownerId == content.user, sendToScreen:props.sendToScreen})\r\n    const renderItem = useCallback(({item, index}:{item:MessengerContentPage, index:number})=><MessengerContentPageItem \r\n      {...item} \r\n      ownerId={ownerId} \r\n      reverse={props.reverse}\r\n      getOnPress={getOnPress}  \r\n    />, [ownerId])\r\n    return <FlatList\r\n        style={{flexDirection: props.reverse?'column-reverse':'column'}}\r\n        contentContainerStyle={{padding:10, flexGrow:1, flexDirection: props.reverse?'column-reverse':'column'}}\r\n        data={data?.pages}\r\n        renderItem={renderItem}\r\n        onScroll={(e)=>{\r\n          if (e.nativeEvent.contentSize.height - height.current + (props.reverse?1:-1)*e.nativeEvent.contentOffset.y < 1)\r\n            fetchNextPage()\r\n        }}\r\n        onLayout={(p)=>{height.current = p.nativeEvent.layout.height}}\r\n      />\r\n}","import { useInfiniteQuery } from \"react-query\"\r\nimport { getMessengerContentList } from \"../../services\"\r\nimport { MessengerContentPage } from \"./useMessengerContentList\"\r\n\r\n\r\nexport default function useViewerContentList(channel_id:number){  \r\n  const { data, fetchNextPage } = useInfiniteQuery<MessengerContentPage>(\r\n    [\"ViewerContentList\", channel_id], \r\n    async({pageParam})=>getMessengerContentList(channel_id, pageParam, true).then(current=>({current})), \r\n    {\r\n      select:data=>{\r\n        if(data.pages.length > 1)\r\n          data.pages[data.pages.length - 2].next = data.pages[data.pages.length - 1]\r\n        return data;\r\n      },\r\n      getNextPageParam:(lastPage)=>lastPage?.current.length?lastPage.current[lastPage.current.length - 1].id:undefined,\r\n      refetchOnReconnect:false,\r\n      refetchOnWindowFocus:false,\r\n    }\r\n  )\r\n  return { data, fetchNextPage }\r\n}\r\n","import React, {useState, useEffect} from \"react\"\r\nimport dayjs from \"dayjs\";\r\nimport {View, TouchableOpacity} from 'react-native'\r\nimport { Text } from \"../../../components/Themed\";\r\nimport useTimerMessageContentList from \"../../../hooks/lists/useTimerMessageContent\";\r\nimport { MessengerContent } from \"../../../types\";\r\nimport Avatar from \"../../../components/Avatar\";\r\nimport Hyperlink from \"react-native-hyperlink\";\r\n\r\nexport function timerFormat(datetime:string){\r\n    return _timerFormat(dayjs(datetime), dayjs())\r\n}\r\n\r\nfunction _timerFormat(m:dayjs.Dayjs, now:dayjs.Dayjs){\r\n    if (m.year() != now.year()){\r\n        return m.format('YYYY.MM')\r\n    }\r\n    if(m.month()!= now.month() || m.date() != now.date()){\r\n        return m.format('MM.DD')\r\n    }\r\n    return m.format('HH:mm')\r\n  }\r\n\r\nexport function timerToString(timer:string){\r\n    return dayjs(timer).format('YYYY.MM.DD HH:mm')\r\n}\r\n\r\nconst TimerTag = (props:{data:MessengerContent, now:dayjs.Dayjs, isExpand:boolean, setExpand:(id?:number)=>void})=>{\r\n    const start = dayjs(props.data.created)\r\n    const end = dayjs(props.data.timer)\r\n    const ratio = (start.diff(props.now)/start.diff(end))\r\n    const message = props.data.message_set[0]\r\n    return <TouchableOpacity onPress={()=>props.setExpand(props.isExpand?undefined:props.data.id)}>\r\n        <View style={{backgroundColor:'lightgray', borderRadius:20, overflow:'hidden', margin:5}}>\r\n            <View style={{backgroundColor:'darkgray', position:'absolute', width:`${ratio*100}%`, height:'100%'}}/>\r\n            {props.isExpand?\r\n            <View style={{paddingVertical:5, paddingHorizontal:5, maxWidth:270}}>\r\n                <View style={{flexDirection:'row'}}>\r\n                    <Avatar name={props.data.name} userId={props.data.user} size={20}/>\r\n                    <View style={{paddingHorizontal:5}}><Text>{props.data.name}</Text></View>\r\n                </View>\r\n                {props.data.timer &&\r\n                <View style={{flexDirection:'row', alignItems:'stretch'}}>\r\n                    <Text>⌚</Text>\r\n                    <Text selectable>{timerToString(props.data.timer)}</Text>\r\n                </View>}\r\n                {/* @ts-ignore */}\r\n                <Hyperlink linkDefault={ true } style={{wordBreak:\"break-word\"}} linkStyle={{color: '#12b886'}}>\r\n                    <Text selectable>{message.preview_content || message.content}</Text>\r\n                </Hyperlink>\r\n            </View>:    \r\n            <View style={{paddingVertical:5, paddingHorizontal:5, flexDirection:'row'}}>\r\n                <Avatar name={props.data.name} userId={props.data.user} size={20}/>\r\n                <View style={{paddingHorizontal:5}}><Text>{_timerFormat(end, props.now)}</Text></View>\r\n            </View>}\r\n        </View>\r\n    </TouchableOpacity>\r\n}\r\n\r\n\r\nexport default (props:{channel_id:number})=>{\r\n    const timerMessages = useTimerMessageContentList(props.channel_id)\r\n    const [now, setNow] = useState(dayjs())\r\n    const [expand, setExpand] = useState<number>()\r\n    useEffect(()=>{\r\n        const timeout = setTimeout(()=>{\r\n            setNow(dayjs())\r\n        }, 2000)\r\n        return ()=>clearTimeout(timeout)\r\n    }, [now])\r\n    return <View style={{flexDirection:'row', paddingTop:5, paddingHorizontal:20}}>\r\n        {timerMessages?.map((v,i)=><TimerTag key={i} data={v} now={now} isExpand={v.id==expand} setExpand={setExpand}/>)}\r\n    </View>\r\n}","import { useEffect, useMemo } from \"react\"\r\nimport { useQuery, useQueryClient } from \"react-query\"\r\nimport { getTimerMessageContentList } from \"../../services\"\r\nimport { MessengerContent } from \"../../types\"\r\nimport useWebsocketContext from \"../useWebsocketContext\"\r\nimport dayjs from \"dayjs\"\r\n\r\nexport default function useTimerMessageContentList(channel_id:number){  \r\n  const queryClient = useQueryClient()\r\n  const { data } = useQuery<MessengerContent[]>(\r\n    [\"TimerMessageContentList\", channel_id], \r\n    async()=>await getTimerMessageContentList(channel_id, dayjs().toISOString()), \r\n    {\r\n      refetchOnReconnect:false,\r\n      refetchOnWindowFocus:false\r\n    }\r\n  )\r\n  const { lastJsonMessage } = useWebsocketContext()\r\n  useEffect(()=>{\r\n    if(lastJsonMessage !=null && lastJsonMessage['data']['channel'] == channel_id){\r\n      if(lastJsonMessage['type']=='next_message'){\r\n        if(lastJsonMessage['data']['timer'] && dayjs() < dayjs(lastJsonMessage['data']['timer']))\r\n          queryClient.setQueryData<MessengerContent[]>([\"TimerMessageContentList\", channel_id], (_data)=>{\r\n            return [...(_data || []), lastJsonMessage['data']]\r\n          })\r\n      }\r\n      if(lastJsonMessage['type']=='update_message'){\r\n        queryClient.setQueryData<MessengerContent[]>([\"TimerMessageContentList\", channel_id], (_data)=>{\r\n          return [...(_data?.filter(v=>v.id!=lastJsonMessage['data'].id || (lastJsonMessage['data']['timer']!=null && !lastJsonMessage['data']['is_archive'])) || [])]\r\n        })\r\n      }\r\n    }\r\n  }, [lastJsonMessage])\r\n  const sorted = useMemo(()=>data?.sort((a, b)=>(a.timer || '') > (b.timer || '')?1:-1), [data])\r\n  useEffect(()=>{\r\n    if (sorted?.[0]?.timer){\r\n      const id = sorted[0].id\r\n      const ms = Math.min(dayjs(sorted[0].timer).diff(dayjs()), Number.MAX_VALUE)\r\n      let timeout = setTimeout(()=>{\r\n        queryClient.setQueryData<MessengerContent[]>([\"TimerMessageContentList\", channel_id], (_data)=>{\r\n          return (_data || []).filter(v=>v.id!=id || dayjs(v.timer).diff(dayjs()) > 0)\r\n        })\r\n      }, ms)\r\n      return ()=>clearTimeout(timeout)\r\n    }\r\n  },[sorted])\r\n  return sorted\r\n}\r\n"],"names":["normalizeHash","hash","min","max","Math","floor","props","backgroundColor","str","initHash","i","length","charCodeAt","abs","stringToHSL","name","userId","_jsx","Avatar","style","size","label","split","map","v","join","toUpperCase","avatarFromChannel","item","user","avatar","member_count","id","subowner","owner","_objectSpread","DefaultButton","_useState","useState","_useState2","_slicedToArray","hover","setHover","Pressable","onPress","onHoverIn","onHoverOut","disabled","paddingVertical","paddingHorizontal","color","borderColor","children","Text","selectable","fontSize","textStyle","title","theme","useColorScheme","_props","Colors","hoverColor","buttonBorderColor","styles","buttonBackgroundColor","text","StyleSheet","create","borderRadius","borderWidth","textAlign","fontWeight","CommonSection","View","outerContainer","autoScale","outerContainerFill","outerContainerStyle","_jsxs","container","containerStyle","withSeparator","separator","lightColor","darkColor","undefined","titleView","titleStyle","subtitle","bodyView","bodyStyle","alignItems","width","maxWidth","marginHorizontal","marginVertical","flexDirection","marginBottom","flex","marginTop","height","padding","justifyContent","RenderHTML","React","regexForStripHTML","_ref","content","minWidth","margin","borderTopWidth","Suspense","fallback","description","replaceAll","contentWidth","source","baseStyle","windowType","useResizeContext","alignSelf","flexShrink","BottomSheet","useThemeColor","colorName","colorFromProps","otherProps","_objectWithoutProperties","_excluded","light","dark","DefaultText","_excluded2","DefaultView","tintColorLight","tintColorDark","background","tint","tabIconDefault","tabIconSelected","header","headerBottomColor","iconColor","focus","updateContnetPage","pages","updateMessages","update_i","forEach","page","current","timer","is_archive","filter","useMessengerContentList","channel_id","queryClient","useQueryClient","_useInfiniteQuery","useInfiniteQuery","_ref2","_asyncToGenerator","pageParam","getMessengerContentList","then","_x","apply","arguments","select","data","next","getNextPageParam","lastPage","refetchOnReconnect","refetchOnWindowFocus","query","updated_gte","Date","state","dataUpdatedAt","toISOString","newData","getNewMessengerContentList","contents","lastMessageId","nextMessages","timerMessageRefetch","findIndex","concat","_toConsumableArray","invalidateQueries","fetchNextPage","lastJsonMessage","useWebsocketContext","useEffect","setQueryData","_data","pageParams","useMessengerContentMutation","channelId","uploadDispatch","useUploadContext","dispatch","useMutation","message","postMessage","onSuccess","_patch","patchMessengerContent","mutate","patch","callback","deps","navigation","useNavigation","event","e","preventDefault","addListener","removeListener","ModalsContext","createContext","setModal","ModalsProvider","allModals","modals","setModals","_useState3","_useState4","animationType","setAnimationType","visible","Component","Provider","value","newModals","m","modal","index","Modal","transparent","useContext","getWindowType","window","ResizeContextContext","Dimensions","get","ResizeContextProvider","detectMobile","useMobileDetect","_useWindowDimensions","useWindowDimensions","setWindowType","isMobile","UploadContext","upload","uploadReducer","initialState","action","files","channel","f","filename","progress","push","_defineProperty","UploadContextProvider","_useReducer","useReducer","_useReducer2","defaultContext","sendJsonMessage","WebSocketContext","WebSocketInternalProvider","path","Context","useBackground","token","setToken","AppState","currentState","isActive","setIsActive","_useWebSocket","useWebSocket","websockerURL","shouldReconnect","closeEvent","protocols","onOpen","console","log","onClose","AsyncStorage","getItem","listener","addEventListener","nextState","remove","WebSocketProvider","disable","_Fragment","MessageModal","isOwner","sendToScreen","message_set","editorContents","attatchment_set","type","editor","fullContent","lang","useLangContext","useModalsContext","contentMutation","back","useModalEffect","TouchableOpacity","Ionicons","CommonButton","Clipboard","setString","editorValue","link","touchableRef","Linking","openURL","url","onLongPress","image_url","Image","uri","resizeMode","maxHeight","humanFileSize","pow","toFixed","file","showBorder","thumbnail","FontAwesome","filesize","MessengerContentPageItem","_nextPage2","lastTouchRef","useRef","now","useIsMobile","nextPage","_nextPage","nextContent","reverse","onTouchMove","index2","created","slice","date","isSystem","isFirst","isSelf","ownerId","dayChanged","marginLeft","getOnPress","timerToString","Hyperlink","linkDefault","wordBreak","linkStyle","attatchment","aIndex","EditorPreview","FilePreview","LinkPreview","auth","useViewerContentList","useMemo","_props$auth","_props$auth$user","renderItem","useCallback","FlatList","contentContainerStyle","flexGrow","onScroll","nativeEvent","contentSize","contentOffset","y","onLayout","p","layout","timerFormat","datetime","_timerFormat","dayjs","year","format","month","TimerTag","start","end","ratio","diff","setExpand","isExpand","overflow","position","preview_content","timerMessages","useQuery","getTimerMessageContentList","sorted","sort","a","b","_sorted$","ms","Number","MAX_VALUE","timeout","setTimeout","clearTimeout","useTimerMessageContentList","setNow","expand","paddingTop"],"sourceRoot":""}