{"version":3,"sources":["src/navigation/index.tsx","src/components/HeaderRight.tsx","src/screens/main/LoginScreen.tsx","src/hooks/lists/useMessengerContent.List.ts","src/components/LinkPreview.tsx","src/lib/react-native-webrtc/useWebsocketContext.tsx","src/lib/react-native-webrtc/webrtc/p2p.tsx","src/lib/react-native-webrtc/webrtc/index.ts","src/lib/react-native-webrtc/LocalCam.tsx","src/lib/react-native-webrtc/RemoteCam.tsx","src/screens/main/ChatScreen/VideoCallSection.tsx","src/components/FilePreview.tsx","src/screens/main/ChatScreen/index.tsx","src/screens/main/TabOneScreen.tsx","src/screens/index.ts","src/screens/main/HomeScreen.tsx","src/hooks/useWebsocketContext.tsx","src/components/TextButton.tsx","src/components/RowField.tsx","src/components/TextField.tsx","src/modals/ChannelEditModal.tsx","src/apis/notification.ts","src/hooks/useIsMobile.ts","src/hooks/lists/useUserMembershipList.ts","src/components/CommonItem.tsx","src/lib/react-native-paper/Avatar.tsx","src/components/Avatar.tsx","src/hooks/lists/useMessengerMemberList.ts","src/tabs/DrawerTab.tsx","src/tabs/MessengerTab.tsx","src/tabs/index.ts","src/tabs/MemberTab.tsx","src/modals/GuestLogoutModal.tsx","src/modals/InviteModal.tsx","src/modals/ProfileModal.tsx","src/components/Themed.tsx","src/components/Profile.tsx","src/components/CommonTextInput.tsx","src/navigation/DrawerNavigator.tsx","src/lang/index.ts","src/navigation/LinkingConfiguration.ts","src/apis/axios.ts","src/constants/Colors.ts","src/screens/NotFoundScreen.tsx","src/hooks/useFirebaseContext.tsx","src/components/MobileSafeAreaView.tsx","src/modals/index.ts","src/navigation/RootNavigator.tsx","App.tsx","src/hooks/useCachedResources.ts","src/hooks/useAuthContext.tsx","web/firebase-config.js","src/assets/fonts/SpaceMono-Regular.ttf","src/components/CommonButton.tsx","src/apis/account.ts","src/apis/messenger.ts","src/hooks/useModalsContext.tsx","src/hooks/useResizeWindow.ts","src/hooks/useColorScheme.ts","src/components/CommonSection.tsx","src/hooks/lists/useMessengerChannelList.ts"],"names":["navigationRef","React","navigate","name","params","_navigationRef$curren","_navigationRef$curren2","current","Navigation","_ref","colorScheme","NavigationContainer","ref","documentTitle","formatter","options","route","linking","process","versions","undefined","LinkingConfiguration","theme","DarkTheme","DefaultTheme","RootNavigator","l","search","decoded","slice","split","map","s","replace","join","window","history","replaceState","pathname","hash","location","ignoreWarnings","_console","_","clone","console","warn","message","Object","forEach","value","indexOf","props","_useAuthContext","useAuthContext","auth","dispatch","setModal","useModalsContext","windowType","useResizeWindow","defaultButtonProps","title","lang","onPress","_auth$user","user","username","endsWith","GuestLogoutModal","type","buttonProps","extra","concat","_toConsumableArray","filter","v","createElement","View","style","flexDirection","k","TextButton","_extends","key","textStyle","color","Styles","StyleSheet","create","login_container","flex","backgroundColor","login_header","alignItems","paddingTop","paddingBottom","login_header_logo","width","resizeMode","login_header_text","marginTop","fontSize","login_header_text_bold","fontWeight","login_wrapper","justifyContent","paddingVertical","borderTopRightRadius","borderTopLeftRadius","form","maxWidth","form_error","height","paddingHorizontal","form_error_text","textAlignVertical","form_input","marginBottom","borderRadius","button","button_label","login_social","login_social_separator","login_social_separator_line","login_social_separator_text","marginHorizontal","login_social_buttons","login_social_button","borderWidth","borderColor","login_social_icon","login_social_facebook","login_footer_text","guest_footer_text","alignSelf","margin","login_footer_link","useMessengerContentList","channel_id","queryClient","useQueryClient","_useInfiniteQuery","useInfiniteQuery","pageParam","_regeneratorRuntime","async","_context","prev","next","abrupt","getMessengerContentList","then","stop","Promise","select","data","pages","length","getNextPageParam","lastPage","id","refetchOnReconnect","refetchOnWindowFocus","fetchNextPage","lastJsonMessage","useWebsocketContext","useEffect","setQueryData","_data","_objectSpread","pageParams","link","isMobile","CommonSection","containerStyle","bodyStyle","padding","TouchableOpacity","Linking","openURL","url","image","Image","source","uri","maxHeight","Text","description","WebSocketContext","createContext","sendJsonMessage","WebSocketProvider","disable","children","Fragment","WebSocketInternalProvider","path","Context","useBackground","useContext","log","peerConstraints","iceServers","JSON","parse","sessionConstraints","mandatory","OfferToReceiveAudio","OfferToReceiveVideo","VoiceActivityDetection","mediaConstraints","audio","video","framerate","onICEcandidate","pc","_message","rtcMessage","candidate","RTCIceCandidate","addIceCandidate","sendICEcandidate","event","sendMessage","receiver","target","optimizeSdp","offerDescription","arr","sdp","str","i","test","RTCSessionDescription","createOffer","pcRefCurrent","stream","addStream","t0","awrap","t1","sent","setLocalDescription","camStyle","container","cam","bottonContainer","position","bottom","buttonBar","label","_props$user","_useWebsocketContext","_useLocalCam","pcRef","useRef","_useState","useState","_useState2","_slicedToArray","sender","setSender","_useState3","_useState4","_stream","setStream","isPlay","useMemo","CustomRTCView","useCallback","memo","RTCView","videoProps","start","mode","newStream","_context2","mediaDevices","getUserMedia","getDisplayMedia","catch","e","entries","_ref2","_ref3","error","getTracks","track","websocketOnMessage","response","peerConnection","_peerConnection","answerDescription","_peerConnection2","_context3","channel_name","RTCPeerConnection","addEventListener","setRemoteDescription","useLocalCam","Button","setReceiver","_useRemoteCam","_useState5","_useState6","setUser","_useState7","_useState8","close","clearInterval","statsInterval","_pcRef$current","_pcRef$current2","_pcRef$current3","_pcRef$current4","streams","_peerConnection3","_answerDescription","_streams","_context5","iceConnectionState","activeStream","setInterval","stats","statsOutput","framePerSecond","_context4","getStats","report","kind","keys","statName","framesPerSecond","Date","toTimeString","addTransceiver","direction","getRemoteStreams","createAnswer","localDescription","useRemoteCam","TextInput","onChangeText","VideoView","scale","Colors","flexGrow","focusGuest","setFocusGuest","VideoCallContainer","setDisable","videoMode","setVideoMode","guests","setGuests","_useRtcContext","useRtcContext","find","Math","max","ceil","sqrt","toggleVideoMode","ThemedView","aspectRatio","flexShrink","borderLeftWidth","borderBottomWidth","flexWrap","RemoteCam","LocalCam","CommonButton","RtcProvider","file","showBorder","useColorScheme","FontAwesome","size","filename","floor","pow","toFixed","humanFileSize","filesize","MessengerContentPageItem","_nextPage2","useIsMobile","nextPage","_nextPage","nextContent","content","index2","created","date","isSystem","isFirst","isSelf","ownerId","dayChanged","message_set","marginVertical","marginLeft","Avatar","userId","outerContainerStyle","titleStyle","subtitle","Hyperlink","linkDefault","wordBreak","linkStyle","selectable","file_set","fileIndex","FilePreview","link_set","linkIndex","LinkPreview","Panel_Button_Text","textAlign","Panel_Holder","main","HomeScreen","component","_route$params2","navigation","text","headerRight","HeaderRight","ChannelEditModal","useLayoutEffect","_route$params","index","tab","setOptions","StyledText","paddingLeft","TabViewNavigator","tabs","bottomTabs","tabBarPosition","parseInt","onTab","setParams","ChatScreen","_useMessengerChannelL","inputRef","channel","useMessengerChannelList","_useMessengerContentL","memberList","useMessengerMemberList","member_id","_memberList$find","messengerMemberMutation","useMessengerMemberMutation","setValue","autoFocus","setAutoFocus","postValue","_auth$user2","contentMutation","useMutation","postMessage","onSuccess","_delete","deleteMessengerContent","d","variables","mutate","delete","useMessengerContentMutation","InviteModal","leave","back","renderItem","_auth$user3","item","canGoBack","goBack","focus","VideoCallSection","minWidth","FlatList","contentContainerStyle","onScroll","nativeEvent","contentOffset","y","contentSize","onLayout","p","layout","background","onSubmitEditing","blurOnSubmit","resolve","reject","Platform","OS","input","document","onchange","files","onabort","onerror","click","f","_auth$user4","TabOneScreen","login","LoginScreen","setUsername","password","setPassword","_login","placeholder","autoCapitalize","keyboardType","secureTextEntry","modal","_split","_split2","SCHEMA","DOMAIN","token","setToken","AppState","currentState","isActive","setIsActive","_useWebSocket","useWebSocket","shouldReconnect","closeEvent","protocols","onOpen","onClose","AsyncStorage","getItem","onChange","nextState","removeEventListener","Provider","styles","RowField","rowStyle","TextField","CommonTextInput","channelList","channelMutation","useMessengerChannelMutation","setName","setDescription","separator","lightColor","darkColor","multiline","groupId","newChannel","owner","group","update","screen","field","getNotification","user_id","axios","get","postNotification","notification","post","putNotification","put","useMobileDetect","useUserMembershipList","useQuery","getUserMembershipList","CommonItem","_React$useState","_React$useState2","setHover","_React$useState3","_React$useState4","press","setPress","Pressable","outerContainer","onPressIn","onPressOut","onHoverIn","onHoverOut","bodyView","minHeight","normalizeHash","min","initHash","charCodeAt","abs","stringToHSL","toUpperCase","getMessengerMemberList","invite","postBulkMessengerMember","invalidateQueries","deleteMessengerMember","DrawerTab","Messenger","useMessengerChannelSorted","MessengerIcon","Ionicons","OneTab","MemberTab","icon","MemberIcon","TwoTab","today","toISOString","_item$last_message","_item$last_message2","_item$last_message3","last_message","marginRight","opacity","member_count","unread_count","drawerTabs","renderMemberItem","userList","memberItem","ProfileModal","MaterialCommunityIcons","InviteItem","selectedRef","has","selected","setSelected","add","Set","memberSet","user_ids","Profile","counterpart","direct","useThemeColor","colorName","colorFromProps","otherProps","_objectWithoutProperties","_excluded","light","dark","DefaultText","_excluded2","DefaultView","patchUser","finally","disabled","onBlur","onEndEditing","contentHeight","setContentHeight","editable","onContentSizeChange","setIndex","icons","assign","apply","_defineProperty","TabView","renderTabBar","TabBar","indicatorStyle","activeColor","inactiveColor","renderIcon","scene","onTabPress","findIndex","_ref4","_ref5","navigationState","routes","_ref6","_ref7","onIndexChange","renderScene","SceneMap","_ref8","_ref9","_ref11","colors","useTheme","onAddList","tabBar","card","borderTopColor","border","pointerEvents","accessibilityRole","borderTopWidth","values","drawerTab","Tab","elevation","borderRightWidth","translations","ko","require","_RNLocalize$findBestL","RNLocalize","languageTag","isRTL","I18nManager","forceRTL","intl","createIntl","defaultLocale","locale","messages","createIntlCache","formatMessage","defaultMessage","toString","ROOTPATH","prefixes","config","screens","Main","NotFound","accountURL","defaultOption","baseURL","withCredentials","headers","_axios","interceptors","request","use","status","getToken","r","defaults","setItem","removeItem","tint","tabIconDefault","tabIconSelected","header","buttonColor","buttonBackgroundColor","NotFoundScreen","linkText","firebaseConfig","messagingSenderId","apiKeyEncrypted","padStart","app","firebase","initializeApp","apiKey","messaging","onMessage","payload","Notification","permission","body","alert","noti","requestToken","serviceWorkerRegistration","currentToken","requestPermission","navigator","serviceWorker","register","scope","vapidKey","preventDefault","unregister","setEnable","enable","context","FirebaseContext","innerHeight","setHeight","Dimensions","Root","createStackNavigator","QueryClient","MobileSafeAreaView","AuthProvider","QueryClientProvider","client","Navigator","headerMode","screenOptions","cardStyle","animationEnabled","cardStyleInterpolator","CardStyleInterpolators","forVerticalIOS","Screen","MainNavigator","headerShown","gestureDirection","modalValues","modals","useFirebaseContext","DrawerNavigator","ModalsProvider","headerStyle","headerTitleStyle","headerLeft","canGOBackScreen","headerLeftContainerStyle","forHorizontalIOS","App","isLoadingComplete","setLoadingComplete","SplashScreen","Font","font","finish","useCachedResources","SafeAreaProvider","StatusBar","AuthContext","authReducer","initialState","action","Error","_useReducer","useReducer","_useReducer2","authState","setError","_authState$user","_authState$user$membe","membership_set","g","root_group_id","checkLogin","_data$response","_data$response$data","logout","module","exports","DefaultButton","hover","_props","guestLogin","checkLoginToken","_await$axios$get","isOffline","code","startsWith","getUserList","group_id","_context6","_context7","patch","ids","updated","_context8","getMessengerChannelList","postChannel","postDirectChannel","putChannel","deleteChannel","id_lt","id_lt_param","_context9","results","formData","_context10","FormData","append","content_id","_context11","ModalsContext","allModals","Component","setModals","m","Modal","animationType","visible","getWindowType","detectMobile","setWindowType","_useColorScheme","withSeparator","titleView","sort","a","b","_data2$message_set$","_a$last_message","_b$last_message","mutateAsync"],"mappings":"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","file":"static/js/app.118454e9.chunk.js","sourcesContent":["/**\r\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\r\n * https://reactnavigation.org/docs/getting-started\r\n *\r\n */\r\nimport _ from 'lodash';\r\nimport { NavigationContainer, DefaultTheme, DarkTheme, NavigationContainerRef } from '@react-navigation/native';\r\nimport * as React from 'react';\r\nimport { ColorSchemeName } from 'react-native';\r\n\r\nimport LinkingConfiguration from './LinkingConfiguration';\r\nimport RootNavigator from './RootNavigator';\r\n\r\nconst navigationRef = React.createRef<NavigationContainerRef>();\r\n\r\nexport function navigate(name:string, params?:any) {\r\n  if (params)\r\n    navigationRef.current?.navigate(name, params);\r\n  navigationRef.current?.navigate(name);\r\n}\r\n\r\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\r\n  return (\r\n    <NavigationContainer\r\n      ref={navigationRef}\r\n      documentTitle={{formatter: (options, route) => {return `TOKKI TOK`}}}\r\n      linking={(process.versions && process.versions['electron'])?undefined:LinkingConfiguration}\r\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\r\n      <RootNavigator />\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\n(function(l) {  // for github-page\r\n    if (l !== undefined && l.search[1] === '/' ) {\r\n        var decoded = l.search.slice(1).split('&').map(function(s) { \r\n        return s.replace(/~and~/g, '&')\r\n        }).join('?');\r\n        window.history.replaceState(null, '',\r\n            l.pathname.slice(0, -1) + decoded + l.hash\r\n        );\r\n    }\r\n}(window.location))\r\n    \r\nconst ignoreWarnings = ['ReactNativeFiberHostComponent'];\r\nconst _console = _.clone(console);\r\nconsole.warn = (message: string|Object) => {\r\n    var warn = true;\r\n    if (message instanceof Object)\r\n    warn = false;\r\n    else{\r\n    ignoreWarnings.forEach((value)=>{\r\n        if (message.indexOf && message.indexOf(value) <= -1) {\r\n            warn = false;\r\n        }\r\n    })\r\n    };\r\n    if (warn){\r\n        _console.warn(message);\r\n    }\r\n    else{\r\n        // console.log(message)\r\n    }\r\n};\r\n","import React from 'react'\r\nimport TextButton from \"./TextButton\"\r\nimport useAuthContext from \"../hooks/useAuthContext\"\r\nimport useResizeWindow from '../hooks/useResizeWindow'\r\nimport { View } from 'react-native'\r\nimport lang from '../lang'\r\nimport useModalsContext from '../hooks/useModalsContext'\r\nimport GuestLogoutModal from '../modals/GuestLogoutModal'\r\n\r\ntype ButtonProps = {title:string, onPress:()=>void, windowType?:'landscape'|'portrait'}\r\n\r\nexport default (props:{extra?:ButtonProps[]})=>{\r\n    const {auth, dispatch} = useAuthContext()\r\n    const { setModal } = useModalsContext()\r\n    const windowType = useResizeWindow()\r\n    const defaultButtonProps:ButtonProps[] = [{title:lang('sign out'), onPress:()=>{\r\n        if (auth?.user?.username.endsWith(\".guest\")){\r\n            setModal(GuestLogoutModal, {})\r\n        }\r\n        else{\r\n            dispatch({type:\"LOGOUT_REQUEST\"})\r\n        }\r\n    }}]\r\n    const buttonProps = (props.extra?[...props.extra, ...defaultButtonProps]:defaultButtonProps).filter(v=>v.windowType==windowType || v.windowType == undefined)\r\n    return<View style={{flexDirection:'row'}}>\r\n        {buttonProps.map((v,k)=><TextButton key={k} {...v} textStyle={{color:'white'}} color='#gray'/>)}\r\n    </View>\r\n}\r\n  ","import React, {useLayoutEffect, useState} from 'react';\r\nimport {\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  View,\r\n  StyleSheet,\r\n} from 'react-native';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport useAuthContext from '../../hooks/useAuthContext';\r\nimport lang from '../../lang'\r\n\r\nexport default function LoginScreen({\r\n  navigation, route\r\n}: StackScreenProps<any, 'Login'>) {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const {error, dispatch} = useAuthContext()\r\n  const _login = ()=>dispatch({type:'LOGIN_REQUEST', username, password})\r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      headerRight: undefined\r\n    });\r\n  }, [navigation, route]);\r\n\r\n  return (\r\n    <View style={Styles.login_wrapper}>\r\n      <View style={Styles.form}>\r\n        {error && <View style={Styles.form_error}>\r\n          <Text style={Styles.form_error_text}>{lang(error)}</Text>\r\n        </View>}\r\n        <TextInput\r\n          style={Styles.form_input}\r\n          value={username}\r\n          placeholder={lang('Username')}\r\n          onChangeText={(text) => setUsername(text)}\r\n          autoCapitalize={'none'}\r\n          keyboardType={'email-address'}\r\n          onSubmitEditing={_login}\r\n        />\r\n        <TextInput\r\n          style={Styles.form_input}\r\n          value={password}\r\n          placeholder={lang('Password')}\r\n          secureTextEntry\r\n          onChangeText={(text) => setPassword(text)}\r\n          onSubmitEditing={_login}\r\n        />\r\n        <TouchableOpacity onPress={_login}>\r\n          <View style={Styles.button}>\r\n            <Text style={Styles.button_label}>{lang('Sign in')}</Text>\r\n          </View>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity onPress={() => dispatch({type:\"LOGIN_GUEST\"})}>\r\n          <Text style={Styles.guest_footer_text}>\r\n            {lang(\"Sign in as guest\")}\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      <View style={Styles.login_social}>\r\n        <View style={Styles.login_social_separator}>\r\n          <View style={Styles.login_social_separator_line} />\r\n          <Text style={Styles.login_social_separator_text}>{'*'}</Text>\r\n          <View style={Styles.login_social_separator_line} />\r\n        </View>\r\n        <View style={Styles.login_social_buttons}>\r\n        </View>\r\n      </View>\r\n      {/* <>\r\n        <TouchableOpacity onPress={() => navigate(\"RegistrationScreen\")}>\r\n          <Text style={Styles.login_footer_text}>\r\n            {\"Don't have an account? \"}\r\n            <Text style={Styles.login_footer_link}>{'Sign up'}</Text>\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </> */}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst Styles = StyleSheet.create({\r\n    login_container: {\r\n      flex: 1,\r\n      backgroundColor: '#FFF',\r\n    },\r\n    login_header: {\r\n      alignItems: 'center',\r\n      paddingTop: 30,\r\n      paddingBottom: 50,\r\n      backgroundColor: '#208AEC',\r\n    },\r\n    login_header_logo: {\r\n      width: 220,\r\n      resizeMode: 'contain',\r\n    },\r\n    login_header_text: {\r\n      marginTop: 15,\r\n      color: '#f0f0f0',\r\n      fontSize: 16,\r\n    },\r\n    login_header_text_bold: {\r\n      color: '#fff',\r\n      fontWeight: 'bold',\r\n    },\r\n    login_wrapper: {\r\n      flex: 1,\r\n      justifyContent: 'space-between',\r\n      paddingVertical: 40,\r\n      borderTopRightRadius: 12,\r\n      borderTopLeftRadius: 12,\r\n      marginTop: -10,\r\n      backgroundColor: '#fff',\r\n      alignItems: 'center',\r\n    },\r\n    form: {\r\n      width: '100%',\r\n      maxWidth: 320,\r\n    },\r\n    form_error: {\r\n      height: 22,\r\n      width:'100%',\r\n      paddingHorizontal: 20,\r\n    },\r\n    form_error_text:{\r\n      textAlignVertical:'center',\r\n      color:'red',\r\n      fontSize:13,\r\n    },\r\n    form_input: {\r\n      height: 44,\r\n      paddingHorizontal: 20,\r\n      marginBottom: 20,\r\n      backgroundColor: '#EDF0F7',\r\n      borderRadius: 50,\r\n    },\r\n    button: {\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      height: 44,\r\n      backgroundColor: '#0065A4',\r\n      borderRadius: 50,\r\n    },\r\n    button_label: {\r\n      color: '#fff',\r\n      fontSize: 16,\r\n    },\r\n    login_social: {\r\n      width: '100%',\r\n      maxWidth: 280,\r\n      marginTop: 20,\r\n    },\r\n    login_social_separator: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n    },\r\n    login_social_separator_line: {\r\n      flex: 1,\r\n      width: '100%',\r\n      height: 1,\r\n      backgroundColor: '#E0E0E0',\r\n    },\r\n    login_social_separator_text: {\r\n      marginHorizontal: 10,\r\n      color: '#808080',\r\n      fontSize: 16,\r\n    },\r\n    login_social_buttons: {\r\n      flexDirection: 'row',\r\n      justifyContent: 'center',\r\n      marginTop: 20,\r\n    },\r\n    login_social_button: {\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      width: 60,\r\n      height: 60,\r\n      marginHorizontal: 12,\r\n      borderWidth: 1,\r\n      borderColor: '#E7E7E7',\r\n      borderRadius: 60,\r\n    },\r\n    login_social_icon: {\r\n      width: 38,\r\n      height: 38,\r\n      resizeMode: 'contain',\r\n    },\r\n    login_social_facebook: {\r\n      backgroundColor: '#4267B2',\r\n      borderColor: '#4267B2',\r\n    },\r\n    login_footer_text: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      color: '#808080',\r\n      fontSize: 14,\r\n    },\r\n    guest_footer_text: {\r\n      flexDirection: 'row',\r\n      alignSelf: 'center',\r\n      color: '#808080',\r\n      fontSize: 15,\r\n      margin: 15\r\n    },\r\n    login_footer_link: {\r\n      color: '#208AEC',\r\n      fontSize: 15,\r\n      fontWeight: 'bold',\r\n    },\r\n  });\r\n  ","import { useCallback, useEffect, useState } from \"react\"\r\nimport { InfiniteData, useInfiniteQuery, useMutation, useQueryClient } from \"react-query\"\r\nimport { getMessengerContentList, postMessage, deleteMessengerContent } from \"../../apis\"\r\nimport { MessengerContent } from \"../../types\"\r\nimport useWebsocketContext from \"../useWebsocketContext\"\r\n\r\nexport type MessengerContentPage = {\r\n  next?:MessengerContentPage\r\n  current:MessengerContent[]\r\n}\r\n\r\nexport default function useMessengerContentList(channel_id:number){  \r\n  const queryClient = useQueryClient()\r\n  const { data, fetchNextPage } = useInfiniteQuery<MessengerContentPage>(\r\n    [\"MessengerContentList\", channel_id], \r\n    async({pageParam})=>getMessengerContentList(channel_id, pageParam).then(current=>({current})), \r\n    {\r\n      select:data=>{\r\n        if(data.pages.length > 1)\r\n          data.pages[data.pages.length - 2].next = data.pages[data.pages.length - 1]\r\n        return data;\r\n      },\r\n      getNextPageParam:(lastPage)=>lastPage?.current.length?lastPage.current[lastPage.current.length - 1].id:undefined,\r\n      refetchOnReconnect:false,\r\n      refetchOnWindowFocus:false\r\n    }\r\n  )\r\n  const { lastJsonMessage } = useWebsocketContext()\r\n  useEffect(()=>{\r\n    if(lastJsonMessage !=null && lastJsonMessage['type']=='next_message' && lastJsonMessage['data']['channel'] == channel_id){\r\n      queryClient.setQueryData<InfiniteData<MessengerContentPage>>([\"MessengerContentList\", channel_id], (_data)=>{\r\n        if(_data?.pages[0].current && _data?.pages[0].current[0].id != lastJsonMessage['data'].id)\r\n          _data.pages[0].current = [lastJsonMessage['data'], ..._data?.pages[0].current]\r\n        return {...(_data || {pages:[], pageParams:[]})}\r\n      })\r\n    }\r\n  }, [lastJsonMessage])\r\n  return { data, fetchNextPage }\r\n}\r\n\r\nexport function useMessengerContentMutation(){\r\n  // const queryClient = useQueryClient()\r\n  const create = useMutation(postMessage, {\r\n    onSuccess: () => {\r\n      // queryClient.setQueryData(['MessengerContentList'], (data:any) => ({\r\n      //   pages: data.pages.slice(0, 1),\r\n      //   pageParams: data.pageParams.slice(0, 1),\r\n      // }))\r\n      // queryClient.invalidateQueries(\"MessengerContentList\")\r\n    }\r\n  });\r\n  const _delete = useMutation(deleteMessengerContent, {\r\n    onSuccess: (d, variables) => {\r\n      // queryClient.setQueryData(['MessengerContentList'], (data:any) => ({\r\n      //   pages: (data.pages as MessengerContent[][]).map(v=>v.filter(v2=>v2.id != variables)),\r\n      //   pageParams: data.pageParams,\r\n      // }))\r\n    }\r\n  })\r\n  return { create:create.mutate, delete:_delete.mutate }\r\n}","import React from 'react'\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport CommonSection from \"./CommonSection\"\r\nimport { Image, Linking, TextStyle } from \"react-native\"\r\nimport { View, Text } from \"./Themed\"\r\nimport { Link } from \"../types\"\r\n\r\n\r\n\r\nexport default ({link, isMobile}:{link:Link, isMobile:boolean})=>{\r\n    return <CommonSection containerStyle={{marginHorizontal:0}} bodyStyle={{padding:0}}>\r\n    <TouchableOpacity onPress={()=>Linking.openURL(link.url)} style={{flexDirection:'row'}} containerStyle={{width:'100%'}}>\r\n        {link.image && <Image source={{uri:link.image}} resizeMode=\"cover\" style={{ width:'100%', maxWidth:isMobile?120:150, maxHeight:isMobile?120:150, borderWidth:1}}/>}\r\n        <View style={{flex:1, marginHorizontal:20}}>\r\n        <Text style={{fontSize:18}}>{link.title}</Text>\r\n        <Text style={{fontSize:14}}>{link.description}</Text>\r\n        <Text style={{fontSize:12}}>{link.url}</Text>\r\n        </View>\r\n    </TouchableOpacity>\r\n    </CommonSection>\r\n}","import React, { createContext, useContext } from \"react\"\r\nimport { SendJsonMessage } from \"react-use-websocket/dist/lib/types\";\r\nimport { WebSocketInternalProvider } from \"../../hooks/useWebsocketContext\";\r\n\r\nconst WebSocketContext = createContext<{lastJsonMessage:any, sendJsonMessage:SendJsonMessage }>({lastJsonMessage:undefined, sendJsonMessage:()=>{}});\r\n\r\nexport const WebSocketProvider = ({disable, children}:{disable?:boolean, children:React.ReactNode})=>{\r\n  return disable?<></>:<WebSocketInternalProvider path={'messenger/ws/rtc/'} Context={WebSocketContext} useBackground>\r\n    {children}\r\n  </WebSocketInternalProvider>\r\n}\r\n\r\nexport default ()=>{\r\n  const webSocketContext = useContext(WebSocketContext)\r\n  return webSocketContext\r\n}\r\n\r\n","import React, { useCallback, useRef, useState, useMemo } from \"react\";\r\n//@ts-ignore\r\nimport { RTCView, mediaDevices, RTCPeerConnection, MediaStream, RTCSessionDescription, RTCIceCandidate } from \"react-native-webrtc-web-shim\";\r\n// @ts-ignore\r\nimport {TURN_SERVER} from \"@env\"\r\n\r\n\r\nconsole.log(TURN_SERVER?\"use turn server\": \"use stun server\")\r\n\r\nexport const peerConstraints = {\r\n\ticeServers: [TURN_SERVER?JSON.parse(TURN_SERVER):{urls: 'stun:stun.l.google.com:19302'}]\r\n};\r\n\r\nexport const sessionConstraints = {\r\n\tmandatory: {\r\n\t\tOfferToReceiveAudio: true,\r\n\t\tOfferToReceiveVideo: true,\r\n\t\tVoiceActivityDetection: true\r\n\t}\r\n};\r\n\r\nconst mediaConstraints = {audio:true, video:{framerate:30}}\r\n\r\n//@ts-ignore\r\nexport {MediaStream, RTCPeerConnection, RTCSessionDescription} from \"react-native-webrtc-web-shim\";\r\n\r\nconst onICEcandidate = (pc:typeof RTCPeerConnection, message:any)=>{\r\n\tconst _message = message.data.rtcMessage\r\n\t\tconst candidate = new RTCIceCandidate(_message);\r\n\t\tif (pc) {\r\n\t\t\tconsole.log(\"ICE candidate Added\");\r\n\t\t\tpc.addIceCandidate(candidate);\r\n\t\t}\r\n}\r\n\r\nconst sendICEcandidate = (event:any, sendMessage:(data:any)=>void, receiver:string, target:string) => {\r\n\t// When you find a null candidate then there are no more candidates.\r\n\t// Gathering of candidates has finished.\r\n\tif ( !event.candidate ) { return; };\r\n\t// Send the event.candidate onto the person you're calling.\r\n\t// Keeping to Trickle ICE Standards, you should send the candidates immediately.\r\n\tsendMessage({type:'ICEcandidate', receiver, data:{target, rtcMessage:event.candidate}})\r\n  }\r\n\r\nconst BAND_WIDTH = 8000\r\n\r\nconst optimizeSdp = (offerDescription:RTCSessionDescription)=>{\r\n\tvar arr = offerDescription.sdp.split('\\r\\n');\r\n\tarr.forEach((str:string, i:number) => {\r\n\t\tif (/^a=fmtp:\\d*/.test(str)) {\r\n\t\t\tarr[i] = str + `;x-google-max-bitrate=${BAND_WIDTH};x-google-min-bitrate=${BAND_WIDTH};x-google-start-bitrate=${BAND_WIDTH}`;\r\n\t\t} else if (/^a=mid:(0|video)/.test(str)) { // if with audio then 0=>1\r\n\t\t\tarr[i] += `\\r\\nb=AS:${BAND_WIDTH}`;\r\n\t\t}\r\n\t});\r\n  \treturn new RTCSessionDescription({\r\n    \ttype: offerDescription.type,\r\n    \tsdp: arr.join('\\r\\n'),\r\n  \t})\r\n}\r\n\r\nconst createOffer = async(pcRefCurrent:{pc?:typeof RTCPeerConnection, receiver:string}, sendMessage:(data:any)=>void, stream:typeof MediaStream, target:string, user?:{name:string})=>{\r\n\tstream && pcRefCurrent.pc.addStream( stream );\r\n\tconst offerDescription = optimizeSdp((await pcRefCurrent.pc.createOffer( sessionConstraints )));\r\n\tawait pcRefCurrent.pc.setLocalDescription( offerDescription );\r\n\tsendMessage({type:'call', receiver:pcRefCurrent.receiver, data:{target, name:user?.name, rtcMessage:offerDescription}})\r\n}\r\n\r\nexport const useLocalCam = (sendMessage:(data:any)=>void)=>{\r\n\tconst pcRef = useRef<Record<number,{pc:typeof RTCPeerConnection, receiver:string}>>({})\r\n\tconst [sender, setSender] = useState<string>()\r\n\tconst [_stream, setStream] = useState<MediaStream>()\r\n\tconst isPlay = useMemo(()=>_stream?true:false, [_stream])\r\n\tconst CustomRTCView = useCallback(React.memo(({style}:{style:any})=>(_stream?<RTCView stream={_stream} style={style} videoProps={{height:'100%'}} />:<></>)) , [_stream])\r\n\tconst start = useCallback(async(user:{name:string}, stream?:typeof MediaStream, mode?:'camera'|'display')=>{\r\n\t\tconsole.log(\"start\");\r\n\t\tif (!_stream || mode!==undefined) {\r\n\t\t\ttry {\r\n\t\t\t\tlet newStream:typeof MediaStream;\r\n\t\t\t\tif(mode == 'camera'){\r\n\t\t\t\t\tnewStream = await mediaDevices.getUserMedia(mediaConstraints)\r\n\t\t\t\t}\r\n\t\t\t\telse if (mode == 'display'){\r\n\t\t\t\t\tnewStream = await mediaDevices.getDisplayMedia(mediaConstraints)\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tnewStream = stream || await mediaDevices.getUserMedia(mediaConstraints).catch((e:any)=>mediaDevices.getDisplayMedia(mediaConstraints));\r\n\t\t\t\t}\r\n\t\t\t\tsetStream(newStream)\r\n\t\t\t\tObject.entries(pcRef.current).map(([k, v])=>{\r\n\t\t\t\t\tcreateOffer(v, sendMessage, newStream, 'guest', user)\r\n\t\t\t\t})\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.error(e);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [_stream])\r\n\tconst stop = useCallback(()=>{\r\n\t\tconsole.log(\"stop\");\r\n\t\tif(_stream){\r\n\t\t\t_stream.getTracks().map((track:any) => track.stop());\r\n\t\t\tsetStream(undefined)\r\n\t\t}\r\n\t}, [_stream])\r\n\treturn {\r\n\t\tstart,\r\n\t\tstop,\r\n\t\twebsocketOnMessage: async(response:any, user:{name:string})=>{\r\n\t\t\tlet type = response.type;\r\n\t\t\tif (type == 'connection'){\r\n\t\t\t\tsetSender(response.data.channel_name)\r\n\t\t\t}\r\n\t\t\tif (type == 'start' && response.data.target=='host'){\r\n\t\t\t  console.log('1 start')\r\n\t\t\t  const peerConnection = new RTCPeerConnection( peerConstraints );\r\n\t\t\t  peerConnection.addEventListener( 'icecandidate', (event:any) => sendICEcandidate(event, sendMessage, response.sender, 'guest'));\r\n\t\t\t  pcRef.current[response.sender] = {pc:peerConnection, receiver: response.sender}\r\n\t\t\t  createOffer(pcRef.current[response.sender], sendMessage, _stream, 'guest', user)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (type == \"answer\" && response.data.target == 'host'){\r\n\t\t\t  console.log('3 answer')\r\n\t\t\t  const peerConnection = pcRef.current[response.sender].pc\r\n\t\t\t  const answerDescription = new RTCSessionDescription(response.data.rtcMessage);\r\n\t\t\t  await peerConnection.setRemoteDescription( answerDescription );\r\n\t\t\t  // const streams = pcRef.current.pc.getRemoteStreams()\r\n\t\t\t  // setMirrorStream(streams[streams.length - 1])\r\n\t\t\t}\r\n\t\t\tif (type == \"ICEcandidate\" && response.data.target=='host'){\r\n\t\t\t\tconst peerConnection = pcRef.current[response.sender].pc\r\n\t\t\t\tonICEcandidate(peerConnection, response)\r\n\t\t\t}\r\n\t\t},\r\n\t\tCustomRTCView,\r\n\t\tisPlay,\r\n\t\tsender,\r\n\t\t// renderMirrorView,\r\n\t}\r\n}\r\n\r\nexport const useRemoteCam = (sendMessage:(data:any)=>void)=>{\r\n\tconst pcRef = useRef<{pc?:RTCPeerConnection, receiver?:string, statsInterval?:any}>({})\r\n\tconst [user, setUser] = useState<{name:string}>()\r\n\tconst [_stream, setStream] = useState<MediaStream>()\r\n\tconst CustomRTCView = useCallback(React.memo((style:any)=>_stream?<RTCView stream={_stream} style={style} videoProps={{height:'100%'}} />:<></>), [_stream])\r\n\tconst isPlay = useMemo(()=>_stream?true:false, [_stream])\r\n\tconst start = useCallback((receiver:string)=>{\r\n\t\tconsole.log(\"start\");\r\n\t\tif (!pcRef.current.pc) {\r\n\t\t  pcRef.current.pc = new RTCPeerConnection( peerConstraints );\r\n\t\t  pcRef.current.receiver = receiver\r\n\t\t}\r\n\t\tif (!_stream){\r\n\t\t\tsendMessage({type:'start', receiver, data:{'target': 'host'}})\r\n\t\t}\r\n\t}, [_stream])\r\n\tconst stop = () => {\r\n\t\tconsole.log(\"stop\");\r\n\t\tif (pcRef.current.pc) {\r\n\t\t  // peerConnection._unregisterEvents();\r\n\t\t  setStream(undefined)\r\n\t\t  pcRef.current.pc.close();\r\n\t\t  pcRef.current.pc = undefined\r\n\t\t  pcRef.current.receiver = undefined\r\n\t\t  clearInterval(pcRef.current.statsInterval)\r\n\t\t}\r\n\t}\r\n\treturn {\r\n\t\tstart,\r\n\t\tstop,\r\n\t\twebsocketOnMessage: async(response:any)=>{\r\n\t\t\tlet type = response.type;\r\n\t\t\tif (type == 'start' && response.data.target=='guest' && response.sender == pcRef.current?.receiver){\r\n\t\t\t\tconsole.log('(remote)1 start')\r\n\t\t\t\tconst peerConnection = pcRef.current.pc\r\n\t\t\t\tsetUser({name: response.data.name})\r\n\t\t\t\tpeerConnection.addEventListener('icecandidate', (event:any) => sendICEcandidate(event, sendMessage, response.sender, 'host'));\r\n\t\t\t\tpeerConnection.addEventListener('iceconnectionstatechange', (e:any)=>{\r\n\t\t\t\t\tif (pcRef.current.pc.iceConnectionState == 'connected'){\r\n\t\t\t\t\t\tlet activeStream = false\r\n\t\t\t\t\t\tpcRef.current.statsInterval = setInterval(async()=>{\r\n\t\t\t\t\t\t\tconst stats = await pcRef.current.pc.getStats(null)\r\n\t\t\t\t\t\t\tlet statsOutput = \"\";\r\n\t\t\t\t\t\t\tlet framePerSecond = undefined\r\n\t\t\t\t\t\t\tstats.forEach((report:any) => {\r\n\t\t\t\t\t\t\t\tif (report.type === \"inbound-rtp\" && report.kind === \"video\") {\r\n\t\t\t\t\t\t\t\t\tObject.keys(report).forEach((statName) => {\r\n\t\t\t\t\t\t\t\t\t\tstatsOutput += `${statName}: ${report[statName]}\\n`;\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tframePerSecond = report.framesPerSecond\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tconsole.log(activeStream, framePerSecond)\r\n\t\t\t\t\t\t\tif (framePerSecond != undefined){\r\n\t\t\t\t\t\t\t\tactiveStream = true\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (activeStream){\r\n\t\t\t\t\t\t\t\tstop()\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tconsole.log(new Date().toTimeString().split(' ')[0], statsOutput)\r\n\t\t\t\t\t\t}, 1000);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (pcRef.current.pc.iceConnectionState == 'failed'){\r\n\t\t\t\t\t\tstop()\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t// peerConnection.addTransceiver('audio', {\r\n\t\t\t\t// \tdirection: 'recvonly'\r\n\t\t\t\t// });\r\n\t\t\t\tpeerConnection.addTransceiver('video', {\r\n\t\t\t\t\tdirection: 'recvonly'\r\n\t\t\t\t});\r\n\t\t\t\tawait createOffer({pc:pcRef.current.pc, receiver:response.sender}, sendMessage, _stream, 'host', user)\r\n\t\t\t}  \r\n\t\t\tif (type == \"answer\" && response.data.target=='guest' && response.sender == pcRef.current?.receiver){\r\n\t\t\t\tconsole.log('(remote)3 answer')\r\n\t\t\t\tconst answerDescription = new RTCSessionDescription(response.data.rtcMessage);\r\n\t\t\t\tawait pcRef.current.pc.setRemoteDescription( answerDescription );\r\n\t\t\t\tconst streams = pcRef.current.pc.getRemoteStreams()\r\n\t\t\t\tsetStream(streams[streams.length - 1])\r\n\t\t\t\tsendMessage({type:'end', receiver:pcRef.current.receiver, data:{}})\r\n\t\t\t}\r\n\t\t\tif (type == \"call\" && response.sender == pcRef.current?.receiver){\r\n\t\t\t  console.log('2 call')\r\n\t\t\t  const peerConnection = pcRef.current.pc\r\n\t\t\t  setUser({name:response.data.name})\r\n\t\t\t  if (!peerConnection)\r\n\t\t\t\treturn\r\n\t\t\t  peerConnection.addEventListener( 'icecandidate', (event:any) => sendICEcandidate(event, sendMessage, response.sender, 'host'));\r\n\t\t\t  const offerDescription = new RTCSessionDescription(response.data.rtcMessage);\r\n\t\t\t  await peerConnection.setRemoteDescription( offerDescription );\r\n\t\t\t  const answerDescription = await peerConnection.createAnswer( sessionConstraints );\r\n\t\t\t  await peerConnection.setLocalDescription( answerDescription );\r\n\t\t\t  sendMessage({type:'answer', receiver:pcRef.current.receiver, data:{target:'host', rtcMessage:peerConnection.localDescription}})\r\n\t\t\t  // Here is a good place to process candidates.\r\n\t\t\t  const streams = pcRef.current.pc.getRemoteStreams()\r\n\t\t\t  setStream(streams[streams.length - 1])\r\n\t\t\t}\r\n\t\t\tif (type == \"ICEcandidate\" && response.data.target=='guest' && response.sender == pcRef.current?.receiver)\r\n\t\t\t  onICEcandidate(pcRef.current.pc, response)\r\n\t\t},\r\n\t\tCustomRTCView,\r\n\t\tuser,\r\n\t\tisPlay\r\n\t}\r\n}","import {StyleSheet} from \"react-native\";\r\nexport {useLocalCam, useRemoteCam} from \"./p2p\"\r\n\r\nexport const camStyle = StyleSheet.create({\r\n\tcontainer:{ flex: 1},\r\n\tcam:{ flex: 1, height:'100%'},\r\n\tbottonContainer: {position:\"absolute\", bottom:0, justifyContent:'flex-end'},\r\n\tbuttonBar: { flexDirection: \"row\", justifyContent: \"space-around\" },\r\n\tlabel: {backgroundColor:'#0008', color:'white', paddingHorizontal:5},\r\n})","import React, { useEffect } from \"react\";\r\nimport {Button, View, Text} from \"react-native\";\r\nimport useWebsocketContext from \"./useWebsocketContext\";\r\nimport { useLocalCam, camStyle} from \"./webrtc\";\r\n\r\n\r\nexport default (props:{user?:{name:string}|null, mode?:'camera'|'display'|null})=>{\r\n  const {lastJsonMessage, sendJsonMessage} = useWebsocketContext()\r\n  const {start, stop, websocketOnMessage, CustomRTCView, isPlay} = useLocalCam(sendJsonMessage)\r\n  useEffect(()=>{\r\n    props.user && lastJsonMessage && websocketOnMessage(lastJsonMessage, props.user)\r\n  }, [lastJsonMessage, props.user])\r\n  useEffect(()=>{\r\n    if(props.mode && !isPlay){\r\n      props.user && start(props.user, undefined, props.mode)\r\n    }\r\n    else if(props.mode===null && isPlay){\r\n      stop()\r\n    }\r\n    return ()=>{isPlay && stop()}\r\n  }, [isPlay, props.user, props.mode])\r\n  return (\r\n    <View style={camStyle.container}>\r\n      <CustomRTCView style={camStyle.cam}/>\r\n      <View style={camStyle.bottonContainer}>\r\n        <View style={camStyle.buttonBar}>  \r\n        </View>\r\n        <View style={{flexDirection:'row'}}><Text style={camStyle.label}>{props.user?.name}</Text></View>\r\n        <View style={camStyle.buttonBar}>\r\n          {props.mode === undefined && !isPlay && <Button title=\"Start\" onPress={()=>props.user && start(props.user)} />}\r\n          {props.mode === undefined && isPlay && <Button title=\"Stop\" onPress={stop} />}\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n","import React, { useState, useEffect, } from \"react\";\r\nimport {Button,Text, TextInput, View} from \"react-native\";\r\nimport useWebsocketContext from \"./useWebsocketContext\";\r\nimport { useRemoteCam, camStyle} from \"./webrtc\";\r\n\r\nexport default (props:{receiver?:string})=>{\r\n  const [receiver, setReceiver] = useState('')\r\n  const {lastJsonMessage, sendJsonMessage} = useWebsocketContext()\r\n  const {start, stop, websocketOnMessage, CustomRTCView, isPlay, user} = useRemoteCam(sendJsonMessage)\r\n  useEffect(()=>{\r\n    lastJsonMessage && websocketOnMessage(lastJsonMessage)\r\n  }, [lastJsonMessage])\r\n  useEffect(()=>{\r\n    if(props.receiver){\r\n      start(props.receiver)\r\n    }\r\n    return ()=>stop()\r\n  }, [props.receiver])\r\n  return (\r\n    <View style={camStyle.container}>\r\n      <CustomRTCView style={camStyle.cam}/>\r\n      <View style={camStyle.bottonContainer}>\r\n        <View style={camStyle.buttonBar}>\r\n        </View>\r\n        <View style={{flexDirection:'row'}}>{\r\n          (props.receiver || isPlay)?\r\n          <Text style={camStyle.label}>{user?.name || 'loading...'}</Text>:\r\n          <>\r\n            <Text style={{borderWidth:1}}>Receiver:&nbsp;</Text>\r\n            <TextInput style={{borderWidth:1, flex:1}} value={receiver} onChangeText={setReceiver}/>\r\n          </> \r\n        }</View>\r\n        <View style={camStyle.buttonBar}>\r\n          {props.receiver === undefined && !isPlay && <Button title=\"Start\" onPress={()=>start(receiver)} />}\r\n          {props.receiver === undefined && isPlay && <Button title=\"Stop\" onPress={stop} />}\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport { StyleSheet, View } from 'react-native';\r\nimport { View as ThemedView } from '../../../components/Themed' \r\nimport Colors from '../../../constants/Colors';\r\nimport {default as useRtcContext, WebSocketProvider as RtcProvider} from \"../../../lib/react-native-webrtc/useWebsocketContext\";\r\nimport LocalCam from '../../../lib/react-native-webrtc/LocalCam';\r\nimport RemoteCam from '../../../lib/react-native-webrtc/RemoteCam';\r\nimport useResizeWindow from '../../../hooks/useResizeWindow';\r\nimport useAuthContext from '../../../hooks/useAuthContext';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\nimport CommonButton from '../../../components/CommonButton';\r\n\r\ntype VideoType = 'camera'|'display'|null\r\ntype VideoCallProps = {channel_id:number, setDisable:(disable:boolean)=>void, disable?:boolean}\r\n\r\n\r\nconst VideoView = (props:{\r\n  scale:string,\r\n  focusGuest?:string,\r\n  setFocusGuest:(focusGuest?:string)=>void\r\n  receiver?:string\r\n  children:React.ReactNode\r\n})=>{\r\n  return <View style={[{maxWidth:props.scale, maxHeight:props.scale, borderWidth:1, borderColor:Colors.borderColor, backgroundColor:'gray', flexDirection:'row', flexGrow:1}, (props.focusGuest == undefined || props.focusGuest == props.receiver)?{}:{width:0, height:0}]}>\r\n    <TouchableOpacity style={{flex:1}} containerStyle={{flex:1, justifyContent:'center'}} onPress={()=>props.setFocusGuest(props.focusGuest?undefined:props.receiver)}>\r\n    {props.children}\r\n    </TouchableOpacity>\r\n  </View>\r\n    \r\n  \r\n}\r\n\r\nconst VideoCallContainer = ({channel_id, disable, setDisable}:VideoCallProps)=>{\r\n  const {auth} = useAuthContext()\r\n  const [videoMode, setVideoMode] = useState<VideoType>(null)\r\n  const [guests, setGuests] = useState<string[]>([])\r\n  const [focusGuest, setFocusGuest] = useState<string>()\r\n  const windowType = useResizeWindow()\r\n  const { lastJsonMessage, sendJsonMessage } = useRtcContext()\r\n  useEffect(()=>{\r\n    if(lastJsonMessage !=null){\r\n      if(lastJsonMessage['type']=='connection'){\r\n        sendJsonMessage({'type':'broadcast', 'data':{'channel_id':channel_id}})\r\n      }\r\n      if(lastJsonMessage['type']=='broadcast_guest' || lastJsonMessage['type']=='broadcast_host'){\r\n        setGuests([...guests, lastJsonMessage['sender']])\r\n      }\r\n      if(lastJsonMessage['type']=='broadcast_disconnect'){\r\n        const channel_name = lastJsonMessage['sender']\r\n        const exist = guests.find(v=>v == channel_name)\r\n        exist && setGuests(guests.filter(v=>v != channel_name))\r\n      }\r\n    }\r\n  }, [lastJsonMessage])\r\n  const scale = focusGuest?'100%':`${100 / Math.max(2, Math.ceil(Math.sqrt(guests.length + 1)))}%`\r\n  const toggleVideoMode = (mode:VideoType)=>{\r\n    setVideoMode(videoMode!=mode?mode:null)\r\n  }\r\n  return lastJsonMessage !==undefined ?\r\n    <ThemedView style={[\r\n      {aspectRatio:!disable?16/9:0, borderColor:Colors.borderColor, borderRadius:10},\r\n      windowType=='landscape'?{flexShrink:0.5, height:'100%', borderLeftWidth:1, paddingBottom:65}:{maxHeight:'36%', width:'100%', borderBottomWidth:1}\r\n    ]}>\r\n      <View style={{aspectRatio:16/9, backgroundColor:'white', flexWrap:'wrap', flexDirection:'row', width:'100%', height:'100%'}}>\r\n        {guests.map((receiver, i)=><VideoView scale={scale} focusGuest={focusGuest} setFocusGuest={setFocusGuest} receiver={receiver}>\r\n          <RemoteCam receiver={receiver}/>\r\n        </VideoView>\r\n        )}\r\n        <VideoView scale={scale} focusGuest={focusGuest} setFocusGuest={setFocusGuest} receiver={auth.user?.name}>\r\n          <LocalCam user={auth.user} mode={videoMode}/>\r\n        </VideoView>\r\n      </View>\r\n      <ThemedView style={[\r\n          {position:'absolute', alignItems:'center', justifyContent:'flex-end', width:'100%',flexDirection:'row'},\r\n          windowType=='landscape'?{bottom:0, paddingVertical:15, paddingHorizontal:19}:{backgroundColor:'transparent'}\r\n        ]}>\r\n        <CommonButton title={'⏺️'} onPress={()=>toggleVideoMode('camera')}/>\r\n        <CommonButton title={'🖥️'} onPress={()=>toggleVideoMode('display')}/>\r\n        <CommonButton title={'📹'} onPress={()=>setDisable(true)}/>\r\n      </ThemedView>\r\n    </ThemedView>:\r\n  <></>\r\n  }\r\n  \r\nexport default React.memo(({channel_id, disable, setDisable}:VideoCallProps)=>{\r\n  return <RtcProvider disable={disable}>\r\n    <VideoCallContainer channel_id={channel_id} disable={disable} setDisable={setDisable}/>\r\n  </RtcProvider>\r\n})\r\n","import React from 'react'\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport CommonSection from \"./CommonSection\"\r\nimport { Linking, TextStyle } from \"react-native\"\r\nimport { FontAwesome } from '@expo/vector-icons'; \r\nimport { View, Text } from \"./Themed\"\r\nimport { File } from \"../types\"\r\nimport useColorScheme from '../hooks/useColorScheme';\r\n\r\nfunction humanFileSize(size:number) {\r\n    var i = size == 0 ? 0 : Math.floor(Math.log(size) / Math.log(1024));\r\n    return (size / Math.pow(1024, i)).toFixed(2) + ' ' + ['B', 'kB', 'MB', 'GB', 'TB'][i];\r\n  }\r\n  \r\n\r\nexport default ({file, isMobile, showBorder}:{file:File, isMobile:boolean, showBorder:boolean})=>{\r\n    const theme = useColorScheme()\r\n    return <CommonSection containerStyle={{marginHorizontal:0}} bodyStyle={showBorder?{padding:10}:{borderWidth:0, padding:0}}>\r\n    <TouchableOpacity onPress={()=>Linking.openURL(file.file)} style={{flexDirection:'row', alignItems:'flex-start'}} containerStyle={{width:'100%'}}>\r\n        <FontAwesome name=\"file-o\" size={20} color={theme=='light'?'black':'white'} />\r\n        <View style={{flex:1, marginHorizontal:10}}>\r\n            <Text style={{fontSize:18}}>{file.filename}</Text>\r\n            <Text style={{fontSize:14}}>{humanFileSize(file.filesize)}</Text>\r\n        </View>\r\n    </TouchableOpacity>\r\n    </CommonSection>\r\n}","import React, {useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState} from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { Platform, StyleSheet, View } from 'react-native';\r\nimport CommonSection from '../../../components/CommonSection';\r\nimport { FlatList, TextInput } from 'react-native-gesture-handler';\r\nimport CommonButton from '../../../components/CommonButton';\r\nimport useMessengerContentList, { MessengerContentPage, useMessengerContentMutation } from '../../../hooks/lists/useMessengerContent.List';\r\nimport useAuthContext from '../../../hooks/useAuthContext';\r\nimport HeaderRight from '../../../components/HeaderRight';\r\nimport useMessengerMemberList, { useMessengerMemberMutation } from '../../../hooks/lists/useMessengerMemberList';\r\nimport { navigate } from '../../../navigation';\r\nimport Colors from '../../../constants/Colors';\r\nimport useColorScheme from '../../../hooks/useColorScheme';\r\nimport { Text, View as ThemedView } from '../../../components/Themed' \r\nimport Hyperlink from 'react-native-hyperlink'\r\nimport useMessengerChannelList from '../../../hooks/lists/useMessengerChannelList';\r\nimport useIsMobile from '../../../hooks/useIsMobile';\r\nimport LinkPreview from '../../../components/LinkPreview';\r\nimport lang from '../../../lang'\r\nimport Avatar from '../../../components/Avatar';\r\nimport VideoCallSection from './VideoCallSection';\r\nimport useResizeWindow from '../../../hooks/useResizeWindow';\r\nimport FilePreview from '../../../components/FilePreview';\r\nimport useModalsContext from '../../../hooks/useModalsContext';\r\nimport InviteModal from '../../../modals/InviteModal';\r\n\r\n\r\nfunction uploadFile(){\r\n  return new Promise<Blob|undefined>((resolve, reject)=>{\r\n    if (Platform.OS == 'web'){\r\n      var input = document.createElement('input');\r\n      input.type = 'file';\r\n      input.onchange = e => { \r\n        resolve((e.target as any).files[0])\r\n      }\r\n      input.onabort = reject\r\n      input.onerror = reject\r\n      input.click();\r\n    }\r\n    else\r\n      resolve(undefined)\r\n  })\r\n}\r\n\r\nconst MessengerContentPageItem = React.memo((props:MessengerContentPage & {ownerId?:number})=>{\r\n  const isMobile = useIsMobile()\r\n  let nextPage = props.next;\r\n    while(nextPage?.next && nextPage.current.length==0){\r\n      nextPage = nextPage.next\r\n    }\r\n    const nextContent = nextPage?.current[0]\r\n    return <View style={{flexDirection: 'column-reverse'}}>\r\n      \r\n      {props.current.map((content, index2)=>{\r\n        const next = index2 + 1 < props.current.length?props.current[index2+1]:nextContent\r\n        const created:string = content.created.slice(0, 16)\r\n        const date = created.slice(0, 10)\r\n        const isSystem = content.user == null\r\n        const isFirst = next==undefined || (content.user != next.user || created != next.created.slice(0, 16))\r\n        const isSelf = props.ownerId == content.user\r\n        const dayChanged = next==undefined || date != next.created.slice(0, 10)\r\n        const message = content.message_set[0]\r\n        if (isSystem)\r\n          return <View key={content.id} style={{flexDirection:'row', justifyContent:'center', width:'100%', marginVertical:5}}>\r\n            <Text>{message.content}</Text>\r\n          </View>\r\n        return <View key={content.id}>\r\n          {dayChanged?<View style={{flexDirection:'row', justifyContent:'center', width:'100%'}}><Text>{date}</Text></View>:undefined}\r\n          <View key={content.id} style={{flexDirection:'row', justifyContent:isSelf?'space-between':'flex-start', width:'100%'}}>\r\n            {isFirst && !isSelf? <View style={{marginTop:3, marginLeft:12}}><Avatar name={content.name} userId={content.user} size={36}/></View>:<View style={{width:48}}/>}\r\n            <CommonSection outerContainerStyle={{width:undefined, maxWidth:'90%'}} title={isFirst?content.name:undefined} titleStyle={{flex:undefined}} bodyStyle={{padding:10}} subtitle={`${created.slice(11)}`}>\r\n              {/* @ts-ignore */}\r\n              <Hyperlink linkDefault={ true } style={{wordBreak:\"break-word\"}} linkStyle={{color: '#12b886'}}>\r\n                <Text selectable>{message.content}</Text>\r\n              </Hyperlink>\r\n              {content.file_set.map((file, fileIndex)=><FilePreview key={fileIndex} file={file} isMobile={isMobile} showBorder={content.file_set.length>1 || message.content.length>0}/>)}\r\n              {content.link_set.map((link, linkIndex)=><LinkPreview key={linkIndex} link={link} isMobile={isMobile}/>)}              \r\n            </CommonSection>\r\n          </View>\r\n        </View>\r\n      })}\r\n    </View>\r\n\r\n})\r\n\r\nexport default function ChatScreen({navigation, route}: StackScreenProps<any, 'Chat'>) {\r\n  const channel_id = route?.params?.id\r\n  const height = useRef(0)\r\n  const inputRef = useRef<TextInput>(null)\r\n  const {auth} = useAuthContext()\r\n  const { setModal } = useModalsContext()\r\n  const channel = useMessengerChannelList(auth)?.find(v=>v.id==parseInt(channel_id))\r\n  const {data, fetchNextPage } = useMessengerContentList(channel_id)\r\n  const memberList = useMessengerMemberList(channel_id)\r\n  const member_id = useMemo(()=>memberList?.find(v=>v.user == auth.user?.id)?.id, [auth, memberList])\r\n  const windowType = useResizeWindow()\r\n  const messengerMemberMutation = useMessengerMemberMutation()\r\n  const [value, setValue] = useState('')\r\n  const [autoFocus, setAutoFocus] = useState(true)\r\n  const [videoMode, setVideoMode] = useState<boolean>(false)\r\n  const theme = useColorScheme()\r\n  const postValue = ()=>{\r\n    if (value.length>0){\r\n      contentMutation.create({channel:channel_id, user:auth.user?.id, content:value})\r\n      setValue('')\r\n      setAutoFocus(true)\r\n    }\r\n  }\r\n  const contentMutation = useMessengerContentMutation()\r\n\r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      headerRight: ()=> <HeaderRight extra={[\r\n        {title:lang('invite'), onPress:()=>setModal(InviteModal, {id:channel_id})},\r\n        {title:lang('leave'), onPress:()=>{member_id && messengerMemberMutation.leave(member_id);back()}}\r\n      ]}/>,\r\n      title: channel?.name\r\n    });\r\n  }, [navigation, route, member_id]);\r\n\r\n  const renderItem = useCallback(({item, index}:{item:MessengerContentPage, index:number})=><MessengerContentPageItem {...item} ownerId={auth.user?.id}/>, [auth])\r\n  \r\n  const back = ()=>{\r\n    if(navigation.canGoBack())\r\n        navigation.goBack()\r\n      else{\r\n        navigation.navigate('HomeScreen', {tab:2})\r\n      }\r\n  }\r\n  useEffect(()=>{\r\n    if (!(channel_id))\r\n      back()\r\n  }, [])\r\n  useEffect(()=>{\r\n    if(autoFocus){\r\n      (inputRef.current as any).focus()\r\n      setAutoFocus(false)\r\n    }\r\n  }, [autoFocus])\r\n\r\n  return <View style={{flex:1, alignItems:'center', flexDirection:windowType=='landscape'?'row-reverse':'column'}}>\r\n    <VideoCallSection channel_id={channel_id} setDisable={(d)=>setVideoMode(!d)} disable={!videoMode}/>\r\n    <View style={[{flex:videoMode?undefined:1, flexShrink:1}, windowType=='landscape'?{minWidth:320, height:'100%'}:{width:'100%'}]}>\r\n      <FlatList\r\n        style={{flexDirection: 'column-reverse'}}\r\n        contentContainerStyle={{padding:10, flexGrow:1, flexDirection: 'column-reverse'}}\r\n        data={data?.pages}\r\n        renderItem={renderItem}\r\n        onScroll={(e)=>{\r\n          if (e.nativeEvent.contentOffset.y + e.nativeEvent.contentSize.height - height.current < 1)\r\n            fetchNextPage()\r\n        }}\r\n        onLayout={(p)=>{height.current = p.nativeEvent.layout.height}}\r\n      />\r\n      <ThemedView style={{bottom:0, alignItems:'center', width:'100%',flexDirection:'row', paddingTop:15, paddingBottom:10, paddingHorizontal:19}}>\r\n        <TextInput ref={inputRef} value={value} onChangeText={setValue} style={{\r\n          flex:1, borderWidth:1, height:40, borderRadius:6, borderColor:Colors.borderColor, backgroundColor:Colors[theme].background, color:Colors[theme].text\r\n        }} onSubmitEditing={postValue} blurOnSubmit={true}/>\r\n        <CommonButton title={'💬'} onPress={postValue}/>\r\n        <CommonButton title={'📤'} onPress={()=>uploadFile().then(f=>{\r\n          contentMutation.create({channel:channel_id, user:auth.user?.id, content:'', file:f})\r\n        })}/>\r\n        {!videoMode && <CommonButton title={'📹'} onPress={()=>setVideoMode(!videoMode)}/>}\r\n      </ThemedView>\r\n    </View>\r\n  </View>\r\n}","import React, {useCallback, useRef} from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { StyleSheet, Text, Button, View} from 'react-native';\r\n\r\n\r\nexport default function TabOneScreen({\r\n  navigation\r\n}: StackScreenProps<any, 'TabOne'>) {\r\n  return <View style={{padding:10}}>\r\n    \r\n  </View>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  Panel_Button_Text: {\r\n    textAlign: 'center',\r\n    color: '#fff',\r\n    fontSize: 21\r\n  },\r\n  Panel_Holder: {\r\n    borderWidth: 1,\r\n    borderColor: '#888',\r\n    marginVertical: 5\r\n  }\r\n})","import LoginScreen from \"./main/LoginScreen\";\r\nimport ChatScreen from \"./main/ChatScreen\";\r\nimport HomeScreen from \"./main/HomeScreen\";\r\nimport TabOneScreen from \"./main/TabOneScreen\";\r\n// import BoardScreen from \"../lib/blacktokki-board/BoardScreen\";\r\n// import BoardEditScreen from \"../lib/blacktokki-board/BoardEditScreen\";\r\nimport { Screens } from \"../types\";\r\nimport lang from \"../lang\"\r\n\r\nexport const main = {\r\n    HomeScreen:{\r\n        title:lang('home'),\r\n        component:HomeScreen,\r\n        path:'home',\r\n    },\r\n    ChatScreen:{\r\n        title:lang('chat'),\r\n        component:ChatScreen,\r\n        path:'chat'\r\n    },\r\n    // BoardScreen:{\r\n    //     title:'board',\r\n    //     component:BoardScreen,\r\n    //     path:'board'\r\n    // },\r\n    TabOneScreen:{\r\n        title:'tab one',\r\n        component:TabOneScreen,\r\n        path:'one'\r\n    },\r\n} as Screens\r\n\r\nexport const login = {\r\n    LoginScreen:{\r\n        path: 'login',\r\n        title: lang('Sign in'),\r\n        component:LoginScreen\r\n    },\r\n} as Screens\r\n\r\nexport const modal = {\r\n    // BoardEditScreen:{\r\n    //     title:'board',\r\n    //     component:BoardEditScreen,\r\n    //     path:'modal/board'\r\n    // },\r\n} as Screens","import React, {useLayoutEffect} from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { StyleSheet, Text, Button, View} from 'react-native';\r\nimport { Text as StyledText } from 'react-native-paper';\r\nimport {TabViewNavigator} from '../../navigation/DrawerNavigator';\r\nimport useResizeWindow from '../../hooks/useResizeWindow';\r\nimport { bottomTabs } from '../../tabs';\r\nimport HeaderRight from '../../components/HeaderRight';\r\nimport TextButton from '../../components/TextButton';\r\nimport Colors from '../../constants/Colors';\r\nimport useColorScheme from '../../hooks/useColorScheme';\r\nimport lang from '../../lang'\r\nimport useModalsContext from '../../hooks/useModalsContext';\r\nimport ChannelEditModal from '../../modals/ChannelEditModal';\r\n\r\n// navigate(\"BoardEditScreen\", {channel_id:item.channel, id:item.id})\r\n// deleteBoardContent(item.id).then(()=>navigate('BoardScreen', {id:item.channel}))\r\n\r\nexport default function HomeScreen({navigation, route}: StackScreenProps<any, 'Home'>) {\r\n  const windowType = useResizeWindow();\r\n  const theme = useColorScheme()\r\n  const { setModal } = useModalsContext()\r\n  const color = Colors[theme].text\r\n  const options = [\r\n    {title:lang('member'), headerRight:()=><HeaderRight/>},\r\n    {title:lang('messenger'), headerRight:()=><HeaderRight extra={[{title:lang('create'), onPress:()=>setModal(ChannelEditModal, {type:'messenger'})}]}/>},\r\n    // {title:'board', headerRight:()=><HeaderRight extra={[{title:'create', onPress:()=>setModal(ChannelEditModal, props:{type:'board'}}) }]}/>},\r\n    {title:'config', headerRight:()=><HeaderRight/>}\r\n  ]\r\n  \r\n  useLayoutEffect(() => {\r\n    const index = route?.params?.tab | 0\r\n    navigation.setOptions(windowType == 'portrait'?options[index]:{\r\n      title: lang('home'),\r\n      headerRight: ()=><HeaderRight/>\r\n    });\r\n  }, [navigation, route, windowType]);\r\n  return <>\r\n    {windowType == 'landscape'?\r\n      <View style={{flex:1, justifyContent:'center', alignItems:'center'}}>\r\n        <View style={{width:'80%', height:'80%'}}>\r\n          <StyledText style={{fontSize:32, color}}>Tokki Tok</StyledText>\r\n          <View style={{backgroundColor:Colors.borderColor, height:1, width:'100%'}}/>\r\n          <View style={{flex:1, alignItems:'flex-start'}}>\r\n            {/* <Text style={{fontSize:20, color:'gray'}}>Welcome! This is a messenger for teams.</Text>*/}\r\n            <Text style={{fontSize:24}}> </Text>\r\n            <Text style={{fontSize:24, fontWeight:'500', color}}>{lang('Quick Start')}</Text>\r\n            <TextButton title={lang('+ New Messenger')} textStyle={{fontSize:20, color}} style={{paddingLeft:0, borderRadius:20}} onPress={()=>setModal(ChannelEditModal, {type:'messenger'})}/>\r\n            {/* <TextButton title='+ New Board' textStyle={{fontSize:20}} style={{paddingLeft:0, borderRadius:20}} onPress={()=>setModal(ChannelEditModal, props:{type:'board'}})}/> */}\r\n          </View>\r\n        </View>\r\n      </View>:<></>}\r\n      <View style={windowType == 'portrait'?{flex:1}:{width:0, flex:0}}>\r\n        <TabViewNavigator tabs={bottomTabs} tabBarPosition=\"bottom\" index={parseInt(route.params?.['tab'] || 0)} onTab={(index)=>{navigation.setParams({tab:index})}}/>\r\n      </View>\r\n  </>\r\n}\r\n\r\n","import React, { Context, createContext,  useContext, useEffect, useState } from \"react\"\r\nimport useWebSocket from \"react-use-websocket\"\r\nimport { SendJsonMessage } from \"react-use-websocket/dist/lib/types\"\r\n// @ts-ignore\r\nimport {API_URL} from \"@env\"\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { AppState, AppStateStatus } from \"react-native\";\r\n\r\ntype WebsocketContextType = {lastJsonMessage:any, sendJsonMessage:SendJsonMessage }\r\nconst WebSocketContext = createContext<WebsocketContextType>({lastJsonMessage:undefined, sendJsonMessage:()=>{}});\r\nconst [SCHEMA, DOMAIN] = `${API_URL}`.split('://')\r\n\r\nexport const WebSocketInternalProvider = ({children, path, Context, useBackground}:{children:React.ReactNode, path:string, Context:Context<WebsocketContextType>, useBackground?:boolean})=>{\r\n  const [token, setToken] = useState<string|null>(null)\r\n  const [isActive, setIsActive] = useState<boolean>(useBackground || AppState.currentState == 'active')\r\n  const { lastJsonMessage, sendJsonMessage } = useWebSocket(`${SCHEMA=='https'?'wss':'ws'}://${DOMAIN}/${path}`,{\r\n    shouldReconnect: (closeEvent) => true,\r\n    protocols: token?['Authorization',  token]:undefined,\r\n    onOpen: (e)=>{console.log(`success websocket connection(${path})`)},\r\n    onClose: (e)=> {console.log(`closed websocket connection(${path})`)},\r\n  }, isActive && token!=null)\r\n  useEffect(()=>{\r\n    AsyncStorage.getItem('Authorization').then(setToken)\r\n    const onChange = (nextState:AppStateStatus)=>setIsActive(useBackground || nextState == 'active')\r\n    AppState.addEventListener(\"change\", onChange)\r\n    return ()=>AppState.removeEventListener(\"change\", onChange)\r\n  }, [])\r\n  return (token==null)?<>{children}</>:<Context.Provider value={{lastJsonMessage, sendJsonMessage}}>\r\n      {children}\r\n    </Context.Provider>\r\n}\r\n\r\nexport const WebSocketProvider = React.memo(({disable, children}:{disable?:boolean, children:React.ReactNode})=>{\r\n  return disable?<>{children}</>:<WebSocketInternalProvider path={'messenger/ws/'} Context={WebSocketContext}>\r\n    {children}\r\n  </WebSocketInternalProvider>\r\n})\r\n\r\nexport default ()=>{\r\n  const webSocketContext = useContext(WebSocketContext)\r\n  return webSocketContext\r\n}\r\n\r\n","import React, { useState } from 'react';\r\nimport { StyleSheet} from 'react-native';\r\nimport { CustomButtonProps } from '../types';\r\nimport CommonButton from './CommonButton';\r\n\r\nexport default (props:CustomButtonProps)=>{\r\n    return <CommonButton {...props} style={[styles.style, props.style]}/>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    style:{\r\n        borderRadius:6, \r\n        backgroundColor: 'transparent',\r\n        borderWidth:0\r\n    },\r\n});\r\n","import React, { useMemo } from 'react';\r\n\r\nimport { TextProps, StyleProp } from 'react-native';\r\nimport {View, Text } from './Themed'\r\nimport useResizeWindow from '../hooks/useResizeWindow';\r\n\r\ntype Props = {\r\n  name: string,\r\n  width?:number,\r\n  children: React.ReactNode\r\n  textStyle?: StyleProp<TextProps>\r\n}\r\n\r\nexport default function RowField(props:Props) {\r\n  const windowType = useResizeWindow()\r\n  const rowStyle = useMemo(()=>windowType=='landscape'?\r\n    {flexDirection:'row', alignItems: 'center', justifyContent:'space-between'}:\r\n    {flexDirection:'column', alignItems:'flex-start'} as any\r\n  , [windowType])\r\n  return (\r\n    <View style={[{paddingVertical:5, width:'100%'}, rowStyle]}>\r\n        <Text style={[windowType=='landscape'?{flex:1}:{width:'100%'},{paddingHorizontal: 15, fontSize:16}, props.textStyle]}>{props.name}</Text>\r\n        <View style={[windowType=='landscape'?{flex:6}:{width:'100%'},{paddingHorizontal: 15}]}>\r\n          <View style={{width:props.width}}>\r\n            {props.children}\r\n          </View>\r\n        </View>\r\n    </View>\r\n  )\r\n}","import React from 'react';\r\nimport { StyleProp, TextStyle } from 'react-native';\r\nimport { CustomTextInputProps } from '../types';\r\nimport CommonTextInput from './CommonTextInput';\r\nimport RowField from './RowField';\r\n\r\nexport default function TextField(props:CustomTextInputProps & {name: string, width?:any, textStyle?:StyleProp<TextStyle>}) {\r\n  return (\r\n    <RowField name={props.name} width={props.width} textStyle={props.textStyle}>\r\n      <CommonTextInput {...props} />\r\n   </RowField>\r\n  )\r\n}","import React, {useState, useEffect } from 'react';\r\nimport { StyleSheet } from 'react-native';\r\nimport CommonSection from '../components/CommonSection';\r\nimport { View, Text } from '../components/Themed';\r\nimport CommonButton from '../components/CommonButton';\r\n// import useBoardChannelList, { useBoardChannelMutation } from '../hooks/lists/useBoardChannelList';\r\nimport useAuthContext from '../hooks/useAuthContext';\r\nimport { navigate } from '../navigation';\r\nimport { Channel } from '../types';\r\nimport useMessengerChannelList, { useMessengerChannelMutation } from '../hooks/lists/useMessengerChannelList';\r\nimport TextField from '../components/TextField';\r\nimport lang from '../lang'\r\nimport useModalsContext from '../hooks/useModalsContext';\r\n\r\nexport default function ChannelEditModal({id, type}: {id?:number, type:string}) {\r\n  const {auth} = useAuthContext()\r\n  const { setModal } = useModalsContext()\r\n  const channelList = useMessengerChannelList(auth)\r\n  const channelMutation = useMessengerChannelMutation()\r\n  const channel = channelList?.find(v=>v.id==id)\r\n  const [name, setName] = useState('')\r\n  const [description, setDescription] = useState('')\r\n  const back = ()=>{\r\n    setModal(ChannelEditModal, null)\r\n  }\r\n  useEffect(()=>{\r\n    if (channel){\r\n      setName(channel.name)\r\n      setDescription(channel?.description || '')\r\n    }\r\n  }, [channel])\r\n  return <CommonSection outerContainerStyle={{alignSelf:'center'}}>\r\n    <View style={{justifyContent:'space-around'}}>\r\n    <Text style={{fontSize:20}}>{lang('Channel')}</Text>\r\n    </View>\r\n    <View style={styles.separator} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />\r\n    <View style={{width:'100%'}}>\r\n      <TextField name={lang('Channel Name')} value={name} setValue={setName} width={'60%'}/>\r\n      <TextField name={lang('Description')} value={description} setValue={setDescription} multiline width={'60%'}/>\r\n    </View>\r\n    <View style={{width:'100%', flexDirection:'row', justifyContent:'flex-end'}}>\r\n      <CommonButton title={lang('save')} onPress={()=>{\r\n        if(auth?.user?.id && auth.groupId){\r\n          const newChannel:Channel = {id, name, description, type, owner:auth?.user?.id, group:auth.groupId};\r\n          (id?channelMutation.update(newChannel):channelMutation.create(newChannel)).then(v=>navigate(\"Main\", {\r\n            screen:v.type == 'messenger'?'MessengerScreen':'BoardScreen',\r\n            params:{id:v.id}\r\n          }))\r\n        }\r\n      }}/>\r\n      <CommonButton title={lang('cancel')} style={{marginHorizontal:5}} onPress={back}/>\r\n    </View>\r\n  </CommonSection>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  field:{\r\n    width:'50%',\r\n    flexDirection:'row',\r\n    padding:10,\r\n  },\r\n  separator: {\r\n    marginBottom: 20,\r\n    height: 1,\r\n    width: '100%',\r\n  },\r\n})","import { Notification } from '../types';\r\nimport axios from './axios';\r\n\r\nexport const getNotification = async (user_id:number)=>{\r\n    const data = (await axios.get(`/api/v1/notifications/?type=WEB&user=${user_id}`) ).data as Notification[]\r\n    return data.length?data[0]:undefined\r\n}\r\n\r\nexport const postNotification = async(notification:Notification)=>{\r\n    return (await axios.post(`/api/v1/notifications/`, notification)).data as Notification\r\n}\r\n\r\nexport const putNotification = async(notification:Notification)=>{\r\n    return (await axios.put(`/api/v1/notifications/${notification.id}/`, notification)).data as Notification\r\n}","import { Platform } from 'react-native';\r\n//@ts-ignore\r\nimport useMobileDetect from 'use-mobile-detect-hook';\r\n\r\nexport default ()=>{\r\n    const detectMobile = useMobileDetect();\r\n    return (detectMobile.isMobile() || Platform.OS == 'android' || Platform.OS == 'ios') as boolean\r\n}","import { useQuery } from \"react-query\";\r\nimport { getUserMembershipList } from \"../../apis\";\r\nimport { Auth } from \"../useAuthContext\";\r\n\r\nexport default function useUserMembershipList(auth?:Auth){\r\n  const { data } = useQuery([\"UserMembershipList\", auth?.groupId] , async()=>auth?.groupId?(await getUserMembershipList(auth?.groupId)):[])\r\n  return data\r\n}","import * as React from 'react';\r\nimport { View } from './Themed';\r\nimport { StyleSheet, StyleProp, ViewStyle, TextStyle, Pressable } from 'react-native';\r\nimport Colors from '../constants/Colors';\r\n\r\nexport type ItemParamList = {\r\n    outerContainerStyle?:StyleProp<TextStyle>\r\n    containerStyle?:StyleProp<ViewStyle>\r\n    bodyStyle?:StyleProp<ViewStyle>\r\n    children?: React.ReactNode\r\n    onPress?: ()=>void\r\n}\r\n\r\nexport default function CommonItem(props:ItemParamList){\r\n  const [hover, setHover] = React.useState(false)\r\n  const [press, setPress] = React.useState(false)\r\n  return (\r\n    <Pressable\r\n      style={[styles.outerContainer ,props.outerContainerStyle, (press)?{backgroundColor:'rgb(242,242,242)'}:{}]}\r\n      onPressIn={()=>{setPress(true)}}\r\n      onPressOut={()=>{setPress(false);props.onPress?.()}}\r\n       //@ts-ignore\r\n       onHoverIn={()=>setHover(true)}\r\n       onHoverOut={()=>setHover(false)}\r\n    >\r\n        <View style={[styles.container ,props.containerStyle]}>\r\n            <View style={[styles.bodyView, props.bodyStyle]}>\r\n                <>{props.children}</>\r\n            </View>\r\n      </View>\r\n    </Pressable>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  outerContainer:{\r\n    width:'100%',\r\n    maxWidth:1080,\r\n    alignItems:'stretch',\r\n  },  \r\n  container: {\r\n      marginHorizontal:20,\r\n      backgroundColor:'transparent'\r\n    },\r\n    bodyView:{\r\n      width: '100%',\r\n      padding: 10,\r\n      minHeight: 40,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      borderBottomWidth:1,\r\n      borderColor:Colors.borderColor,\r\n      backgroundColor:'transparent'\r\n    }\r\n  });\r\n  ","import * as React from 'react';\r\nimport { Avatar } from 'react-native-paper';\r\nimport { AvatarProps } from '../../types';\r\n\r\nconst normalizeHash = (hash: number, min: number, max: number) => {\r\n    return Math.floor((hash % (max - min)) + min);\r\n};\r\n\r\nconst stringToHSL = (str: string, initHash?:number) => {\r\n    let hash = initHash || 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\r\n    }\r\n    hash = Math.abs(hash);\r\n    return `hsl(${normalizeHash(hash, 0, 360)}, ${normalizeHash(hash, 0, 100)}%, ${normalizeHash(hash, 25, 75)}%)`;\r\n};\r\n\r\nexport default (props:AvatarProps) => {\r\n    const backgroundColor = stringToHSL(props.name, props.userId)\r\n    return <Avatar.Text style={{backgroundColor}} size={props.size} label={props.name.split(' ').map(v=>v[0]).join().toUpperCase()} />\r\n};","import React from 'react';\r\n// import { MaterialIcons } from \"@expo/vector-icons\"\r\nimport Avatar from '../lib/react-native-paper/Avatar';\r\nimport { AvatarProps } from '../types';\r\n\r\nexport default (props:AvatarProps)=>{\r\n    // return <MaterialIcons size={38} style={{ marginBottom: -3, marginRight:10 }} name='account-circle'/>\r\n    return <Avatar {...props}/>\r\n}\r\n\r\n","import { useMutation, useQuery, useQueryClient } from \"react-query\";\r\nimport { postBulkMessengerMember, deleteMessengerMember, getMessengerMemberList } from \"../../apis\";\r\n\r\nexport default function useMessengerMemberList(channel_id:number){\r\n  const { data } = useQuery([\"MessengerMemberList\", channel_id] , async()=>await getMessengerMemberList(channel_id))\r\n  return data\r\n}\r\n\r\n\r\nexport function useMessengerMemberMutation(){\r\n  const queryClient = useQueryClient()\r\n  const invite = useMutation(postBulkMessengerMember, {\r\n    onSuccess: ()=>{\r\n      queryClient.invalidateQueries(\"MessengerMemberList\")\r\n    }\r\n  })\r\n\r\n  const leave = useMutation(deleteMessengerMember, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(\"MessengerChannelList\")\r\n      queryClient.invalidateQueries(\"MessengerMemberList\")\r\n    }\r\n  })\r\n  return {invite:invite.mutate, leave:leave.mutate}\r\n}","import React from \"react\"\r\nimport { View, Text } from \"../components/Themed\"\r\nimport CommonItem from \"../components/CommonItem\"\r\n// import useBoardChannelList from \"../lib/blacktokki-board/useBoardChannelList\"\r\nimport { useMessengerChannelSorted } from \"../hooks/lists/useMessengerChannelList\"\r\nimport useAuthContext from \"../hooks/useAuthContext\"\r\nimport { navigate } from \"../navigation\"\r\n\r\nconst DrawerTab = (props:{data:{name:string, onPress?:()=>void}[]})=><View style={{flex:1}}>\r\n    {props.data.map((item, index)=><CommonItem key={index} containerStyle={{marginHorizontal:0}} bodyStyle={{alignItems:'flex-start'}} onPress={item.onPress}>\r\n        <Text style={{marginLeft:20}}>{item.name}</Text>\r\n    </CommonItem>\r\n    )}\r\n</View>\r\n\r\nexport default {\r\n    Messenger:()=>{\r\n        const {auth} = useAuthContext()\r\n        const channelList = useMessengerChannelSorted(auth);\r\n        return <DrawerTab data={(channelList || []).map(item=>({...item, onPress:()=>navigate(\"ChatScreen\", {id:item.id})}))}/>\r\n    },\r\n    // Board:()=>{\r\n    //     const {auth} = useAuthContext()\r\n    //     const channelList = useBoardChannelList(auth);\r\n    //     return <DrawerTab data={(channelList || []).map(item=>({...item, onPress:()=>navigate(\"BoardScreen\", {id:item.id})}))}/>\r\n    // },\r\n}","import { Ionicons, FontAwesome } from \"@expo/vector-icons\"\r\nimport React from \"react\"\r\nimport { Text, View } from \"react-native\"\r\nimport CommonItem from \"../components/CommonItem\"\r\nimport useAuthContext from \"../hooks/useAuthContext\"\r\nimport { useMessengerChannelSorted } from \"../hooks/lists/useMessengerChannelList\"\r\nimport { navigate } from \"../navigation\"\r\n\r\nexport default ()=>{\r\n    const {auth} = useAuthContext()\r\n    const channelList = useMessengerChannelSorted(auth)\r\n    const today = (new Date()).toISOString().slice(0, 10)\r\n    return <View style={{flex:1, backgroundColor:'white'}}>\r\n        {channelList?.map((item, index)=>{\r\n            const date = item.last_message?.created.slice(0,10)\r\n            return <CommonItem key={index} bodyStyle={{flexDirection:'row', justifyContent:'space-between'}} onPress={()=>navigate(\"ChatScreen\", {id:item.id})}>\r\n                <View style={{flexDirection:'row'}}>\r\n                    <FontAwesome size={36} style={{ marginBottom: -3, marginRight:20 }} name='users'/>\r\n                    <View>\r\n                        <View style={{flexDirection:'row'}}>\r\n                            <Text style={{fontSize:18}}>{item.name}</Text>\r\n                            <Text style={{fontSize:18, opacity: 0.4, paddingLeft:5}}>{item.member_count}</Text>\r\n                        </View>\r\n                        <Text style={{fontSize:16, opacity: 0.4}}>{item.last_message?.content}</Text>\r\n                    </View>\r\n                </View>\r\n                <View>\r\n                    <Text style={{fontSize:14, opacity: 0.4, textAlign:'right'}}>{date==today?item.last_message?.created.slice(11,16):date}</Text>\r\n                    <Text style={{fontSize:14, textAlign:'right'}}>{item.unread_count?item.unread_count:' '}</Text>\r\n                </View>\r\n            </CommonItem>\r\n        })}\r\n    </View>\r\n}\r\n\r\nexport const MessengerIcon = <Ionicons size={30} style={{ marginBottom: -3 }} name='chatbox'/>","import React from \"react\";\r\nimport MemberTab, {MemberIcon} from \"./MemberTab\";\r\nimport OneTab, {ConfigIcon} from \"./OneTab\";\r\nimport DrawerTab  from './DrawerTab';\r\nimport MessengerTab, {MessengerIcon} from \"./MessengerTab\";\r\nimport lang from \"../lang\"\r\n// import BoardTab, {BoardIcon}  from \"../lib/blacktokki-board/BoardTab\";\r\n\r\nexport const bottomTabs = {\r\n    OneTab:{\r\n        title:lang('member'),\r\n        component:MemberTab,\r\n        icon:MemberIcon,\r\n    },\r\n    TwoTab:{\r\n        title:lang('messenger'),\r\n        component:MessengerTab,\r\n        icon:MessengerIcon\r\n    },\r\n    // ThreeTab:{\r\n    //     title:'board',\r\n    //     component:BoardTab,\r\n    //     icon:BoardIcon\r\n    // },\r\n    // FourTab:{\r\n    //     title:'config',\r\n    //     component:OneTab,\r\n    //     icon:ConfigIcon\r\n    // }\r\n} as Record<string, {title:string, component:React.ComponentType<any>, icon:JSX.Element}>\r\n\r\nexport const drawerTabs = {\r\n    TwoTab:{\r\n        title:lang('messenger'),\r\n        component:DrawerTab.Messenger,\r\n        icon:MessengerIcon\r\n    },\r\n    // ThreeTab:{\r\n    //     title:'board',\r\n    //     component:DrawerTab.Board,\r\n    //     icon:BoardIcon\r\n    // }\r\n} as Record<string, {title:string, component:React.ComponentType<any>, icon:JSX.Element}>","import { MaterialCommunityIcons } from \"@expo/vector-icons\"\r\nimport React from \"react\"\r\nimport { Text, View } from \"react-native\"\r\nimport CommonItem from \"../components/CommonItem\"\r\nimport useAuthContext from \"../hooks/useAuthContext\"\r\nimport useUserMembershipList from \"../hooks/lists/useUserMembershipList\"\r\nimport { UserMembership } from \"../types\"\r\nimport Avatar from \"../components/Avatar\"\r\nimport useModalsContext from \"../hooks/useModalsContext\"\r\nimport ProfileModal from \"../modals/ProfileModal\"\r\n\r\nexport const renderMemberItem = (item:UserMembership, onPress?:()=>void)=> {\r\n    return <CommonItem key={item.id} bodyStyle={{backgroundColor:'white', flexDirection:'row', justifyContent:'flex-start'}} onPress={onPress}>\r\n        <View style={{marginTop:4, marginRight:12}}><Avatar name={item.name} userId={item.id} size={44}/></View>\r\n        <Text style={{fontSize:20, fontWeight:'400'}}>{item.name}</Text>\r\n    </CommonItem>\r\n}\r\n\r\nexport default ()=>{\r\n    const {auth} = useAuthContext()\r\n    const { setModal } = useModalsContext()\r\n    const userList = useUserMembershipList(auth)\r\n    const memberItem = React.useMemo(\r\n        ()=>userList && userList.map(item=>renderMemberItem(item, ()=>setModal(ProfileModal, {id:item.id}))), [userList])\r\n    return <View style={{flex:1, backgroundColor:'white'}}>\r\n        {memberItem}\r\n    </View>\r\n}\r\n\r\nexport const MemberIcon = <MaterialCommunityIcons size={32} style={{ marginBottom: -3 }} name='account'/>","import React, { useEffect } from 'react';\r\nimport Profile from '../components/Profile';\r\nimport useAuthContext from '../hooks/useAuthContext';\r\nimport useUserMembershipList from '../hooks/lists/useUserMembershipList';\r\nimport { useMessengerChannelMutation } from '../hooks/lists/useMessengerChannelList';\r\nimport CommonButton from '../components/CommonButton';\r\nimport lang from '../lang'\r\nimport useModalsContext from '../hooks/useModalsContext';\r\nimport CommonSection from '../components/CommonSection';\r\nimport { Text, View } from '../components/Themed';\r\n\r\nexport default function GuestLogoutModal({id}:{id:number}) {\r\n  const { setModal } = useModalsContext()\r\n  const {dispatch} = useAuthContext()\r\n  const back = ()=>{\r\n    setModal(GuestLogoutModal, null)\r\n  }\r\n  return <CommonSection outerContainerStyle={{alignSelf:'center'}}>\r\n    <Text>{lang('Guest users cannot reconnect after logging out. Please create an account or log in.')}</Text>\r\n    <View style={{width:'100%', flexDirection:'row', justifyContent:'flex-end'}}>\r\n      <CommonButton title={lang('sign out')} onPress={()=>dispatch({type:\"LOGOUT_REQUEST\"})}/>\r\n      <CommonButton title={lang('cancel')} onPress={()=>back()}/>\r\n    </View>\r\n  </CommonSection>\r\n}\r\n","import React, {useRef,MutableRefObject, useMemo, useState } from 'react';\r\nimport { View, Text } from '../components/Themed';\r\nimport CommonSection from '../components/CommonSection';\r\nimport useAuthContext from '../hooks/useAuthContext';\r\nimport useUserMembershipList from '../hooks/lists/useUserMembershipList';\r\nimport { UserMembership } from '../types';\r\nimport CommonButton from '../components/CommonButton';\r\nimport useMessengerMemberList, { useMessengerMemberMutation } from '../hooks/lists/useMessengerMemberList';\r\nimport { renderMemberItem } from '../tabs/MemberTab';\r\nimport lang from  '../lang'\r\nimport useModalsContext from '../hooks/useModalsContext';\r\n\r\nconst InviteItem = (props:{item:UserMembership, selectedRef:MutableRefObject<Set<number>>})=>{\r\n  const [selected, setSelected] = useState(props.selectedRef.current.has(props.item.id))\r\n  return <View style={selected?{borderWidth:1, borderColor:'blue'}:{}}>\r\n    {renderMemberItem(props.item, ()=>{\r\n      if (selected){\r\n        setSelected(false)\r\n        props.selectedRef.current.delete(props.item.id)\r\n      }\r\n      else{\r\n        setSelected(true)\r\n        props.selectedRef.current.add(props.item.id)\r\n      }\r\n    })}\r\n  </View>\r\n\r\n}\r\n\r\nexport default function InviteModal({id}:{id:number}) {\r\n  const {auth} = useAuthContext()\r\n  const { setModal } = useModalsContext()\r\n  const userList = useUserMembershipList(auth)\r\n  const memberList = useMessengerMemberList(id)\r\n  const messengerMemberMutation = useMessengerMemberMutation()\r\n  const selectedRef = useRef<Set<number>>(new Set())\r\n  const data = useMemo(()=>{\r\n    const memberSet = new Set(memberList?.map(v=>v.user))\r\n    return userList?.filter(v=>!memberSet.has(v.id))\r\n  }, [userList, memberList])\r\n\r\n\r\n  const back = ()=>{\r\n    setModal(InviteModal, null)\r\n  }\r\n\r\n  return <CommonSection outerContainerStyle={{alignSelf:'center'}}>\r\n    <View style={{justifyContent:'space-around'}}>\r\n    <Text style={{fontSize:20}}>{lang('invite')}</Text>\r\n    </View>\r\n    <View style={{marginBottom: 20, height: 1, width: '100%'}} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />\r\n    <View style={{backgroundColor:'white', 'width': '50%'}}>\r\n    {id && data?.map((item, index)=><InviteItem key={index} item={item} selectedRef={selectedRef}/>)}\r\n    </View>\r\n    <View style={[{width:'50%', flexDirection:'row', padding:10,}, {justifyContent:'flex-end'}]}>\r\n      <CommonButton title={lang('invite')} onPress={()=>{\r\n        messengerMemberMutation.invite({\r\n          channel_id:id,\r\n          user_ids:[...selectedRef.current]\r\n        })\r\n        back()\r\n      }}/>\r\n      <CommonButton title={lang('cancel')} onPress={back}/>\r\n    </View>\r\n  </CommonSection>\r\n}\r\n\r\n","import React, { useEffect } from 'react';\r\nimport Profile from '../components/Profile';\r\nimport useAuthContext from '../hooks/useAuthContext';\r\nimport useUserMembershipList from '../hooks/lists/useUserMembershipList';\r\nimport { useMessengerChannelMutation } from '../hooks/lists/useMessengerChannelList';\r\nimport CommonButton from '../components/CommonButton';\r\nimport { DirectChannel } from '../types';\r\nimport { navigate } from '../navigation';\r\nimport lang from '../lang'\r\nimport useModalsContext from '../hooks/useModalsContext';\r\nimport CommonSection from '../components/CommonSection';\r\nimport { Text, View } from '../components/Themed';\r\n\r\nexport default function ProfileModal({id}:{id:number}) {\r\n  const {auth} = useAuthContext()\r\n  const { setModal } = useModalsContext()\r\n  const userList = useUserMembershipList(auth)\r\n  const user = userList?.find(v=>v.id==id)\r\n  const channelMutation = useMessengerChannelMutation()\r\n  const back = ()=>{\r\n    setModal(ProfileModal, null)\r\n  }\r\n  useEffect(()=>{\r\n    if (!(id && user) && userList)\r\n      back()\r\n  }, [userList])\r\n  return user?<CommonSection outerContainerStyle={{alignSelf:'center'}}>\r\n    <View style={{flexDirection:'row', width:'100%'}}>\r\n      <View style={{flex:1}}>\r\n        <CommonButton style={{width:60}} title={'❌'} onPress={back}/>\r\n      </View>\r\n      <View style={{flex:1}}>\r\n        <Text style={{fontSize:20, textAlign:'center'}}>{lang('profile')}</Text>\r\n      </View>\r\n      <View style={{flex:1}}/>\r\n    </View>\r\n    <View style={{marginBottom: 20, height: 1, width: '100%'}} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />\r\n    \r\n    <Profile username={user.username} name={user.name} userId={user.id} />\r\n    <CommonButton title={lang('create messenger')} onPress={()=>{\r\n      if(auth?.user?.id && auth.groupId){\r\n        const newChannel:DirectChannel = {name:auth.user.id!=user.id?`${auth.user.name}, ${user.name}`:auth.user.name, type:'messenger', owner:auth?.user?.id, group:auth.groupId, counterpart:user.id};\r\n        channelMutation.direct(newChannel).then(v=>navigate(\"Main\", {screen:\"ChatScreen\", params: {id:v.id}}))\r\n      }\r\n    }}/>\r\n  </CommonSection>:<></>\r\n}\r\n","/**\r\n * Learn more about Light and Dark modes:\r\n * https://docs.expo.io/guides/color-schemes/\r\n */\r\n\r\nimport * as React from 'react';\r\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\r\n\r\nimport Colors from '../constants/Colors'\r\nimport useColorScheme from '../hooks/useColorScheme';\r\n\r\nexport function useThemeColor(\r\n  props: { light?: string; dark?: string },\r\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\r\n) {\r\n  const theme = useColorScheme();\r\n  const colorFromProps = props[theme];\r\n\r\n  if (colorFromProps) {\r\n    return colorFromProps;\r\n  } else {\r\n    return Colors[theme][colorName];\r\n  }\r\n}\r\n\r\ntype ThemeProps = {\r\n  lightColor?: string;\r\n  darkColor?: string;\r\n};\r\n\r\nexport type TextProps = ThemeProps & DefaultText['props'];\r\nexport type ViewProps = ThemeProps & DefaultView['props'];\r\n\r\nexport function Text(props: TextProps) {\r\n  const { style, lightColor, darkColor, ...otherProps } = props;\r\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\r\n\r\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\r\n}\r\n\r\nexport function View(props: ViewProps) {\r\n  const { style, lightColor, darkColor, ...otherProps } = props;\r\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\r\n\r\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\r\n}\r\n","import React from 'react';\r\nimport {View} from 'react-native'\r\nimport {Text} from './Themed';\r\nimport { ProfileProps } from '../types';\r\nimport Avatar from './Avatar';\r\nimport TextButton from './TextButton';\r\nimport CommonTextInput from './CommonTextInput';\r\nimport { patchUser } from '../apis';\r\nimport useAuthContext from '../hooks/useAuthContext';\r\n\r\nexport default (props:ProfileProps)=>{\r\n    const [name, setName] = React.useState<string>()\r\n    const { auth, dispatch } = useAuthContext()\r\n    const isSelf = auth.user?.id == props.userId\r\n    const onChange = ()=>{\r\n        isSelf && patchUser({id:props.userId, name:name || ''}).finally(()=>{\r\n            setName(undefined)\r\n            dispatch({type:\"REFRESH\"})\r\n        })\r\n    }\r\n    return <View style={{width:'100%', height:135, justifyContent:'space-evenly', alignItems:'center'}}>\r\n        <Avatar {...props} size={75}/>\r\n        {name===undefined?\r\n            <TextButton textStyle={{fontWeight:'bold', fontSize:15}} onPress={()=>isSelf && setName(props.name)} title={props.name} disabled={!isSelf}/>:\r\n            <CommonTextInput value={name} style={{textAlign:'center'}} setValue={setName} onBlur={onChange} onEndEditing={onChange} />}\r\n        <Text style={{fontWeight:'normal', fontSize:14}}>{props.username}</Text>\r\n    </View>\r\n}","import React, { useState } from 'react';\r\nimport { TextInput } from 'react-native';\r\nimport Colors from '../constants/Colors';\r\nimport useColorScheme from '../hooks/useColorScheme';\r\nimport { CustomTextInputProps } from '../types';\r\n\r\nexport default (props:CustomTextInputProps)=>{\r\n    const [contentHeight, setContentHeight] = useState<number>()\r\n    const minHeight = props.minHeight || 30\r\n    const theme = useColorScheme()\r\n    return <TextInput style={[{\r\n            borderColor:'#d0d7de', \r\n            fontSize:16, \r\n            borderWidth:1, \r\n            borderRadius:6, \r\n            paddingHorizontal:10, \r\n            paddingVertical:3, \r\n            backgroundColor:Colors[theme].background,\r\n            color:Colors[theme].text,\r\n            height:props.multiline?contentHeight:minHeight,\r\n        }, props.style]} \r\n        editable={!props.disabled} \r\n        value={props.value} \r\n        onChangeText={props.setValue}\r\n        onContentSizeChange={props.multiline?(e) => setContentHeight(Math.max(e.nativeEvent.contentSize.height, minHeight) + 2):undefined}\r\n        onBlur={()=>props.onBlur?.(props.value)}\r\n        onEndEditing={()=>props.onEndEditing?.(props.value)}\r\n        multiline={props.multiline}\r\n    />\r\n}","import { useTheme } from '@react-navigation/native';\r\nimport React, { useState } from 'react';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport { TabView, SceneMap,NavigationState, SceneRendererProps, TabBar } from 'react-native-tab-view';\r\nimport Profile from '../components/Profile';\r\nimport TextButton from '../components/TextButton';\r\nimport Colors from '../constants/Colors';\r\nimport useResizeWindow from '../hooks/useResizeWindow';\r\nimport { drawerTabs } from '../tabs';\r\nimport { UserMembership } from '../types';\r\nimport useModalsContext from '../hooks/useModalsContext';\r\nimport ChannelEditModal from '../modals/ChannelEditModal';\r\n\r\nexport const TabViewNavigator = (props:{tabs:typeof drawerTabs, tabBarPosition:\"top\"|\"bottom\", index?:number, onTab?:(index:number)=>void})=>{\r\n  const [index, setIndex] = React.useState(props.index || 0);\r\n  const entries = Object.entries(props.tabs)\r\n  const onTab = props.onTab\r\n  const icons = Object.assign({}, ...entries.map(([k, v])=>({[k]:v.icon})))\r\n  return <TabView\r\n    renderTabBar={(props:SceneRendererProps & {navigationState: NavigationState<any>})=>{\r\n      return <TabBar\r\n        {...props}\r\n        indicatorStyle={{ backgroundColor: \"#2196F3\" }}\r\n        style={{ backgroundColor:'white' }}\r\n        activeColor={'black'}\r\n        inactiveColor={'black'}\r\n        renderIcon={(scene)=>icons[scene.route.key]}\r\n        onTabPress={(scene)=>onTab?.(entries.findIndex(([k, v])=>k == scene.route.key))}\r\n      />\r\n    }}\r\n    navigationState={{ index, routes: entries.map(([k, v])=>({key:k, title:v.title}))}}\r\n    onIndexChange={setIndex}\r\n    renderScene={SceneMap(Object.assign({}, ...entries.map(([k, v])=>({[k]:v.component}))))}\r\n    tabBarPosition={props.tabBarPosition}\r\n  />\r\n}\r\n\r\n\r\nexport default React.memo(({user}:{user:UserMembership})=> {\r\n  const { colors } = useTheme();\r\n  const windowType = useResizeWindow();\r\n  const [index, setIndex] = useState(0);\r\n  const { setModal } = useModalsContext()\r\n  const onAddList = [\r\n    ()=>setModal(ChannelEditModal, {type:'messenger'}),\r\n    ()=>setModal(ChannelEditModal, {type:'board'})\r\n  ]\r\n  return windowType=='landscape'?<View\r\n      style={[\r\n        styles.tabBar,\r\n        {\r\n          backgroundColor: colors.card,\r\n          borderTopColor: colors.border,\r\n        },\r\n        // tabBarStyle,\r\n      ]}\r\n      pointerEvents={false ? 'none' : 'auto'}\r\n    >\r\n      <Profile userId={user.id} username={user.username} name={user.name}/>\r\n      <View style={{flexDirection:'row-reverse'}}>\r\n          <TextButton title='+' textStyle={{fontSize:20}} style={{borderRadius:20}} onPress={onAddList[index]}/>\r\n      </View>\r\n      <View accessibilityRole=\"tablist\" style={styles.content}>\r\n        {Object.keys(drawerTabs).length>1 ? \r\n          <TabViewNavigator tabs={drawerTabs} tabBarPosition={\"top\"} onTab={setIndex}/>: \r\n          <View style={{borderTopWidth:1, flex:1, borderColor:colors.border}}>            \r\n            {Object.values(drawerTabs).map(drawerTab=>{const Tab = drawerTab.component; return <Tab key={drawerTab.title}/>})}\r\n          </View>\r\n        }\r\n      </View>\r\n    </View>:<View style={{width:0}}></View>\r\n})\r\n\r\n{/*<Text style={[styles.label, { color: d.isFocused ? colors.primary : '#222' }]}></Text> */}\r\n\r\nconst styles = StyleSheet.create({\r\n    tabBar: {\r\n      width:240,\r\n      elevation: 8,\r\n      borderRightWidth:1,\r\n      borderColor:Colors.borderColor\r\n    },\r\n    content: {\r\n      flex: 1,\r\n      flexDirection: 'row',\r\n    },\r\n    tab: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n    },\r\n    label: {\r\n        textAlign: 'center',\r\n        backgroundColor: 'transparent',\r\n      },\r\n  });","import { createIntl, createIntlCache } from \"@formatjs/intl\";\r\nimport {I18nManager} from \"react-native\";\r\nimport * as RNLocalize from \"react-native-localize\";\r\n\r\nconst translations = {\r\n  ko: require(\"./ko.json\"),\r\n} as const;\r\n\r\ntype Translation = keyof typeof translations;\r\n\r\n// fallback if no available language fits\r\nconst fallback = { languageTag: \"en\", isRTL: false };\r\n\r\nconst { languageTag, isRTL } =\r\n  RNLocalize.findBestLanguageTag(Object.keys(translations)) ?? fallback;\r\n\r\n// update layout direction\r\nI18nManager.forceRTL(isRTL);\r\n\r\n// console.log(languageTag)\r\nconst intl = createIntl(\r\n  {\r\n    defaultLocale: \"en\",\r\n    locale: languageTag,\r\n    messages: translations[languageTag as Translation],\r\n  },\r\n  createIntlCache(),\r\n);\r\n\r\ntype TranslationParams = Parameters<(typeof intl)[\"formatMessage\"]>[1];\r\n\r\nexport default (key: string, params?: TranslationParams) => \r\n  intl\r\n    .formatMessage({ id: key, defaultMessage: key }, params)\r\n    .toString();","/**\r\n * Learn more about deep linking with React Navigation\r\n * https://reactnavigation.org/docs/deep-linking\r\n * https://reactnavigation.org/docs/configuring-links\r\n */\r\n\r\nimport { LinkingOptions } from '@react-navigation/native';\r\nimport * as Linking from 'expo-linking';\r\nimport {main, login, modal} from '../screens';\r\n\r\nconst ROOTPATH = 'tokki-tok'  // github repository name\r\n\r\nObject.values(modal).forEach(v=>v.path = ROOTPATH + '/' + v.path)\r\n\r\nexport default  {\r\n  prefixes: [Linking.makeUrl('/')],\r\n  config: {\r\n    screens: {\r\n      Main: {\r\n        screens:{\r\n          ...main,\r\n          ...login,\r\n          NotFound: '*',\r\n        },\r\n        path: ROOTPATH\r\n      },\r\n      ...modal\r\n    },\r\n  },\r\n} as LinkingOptions;\r\n","import axios, { AxiosRequestConfig } from 'axios';\r\n// @ts-ignore\r\nimport {API_URL} from \"@env\"\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nexport const accountURL =  `${API_URL}/account/`\r\nconst baseURL =  `${API_URL}/messenger/`\r\nconst defaultOption:AxiosRequestConfig = {\r\n    baseURL,\r\n    withCredentials: true,\r\n    headers: {}\r\n};\r\nconst _axios = axios.create(defaultOption);\r\n\r\n_axios.interceptors.request.use(\r\n    config => {\r\n        return config;\r\n    },\r\n    error => {\r\n        return Promise.reject(error);\r\n    }\r\n)\r\n\r\n_axios.interceptors.response.use(\r\n    response => {\r\n        // if((response.request.responseURL as string).indexOf('/task/login')>=0 && response.data.length != 0){\r\n        //     // redirect login\r\n        // }\r\n        return response;\r\n    },\r\n    error => {\r\n        if (error.response.status === 401) {\r\n            return getToken().then(async(token)=>{\r\n                if (token){\r\n                    const r = await _axios.post(\"/api/v1/user/sso/refresh/\", {token}, {headers:{'Authorization':''}, baseURL: accountURL})\r\n                    if (r.status == 200 && r.data !== ''){\r\n                        setToken(r.data)\r\n                    }\r\n                }\r\n            }).finally(()=>{\r\n                return Promise.reject(error)\r\n            })\r\n        }\r\n        return Promise.reject(error)\r\n    }\r\n)\r\n\r\nexport const setToken = async (token:string|null)=>{\r\n    _axios.defaults.headers['Authorization'] = `JWT ${token}`\r\n    if (token)\r\n        await AsyncStorage.setItem(\"Authorization\", token)\r\n    else\r\n        AsyncStorage.removeItem(\"Authorization\")\r\n}\r\nexport const getToken = async ()=>{\r\n    const token = await AsyncStorage.getItem(\"Authorization\")\r\n    _axios.defaults.headers['Authorization'] = token?`JWT ${token}`:null\r\n    return token\r\n}\r\n\r\nexport default _axios\r\n","const tintColorLight = '#2f95dc';\r\nconst tintColorDark = '#fff';\r\n\r\nexport default {\r\n  light: {\r\n    text: '#000',\r\n    background: '#fff',\r\n    tint: tintColorLight,\r\n    tabIconDefault: '#ccc',\r\n    tabIconSelected: tintColorLight,\r\n    header:'#24292f',\r\n    buttonColor:'rgb(242,242,242)',\r\n    buttonBackgroundColor: '#f6f8fa', //'rgba(9,30,66,0.08)',//rgb(242,242,242)\r\n  },\r\n  dark: {\r\n    text: '#fff',\r\n    background: '#000',\r\n    tint: tintColorDark,\r\n    tabIconDefault: '#ccc',\r\n    tabIconSelected: tintColorDark,\r\n    header:'#dbd6d1',\r\n    buttonColor:'rgb(14,14,14)',\r\n    buttonBackgroundColor: '#080604',\r\n  },\r\n  button:{\r\n    borderColor:'rgba(27,31,36,0.15)',\r\n  },\r\n  borderColor:'#d0d7de',\r\n  \r\n  focus:'#0065A4',\r\n};\r\n","import { StackScreenProps } from '@react-navigation/stack';\r\nimport * as React from 'react';\r\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\r\nimport lang from '../lang'\r\n\r\nexport default function NotFoundScreen({\r\n  navigation,\r\n}: StackScreenProps<any, 'NotFound'>) {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>{lang(\"This screen doesn't exist.\")}</Text>\r\n      <TouchableOpacity onPress={() => navigation.replace('HomeScreen')} style={styles.link}>\r\n        <Text style={styles.linkText}>{lang(\"Go to home screen!\")}</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n  link: {\r\n    marginTop: 15,\r\n    paddingVertical: 15,\r\n  },\r\n  linkText: {\r\n    fontSize: 14,\r\n    color: '#2e78b7',\r\n  },\r\n});\r\n","import React, { createContext, useContext, useEffect } from \"react\"\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/messaging\";\r\n//@ts-ignore\r\nimport {FCM_PUBLIC_VAPID_KEY, FCM_API_KEY} from \"@env\"\r\nimport { Notification as NotificationType, UserMembership } from \"../types\";\r\nimport { getNotification, postNotification, putNotification } from \"../apis/notification\";\r\nimport { Auth } from \"./useAuthContext\";\r\nconst firebaseConfig = require(\"../../web/firebase-config.js\")\r\n// Initialize Firebase\r\nconst key = firebaseConfig.messagingSenderId\r\nconst apiKeyEncrypted = (FCM_API_KEY as string).split('').map((v, i)=> (v.charCodeAt(0) ^ key.charCodeAt(i)).toString(16).padStart(2, '0')).join('')\r\nconst app = firebase.initializeApp({...firebaseConfig, apiKey:FCM_API_KEY});\r\n// const analytics = getAnalytics(app);\r\nconst messaging = firebase.messaging(app);\r\n\r\nmessaging.onMessage((payload) => {\r\n  if (!(\"Notification\" in window)) {\r\n    alert(\"This browser does not support desktop notification\");\r\n  }\r\n  else if (Notification.permission === \"granted\") {\r\n    const message_set = JSON.parse(payload.data['message_set'])[0]\r\n    new Notification(payload.data.channel_name, { body: `${payload.data.name}: ${message_set.content}` });\r\n  }\r\n});\r\n\r\nconst requestToken = async()=>{\r\n  const permission = await Notification.requestPermission();\r\n  if (permission === 'granted') {\r\n    const serviceWorkerRegistration = await navigator.serviceWorker.register(`${process.env.PUBLIC_URL}/firebase-messaging-sw.js?${apiKeyEncrypted}`)\r\n    console.log('[SW]: SCOPE: ', serviceWorkerRegistration.scope);\r\n    const currentToken = await messaging.getToken({serviceWorkerRegistration, vapidKey: FCM_PUBLIC_VAPID_KEY })\r\n    window.addEventListener('beforeunload', (event:any) => {\r\n      event.preventDefault();\r\n      serviceWorkerRegistration.unregister()\r\n    });\r\n    if (currentToken)\r\n      return currentToken\r\n  }\r\n  return undefined\r\n}\r\n\r\n\r\nlet noti:NotificationType|undefined\r\n\r\nconst setEnable = async(enable:boolean, user?:UserMembership|null)=>{\r\n  context.enable = enable\r\n  if(user && enable){\r\n    const token = await requestToken() || null\r\n    noti = await getNotification(user.id)\r\n    if (noti == undefined)\r\n      noti = await postNotification({user:user.id, type:'WEB', token})\r\n    else\r\n      noti = await putNotification({...noti, token})\r\n  }\r\n  else if (noti){\r\n    await putNotification({...noti, token:null})\r\n  }\r\n}\r\n\r\nconst context:{enable:boolean, setEnable:(enable:boolean, user?:UserMembership|null)=>void} = {enable:false, setEnable}\r\nconst FirebaseContext = createContext(context);\r\n\r\nexport default (auth:Auth)=>{\r\n  useEffect(()=>{\r\n    setEnable(true, auth.user)\r\n  }, [auth.user])\r\n  const firebaseContext = useContext(FirebaseContext)\r\n  return firebaseContext\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Dimensions, Platform, View } from 'react-native'\r\nimport useIsMobile from '../hooks/useIsMobile'\r\n\r\ntype ViewProps = {windowType:'landscape'|'portrait', children:React.ReactNode}\r\n\r\nexport default (props:ViewProps)=>{\r\n    const isMobile = useIsMobile()\r\n    const [height, setHeight] = useState(window.innerHeight + 1)\r\n    useEffect(()=>{\r\n        if(isMobile && Platform.OS == 'web'){\r\n            const onChange = (e:any)=>{\r\n                setHeight(window.innerHeight + 1)\r\n            }\r\n            Dimensions.addEventListener(\"change\",onChange)\r\n            return () => Dimensions.removeEventListener(\"change\", onChange)\r\n            \r\n        }\r\n    },[ isMobile])\r\n    return <View style={{height:isMobile&&Platform.OS == 'web'?height:'100%'}}>\r\n        {props.children}\r\n    </View>\r\n\r\n}\r\n  ","import InviteModal from \"./InviteModal\";\r\nimport ProfileModal from \"./ProfileModal\";\r\nimport ChannelEditModal from \"./ChannelEditModal\"\r\nimport GuestLogoutModal from \"./GuestLogoutModal\";\r\n\r\nexport default [\r\n    InviteModal,\r\n    ProfileModal,\r\n    ChannelEditModal,\r\n    GuestLogoutModal\r\n]","import { CardStyleInterpolators, createStackNavigator } from '@react-navigation/stack';\r\nimport React, {useMemo} from 'react';\r\nimport { View } from 'react-native';\r\nimport { QueryClient, QueryClientProvider } from \"react-query\";\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport useResizeWindow from '../hooks/useResizeWindow';\r\nimport NotFoundScreen from '../screens/NotFoundScreen';\r\nimport {main, login, modal} from '../screens';\r\nimport DrawerNavigator from './DrawerNavigator';\r\nimport useAuthContext, {AuthProvider} from '../hooks/useAuthContext';\r\nimport { WebSocketProvider } from '../hooks/useWebsocketContext';\r\nimport HeaderRight from '../components/HeaderRight'\r\nimport Colors from '../constants/Colors';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\nimport useFirebaseContext from '../hooks/useFirebaseContext';\r\nimport useIsMobile from '../hooks/useIsMobile';\r\nimport MobileSafeAreaView from '../components/MobileSafeAreaView';\r\nimport useColorScheme from '../hooks/useColorScheme';\r\nimport { ModalsProvider } from '../hooks/useModalsContext';\r\nimport GuestLogoutModal from '../modals/GuestLogoutModal';\r\nimport modals from '../modals';\r\n\r\nconst Root = createStackNavigator();\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nexport default function RootNavigator() {\r\n    const windowType = useResizeWindow();\r\n    return (\r\n        <MobileSafeAreaView windowType={windowType}>\r\n            <AuthProvider>\r\n                <QueryClientProvider client={queryClient}>\r\n                    {/* devtools */}\r\n                    {/* <ReactQueryDevtools initialIsOpen={true} /> */}\r\n                        <Root.Navigator\r\n                            mode= 'modal'\r\n                            headerMode= 'screen'\r\n                            screenOptions={{\r\n                                cardStyle:{backgroundColor:\"white\"},\r\n                                animationEnabled: true,\r\n                                cardStyleInterpolator: CardStyleInterpolators.forVerticalIOS,\r\n                            }}\r\n                        >\r\n                            <Root.Screen name=\"Main\" component={MainNavigator} options={{headerShown:false}}/>\r\n                            {Object.entries(modal).map(([key, screen])=><Root.Screen key={key} name={key} component={screen.component} options={{\r\n                                title: screen.title,\r\n                                gestureDirection: windowType == 'landscape'?'vertical-inverted':'vertical'\r\n                            }} />)}\r\n                        </Root.Navigator>\r\n                </QueryClientProvider>\r\n            </AuthProvider>\r\n        </MobileSafeAreaView>\r\n    );\r\n}\r\n\r\nconst Main = createStackNavigator();\r\n\r\nfunction headerLeft(navigation:any, route:any, windowType:string, isMobile:boolean){\r\n    const canGOBackScreen = ['HomeScreen', 'LoginScreen'].findIndex(v=>v == route.name) == -1\r\n    const goBack = ()=>{\r\n        if (navigation.canGoBack())\r\n            navigation.goBack()\r\n        else if (canGOBackScreen)\r\n            navigation.replace('HomeScreen')\r\n    }\r\n    if (windowType=='portrait' && canGOBackScreen)\r\n        return <TouchableOpacity onPress={goBack}><Ionicons size={isMobile?20:24} style={{marginHorizontal:isMobile?16:20 }} name=\"arrow-back\"/></TouchableOpacity>\r\n    return null\r\n}\r\n\r\nfunction MainNavigator(){\r\n    const windowType = useResizeWindow();\r\n    const isMobile = useIsMobile()\r\n    const {auth} = useAuthContext()\r\n    const theme = useColorScheme()\r\n    const entries = useMemo(()=>{\r\n        if (auth.user === undefined)\r\n            return []\r\n        console.log('current user: ', auth.user)\r\n        return Object.entries(auth.user === null?login:main)\r\n    }, [auth])\r\n    const modalValues = useMemo(()=>{\r\n        if (auth.user === undefined)\r\n            return []\r\n        return auth.user === null?[]:modals\r\n    }, [auth])\r\n\r\n    useFirebaseContext(auth)\r\n    return (auth.user!==undefined?<View style={{flexDirection:'row', flex:1}}>\r\n        {auth.user?<DrawerNavigator user={auth.user}/>:undefined}\r\n        <View style={{flex:1}}>\r\n            <WebSocketProvider disable={auth.user === null || auth.user === undefined}>\r\n                <ModalsProvider modals={modalValues}>\r\n                    <Main.Navigator\r\n                        screenOptions={({navigation, route})=>({\r\n                            headerStyle:{backgroundColor:Colors[theme].header, height:isMobile?50:undefined},\r\n                            headerTitleStyle:{color:'white'},\r\n                            headerLeft:()=>headerLeft(navigation, route, windowType, isMobile),\r\n                            headerRight:()=><HeaderRight/>,\r\n                            headerLeftContainerStyle:{backgroundColor:'white', borderBottomWidth:1, borderColor:Colors.borderColor},\r\n                            cardStyle:{flexShrink:1},\r\n                            animationEnabled:windowType=='portrait',\r\n                            cardStyleInterpolator: CardStyleInterpolators.forHorizontalIOS\r\n                        })}\r\n                    >\r\n                        {entries.map(([key, screen])=><Main.Screen key={key} name={key} component={screen.component} options={{ title: screen.title }} />)}\r\n                        <Main.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\r\n                    </Main.Navigator>\r\n                </ModalsProvider>\r\n            </WebSocketProvider>\r\n        </View>\r\n    </View>:<></>);\r\n}","import React from 'react';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\r\nimport Navigation from './src/navigation';\r\nimport useColorScheme from './src/hooks/useColorScheme';\r\nimport useCachedResources from './src/hooks/useCachedResources';\r\n\r\nexport default function App() {\r\n  const isLoadingComplete = useCachedResources();\r\n  const colorScheme = useColorScheme();\r\n  if (!isLoadingComplete) {\r\n    return null;\r\n  } else {\r\n    return (\r\n      <SafeAreaProvider>\r\n        <Navigation colorScheme={colorScheme} />\r\n        <StatusBar />\r\n      </SafeAreaProvider>\r\n    );\r\n  }\r\n}\r\n","import { Ionicons } from '@expo/vector-icons';\r\nimport * as Font from 'expo-font';\r\nimport * as SplashScreen from 'expo-splash-screen';\r\nimport * as React from 'react';\r\n\r\nexport default function useCachedResources() {\r\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\r\n\r\n  // Load any resources or data that we need prior to rendering the app\r\n  React.useEffect(() => {\r\n    async function loadResourcesAndDataAsync() {\r\n      try {\r\n        SplashScreen.preventAutoHideAsync();\r\n\r\n        // Load fonts\r\n        await Font.loadAsync({\r\n          ...Ionicons.font,\r\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\r\n        });\r\n      } catch (e) {\r\n        // We might want to provide this error information to an error reporting service\r\n        console.warn(e);\r\n      } finally {\r\n        setLoadingComplete(true);\r\n        SplashScreen.hideAsync();\r\n      }\r\n    }\r\n\r\n    loadResourcesAndDataAsync();\r\n  }, []);\r\n\r\n  return isLoadingComplete;\r\n}\r\n","import React, { createContext, useContext, useEffect, useReducer, useMemo, Dispatch, useState } from \"react\"\r\nimport { checkLogin, login, logout } from \"../apis\"\r\nimport { getNotification, putNotification } from \"../apis/notification\"\r\nimport { UserMembership } from \"../types\"\r\n\r\ntype AuthAction = {type:string, username?:string, password?:string, user?:UserMembership|null}\r\n\r\nexport type Auth = {user?:UserMembership|null, groupId?:number}\r\n\r\ntype AuthState ={user?:UserMembership|null, request?:{username:string, password:string}|null}\r\n\r\nconst AuthContext = createContext<{auth:Auth, error?:string, dispatch:Dispatch<AuthAction>}>({auth:{}, dispatch:()=>{}});\r\n\r\nconst authReducer =(initialState:AuthState, action:AuthAction)=>{\r\n  switch (action.type){\r\n      case 'LOGIN_REQUEST':\r\n        return {\r\n          ...initialState,\r\n          request:{username:action.username, password:action.password},\r\n        } as AuthState\r\n      case 'LOGIN_GUEST':\r\n        return {\r\n          ...initialState,\r\n          request:{username:'guest', password:'guest'},\r\n        } as AuthState\r\n      case 'LOGIN_SUCCESS':\r\n          return{\r\n              ...initialState,\r\n              user:action.user,\r\n              request:undefined\r\n          }\r\n      case 'LOGIN_FAILED':\r\n          return{\r\n              ...initialState,\r\n              request:undefined\r\n          }\r\n      case 'LOGOUT_REQUEST':\r\n          return{\r\n              ...initialState,\r\n              request:null\r\n          }\r\n      case 'LOGOUT_SUCCESS':\r\n          return {\r\n            ...initialState,\r\n            user:null,\r\n            request:undefined\r\n          }\r\n      case 'REFRESH':\r\n        return {\r\n          ...initialState,\r\n          user:undefined\r\n        }\r\n      default:\r\n          throw new Error( `Unhandled action type: ${action.type}`)\r\n  }\r\n}\r\n\r\n\r\nexport const AuthProvider = ({children}:{children:React.ReactNode})=>{\r\n  const [authState, dispatch] = useReducer(authReducer, {} as Auth)\r\n  const [error, setError] = useState<string>()\r\n  const auth = useMemo(()=>({\r\n    user:authState.user,\r\n    groupId: authState.user?.membership_set.find(g=>g.root_group_id==null)?.group\r\n  }), [authState])\r\n  useEffect(()=>{\r\n    if(authState.user===undefined){\r\n      checkLogin().then((user)=>{\r\n        dispatch({type:\"LOGIN_SUCCESS\", user})\r\n      }).catch((e)=>{\r\n        console.log(e)\r\n        dispatch({type:\"LOGOUT_SUCCESS\"})\r\n      })\r\n    }\r\n    else if(authState.user===null && authState.request){\r\n      login(authState.request.username, authState.request.password).then(user=>{\r\n        dispatch({type:\"LOGIN_SUCCESS\", user})\r\n      }).catch((data)=>{\r\n        dispatch({type:\"LOGIN_FAILED\"})\r\n        setError(data.response?.data?.message)\r\n      })\r\n    }\r\n    else if(authState.user && authState.request===null){\r\n      getNotification(authState.user.id).then(noti=>{\r\n        noti && putNotification({...noti, token:''}).then(()=>{\r\n          logout().then(()=>dispatch({type:\"LOGOUT_SUCCESS\"}))\r\n        })\r\n      })\r\n    }\r\n  }, [authState])\r\n  return <AuthContext.Provider value={{auth, error, dispatch}}>\r\n    {children}\r\n  </AuthContext.Provider>\r\n}\r\n\r\nexport default ()=>{\r\n  const authContext = useContext(AuthContext)\r\n  return authContext\r\n}\r\n","firebaseConfig = {\n    \"authDomain\": \"virtual-metrics-355712.firebaseapp.com\",\n    \"projectId\": \"virtual-metrics-355712\",\n    \"storageBucket\": \"virtual-metrics-355712.appspot.com\",\n    \"messagingSenderId\": \"76003576924\",\n    \"appId\": \"1:76003576924:web:c8c8a006d07918bbc02a99\",\n    \"measurementId\": \"G-SEL35L4N5R\"\n}\nif (typeof module !== 'undefined') {\n    module.exports = firebaseConfig\n}\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","import React, { useState } from 'react';\r\nimport { Text, StyleSheet, Pressable, StyleProp, ViewStyle} from 'react-native';\r\nimport Colors from '../constants/Colors';\r\nimport useColorScheme from '../hooks/useColorScheme';\r\nimport { CustomButtonProps } from '../types';\r\n\r\nconst DefaultButton = (props:CustomButtonProps)=>{\r\n    const [hover, setHover] = useState(false)\r\n    return <Pressable\r\n        onPress={()=>props.onPress()}\r\n        //@ts-ignore\r\n        onHoverIn={()=>setHover(true)}\r\n        onHoverOut={()=>setHover(false)}\r\n        style={[\r\n            {\r\n                paddingVertical:5, \r\n                paddingHorizontal:16\r\n            },\r\n            props.style,\r\n            hover?{backgroundColor:props.color}:{}\r\n        ]}>\r\n            <Text selectable={false} style={[{fontSize:14}, props.textStyle]}>{props.title}</Text>\r\n        </Pressable>\r\n}\r\n\r\nexport default (props:CustomButtonProps)=>{\r\n    const theme = useColorScheme()\r\n    const _props = {\r\n        color:Colors[theme].buttonColor,\r\n        ...props,\r\n        style:[\r\n            styles.style,\r\n            {\r\n                backgroundColor:Colors[theme].buttonBackgroundColor\r\n            },\r\n            props.style,\r\n        ] as StyleProp<ViewStyle>,\r\n        textStyle:[\r\n            styles.text, \r\n            {color:Colors[theme].text},\r\n            props.textStyle\r\n        ]\r\n    }\r\n    return <DefaultButton {..._props}/>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    style:{\r\n        borderRadius:6, \r\n        borderColor:Colors.button.borderColor, \r\n        borderWidth:1, \r\n    },\r\n    text:{\r\n        textAlign:'center', \r\n        fontWeight:'600'\r\n    }\r\n});\r\n","\r\nimport { User, UserMembership } from '../types';\r\nimport axios, { getToken, setToken, accountURL as baseURL } from './axios';\r\n\r\nexport const login = async(username:string, password:string) => {\r\n    if(username.endsWith('.guest') && password.length == 0)\r\n        password = 'guest'\r\n    const r = await axios.post(\"/api-token-auth/\", {username, password});\r\n    if(r.status == 200){\r\n        await setToken(r.data)\r\n        return await checkLogin()\r\n    }\r\n}\r\n\r\nexport const logout = async() => {\r\n    await setToken(null)\r\n    return await axios.get(\"/api-auth/logout/\")\r\n}\r\n\r\nexport const guestLogin =  async() => {\r\n    return await login('guest', 'guest')\r\n}\r\n\r\nconst checkLoginToken = async ()=>{\r\n    const value = (await axios.get(\"/api/v1/users/memberships/?_self=true\"))?.data\r\n    if (value && value.length){\r\n        return value[0] as UserMembership\r\n    }\r\n    return null\r\n}\r\n\r\nexport const checkLogin = async() => {\r\n    const token = await getToken()\r\n    if (token === null)\r\n        return null\r\n    try{\r\n       return await checkLoginToken()\r\n    }\r\n    catch(e:any){\r\n        let error = e\r\n        if(e.response !== undefined && e.response.status==401){\r\n            try{\r\n                return await checkLoginToken()\r\n            }\r\n            catch(e2){\r\n                error = e2\r\n            }\r\n        }\r\n        const isOffline = ((error as any).code == \"ERR_NETWORK\" || (error as any).message && ((error as any).message as string).startsWith(\"Cannot read\"))\r\n        throw {error, isOffline}\r\n    }\r\n}\r\n\r\nexport const getUserList = async (group_id:number)=>{\r\n    return (await axios.get(`/api/v1/users/?group_id=${group_id}`) ).data as User[]\r\n}\r\n\r\nexport const patchUser = async (user:{id:number, name:string})=>{\r\n    await axios.patch(`/api/v1/user/`, {ids:[user.id], updated: {name:user.name}}, {baseURL})\r\n}\r\n\r\nexport const getUserMembershipList = async (group_id:number)=>{\r\n    return (await axios.get(`/api/v1/users/memberships/?group_id=${group_id}`) ).data as UserMembership[]\r\n}\r\n","import { Channel, MessengerMember, MessengerContent, EditMessage, MessengerChannel, DirectChannel } from '../types';\r\nimport axios from './axios';\r\n\r\nexport const getMessengerChannelList = async (user_id:number)=>{\r\n    return (await axios.get(`/api/v1/channels/messenger/?type=messenger&messenger_user_id=${user_id}`) ).data as MessengerChannel[]\r\n}\r\n\r\nexport const postChannel = async(channel:Channel)=>{\r\n    return (await axios.post(`/api/v1/channels/`, channel)).data as Channel\r\n}\r\n\r\nexport const postDirectChannel = async(channel:DirectChannel)=>{\r\n    return (await axios.post(`/api/v1/channels/direct/`, channel)).data as Channel\r\n}\r\n\r\nexport const putChannel = async(channel:Channel)=>{\r\n    return (await axios.put(`/api/v1/channels/${channel.id}/`, channel)).data as Channel\r\n}\r\n\r\nexport const deleteChannel = async(channel_id:number)=>{\r\n    await axios.delete(`/api/v1/channels/${channel_id}/`)\r\n}\r\n\r\nexport const getMessengerMemberList = async(channel_id:number)=>{\r\n    return (await axios.get(`/api/v1/messengermembers/?channel=${channel_id}`) ).data as MessengerMember[]\r\n}\r\n\r\nexport const postBulkMessengerMember = async(data:{channel_id:number, user_ids:number[]})=>{\r\n    await axios.post(`/api/v1/messengermembers/bulk/`, {channel:data.channel_id, user_ids:data.user_ids})\r\n}\r\n\r\nexport const deleteMessengerMember = async(member_id:number)=>{\r\n    await axios.delete(`/api/v1/messengermembers/${member_id}/`)\r\n}\r\n\r\nexport const getMessengerContentList = async (channel_id:number, id_lt?:number)=>{\r\n    const id_lt_param = id_lt?`&id_lt=${id_lt}`:''\r\n    return (await axios.get(`/api/v1/messengercontents/?limit=30&channel=${channel_id}${id_lt_param}`)).data.results as MessengerContent[]\r\n}\r\n\r\nexport const postMessage = async (message:EditMessage)=>{\r\n    if (message.file){\r\n        const formData = new FormData(); // formData 객체를 생성한다.\r\n        formData.append(\"file\", message.file)\r\n        Object.entries(message).forEach(value=>{\r\n            formData.append(value[0], `${value[1]}`)\r\n        })\r\n        await axios.post(`/api/v1/messengercontents/messages/`, formData, {headers:{\r\n            ...(axios.defaults.headers as any), \"Content-Type\": \"multipart/form-data\",\r\n        }})\r\n    }\r\n    else{\r\n        await axios.post(`/api/v1/messengercontents/messages/`, message)\r\n    }\r\n}\r\n\r\nexport const deleteMessengerContent = async (content_id:number)=>{\r\n    await axios.delete(`/api/v1/messengercontents/${content_id}/`)\r\n}","import React, { useState, createContext, useContext } from \"react\";\r\nimport { Modal } from \"react-native\";\r\nimport useResizeWindow from \"./useResizeWindow\";\r\n\r\ntype ModalProps = any\r\n\r\ntype ModalState = {\r\n  Component:React.ComponentType<ModalProps>,\r\n  props:ModalProps|null,\r\n}\r\ntype SetModal = (Component:ModalState[\"Component\"], props:ModalState[\"props\"])=>void\r\n\r\nconst ModalsContext = createContext<{setModal: SetModal}>({\r\n    setModal: () => {}\r\n});\r\n\r\nexport const ModalsProvider = ({children, modals:allModals}:{children:React.ReactNode, modals:React.ComponentType<ModalProps>[]}) => {\r\n    const [modals, setModals] = useState<ModalState[]>(allModals.map((v)=>({\r\n        Component:v,\r\n        props:null\r\n    })));\r\n    const windowType = useResizeWindow();\r\n    const setModal:SetModal = (Component, props) => {\r\n        setModals(modals.map(m=>{\r\n            if(m.Component == Component){\r\n                return {...m, Component, props}\r\n            }\r\n            return m        \r\n        }));\r\n    }\r\n    return (\r\n        <ModalsContext.Provider value={{setModal}}>\r\n            {children}\r\n            {modals.map((modal, index)=>{\r\n                const { Component, props } = modal;\r\n                return <Modal key={index} animationType={windowType == 'landscape'?'fade':'slide'} visible={props != null}>\r\n                    <Component {...props}/>\r\n                </Modal>\r\n            })}\r\n        </ModalsContext.Provider>\r\n    );\r\n}\r\n\r\nexport default ()=>{\r\n    const modalsContext = useContext(ModalsContext)\r\n    return modalsContext\r\n}\r\n\r\n","import { useState, useEffect } from 'react';\r\nimport { Dimensions, ScaledSize } from 'react-native';\r\n//@ts-ignore\r\nimport useMobileDetect from 'use-mobile-detect-hook';\r\n\r\ntype WindowType = 'portrait' | 'landscape'\r\n\r\nconst getWindowType = (window:ScaledSize)=> window.height >= window.width?'portrait':'landscape' as WindowType;\r\n\r\nexport default function useResizeWindow() {\r\n  const detectMobile = useMobileDetect();\r\n  const [windowType, setWindowType] = useState(getWindowType(Dimensions.get('window')))\r\n  const onChange = () => setWindowType(getWindowType(Dimensions.get('window')))\r\n\r\n  useEffect(() => {\r\n    Dimensions.addEventListener(\"change\", onChange);\r\n    return () => {\r\n      Dimensions.removeEventListener(\"change\", onChange);\r\n    };\r\n  });\r\n  if (detectMobile.isMobile())\r\n    return 'portrait'\r\n  return windowType\r\n}","import { ColorSchemeName, useColorScheme as _useColorScheme } from 'react-native';\r\n\r\n// The useColorScheme value is always either light or dark, but the built-in\r\n// type suggests that it can be null. This will not happen in practice, so this\r\n// makes it a bit easier to work with.\r\nexport default function useColorScheme(): NonNullable<ColorSchemeName> {\r\n  return _useColorScheme() as NonNullable<ColorSchemeName>;\r\n}\r\n","import * as React from 'react';\r\nimport { View, Text } from './Themed';\r\nimport { StyleSheet, StyleProp, ViewStyle, TextStyle } from 'react-native';\r\nimport Colors from '../constants/Colors';\r\n\r\nexport type SectionParamList = {\r\n    title?: string,\r\n    titleStyle?:StyleProp<TextStyle>\r\n    outerContainerStyle?:StyleProp<TextStyle>\r\n    containerStyle?:StyleProp<ViewStyle>\r\n    bodyStyle?:StyleProp<ViewStyle>\r\n    subtitle?: string\r\n    withSeparator?: boolean\r\n    children?: React.ReactNode\r\n}\r\n\r\nexport default function CommonSection(props:SectionParamList){\r\n  return (\r\n    <View style={[styles.outerContainer, props.outerContainerStyle]}>\r\n        <View style={[styles.container, props.containerStyle]}>\r\n            {props.withSeparator?<View style={styles.separator} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />:undefined}\r\n            {props.title?<View style={styles.titleView}>\r\n              <Text style={[styles.title, props.titleStyle]}>{props.title}</Text>\r\n              <Text style={styles.subtitle}>{props.subtitle}</Text>\r\n            </View>:undefined}\r\n            <View style={[styles.bodyView, props.bodyStyle]}>\r\n            {props.children}\r\n            </View>\r\n          </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  outerContainer:{\r\n    width:'100%',\r\n    maxWidth:1080,\r\n    alignItems:'stretch',\r\n    backgroundColor:'transparent'\r\n  },  \r\n  container: {\r\n      marginHorizontal:20,\r\n      marginVertical: 10,\r\n      backgroundColor:'transparent',\r\n    },\r\n    titleView:{\r\n      width: '100%',\r\n      flexDirection:'row',\r\n      backgroundColor:'transparent',\r\n      marginBottom:5,\r\n    },\r\n    title: {\r\n      flex:1,\r\n      fontSize: 16,\r\n    },\r\n    subtitle: {\r\n      flex:1,\r\n      fontSize: 12,\r\n      textAlign: 'right',\r\n      marginTop:4\r\n    },\r\n    separator: {\r\n      marginBottom: 20,\r\n      height: 1,\r\n      width: '100%',\r\n    },\r\n    bodyView:{\r\n      width: '100%',\r\n      padding: 20,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      borderWidth:1,\r\n      borderColor:Colors.borderColor,\r\n      borderRadius:6\r\n    }\r\n  });\r\n  ","import { useEffect } from \"react\";\r\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\r\nimport { getMessengerChannelList, postChannel, postDirectChannel, putChannel } from \"../../apis\";\r\nimport { MessengerChannel, MessengerContent } from \"../../types\";\r\nimport { Auth } from \"../useAuthContext\";\r\nimport useWebsocketContext from \"../useWebsocketContext\";\r\n\r\nexport default function useMessengerChannelList(auth?:Auth){\r\n  const queryClient = useQueryClient()\r\n  const {lastJsonMessage} = useWebsocketContext()\r\n  const { data } = useQuery(\"MessengerChannelList\" , async()=>auth?.user?.id?(await getMessengerChannelList(auth.user.id)):[])\r\n\r\n  useEffect(()=>{\r\n    if(lastJsonMessage !=null){\r\n      if(lastJsonMessage['type']=='enter'){\r\n        queryClient.setQueryData<MessengerChannel[]>(\"MessengerChannelList\", (_data)=>{\r\n          return (_data?.find(v=>v.id==lastJsonMessage['data']['id'])?_data:[lastJsonMessage['data'] , ...(_data|| [])]).sort((a, b)=>a.id - b.id)\r\n        })\r\n      }\r\n      if (lastJsonMessage['type']=='next_message'){\r\n        const data:MessengerContent = lastJsonMessage['data']\r\n        queryClient.setQueryData<MessengerChannel[]>(\"MessengerChannelList\", (_data)=>(_data || []).map(v=>{\r\n          if (v.id == data.channel){\r\n            return {...v, last_message:{content:data.message_set[0]?.content, created:data.created}}\r\n          }\r\n          return v\r\n        }))\r\n      }\r\n      // if(lastJsonMessage['type']=='leave'){\r\n      //   queryClient.setQueryData<Channel[]>(\"MessengerChannelList\", (_data)=>_data?.filter(v=>v.id!=lastJsonMessage['data']['channel_id']) || [])\r\n      // }\r\n    }\r\n  }, [lastJsonMessage])\r\n  return data\r\n}\r\n\r\nexport function useMessengerChannelSorted(auth?:Auth){\r\n  const channelList = useMessengerChannelList(auth);\r\n  return channelList?.sort((a, b)=>(a.last_message?.created || '') < (b.last_message?.created || '')?1:-1)\r\n}\r\nexport function useMessengerChannelMutation(){\r\n  const queryClient = useQueryClient()\r\n\r\n  const create = useMutation(postChannel, {\r\n    onSuccess: ()=>queryClient.invalidateQueries(\"MessengerChannelList\")\r\n  });\r\n\r\n  const update = useMutation(putChannel, {\r\n    onSuccess: () => queryClient.invalidateQueries(\"MessengerChannelList\")\r\n  })\r\n\r\n  const direct = useMutation(postDirectChannel, {\r\n    onSuccess: () => queryClient.invalidateQueries(\"MessengerChannelList\")\r\n  })\r\n\r\n  return { create:create.mutateAsync, update:update.mutateAsync, direct:direct.mutateAsync}\r\n}"],"sourceRoot":""}