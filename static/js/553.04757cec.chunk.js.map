{"version":3,"file":"static/js/553.04757cec.chunk.js","mappings":"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","sources":["src/lib/react-native-paper/Avatar.tsx","src/components/Avatar.tsx","src/components/CommonButton.tsx","src/components/CommonSection.tsx","src/components/EditorPreview.tsx","src/components/MessageContentView.tsx","src/components/ModalSection.tsx","src/components/Themed.tsx","src/constants/Colors.ts","src/hooks/lists/useMessengerContentList.ts","src/hooks/useModalEffect.ts","src/hooks/useModalsContext.tsx","src/hooks/useResizeContext.tsx","src/hooks/useUploadContext.tsx","src/hooks/useWebsocketContext.tsx","src/modals/MessageModal.tsx","src/components/LinkPreview.tsx","src/components/FilePreview.tsx","src/screens/main/ChatScreen/Messages.tsx","src/hooks/lists/useMessengerViewerList.ts","src/screens/main/ChatScreen/TimerTags.tsx","src/hooks/lists/useTimerMessageContent.ts"],"sourcesContent":["import * as React from 'react';\nimport { Avatar } from 'react-native-paper';\nimport { AvatarProps } from '../../types';\n\nconst normalizeHash = (hash: number, min: number, max: number) => {\n    return Math.floor((hash % (max - min)) + min);\n};\n\nconst stringToHSL = (str: string, initHash?:number) => {\n    let hash = initHash || 0;\n    for (let i = 0; i < str.length; i++) {\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    hash = Math.abs(hash);\n    return `hsl(${normalizeHash(hash, 0, 360)}, ${normalizeHash(hash, 0, 100)}%, ${normalizeHash(hash, 25, 75)}%)`;\n};\n\nexport default (props:AvatarProps) => {\n    const backgroundColor = stringToHSL(props.name, props.userId)\n    return <Avatar.Text style={{backgroundColor}} size={props.size} label={props.name.split(' ').map(v=>v[0]).join().toUpperCase()} />\n};","import React from 'react';\nimport Avatar from '../lib/react-native-paper/Avatar';\nimport { AvatarProps, MessengerChannel, User } from '../types';\n\nexport function avatarFromChannel(item:MessengerChannel, user?:User|null){\n    let avatar;\n    let name = item.name\n    if (item.member_count<3){\n        avatar = (item.member_count==1 || user?.id == item.subowner.id)?item.owner:item.subowner\n        name = name.length>0?name:avatar.name \n    }\n    return {avatar, name}\n}\n\nexport default (props:AvatarProps)=>{\n    return <Avatar {...props}/>\n}\n\n","import React, { useState } from 'react';\nimport { Text, StyleSheet, Pressable, StyleProp, ViewStyle} from 'react-native';\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport { CustomButtonProps } from '../types';\n\nconst DefaultButton = (props:CustomButtonProps & {borderColor:string})=>{\n    const [hover, setHover] = useState(false)\n    return <Pressable\n        onPress={()=>props.onPress()}\n        //@ts-ignore\n        onHoverIn={()=>setHover(true)}\n        onHoverOut={()=>setHover(false)}\n        disabled={props.disabled}\n        style={[\n            {\n                paddingVertical:5, \n                paddingHorizontal:16\n            },\n            props.style,\n            (hover || props.disabled)?{backgroundColor:props.color, borderColor:props.borderColor}:{}\n        ]}>\n            {props.children?props.children:\n            <Text selectable={false} style={[{fontSize:14}, props.textStyle]}>{props.title}</Text>}\n        </Pressable>\n}\n\nexport default (props:CustomButtonProps)=>{\n    const theme = useColorScheme()\n    const _props = {\n        color:Colors[theme].hoverColor,\n        borderColor:theme=='light'?Colors[theme].buttonBorderColor:'#7d8590',\n        ...props,\n        style:[\n            styles.style,\n            {\n                backgroundColor:Colors[theme].buttonBackgroundColor,\n                borderColor:Colors[theme].buttonBorderColor\n            },\n            props.style,\n        ] as StyleProp<ViewStyle>,\n        textStyle:[\n            styles.text, \n            {color:Colors[theme].text},\n            props.textStyle\n        ]\n    }\n    return <DefaultButton {..._props}/>\n}\n\nconst styles = StyleSheet.create({\n    style:{\n        borderRadius:6, \n        borderWidth:1, \n    },\n    text:{\n        textAlign:'center', \n        fontWeight:'600'\n    }\n});\n","import * as React from 'react';\nimport { View, Text } from './Themed';\nimport { StyleSheet, StyleProp, ViewStyle, TextStyle } from 'react-native';\nimport Colors from '../constants/Colors';\n\nexport type SectionParamList = {\n    title?: string,\n    titleStyle?:StyleProp<TextStyle>\n    outerContainerStyle?:StyleProp<TextStyle>\n    containerStyle?:StyleProp<ViewStyle>\n    bodyStyle?:StyleProp<ViewStyle>\n    subtitle?: string\n    withSeparator?: boolean\n    autoScale?:boolean\n    children?: React.ReactNode\n}\n\nexport default function CommonSection(props:SectionParamList){\n  return (\n    <View style={[styles.outerContainer, props.autoScale?{}:styles.outerContainerFill, props.outerContainerStyle]}>\n        <View style={[styles.container, props.containerStyle]}>\n            {props.withSeparator?<View style={styles.separator} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />:undefined}\n            {props.title?<View style={styles.titleView}>\n              <Text style={[styles.title, props.titleStyle]}>{props.title}</Text>\n              <Text style={styles.subtitle}>{props.subtitle}</Text>\n            </View>:undefined}\n            <View style={[styles.bodyView, props.bodyStyle]}>\n            {props.children}\n            </View>\n          </View>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n  outerContainer:{\n    alignItems:'stretch',\n    backgroundColor:'transparent'\n  },\n  outerContainerFill:{\n    width:'100%',\n    maxWidth:1080,\n  },\n  container: {\n      marginHorizontal:20,\n      marginVertical: 10,\n      backgroundColor:'transparent',\n    },\n    titleView:{\n      width: '100%',\n      flexDirection:'row',\n      backgroundColor:'transparent',\n      marginBottom:5,\n    },\n    title: {\n      flex:1,\n      fontSize: 16,\n    },\n    subtitle: {\n      flex:1,\n      fontSize: 12,\n      textAlign: 'right',\n      marginTop:4\n    },\n    separator: {\n      marginBottom: 0,\n      height: 1,\n      width: '100%',\n    },\n    bodyView:{\n      width: '100%',\n      padding: 20,\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderWidth:1,\n      borderColor:Colors.borderColor,\n      borderRadius:6\n    }\n  });\n  ","import React, { Suspense } from 'react'\nimport CommonSection from \"./CommonSection\"\nimport { View, Text } from \"./Themed\"\nimport { EditorContent } from \"../types\"\nimport useColorScheme from \"../hooks/useColorScheme\";\nimport Colors from \"../constants/Colors\";\n\nconst RenderHTML = React.lazy(()=> import('react-native-render-html'))\n\nexport const regexForStripHTML = /<\\/?[^>]*>/gi;\n\nexport default React.memo(({content}:{content:EditorContent})=>{\n    const theme = useColorScheme()\n    return <View>\n        <Text style={{fontSize:18, fontWeight:'600', minWidth:140}}>{content.title}</Text>\n        <CommonSection containerStyle={{width:'100%', margin:0}} bodyStyle={{borderWidth:0, borderRadius:0, borderTopWidth:1, padding:0, alignItems:\"flex-start\"}}>\n            <Suspense fallback={<Text>{content.description.replaceAll(regexForStripHTML, '')}</Text>}>\n                <RenderHTML contentWidth={320} source={{'html':content.description}} baseStyle={{color:Colors[theme].text}}/>\n            </Suspense>\n        </CommonSection>\n    </View>\n})","import React, { useState } from \"react\"\nimport { StyleProp, TextStyle, TouchableOpacity } from \"react-native\";\nimport Hyperlink from \"react-native-hyperlink\";\nimport { View, Text } from \"./Themed\";\n\ntype MessageContentProps = {textStyle?:StyleProp<TextStyle>, selectable?:boolean, onPressLink?:any}\n\nconst accordionRegex = /> .*(\\n([ ]+.*\\n?)*)?/\nconst accordionHeaderRegex = /> .*\\n?/\n\n\nconst  MessageContentText = (props:MessageContentProps & {children:React.ReactNode})=>{\n    /* @ts-ignore */\n    return <Hyperlink linkDefault={ true } style={{wordBreak:\"break-word\"}} linkStyle={{color: '#12b886'}} onPress={props.onPressLink}>\n        <Text selectable={props.selectable} style={props.textStyle}>{props.children}</Text>\n    </Hyperlink>\n}\n\nconst  Accordion = (props:MessageContentProps & {title:string, body:string})=>{\n    const [open, setOpen] = useState(false)\n    return <View style={{flexDirection:'row'}}>\n        <TouchableOpacity onPress={()=>setOpen(!open)}>\n            <Text>{open?\"▼  \":\"▶  \"}</Text>\n        </TouchableOpacity>\n        <View>\n            <MessageContentText {...props}>{props.title}</MessageContentText>\n            {open && <MessageContentView {...props} content={props.body}/>}\n        </View>\n    </View>\n}\n\n\nconst MessageContentView = (props:MessageContentProps  & {content?:string})=>{\n    let content = `${props.content}`\n    const children:React.ReactNode[] = []\n    while (content.length > 0){\n        const match = content.match(accordionRegex)\n        if (match == null){\n            children.push(<MessageContentText key={children.length} {...props}>{content}</MessageContentText>)\n            content = ''\n        }\n        else {\n            children.push(<MessageContentText key={children.length} {...props}>{content.slice(0, match.index)}</MessageContentText>)\n            const titleMatch = match[0].match(accordionHeaderRegex)\n            const subContentSplit = match[0].slice(titleMatch?.[0].length).split('\\n')\n            const depth = subContentSplit[0].length - subContentSplit[0].trimStart().length\n            const subContent = subContentSplit.map(t=>{\n                const d = t.length - t.trimStart().length\n                return ' '.repeat(Math.max(0, d - depth)) + t.trimStart()\n            }).join('\\n')\n            children.push(<Accordion  key={children.length} {...props} title={titleMatch?.[0].slice(2) || ''} body={subContent}/>)\n            content = content.slice((match.index || 0) + match[0].length)\n        }\n    }\n    return <>{children}</>\n}\n\n\nexport default MessageContentView","import React from 'react'\nimport CommonSection from \"./CommonSection\";\nimport useResizeContext from '../hooks/useResizeContext';\n\nexport default (props:{children?: React.ReactNode})=>{\n    const windowType = useResizeContext();\n    return <CommonSection\n        autoScale\n        outerContainerStyle={{flex:1, alignSelf:'center', backgroundColor:'#8888', flexShrink:1, width:'100%'}}\n        containerStyle={{flex:1, margin:0, justifyContent:'center', alignItems:'center'}}\n        bodyStyle={windowType=='landscape'?{width:'90%', height:'90%', padding:'5%'}:{width:'100%', height:'100%', maxWidth:1080}}\n    >\n        {props.children}\n    </CommonSection>\n}\n\nexport const BottomSheet = (props:{children?: React.ReactNode})=><CommonSection\n    autoScale\n    outerContainerStyle={{flex:1, alignSelf:'center', backgroundColor:'#8888', width:'100%'}}\n    containerStyle={{flex:1, margin:0, justifyContent:'flex-end'}}\n>\n    {props.children}\n</CommonSection>","/**\n * Learn more about Light and Dark modes:\n * https://docs.expo.io/guides/color-schemes/\n */\n\nimport * as React from 'react';\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\n\nimport Colors from '../constants/Colors'\nimport useColorScheme from '../hooks/useColorScheme';\n\nexport function useThemeColor(\n  props: { light?: string; dark?: string },\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\n) {\n  const theme = useColorScheme();\n  const colorFromProps = props[theme];\n\n  if (colorFromProps) {\n    return colorFromProps;\n  } else {\n    return Colors[theme][colorName];\n  }\n}\n\ntype ThemeProps = {\n  lightColor?: string;\n  darkColor?: string;\n};\n\nexport type TextProps = ThemeProps & DefaultText['props'];\nexport type ViewProps = ThemeProps & DefaultView['props'];\n\nexport function Text(props: TextProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\n\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\n}\n\nexport function View(props: ViewProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\n\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\n}\n","const tintColorLight = '#2f95dc';\nconst tintColorDark = '#fff';\n\nexport default {\n  light: {\n    text: '#000',\n    background: '#fff',\n    tint: tintColorLight,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorLight,\n    hoverColor:'rgb(242,242,242)',\n    buttonBackgroundColor: '#f6f8fa', //'rgba(9,30,66,0.08)',//rgb(242,242,242)\\\n    header:'#f6f8fa',\n    headerBottomColor:'rgb(216, 216, 216)',\n    buttonBorderColor:'rgba(27,31,36,0.15)',\n    iconColor: 'black'\n  },\n  dark: {\n    text: '#fff',\n    background: '#000',\n    tint: tintColorDark,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorDark,\n    hoverColor: '#010409',//'rgb(1,4,9)',\n    buttonBackgroundColor: '#010409',//'#282624',\n    header:'#010409',\n    headerBottomColor:'rgb(40, 40, 40)',\n    buttonBorderColor:'rgba(229,225,220,0.15)',\n    iconColor: 'white'\n  },\n  borderColor:'#d0d7de',\n  \n  focus:'#0065A4',\n};\n","import { useEffect } from \"react\"\nimport { InfiniteData, Query, QueryKey, useInfiniteQuery, useMutation, useQueryClient } from \"react-query\"\nimport { getMessengerContentList, postMessage, patchMessengerContent, getNewMessengerContentList } from \"../../services\"\nimport { EditMessage, MessengerContent } from \"../../types\"\nimport useWebsocketContext from \"../useWebsocketContext\"\nimport useUploadContext from \"../useUploadContext\"\n\nexport type MessengerContentPage = {\n  next?:MessengerContentPage\n  current:MessengerContent[]\n}\n\nconst updateContnetPage = (pages:MessengerContentPage[], updateMessages:MessengerContent[])=>{\n  let update_i = 0\n  pages.forEach(page=>{\n    if (update_i == updateMessages.length)\n      return\n    page.current.forEach(v=>{\n      if (update_i == updateMessages.length)\n        return\n      if (v.id==updateMessages[update_i].id){\n        v.timer = updateMessages[update_i].timer\n        v.is_archive = updateMessages[update_i].is_archive\n        update_i += 1\n      }\n    })\n    page.current = page.current.filter(v=>!v.is_archive)\n  })\n}\n\nexport default function useMessengerContentList(channel_id:number){  \n  const queryClient = useQueryClient()\n  const refetch = (query:Query<MessengerContentPage, unknown, InfiniteData<MessengerContentPage>, QueryKey>)=>{\n    const updated_gte = new Date(query.state.dataUpdatedAt).toISOString()\n    const newData = {...query.state.data}\n    getNewMessengerContentList(channel_id, updated_gte).then(contents=>{\n      if(newData.pages){\n        const lastMessageId = newData.pages[0].current[0].id || 0\n        const nextMessages = contents.filter(v=>v.id>lastMessageId && v.is_archive==false)\n        const updateMessages = contents.filter(v=>v.id<=lastMessageId)\n        const timerMessageRefetch = nextMessages.findIndex(v=>v.timer) >= 0 || updateMessages.length > 0\n        newData.pages[0].current = [...nextMessages, ...newData.pages[0].current]\n        updateContnetPage(newData.pages, updateMessages)\n        timerMessageRefetch && queryClient.invalidateQueries([\"TimerMessageContentList\", channel_id])\n      }\n    })\n    return false\n  }\n  const { data, fetchNextPage } = useInfiniteQuery<MessengerContentPage>(\n    [\"MessengerContentList\", channel_id], \n    async({pageParam})=>getMessengerContentList(channel_id, pageParam).then(current=>({current})), \n    {\n      select:data=>{\n        if(data.pages.length > 1)\n          data.pages[data.pages.length - 2].next = data.pages[data.pages.length - 1]\n        return data;\n      },\n      getNextPageParam:(lastPage)=>lastPage?.current.length?lastPage.current[lastPage.current.length - 1].id:undefined,\n      refetchOnReconnect:false,\n      refetchOnWindowFocus:refetch\n    }\n  )\n  const { lastJsonMessage } = useWebsocketContext()\n  useEffect(()=>{\n    if(lastJsonMessage !=null && lastJsonMessage['data']['channel'] == channel_id){\n      if(lastJsonMessage['type']=='next_message'){\n        queryClient.setQueryData<InfiniteData<MessengerContentPage>>([\"MessengerContentList\", channel_id], (_data)=>{\n          if(_data?.pages[0].current && _data?.pages[0].current[0].id != lastJsonMessage['data'].id)\n            _data.pages[0].current = [lastJsonMessage['data'], ..._data?.pages[0].current]\n          return {...(_data || {pages:[], pageParams:[]})}\n        })\n      }\n      if(lastJsonMessage['type']=='update_message'){\n        queryClient.setQueryData<InfiniteData<MessengerContentPage>>([\"MessengerContentList\", channel_id], (_data)=>{\n          _data?.pages && updateContnetPage(_data.pages, [lastJsonMessage['data']])\n          return {...(_data || {pages:[], pageParams:[]})}\n        })\n      }\n    }\n  }, [lastJsonMessage])\n  return { data, fetchNextPage }\n}\n\nexport function useMessengerContentMutation(channelId?:number){\n  // const queryClient = useQueryClient()\n  const {dispatch:uploadDispatch} = useUploadContext()\n  const create = useMutation((message:EditMessage)=>postMessage(message, uploadDispatch), {\n    onSuccess: () => {\n      // queryClient.setQueryData(['MessengerContentList'], (data:any) => ({\n      //   pages: data.pages.slice(0, 1),\n      //   pageParams: data.pageParams.slice(0, 1),\n      // }))\n      // queryClient.invalidateQueries(\"MessengerContentList\")\n    }\n  });\n  const _patch = useMutation(patchMessengerContent);\n  return { create:create.mutate, patch:_patch.mutate }\n}","import { DependencyList, useEffect } from \"react\";\nimport { EventArg, useNavigation } from \"@react-navigation/core\";\n\n\nexport default (callback:()=>void, deps?:DependencyList)=>{\n    const navigation = useNavigation()\n    useEffect(()=>{\n        const event = (e:EventArg<any, true, any>)=> {\n            e.preventDefault();\n            callback()\n        }\n        navigation.addListener('beforeRemove', event)\n        return () => {\n            navigation.removeListener('beforeRemove', event)\n        }\n  }, deps)\n}","import React, { useState, createContext, useContext, useEffect } from \"react\";\nimport { Modal } from \"react-native\";\nimport useResizeContext from \"./useResizeContext\";\n\ntype ModalProps = any\n\ntype ModalState = {\n  Component:React.ComponentType<ModalProps>,\n  props:any\n  visible:boolean\n}\ntype SetModal = (Component:ModalState[\"Component\"]|null, props:ModalProps|null)=>void\n\nconst ModalsContext = createContext<{setModal: SetModal}>({\n    setModal: () => {}\n});\n\nexport const ModalsProvider = ({children, modals:allModals}:{children:React.ReactNode, modals:React.ComponentType<ModalProps>[]}) => {\n    const [modals, setModals] = useState<ModalState[]>([]);\n    const windowType = useResizeContext();\n    const [animationType, setAnimationType] = useState('none')\n    const setModal:SetModal = (Component, props) => {\n        const newModals = modals.map(m=>{\n            if(Component==null){\n                return {\n                    ...m,\n                    visible:false\n                }\n            }\n            else if(m.Component == Component){\n                return {\n                    Component, \n                    props:props!==null?props:m.props,\n                    visible:props!==null\n                }\n            }\n            return m        \n        })\n        setModals(newModals);\n    }\n    useEffect(()=>{\n        if (modals.filter(v=>v.visible).length == 0)\n            setAnimationType(windowType == 'landscape'?'fade':'slide')\n    }, [windowType])\n    useEffect(()=>{\n        setModals(allModals.map((Component)=>({Component, props:null, visible:false})))\n    }, [allModals])\n    return <ModalsContext.Provider value={{setModal}}>\n        {children}\n        {modals.map((modal, index)=>{\n            const { Component, props, visible } = modal;\n            return <Modal key={index} animationType={animationType as any} visible={visible} transparent>\n                <Component {...props}/>\n            </Modal>\n        })}\n    </ModalsContext.Provider>\n}\n\nexport default ()=>{\n    const modalsContext = useContext(ModalsContext)\n    return modalsContext\n}\n\n","import React, { useState, useEffect, createContext, useContext, useMemo } from 'react';\nimport { Dimensions, ScaledSize, useWindowDimensions } from 'react-native';\n//@ts-ignore\nimport useMobileDetect from 'use-mobile-detect-hook';\n\ntype WindowType = 'portrait' | 'landscape'\n\nconst getWindowType = (window:{width:number, height:number})=> window.height >= window.width?'portrait':'landscape' as WindowType;\n\nconst ResizeContextContext = createContext<WindowType>(getWindowType(Dimensions.get('window')));\n\nexport const ResizeContextProvider = ({children}:{children:React.ReactNode})=>{\n  const detectMobile = useMobileDetect();\n  const {width, height} = useWindowDimensions()\n  const [windowType, setWindowType] = useState(getWindowType({width, height}))\n  useEffect(()=>{\n    setWindowType(getWindowType({width, height}))\n  }, [width, height])\n  return <ResizeContextContext.Provider value={detectMobile.isMobile()?'portrait':windowType}>\n    {children}\n  </ResizeContextContext.Provider>\n}\n\nexport default function useResizeContext() {\n  const windowType = useContext(ResizeContextContext)\n  return windowType\n}","import React, { createContext, useContext, Dispatch, useReducer } from 'react';\n\ntype UploadState = Record<number, {\n  filename: string,\n  progress?: number,\n}[]>\n\ntype UploadAction = {\n  channel:number,\n  filename:string,\n  progress?:number\n}\n\ntype UploadContextType = {\n  upload:UploadState,\n  dispatch:Dispatch<UploadAction>\n}\n\nconst UploadContext = createContext<UploadContextType>({upload:{} as UploadState, dispatch:()=>{}});\n\nconst uploadReducer =(initialState:UploadState, action:UploadAction)=>{\n  const files = [...(initialState[action.channel] || [])]\n  const index = files.findIndex(f=>f.filename==action.filename)\n  if (index >= 0){\n    files[index] = {filename:action.filename, progress:action.progress} \n  }\n  else{\n    files.push({filename:action.filename, progress:action.progress})\n  }\n  return {\n    ...initialState,\n    [action.channel] : files.filter(f=>(f.progress || 0)<1)\n  }\n}\n\nexport const UploadContextProvider = ({children}:{children:React.ReactNode})=>{\n  const [upload, dispatch] = useReducer(uploadReducer, {})\n  return <UploadContext.Provider value={{upload, dispatch}}>\n    {children}\n  </UploadContext.Provider>\n}\n\nexport default function useUploadContext() {\n  const upload = useContext(UploadContext)\n  return upload\n}","import React, { Context, createContext,  useContext, useEffect, useState } from \"react\"\nimport useWebSocket from \"react-use-websocket\"\nimport { SendJsonMessage } from \"react-use-websocket/dist/lib/types\"\nimport {websockerURL } from \"../constants/Envs\"\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { AppState, AppStateStatus } from \"react-native\";\n\ntype WebsocketContextType = {lastJsonMessage:any, sendJsonMessage:SendJsonMessage }\nconst defaultContext = {lastJsonMessage:undefined, sendJsonMessage:()=>{}}\nconst WebSocketContext = createContext<WebsocketContextType>(defaultContext);\n\nexport const WebSocketInternalProvider = ({children, path, Context, useBackground}:{children:React.ReactNode, path:string, Context:Context<WebsocketContextType>, useBackground?:boolean})=>{\n  const [token, setToken] = useState<string|null>(null)\n  const [isActive, setIsActive] = useState<boolean>(useBackground || AppState.currentState == 'active')\n  const { lastJsonMessage, sendJsonMessage } = useWebSocket(`${websockerURL}/${path}`,{\n    shouldReconnect: (closeEvent) => true,\n    protocols: token?['Authorization',  token]:undefined,\n    onOpen: (e)=>{console.log(`success websocket connection(${path})`)},\n    onClose: (e)=> {console.log(`closed websocket connection(${path})`)},\n  }, isActive && token!=null)\n  useEffect(()=>{\n    AsyncStorage.getItem('Authorization').then(setToken)\n    const onChange = (nextState:AppStateStatus)=>setIsActive(useBackground || nextState == 'active')\n    const listener = AppState.addEventListener(\"change\", onChange)\n    return ()=> listener.remove()\n  }, [])\n  return <Context.Provider value={token!=null?{lastJsonMessage, sendJsonMessage}:defaultContext}>\n      {children}\n    </Context.Provider>\n}\n\nexport const WebSocketProvider = ({disable, children}:{disable?:boolean, children:React.ReactNode})=>{\n  return disable?<>{children}</>:<WebSocketInternalProvider path={'messenger/ws/'} Context={WebSocketContext}>\n    {children}\n  </WebSocketInternalProvider>\n}\n\nexport default ()=>{\n  const webSocketContext = useContext(WebSocketContext)\n  return webSocketContext\n}\n\n","import React from 'react';\nimport Clipboard from '@react-native-clipboard/clipboard/dist';\nimport CommonButton from '../components/CommonButton';\nimport useModalsContext from '../hooks/useModalsContext';\nimport { Text, View } from '../components/Themed';\nimport useLangContext from '../hooks/useLangContext';\nimport { BottomSheet } from '../components/ModalSection';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport Colors from '../constants/Colors';\nimport { Ionicons } from '../lib/@expo/vector-icons';\nimport useColorScheme from '../hooks/useColorScheme';\nimport { useMessengerContentMutation } from '../hooks/lists/useMessengerContentList';\nimport useModalEffect from '../hooks/useModalEffect';\nimport { EditorContent, MessengerContent } from '../types';\nimport { regexForStripHTML } from '../components/EditorPreview';\n\n\n\nexport default function MessageModal({content, isOwner, sendToScreen}:{content:MessengerContent, isOwner:boolean, sendToScreen?:(e:{value:string, editorValue:string})=>void}) {\n  const message = content.message_set[0]\n  const editorContents = (content.attatchment_set.filter(v=>v.type=='editor') as EditorContent[])\n  const editor  = editorContents.length>0?editorContents[0]:undefined\n  const fullContent = editor?editor.title.concat('\\r\\n', editor.description.replaceAll(regexForStripHTML, '')):message.content\n  const { lang } = useLangContext()\n  const { setModal } = useModalsContext()\n  const theme = useColorScheme()\n  const contentMutation = useMessengerContentMutation()\n  const back = ()=>{\n    setModal(MessageModal, null)\n  }\n  useModalEffect(back, [])\n  return <BottomSheet>\n    <View style={{flexDirection:'row', width:'100%'}}>\n      <View style={{flex:1, flexDirection:'row'}}>\n        <TouchableOpacity onPress={back}>\n          <Ionicons size={20} name=\"arrow-back\" color={Colors[theme].text}/>\n        </TouchableOpacity>\n      </View>\n      <View style={{flex:1}}>\n        <Text style={{fontSize:20, textAlign:'center'}}>{lang('Message')}</Text>\n      </View>\n      <View style={{flex:1}}/>\n    </View>\n    <View style={{marginBottom: 20, height: 1, width: '100%'}} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />\n      <CommonButton style={{height:40, width:'100%', maxWidth:320, justifyContent:'center'}} title={lang('copy')} onPress={()=>{Clipboard.setString(fullContent);back()}}/>\n      {editor && sendToScreen && <CommonButton style={{height:40, width:'100%', maxWidth:320, justifyContent:'center'}} title={lang('move to editor')} onPress={()=>{sendToScreen({value:editor.title, editorValue:editor.description});back()}}/>}\n      {isOwner && content.timer && <CommonButton style={{height:40, width:'100%', maxWidth:320, justifyContent:'center'}} textStyle={{color:'red'}} title={lang('delete timer')} onPress={()=>{contentMutation.patch({id:content.id, timer:null});back()}}/>}\n      {isOwner && <CommonButton style={{height:40, width:'100%', maxWidth:320, justifyContent:'center'}} textStyle={{color:'red'}} title={lang('delete')} onPress={()=>{contentMutation.patch({id:content.id, is_archive:true});back()}}/>}\n  </BottomSheet>\n}\n","import React, { MutableRefObject } from 'react'\nimport { Image, Linking } from \"react-native\"\nimport { TouchableOpacity } from \"react-native-gesture-handler\"\nimport CommonSection from \"./CommonSection\"\nimport { View, Text } from \"./Themed\"\nimport { Link } from \"../types\"\n\n\n\nexport default ({link, isMobile, touchableRef}:{link:Link, isMobile:boolean, touchableRef:MutableRefObject<()=>boolean>})=>{\n    return <CommonSection containerStyle={{marginHorizontal:0}} bodyStyle={{padding:0}}>\n    <TouchableOpacity \n        onPress={()=>touchableRef.current() && Linking.openURL(link.url)}\n        onLongPress={()=>{}}\n        style={{width:'100%', flexDirection:'row'}}\n    >\n        {link.image_url?<Image source={{uri:link.image_url}} resizeMode=\"cover\" style={{ width:'100%', maxWidth:isMobile?120:150, maxHeight:isMobile?120:150, borderWidth:1}}/>:undefined}\n        <View style={{flex:1, marginHorizontal:20}}>\n            <Text style={{fontSize:18}}>{link.title}</Text>\n            <Text style={{fontSize:14}}>{link.description}</Text>\n            <Text style={{fontSize:12}}>{link.url}</Text>\n        </View>\n    </TouchableOpacity>\n    </CommonSection>\n}","import React, { MutableRefObject } from 'react'\nimport { Image, Linking } from \"react-native\"\nimport {TouchableOpacity} from \"react-native-gesture-handler\"\nimport CommonSection from \"./CommonSection\"\nimport { FontAwesome } from '../lib/@expo/vector-icons'; \nimport { View, Text } from \"./Themed\"\nimport { File } from \"../types\"\nimport useColorScheme from '../hooks/useColorScheme';\nimport Colors from '../constants/Colors';\n\nfunction humanFileSize(size:number) {\n    var i = size == 0 ? 0 : Math.floor(Math.log(size) / Math.log(1024));\n    return (size / Math.pow(1024, i)).toFixed(2) + ' ' + ['B', 'kB', 'MB', 'GB', 'TB'][i];\n  }\n  \n\nexport default ({file, isMobile, showBorder, touchableRef}:{file:File, isMobile:boolean, showBorder:ConstrainBoolean, touchableRef:MutableRefObject<()=>boolean>})=>{\n    const theme = useColorScheme()\n    return <CommonSection containerStyle={{marginHorizontal:0}} bodyStyle={showBorder?{padding:10}:{borderWidth:0, padding:0}}>\n    <TouchableOpacity \n        onPress={()=>touchableRef.current() && Linking.openURL(file.file)} \n        onLongPress={()=>{}}\n        style={{flexDirection:'row', alignItems:'flex-start', width:'100%'}} \n    >\n        {   file.thumbnail?\n            <Image source={{uri:file.thumbnail}} resizeMode=\"cover\" style={{width:isMobile?120:150, height:isMobile?120:150, borderWidth:1}}/>:\n            <FontAwesome name=\"file-o\" size={20} color={Colors[theme].iconColor} />}\n        <View style={{flex:1, marginHorizontal:10}}>\n            <Text style={{fontSize:18}}>{file.filename}</Text>\n            <Text style={{fontSize:14}}>{humanFileSize(file.filesize)}</Text>\n        </View>\n    </TouchableOpacity>\n    </CommonSection>\n}","import React, {useCallback, useMemo, useRef} from \"react\"\nimport { View, TouchableOpacity } from 'react-native';\nimport { FlatList } from \"react-native-gesture-handler\";\nimport { Auth } from \"../../../hooks/useAuthContext\";\nimport useMessengerContentList, { MessengerContentPage } from \"../../../hooks/lists/useMessengerContentList\"\nimport useIsMobile from \"../../../hooks/useIsMobile\"\nimport useModalsContext from \"../../../hooks/useModalsContext\"\nimport { Text } from '../../../components/Themed' \nimport Avatar from '../../../components/Avatar';\nimport LinkPreview from '../../../components/LinkPreview';\nimport FilePreview from '../../../components/FilePreview';\nimport MessageModal from '../../../modals/MessageModal';\nimport CommonSection from \"../../../components/CommonSection\";\nimport { timerToString } from \"./TimerTags\";\nimport useViewerContentList from \"../../../hooks/lists/useMessengerViewerList\";\nimport EditorPreview from \"../../../components/EditorPreview\";\nimport { MessengerContent } from \"../../../types\";\nimport MessageContentView from \"../../../components/MessageContentView\";\n\nconst MessengerContentPageItem = React.memo((props:MessengerContentPage & {ownerId?:number, reverse?:boolean, getOnPress?:(content:MessengerContent)=>()=>void})=>{\n    const lastTouchRef = useRef(Date.now()) \n    const touchableRef = useRef(()=>{\n      return Date.now() - lastTouchRef.current > 350\n    })\n    const isMobile = useIsMobile()\n    let nextPage = props.next;\n      while(nextPage?.next && nextPage.current.length==0){\n        nextPage = nextPage.next\n      }\n      const nextContent = nextPage?.current[0]\n      return <View \n        style={{flexDirection: props.reverse?'column-reverse':'column'}}\n        onTouchMove={()=>{lastTouchRef.current=Date.now()}}\n      >  \n        {props.current.map((content, index2)=>{\n          const next = index2 + 1 < props.current.length?props.current[index2+1]:nextContent\n          const created:string = content.created.slice(0, 16)\n          const date = created.slice(0, 10)\n          const isSystem = content.user == null\n          const isFirst = next==undefined || (content.user != next.user || created != next.created.slice(0, 16))\n          const isSelf = props.ownerId == content.user\n          const dayChanged = next==undefined || date != next.created.slice(0, 10)\n          const message = content.message_set[0]\n          if (isSystem)\n            return <View key={content.id} style={{flexDirection:'row', justifyContent:'center', width:'100%', marginVertical:5}}>\n              <Text>{message.content}</Text>\n            </View>\n          return <View key={content.id}>\n            {dayChanged?<View style={{flexDirection:'row', justifyContent:'center', width:'100%'}}><Text>{date}</Text></View>:undefined}\n            <View key={content.id} style={{flexDirection:'row', justifyContent:isSelf?'space-between':'flex-start', width:'100%'}}>\n              {isFirst && !isSelf? <View style={{marginTop:3, marginLeft:12}}><Avatar name={content.name} userId={content.user} size={36}/></View>:<View style={{width:48}}/>}\n              <CommonSection autoScale outerContainerStyle={{maxWidth:'90%'}} title={isFirst?content.name:undefined} titleStyle={{flex:undefined}} bodyStyle={{padding:10}} subtitle={`${created.slice(11)}`}>\n                <TouchableOpacity onLongPress={props.getOnPress?.(content)}>\n                  {content.timer && <View style={{flexDirection:'row', alignItems:'stretch'}}>\n                    <Text style={{fontSize:12}}>⌚</Text>\n                    <Text style={{fontSize:12}} selectable={!isMobile}>{timerToString(content.timer)}</Text>\n                  </View>}\n                  <MessageContentView selectable={!isMobile} textStyle={{textAlign:isSelf?'right':'left'}} onPressLink={touchableRef.current()?undefined:()=>{}} content={message.content}/>\n                  {\n                    content.attatchment_set.map((attatchment, aIndex)=>{\n                      if (attatchment.type=='editor')\n                        return <EditorPreview key={aIndex} content={attatchment}/>\n                      if (attatchment.type=='file')\n                        return <FilePreview key={aIndex} file={attatchment} isMobile={isMobile} showBorder={false} touchableRef={touchableRef}/>\n                      if (attatchment.type=='link')\n                        return <LinkPreview key={aIndex} link={attatchment} isMobile={isMobile} touchableRef={touchableRef}/>\n                    })\n                  }\n                </TouchableOpacity>\n              </CommonSection>\n            </View>\n          </View>\n        })}\n      </View>\n  \n  })\n\nexport default (props:{channel_id:number, auth?:Auth, reverse?:boolean, sendToScreen?:(e:any)=>void})=>{\n    const height = useRef(0)\n    const {data, fetchNextPage } = props.auth?useMessengerContentList(props.channel_id):useViewerContentList(props.channel_id)\n    const ownerId = useMemo(()=>props.auth?.user?.id, [props.auth])\n    const { setModal } = useModalsContext()\n    const getOnPress = (content: MessengerContent)=>()=>setModal(MessageModal, {content, isOwner:ownerId == content.user, sendToScreen:props.sendToScreen})\n    const renderItem = useCallback(({item, index}:{item:MessengerContentPage, index:number})=><MessengerContentPageItem \n      {...item} \n      ownerId={ownerId} \n      reverse={props.reverse}\n      getOnPress={getOnPress}  \n    />, [ownerId])\n    return <FlatList\n        style={{flexDirection: props.reverse?'column-reverse':'column'}}\n        contentContainerStyle={{padding:10, flexGrow:1, flexDirection: props.reverse?'column-reverse':'column'}}\n        data={data?.pages}\n        renderItem={renderItem}\n        onScroll={(e)=>{\n          if (e.nativeEvent.contentSize.height - height.current + (props.reverse?1:-1)*e.nativeEvent.contentOffset.y < 1)\n            fetchNextPage()\n        }}\n        onLayout={(p)=>{height.current = p.nativeEvent.layout.height}}\n      />\n}","import { useInfiniteQuery } from \"react-query\"\nimport { getMessengerContentList } from \"../../services\"\nimport { MessengerContentPage } from \"./useMessengerContentList\"\n\n\nexport default function useViewerContentList(channel_id:number){  \n  const { data, fetchNextPage } = useInfiniteQuery<MessengerContentPage>(\n    [\"ViewerContentList\", channel_id], \n    async({pageParam})=>getMessengerContentList(channel_id, pageParam, true).then(current=>({current})), \n    {\n      select:data=>{\n        if(data.pages.length > 1)\n          data.pages[data.pages.length - 2].next = data.pages[data.pages.length - 1]\n        return data;\n      },\n      getNextPageParam:(lastPage)=>lastPage?.current.length?lastPage.current[lastPage.current.length - 1].id:undefined,\n      refetchOnReconnect:false,\n      refetchOnWindowFocus:false,\n    }\n  )\n  return { data, fetchNextPage }\n}\n","import React, {useState, useEffect} from \"react\"\nimport dayjs from \"dayjs\";\nimport {View, TouchableOpacity} from 'react-native'\nimport { Text } from \"../../../components/Themed\";\nimport useTimerMessageContentList from \"../../../hooks/lists/useTimerMessageContent\";\nimport { MessengerContent } from \"../../../types\";\nimport Avatar from \"../../../components/Avatar\";\nimport Hyperlink from \"react-native-hyperlink\";\nimport MessageContentView from \"../../../components/MessageContentView\";\n\nexport function timerFormat(datetime:string){\n    return _timerFormat(dayjs(datetime), dayjs())\n}\n\nfunction _timerFormat(m:dayjs.Dayjs, now:dayjs.Dayjs){\n    if (m.year() != now.year()){\n        return m.format('YYYY.MM')\n    }\n    if(m.month()!= now.month() || m.date() != now.date()){\n        return m.format('MM.DD')\n    }\n    return m.format('HH:mm')\n  }\n\nexport function timerToString(timer:string){\n    return dayjs(timer).format('YYYY.MM.DD HH:mm')\n}\n\nconst TimerTag = (props:{data:MessengerContent, now:dayjs.Dayjs, isExpand:boolean, setExpand:(id?:number)=>void})=>{\n    const start = dayjs(props.data.created)\n    const end = dayjs(props.data.timer)\n    const ratio = (start.diff(props.now)/start.diff(end))\n    const message = props.data.message_set[0]\n    return <TouchableOpacity onPress={()=>props.setExpand(props.isExpand?undefined:props.data.id)}>\n        <View style={{backgroundColor:'lightgray', borderRadius:20, overflow:'hidden', margin:5}}>\n            <View style={{backgroundColor:'darkgray', position:'absolute', width:`${ratio*100}%`, height:'100%'}}/>\n            {props.isExpand?\n            <View style={{paddingVertical:5, paddingHorizontal:5, maxWidth:270}}>\n                <View style={{flexDirection:'row'}}>\n                    <Avatar name={props.data.name} userId={props.data.user} size={20}/>\n                    <View style={{paddingHorizontal:5}}><Text>{props.data.name}</Text></View>\n                </View>\n                {props.data.timer &&\n                <View style={{flexDirection:'row', alignItems:'stretch'}}>\n                    <Text>⌚</Text>\n                    <Text selectable>{timerToString(props.data.timer)}</Text>\n                </View>}\n                {/* @ts-ignore */}\n                <MessageContentView selectable content={message.preview_content || message.content}/>\n            </View>:    \n            <View style={{paddingVertical:5, paddingHorizontal:5, flexDirection:'row'}}>\n                <Avatar name={props.data.name} userId={props.data.user} size={20}/>\n                <View style={{paddingHorizontal:5}}><Text>{_timerFormat(end, props.now)}</Text></View>\n            </View>}\n        </View>\n    </TouchableOpacity>\n}\n\n\nexport default (props:{channel_id:number})=>{\n    const timerMessages = useTimerMessageContentList(props.channel_id)\n    const [now, setNow] = useState(dayjs())\n    const [expand, setExpand] = useState<number>()\n    useEffect(()=>{\n        const timeout = setTimeout(()=>{\n            setNow(dayjs())\n        }, 2000)\n        return ()=>clearTimeout(timeout)\n    }, [now])\n    return <View style={{flexDirection:'row', paddingTop:5, paddingHorizontal:20}}>\n        {timerMessages?.map((v,i)=><TimerTag key={i} data={v} now={now} isExpand={v.id==expand} setExpand={setExpand}/>)}\n    </View>\n}","import { useEffect, useMemo } from \"react\"\nimport { useQuery, useQueryClient } from \"react-query\"\nimport { getTimerMessageContentList } from \"../../services\"\nimport { MessengerContent } from \"../../types\"\nimport useWebsocketContext from \"../useWebsocketContext\"\nimport dayjs from \"dayjs\"\n\nexport default function useTimerMessageContentList(channel_id:number){  \n  const queryClient = useQueryClient()\n  const { data } = useQuery<MessengerContent[]>(\n    [\"TimerMessageContentList\", channel_id], \n    async()=>await getTimerMessageContentList(channel_id, dayjs().toISOString()), \n    {\n      refetchOnReconnect:false,\n      refetchOnWindowFocus:false\n    }\n  )\n  const { lastJsonMessage } = useWebsocketContext()\n  useEffect(()=>{\n    if(lastJsonMessage !=null && lastJsonMessage['data']['channel'] == channel_id){\n      if(lastJsonMessage['type']=='next_message'){\n        if(lastJsonMessage['data']['timer'] && dayjs() < dayjs(lastJsonMessage['data']['timer']))\n          queryClient.setQueryData<MessengerContent[]>([\"TimerMessageContentList\", channel_id], (_data)=>{\n            return [...(_data || []), lastJsonMessage['data']]\n          })\n      }\n      if(lastJsonMessage['type']=='update_message'){\n        queryClient.setQueryData<MessengerContent[]>([\"TimerMessageContentList\", channel_id], (_data)=>{\n          return [...(_data?.filter(v=>v.id!=lastJsonMessage['data'].id || (lastJsonMessage['data']['timer']!=null && !lastJsonMessage['data']['is_archive'])) || [])]\n        })\n      }\n    }\n  }, [lastJsonMessage])\n  const sorted = useMemo(()=>data?.sort((a, b)=>(a.timer || '') > (b.timer || '')?1:-1), [data])\n  useEffect(()=>{\n    if (sorted?.[0]?.timer){\n      const id = sorted[0].id\n      const ms = Math.min(dayjs(sorted[0].timer).diff(dayjs()), Number.MAX_VALUE)\n      let timeout = setTimeout(()=>{\n        queryClient.setQueryData<MessengerContent[]>([\"TimerMessageContentList\", channel_id], (_data)=>{\n          return (_data || []).filter(v=>v.id!=id || dayjs(v.timer).diff(dayjs()) > 0)\n        })\n      }, ms)\n      return ()=>clearTimeout(timeout)\n    }\n  },[sorted])\n  return sorted\n}\n"],"names":["normalizeHash","hash","min","max","Math","floor","props","backgroundColor","str","initHash","i","length","charCodeAt","abs","stringToHSL","name","userId","_jsx","Avatar","style","size","label","split","map","v","join","toUpperCase","avatarFromChannel","item","user","avatar","member_count","id","subowner","owner","_objectSpread","DefaultButton","_useState","useState","_useState2","_slicedToArray","hover","setHover","Pressable","onPress","onHoverIn","onHoverOut","disabled","paddingVertical","paddingHorizontal","color","borderColor","children","Text","selectable","fontSize","textStyle","title","theme","useColorScheme","_props","Colors","hoverColor","buttonBorderColor","styles","buttonBackgroundColor","text","StyleSheet","create","borderRadius","borderWidth","textAlign","fontWeight","CommonSection","View","outerContainer","autoScale","outerContainerFill","outerContainerStyle","_jsxs","container","containerStyle","withSeparator","separator","lightColor","darkColor","undefined","titleView","titleStyle","subtitle","bodyView","bodyStyle","alignItems","width","maxWidth","marginHorizontal","marginVertical","flexDirection","marginBottom","flex","marginTop","height","padding","justifyContent","RenderHTML","React","regexForStripHTML","_ref","content","minWidth","margin","borderTopWidth","Suspense","fallback","description","replaceAll","contentWidth","source","baseStyle","accordionRegex","accordionHeaderRegex","MessageContentText","Hyperlink","linkDefault","wordBreak","linkStyle","onPressLink","Accordion","open","setOpen","TouchableOpacity","MessageContentView","body","_loop","match","push","slice","index","titleMatch","subContentSplit","depth","trimStart","subContent","t","d","repeat","_Fragment","windowType","useResizeContext","alignSelf","flexShrink","BottomSheet","useThemeColor","colorName","colorFromProps","otherProps","_objectWithoutProperties","_excluded","light","dark","DefaultText","_excluded2","DefaultView","tintColorLight","tintColorDark","background","tint","tabIconDefault","tabIconSelected","header","headerBottomColor","iconColor","focus","updateContnetPage","pages","updateMessages","update_i","forEach","page","current","timer","is_archive","filter","useMessengerContentList","channel_id","queryClient","useQueryClient","_useInfiniteQuery","useInfiniteQuery","_ref2","_asyncToGenerator","pageParam","getMessengerContentList","then","_x","apply","arguments","select","data","next","getNextPageParam","lastPage","refetchOnReconnect","refetchOnWindowFocus","query","updated_gte","Date","state","dataUpdatedAt","toISOString","newData","getNewMessengerContentList","contents","lastMessageId","nextMessages","timerMessageRefetch","findIndex","concat","_toConsumableArray","invalidateQueries","fetchNextPage","lastJsonMessage","useWebsocketContext","useEffect","setQueryData","_data","pageParams","useMessengerContentMutation","channelId","uploadDispatch","useUploadContext","dispatch","useMutation","message","postMessage","onSuccess","_patch","patchMessengerContent","mutate","patch","callback","deps","navigation","useNavigation","event","e","preventDefault","addListener","removeListener","ModalsContext","createContext","setModal","ModalsProvider","allModals","modals","setModals","_useState3","_useState4","animationType","setAnimationType","visible","Component","Provider","value","newModals","m","modal","Modal","transparent","useContext","getWindowType","window","ResizeContextContext","Dimensions","get","ResizeContextProvider","detectMobile","useMobileDetect","_useWindowDimensions","useWindowDimensions","setWindowType","isMobile","UploadContext","upload","uploadReducer","initialState","action","files","channel","f","filename","progress","_defineProperty","UploadContextProvider","_useReducer","useReducer","_useReducer2","defaultContext","sendJsonMessage","WebSocketContext","WebSocketInternalProvider","path","Context","useBackground","token","setToken","AppState","currentState","isActive","setIsActive","_useWebSocket","useWebSocket","websockerURL","shouldReconnect","closeEvent","protocols","onOpen","console","log","onClose","AsyncStorage","getItem","listener","addEventListener","nextState","remove","WebSocketProvider","disable","MessageModal","isOwner","sendToScreen","message_set","editorContents","attatchment_set","type","editor","fullContent","lang","useLangContext","useModalsContext","contentMutation","back","useModalEffect","Ionicons","CommonButton","Clipboard","setString","editorValue","link","touchableRef","Linking","openURL","url","onLongPress","image_url","Image","uri","resizeMode","maxHeight","humanFileSize","pow","toFixed","file","showBorder","thumbnail","FontAwesome","filesize","MessengerContentPageItem","_nextPage2","lastTouchRef","useRef","now","useIsMobile","nextPage","_nextPage","nextContent","reverse","onTouchMove","index2","created","date","isSystem","isFirst","isSelf","ownerId","dayChanged","marginLeft","getOnPress","timerToString","attatchment","aIndex","EditorPreview","FilePreview","LinkPreview","auth","useViewerContentList","useMemo","_props$auth","_props$auth$user","renderItem","useCallback","FlatList","contentContainerStyle","flexGrow","onScroll","nativeEvent","contentSize","contentOffset","y","onLayout","p","layout","timerFormat","datetime","_timerFormat","dayjs","year","format","month","TimerTag","start","end","ratio","diff","setExpand","isExpand","overflow","position","preview_content","timerMessages","useQuery","getTimerMessageContentList","sorted","sort","a","b","_sorted$","ms","Number","MAX_VALUE","timeout","setTimeout","clearTimeout","useTimerMessageContentList","setNow","expand","paddingTop"],"sourceRoot":""}