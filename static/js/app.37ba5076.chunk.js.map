{"version":3,"sources":["src/navigation/index.tsx","src/components/HeaderRight.tsx","src/screens/main/LoginScreen.tsx","src/hooks/lists/useMessengerContent.List.ts","src/components/LinkPreview.tsx","src/lib/react-native-webrtc/useWebsocketContext.tsx","src/lib/react-native-webrtc/webrtc/p2p.tsx","src/lib/react-native-webrtc/webrtc/index.ts","src/lib/react-native-webrtc/LocalCam.tsx","src/lib/react-native-webrtc/RemoteCam.tsx","src/screens/main/ChatScreen/VideoCallSection.tsx","src/components/FilePreview.tsx","src/screens/main/ChatScreen/index.tsx","src/screens/main/TabOneScreen.tsx","src/screens/index.ts","src/screens/main/HomeScreen.tsx","src/hooks/useWebsocketContext.tsx","src/components/TextButton.tsx","src/modals/ChannelEditModal.tsx","src/apis/notification.ts","src/hooks/lists/useMessengerMemberList.ts","src/hooks/useIsMobile.ts","src/hooks/lists/useUserMembershipList.ts","src/components/CommonItem.tsx","src/navigation/DrawerNavigator.tsx","src/lib/react-native-paper/Avatar.tsx","src/components/Avatar.tsx","src/tabs/DrawerTab.tsx","src/tabs/MessengerTab.tsx","src/tabs/index.ts","src/components/RowField.tsx","src/components/TextField.tsx","src/tabs/MemberTab.tsx","src/modals/GuestLogoutModal.tsx","src/components/Themed.tsx","src/modals/ProfileModal.tsx","src/components/Profile.tsx","src/components/CommonTextInput.tsx","src/lang/index.ts","src/hooks/useLocalSearch.ts","src/modals/InviteModal.tsx","src/hooks/lists/useExternalMembershipList.ts","src/navigation/LinkingConfiguration.ts","src/apis/axios.ts","src/constants/Colors.ts","src/components/MobileSafeAreaView.tsx","src/hooks/useAuthContext.tsx","src/screens/NotFoundScreen.tsx","src/hooks/useFirebaseContext.tsx","src/modals/index.ts","src/navigation/RootNavigator.tsx","App.tsx","src/hooks/useCachedResources.ts","src/components/CommonButton.tsx","web/firebase-config.js","src/assets/fonts/SpaceMono-Regular.ttf","src/apis/account.ts","src/apis/messenger.ts","src/hooks/useModalsContext.tsx","src/hooks/useResizeWindow.tsx","src/hooks/useColorScheme.ts","src/components/CommonSection.tsx","src/hooks/lists/useMessengerChannelList.ts"],"names":["queryClient","QueryClient","navigationRef","React","navigate","name","params","_navigationRef$curren","_navigationRef$curren2","current","Navigation","_ref","colorScheme","NavigationContainer","ref","documentTitle","formatter","options","route","linking","process","versions","undefined","LinkingConfiguration","theme","DarkTheme","DefaultTheme","MobileSafeAreaView","AuthProvider","QueryClientProvider","client","ResizeWindowProvider","RootNavigator","l","search","decoded","slice","split","map","s","replace","join","window","history","replaceState","pathname","hash","location","ignoreWarnings","_console","_","clone","console","warn","message","Object","forEach","value","indexOf","props","_useAuthContext","useAuthContext","auth","dispatch","setModal","useModalsContext","windowType","useResizeWindow","defaultButtonProps","title","lang","onPress","_auth$user","user","username","endsWith","GuestLogoutModal","type","buttonProps","extra","concat","_toConsumableArray","filter","v","createElement","View","style","flexDirection","k","TextButton","_extends","key","textStyle","color","Styles","StyleSheet","create","login_container","flex","backgroundColor","login_header","alignItems","paddingTop","paddingBottom","login_header_logo","width","resizeMode","login_header_text","marginTop","fontSize","login_header_text_bold","fontWeight","login_wrapper","justifyContent","paddingVertical","borderTopRightRadius","borderTopLeftRadius","form","maxWidth","form_error","height","paddingHorizontal","form_error_text","textAlignVertical","form_input","marginBottom","borderRadius","button","button_label","login_social","login_social_separator","login_social_separator_line","login_social_separator_text","marginHorizontal","login_social_buttons","login_social_button","borderWidth","borderColor","login_social_icon","login_social_facebook","login_footer_text","guest_footer_text","alignSelf","margin","login_footer_link","useMessengerContentList","channel_id","useQueryClient","_useInfiniteQuery","useInfiniteQuery","pageParam","_regeneratorRuntime","async","_context","prev","next","abrupt","getMessengerContentList","then","stop","Promise","select","data","pages","length","getNextPageParam","lastPage","id","refetchOnReconnect","refetchOnWindowFocus","fetchNextPage","lastJsonMessage","useWebsocketContext","useEffect","setQueryData","_data","_objectSpread","pageParams","link","isMobile","CommonSection","containerStyle","bodyStyle","padding","TouchableOpacity","Linking","openURL","url","image","Image","source","uri","maxHeight","Text","description","WebSocketContext","createContext","sendJsonMessage","WebSocketProvider","disable","children","Fragment","WebSocketInternalProvider","path","Context","useBackground","useContext","log","peerConstraints","iceServers","JSON","parse","sessionConstraints","mandatory","OfferToReceiveAudio","OfferToReceiveVideo","VoiceActivityDetection","mediaConstraints","audio","video","framerate","onICEcandidate","pc","_message","rtcMessage","candidate","RTCIceCandidate","addIceCandidate","sendICEcandidate","event","sendMessage","receiver","target","optimizeSdp","offerDescription","arr","sdp","str","i","test","RTCSessionDescription","createOffer","pcRefCurrent","stream","addStream","t0","awrap","t1","sent","setLocalDescription","camStyle","container","cam","bottonContainer","position","bottom","buttonBar","label","_props$user","_useWebsocketContext","_useLocalCam","pcRef","useRef","_useState","useState","_useState2","_slicedToArray","sender","setSender","_useState3","_useState4","_stream","setStream","isPlay","useMemo","CustomRTCView","useCallback","memo","RTCView","videoProps","start","mode","newStream","_context2","mediaDevices","getUserMedia","getDisplayMedia","catch","e","entries","_ref2","_ref3","error","getTracks","track","websocketOnMessage","response","peerConnection","_peerConnection","answerDescription","_peerConnection2","_context3","channel_name","RTCPeerConnection","addEventListener","setRemoteDescription","useLocalCam","Button","setReceiver","_useRemoteCam","_useState5","_useState6","setUser","_useState7","_useState8","close","clearInterval","statsInterval","_pcRef$current","_pcRef$current2","_pcRef$current3","_pcRef$current4","streams","_peerConnection3","_answerDescription","_streams","_context5","iceConnectionState","activeStream","setInterval","stats","statsOutput","framePerSecond","_context4","getStats","report","kind","keys","statName","framesPerSecond","Date","toTimeString","addTransceiver","direction","getRemoteStreams","createAnswer","localDescription","useRemoteCam","TextInput","onChangeText","VideoView","scale","Colors","flexGrow","focusGuest","setFocusGuest","VideoCallContainer","setDisable","videoMode","setVideoMode","guests","setGuests","_useRtcContext","useRtcContext","find","Math","max","ceil","sqrt","toggleVideoMode","ThemedView","aspectRatio","flexShrink","borderLeftWidth","borderBottomWidth","flexWrap","RemoteCam","LocalCam","CommonButton","RtcProvider","file","showBorder","useColorScheme","FontAwesome","size","filename","floor","pow","toFixed","humanFileSize","filesize","MessengerContentPageItem","_nextPage2","useIsMobile","nextPage","_nextPage","nextContent","content","index2","created","date","isSystem","isFirst","isSelf","ownerId","dayChanged","message_set","marginVertical","marginLeft","Avatar","userId","outerContainerStyle","titleStyle","subtitle","Hyperlink","linkDefault","wordBreak","linkStyle","selectable","file_set","fileIndex","FilePreview","link_set","linkIndex","LinkPreview","Panel_Button_Text","textAlign","Panel_Holder","main","HomeScreen","component","_route$params2","navigation","home","setHome","text","headerRight","HeaderRight","ChannelEditModal","useLayoutEffect","_route$params","index","tab","setOptions","StyledText","paddingLeft","TabViewNavigator","tabs","bottomTabs","tabBarPosition","parseInt","onTab","setParams","ChatScreen","_useMessengerChannelL","inputRef","channel","useMessengerChannelList","_useMessengerContentL","memberList","useMessengerMemberList","member_id","_memberList$find","messengerMemberMutation","useMessengerMemberMutation","setValue","autoFocus","setAutoFocus","postValue","_auth$user2","contentMutation","useMutation","postMessage","onSuccess","_delete","deleteMessengerContent","d","variables","mutate","delete","useMessengerContentMutation","InviteModal","leave","back","renderItem","_auth$user3","item","canGoBack","goBack","focus","VideoCallSection","minWidth","FlatList","contentContainerStyle","onScroll","nativeEvent","contentOffset","y","contentSize","onLayout","p","layout","background","onSubmitEditing","blurOnSubmit","resolve","reject","Platform","OS","input","document","onchange","files","onabort","onerror","click","f","_auth$user4","TabOneScreen","login","LoginScreen","setUsername","password","setPassword","_login","placeholder","autoCapitalize","keyboardType","secureTextEntry","modal","defaultContext","_split","_split2","SCHEMA","DOMAIN","token","setToken","AppState","currentState","isActive","setIsActive","_useWebSocket","useWebSocket","shouldReconnect","closeEvent","protocols","onOpen","onClose","AsyncStorage","getItem","onChange","nextState","removeEventListener","Provider","styles","channelList","channelMutation","useMessengerChannelMutation","setName","setDescription","separator","lightColor","darkColor","TextField","multiline","groupId","newChannel","owner","group","update","screen","field","getNotification","user_id","axios","get","postNotification","notification","post","putNotification","put","useQuery","getMessengerMemberList","invite","postBulkMessengerMember","invalidateQueries","deleteMessengerMember","useMobileDetect","useUserMembershipList","getUserMembershipList","CommonItem","_React$useState","_React$useState2","setHover","_React$useState3","_React$useState4","press","setPress","Pressable","outerContainer","onPressIn","onPressOut","onHoverIn","onHoverOut","bodyView","minHeight","setIndex","icons","assign","apply","_defineProperty","icon","TabView","renderTabBar","TabBar","indicatorStyle","activeColor","inactiveColor","renderIcon","scene","onTabPress","findIndex","_ref4","_ref5","navigationState","routes","_ref6","_ref7","onIndexChange","renderScene","SceneMap","_ref8","_ref9","_ref11","colors","useTheme","onAddList","tabBar","card","borderTopColor","border","pointerEvents","Profile","accessibilityRole","drawerTabs","borderTopWidth","values","drawerTab","Tab","elevation","borderRightWidth","normalizeHash","min","initHash","charCodeAt","abs","stringToHSL","toUpperCase","DrawerTab","Messenger","useMessengerChannelSorted","MessengerIcon","Ionicons","OneTab","MemberTab","MemberIcon","TwoTab","today","toISOString","_item$last_message","_item$last_message2","_item$last_message3","last_message","marginRight","opacity","member_count","unread_count","RowField","rowStyle","CommonTextInput","renderMemberItem","userList","memberItem","ProfileModal","MaterialCommunityIcons","useThemeColor","colorName","colorFromProps","otherProps","_objectWithoutProperties","_excluded","light","dark","DefaultText","_excluded2","DefaultView","counterpart","direct","patchUser","finally","disabled","onBlur","onEndEditing","contentHeight","setContentHeight","editable","onContentSizeChange","translations","ko","require","_RNLocalize$findBestL","RNLocalize","languageTag","isRTL","I18nManager","forceRTL","intl","createIntl","defaultLocale","locale","messages","createIntlCache","formatMessage","defaultMessage","toString","localSearchReducer","initialState","action","keyword","active","Error","InviteItem","selectedRef","has","selected","setSelected","add","GroupTabView","_useLocalSearch","compare","_useReducer","useReducer","_useReducer2","searchState","useLocalSearch","memberSet","Set","includes","dispatchKeyword","user_ids","ExternalMembershipTabView","setKeyword","timeoutRef","getExternalMembershipList","useExternalMembershipList","setTimeout","clearTimeout","external","ROOTPATH","prefixes","config","screens","Main","NotFound","accountURL","defaultOption","baseURL","withCredentials","headers","_axios","interceptors","request","use","status","getToken","r","defaults","setItem","removeItem","tint","tabIconDefault","tabIconSelected","header","buttonColor","buttonBackgroundColor","innerHeight","setHeight","Dimensions","AuthContext","authReducer","authState","setError","_authState$user","_authState$user$membe","membership_set","g","root_group_id","checkLogin","_data$response","_data$response$data","noti","logout","NotFoundScreen","linkText","firebaseConfig","messagingSenderId","apiKeyEncrypted","padStart","app","firebase","initializeApp","apiKey","messaging","onMessage","payload","Notification","permission","body","alert","requestToken","serviceWorkerRegistration","currentToken","requestPermission","navigator","serviceWorker","register","scope","vapidKey","preventDefault","unregister","setEnable","enable","context","FirebaseContext","Root","createStackNavigator","Navigator","headerMode","screenOptions","cardStyle","animationEnabled","cardStyleInterpolator","CardStyleInterpolators","forVerticalIOS","Screen","MainNavigator","headerShown","gestureDirection","modalValues","modals","useFirebaseContext","DrawerNavigator","ModalsProvider","headerStyle","headerTitleStyle","headerLeft","canGOBackScreen","headerLeftContainerStyle","forHorizontalIOS","App","isLoadingComplete","setLoadingComplete","SplashScreen","Font","font","finish","useCachedResources","SafeAreaProvider","StatusBar","DefaultButton","hover","_props","module","exports","guestLogin","checkLoginToken","_await$axios$get","isOffline","code","startsWith","getUserList","group_id","_context6","_context7","patch","ids","updated","_context8","_context9","getMessengerChannelList","postChannel","postDirectChannel","putChannel","deleteChannel","id_lt","id_lt_param","results","formData","_context10","FormData","append","content_id","_context11","ModalsContext","allModals","Component","setModals","animationType","setAnimationType","ExactComponent","newModals","m","Modal","visible","getWindowType","ResizeWindowContext","detectMobile","_useWindowDimensions","useWindowDimensions","setWindowType","_useColorScheme","withSeparator","titleView","sort","a","b","_data2$message_set$","_a$last_message","_b$last_message","mutateAsync"],"mappings":"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","file":"static/js/app.37ba5076.chunk.js","sourcesContent":["/**\r\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\r\n * https://reactnavigation.org/docs/getting-started\r\n *\r\n */\r\nimport _ from 'lodash';\r\nimport { NavigationContainer, DefaultTheme, DarkTheme, NavigationContainerRef } from '@react-navigation/native';\r\nimport * as React from 'react';\r\nimport { ColorSchemeName } from 'react-native';\r\n\r\nimport LinkingConfiguration from './LinkingConfiguration';\r\nimport RootNavigator from './RootNavigator';\r\nimport MobileSafeAreaView from '../components/MobileSafeAreaView';\r\nimport { AuthProvider } from '../hooks/useAuthContext';\r\nimport { QueryClient, QueryClientProvider } from 'react-query';\r\nimport { ResizeWindowProvider } from '../hooks/useResizeWindow';\r\n\r\nconst queryClient = new QueryClient();\r\nconst navigationRef = React.createRef<NavigationContainerRef>();\r\n\r\nexport function navigate(name:string, params?:any) {\r\n  if (params)\r\n    navigationRef.current?.navigate(name, params);\r\n  navigationRef.current?.navigate(name);\r\n}\r\n\r\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\r\n  return <NavigationContainer\r\n    ref={navigationRef}\r\n    documentTitle={{formatter: (options, route) => {return `TOKKI TOK`}}}\r\n    linking={(process.versions && process.versions['electron'])?undefined:LinkingConfiguration}\r\n    theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\r\n      <MobileSafeAreaView>\r\n        <AuthProvider>\r\n          <QueryClientProvider client={queryClient}>\r\n            {/* devtools */}\r\n            {/* <ReactQueryDevtools initialIsOpen={true} /> */}\r\n            <ResizeWindowProvider>\r\n              <RootNavigator />\r\n            </ResizeWindowProvider>\r\n          </QueryClientProvider>\r\n        </AuthProvider>\r\n      </MobileSafeAreaView>\r\n  </NavigationContainer>\r\n}\r\n\r\n(function(l) {  // for github-page\r\n    if (l !== undefined && l.search[1] === '/' ) {\r\n        var decoded = l.search.slice(1).split('&').map(function(s) { \r\n        return s.replace(/~and~/g, '&')\r\n        }).join('?');\r\n        window.history.replaceState(null, '',\r\n            l.pathname.slice(0, -1) + decoded + l.hash\r\n        );\r\n    }\r\n}(window.location))\r\n    \r\nconst ignoreWarnings = ['ReactNativeFiberHostComponent'];\r\nconst _console = _.clone(console);\r\nconsole.warn = (message: string|Object) => {\r\n    var warn = true;\r\n    if (message instanceof Object)\r\n    warn = false;\r\n    else{\r\n    ignoreWarnings.forEach((value)=>{\r\n        if (message.indexOf && message.indexOf(value) <= -1) {\r\n            warn = false;\r\n        }\r\n    })\r\n    };\r\n    if (warn){\r\n        _console.warn(message);\r\n    }\r\n    else{\r\n        // console.log(message)\r\n    }\r\n};\r\n","import React from 'react'\r\nimport TextButton from \"./TextButton\"\r\nimport useAuthContext from \"../hooks/useAuthContext\"\r\nimport useResizeWindow from '../hooks/useResizeWindow'\r\nimport { View } from 'react-native'\r\nimport lang from '../lang'\r\nimport useModalsContext from '../hooks/useModalsContext'\r\nimport GuestLogoutModal from '../modals/GuestLogoutModal'\r\n\r\ntype ButtonProps = {title:string, onPress:()=>void, windowType?:'landscape'|'portrait'}\r\n\r\nexport default (props:{extra?:ButtonProps[]})=>{\r\n    const {auth, dispatch} = useAuthContext()\r\n    const { setModal } = useModalsContext()\r\n    const windowType = useResizeWindow()\r\n    const defaultButtonProps:ButtonProps[] = [{title:lang('sign out'), onPress:()=>{\r\n        if (auth?.user?.username.endsWith(\".guest\")){\r\n            setModal(GuestLogoutModal, {})\r\n        }\r\n        else{\r\n            dispatch({type:\"LOGOUT_REQUEST\"})\r\n        }\r\n    }}]\r\n    const buttonProps = (props.extra?[...props.extra, ...defaultButtonProps]:defaultButtonProps).filter(v=>v.windowType==windowType || v.windowType == undefined)\r\n    return<View style={{flexDirection:'row'}}>\r\n        {buttonProps.map((v,k)=><TextButton key={k} {...v} textStyle={{color:'white'}} color='#gray'/>)}\r\n    </View>\r\n}\r\n  ","import React, {useLayoutEffect, useState} from 'react';\r\nimport {\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  View,\r\n  StyleSheet,\r\n} from 'react-native';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport useAuthContext from '../../hooks/useAuthContext';\r\nimport lang from '../../lang'\r\n\r\nexport default function LoginScreen({\r\n  navigation, route\r\n}: StackScreenProps<any, 'Login'>) {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const {error, dispatch} = useAuthContext()\r\n  const _login = ()=>dispatch({type:'LOGIN_REQUEST', username, password})\r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      headerRight: undefined\r\n    });\r\n  }, [navigation, route]);\r\n\r\n  return (\r\n    <View style={Styles.login_wrapper}>\r\n      <View style={Styles.form}>\r\n        {error && <View style={Styles.form_error}>\r\n          <Text style={Styles.form_error_text}>{lang(error)}</Text>\r\n        </View>}\r\n        <TextInput\r\n          style={Styles.form_input}\r\n          value={username}\r\n          placeholder={lang('Username')}\r\n          onChangeText={(text) => setUsername(text)}\r\n          autoCapitalize={'none'}\r\n          keyboardType={'email-address'}\r\n          onSubmitEditing={_login}\r\n        />\r\n        <TextInput\r\n          style={Styles.form_input}\r\n          value={password}\r\n          placeholder={lang('Password')}\r\n          secureTextEntry\r\n          onChangeText={(text) => setPassword(text)}\r\n          onSubmitEditing={_login}\r\n        />\r\n        <TouchableOpacity onPress={_login}>\r\n          <View style={Styles.button}>\r\n            <Text style={Styles.button_label}>{lang('Sign in')}</Text>\r\n          </View>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity onPress={() => dispatch({type:\"LOGIN_GUEST\"})}>\r\n          <Text style={Styles.guest_footer_text}>\r\n            {lang(\"Sign in as guest\")}\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      <View style={Styles.login_social}>\r\n        <View style={Styles.login_social_separator}>\r\n          <View style={Styles.login_social_separator_line} />\r\n          <Text style={Styles.login_social_separator_text}>{'*'}</Text>\r\n          <View style={Styles.login_social_separator_line} />\r\n        </View>\r\n        <View style={Styles.login_social_buttons}>\r\n        </View>\r\n      </View>\r\n      {/* <>\r\n        <TouchableOpacity onPress={() => navigate(\"RegistrationScreen\")}>\r\n          <Text style={Styles.login_footer_text}>\r\n            {\"Don't have an account? \"}\r\n            <Text style={Styles.login_footer_link}>{'Sign up'}</Text>\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </> */}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst Styles = StyleSheet.create({\r\n    login_container: {\r\n      flex: 1,\r\n      backgroundColor: '#FFF',\r\n    },\r\n    login_header: {\r\n      alignItems: 'center',\r\n      paddingTop: 30,\r\n      paddingBottom: 50,\r\n      backgroundColor: '#208AEC',\r\n    },\r\n    login_header_logo: {\r\n      width: 220,\r\n      resizeMode: 'contain',\r\n    },\r\n    login_header_text: {\r\n      marginTop: 15,\r\n      color: '#f0f0f0',\r\n      fontSize: 16,\r\n    },\r\n    login_header_text_bold: {\r\n      color: '#fff',\r\n      fontWeight: 'bold',\r\n    },\r\n    login_wrapper: {\r\n      flex: 1,\r\n      justifyContent: 'space-between',\r\n      paddingVertical: 40,\r\n      borderTopRightRadius: 12,\r\n      borderTopLeftRadius: 12,\r\n      marginTop: -10,\r\n      backgroundColor: '#fff',\r\n      alignItems: 'center',\r\n    },\r\n    form: {\r\n      width: '100%',\r\n      maxWidth: 320,\r\n    },\r\n    form_error: {\r\n      height: 22,\r\n      width:'100%',\r\n      paddingHorizontal: 20,\r\n    },\r\n    form_error_text:{\r\n      textAlignVertical:'center',\r\n      color:'red',\r\n      fontSize:13,\r\n    },\r\n    form_input: {\r\n      height: 44,\r\n      paddingHorizontal: 20,\r\n      marginBottom: 20,\r\n      backgroundColor: '#EDF0F7',\r\n      borderRadius: 50,\r\n    },\r\n    button: {\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      height: 44,\r\n      backgroundColor: '#0065A4',\r\n      borderRadius: 50,\r\n    },\r\n    button_label: {\r\n      color: '#fff',\r\n      fontSize: 16,\r\n    },\r\n    login_social: {\r\n      width: '100%',\r\n      maxWidth: 280,\r\n      marginTop: 20,\r\n    },\r\n    login_social_separator: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n    },\r\n    login_social_separator_line: {\r\n      flex: 1,\r\n      width: '100%',\r\n      height: 1,\r\n      backgroundColor: '#E0E0E0',\r\n    },\r\n    login_social_separator_text: {\r\n      marginHorizontal: 10,\r\n      color: '#808080',\r\n      fontSize: 16,\r\n    },\r\n    login_social_buttons: {\r\n      flexDirection: 'row',\r\n      justifyContent: 'center',\r\n      marginTop: 20,\r\n    },\r\n    login_social_button: {\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      width: 60,\r\n      height: 60,\r\n      marginHorizontal: 12,\r\n      borderWidth: 1,\r\n      borderColor: '#E7E7E7',\r\n      borderRadius: 60,\r\n    },\r\n    login_social_icon: {\r\n      width: 38,\r\n      height: 38,\r\n      resizeMode: 'contain',\r\n    },\r\n    login_social_facebook: {\r\n      backgroundColor: '#4267B2',\r\n      borderColor: '#4267B2',\r\n    },\r\n    login_footer_text: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      color: '#808080',\r\n      fontSize: 14,\r\n    },\r\n    guest_footer_text: {\r\n      flexDirection: 'row',\r\n      alignSelf: 'center',\r\n      color: '#808080',\r\n      fontSize: 15,\r\n      margin: 15\r\n    },\r\n    login_footer_link: {\r\n      color: '#208AEC',\r\n      fontSize: 15,\r\n      fontWeight: 'bold',\r\n    },\r\n  });\r\n  ","import { useCallback, useEffect, useState } from \"react\"\r\nimport { InfiniteData, useInfiniteQuery, useMutation, useQueryClient } from \"react-query\"\r\nimport { getMessengerContentList, postMessage, deleteMessengerContent } from \"../../apis\"\r\nimport { MessengerContent } from \"../../types\"\r\nimport useWebsocketContext from \"../useWebsocketContext\"\r\n\r\nexport type MessengerContentPage = {\r\n  next?:MessengerContentPage\r\n  current:MessengerContent[]\r\n}\r\n\r\nexport default function useMessengerContentList(channel_id:number){  \r\n  const queryClient = useQueryClient()\r\n  const { data, fetchNextPage } = useInfiniteQuery<MessengerContentPage>(\r\n    [\"MessengerContentList\", channel_id], \r\n    async({pageParam})=>getMessengerContentList(channel_id, pageParam).then(current=>({current})), \r\n    {\r\n      select:data=>{\r\n        if(data.pages.length > 1)\r\n          data.pages[data.pages.length - 2].next = data.pages[data.pages.length - 1]\r\n        return data;\r\n      },\r\n      getNextPageParam:(lastPage)=>lastPage?.current.length?lastPage.current[lastPage.current.length - 1].id:undefined,\r\n      refetchOnReconnect:false,\r\n      refetchOnWindowFocus:false\r\n    }\r\n  )\r\n  const { lastJsonMessage } = useWebsocketContext()\r\n  useEffect(()=>{\r\n    if(lastJsonMessage !=null && lastJsonMessage['type']=='next_message' && lastJsonMessage['data']['channel'] == channel_id){\r\n      queryClient.setQueryData<InfiniteData<MessengerContentPage>>([\"MessengerContentList\", channel_id], (_data)=>{\r\n        if(_data?.pages[0].current && _data?.pages[0].current[0].id != lastJsonMessage['data'].id)\r\n          _data.pages[0].current = [lastJsonMessage['data'], ..._data?.pages[0].current]\r\n        return {...(_data || {pages:[], pageParams:[]})}\r\n      })\r\n    }\r\n  }, [lastJsonMessage])\r\n  return { data, fetchNextPage }\r\n}\r\n\r\nexport function useMessengerContentMutation(){\r\n  // const queryClient = useQueryClient()\r\n  const create = useMutation(postMessage, {\r\n    onSuccess: () => {\r\n      // queryClient.setQueryData(['MessengerContentList'], (data:any) => ({\r\n      //   pages: data.pages.slice(0, 1),\r\n      //   pageParams: data.pageParams.slice(0, 1),\r\n      // }))\r\n      // queryClient.invalidateQueries(\"MessengerContentList\")\r\n    }\r\n  });\r\n  const _delete = useMutation(deleteMessengerContent, {\r\n    onSuccess: (d, variables) => {\r\n      // queryClient.setQueryData(['MessengerContentList'], (data:any) => ({\r\n      //   pages: (data.pages as MessengerContent[][]).map(v=>v.filter(v2=>v2.id != variables)),\r\n      //   pageParams: data.pageParams,\r\n      // }))\r\n    }\r\n  })\r\n  return { create:create.mutate, delete:_delete.mutate }\r\n}","import React from 'react'\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport CommonSection from \"./CommonSection\"\r\nimport { Image, Linking, TextStyle } from \"react-native\"\r\nimport { View, Text } from \"./Themed\"\r\nimport { Link } from \"../types\"\r\n\r\n\r\n\r\nexport default ({link, isMobile}:{link:Link, isMobile:boolean})=>{\r\n    return <CommonSection containerStyle={{marginHorizontal:0}} bodyStyle={{padding:0}}>\r\n    <TouchableOpacity onPress={()=>Linking.openURL(link.url)} style={{flexDirection:'row'}} containerStyle={{width:'100%'}}>\r\n        {link.image && <Image source={{uri:link.image}} resizeMode=\"cover\" style={{ width:'100%', maxWidth:isMobile?120:150, maxHeight:isMobile?120:150, borderWidth:1}}/>}\r\n        <View style={{flex:1, marginHorizontal:20}}>\r\n        <Text style={{fontSize:18}}>{link.title}</Text>\r\n        <Text style={{fontSize:14}}>{link.description}</Text>\r\n        <Text style={{fontSize:12}}>{link.url}</Text>\r\n        </View>\r\n    </TouchableOpacity>\r\n    </CommonSection>\r\n}","import React, { createContext, useContext } from \"react\"\r\nimport { SendJsonMessage } from \"react-use-websocket/dist/lib/types\";\r\nimport { WebSocketInternalProvider } from \"../../hooks/useWebsocketContext\";\r\n\r\nconst WebSocketContext = createContext<{lastJsonMessage:any, sendJsonMessage:SendJsonMessage }>({lastJsonMessage:undefined, sendJsonMessage:()=>{}});\r\n\r\nexport const WebSocketProvider = ({disable, children}:{disable?:boolean, children:React.ReactNode})=>{\r\n  return disable?<></>:<WebSocketInternalProvider path={'messenger/ws/rtc/'} Context={WebSocketContext} useBackground>\r\n    {children}\r\n  </WebSocketInternalProvider>\r\n}\r\n\r\nexport default ()=>{\r\n  const webSocketContext = useContext(WebSocketContext)\r\n  return webSocketContext\r\n}\r\n\r\n","import React, { useCallback, useRef, useState, useMemo } from \"react\";\r\n//@ts-ignore\r\nimport { RTCView, mediaDevices, RTCPeerConnection, MediaStream, RTCSessionDescription, RTCIceCandidate } from \"react-native-webrtc-web-shim\";\r\n// @ts-ignore\r\nimport {TURN_SERVER} from \"@env\"\r\n\r\n\r\nconsole.log(TURN_SERVER?\"use turn server\": \"use stun server\")\r\n\r\nexport const peerConstraints = {\r\n\ticeServers: [TURN_SERVER?JSON.parse(TURN_SERVER):{urls: 'stun:stun.l.google.com:19302'}]\r\n};\r\n\r\nexport const sessionConstraints = {\r\n\tmandatory: {\r\n\t\tOfferToReceiveAudio: true,\r\n\t\tOfferToReceiveVideo: true,\r\n\t\tVoiceActivityDetection: true\r\n\t}\r\n};\r\n\r\nconst mediaConstraints = {audio:true, video:{framerate:30}}\r\n\r\n//@ts-ignore\r\nexport {MediaStream, RTCPeerConnection, RTCSessionDescription} from \"react-native-webrtc-web-shim\";\r\n\r\nconst onICEcandidate = (pc:typeof RTCPeerConnection, message:any)=>{\r\n\tconst _message = message.data.rtcMessage\r\n\t\tconst candidate = new RTCIceCandidate(_message);\r\n\t\tif (pc) {\r\n\t\t\tconsole.log(\"ICE candidate Added\");\r\n\t\t\tpc.addIceCandidate(candidate);\r\n\t\t}\r\n}\r\n\r\nconst sendICEcandidate = (event:any, sendMessage:(data:any)=>void, receiver:string, target:string) => {\r\n\t// When you find a null candidate then there are no more candidates.\r\n\t// Gathering of candidates has finished.\r\n\tif ( !event.candidate ) { return; };\r\n\t// Send the event.candidate onto the person you're calling.\r\n\t// Keeping to Trickle ICE Standards, you should send the candidates immediately.\r\n\tsendMessage({type:'ICEcandidate', receiver, data:{target, rtcMessage:event.candidate}})\r\n  }\r\n\r\nconst BAND_WIDTH = 8000\r\n\r\nconst optimizeSdp = (offerDescription:RTCSessionDescription)=>{\r\n\tvar arr = offerDescription.sdp.split('\\r\\n');\r\n\tarr.forEach((str:string, i:number) => {\r\n\t\tif (/^a=fmtp:\\d*/.test(str)) {\r\n\t\t\tarr[i] = str + `;x-google-max-bitrate=${BAND_WIDTH};x-google-min-bitrate=${BAND_WIDTH};x-google-start-bitrate=${BAND_WIDTH}`;\r\n\t\t} else if (/^a=mid:(0|video)/.test(str)) { // if with audio then 0=>1\r\n\t\t\tarr[i] += `\\r\\nb=AS:${BAND_WIDTH}`;\r\n\t\t}\r\n\t});\r\n  \treturn new RTCSessionDescription({\r\n    \ttype: offerDescription.type,\r\n    \tsdp: arr.join('\\r\\n'),\r\n  \t})\r\n}\r\n\r\nconst createOffer = async(pcRefCurrent:{pc?:typeof RTCPeerConnection, receiver:string}, sendMessage:(data:any)=>void, stream:typeof MediaStream, target:string, user?:{name:string})=>{\r\n\tstream && pcRefCurrent.pc.addStream( stream );\r\n\tconst offerDescription = optimizeSdp((await pcRefCurrent.pc.createOffer( sessionConstraints )));\r\n\tawait pcRefCurrent.pc.setLocalDescription( offerDescription );\r\n\tsendMessage({type:'call', receiver:pcRefCurrent.receiver, data:{target, name:user?.name, rtcMessage:offerDescription}})\r\n}\r\n\r\nexport const useLocalCam = (sendMessage:(data:any)=>void)=>{\r\n\tconst pcRef = useRef<Record<number,{pc:typeof RTCPeerConnection, receiver:string}>>({})\r\n\tconst [sender, setSender] = useState<string>()\r\n\tconst [_stream, setStream] = useState<MediaStream>()\r\n\tconst isPlay = useMemo(()=>_stream?true:false, [_stream])\r\n\tconst CustomRTCView = useCallback(React.memo(({style}:{style:any})=>(_stream?<RTCView stream={_stream} style={style} videoProps={{height:'100%'}} />:<></>)) , [_stream])\r\n\tconst start = useCallback(async(user:{name:string}, stream?:typeof MediaStream, mode?:'camera'|'display')=>{\r\n\t\tconsole.log(\"start\");\r\n\t\tif (!_stream || mode!==undefined) {\r\n\t\t\ttry {\r\n\t\t\t\tlet newStream:typeof MediaStream;\r\n\t\t\t\tif(mode == 'camera'){\r\n\t\t\t\t\tnewStream = await mediaDevices.getUserMedia(mediaConstraints)\r\n\t\t\t\t}\r\n\t\t\t\telse if (mode == 'display'){\r\n\t\t\t\t\tnewStream = await mediaDevices.getDisplayMedia(mediaConstraints)\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tnewStream = stream || await mediaDevices.getUserMedia(mediaConstraints).catch((e:any)=>mediaDevices.getDisplayMedia(mediaConstraints));\r\n\t\t\t\t}\r\n\t\t\t\tsetStream(newStream)\r\n\t\t\t\tObject.entries(pcRef.current).map(([k, v])=>{\r\n\t\t\t\t\tcreateOffer(v, sendMessage, newStream, 'guest', user)\r\n\t\t\t\t})\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.error(e);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [_stream])\r\n\tconst stop = useCallback(()=>{\r\n\t\tconsole.log(\"stop\");\r\n\t\tif(_stream){\r\n\t\t\t_stream.getTracks().map((track:any) => track.stop());\r\n\t\t\tsetStream(undefined)\r\n\t\t}\r\n\t}, [_stream])\r\n\treturn {\r\n\t\tstart,\r\n\t\tstop,\r\n\t\twebsocketOnMessage: async(response:any, user:{name:string})=>{\r\n\t\t\tlet type = response.type;\r\n\t\t\tif (type == 'connection'){\r\n\t\t\t\tsetSender(response.data.channel_name)\r\n\t\t\t}\r\n\t\t\tif (type == 'start' && response.data.target=='host'){\r\n\t\t\t  console.log('1 start')\r\n\t\t\t  const peerConnection = new RTCPeerConnection( peerConstraints );\r\n\t\t\t  peerConnection.addEventListener( 'icecandidate', (event:any) => sendICEcandidate(event, sendMessage, response.sender, 'guest'));\r\n\t\t\t  pcRef.current[response.sender] = {pc:peerConnection, receiver: response.sender}\r\n\t\t\t  createOffer(pcRef.current[response.sender], sendMessage, _stream, 'guest', user)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (type == \"answer\" && response.data.target == 'host'){\r\n\t\t\t  console.log('3 answer')\r\n\t\t\t  const peerConnection = pcRef.current[response.sender].pc\r\n\t\t\t  const answerDescription = new RTCSessionDescription(response.data.rtcMessage);\r\n\t\t\t  await peerConnection.setRemoteDescription( answerDescription );\r\n\t\t\t  // const streams = pcRef.current.pc.getRemoteStreams()\r\n\t\t\t  // setMirrorStream(streams[streams.length - 1])\r\n\t\t\t}\r\n\t\t\tif (type == \"ICEcandidate\" && response.data.target=='host'){\r\n\t\t\t\tconst peerConnection = pcRef.current[response.sender].pc\r\n\t\t\t\tonICEcandidate(peerConnection, response)\r\n\t\t\t}\r\n\t\t},\r\n\t\tCustomRTCView,\r\n\t\tisPlay,\r\n\t\tsender,\r\n\t\t// renderMirrorView,\r\n\t}\r\n}\r\n\r\nexport const useRemoteCam = (sendMessage:(data:any)=>void)=>{\r\n\tconst pcRef = useRef<{pc?:RTCPeerConnection, receiver?:string, statsInterval?:any}>({})\r\n\tconst [user, setUser] = useState<{name:string}>()\r\n\tconst [_stream, setStream] = useState<MediaStream>()\r\n\tconst CustomRTCView = useCallback(React.memo((style:any)=>_stream?<RTCView stream={_stream} style={style} videoProps={{height:'100%'}} />:<></>), [_stream])\r\n\tconst isPlay = useMemo(()=>_stream?true:false, [_stream])\r\n\tconst start = useCallback((receiver:string)=>{\r\n\t\tconsole.log(\"start\");\r\n\t\tif (!pcRef.current.pc) {\r\n\t\t  pcRef.current.pc = new RTCPeerConnection( peerConstraints );\r\n\t\t  pcRef.current.receiver = receiver\r\n\t\t}\r\n\t\tif (!_stream){\r\n\t\t\tsendMessage({type:'start', receiver, data:{'target': 'host'}})\r\n\t\t}\r\n\t}, [_stream])\r\n\tconst stop = () => {\r\n\t\tconsole.log(\"stop\");\r\n\t\tif (pcRef.current.pc) {\r\n\t\t  // peerConnection._unregisterEvents();\r\n\t\t  setStream(undefined)\r\n\t\t  pcRef.current.pc.close();\r\n\t\t  pcRef.current.pc = undefined\r\n\t\t  pcRef.current.receiver = undefined\r\n\t\t  clearInterval(pcRef.current.statsInterval)\r\n\t\t}\r\n\t}\r\n\treturn {\r\n\t\tstart,\r\n\t\tstop,\r\n\t\twebsocketOnMessage: async(response:any)=>{\r\n\t\t\tlet type = response.type;\r\n\t\t\tif (type == 'start' && response.data.target=='guest' && response.sender == pcRef.current?.receiver){\r\n\t\t\t\tconsole.log('(remote)1 start')\r\n\t\t\t\tconst peerConnection = pcRef.current.pc\r\n\t\t\t\tsetUser({name: response.data.name})\r\n\t\t\t\tpeerConnection.addEventListener('icecandidate', (event:any) => sendICEcandidate(event, sendMessage, response.sender, 'host'));\r\n\t\t\t\tpeerConnection.addEventListener('iceconnectionstatechange', (e:any)=>{\r\n\t\t\t\t\tif (pcRef.current.pc.iceConnectionState == 'connected'){\r\n\t\t\t\t\t\tlet activeStream = false\r\n\t\t\t\t\t\tpcRef.current.statsInterval = setInterval(async()=>{\r\n\t\t\t\t\t\t\tconst stats = await pcRef.current.pc.getStats(null)\r\n\t\t\t\t\t\t\tlet statsOutput = \"\";\r\n\t\t\t\t\t\t\tlet framePerSecond = undefined\r\n\t\t\t\t\t\t\tstats.forEach((report:any) => {\r\n\t\t\t\t\t\t\t\tif (report.type === \"inbound-rtp\" && report.kind === \"video\") {\r\n\t\t\t\t\t\t\t\t\tObject.keys(report).forEach((statName) => {\r\n\t\t\t\t\t\t\t\t\t\tstatsOutput += `${statName}: ${report[statName]}\\n`;\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tframePerSecond = report.framesPerSecond\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tconsole.log(activeStream, framePerSecond)\r\n\t\t\t\t\t\t\tif (framePerSecond != undefined){\r\n\t\t\t\t\t\t\t\tactiveStream = true\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (activeStream){\r\n\t\t\t\t\t\t\t\tstop()\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tconsole.log(new Date().toTimeString().split(' ')[0], statsOutput)\r\n\t\t\t\t\t\t}, 1000);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (pcRef.current.pc.iceConnectionState == 'failed'){\r\n\t\t\t\t\t\tstop()\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t// peerConnection.addTransceiver('audio', {\r\n\t\t\t\t// \tdirection: 'recvonly'\r\n\t\t\t\t// });\r\n\t\t\t\tpeerConnection.addTransceiver('video', {\r\n\t\t\t\t\tdirection: 'recvonly'\r\n\t\t\t\t});\r\n\t\t\t\tawait createOffer({pc:pcRef.current.pc, receiver:response.sender}, sendMessage, _stream, 'host', user)\r\n\t\t\t}  \r\n\t\t\tif (type == \"answer\" && response.data.target=='guest' && response.sender == pcRef.current?.receiver){\r\n\t\t\t\tconsole.log('(remote)3 answer')\r\n\t\t\t\tconst answerDescription = new RTCSessionDescription(response.data.rtcMessage);\r\n\t\t\t\tawait pcRef.current.pc.setRemoteDescription( answerDescription );\r\n\t\t\t\tconst streams = pcRef.current.pc.getRemoteStreams()\r\n\t\t\t\tsetStream(streams[streams.length - 1])\r\n\t\t\t\tsendMessage({type:'end', receiver:pcRef.current.receiver, data:{}})\r\n\t\t\t}\r\n\t\t\tif (type == \"call\" && response.sender == pcRef.current?.receiver){\r\n\t\t\t  console.log('2 call')\r\n\t\t\t  const peerConnection = pcRef.current.pc\r\n\t\t\t  setUser({name:response.data.name})\r\n\t\t\t  if (!peerConnection)\r\n\t\t\t\treturn\r\n\t\t\t  peerConnection.addEventListener( 'icecandidate', (event:any) => sendICEcandidate(event, sendMessage, response.sender, 'host'));\r\n\t\t\t  const offerDescription = new RTCSessionDescription(response.data.rtcMessage);\r\n\t\t\t  await peerConnection.setRemoteDescription( offerDescription );\r\n\t\t\t  const answerDescription = await peerConnection.createAnswer( sessionConstraints );\r\n\t\t\t  await peerConnection.setLocalDescription( answerDescription );\r\n\t\t\t  sendMessage({type:'answer', receiver:pcRef.current.receiver, data:{target:'host', rtcMessage:peerConnection.localDescription}})\r\n\t\t\t  // Here is a good place to process candidates.\r\n\t\t\t  const streams = pcRef.current.pc.getRemoteStreams()\r\n\t\t\t  setStream(streams[streams.length - 1])\r\n\t\t\t}\r\n\t\t\tif (type == \"ICEcandidate\" && response.data.target=='guest' && response.sender == pcRef.current?.receiver)\r\n\t\t\t  onICEcandidate(pcRef.current.pc, response)\r\n\t\t},\r\n\t\tCustomRTCView,\r\n\t\tuser,\r\n\t\tisPlay\r\n\t}\r\n}","import {StyleSheet} from \"react-native\";\r\nexport {useLocalCam, useRemoteCam} from \"./p2p\"\r\n\r\nexport const camStyle = StyleSheet.create({\r\n\tcontainer:{ flex: 1},\r\n\tcam:{ flex: 1, height:'100%'},\r\n\tbottonContainer: {position:\"absolute\", bottom:0, justifyContent:'flex-end'},\r\n\tbuttonBar: { flexDirection: \"row\", justifyContent: \"space-around\" },\r\n\tlabel: {backgroundColor:'#0008', color:'white', paddingHorizontal:5},\r\n})","import React, { useEffect } from \"react\";\r\nimport {Button, View, Text} from \"react-native\";\r\nimport useWebsocketContext from \"./useWebsocketContext\";\r\nimport { useLocalCam, camStyle} from \"./webrtc\";\r\n\r\n\r\nexport default (props:{user?:{name:string}|null, mode?:'camera'|'display'|null})=>{\r\n  const {lastJsonMessage, sendJsonMessage} = useWebsocketContext()\r\n  const {start, stop, websocketOnMessage, CustomRTCView, isPlay} = useLocalCam(sendJsonMessage)\r\n  useEffect(()=>{\r\n    props.user && lastJsonMessage && websocketOnMessage(lastJsonMessage, props.user)\r\n  }, [lastJsonMessage, props.user])\r\n  useEffect(()=>{\r\n    if(props.mode && !isPlay){\r\n      props.user && start(props.user, undefined, props.mode)\r\n    }\r\n    else if(props.mode===null && isPlay){\r\n      stop()\r\n    }\r\n    return ()=>{isPlay && stop()}\r\n  }, [isPlay, props.user, props.mode])\r\n  return (\r\n    <View style={camStyle.container}>\r\n      <CustomRTCView style={camStyle.cam}/>\r\n      <View style={camStyle.bottonContainer}>\r\n        <View style={camStyle.buttonBar}>  \r\n        </View>\r\n        <View style={{flexDirection:'row'}}><Text style={camStyle.label}>{props.user?.name}</Text></View>\r\n        <View style={camStyle.buttonBar}>\r\n          {props.mode === undefined && !isPlay && <Button title=\"Start\" onPress={()=>props.user && start(props.user)} />}\r\n          {props.mode === undefined && isPlay && <Button title=\"Stop\" onPress={stop} />}\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n","import React, { useState, useEffect, } from \"react\";\r\nimport {Button,Text, TextInput, View} from \"react-native\";\r\nimport useWebsocketContext from \"./useWebsocketContext\";\r\nimport { useRemoteCam, camStyle} from \"./webrtc\";\r\n\r\nexport default (props:{receiver?:string})=>{\r\n  const [receiver, setReceiver] = useState('')\r\n  const {lastJsonMessage, sendJsonMessage} = useWebsocketContext()\r\n  const {start, stop, websocketOnMessage, CustomRTCView, isPlay, user} = useRemoteCam(sendJsonMessage)\r\n  useEffect(()=>{\r\n    lastJsonMessage && websocketOnMessage(lastJsonMessage)\r\n  }, [lastJsonMessage])\r\n  useEffect(()=>{\r\n    if(props.receiver){\r\n      start(props.receiver)\r\n    }\r\n    return ()=>stop()\r\n  }, [props.receiver])\r\n  return (\r\n    <View style={camStyle.container}>\r\n      <CustomRTCView style={camStyle.cam}/>\r\n      <View style={camStyle.bottonContainer}>\r\n        <View style={camStyle.buttonBar}>\r\n        </View>\r\n        <View style={{flexDirection:'row'}}>{\r\n          (props.receiver || isPlay)?\r\n          <Text style={camStyle.label}>{user?.name || 'loading...'}</Text>:\r\n          <>\r\n            <Text style={{borderWidth:1}}>Receiver:&nbsp;</Text>\r\n            <TextInput style={{borderWidth:1, flex:1}} value={receiver} onChangeText={setReceiver}/>\r\n          </> \r\n        }</View>\r\n        <View style={camStyle.buttonBar}>\r\n          {props.receiver === undefined && !isPlay && <Button title=\"Start\" onPress={()=>start(receiver)} />}\r\n          {props.receiver === undefined && isPlay && <Button title=\"Stop\" onPress={stop} />}\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport { StyleSheet, View } from 'react-native';\r\nimport { View as ThemedView } from '../../../components/Themed' \r\nimport Colors from '../../../constants/Colors';\r\nimport {default as useRtcContext, WebSocketProvider as RtcProvider} from \"../../../lib/react-native-webrtc/useWebsocketContext\";\r\nimport LocalCam from '../../../lib/react-native-webrtc/LocalCam';\r\nimport RemoteCam from '../../../lib/react-native-webrtc/RemoteCam';\r\nimport useResizeWindow from '../../../hooks/useResizeWindow';\r\nimport useAuthContext from '../../../hooks/useAuthContext';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\nimport CommonButton from '../../../components/CommonButton';\r\n\r\ntype VideoType = 'camera'|'display'|null\r\ntype VideoCallProps = {channel_id:number, setDisable:(disable:boolean)=>void, disable?:boolean}\r\n\r\n\r\nconst VideoView = (props:{\r\n  scale:string,\r\n  focusGuest?:string,\r\n  setFocusGuest:(focusGuest?:string)=>void\r\n  receiver?:string\r\n  children:React.ReactNode\r\n})=>{\r\n  return <View style={[{maxWidth:props.scale, maxHeight:props.scale, borderWidth:1, borderColor:Colors.borderColor, backgroundColor:'gray', flexDirection:'row', flexGrow:1}, (props.focusGuest == undefined || props.focusGuest == props.receiver)?{}:{width:0, height:0}]}>\r\n    <TouchableOpacity style={{flex:1}} containerStyle={{flex:1, justifyContent:'center'}} onPress={()=>props.setFocusGuest(props.focusGuest?undefined:props.receiver)}>\r\n    {props.children}\r\n    </TouchableOpacity>\r\n  </View>\r\n    \r\n  \r\n}\r\n\r\nconst VideoCallContainer = ({channel_id, disable, setDisable}:VideoCallProps)=>{\r\n  const {auth} = useAuthContext()\r\n  const [videoMode, setVideoMode] = useState<VideoType>(null)\r\n  const [guests, setGuests] = useState<string[]>([])\r\n  const [focusGuest, setFocusGuest] = useState<string>()\r\n  const windowType = useResizeWindow()\r\n  const { lastJsonMessage, sendJsonMessage } = useRtcContext()\r\n  useEffect(()=>{\r\n    if(lastJsonMessage !=null){\r\n      if(lastJsonMessage['type']=='connection'){\r\n        sendJsonMessage({'type':'broadcast', 'data':{'channel_id':channel_id}})\r\n      }\r\n      if(lastJsonMessage['type']=='broadcast_guest' || lastJsonMessage['type']=='broadcast_host'){\r\n        setGuests([...guests, lastJsonMessage['sender']])\r\n      }\r\n      if(lastJsonMessage['type']=='broadcast_disconnect'){\r\n        const channel_name = lastJsonMessage['sender']\r\n        const exist = guests.find(v=>v == channel_name)\r\n        exist && setGuests(guests.filter(v=>v != channel_name))\r\n      }\r\n    }\r\n  }, [lastJsonMessage])\r\n  const scale = focusGuest?'100%':`${100 / Math.max(2, Math.ceil(Math.sqrt(guests.length + 1)))}%`\r\n  const toggleVideoMode = (mode:VideoType)=>{\r\n    setVideoMode(videoMode!=mode?mode:null)\r\n  }\r\n  return lastJsonMessage !==undefined ?\r\n    <ThemedView style={[\r\n      {aspectRatio:!disable?16/9:0, borderColor:Colors.borderColor, borderRadius:10},\r\n      windowType=='landscape'?{flexShrink:0.5, height:'100%', borderLeftWidth:1, paddingBottom:65}:{maxHeight:'36%', width:'100%', borderBottomWidth:1}\r\n    ]}>\r\n      <View style={{aspectRatio:16/9, backgroundColor:'white', flexWrap:'wrap', flexDirection:'row', width:'100%', height:'100%'}}>\r\n        {guests.map((receiver, i)=><VideoView scale={scale} focusGuest={focusGuest} setFocusGuest={setFocusGuest} receiver={receiver}>\r\n          <RemoteCam receiver={receiver}/>\r\n        </VideoView>\r\n        )}\r\n        <VideoView scale={scale} focusGuest={focusGuest} setFocusGuest={setFocusGuest} receiver={auth.user?.name}>\r\n          <LocalCam user={auth.user} mode={videoMode}/>\r\n        </VideoView>\r\n      </View>\r\n      <ThemedView style={[\r\n          {position:'absolute', alignItems:'center', justifyContent:'flex-end', width:'100%',flexDirection:'row'},\r\n          windowType=='landscape'?{bottom:0, paddingVertical:15, paddingHorizontal:19}:{backgroundColor:'transparent'}\r\n        ]}>\r\n        <CommonButton title={'⏺️'} onPress={()=>toggleVideoMode('camera')}/>\r\n        <CommonButton title={'🖥️'} onPress={()=>toggleVideoMode('display')}/>\r\n        <CommonButton title={'📹'} onPress={()=>setDisable(true)}/>\r\n      </ThemedView>\r\n    </ThemedView>:\r\n  <></>\r\n  }\r\n  \r\nexport default React.memo(({channel_id, disable, setDisable}:VideoCallProps)=>{\r\n  return <RtcProvider disable={disable}>\r\n    <VideoCallContainer channel_id={channel_id} disable={disable} setDisable={setDisable}/>\r\n  </RtcProvider>\r\n})\r\n","import React from 'react'\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport CommonSection from \"./CommonSection\"\r\nimport { Linking, TextStyle } from \"react-native\"\r\nimport { FontAwesome } from '@expo/vector-icons'; \r\nimport { View, Text } from \"./Themed\"\r\nimport { File } from \"../types\"\r\nimport useColorScheme from '../hooks/useColorScheme';\r\n\r\nfunction humanFileSize(size:number) {\r\n    var i = size == 0 ? 0 : Math.floor(Math.log(size) / Math.log(1024));\r\n    return (size / Math.pow(1024, i)).toFixed(2) + ' ' + ['B', 'kB', 'MB', 'GB', 'TB'][i];\r\n  }\r\n  \r\n\r\nexport default ({file, isMobile, showBorder}:{file:File, isMobile:boolean, showBorder:boolean})=>{\r\n    const theme = useColorScheme()\r\n    return <CommonSection containerStyle={{marginHorizontal:0}} bodyStyle={showBorder?{padding:10}:{borderWidth:0, padding:0}}>\r\n    <TouchableOpacity onPress={()=>Linking.openURL(file.file)} style={{flexDirection:'row', alignItems:'flex-start'}} containerStyle={{width:'100%'}}>\r\n        <FontAwesome name=\"file-o\" size={20} color={theme=='light'?'black':'white'} />\r\n        <View style={{flex:1, marginHorizontal:10}}>\r\n            <Text style={{fontSize:18}}>{file.filename}</Text>\r\n            <Text style={{fontSize:14}}>{humanFileSize(file.filesize)}</Text>\r\n        </View>\r\n    </TouchableOpacity>\r\n    </CommonSection>\r\n}","import React, {useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState} from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { Platform, StyleSheet, View } from 'react-native';\r\nimport CommonSection from '../../../components/CommonSection';\r\nimport { FlatList, TextInput } from 'react-native-gesture-handler';\r\nimport CommonButton from '../../../components/CommonButton';\r\nimport useMessengerContentList, { MessengerContentPage, useMessengerContentMutation } from '../../../hooks/lists/useMessengerContent.List';\r\nimport useAuthContext from '../../../hooks/useAuthContext';\r\nimport HeaderRight from '../../../components/HeaderRight';\r\nimport useMessengerMemberList, { useMessengerMemberMutation } from '../../../hooks/lists/useMessengerMemberList';\r\nimport { navigate } from '../../../navigation';\r\nimport Colors from '../../../constants/Colors';\r\nimport useColorScheme from '../../../hooks/useColorScheme';\r\nimport { Text, View as ThemedView } from '../../../components/Themed' \r\nimport Hyperlink from 'react-native-hyperlink'\r\nimport useMessengerChannelList from '../../../hooks/lists/useMessengerChannelList';\r\nimport useIsMobile from '../../../hooks/useIsMobile';\r\nimport LinkPreview from '../../../components/LinkPreview';\r\nimport lang from '../../../lang'\r\nimport Avatar from '../../../components/Avatar';\r\nimport VideoCallSection from './VideoCallSection';\r\nimport useResizeWindow from '../../../hooks/useResizeWindow';\r\nimport FilePreview from '../../../components/FilePreview';\r\nimport useModalsContext from '../../../hooks/useModalsContext';\r\nimport InviteModal from '../../../modals/InviteModal';\r\n\r\n\r\nfunction uploadFile(){\r\n  return new Promise<Blob|undefined>((resolve, reject)=>{\r\n    if (Platform.OS == 'web'){\r\n      var input = document.createElement('input');\r\n      input.type = 'file';\r\n      input.onchange = e => { \r\n        resolve((e.target as any).files[0])\r\n      }\r\n      input.onabort = reject\r\n      input.onerror = reject\r\n      input.click();\r\n    }\r\n    else\r\n      resolve(undefined)\r\n  })\r\n}\r\n\r\nconst MessengerContentPageItem = React.memo((props:MessengerContentPage & {ownerId?:number})=>{\r\n  const isMobile = useIsMobile()\r\n  let nextPage = props.next;\r\n    while(nextPage?.next && nextPage.current.length==0){\r\n      nextPage = nextPage.next\r\n    }\r\n    const nextContent = nextPage?.current[0]\r\n    return <View style={{flexDirection: 'column-reverse'}}>\r\n      \r\n      {props.current.map((content, index2)=>{\r\n        const next = index2 + 1 < props.current.length?props.current[index2+1]:nextContent\r\n        const created:string = content.created.slice(0, 16)\r\n        const date = created.slice(0, 10)\r\n        const isSystem = content.user == null\r\n        const isFirst = next==undefined || (content.user != next.user || created != next.created.slice(0, 16))\r\n        const isSelf = props.ownerId == content.user\r\n        const dayChanged = next==undefined || date != next.created.slice(0, 10)\r\n        const message = content.message_set[0]\r\n        if (isSystem)\r\n          return <View key={content.id} style={{flexDirection:'row', justifyContent:'center', width:'100%', marginVertical:5}}>\r\n            <Text>{message.content}</Text>\r\n          </View>\r\n        return <View key={content.id}>\r\n          {dayChanged?<View style={{flexDirection:'row', justifyContent:'center', width:'100%'}}><Text>{date}</Text></View>:undefined}\r\n          <View key={content.id} style={{flexDirection:'row', justifyContent:isSelf?'space-between':'flex-start', width:'100%'}}>\r\n            {isFirst && !isSelf? <View style={{marginTop:3, marginLeft:12}}><Avatar name={content.name} userId={content.user} size={36}/></View>:<View style={{width:48}}/>}\r\n            <CommonSection outerContainerStyle={{width:undefined, maxWidth:'90%'}} title={isFirst?content.name:undefined} titleStyle={{flex:undefined}} bodyStyle={{padding:10}} subtitle={`${created.slice(11)}`}>\r\n              {/* @ts-ignore */}\r\n              <Hyperlink linkDefault={ true } style={{wordBreak:\"break-word\"}} linkStyle={{color: '#12b886'}}>\r\n                <Text selectable>{message.content}</Text>\r\n              </Hyperlink>\r\n              {content.file_set.map((file, fileIndex)=><FilePreview key={fileIndex} file={file} isMobile={isMobile} showBorder={content.file_set.length>1 || message.content.length>0}/>)}\r\n              {content.link_set.map((link, linkIndex)=><LinkPreview key={linkIndex} link={link} isMobile={isMobile}/>)}              \r\n            </CommonSection>\r\n          </View>\r\n        </View>\r\n      })}\r\n    </View>\r\n\r\n})\r\n\r\nexport default function ChatScreen({navigation, route}: StackScreenProps<any, 'Chat'>) {\r\n  const channel_id = route?.params?.id\r\n  const height = useRef(0)\r\n  const inputRef = useRef<TextInput>(null)\r\n  const {auth} = useAuthContext()\r\n  const { setModal } = useModalsContext()\r\n  const channel = useMessengerChannelList(auth)?.find(v=>v.id==parseInt(channel_id))\r\n  const {data, fetchNextPage } = useMessengerContentList(channel_id)\r\n  const memberList = useMessengerMemberList(channel_id)\r\n  const member_id = useMemo(()=>memberList?.find(v=>v.user == auth.user?.id)?.id, [auth, memberList])\r\n  const windowType = useResizeWindow()\r\n  const messengerMemberMutation = useMessengerMemberMutation()\r\n  const [value, setValue] = useState('')\r\n  const [autoFocus, setAutoFocus] = useState(true)\r\n  const [videoMode, setVideoMode] = useState<boolean>(false)\r\n  const theme = useColorScheme()\r\n  const postValue = ()=>{\r\n    if (value.length>0){\r\n      contentMutation.create({channel:channel_id, user:auth.user?.id, content:value})\r\n      setValue('')\r\n      setAutoFocus(true)\r\n    }\r\n  }\r\n  const contentMutation = useMessengerContentMutation()\r\n\r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      headerRight: ()=> <HeaderRight extra={[\r\n        {title:lang('invite'), onPress:()=>setModal(InviteModal, {id:channel_id})},\r\n        {title:lang('leave'), onPress:()=>{member_id && messengerMemberMutation.leave(member_id);back()}}\r\n      ]}/>,\r\n      title: channel?.name\r\n    });\r\n  }, [navigation, route, member_id]);\r\n\r\n  const renderItem = useCallback(({item, index}:{item:MessengerContentPage, index:number})=><MessengerContentPageItem {...item} ownerId={auth.user?.id}/>, [auth])\r\n  \r\n  const back = ()=>{\r\n    if(navigation.canGoBack())\r\n        navigation.goBack()\r\n      else{\r\n        navigation.navigate('HomeScreen', {tab:2})\r\n      }\r\n  }\r\n  useEffect(()=>{\r\n    if (!(channel_id))\r\n      back()\r\n  }, [])\r\n  useEffect(()=>{\r\n    if(autoFocus){\r\n      (inputRef.current as any).focus()\r\n      setAutoFocus(false)\r\n    }\r\n  }, [autoFocus])\r\n\r\n  return <View style={{flex:1, alignItems:'center', flexDirection:windowType=='landscape'?'row-reverse':'column'}}>\r\n    <VideoCallSection channel_id={channel_id} setDisable={(d)=>setVideoMode(!d)} disable={!videoMode}/>\r\n    <View style={[{flex:videoMode?undefined:1, flexShrink:1}, windowType=='landscape'?{minWidth:320, height:'100%'}:{width:'100%'}]}>\r\n      <FlatList\r\n        style={{flexDirection: 'column-reverse'}}\r\n        contentContainerStyle={{padding:10, flexGrow:1, flexDirection: 'column-reverse'}}\r\n        data={data?.pages}\r\n        renderItem={renderItem}\r\n        onScroll={(e)=>{\r\n          if (e.nativeEvent.contentOffset.y + e.nativeEvent.contentSize.height - height.current < 1)\r\n            fetchNextPage()\r\n        }}\r\n        onLayout={(p)=>{height.current = p.nativeEvent.layout.height}}\r\n      />\r\n      <ThemedView style={{bottom:0, alignItems:'center', width:'100%',flexDirection:'row', paddingTop:15, paddingBottom:10, paddingHorizontal:19}}>\r\n        <TextInput ref={inputRef} value={value} onChangeText={setValue} style={{\r\n          flex:1, borderWidth:1, height:40, borderRadius:6, borderColor:Colors.borderColor, backgroundColor:Colors[theme].background, color:Colors[theme].text\r\n        }} onSubmitEditing={postValue} blurOnSubmit={true}/>\r\n        <CommonButton title={'💬'} onPress={postValue}/>\r\n        <CommonButton title={'📤'} onPress={()=>uploadFile().then(f=>{\r\n          contentMutation.create({channel:channel_id, user:auth.user?.id, content:'', file:f})\r\n        })}/>\r\n        {!videoMode && <CommonButton title={'📹'} onPress={()=>setVideoMode(!videoMode)}/>}\r\n      </ThemedView>\r\n    </View>\r\n  </View>\r\n}","import React, {useCallback, useRef} from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { StyleSheet, Text, Button, View} from 'react-native';\r\n\r\n\r\nexport default function TabOneScreen({\r\n  navigation\r\n}: StackScreenProps<any, 'TabOne'>) {\r\n  return <View style={{padding:10}}>\r\n    \r\n  </View>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  Panel_Button_Text: {\r\n    textAlign: 'center',\r\n    color: '#fff',\r\n    fontSize: 21\r\n  },\r\n  Panel_Holder: {\r\n    borderWidth: 1,\r\n    borderColor: '#888',\r\n    marginVertical: 5\r\n  }\r\n})","import LoginScreen from \"./main/LoginScreen\";\r\nimport ChatScreen from \"./main/ChatScreen\";\r\nimport HomeScreen from \"./main/HomeScreen\";\r\nimport TabOneScreen from \"./main/TabOneScreen\";\r\n// import BoardScreen from \"../lib/blacktokki-board/BoardScreen\";\r\n// import BoardEditScreen from \"../lib/blacktokki-board/BoardEditScreen\";\r\nimport { Screens } from \"../types\";\r\nimport lang from \"../lang\"\r\n\r\nexport const main = {\r\n    HomeScreen:{\r\n        title:lang('home'),\r\n        component:HomeScreen,\r\n        path:'home',\r\n    },\r\n    ChatScreen:{\r\n        title:lang('chat'),\r\n        component:ChatScreen,\r\n        path:'chat'\r\n    },\r\n    // BoardScreen:{\r\n    //     title:'board',\r\n    //     component:BoardScreen,\r\n    //     path:'board'\r\n    // },\r\n    TabOneScreen:{\r\n        title:'tab one',\r\n        component:TabOneScreen,\r\n        path:'one'\r\n    },\r\n} as Screens\r\n\r\nexport const login = {\r\n    LoginScreen:{\r\n        path: 'login',\r\n        title: lang('Sign in'),\r\n        component:LoginScreen\r\n    },\r\n} as Screens\r\n\r\nexport const modal = {\r\n    // BoardEditScreen:{\r\n    //     title:'board',\r\n    //     component:BoardEditScreen,\r\n    //     path:'modal/board'\r\n    // },\r\n} as Screens","import React, {useState, useEffect, useLayoutEffect} from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { StyleSheet, Text, Button, View} from 'react-native';\r\nimport { Text as StyledText } from 'react-native-paper';\r\nimport {TabViewNavigator} from '../../navigation/DrawerNavigator';\r\nimport useResizeWindow from '../../hooks/useResizeWindow';\r\nimport { bottomTabs } from '../../tabs';\r\nimport HeaderRight from '../../components/HeaderRight';\r\nimport TextButton from '../../components/TextButton';\r\nimport Colors from '../../constants/Colors';\r\nimport useColorScheme from '../../hooks/useColorScheme';\r\nimport lang from '../../lang'\r\nimport useModalsContext from '../../hooks/useModalsContext';\r\nimport ChannelEditModal from '../../modals/ChannelEditModal';\r\n\r\n// navigate(\"BoardEditScreen\", {channel_id:item.channel, id:item.id})\r\n// deleteBoardContent(item.id).then(()=>navigate('BoardScreen', {id:item.channel}))\r\n\r\nexport default function HomeScreen({navigation, route}: StackScreenProps<any, 'Home'>) {\r\n  const windowType = useResizeWindow();\r\n  const theme = useColorScheme()\r\n  const { setModal } = useModalsContext()\r\n  const [ home, setHome ] = useState(windowType == 'landscape')\r\n  const color = Colors[theme].text\r\n  const options = [\r\n    {title:lang('member'), headerRight:()=><HeaderRight/>},\r\n    {title:lang('messenger'), headerRight:()=><HeaderRight extra={[{title:lang('create'), onPress:()=>setModal(ChannelEditModal, {type:'messenger'})}]}/>},\r\n    // {title:'board', headerRight:()=><HeaderRight extra={[{title:'create', onPress:()=>setModal(ChannelEditModal, props:{type:'board'}}) }]}/>},\r\n    {title:'config', headerRight:()=><HeaderRight/>}\r\n  ]\r\n  \r\n  useLayoutEffect(() => {\r\n    const index = route?.params?.tab | 0\r\n    navigation.setOptions(windowType == 'portrait'?options[index]:{\r\n      title: lang('home'),\r\n      headerRight: ()=><HeaderRight/>\r\n    });\r\n  }, [navigation, route, windowType]);\r\n  useEffect(()=>{\r\n    setHome(windowType == 'landscape')\r\n  }, [windowType])\r\n  return home?\r\n    <View style={{flex:1, justifyContent:'center', alignItems:'center'}}>\r\n      <View style={{width:'80%', height:'80%'}}>\r\n        <StyledText style={{fontSize:32, color}}>Tokki Tok</StyledText>\r\n        <View style={{backgroundColor:Colors.borderColor, height:1, width:'100%'}}/>\r\n        <View style={{flex:1, alignItems:'flex-start'}}>\r\n          {/* <Text style={{fontSize:20, color:'gray'}}>Welcome! This is a messenger for teams.</Text>*/}\r\n          <Text style={{fontSize:24}}> </Text>\r\n          <Text style={{fontSize:24, fontWeight:'500', color}}>{lang('Quick Start')}</Text>\r\n          <TextButton title={lang('+ New Messenger')} textStyle={{fontSize:20, color}} style={{paddingLeft:0, borderRadius:20}} onPress={()=>setModal(ChannelEditModal, {type:'messenger'})}/>\r\n          {/* <TextButton title='+ New Board' textStyle={{fontSize:20}} style={{paddingLeft:0, borderRadius:20}} onPress={()=>setModal(ChannelEditModal, props:{type:'board'}})}/> */}\r\n        </View>\r\n      </View>\r\n    </View>:\r\n    <TabViewNavigator tabs={bottomTabs} tabBarPosition=\"bottom\" index={parseInt(route.params?.['tab'] || 0)} onTab={(index)=>{navigation.setParams({tab:index})}}/>\r\n}\r\n\r\n","import React, { Context, createContext,  useContext, useEffect, useState } from \"react\"\r\nimport useWebSocket from \"react-use-websocket\"\r\nimport { SendJsonMessage } from \"react-use-websocket/dist/lib/types\"\r\n// @ts-ignore\r\nimport {API_URL} from \"@env\"\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { AppState, AppStateStatus } from \"react-native\";\r\n\r\ntype WebsocketContextType = {lastJsonMessage:any, sendJsonMessage:SendJsonMessage }\r\nconst defaultContext = {lastJsonMessage:undefined, sendJsonMessage:()=>{}}\r\nconst WebSocketContext = createContext<WebsocketContextType>(defaultContext);\r\nconst [SCHEMA, DOMAIN] = `${API_URL}`.split('://')\r\n\r\nexport const WebSocketInternalProvider = ({children, path, Context, useBackground}:{children:React.ReactNode, path:string, Context:Context<WebsocketContextType>, useBackground?:boolean})=>{\r\n  const [token, setToken] = useState<string|null>(null)\r\n  const [isActive, setIsActive] = useState<boolean>(useBackground || AppState.currentState == 'active')\r\n  const { lastJsonMessage, sendJsonMessage } = useWebSocket(`${SCHEMA=='https'?'wss':'ws'}://${DOMAIN}/${path}`,{\r\n    shouldReconnect: (closeEvent) => true,\r\n    protocols: token?['Authorization',  token]:undefined,\r\n    onOpen: (e)=>{console.log(`success websocket connection(${path})`)},\r\n    onClose: (e)=> {console.log(`closed websocket connection(${path})`)},\r\n  }, isActive && token!=null)\r\n  useEffect(()=>{\r\n    AsyncStorage.getItem('Authorization').then(setToken)\r\n    const onChange = (nextState:AppStateStatus)=>setIsActive(useBackground || nextState == 'active')\r\n    AppState.addEventListener(\"change\", onChange)\r\n    return ()=>AppState.removeEventListener(\"change\", onChange)\r\n  }, [])\r\n  return <Context.Provider value={token!=null?{lastJsonMessage, sendJsonMessage}:defaultContext}>\r\n      {children}\r\n    </Context.Provider>\r\n}\r\n\r\nexport const WebSocketProvider = React.memo(({disable, children}:{disable?:boolean, children:React.ReactNode})=>{\r\n  return disable?<>{children}</>:<WebSocketInternalProvider path={'messenger/ws/'} Context={WebSocketContext}>\r\n    {children}\r\n  </WebSocketInternalProvider>\r\n})\r\n\r\nexport default ()=>{\r\n  const webSocketContext = useContext(WebSocketContext)\r\n  return webSocketContext\r\n}\r\n\r\n","import React, { useState } from 'react';\r\nimport { StyleSheet} from 'react-native';\r\nimport { CustomButtonProps } from '../types';\r\nimport CommonButton from './CommonButton';\r\n\r\nexport default (props:CustomButtonProps)=>{\r\n    return <CommonButton {...props} style={[styles.style, props.style]}/>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    style:{\r\n        borderRadius:6, \r\n        backgroundColor: 'transparent',\r\n        borderWidth:0\r\n    },\r\n});\r\n","import React, {useState, useEffect } from 'react';\r\nimport { StyleSheet } from 'react-native';\r\nimport CommonSection from '../components/CommonSection';\r\nimport { View, Text } from '../components/Themed';\r\nimport CommonButton from '../components/CommonButton';\r\n// import useBoardChannelList, { useBoardChannelMutation } from '../hooks/lists/useBoardChannelList';\r\nimport useAuthContext from '../hooks/useAuthContext';\r\nimport { navigate } from '../navigation';\r\nimport { Channel } from '../types';\r\nimport useMessengerChannelList, { useMessengerChannelMutation } from '../hooks/lists/useMessengerChannelList';\r\nimport TextField from '../components/TextField';\r\nimport lang from '../lang'\r\nimport useModalsContext from '../hooks/useModalsContext';\r\n\r\nexport default function ChannelEditModal({id, type}: {id?:number, type:string}) {\r\n  const {auth} = useAuthContext()\r\n  const { setModal } = useModalsContext()\r\n  const channelList = useMessengerChannelList(auth)\r\n  const channelMutation = useMessengerChannelMutation()\r\n  const channel = channelList?.find(v=>v.id==id)\r\n  const [name, setName] = useState('')\r\n  const [description, setDescription] = useState('')\r\n  const back = ()=>{\r\n    setModal(ChannelEditModal, null)\r\n  }\r\n  useEffect(()=>{\r\n    if (channel){\r\n      setName(channel.name)\r\n      setDescription(channel?.description || '')\r\n    }\r\n  }, [channel])\r\n  return <CommonSection outerContainerStyle={{alignSelf:'center'}}>\r\n    <View style={{justifyContent:'space-around'}}>\r\n    <Text style={{fontSize:20}}>{lang('Channel')}</Text>\r\n    </View>\r\n    <View style={styles.separator} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />\r\n    <View style={{width:'100%'}}>\r\n      <TextField name={lang('Channel Name')} value={name} setValue={setName} width={'60%'}/>\r\n      <TextField name={lang('Description')} value={description} setValue={setDescription} multiline width={'60%'}/>\r\n    </View>\r\n    <View style={{width:'100%', flexDirection:'row', justifyContent:'flex-end'}}>\r\n      <CommonButton title={lang('save')} onPress={()=>{\r\n        if(auth?.user?.id && auth.groupId){\r\n          const newChannel:Channel = {id, name, description, type, owner:auth?.user?.id, group:auth.groupId};\r\n          (id?channelMutation.update(newChannel):channelMutation.create(newChannel)).then(v=>navigate(\"Main\", {\r\n            screen:v.type == 'messenger'?'MessengerScreen':'BoardScreen',\r\n            params:{id:v.id}\r\n          }))\r\n        }\r\n      }}/>\r\n      <CommonButton title={lang('cancel')} style={{marginHorizontal:5}} onPress={back}/>\r\n    </View>\r\n  </CommonSection>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  field:{\r\n    width:'50%',\r\n    flexDirection:'row',\r\n    padding:10,\r\n  },\r\n  separator: {\r\n    marginBottom: 20,\r\n    height: 1,\r\n    width: '100%',\r\n  },\r\n})","import { Notification } from '../types';\r\nimport axios from './axios';\r\n\r\nexport const getNotification = async (user_id:number)=>{\r\n    const data = (await axios.get(`/api/v1/notifications/?type=WEB&user=${user_id}`) ).data as Notification[]\r\n    return data.length?data[0]:undefined\r\n}\r\n\r\nexport const postNotification = async(notification:Notification)=>{\r\n    return (await axios.post(`/api/v1/notifications/`, notification)).data as Notification\r\n}\r\n\r\nexport const putNotification = async(notification:Notification)=>{\r\n    return (await axios.put(`/api/v1/notifications/${notification.id}/`, notification)).data as Notification\r\n}","import { useMutation, useQuery, useQueryClient } from \"react-query\";\r\nimport { postBulkMessengerMember, deleteMessengerMember, getMessengerMemberList } from \"../../apis\";\r\n\r\nexport default function useMessengerMemberList(channel_id:number){\r\n  const { data } = useQuery([\"MessengerMemberList\", channel_id] , async()=>await getMessengerMemberList(channel_id))\r\n  return data\r\n}\r\n\r\n\r\nexport function useMessengerMemberMutation(){\r\n  const queryClient = useQueryClient()\r\n  const invite = useMutation(postBulkMessengerMember, {\r\n    onSuccess: ()=>{\r\n      queryClient.invalidateQueries(\"MessengerMemberList\")\r\n    }\r\n  })\r\n\r\n  const leave = useMutation(deleteMessengerMember, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(\"MessengerChannelList\")\r\n      queryClient.invalidateQueries(\"MessengerMemberList\")\r\n    }\r\n  })\r\n  return {invite:invite.mutate, leave:leave.mutate}\r\n}","import { Platform } from 'react-native';\r\n//@ts-ignore\r\nimport useMobileDetect from 'use-mobile-detect-hook';\r\n\r\nexport default ()=>{\r\n    const detectMobile = useMobileDetect();\r\n    return (detectMobile.isMobile() || Platform.OS == 'android' || Platform.OS == 'ios') as boolean\r\n}","import { useQuery } from \"react-query\";\r\nimport { getUserMembershipList } from \"../../apis\";\r\nimport { Auth } from \"../useAuthContext\";\r\n\r\nexport default function useUserMembershipList(auth?:Auth){\r\n  const { data } = useQuery([\"UserMembershipList\", auth?.groupId] , async()=>auth?.groupId?(await getUserMembershipList(auth?.groupId)):[])\r\n  return data\r\n}","import * as React from 'react';\r\nimport { View } from './Themed';\r\nimport { StyleSheet, StyleProp, ViewStyle, TextStyle, Pressable } from 'react-native';\r\nimport Colors from '../constants/Colors';\r\n\r\nexport type ItemParamList = {\r\n    outerContainerStyle?:StyleProp<TextStyle>\r\n    containerStyle?:StyleProp<ViewStyle>\r\n    bodyStyle?:StyleProp<ViewStyle>\r\n    children?: React.ReactNode\r\n    onPress?: ()=>void\r\n}\r\n\r\nexport default function CommonItem(props:ItemParamList){\r\n  const [hover, setHover] = React.useState(false)\r\n  const [press, setPress] = React.useState(false)\r\n  return (\r\n    <Pressable\r\n      style={[styles.outerContainer ,props.outerContainerStyle, (press)?{backgroundColor:'rgb(242,242,242)'}:{}]}\r\n      onPressIn={()=>{setPress(true)}}\r\n      onPressOut={()=>{setPress(false);props.onPress?.()}}\r\n       //@ts-ignore\r\n       onHoverIn={()=>setHover(true)}\r\n       onHoverOut={()=>setHover(false)}\r\n    >\r\n        <View style={[styles.container ,props.containerStyle]}>\r\n            <View style={[styles.bodyView, props.bodyStyle]}>\r\n                <>{props.children}</>\r\n            </View>\r\n      </View>\r\n    </Pressable>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  outerContainer:{\r\n    width:'100%',\r\n    maxWidth:1080,\r\n    alignItems:'stretch',\r\n  },  \r\n  container: {\r\n      marginHorizontal:20,\r\n      backgroundColor:'transparent'\r\n    },\r\n    bodyView:{\r\n      width: '100%',\r\n      padding: 10,\r\n      minHeight: 40,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      borderBottomWidth:1,\r\n      borderColor:Colors.borderColor,\r\n      backgroundColor:'transparent'\r\n    }\r\n  });\r\n  ","import { useTheme } from '@react-navigation/native';\r\nimport React, { useState } from 'react';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport { TabView, SceneMap,NavigationState, SceneRendererProps, TabBar } from 'react-native-tab-view';\r\nimport Profile from '../components/Profile';\r\nimport TextButton from '../components/TextButton';\r\nimport Colors from '../constants/Colors';\r\nimport useResizeWindow from '../hooks/useResizeWindow';\r\nimport { drawerTabs } from '../tabs';\r\nimport { UserMembership } from '../types';\r\nimport useModalsContext from '../hooks/useModalsContext';\r\nimport ChannelEditModal from '../modals/ChannelEditModal';\r\n\r\nexport const TabViewNavigator = (props:{tabs:typeof drawerTabs, tabBarPosition:\"top\"|\"bottom\", index?:number, onTab?:(index:number)=>void})=>{\r\n  const [index, setIndex] = React.useState(props.index || 0);\r\n  const entries = Object.entries(props.tabs)\r\n  const onTab = props.onTab\r\n  const icons = Object.assign({}, ...entries.map(([k, v])=>({[k]:v.icon})))\r\n  return <TabView\r\n    renderTabBar={(props:SceneRendererProps & {navigationState: NavigationState<any>})=>{\r\n      return <TabBar\r\n        {...props}\r\n        indicatorStyle={{ backgroundColor: \"#2196F3\" }}\r\n        style={{ backgroundColor:'white' }}\r\n        activeColor={'black'}\r\n        inactiveColor={'black'}\r\n        renderIcon={(scene)=>icons[scene.route.key]}\r\n        onTabPress={(scene)=>onTab?.(entries.findIndex(([k, v])=>k == scene.route.key))}\r\n      />\r\n    }}\r\n    navigationState={{ index, routes: entries.map(([k, v])=>({key:k, title:v.title}))}}\r\n    onIndexChange={setIndex}\r\n    renderScene={SceneMap(Object.assign({}, ...entries.map(([k, v])=>({[k]:v.component}))))}\r\n    tabBarPosition={props.tabBarPosition}\r\n  />\r\n}\r\n\r\n\r\nexport default React.memo(({user}:{user:UserMembership})=> {\r\n  const { colors } = useTheme();\r\n  const windowType = useResizeWindow();\r\n  const [index, setIndex] = useState(0);\r\n  const { setModal } = useModalsContext()\r\n  const onAddList = [\r\n    ()=>setModal(ChannelEditModal, {type:'messenger'}),\r\n    ()=>setModal(ChannelEditModal, {type:'board'})\r\n  ]\r\n  return <View style={windowType=='landscape'?[\r\n      styles.tabBar,\r\n      {\r\n        backgroundColor: colors.card,\r\n        borderTopColor: colors.border,\r\n      },\r\n      // tabBarStyle,\r\n    ]:{width:0}}\r\n    pointerEvents={false ? 'none' : 'auto'}\r\n  >\r\n    <Profile userId={user.id} username={user.username} name={user.name}/>\r\n    {windowType=='landscape' && <>\r\n      <View style={{flexDirection:'row-reverse'}}>\r\n          <TextButton title='+' textStyle={{fontSize:20}} style={{borderRadius:20}} onPress={onAddList[index]}/>\r\n      </View>\r\n      <View accessibilityRole=\"tablist\" style={styles.content}>\r\n        {Object.keys(drawerTabs).length>1 ? \r\n          <TabViewNavigator tabs={drawerTabs} tabBarPosition={\"top\"} onTab={setIndex}/>: \r\n          <View style={{borderTopWidth:1, flex:1, borderColor:colors.border}}>            \r\n            {Object.values(drawerTabs).map(drawerTab=>{const Tab = drawerTab.component; return <Tab key={drawerTab.title}/>})}\r\n          </View>\r\n        }\r\n      </View>\r\n    </>}\r\n  </View>\r\n})\r\n\r\n{/*<Text style={[styles.label, { color: d.isFocused ? colors.primary : '#222' }]}></Text> */}\r\n\r\nconst styles = StyleSheet.create({\r\n    tabBar: {\r\n      width:240,\r\n      elevation: 8,\r\n      borderRightWidth:1,\r\n      borderColor:Colors.borderColor\r\n    },\r\n    content: {\r\n      flex: 1,\r\n      flexDirection: 'row',\r\n    },\r\n    tab: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n    },\r\n    label: {\r\n        textAlign: 'center',\r\n        backgroundColor: 'transparent',\r\n      },\r\n  });","import * as React from 'react';\r\nimport { Avatar } from 'react-native-paper';\r\nimport { AvatarProps } from '../../types';\r\n\r\nconst normalizeHash = (hash: number, min: number, max: number) => {\r\n    return Math.floor((hash % (max - min)) + min);\r\n};\r\n\r\nconst stringToHSL = (str: string, initHash?:number) => {\r\n    let hash = initHash || 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\r\n    }\r\n    hash = Math.abs(hash);\r\n    return `hsl(${normalizeHash(hash, 0, 360)}, ${normalizeHash(hash, 0, 100)}%, ${normalizeHash(hash, 25, 75)}%)`;\r\n};\r\n\r\nexport default (props:AvatarProps) => {\r\n    const backgroundColor = stringToHSL(props.name, props.userId)\r\n    return <Avatar.Text style={{backgroundColor}} size={props.size} label={props.name.split(' ').map(v=>v[0]).join().toUpperCase()} />\r\n};","import React from 'react';\r\n// import { MaterialIcons } from \"@expo/vector-icons\"\r\nimport Avatar from '../lib/react-native-paper/Avatar';\r\nimport { AvatarProps } from '../types';\r\n\r\nexport default (props:AvatarProps)=>{\r\n    // return <MaterialIcons size={38} style={{ marginBottom: -3, marginRight:10 }} name='account-circle'/>\r\n    return <Avatar {...props}/>\r\n}\r\n\r\n","import React from \"react\"\r\nimport { View, Text } from \"../components/Themed\"\r\nimport CommonItem from \"../components/CommonItem\"\r\n// import useBoardChannelList from \"../lib/blacktokki-board/useBoardChannelList\"\r\nimport { useMessengerChannelSorted } from \"../hooks/lists/useMessengerChannelList\"\r\nimport useAuthContext from \"../hooks/useAuthContext\"\r\nimport { navigate } from \"../navigation\"\r\n\r\nconst DrawerTab = (props:{data:{name:string, onPress?:()=>void}[]})=><View style={{flex:1}}>\r\n    {props.data.map((item, index)=><CommonItem key={index} containerStyle={{marginHorizontal:0}} bodyStyle={{alignItems:'flex-start'}} onPress={item.onPress}>\r\n        <Text style={{marginLeft:20}}>{item.name}</Text>\r\n    </CommonItem>\r\n    )}\r\n</View>\r\n\r\nexport default {\r\n    Messenger:()=>{\r\n        const {auth} = useAuthContext()\r\n        const channelList = useMessengerChannelSorted(auth);\r\n        return <DrawerTab data={(channelList || []).map(item=>({...item, onPress:()=>navigate(\"ChatScreen\", {id:item.id})}))}/>\r\n    },\r\n    // Board:()=>{\r\n    //     const {auth} = useAuthContext()\r\n    //     const channelList = useBoardChannelList(auth);\r\n    //     return <DrawerTab data={(channelList || []).map(item=>({...item, onPress:()=>navigate(\"BoardScreen\", {id:item.id})}))}/>\r\n    // },\r\n}","import { Ionicons, FontAwesome } from \"@expo/vector-icons\"\r\nimport React from \"react\"\r\nimport { Text, View } from \"react-native\"\r\nimport CommonItem from \"../components/CommonItem\"\r\nimport useAuthContext from \"../hooks/useAuthContext\"\r\nimport { useMessengerChannelSorted } from \"../hooks/lists/useMessengerChannelList\"\r\nimport { navigate } from \"../navigation\"\r\n\r\nexport default ()=>{\r\n    const {auth} = useAuthContext()\r\n    const channelList = useMessengerChannelSorted(auth)\r\n    const today = (new Date()).toISOString().slice(0, 10)\r\n    return <View style={{flex:1, backgroundColor:'white'}}>\r\n        {channelList?.map((item, index)=>{\r\n            const date = item.last_message?.created.slice(0,10)\r\n            return <CommonItem key={index} bodyStyle={{flexDirection:'row', justifyContent:'space-between'}} onPress={()=>navigate(\"ChatScreen\", {id:item.id})}>\r\n                <View style={{flexDirection:'row'}}>\r\n                    <FontAwesome size={36} style={{ marginBottom: -3, marginRight:20 }} name='users'/>\r\n                    <View>\r\n                        <View style={{flexDirection:'row'}}>\r\n                            <Text style={{fontSize:18}}>{item.name}</Text>\r\n                            <Text style={{fontSize:18, opacity: 0.4, paddingLeft:5}}>{item.member_count}</Text>\r\n                        </View>\r\n                        <Text style={{fontSize:16, opacity: 0.4}}>{item.last_message?.content}</Text>\r\n                    </View>\r\n                </View>\r\n                <View>\r\n                    <Text style={{fontSize:14, opacity: 0.4, textAlign:'right'}}>{date==today?item.last_message?.created.slice(11,16):date}</Text>\r\n                    <Text style={{fontSize:14, textAlign:'right'}}>{item.unread_count?item.unread_count:' '}</Text>\r\n                </View>\r\n            </CommonItem>\r\n        })}\r\n    </View>\r\n}\r\n\r\nexport const MessengerIcon = <Ionicons size={30} style={{ marginBottom: -3 }} name='chatbox'/>","import React from \"react\";\r\nimport MemberTab, {MemberIcon} from \"./MemberTab\";\r\nimport OneTab, {ConfigIcon} from \"./OneTab\";\r\nimport DrawerTab  from './DrawerTab';\r\nimport MessengerTab, {MessengerIcon} from \"./MessengerTab\";\r\nimport lang from \"../lang\"\r\n// import BoardTab, {BoardIcon}  from \"../lib/blacktokki-board/BoardTab\";\r\n\r\nexport const bottomTabs = {\r\n    OneTab:{\r\n        title:lang('member'),\r\n        component:MemberTab,\r\n        icon:MemberIcon,\r\n    },\r\n    TwoTab:{\r\n        title:lang('messenger'),\r\n        component:MessengerTab,\r\n        icon:MessengerIcon\r\n    },\r\n    // ThreeTab:{\r\n    //     title:'board',\r\n    //     component:BoardTab,\r\n    //     icon:BoardIcon\r\n    // },\r\n    // FourTab:{\r\n    //     title:'config',\r\n    //     component:OneTab,\r\n    //     icon:ConfigIcon\r\n    // }\r\n} as Record<string, {title:string, component:React.ComponentType<any>, icon:JSX.Element}>\r\n\r\nexport const drawerTabs = {\r\n    TwoTab:{\r\n        title:lang('messenger'),\r\n        component:DrawerTab.Messenger,\r\n        icon:MessengerIcon\r\n    },\r\n    // ThreeTab:{\r\n    //     title:'board',\r\n    //     component:DrawerTab.Board,\r\n    //     icon:BoardIcon\r\n    // }\r\n} as Record<string, {title:string, component:React.ComponentType<any>, icon:JSX.Element}>","import React, { useMemo } from 'react';\r\n\r\nimport { TextProps, StyleProp } from 'react-native';\r\nimport {View, Text } from './Themed'\r\nimport useResizeWindow from '../hooks/useResizeWindow';\r\n\r\ntype Props = {\r\n  name: string,\r\n  width?:number,\r\n  children: React.ReactNode\r\n  textStyle?: StyleProp<TextProps>\r\n}\r\n\r\nexport default function RowField(props:Props) {\r\n  const windowType = useResizeWindow()\r\n  const rowStyle = useMemo(()=>windowType=='landscape'?\r\n    {flexDirection:'row', alignItems: 'center', justifyContent:'space-between'}:\r\n    {flexDirection:'column', alignItems:'flex-start'} as any\r\n  , [windowType])\r\n  return (\r\n    <View style={[{paddingVertical:5, width:'100%'}, rowStyle]}>\r\n        <Text style={[windowType=='landscape'?{flex:1}:{width:'100%'},{paddingHorizontal: 15, fontSize:16}, props.textStyle]}>{props.name}</Text>\r\n        <View style={[windowType=='landscape'?{flex:6}:{width:'100%'},{paddingHorizontal: 15}]}>\r\n          <View style={{width:props.width}}>\r\n            {props.children}\r\n          </View>\r\n        </View>\r\n    </View>\r\n  )\r\n}","import React from 'react';\r\nimport { StyleProp, TextStyle } from 'react-native';\r\nimport { CustomTextInputProps } from '../types';\r\nimport CommonTextInput from './CommonTextInput';\r\nimport RowField from './RowField';\r\n\r\nexport default function TextField(props:CustomTextInputProps & {name: string, width?:any, textStyle?:StyleProp<TextStyle>}) {\r\n  return (\r\n    <RowField name={props.name} width={props.width} textStyle={props.textStyle}>\r\n      <CommonTextInput {...props} />\r\n   </RowField>\r\n  )\r\n}","import { MaterialCommunityIcons } from \"@expo/vector-icons\"\r\nimport React from \"react\"\r\nimport { Text, View } from \"react-native\"\r\nimport CommonItem from \"../components/CommonItem\"\r\nimport useAuthContext from \"../hooks/useAuthContext\"\r\nimport useUserMembershipList from \"../hooks/lists/useUserMembershipList\"\r\nimport { UserMembership } from \"../types\"\r\nimport Avatar from \"../components/Avatar\"\r\nimport useModalsContext from \"../hooks/useModalsContext\"\r\nimport ProfileModal from \"../modals/ProfileModal\"\r\n\r\nexport const renderMemberItem = (item:UserMembership, onPress?:()=>void)=> {\r\n    return <CommonItem key={item.id} bodyStyle={{backgroundColor:'white', flexDirection:'row', justifyContent:'flex-start'}} onPress={onPress}>\r\n        <View style={{marginTop:4, marginRight:12}}><Avatar name={item.name} userId={item.id} size={44}/></View>\r\n        <Text style={{fontSize:20, fontWeight:'400'}}>{item.name}</Text>\r\n    </CommonItem>\r\n}\r\n\r\nexport default ()=>{\r\n    const {auth} = useAuthContext()\r\n    const { setModal } = useModalsContext()\r\n    const userList = useUserMembershipList(auth)\r\n    const memberItem = React.useMemo(\r\n        ()=>userList && userList.map(item=>renderMemberItem(item, ()=>setModal(ProfileModal, {id:item.id}))), [userList])\r\n    return <View style={{flex:1, backgroundColor:'white'}}>\r\n        {memberItem}\r\n    </View>\r\n}\r\n\r\nexport const MemberIcon = <MaterialCommunityIcons size={32} style={{ marginBottom: -3 }} name='account'/>","import React, { useEffect } from 'react';\r\nimport Profile from '../components/Profile';\r\nimport useAuthContext from '../hooks/useAuthContext';\r\nimport useUserMembershipList from '../hooks/lists/useUserMembershipList';\r\nimport { useMessengerChannelMutation } from '../hooks/lists/useMessengerChannelList';\r\nimport CommonButton from '../components/CommonButton';\r\nimport lang from '../lang'\r\nimport useModalsContext from '../hooks/useModalsContext';\r\nimport CommonSection from '../components/CommonSection';\r\nimport { Text, View } from '../components/Themed';\r\n\r\nexport default function GuestLogoutModal({id}:{id:number}) {\r\n  const { setModal } = useModalsContext()\r\n  const {dispatch} = useAuthContext()\r\n  const back = ()=>{\r\n    setModal(GuestLogoutModal, null)\r\n  }\r\n  return <CommonSection outerContainerStyle={{alignSelf:'center'}}>\r\n    <Text>{lang('Guest users cannot reconnect after logging out. Please create an account or log in.')}</Text>\r\n    <View style={{width:'100%', flexDirection:'row', justifyContent:'flex-end'}}>\r\n      <CommonButton title={lang('sign out')} onPress={()=>dispatch({type:\"LOGOUT_REQUEST\"})}/>\r\n      <CommonButton title={lang('cancel')} onPress={()=>back()}/>\r\n    </View>\r\n  </CommonSection>\r\n}\r\n","/**\r\n * Learn more about Light and Dark modes:\r\n * https://docs.expo.io/guides/color-schemes/\r\n */\r\n\r\nimport * as React from 'react';\r\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\r\n\r\nimport Colors from '../constants/Colors'\r\nimport useColorScheme from '../hooks/useColorScheme';\r\n\r\nexport function useThemeColor(\r\n  props: { light?: string; dark?: string },\r\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\r\n) {\r\n  const theme = useColorScheme();\r\n  const colorFromProps = props[theme];\r\n\r\n  if (colorFromProps) {\r\n    return colorFromProps;\r\n  } else {\r\n    return Colors[theme][colorName];\r\n  }\r\n}\r\n\r\ntype ThemeProps = {\r\n  lightColor?: string;\r\n  darkColor?: string;\r\n};\r\n\r\nexport type TextProps = ThemeProps & DefaultText['props'];\r\nexport type ViewProps = ThemeProps & DefaultView['props'];\r\n\r\nexport function Text(props: TextProps) {\r\n  const { style, lightColor, darkColor, ...otherProps } = props;\r\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\r\n\r\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\r\n}\r\n\r\nexport function View(props: ViewProps) {\r\n  const { style, lightColor, darkColor, ...otherProps } = props;\r\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\r\n\r\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport Profile from '../components/Profile';\r\nimport useAuthContext from '../hooks/useAuthContext';\r\nimport useUserMembershipList from '../hooks/lists/useUserMembershipList';\r\nimport { useMessengerChannelMutation } from '../hooks/lists/useMessengerChannelList';\r\nimport CommonButton from '../components/CommonButton';\r\nimport { DirectChannel } from '../types';\r\nimport { navigate } from '../navigation';\r\nimport lang from '../lang'\r\nimport useModalsContext from '../hooks/useModalsContext';\r\nimport CommonSection from '../components/CommonSection';\r\nimport { Text, View } from '../components/Themed';\r\n\r\nexport default function ProfileModal({id}:{id:number}) {\r\n  const {auth} = useAuthContext()\r\n  const { setModal } = useModalsContext()\r\n  const userList = useUserMembershipList(auth)\r\n  const user = userList?.find(v=>v.id==id)\r\n  const channelMutation = useMessengerChannelMutation()\r\n  const back = ()=>{\r\n    setModal(ProfileModal, null)\r\n  }\r\n  useEffect(()=>{\r\n    if (!(id && user) && userList)\r\n      back()\r\n  }, [userList])\r\n  return user?<CommonSection outerContainerStyle={{alignSelf:'center'}}>\r\n    <View style={{flexDirection:'row', width:'100%'}}>\r\n      <View style={{flex:1}}>\r\n        <CommonButton style={{width:60}} title={'❌'} onPress={back}/>\r\n      </View>\r\n      <View style={{flex:1}}>\r\n        <Text style={{fontSize:20, textAlign:'center'}}>{lang('profile')}</Text>\r\n      </View>\r\n      <View style={{flex:1}}/>\r\n    </View>\r\n    <View style={{marginBottom: 20, height: 1, width: '100%'}} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />\r\n    \r\n    <Profile username={user.username} name={user.name} userId={user.id} />\r\n    <CommonButton title={lang('create messenger')} onPress={()=>{\r\n      if(auth?.user?.id && auth.groupId){\r\n        const newChannel:DirectChannel = {name:auth.user.id!=user.id?`${auth.user.name}, ${user.name}`:auth.user.name, type:'messenger', owner:auth?.user?.id, group:auth.groupId, counterpart:user.id};\r\n        channelMutation.direct(newChannel).then(v=>navigate(\"Main\", {screen:\"ChatScreen\", params: {id:v.id}}))\r\n      }\r\n    }}/>\r\n  </CommonSection>:<></>\r\n}\r\n","import React from 'react';\r\nimport {View} from 'react-native'\r\nimport {Text} from './Themed';\r\nimport { ProfileProps } from '../types';\r\nimport Avatar from './Avatar';\r\nimport TextButton from './TextButton';\r\nimport CommonTextInput from './CommonTextInput';\r\nimport { patchUser } from '../apis';\r\nimport useAuthContext from '../hooks/useAuthContext';\r\n\r\nexport default (props:ProfileProps)=>{\r\n    const [name, setName] = React.useState<string>()\r\n    const { auth, dispatch } = useAuthContext()\r\n    const isSelf = auth.user?.id == props.userId\r\n    const onChange = ()=>{\r\n        isSelf && patchUser({id:props.userId, name:name || ''}).finally(()=>{\r\n            setName(undefined)\r\n            dispatch({type:\"REFRESH\"})\r\n        })\r\n    }\r\n    return <View style={{width:'100%', height:135, justifyContent:'space-evenly', alignItems:'center'}}>\r\n        <Avatar {...props} size={75}/>\r\n        {name===undefined?\r\n            <TextButton textStyle={{fontWeight:'bold', fontSize:15}} onPress={()=>isSelf && setName(props.name)} title={props.name} disabled={!isSelf}/>:\r\n            <CommonTextInput value={name} style={{textAlign:'center'}} setValue={setName} onBlur={onChange} onEndEditing={onChange} />}\r\n        <Text style={{fontWeight:'normal', fontSize:14}}>{props.username}</Text>\r\n    </View>\r\n}","import React, { useState } from 'react';\r\nimport { TextInput } from 'react-native';\r\nimport Colors from '../constants/Colors';\r\nimport useColorScheme from '../hooks/useColorScheme';\r\nimport { CustomTextInputProps } from '../types';\r\n\r\nexport default (props:CustomTextInputProps)=>{\r\n    const [contentHeight, setContentHeight] = useState<number>()\r\n    const minHeight = props.minHeight || 30\r\n    const theme = useColorScheme()\r\n    return <TextInput style={[{\r\n            borderColor:'#d0d7de', \r\n            fontSize:16, \r\n            borderWidth:1, \r\n            borderRadius:6, \r\n            paddingHorizontal:10, \r\n            paddingVertical:3, \r\n            backgroundColor:Colors[theme].background,\r\n            color:Colors[theme].text,\r\n            height:props.multiline?contentHeight:minHeight,\r\n        }, props.style]} \r\n        editable={!props.disabled} \r\n        value={props.value} \r\n        onChangeText={props.setValue}\r\n        onContentSizeChange={props.multiline?(e) => setContentHeight(Math.max(e.nativeEvent.contentSize.height, minHeight) + 2):undefined}\r\n        onBlur={()=>props.onBlur?.(props.value)}\r\n        onEndEditing={()=>props.onEndEditing?.(props.value)}\r\n        multiline={props.multiline}\r\n    />\r\n}","import { createIntl, createIntlCache } from \"@formatjs/intl\";\r\nimport {I18nManager} from \"react-native\";\r\nimport * as RNLocalize from \"react-native-localize\";\r\n\r\nconst translations = {\r\n  ko: require(\"./ko.json\"),\r\n} as const;\r\n\r\ntype Translation = keyof typeof translations;\r\n\r\n// fallback if no available language fits\r\nconst fallback = { languageTag: \"en\", isRTL: false };\r\n\r\nconst { languageTag, isRTL } =\r\n  RNLocalize.findBestLanguageTag(Object.keys(translations)) ?? fallback;\r\n\r\n// update layout direction\r\nI18nManager.forceRTL(isRTL);\r\n\r\n// console.log(languageTag)\r\nconst intl = createIntl(\r\n  {\r\n    defaultLocale: \"en\",\r\n    locale: languageTag,\r\n    messages: translations[languageTag as Translation],\r\n  },\r\n  createIntlCache(),\r\n);\r\n\r\ntype TranslationParams = Parameters<(typeof intl)[\"formatMessage\"]>[1];\r\n\r\nexport default (key: string, params?: TranslationParams) => \r\n  intl\r\n    .formatMessage({ id: key, defaultMessage: key }, params)\r\n    .toString();","import { useMemo, useReducer } from \"react\"\r\n\r\ntype LocalSearchAction = {type:string, keyword?:string}\r\n\r\ntype LocalSearchState ={active:boolean, keyword:string}\r\n\r\n\r\n\r\nconst localSearchReducer =(initialState:LocalSearchState, action:LocalSearchAction)=>{\r\n    switch (action.type){\r\n        case 'SEARCH':\r\n          return {\r\n            ...initialState,\r\n            keyword: action.keyword\r\n          } as LocalSearchState\r\n        case 'ENABLE_SEARCH':\r\n          return {\r\n            ...initialState,\r\n            active:true,\r\n          }\r\n        case 'DISABLE_SEARCH':\r\n            return{\r\n                ...initialState,\r\n                active:false,\r\n                keyword: ''\r\n            }\r\n        default:\r\n            throw new Error( `Unhandled action type: ${action.type}`)\r\n    }\r\n  }\r\n\r\n\r\nexport default function useLocalSearch<T>(target:T[], compare:(value:T, keyword:string)=>boolean) {\r\n  const [searchState, dispatch] = useReducer(localSearchReducer, {active:false, keyword:''})\r\n  const data = useMemo(()=>searchState.active?target.filter(v=>compare(v, searchState.keyword)):target, [searchState, target])\r\n  return {searchState, dispatch, data}\r\n}","import React, {useRef,MutableRefObject, useMemo, useState, useEffect } from 'react';\r\nimport { View, Text } from '../components/Themed';\r\nimport CommonSection from '../components/CommonSection';\r\nimport useAuthContext from '../hooks/useAuthContext';\r\nimport useUserMembershipList from '../hooks/lists/useUserMembershipList';\r\nimport { UserMembership } from '../types';\r\nimport CommonButton from '../components/CommonButton';\r\nimport useMessengerMemberList, { useMessengerMemberMutation } from '../hooks/lists/useMessengerMemberList';\r\nimport { renderMemberItem } from '../tabs/MemberTab';\r\nimport lang from  '../lang'\r\nimport useModalsContext from '../hooks/useModalsContext';\r\nimport useExternalMembershipList from '../hooks/lists/useExternalMembershipList';\r\nimport TextField from '../components/TextField';\r\nimport useLocalSearch from '../hooks/useLocalSearch';\r\nimport { TabViewNavigator } from '../navigation/DrawerNavigator';\r\n\r\nconst InviteItem = (props:{item:UserMembership, selectedRef:MutableRefObject<Set<number>>})=>{\r\n  const [selected, setSelected] = useState(props.selectedRef.current.has(props.item.id))\r\n  return <View style={selected?{borderWidth:1, borderColor:'blue'}:{}}>\r\n    {renderMemberItem(props.item, ()=>{\r\n      if (selected){\r\n        setSelected(false)\r\n        props.selectedRef.current.delete(props.item.id)\r\n      }\r\n      else{\r\n        setSelected(true)\r\n        props.selectedRef.current.add(props.item.id)\r\n      }\r\n    })}\r\n  </View>\r\n\r\n}\r\ntype InviteTabViewProps = {\r\n  id:number,\r\n  selectedRef:MutableRefObject<Set<number>>\r\n}\r\n\r\nconst GroupTabView = ({id, selectedRef}:InviteTabViewProps)=>{\r\n  const {auth} = useAuthContext()\r\n  const { setModal } = useModalsContext()\r\n  const userList = useUserMembershipList(auth)\r\n  const memberList = useMessengerMemberList(id)\r\n  const messengerMemberMutation = useMessengerMemberMutation()\r\n  const rawData = useMemo(()=>{\r\n    const memberSet = new Set(memberList?.map(v=>v.user))\r\n    return userList?.filter(v=>!memberSet.has(v.id)) || []\r\n  }, [userList, memberList])\r\n  const {data, dispatch:dispatchKeyword, searchState} = useLocalSearch(rawData, (v, keyword)=>(v.username.includes(keyword) || v.name.includes(keyword)))\r\n  const search = (k:string)=>{\r\n    if (k?.length>0){\r\n      dispatchKeyword({type:'ENABLE_SEARCH'})\r\n      dispatchKeyword({type:'SEARCH', keyword:k})\r\n    }\r\n    else{\r\n      dispatchKeyword({type:'DISABLE_SEARCH'})\r\n    }\r\n  }\r\n  const back = ()=>{\r\n    setModal(InviteModal, null)\r\n  }\r\n  return <View style={{alignItems:'center'}}>\r\n    <View style={{backgroundColor:'white', 'width': '50%'}}>\r\n      <TextField name={`${lang('Username')} & ${lang('Name')}`} value={searchState.keyword} setValue={search} width={'80%'}/>\r\n      {id && data?.map((item, index)=><InviteItem key={index} item={item} selectedRef={selectedRef}/>)}\r\n    </View>\r\n    <View style={[{width:'50%', flexDirection:'row', padding:10,}, {justifyContent:'flex-end'}]}>\r\n      <CommonButton title={lang('invite')} onPress={()=>{\r\n        messengerMemberMutation.invite({\r\n          channel_id:id,\r\n          user_ids:[...selectedRef.current]\r\n        })\r\n        back()\r\n      }}/>\r\n      <CommonButton title={lang('cancel')} onPress={back}/>\r\n    </View>\r\n  </View>\r\n}\r\n\r\nconst DELAY = 500\r\n\r\nconst ExternalMembershipTabView = ({id, selectedRef}:InviteTabViewProps)=>{\r\n  const [value, setValue] = useState('')\r\n  const [keyword, setKeyword] = useState('')\r\n  const timeoutRef = useRef<NodeJS.Timeout>()\r\n  const { setModal } = useModalsContext()\r\n  const data = useExternalMembershipList(keyword)\r\n  const messengerMemberMutation = useMessengerMemberMutation()\r\n  useEffect(()=>{\r\n    timeoutRef.current = setTimeout(()=>{\r\n      setKeyword(value)\r\n    }, DELAY)\r\n    return ()=>{timeoutRef.current && clearTimeout(timeoutRef.current)}\r\n  }, [value])\r\n  const back = ()=>{\r\n    setModal(InviteModal, null)\r\n  }\r\n  \r\n  return <View style={{alignItems:'center'}}>\r\n  <View style={{backgroundColor:'white', 'width': '50%'}}>\r\n    <TextField name={lang('Username')} value={value} setValue={setValue} width={'80%'}/>\r\n    {id && data?.map((item, index)=><InviteItem key={index} item={item} selectedRef={selectedRef}/>)}\r\n  </View>\r\n  <View style={[{width:'50%', flexDirection:'row', padding:10,}, {justifyContent:'flex-end'}]}>\r\n    <CommonButton title={lang('invite')} onPress={()=>{\r\n      messengerMemberMutation.invite({\r\n        channel_id:id,\r\n        user_ids:[...selectedRef.current]\r\n      })\r\n      back()\r\n    }}/>\r\n    <CommonButton title={lang('cancel')} onPress={back}/>\r\n  </View>\r\n</View>\r\n}\r\n\r\nexport default function InviteModal({id}:{id:number}) {\r\n  const [index, setIndex] = React.useState(0);\r\n  const selectedRef = useRef<Set<number>>(new Set())\r\n  const drawerTabs:Record<string, {title:string, component:React.ComponentType<any>, icon:JSX.Element}> = {\r\n    group:{\r\n      title: lang('Group'),\r\n      component: ()=><GroupTabView id={id} selectedRef={selectedRef}/>,\r\n      icon: <></>\r\n    },\r\n    external:{\r\n      title: lang('External members'),\r\n      component: ()=><ExternalMembershipTabView id={id} selectedRef={selectedRef}/>,\r\n      icon: <></>\r\n    }\r\n  }\r\n  return <CommonSection outerContainerStyle={{alignSelf:'center'}}>\r\n    <View style={{justifyContent:'space-around'}}>\r\n      <Text style={{fontSize:20}}>{lang('invite')}</Text>\r\n    </View>\r\n    <View style={{marginBottom: 20, height: 1, width: '100%'}} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />\r\n    <View style={{width:'100%'}}>\r\n      <TabViewNavigator tabs={drawerTabs} tabBarPosition={\"top\"} onTab={setIndex}/>\r\n    </View>\r\n  </CommonSection>\r\n}\r\n\r\n","import { useQuery } from \"react-query\";\r\nimport { getExternalMembershipList } from \"../../apis\";\r\n\r\nexport default function useExternalMembershipList(keyword?:string){\r\n  const { data } = useQuery([\"UserMembershipList\", keyword] , async()=>keyword?(await getExternalMembershipList(keyword)):[])\r\n  return data\r\n}","/**\r\n * Learn more about deep linking with React Navigation\r\n * https://reactnavigation.org/docs/deep-linking\r\n * https://reactnavigation.org/docs/configuring-links\r\n */\r\n\r\nimport { LinkingOptions } from '@react-navigation/native';\r\nimport * as Linking from 'expo-linking';\r\nimport {main, login, modal} from '../screens';\r\n\r\nconst ROOTPATH = 'tokki-tok'  // github repository name\r\n\r\nObject.values(modal).forEach(v=>v.path = ROOTPATH + '/' + v.path)\r\n\r\nexport default  {\r\n  prefixes: [Linking.makeUrl('/')],\r\n  config: {\r\n    screens: {\r\n      Main: {\r\n        screens:{\r\n          ...main,\r\n          ...login,\r\n          NotFound: '*',\r\n        },\r\n        path: ROOTPATH\r\n      },\r\n      ...modal\r\n    },\r\n  },\r\n} as LinkingOptions;\r\n","import axios, { AxiosRequestConfig } from 'axios';\r\n// @ts-ignore\r\nimport {API_URL} from \"@env\"\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nexport const accountURL =  `${API_URL}/account/`\r\nconst baseURL =  `${API_URL}/messenger/`\r\nconst defaultOption:AxiosRequestConfig = {\r\n    baseURL,\r\n    withCredentials: true,\r\n    headers: {}\r\n};\r\nconst _axios = axios.create(defaultOption);\r\n\r\n_axios.interceptors.request.use(\r\n    config => {\r\n        return config;\r\n    },\r\n    error => {\r\n        return Promise.reject(error);\r\n    }\r\n)\r\n\r\n_axios.interceptors.response.use(\r\n    response => {\r\n        // if((response.request.responseURL as string).indexOf('/task/login')>=0 && response.data.length != 0){\r\n        //     // redirect login\r\n        // }\r\n        return response;\r\n    },\r\n    error => {\r\n        if (error.response.status === 401) {\r\n            return getToken().then(async(token)=>{\r\n                if (token){\r\n                    const r = await _axios.post(\"/api/v1/user/sso/refresh/\", {token}, {headers:{'Authorization':''}, baseURL: accountURL})\r\n                    if (r.status == 200 && r.data !== ''){\r\n                        setToken(r.data)\r\n                    }\r\n                }\r\n            }).finally(()=>{\r\n                return Promise.reject(error)\r\n            })\r\n        }\r\n        return Promise.reject(error)\r\n    }\r\n)\r\n\r\nexport const setToken = async (token:string|null)=>{\r\n    _axios.defaults.headers['Authorization'] = `JWT ${token}`\r\n    if (token)\r\n        await AsyncStorage.setItem(\"Authorization\", token)\r\n    else\r\n        AsyncStorage.removeItem(\"Authorization\")\r\n}\r\nexport const getToken = async ()=>{\r\n    const token = await AsyncStorage.getItem(\"Authorization\")\r\n    _axios.defaults.headers['Authorization'] = token?`JWT ${token}`:null\r\n    return token\r\n}\r\n\r\nexport default _axios\r\n","const tintColorLight = '#2f95dc';\r\nconst tintColorDark = '#fff';\r\n\r\nexport default {\r\n  light: {\r\n    text: '#000',\r\n    background: '#fff',\r\n    tint: tintColorLight,\r\n    tabIconDefault: '#ccc',\r\n    tabIconSelected: tintColorLight,\r\n    header:'#24292f',\r\n    buttonColor:'rgb(242,242,242)',\r\n    buttonBackgroundColor: '#f6f8fa', //'rgba(9,30,66,0.08)',//rgb(242,242,242)\r\n  },\r\n  dark: {\r\n    text: '#fff',\r\n    background: '#000',\r\n    tint: tintColorDark,\r\n    tabIconDefault: '#ccc',\r\n    tabIconSelected: tintColorDark,\r\n    header:'#dbd6d1',\r\n    buttonColor:'rgb(14,14,14)',\r\n    buttonBackgroundColor: '#080604',\r\n  },\r\n  button:{\r\n    borderColor:'rgba(27,31,36,0.15)',\r\n  },\r\n  borderColor:'#d0d7de',\r\n  \r\n  focus:'#0065A4',\r\n};\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Dimensions, Platform, View } from 'react-native'\r\nimport useIsMobile from '../hooks/useIsMobile'\r\n\r\n\r\nexport default (props:{children:React.ReactNode})=>{\r\n    const isMobile = useIsMobile()\r\n    const [height, setHeight] = useState(window.innerHeight + 1)\r\n    useEffect(()=>{\r\n        if(isMobile && Platform.OS == 'web'){\r\n            const onChange = (e:any)=>{\r\n                setHeight(window.innerHeight + 1)\r\n            }\r\n            Dimensions.addEventListener(\"change\",onChange)\r\n            return () => Dimensions.removeEventListener(\"change\", onChange)\r\n            \r\n        }\r\n    },[ isMobile])\r\n    return <View style={{height:isMobile&&Platform.OS == 'web'?height:'100%'}}>\r\n        {props.children}\r\n    </View>\r\n\r\n}\r\n  ","import React, { createContext, useContext, useEffect, useReducer, useMemo, Dispatch, useState } from \"react\"\r\nimport { checkLogin, login, logout } from \"../apis\"\r\nimport { getNotification, putNotification } from \"../apis/notification\"\r\nimport { UserMembership } from \"../types\"\r\n\r\ntype AuthAction = {type:string, username?:string, password?:string, user?:UserMembership|null}\r\n\r\nexport type Auth = {user?:UserMembership|null, groupId?:number}\r\n\r\ntype AuthState ={user?:UserMembership|null, request?:{username:string, password:string}|null}\r\n\r\nconst AuthContext = createContext<{auth:Auth, error?:string, dispatch:Dispatch<AuthAction>}>({auth:{}, dispatch:()=>{}});\r\n\r\nconst authReducer =(initialState:AuthState, action:AuthAction)=>{\r\n  switch (action.type){\r\n      case 'LOGIN_REQUEST':\r\n        return {\r\n          ...initialState,\r\n          request:{username:action.username, password:action.password},\r\n        } as AuthState\r\n      case 'LOGIN_GUEST':\r\n        return {\r\n          ...initialState,\r\n          request:{username:'guest', password:'guest'},\r\n        } as AuthState\r\n      case 'LOGIN_SUCCESS':\r\n          return{\r\n              ...initialState,\r\n              user:action.user,\r\n              request:undefined\r\n          }\r\n      case 'LOGIN_FAILED':\r\n          return{\r\n              ...initialState,\r\n              request:undefined\r\n          }\r\n      case 'LOGOUT_REQUEST':\r\n          return{\r\n              ...initialState,\r\n              request:null\r\n          }\r\n      case 'LOGOUT_SUCCESS':\r\n          return {\r\n            ...initialState,\r\n            user:null,\r\n            request:undefined\r\n          }\r\n      case 'REFRESH':\r\n        return {\r\n          ...initialState,\r\n          user:undefined\r\n        }\r\n      default:\r\n          throw new Error( `Unhandled action type: ${action.type}`)\r\n  }\r\n}\r\n\r\n\r\nexport const AuthProvider = ({children}:{children:React.ReactNode})=>{\r\n  const [authState, dispatch] = useReducer(authReducer, {} as Auth)\r\n  const [error, setError] = useState<string>()\r\n  const auth = useMemo(()=>({\r\n    user:authState.user,\r\n    groupId: authState.user?.membership_set.find(g=>g.root_group_id==null)?.group\r\n  }), [authState])\r\n  useEffect(()=>{\r\n    if(authState.user===undefined){\r\n      checkLogin().then((user)=>{\r\n        dispatch({type:\"LOGIN_SUCCESS\", user})\r\n      }).catch((e)=>{\r\n        console.log(e)\r\n        dispatch({type:\"LOGOUT_SUCCESS\"})\r\n      })\r\n    }\r\n    else if(authState.user===null && authState.request){\r\n      login(authState.request.username, authState.request.password).then(user=>{\r\n        dispatch({type:\"LOGIN_SUCCESS\", user})\r\n      }).catch((data)=>{\r\n        dispatch({type:\"LOGIN_FAILED\"})\r\n        setError(data.response?.data?.message)\r\n      })\r\n    }\r\n    else if(authState.user && authState.request===null){\r\n      getNotification(authState.user.id).then(noti=>{\r\n        noti && putNotification({...noti, token:''}).then(()=>{\r\n          logout().then(()=>dispatch({type:\"LOGOUT_SUCCESS\"}))\r\n        })\r\n      })\r\n    }\r\n  }, [authState])\r\n  return <AuthContext.Provider value={{auth, error, dispatch}}>\r\n    {children}\r\n  </AuthContext.Provider>\r\n}\r\n\r\nexport default ()=>{\r\n  const authContext = useContext(AuthContext)\r\n  return authContext\r\n}\r\n","import { StackScreenProps } from '@react-navigation/stack';\r\nimport * as React from 'react';\r\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\r\nimport lang from '../lang'\r\n\r\nexport default function NotFoundScreen({\r\n  navigation,\r\n}: StackScreenProps<any, 'NotFound'>) {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>{lang(\"This screen doesn't exist.\")}</Text>\r\n      <TouchableOpacity onPress={() => navigation.replace('HomeScreen')} style={styles.link}>\r\n        <Text style={styles.linkText}>{lang(\"Go to home screen!\")}</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n  link: {\r\n    marginTop: 15,\r\n    paddingVertical: 15,\r\n  },\r\n  linkText: {\r\n    fontSize: 14,\r\n    color: '#2e78b7',\r\n  },\r\n});\r\n","import React, { createContext, useContext, useEffect } from \"react\"\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/messaging\";\r\n//@ts-ignore\r\nimport {FCM_PUBLIC_VAPID_KEY, FCM_API_KEY} from \"@env\"\r\nimport { Notification as NotificationType, UserMembership } from \"../types\";\r\nimport { getNotification, postNotification, putNotification } from \"../apis/notification\";\r\nimport { Auth } from \"./useAuthContext\";\r\nconst firebaseConfig = require(\"../../web/firebase-config.js\")\r\n// Initialize Firebase\r\nconst key = firebaseConfig.messagingSenderId\r\nconst apiKeyEncrypted = (FCM_API_KEY as string).split('').map((v, i)=> (v.charCodeAt(0) ^ key.charCodeAt(i)).toString(16).padStart(2, '0')).join('')\r\nconst app = firebase.initializeApp({...firebaseConfig, apiKey:FCM_API_KEY});\r\n// const analytics = getAnalytics(app);\r\nconst messaging = firebase.messaging(app);\r\n\r\nmessaging.onMessage((payload) => {\r\n  if (!(\"Notification\" in window)) {\r\n    alert(\"This browser does not support desktop notification\");\r\n  }\r\n  else if (Notification.permission === \"granted\") {\r\n    const message_set = JSON.parse(payload.data['message_set'])[0]\r\n    new Notification(payload.data.channel_name, { body: `${payload.data.name}: ${message_set.content}` });\r\n  }\r\n});\r\n\r\nconst requestToken = async()=>{\r\n  const permission = await Notification.requestPermission();\r\n  if (permission === 'granted') {\r\n    const serviceWorkerRegistration = await navigator.serviceWorker.register(`${process.env.PUBLIC_URL}/firebase-messaging-sw.js?${apiKeyEncrypted}`)\r\n    console.log('[SW]: SCOPE: ', serviceWorkerRegistration.scope);\r\n    const currentToken = await messaging.getToken({serviceWorkerRegistration, vapidKey: FCM_PUBLIC_VAPID_KEY })\r\n    window.addEventListener('beforeunload', (event:any) => {\r\n      event.preventDefault();\r\n      serviceWorkerRegistration.unregister()\r\n    });\r\n    if (currentToken)\r\n      return currentToken\r\n  }\r\n  return undefined\r\n}\r\n\r\n\r\nlet noti:NotificationType|undefined\r\n\r\nconst setEnable = async(enable:boolean, user?:UserMembership|null)=>{\r\n  context.enable = enable\r\n  if(user && enable){\r\n    const token = await requestToken() || null\r\n    noti = await getNotification(user.id)\r\n    if (noti == undefined)\r\n      noti = await postNotification({user:user.id, type:'WEB', token})\r\n    else\r\n      noti = await putNotification({...noti, token})\r\n  }\r\n  else if (noti){\r\n    await putNotification({...noti, token:null})\r\n  }\r\n}\r\n\r\nconst context:{enable:boolean, setEnable:(enable:boolean, user?:UserMembership|null)=>void} = {enable:false, setEnable}\r\nconst FirebaseContext = createContext(context);\r\n\r\nexport default (auth:Auth)=>{\r\n  useEffect(()=>{\r\n    setEnable(true, auth.user)\r\n  }, [auth.user])\r\n  const firebaseContext = useContext(FirebaseContext)\r\n  return firebaseContext\r\n}\r\n","import InviteModal from \"./InviteModal\";\r\nimport ProfileModal from \"./ProfileModal\";\r\nimport ChannelEditModal from \"./ChannelEditModal\"\r\nimport GuestLogoutModal from \"./GuestLogoutModal\";\r\n\r\nexport default [\r\n    InviteModal,\r\n    ProfileModal,\r\n    ChannelEditModal,\r\n    GuestLogoutModal\r\n]","import { CardStyleInterpolators, createStackNavigator } from '@react-navigation/stack';\r\nimport React, {useMemo} from 'react';\r\nimport { View } from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport useResizeWindow from '../hooks/useResizeWindow';\r\nimport NotFoundScreen from '../screens/NotFoundScreen';\r\nimport {main, login, modal} from '../screens';\r\nimport DrawerNavigator from './DrawerNavigator';\r\nimport useAuthContext from '../hooks/useAuthContext';\r\nimport { WebSocketProvider } from '../hooks/useWebsocketContext';\r\nimport HeaderRight from '../components/HeaderRight'\r\nimport Colors from '../constants/Colors';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\nimport useFirebaseContext from '../hooks/useFirebaseContext';\r\nimport useIsMobile from '../hooks/useIsMobile';\r\nimport useColorScheme from '../hooks/useColorScheme';\r\nimport { ModalsProvider } from '../hooks/useModalsContext';\r\nimport modals from '../modals';\r\n\r\nconst Root = createStackNavigator();\r\n\r\nexport default function RootNavigator() {\r\n    const windowType = useResizeWindow();\r\n    return <Root.Navigator\r\n        mode= 'modal'\r\n        headerMode= 'screen'\r\n        screenOptions={{\r\n            cardStyle:{backgroundColor:\"white\"},\r\n            animationEnabled: true,\r\n            cardStyleInterpolator: CardStyleInterpolators.forVerticalIOS,\r\n        }}\r\n    >\r\n        <Root.Screen name=\"Main\" component={MainNavigator} options={{headerShown:false}}/>\r\n        {Object.entries(modal).map(([key, screen])=><Root.Screen key={key} name={key} component={screen.component} options={{\r\n            title: screen.title,\r\n            gestureDirection: windowType == 'landscape'?'vertical-inverted':'vertical'\r\n        }} />)}\r\n    </Root.Navigator>\r\n}\r\n\r\nconst Main = createStackNavigator();\r\n\r\nfunction headerLeft(navigation:any, route:any, windowType:string, isMobile:boolean){\r\n    const canGOBackScreen = ['HomeScreen', 'LoginScreen'].findIndex(v=>v == route.name) == -1\r\n    const goBack = ()=>{\r\n        if (navigation.canGoBack())\r\n            navigation.goBack()\r\n        else if (canGOBackScreen)\r\n            navigation.replace('HomeScreen')\r\n    }\r\n    if (windowType=='portrait' && canGOBackScreen)\r\n        return <TouchableOpacity onPress={goBack}><Ionicons size={isMobile?20:24} style={{marginHorizontal:isMobile?16:20 }} name=\"arrow-back\"/></TouchableOpacity>\r\n    return null\r\n}\r\n\r\nconst MainNavigator = React.memo(()=>{\r\n    const windowType = useResizeWindow();\r\n    const isMobile = useIsMobile()\r\n    const {auth} = useAuthContext()\r\n    const theme = useColorScheme()\r\n    const entries = useMemo(()=>{\r\n        if (auth.user === undefined)\r\n            return []\r\n        console.log('current user: ', auth.user)\r\n        return Object.entries(auth.user === null?login:main)\r\n    }, [auth])\r\n    const modalValues = useMemo(()=>{\r\n        if (auth.user === undefined)\r\n            return []\r\n        return auth.user === null?[]:modals\r\n    }, [auth])\r\n\r\n    useFirebaseContext(auth)\r\n    return (auth.user!==undefined?<View style={{flexDirection:'row', flex:1}}>\r\n        {auth.user?<DrawerNavigator user={auth.user}/>:undefined}\r\n        <View style={{flex:1}}>\r\n            <WebSocketProvider disable={auth.user === null || auth.user === undefined}>\r\n                <ModalsProvider modals={modalValues}>\r\n                    <Main.Navigator\r\n                        screenOptions={({navigation, route})=>({\r\n                            headerStyle:{backgroundColor:Colors[theme].header, height:isMobile?50:undefined},\r\n                            headerTitleStyle:{color:'white'},\r\n                            headerLeft:()=>headerLeft(navigation, route, windowType, isMobile),\r\n                            headerRight:()=><HeaderRight/>,\r\n                            headerLeftContainerStyle:{backgroundColor:'white', borderBottomWidth:1, borderColor:Colors.borderColor},\r\n                            cardStyle:{flexShrink:1},\r\n                            animationEnabled:windowType=='portrait',\r\n                            cardStyleInterpolator: CardStyleInterpolators.forHorizontalIOS\r\n                        })}\r\n                    >\r\n                        {entries.map(([key, screen])=><Main.Screen key={key} name={key} component={screen.component} options={{ title: screen.title }} />)}\r\n                        <Main.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\r\n                    </Main.Navigator>\r\n                </ModalsProvider>\r\n            </WebSocketProvider>\r\n        </View>\r\n    </View>:<></>);\r\n})","import React from 'react';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\r\nimport Navigation from './src/navigation';\r\nimport useColorScheme from './src/hooks/useColorScheme';\r\nimport useCachedResources from './src/hooks/useCachedResources';\r\n\r\nexport default function App() {\r\n  const isLoadingComplete = useCachedResources();\r\n  const colorScheme = useColorScheme();\r\n  if (!isLoadingComplete) {\r\n    return null;\r\n  } else {\r\n    return (\r\n      <SafeAreaProvider>\r\n        <Navigation colorScheme={colorScheme} />\r\n        <StatusBar />\r\n      </SafeAreaProvider>\r\n    );\r\n  }\r\n}\r\n","import { Ionicons } from '@expo/vector-icons';\r\nimport * as Font from 'expo-font';\r\nimport * as SplashScreen from 'expo-splash-screen';\r\nimport * as React from 'react';\r\n\r\nexport default function useCachedResources() {\r\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\r\n\r\n  // Load any resources or data that we need prior to rendering the app\r\n  React.useEffect(() => {\r\n    async function loadResourcesAndDataAsync() {\r\n      try {\r\n        SplashScreen.preventAutoHideAsync();\r\n\r\n        // Load fonts\r\n        await Font.loadAsync({\r\n          ...Ionicons.font,\r\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\r\n        });\r\n      } catch (e) {\r\n        // We might want to provide this error information to an error reporting service\r\n        console.warn(e);\r\n      } finally {\r\n        setLoadingComplete(true);\r\n        SplashScreen.hideAsync();\r\n      }\r\n    }\r\n\r\n    loadResourcesAndDataAsync();\r\n  }, []);\r\n\r\n  return isLoadingComplete;\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Text, StyleSheet, Pressable, StyleProp, ViewStyle} from 'react-native';\r\nimport Colors from '../constants/Colors';\r\nimport useColorScheme from '../hooks/useColorScheme';\r\nimport { CustomButtonProps } from '../types';\r\n\r\nconst DefaultButton = (props:CustomButtonProps)=>{\r\n    const [hover, setHover] = useState(false)\r\n    return <Pressable\r\n        onPress={()=>props.onPress()}\r\n        //@ts-ignore\r\n        onHoverIn={()=>setHover(true)}\r\n        onHoverOut={()=>setHover(false)}\r\n        style={[\r\n            {\r\n                paddingVertical:5, \r\n                paddingHorizontal:16\r\n            },\r\n            props.style,\r\n            hover?{backgroundColor:props.color}:{}\r\n        ]}>\r\n            <Text selectable={false} style={[{fontSize:14}, props.textStyle]}>{props.title}</Text>\r\n        </Pressable>\r\n}\r\n\r\nexport default (props:CustomButtonProps)=>{\r\n    const theme = useColorScheme()\r\n    const _props = {\r\n        color:Colors[theme].buttonColor,\r\n        ...props,\r\n        style:[\r\n            styles.style,\r\n            {\r\n                backgroundColor:Colors[theme].buttonBackgroundColor\r\n            },\r\n            props.style,\r\n        ] as StyleProp<ViewStyle>,\r\n        textStyle:[\r\n            styles.text, \r\n            {color:Colors[theme].text},\r\n            props.textStyle\r\n        ]\r\n    }\r\n    return <DefaultButton {..._props}/>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    style:{\r\n        borderRadius:6, \r\n        borderColor:Colors.button.borderColor, \r\n        borderWidth:1, \r\n    },\r\n    text:{\r\n        textAlign:'center', \r\n        fontWeight:'600'\r\n    }\r\n});\r\n","firebaseConfig = {\n    \"authDomain\": \"virtual-metrics-355712.firebaseapp.com\",\n    \"projectId\": \"virtual-metrics-355712\",\n    \"storageBucket\": \"virtual-metrics-355712.appspot.com\",\n    \"messagingSenderId\": \"76003576924\",\n    \"appId\": \"1:76003576924:web:c8c8a006d07918bbc02a99\",\n    \"measurementId\": \"G-SEL35L4N5R\"\n}\nif (typeof module !== 'undefined') {\n    module.exports = firebaseConfig\n}\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","\r\nimport { User, UserMembership } from '../types';\r\nimport axios, { getToken, setToken, accountURL as baseURL } from './axios';\r\n\r\nexport const login = async(username:string, password:string) => {\r\n    if(username.endsWith('.guest') && password.length == 0)\r\n        password = 'guest'\r\n    const r = await axios.post(\"/api-token-auth/\", {username, password});\r\n    if(r.status == 200){\r\n        await setToken(r.data)\r\n        return await checkLogin()\r\n    }\r\n}\r\n\r\nexport const logout = async() => {\r\n    await setToken(null)\r\n    return await axios.get(\"/api-auth/logout/\")\r\n}\r\n\r\nexport const guestLogin =  async() => {\r\n    return await login('guest', 'guest')\r\n}\r\n\r\nconst checkLoginToken = async ()=>{\r\n    const value = (await axios.get(\"/api/v1/users/memberships/?_self=true\"))?.data\r\n    if (value && value.length){\r\n        return value[0] as UserMembership\r\n    }\r\n    return null\r\n}\r\n\r\nexport const checkLogin = async() => {\r\n    const token = await getToken()\r\n    if (token === null)\r\n        return null\r\n    try{\r\n       return await checkLoginToken()\r\n    }\r\n    catch(e:any){\r\n        let error = e\r\n        if(e.response !== undefined && e.response.status==401){\r\n            try{\r\n                return await checkLoginToken()\r\n            }\r\n            catch(e2){\r\n                error = e2\r\n            }\r\n        }\r\n        const isOffline = ((error as any).code == \"ERR_NETWORK\" || (error as any).message && ((error as any).message as string).startsWith(\"Cannot read\"))\r\n        throw {error, isOffline}\r\n    }\r\n}\r\n\r\nexport const getUserList = async (group_id:number)=>{\r\n    return (await axios.get(`/api/v1/users/?group_id=${group_id}`) ).data as User[]\r\n}\r\n\r\nexport const patchUser = async (user:{id:number, name:string})=>{\r\n    await axios.patch(`/api/v1/user/`, {ids:[user.id], updated: {name:user.name}}, {baseURL})\r\n}\r\n\r\nexport const getUserMembershipList = async (group_id:number)=>{\r\n    return (await axios.get(`/api/v1/users/memberships/?group_id=${group_id}`) ).data as UserMembership[]\r\n}\r\n\r\nexport const getExternalMembershipList = async (username:string)=>{\r\n    return (await axios.get(`/api/v1/users/memberships/?username=${username}`) ).data as UserMembership[]\r\n}","import { Channel, MessengerMember, MessengerContent, EditMessage, MessengerChannel, DirectChannel } from '../types';\r\nimport axios from './axios';\r\n\r\nexport const getMessengerChannelList = async (user_id:number)=>{\r\n    return (await axios.get(`/api/v1/channels/messenger/?type=messenger&messenger_user_id=${user_id}`) ).data as MessengerChannel[]\r\n}\r\n\r\nexport const postChannel = async(channel:Channel)=>{\r\n    return (await axios.post(`/api/v1/channels/`, channel)).data as Channel\r\n}\r\n\r\nexport const postDirectChannel = async(channel:DirectChannel)=>{\r\n    return (await axios.post(`/api/v1/channels/direct/`, channel)).data as Channel\r\n}\r\n\r\nexport const putChannel = async(channel:Channel)=>{\r\n    return (await axios.put(`/api/v1/channels/${channel.id}/`, channel)).data as Channel\r\n}\r\n\r\nexport const deleteChannel = async(channel_id:number)=>{\r\n    await axios.delete(`/api/v1/channels/${channel_id}/`)\r\n}\r\n\r\nexport const getMessengerMemberList = async(channel_id:number)=>{\r\n    return (await axios.get(`/api/v1/messengermembers/?channel=${channel_id}`) ).data as MessengerMember[]\r\n}\r\n\r\nexport const postBulkMessengerMember = async(data:{channel_id:number, user_ids:number[]})=>{\r\n    await axios.post(`/api/v1/messengermembers/bulk/`, {channel:data.channel_id, user_ids:data.user_ids})\r\n}\r\n\r\nexport const deleteMessengerMember = async(member_id:number)=>{\r\n    await axios.delete(`/api/v1/messengermembers/${member_id}/`)\r\n}\r\n\r\nexport const getMessengerContentList = async (channel_id:number, id_lt?:number)=>{\r\n    const id_lt_param = id_lt?`&id_lt=${id_lt}`:''\r\n    return (await axios.get(`/api/v1/messengercontents/?limit=30&channel=${channel_id}${id_lt_param}`)).data.results as MessengerContent[]\r\n}\r\n\r\nexport const postMessage = async (message:EditMessage)=>{\r\n    if (message.file){\r\n        const formData = new FormData(); // formData 객체를 생성한다.\r\n        formData.append(\"file\", message.file)\r\n        Object.entries(message).forEach(value=>{\r\n            formData.append(value[0], `${value[1]}`)\r\n        })\r\n        await axios.post(`/api/v1/messengercontents/messages/`, formData, {headers:{\r\n            ...(axios.defaults.headers as any), \"Content-Type\": \"multipart/form-data\",\r\n        }})\r\n    }\r\n    else{\r\n        await axios.post(`/api/v1/messengercontents/messages/`, message)\r\n    }\r\n}\r\n\r\nexport const deleteMessengerContent = async (content_id:number)=>{\r\n    await axios.delete(`/api/v1/messengercontents/${content_id}/`)\r\n}","import React, { useState, createContext, useContext, useEffect } from \"react\";\r\nimport { Modal } from \"react-native\";\r\nimport useResizeWindow from \"./useResizeWindow\";\r\n\r\ntype ModalProps = any\r\n\r\ntype ModalState = {\r\n  Component:React.ComponentType<ModalProps>,\r\n  ExactComponent?:React.ComponentType<ModalProps>\r\n}\r\ntype SetModal = (Component:ModalState[\"Component\"], props:ModalProps|null)=>void\r\n\r\nconst ModalsContext = createContext<{setModal: SetModal}>({\r\n    setModal: () => {}\r\n});\r\n\r\nexport const ModalsProvider = ({children, modals:allModals}:{children:React.ReactNode, modals:React.ComponentType<ModalProps>[]}) => {\r\n    const [modals, setModals] = useState<ModalState[]>(allModals.map((Component)=>({Component})));\r\n    const windowType = useResizeWindow();\r\n    const [animationType, setAnimationType] = useState('none')\r\n    const setModal:SetModal = (Component, props) => {\r\n        const newModals = modals.map(m=>{\r\n            if(m.Component == Component){\r\n                return {\r\n                    Component, \r\n                    ExactComponent:props != null?React.memo(()=><Component {...props}/>):undefined\r\n                }\r\n            }\r\n            return m        \r\n        })\r\n        setModals(newModals);\r\n    }\r\n    useEffect(()=>{\r\n        modals.filter(v=>v.ExactComponent!==undefined).length == 0 && setAnimationType(windowType == 'landscape'?'fade':'slide')\r\n    }, [windowType, modals])\r\n    return <ModalsContext.Provider value={{setModal}}>\r\n        {children}\r\n        {modals.map((modal, index)=>{\r\n            const { ExactComponent } = modal;\r\n            return <Modal key={index} animationType={animationType as any} visible={ExactComponent!==undefined}>\r\n                {ExactComponent?<ExactComponent/>:<></>}\r\n            </Modal>\r\n        })}\r\n    </ModalsContext.Provider>\r\n}\r\n\r\nexport default ()=>{\r\n    const modalsContext = useContext(ModalsContext)\r\n    return modalsContext\r\n}\r\n\r\n","import React, { useState, useEffect, createContext, useContext, useMemo } from 'react';\r\nimport { Dimensions, ScaledSize, useWindowDimensions } from 'react-native';\r\n//@ts-ignore\r\nimport useMobileDetect from 'use-mobile-detect-hook';\r\n\r\ntype WindowType = 'portrait' | 'landscape'\r\n\r\nconst getWindowType = (window:{width:number, height:number})=> window.height >= window.width?'portrait':'landscape' as WindowType;\r\n\r\nconst ResizeWindowContext = createContext<WindowType>(getWindowType(Dimensions.get('window')));\r\n\r\nexport const ResizeWindowProvider = ({children}:{children:React.ReactNode})=>{\r\n  const detectMobile = useMobileDetect();\r\n  const {width, height} = useWindowDimensions()\r\n  const [windowType, setWindowType] = useState(getWindowType({width, height}))\r\n  useEffect(()=>{\r\n    setWindowType(getWindowType({width, height}))\r\n  }, [width, height])\r\n  return <ResizeWindowContext.Provider value={detectMobile.isMobile()?'portrait':windowType}>\r\n    {children}\r\n  </ResizeWindowContext.Provider>\r\n}\r\n\r\nexport default function useResizeWindow() {\r\n  const windowType = useContext(ResizeWindowContext)\r\n  return windowType\r\n}","import { ColorSchemeName, useColorScheme as _useColorScheme } from 'react-native';\r\n\r\n// The useColorScheme value is always either light or dark, but the built-in\r\n// type suggests that it can be null. This will not happen in practice, so this\r\n// makes it a bit easier to work with.\r\nexport default function useColorScheme(): NonNullable<ColorSchemeName> {\r\n  return _useColorScheme() as NonNullable<ColorSchemeName>;\r\n}\r\n","import * as React from 'react';\r\nimport { View, Text } from './Themed';\r\nimport { StyleSheet, StyleProp, ViewStyle, TextStyle } from 'react-native';\r\nimport Colors from '../constants/Colors';\r\n\r\nexport type SectionParamList = {\r\n    title?: string,\r\n    titleStyle?:StyleProp<TextStyle>\r\n    outerContainerStyle?:StyleProp<TextStyle>\r\n    containerStyle?:StyleProp<ViewStyle>\r\n    bodyStyle?:StyleProp<ViewStyle>\r\n    subtitle?: string\r\n    withSeparator?: boolean\r\n    children?: React.ReactNode\r\n}\r\n\r\nexport default function CommonSection(props:SectionParamList){\r\n  return (\r\n    <View style={[styles.outerContainer, props.outerContainerStyle]}>\r\n        <View style={[styles.container, props.containerStyle]}>\r\n            {props.withSeparator?<View style={styles.separator} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />:undefined}\r\n            {props.title?<View style={styles.titleView}>\r\n              <Text style={[styles.title, props.titleStyle]}>{props.title}</Text>\r\n              <Text style={styles.subtitle}>{props.subtitle}</Text>\r\n            </View>:undefined}\r\n            <View style={[styles.bodyView, props.bodyStyle]}>\r\n            {props.children}\r\n            </View>\r\n          </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  outerContainer:{\r\n    width:'100%',\r\n    maxWidth:1080,\r\n    alignItems:'stretch',\r\n    backgroundColor:'transparent'\r\n  },  \r\n  container: {\r\n      marginHorizontal:20,\r\n      marginVertical: 10,\r\n      backgroundColor:'transparent',\r\n    },\r\n    titleView:{\r\n      width: '100%',\r\n      flexDirection:'row',\r\n      backgroundColor:'transparent',\r\n      marginBottom:5,\r\n    },\r\n    title: {\r\n      flex:1,\r\n      fontSize: 16,\r\n    },\r\n    subtitle: {\r\n      flex:1,\r\n      fontSize: 12,\r\n      textAlign: 'right',\r\n      marginTop:4\r\n    },\r\n    separator: {\r\n      marginBottom: 20,\r\n      height: 1,\r\n      width: '100%',\r\n    },\r\n    bodyView:{\r\n      width: '100%',\r\n      padding: 20,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      borderWidth:1,\r\n      borderColor:Colors.borderColor,\r\n      borderRadius:6\r\n    }\r\n  });\r\n  ","import { useEffect } from \"react\";\r\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\r\nimport { getMessengerChannelList, postChannel, postDirectChannel, putChannel } from \"../../apis\";\r\nimport { MessengerChannel, MessengerContent } from \"../../types\";\r\nimport { Auth } from \"../useAuthContext\";\r\nimport useWebsocketContext from \"../useWebsocketContext\";\r\n\r\nexport default function useMessengerChannelList(auth?:Auth){\r\n  const queryClient = useQueryClient()\r\n  const {lastJsonMessage} = useWebsocketContext()\r\n  const { data } = useQuery(\"MessengerChannelList\" , async()=>auth?.user?.id?(await getMessengerChannelList(auth.user.id)):[])\r\n\r\n  useEffect(()=>{\r\n    if(lastJsonMessage !=null){\r\n      if(lastJsonMessage['type']=='enter'){\r\n        queryClient.setQueryData<MessengerChannel[]>(\"MessengerChannelList\", (_data)=>{\r\n          return (_data?.find(v=>v.id==lastJsonMessage['data']['id'])?_data:[lastJsonMessage['data'] , ...(_data|| [])]).sort((a, b)=>a.id - b.id)\r\n        })\r\n      }\r\n      if (lastJsonMessage['type']=='next_message'){\r\n        const data:MessengerContent = lastJsonMessage['data']\r\n        queryClient.setQueryData<MessengerChannel[]>(\"MessengerChannelList\", (_data)=>(_data || []).map(v=>{\r\n          if (v.id == data.channel){\r\n            return {...v, last_message:{content:data.message_set[0]?.content, created:data.created}}\r\n          }\r\n          return v\r\n        }))\r\n      }\r\n      // if(lastJsonMessage['type']=='leave'){\r\n      //   queryClient.setQueryData<Channel[]>(\"MessengerChannelList\", (_data)=>_data?.filter(v=>v.id!=lastJsonMessage['data']['channel_id']) || [])\r\n      // }\r\n    }\r\n  }, [lastJsonMessage])\r\n  return data\r\n}\r\n\r\nexport function useMessengerChannelSorted(auth?:Auth){\r\n  const channelList = useMessengerChannelList(auth);\r\n  return channelList?.sort((a, b)=>(a.last_message?.created || '') < (b.last_message?.created || '')?1:-1)\r\n}\r\nexport function useMessengerChannelMutation(){\r\n  const queryClient = useQueryClient()\r\n\r\n  const create = useMutation(postChannel, {\r\n    onSuccess: ()=>queryClient.invalidateQueries(\"MessengerChannelList\")\r\n  });\r\n\r\n  const update = useMutation(putChannel, {\r\n    onSuccess: () => queryClient.invalidateQueries(\"MessengerChannelList\")\r\n  })\r\n\r\n  const direct = useMutation(postDirectChannel, {\r\n    onSuccess: () => queryClient.invalidateQueries(\"MessengerChannelList\")\r\n  })\r\n\r\n  return { create:create.mutateAsync, update:update.mutateAsync, direct:direct.mutateAsync}\r\n}"],"sourceRoot":""}