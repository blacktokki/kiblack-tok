{"version":3,"file":"static/js/270.d0f929c6.chunk.js","mappings":"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","sources":["node_modules/react-native-web/dist/exports/Text/index.js","node_modules/react-native-web/dist/exports/TouchableHighlight/index.js","node_modules/react-native-web/dist/modules/usePressEvents/PressResponder.js","node_modules/react-native-web/dist/modules/usePressEvents/index.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"hrefAttrs\", \"numberOfLines\", \"onClick\", \"onLayout\", \"onPress\", \"onMoveShouldSetResponder\", \"onMoveShouldSetResponderCapture\", \"onResponderEnd\", \"onResponderGrant\", \"onResponderMove\", \"onResponderReject\", \"onResponderRelease\", \"onResponderStart\", \"onResponderTerminate\", \"onResponderTerminationRequest\", \"onScrollShouldSetResponder\", \"onScrollShouldSetResponderCapture\", \"onSelectionChangeShouldSetResponder\", \"onSelectionChangeShouldSetResponderCapture\", \"onStartShouldSetResponder\", \"onStartShouldSetResponderCapture\", \"selectable\"];\n\n/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport * as React from 'react';\nimport createElement from '../createElement';\nimport * as forwardedProps from '../../modules/forwardedProps';\nimport pick from '../../modules/pick';\nimport useElementLayout from '../../modules/useElementLayout';\nimport useMergeRefs from '../../modules/useMergeRefs';\nimport usePlatformMethods from '../../modules/usePlatformMethods';\nimport useResponderEvents from '../../modules/useResponderEvents';\nimport StyleSheet from '../StyleSheet';\nimport TextAncestorContext from './TextAncestorContext';\nimport { useLocaleContext, getLocaleDirection } from '../../modules/useLocale';\nvar forwardPropsList = Object.assign({}, forwardedProps.defaultProps, forwardedProps.accessibilityProps, forwardedProps.clickProps, forwardedProps.focusProps, forwardedProps.keyboardProps, forwardedProps.mouseProps, forwardedProps.touchProps, forwardedProps.styleProps, {\n  href: true,\n  lang: true,\n  pointerEvents: true\n});\n\nvar pickProps = props => pick(props, forwardPropsList);\n\nvar Text = /*#__PURE__*/React.forwardRef((props, forwardedRef) => {\n  var hrefAttrs = props.hrefAttrs,\n      numberOfLines = props.numberOfLines,\n      onClick = props.onClick,\n      onLayout = props.onLayout,\n      onPress = props.onPress,\n      onMoveShouldSetResponder = props.onMoveShouldSetResponder,\n      onMoveShouldSetResponderCapture = props.onMoveShouldSetResponderCapture,\n      onResponderEnd = props.onResponderEnd,\n      onResponderGrant = props.onResponderGrant,\n      onResponderMove = props.onResponderMove,\n      onResponderReject = props.onResponderReject,\n      onResponderRelease = props.onResponderRelease,\n      onResponderStart = props.onResponderStart,\n      onResponderTerminate = props.onResponderTerminate,\n      onResponderTerminationRequest = props.onResponderTerminationRequest,\n      onScrollShouldSetResponder = props.onScrollShouldSetResponder,\n      onScrollShouldSetResponderCapture = props.onScrollShouldSetResponderCapture,\n      onSelectionChangeShouldSetResponder = props.onSelectionChangeShouldSetResponder,\n      onSelectionChangeShouldSetResponderCapture = props.onSelectionChangeShouldSetResponderCapture,\n      onStartShouldSetResponder = props.onStartShouldSetResponder,\n      onStartShouldSetResponderCapture = props.onStartShouldSetResponderCapture,\n      selectable = props.selectable,\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var hasTextAncestor = React.useContext(TextAncestorContext);\n  var hostRef = React.useRef(null);\n\n  var _useLocaleContext = useLocaleContext(),\n      contextDirection = _useLocaleContext.direction;\n\n  useElementLayout(hostRef, onLayout);\n  useResponderEvents(hostRef, {\n    onMoveShouldSetResponder,\n    onMoveShouldSetResponderCapture,\n    onResponderEnd,\n    onResponderGrant,\n    onResponderMove,\n    onResponderReject,\n    onResponderRelease,\n    onResponderStart,\n    onResponderTerminate,\n    onResponderTerminationRequest,\n    onScrollShouldSetResponder,\n    onScrollShouldSetResponderCapture,\n    onSelectionChangeShouldSetResponder,\n    onSelectionChangeShouldSetResponderCapture,\n    onStartShouldSetResponder,\n    onStartShouldSetResponderCapture\n  });\n  var handleClick = React.useCallback(e => {\n    if (onClick != null) {\n      onClick(e);\n    } else if (onPress != null) {\n      e.stopPropagation();\n      onPress(e);\n    }\n  }, [onClick, onPress]);\n  var component = hasTextAncestor ? 'span' : 'div';\n  var langDirection = props.lang != null ? getLocaleDirection(props.lang) : null;\n  var componentDirection = props.dir || langDirection;\n  var writingDirection = componentDirection || contextDirection;\n  var supportedProps = pickProps(rest);\n  supportedProps.dir = componentDirection; // 'auto' by default allows browsers to infer writing direction (root elements only)\n\n  if (!hasTextAncestor) {\n    supportedProps.dir = componentDirection != null ? componentDirection : 'auto';\n  }\n\n  if (onClick || onPress) {\n    supportedProps.onClick = handleClick;\n  }\n\n  supportedProps.style = [numberOfLines != null && numberOfLines > 1 && {\n    WebkitLineClamp: numberOfLines\n  }, hasTextAncestor === true ? styles.textHasAncestor$raw : styles.text$raw, numberOfLines === 1 && styles.textOneLine, numberOfLines != null && numberOfLines > 1 && styles.textMultiLine, props.style, selectable === true && styles.selectable, selectable === false && styles.notSelectable, onPress && styles.pressable];\n\n  if (props.href != null) {\n    component = 'a';\n\n    if (hrefAttrs != null) {\n      var download = hrefAttrs.download,\n          rel = hrefAttrs.rel,\n          target = hrefAttrs.target;\n\n      if (download != null) {\n        supportedProps.download = download;\n      }\n\n      if (rel != null) {\n        supportedProps.rel = rel;\n      }\n\n      if (typeof target === 'string') {\n        supportedProps.target = target.charAt(0) !== '_' ? '_' + target : target;\n      }\n    }\n  }\n\n  var platformMethodsRef = usePlatformMethods(supportedProps);\n  var setRef = useMergeRefs(hostRef, platformMethodsRef, forwardedRef);\n  supportedProps.ref = setRef;\n  var element = createElement(component, supportedProps, {\n    writingDirection\n  });\n  return hasTextAncestor ? element : /*#__PURE__*/React.createElement(TextAncestorContext.Provider, {\n    value: true\n  }, element);\n});\nText.displayName = 'Text';\nvar textStyle = {\n  backgroundColor: 'transparent',\n  border: '0 solid black',\n  boxSizing: 'border-box',\n  color: 'black',\n  display: 'inline',\n  font: '14px System',\n  listStyle: 'none',\n  margin: 0,\n  padding: 0,\n  textAlign: 'inherit',\n  textDecoration: 'none',\n  whiteSpace: 'pre-wrap',\n  wordWrap: 'break-word'\n};\nvar styles = StyleSheet.create({\n  text$raw: textStyle,\n  textHasAncestor$raw: _objectSpread(_objectSpread({}, textStyle), {}, {\n    color: 'inherit',\n    font: 'inherit',\n    whiteSpace: 'inherit'\n  }),\n  textOneLine: {\n    maxWidth: '100%',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    wordWrap: 'normal'\n  },\n  // See #13\n  textMultiLine: {\n    display: '-webkit-box',\n    maxWidth: '100%',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    WebkitBoxOrient: 'vertical'\n  },\n  notSelectable: {\n    userSelect: 'none'\n  },\n  selectable: {\n    userSelect: 'text'\n  },\n  pressable: {\n    cursor: 'pointer'\n  }\n});\nexport default Text;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"activeOpacity\", \"children\", \"delayPressIn\", \"delayPressOut\", \"delayLongPress\", \"disabled\", \"focusable\", \"onHideUnderlay\", \"onLongPress\", \"onPress\", \"onPressIn\", \"onPressOut\", \"onShowUnderlay\", \"rejectResponderTermination\", \"style\", \"testOnly_pressed\", \"underlayColor\"];\nimport * as React from 'react';\nimport { useCallback, useMemo, useState, useRef } from 'react';\nimport useMergeRefs from '../../modules/useMergeRefs';\nimport usePressEvents from '../../modules/usePressEvents';\nimport StyleSheet from '../StyleSheet';\nimport View from '../View';\n\nfunction createExtraStyles(activeOpacity, underlayColor) {\n  return {\n    child: {\n      opacity: activeOpacity !== null && activeOpacity !== void 0 ? activeOpacity : 0.85\n    },\n    underlay: {\n      backgroundColor: underlayColor === undefined ? 'black' : underlayColor\n    }\n  };\n}\n\nfunction hasPressHandler(props) {\n  return props.onPress != null || props.onPressIn != null || props.onPressOut != null || props.onLongPress != null;\n}\n/**\n * A wrapper for making views respond properly to touches.\n * On press down, the opacity of the wrapped view is decreased, which allows\n * the underlay color to show through, darkening or tinting the view.\n *\n * The underlay comes from wrapping the child in a new View, which can affect\n * layout, and sometimes cause unwanted visual artifacts if not used correctly,\n * for example if the backgroundColor of the wrapped view isn't explicitly set\n * to an opaque color.\n *\n * TouchableHighlight must have one child (not zero or more than one).\n * If you wish to have several child components, wrap them in a View.\n */\n\n\nfunction TouchableHighlight(props, forwardedRef) {\n  var activeOpacity = props.activeOpacity,\n      children = props.children,\n      delayPressIn = props.delayPressIn,\n      delayPressOut = props.delayPressOut,\n      delayLongPress = props.delayLongPress,\n      disabled = props.disabled,\n      focusable = props.focusable,\n      onHideUnderlay = props.onHideUnderlay,\n      onLongPress = props.onLongPress,\n      onPress = props.onPress,\n      onPressIn = props.onPressIn,\n      onPressOut = props.onPressOut,\n      onShowUnderlay = props.onShowUnderlay,\n      rejectResponderTermination = props.rejectResponderTermination,\n      style = props.style,\n      testOnly_pressed = props.testOnly_pressed,\n      underlayColor = props.underlayColor,\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var hostRef = useRef(null);\n  var setRef = useMergeRefs(forwardedRef, hostRef);\n\n  var _useState = useState(testOnly_pressed === true ? createExtraStyles(activeOpacity, underlayColor) : null),\n      extraStyles = _useState[0],\n      setExtraStyles = _useState[1];\n\n  var showUnderlay = useCallback(() => {\n    if (!hasPressHandler(props)) {\n      return;\n    }\n\n    setExtraStyles(createExtraStyles(activeOpacity, underlayColor));\n\n    if (onShowUnderlay != null) {\n      onShowUnderlay();\n    }\n  }, [activeOpacity, onShowUnderlay, props, underlayColor]);\n  var hideUnderlay = useCallback(() => {\n    if (testOnly_pressed === true) {\n      return;\n    }\n\n    if (hasPressHandler(props)) {\n      setExtraStyles(null);\n\n      if (onHideUnderlay != null) {\n        onHideUnderlay();\n      }\n    }\n  }, [onHideUnderlay, props, testOnly_pressed]);\n  var pressConfig = useMemo(() => ({\n    cancelable: !rejectResponderTermination,\n    disabled,\n    delayLongPress,\n    delayPressStart: delayPressIn,\n    delayPressEnd: delayPressOut,\n    onLongPress,\n    onPress,\n\n    onPressStart(event) {\n      showUnderlay();\n\n      if (onPressIn != null) {\n        onPressIn(event);\n      }\n    },\n\n    onPressEnd(event) {\n      hideUnderlay();\n\n      if (onPressOut != null) {\n        onPressOut(event);\n      }\n    }\n\n  }), [delayLongPress, delayPressIn, delayPressOut, disabled, onLongPress, onPress, onPressIn, onPressOut, rejectResponderTermination, showUnderlay, hideUnderlay]);\n  var pressEventHandlers = usePressEvents(hostRef, pressConfig);\n  var child = React.Children.only(children);\n  return /*#__PURE__*/React.createElement(View, _extends({}, rest, pressEventHandlers, {\n    accessibilityDisabled: disabled,\n    focusable: !disabled && focusable !== false,\n    pointerEvents: disabled ? 'none' : undefined,\n    ref: setRef,\n    style: [styles.root, style, !disabled && styles.actionable, extraStyles && extraStyles.underlay]\n  }), /*#__PURE__*/React.cloneElement(child, {\n    style: StyleSheet.compose(child.props.style, extraStyles && extraStyles.child)\n  }));\n}\n\nvar styles = StyleSheet.create({\n  root: {\n    userSelect: 'none'\n  },\n  actionable: {\n    cursor: 'pointer',\n    touchAction: 'manipulation'\n  }\n});\nvar MemoedTouchableHighlight = /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(TouchableHighlight));\nMemoedTouchableHighlight.displayName = 'TouchableHighlight';\nexport default MemoedTouchableHighlight;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nvar DELAY = 'DELAY';\nvar ERROR = 'ERROR';\nvar LONG_PRESS_DETECTED = 'LONG_PRESS_DETECTED';\nvar NOT_RESPONDER = 'NOT_RESPONDER';\nvar RESPONDER_ACTIVE_LONG_PRESS_START = 'RESPONDER_ACTIVE_LONG_PRESS_START';\nvar RESPONDER_ACTIVE_PRESS_START = 'RESPONDER_ACTIVE_PRESS_START';\nvar RESPONDER_INACTIVE_PRESS_START = 'RESPONDER_INACTIVE_PRESS_START';\nvar RESPONDER_GRANT = 'RESPONDER_GRANT';\nvar RESPONDER_RELEASE = 'RESPONDER_RELEASE';\nvar RESPONDER_TERMINATED = 'RESPONDER_TERMINATED';\nvar Transitions = Object.freeze({\n  NOT_RESPONDER: {\n    DELAY: ERROR,\n    RESPONDER_GRANT: RESPONDER_INACTIVE_PRESS_START,\n    RESPONDER_RELEASE: ERROR,\n    RESPONDER_TERMINATED: ERROR,\n    LONG_PRESS_DETECTED: ERROR\n  },\n  RESPONDER_INACTIVE_PRESS_START: {\n    DELAY: RESPONDER_ACTIVE_PRESS_START,\n    RESPONDER_GRANT: ERROR,\n    RESPONDER_RELEASE: NOT_RESPONDER,\n    RESPONDER_TERMINATED: NOT_RESPONDER,\n    LONG_PRESS_DETECTED: ERROR\n  },\n  RESPONDER_ACTIVE_PRESS_START: {\n    DELAY: ERROR,\n    RESPONDER_GRANT: ERROR,\n    RESPONDER_RELEASE: NOT_RESPONDER,\n    RESPONDER_TERMINATED: NOT_RESPONDER,\n    LONG_PRESS_DETECTED: RESPONDER_ACTIVE_LONG_PRESS_START\n  },\n  RESPONDER_ACTIVE_LONG_PRESS_START: {\n    DELAY: ERROR,\n    RESPONDER_GRANT: ERROR,\n    RESPONDER_RELEASE: NOT_RESPONDER,\n    RESPONDER_TERMINATED: NOT_RESPONDER,\n    LONG_PRESS_DETECTED: RESPONDER_ACTIVE_LONG_PRESS_START\n  },\n  ERROR: {\n    DELAY: NOT_RESPONDER,\n    RESPONDER_GRANT: RESPONDER_INACTIVE_PRESS_START,\n    RESPONDER_RELEASE: NOT_RESPONDER,\n    RESPONDER_TERMINATED: NOT_RESPONDER,\n    LONG_PRESS_DETECTED: NOT_RESPONDER\n  }\n});\n\nvar isActiveSignal = signal => signal === RESPONDER_ACTIVE_PRESS_START || signal === RESPONDER_ACTIVE_LONG_PRESS_START;\n\nvar isButtonRole = element => element.getAttribute('role') === 'button';\n\nvar isPressStartSignal = signal => signal === RESPONDER_INACTIVE_PRESS_START || signal === RESPONDER_ACTIVE_PRESS_START || signal === RESPONDER_ACTIVE_LONG_PRESS_START;\n\nvar isTerminalSignal = signal => signal === RESPONDER_TERMINATED || signal === RESPONDER_RELEASE;\n\nvar isValidKeyPress = event => {\n  var key = event.key,\n      target = event.target;\n  var role = target.getAttribute('role');\n  var isSpacebar = key === ' ' || key === 'Spacebar';\n  return key === 'Enter' || isSpacebar && role === 'button';\n};\n\nvar DEFAULT_LONG_PRESS_DELAY_MS = 450; // 500 - 50\n\nvar DEFAULT_PRESS_DELAY_MS = 50;\n/**\n * =========================== PressResponder Tutorial ===========================\n *\n * The `PressResponder` class helps you create press interactions by analyzing the\n * geometry of elements and observing when another responder (e.g. ScrollView)\n * has stolen the touch lock. It offers hooks for your component to provide\n * interaction feedback to the user:\n *\n * - When a press has activated (e.g. highlight an element)\n * - When a press has deactivated (e.g. un-highlight an element)\n * - When a press sould trigger an action, meaning it activated and deactivated\n *   while within the geometry of the element without the lock being stolen.\n *\n * A high quality interaction isn't as simple as you might think. There should\n * be a slight delay before activation. Moving your finger beyond an element's\n * bounds should trigger deactivation, but moving the same finger back within an\n * element's bounds should trigger reactivation.\n *\n * In order to use `PressResponder`, do the following:\n *\n *     const pressResponder = new PressResponder(config);\n *\n * 2. Choose the rendered component who should collect the press events. On that\n *    element, spread `pressability.getEventHandlers()` into its props.\n *\n *    return (\n *      <View {...this.state.pressResponder.getEventHandlers()} />\n *    );\n *\n * 3. Reset `PressResponder` when your component unmounts.\n *\n *    componentWillUnmount() {\n *      this.state.pressResponder.reset();\n *    }\n *\n * ==================== Implementation Details ====================\n *\n * `PressResponder` only assumes that there exists a `HitRect` node. The `PressRect`\n * is an abstract box that is extended beyond the `HitRect`.\n *\n * # Geometry\n *\n *  ┌────────────────────────┐\n *  │  ┌──────────────────┐  │ - Presses start anywhere within `HitRect`.\n *  │  │  ┌────────────┐  │  │\n *  │  │  │ VisualRect │  │  │\n *  │  │  └────────────┘  │  │ - When pressed down for sufficient amount of time\n *  │  │    HitRect       │  │   before letting up, `VisualRect` activates.\n *  │  └──────────────────┘  │\n *  │       Out Region   o   │\n *  └────────────────────│───┘\n *                       └────── When the press is released outside the `HitRect`,\n *                               the responder is NOT eligible for a \"press\".\n *\n * # State Machine\n *\n * ┌───────────────┐ ◀──── RESPONDER_RELEASE\n * │ NOT_RESPONDER │\n * └───┬───────────┘ ◀──── RESPONDER_TERMINATED\n *     │\n *     │ RESPONDER_GRANT (HitRect)\n *     │\n *     ▼\n * ┌─────────────────────┐          ┌───────────────────┐              ┌───────────────────┐\n * │ RESPONDER_INACTIVE_ │  DELAY   │ RESPONDER_ACTIVE_ │  T + DELAY   │ RESPONDER_ACTIVE_ │\n * │ PRESS_START         ├────────▶ │ PRESS_START       ├────────────▶ │ LONG_PRESS_START  │\n * └─────────────────────┘          └───────────────────┘              └───────────────────┘\n *\n * T + DELAY => LONG_PRESS_DELAY + DELAY\n *\n * Not drawn are the side effects of each transition. The most important side\n * effect is the invocation of `onLongPress`. Only when the browser produces a\n * `click` event is `onPress` invoked.\n */\n\nexport default class PressResponder {\n  constructor(config) {\n    this._eventHandlers = null;\n    this._isPointerTouch = false;\n    this._longPressDelayTimeout = null;\n    this._longPressDispatched = false;\n    this._pressDelayTimeout = null;\n    this._pressOutDelayTimeout = null;\n    this._touchState = NOT_RESPONDER;\n    this.configure(config);\n  }\n\n  configure(config) {\n    this._config = config;\n  }\n  /**\n   * Resets any pending timers. This should be called on unmount.\n   */\n\n\n  reset() {\n    this._cancelLongPressDelayTimeout();\n\n    this._cancelPressDelayTimeout();\n\n    this._cancelPressOutDelayTimeout();\n  }\n  /**\n   * Returns a set of props to spread into the interactive element.\n   */\n\n\n  getEventHandlers() {\n    if (this._eventHandlers == null) {\n      this._eventHandlers = this._createEventHandlers();\n    }\n\n    return this._eventHandlers;\n  }\n\n  _createEventHandlers() {\n    var start = (event, shouldDelay) => {\n      event.persist();\n\n      this._cancelPressOutDelayTimeout();\n\n      this._longPressDispatched = false;\n      this._selectionTerminated = false;\n      this._touchState = NOT_RESPONDER;\n      this._isPointerTouch = event.nativeEvent.type === 'touchstart';\n\n      this._receiveSignal(RESPONDER_GRANT, event);\n\n      var delayPressStart = normalizeDelay(this._config.delayPressStart, 0, DEFAULT_PRESS_DELAY_MS);\n\n      if (shouldDelay !== false && delayPressStart > 0) {\n        this._pressDelayTimeout = setTimeout(() => {\n          this._receiveSignal(DELAY, event);\n        }, delayPressStart);\n      } else {\n        this._receiveSignal(DELAY, event);\n      }\n\n      var delayLongPress = normalizeDelay(this._config.delayLongPress, 10, DEFAULT_LONG_PRESS_DELAY_MS);\n      this._longPressDelayTimeout = setTimeout(() => {\n        this._handleLongPress(event);\n      }, delayLongPress + delayPressStart);\n    };\n\n    var end = event => {\n      this._receiveSignal(RESPONDER_RELEASE, event);\n    };\n\n    var keyupHandler = event => {\n      var onPress = this._config.onPress;\n      var target = event.target;\n\n      if (this._touchState !== NOT_RESPONDER && isValidKeyPress(event)) {\n        end(event);\n        document.removeEventListener('keyup', keyupHandler);\n        var role = target.getAttribute('role');\n        var elementType = target.tagName.toLowerCase();\n        var isNativeInteractiveElement = role === 'link' || elementType === 'a' || elementType === 'button' || elementType === 'input' || elementType === 'select' || elementType === 'textarea';\n\n        if (onPress != null && !isNativeInteractiveElement) {\n          onPress(event);\n        }\n      }\n    };\n\n    return {\n      onStartShouldSetResponder: event => {\n        var disabled = this._config.disabled;\n\n        if (disabled && isButtonRole(event.currentTarget)) {\n          event.stopPropagation();\n        }\n\n        if (disabled == null) {\n          return true;\n        }\n\n        return !disabled;\n      },\n      onKeyDown: event => {\n        var disabled = this._config.disabled;\n        var key = event.key,\n            target = event.target;\n\n        if (!disabled && isValidKeyPress(event)) {\n          if (this._touchState === NOT_RESPONDER) {\n            start(event, false); // Listen to 'keyup' on document to account for situations where\n            // focus is moved to another element during 'keydown'.\n\n            document.addEventListener('keyup', keyupHandler);\n          }\n\n          var role = target.getAttribute('role');\n          var isSpacebarKey = key === ' ' || key === 'Spacebar';\n\n          var _isButtonRole = role === 'button' || role === 'menuitem';\n\n          if (isSpacebarKey && _isButtonRole) {\n            // Prevent spacebar scrolling the window\n            event.preventDefault();\n          }\n\n          event.stopPropagation();\n        }\n      },\n      onResponderGrant: event => start(event),\n      onResponderMove: event => {\n        if (this._config.onPressMove != null) {\n          this._config.onPressMove(event);\n        }\n\n        var touch = getTouchFromResponderEvent(event);\n\n        if (this._touchActivatePosition != null) {\n          var deltaX = this._touchActivatePosition.pageX - touch.pageX;\n          var deltaY = this._touchActivatePosition.pageY - touch.pageY;\n\n          if (Math.hypot(deltaX, deltaY) > 10) {\n            this._cancelLongPressDelayTimeout();\n          }\n        }\n      },\n      onResponderRelease: event => end(event),\n      onResponderTerminate: event => {\n        if (event.nativeEvent.type === 'selectionchange') {\n          this._selectionTerminated = true;\n        }\n\n        this._receiveSignal(RESPONDER_TERMINATED, event);\n      },\n      onResponderTerminationRequest: event => {\n        var _this$_config = this._config,\n            cancelable = _this$_config.cancelable,\n            disabled = _this$_config.disabled,\n            onLongPress = _this$_config.onLongPress; // If `onLongPress` is provided, don't terminate on `contextmenu` as default\n        // behavior will be prevented for non-mouse pointers.\n\n        if (!disabled && onLongPress != null && this._isPointerTouch && event.nativeEvent.type === 'contextmenu') {\n          return false;\n        }\n\n        if (cancelable == null) {\n          return true;\n        }\n\n        return cancelable;\n      },\n      // NOTE: this diverges from react-native in 3 significant ways:\n      // * The `onPress` callback is not connected to the responder system (the native\n      //  `click` event must be used but is dispatched in many scenarios where no pointers\n      //   are on the screen.) Therefore, it's possible for `onPress` to be called without\n      //   `onPress{Start,End}` being called first.\n      // * The `onPress` callback is only be called on the first ancestor of the native\n      //   `click` target that is using the PressResponder.\n      // * The event's `nativeEvent` is a `MouseEvent` not a `TouchEvent`.\n      onClick: event => {\n        var _this$_config2 = this._config,\n            disabled = _this$_config2.disabled,\n            onPress = _this$_config2.onPress;\n\n        if (!disabled) {\n          // If long press dispatched, cancel default click behavior.\n          // If the responder terminated because text was selected during the gesture,\n          // cancel the default click behavior.\n          event.stopPropagation();\n\n          if (this._longPressDispatched || this._selectionTerminated) {\n            event.preventDefault();\n          } else if (onPress != null && event.altKey === false) {\n            onPress(event);\n          }\n        } else {\n          if (isButtonRole(event.currentTarget)) {\n            event.stopPropagation();\n          }\n        }\n      },\n      // If `onLongPress` is provided and a touch pointer is being used, prevent the\n      // default context menu from opening.\n      onContextMenu: event => {\n        var _this$_config3 = this._config,\n            disabled = _this$_config3.disabled,\n            onLongPress = _this$_config3.onLongPress;\n\n        if (!disabled) {\n          if (onLongPress != null && this._isPointerTouch && !event.defaultPrevented) {\n            event.preventDefault();\n            event.stopPropagation();\n          }\n        } else {\n          if (isButtonRole(event.currentTarget)) {\n            event.stopPropagation();\n          }\n        }\n      }\n    };\n  }\n  /**\n   * Receives a state machine signal, performs side effects of the transition\n   * and stores the new state. Validates the transition as well.\n   */\n\n\n  _receiveSignal(signal, event) {\n    var prevState = this._touchState;\n    var nextState = null;\n\n    if (Transitions[prevState] != null) {\n      nextState = Transitions[prevState][signal];\n    }\n\n    if (this._touchState === NOT_RESPONDER && signal === RESPONDER_RELEASE) {\n      return;\n    }\n\n    if (nextState == null || nextState === ERROR) {\n      console.error(\"PressResponder: Invalid signal \" + signal + \" for state \" + prevState + \" on responder\");\n    } else if (prevState !== nextState) {\n      this._performTransitionSideEffects(prevState, nextState, signal, event);\n\n      this._touchState = nextState;\n    }\n  }\n  /**\n   * Performs a transition between touchable states and identify any activations\n   * or deactivations (and callback invocations).\n   */\n\n\n  _performTransitionSideEffects(prevState, nextState, signal, event) {\n    if (isTerminalSignal(signal)) {\n      // Pressable suppression of contextmenu on windows.\n      // On Windows, the contextmenu is displayed after pointerup.\n      // https://github.com/necolas/react-native-web/issues/2296\n      setTimeout(() => {\n        this._isPointerTouch = false;\n      }, 0);\n      this._touchActivatePosition = null;\n\n      this._cancelLongPressDelayTimeout();\n    }\n\n    if (isPressStartSignal(prevState) && signal === LONG_PRESS_DETECTED) {\n      var onLongPress = this._config.onLongPress; // Long press is not supported for keyboards because 'click' can be dispatched\n      // immediately (and multiple times) after 'keydown'.\n\n      if (onLongPress != null && event.nativeEvent.key == null) {\n        onLongPress(event);\n        this._longPressDispatched = true;\n      }\n    }\n\n    var isPrevActive = isActiveSignal(prevState);\n    var isNextActive = isActiveSignal(nextState);\n\n    if (!isPrevActive && isNextActive) {\n      this._activate(event);\n    } else if (isPrevActive && !isNextActive) {\n      this._deactivate(event);\n    }\n\n    if (isPressStartSignal(prevState) && signal === RESPONDER_RELEASE) {\n      var _this$_config4 = this._config,\n          _onLongPress = _this$_config4.onLongPress,\n          onPress = _this$_config4.onPress;\n\n      if (onPress != null) {\n        var isPressCanceledByLongPress = _onLongPress != null && prevState === RESPONDER_ACTIVE_LONG_PRESS_START;\n\n        if (!isPressCanceledByLongPress) {\n          // If we never activated (due to delays), activate and deactivate now.\n          if (!isNextActive && !isPrevActive) {\n            this._activate(event);\n\n            this._deactivate(event);\n          }\n        }\n      }\n    }\n\n    this._cancelPressDelayTimeout();\n  }\n\n  _activate(event) {\n    var _this$_config5 = this._config,\n        onPressChange = _this$_config5.onPressChange,\n        onPressStart = _this$_config5.onPressStart;\n    var touch = getTouchFromResponderEvent(event);\n    this._touchActivatePosition = {\n      pageX: touch.pageX,\n      pageY: touch.pageY\n    };\n\n    if (onPressStart != null) {\n      onPressStart(event);\n    }\n\n    if (onPressChange != null) {\n      onPressChange(true);\n    }\n  }\n\n  _deactivate(event) {\n    var _this$_config6 = this._config,\n        onPressChange = _this$_config6.onPressChange,\n        onPressEnd = _this$_config6.onPressEnd;\n\n    function end() {\n      if (onPressEnd != null) {\n        onPressEnd(event);\n      }\n\n      if (onPressChange != null) {\n        onPressChange(false);\n      }\n    }\n\n    var delayPressEnd = normalizeDelay(this._config.delayPressEnd);\n\n    if (delayPressEnd > 0) {\n      this._pressOutDelayTimeout = setTimeout(() => {\n        end();\n      }, delayPressEnd);\n    } else {\n      end();\n    }\n  }\n\n  _handleLongPress(event) {\n    if (this._touchState === RESPONDER_ACTIVE_PRESS_START || this._touchState === RESPONDER_ACTIVE_LONG_PRESS_START) {\n      this._receiveSignal(LONG_PRESS_DETECTED, event);\n    }\n  }\n\n  _cancelLongPressDelayTimeout() {\n    if (this._longPressDelayTimeout != null) {\n      clearTimeout(this._longPressDelayTimeout);\n      this._longPressDelayTimeout = null;\n    }\n  }\n\n  _cancelPressDelayTimeout() {\n    if (this._pressDelayTimeout != null) {\n      clearTimeout(this._pressDelayTimeout);\n      this._pressDelayTimeout = null;\n    }\n  }\n\n  _cancelPressOutDelayTimeout() {\n    if (this._pressOutDelayTimeout != null) {\n      clearTimeout(this._pressOutDelayTimeout);\n      this._pressOutDelayTimeout = null;\n    }\n  }\n\n}\n\nfunction normalizeDelay(delay, min, fallback) {\n  if (min === void 0) {\n    min = 0;\n  }\n\n  if (fallback === void 0) {\n    fallback = 0;\n  }\n\n  return Math.max(min, delay !== null && delay !== void 0 ? delay : fallback);\n}\n\nfunction getTouchFromResponderEvent(event) {\n  var _event$nativeEvent = event.nativeEvent,\n      changedTouches = _event$nativeEvent.changedTouches,\n      touches = _event$nativeEvent.touches;\n\n  if (touches != null && touches.length > 0) {\n    return touches[0];\n  }\n\n  if (changedTouches != null && changedTouches.length > 0) {\n    return changedTouches[0];\n  }\n\n  return event.nativeEvent;\n}","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport PressResponder from './PressResponder';\nimport { useDebugValue, useEffect, useRef } from 'react';\nexport default function usePressEvents(hostRef, config) {\n  var pressResponderRef = useRef(null);\n\n  if (pressResponderRef.current == null) {\n    pressResponderRef.current = new PressResponder(config);\n  }\n\n  var pressResponder = pressResponderRef.current; // Re-configure to use the current node and configuration.\n\n  useEffect(() => {\n    pressResponder.configure(config);\n  }, [config, pressResponder]); // Reset the `pressResponder` when cleanup needs to occur. This is\n  // a separate effect because we do not want to rest the responder when `config` changes.\n\n  useEffect(() => {\n    return () => {\n      pressResponder.reset();\n    };\n  }, [pressResponder]);\n  useDebugValue(config);\n  return pressResponder.getEventHandlers();\n}"],"names":["_excluded","forwardPropsList","Object","assign","forwardedProps","href","lang","pointerEvents","Text","React","props","forwardedRef","hrefAttrs","numberOfLines","onClick","onLayout","onPress","onMoveShouldSetResponder","onMoveShouldSetResponderCapture","onResponderEnd","onResponderGrant","onResponderMove","onResponderReject","onResponderRelease","onResponderStart","onResponderTerminate","onResponderTerminationRequest","onScrollShouldSetResponder","onScrollShouldSetResponderCapture","onSelectionChangeShouldSetResponder","onSelectionChangeShouldSetResponderCapture","onStartShouldSetResponder","onStartShouldSetResponderCapture","selectable","rest","_objectWithoutPropertiesLoose","hasTextAncestor","TextAncestorContext","hostRef","contextDirection","useLocaleContext","direction","useElementLayout","useResponderEvents","handleClick","e","stopPropagation","component","langDirection","getLocaleDirection","componentDirection","dir","writingDirection","supportedProps","pick","pickProps","style","WebkitLineClamp","styles","textHasAncestor$raw","text$raw","textOneLine","textMultiLine","notSelectable","pressable","download","rel","target","charAt","platformMethodsRef","usePlatformMethods","setRef","useMergeRefs","ref","element","createElement","Provider","value","displayName","textStyle","backgroundColor","border","boxSizing","color","display","font","listStyle","margin","padding","textAlign","textDecoration","whiteSpace","wordWrap","StyleSheet","create","_objectSpread","maxWidth","overflow","textOverflow","WebkitBoxOrient","userSelect","cursor","createExtraStyles","activeOpacity","underlayColor","child","opacity","underlay","undefined","hasPressHandler","onPressIn","onPressOut","onLongPress","root","actionable","touchAction","MemoedTouchableHighlight","children","delayPressIn","delayPressOut","delayLongPress","disabled","focusable","onHideUnderlay","onShowUnderlay","rejectResponderTermination","testOnly_pressed","useRef","_useState","useState","extraStyles","setExtraStyles","showUnderlay","useCallback","hideUnderlay","pressConfig","useMemo","cancelable","delayPressStart","delayPressEnd","onPressStart","event","onPressEnd","pressEventHandlers","usePressEvents","only","View","_extends","accessibilityDisabled","compose","DELAY","ERROR","LONG_PRESS_DETECTED","NOT_RESPONDER","RESPONDER_ACTIVE_LONG_PRESS_START","RESPONDER_ACTIVE_PRESS_START","RESPONDER_INACTIVE_PRESS_START","RESPONDER_RELEASE","RESPONDER_TERMINATED","Transitions","freeze","RESPONDER_GRANT","isActiveSignal","signal","isButtonRole","getAttribute","isPressStartSignal","isValidKeyPress","key","role","PressResponder","config","_classCallCheck","this","_eventHandlers","_isPointerTouch","_longPressDelayTimeout","_longPressDispatched","_pressDelayTimeout","_pressOutDelayTimeout","_touchState","configure","_createClass","_config","_cancelLongPressDelayTimeout","_cancelPressDelayTimeout","_cancelPressOutDelayTimeout","_createEventHandlers","_this","start","shouldDelay","persist","_selectionTerminated","nativeEvent","type","_receiveSignal","normalizeDelay","setTimeout","_handleLongPress","end","keyupHandler","document","removeEventListener","elementType","tagName","toLowerCase","currentTarget","onKeyDown","addEventListener","preventDefault","onPressMove","touch","getTouchFromResponderEvent","_touchActivatePosition","deltaX","pageX","deltaY","pageY","Math","hypot","_this$_config","_this$_config2","altKey","onContextMenu","_this$_config3","defaultPrevented","prevState","nextState","console","error","_performTransitionSideEffects","_this2","isTerminalSignal","isPrevActive","isNextActive","_activate","_deactivate","_this$_config4","_onLongPress","_this$_config5","onPressChange","_this$_config6","clearTimeout","delay","min","fallback","max","_event$nativeEvent","changedTouches","touches","length","pressResponderRef","current","pressResponder","useEffect","reset","useDebugValue","getEventHandlers"],"sourceRoot":""}