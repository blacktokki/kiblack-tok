{"version":3,"sources":["src/components/Themed.tsx","src/constants/Colors.ts","src/hooks/useModalsContext.tsx","src/components/CommonButton.tsx","src/hooks/useResizeContext.tsx","src/lib/react-native-paper/Avatar.tsx","src/components/Avatar.tsx","src/components/ModalSection.tsx","src/components/CommonSection.tsx","src/hooks/useModalEffect.ts","src/hooks/useWebsocketContext.tsx","src/hooks/lists/useMessengerContentList.ts","src/hooks/useUploadContext.tsx","src/modals/MessageModal.tsx","src/components/EditorPreview.tsx","src/components/LinkPreview.tsx","src/components/FilePreview.tsx","src/screens/main/ChatScreen/Messages.tsx","src/hooks/lists/useMessengerViewerList.ts","src/screens/main/ChatScreen/TimerTags.tsx","src/hooks/lists/useTimerMessageContent.ts"],"names":["useThemeColor","props","colorName","theme","useColorScheme","colorFromProps","Colors","Text","style","lightColor","darkColor","otherProps","_objectWithoutProperties","_excluded","color","light","dark","_jsx","DefaultText","_objectSpread","View","_excluded2","backgroundColor","DefaultView","text","background","tint","tabIconDefault","tabIconSelected","hoverColor","buttonBackgroundColor","header","headerBottomColor","buttonBorderColor","iconColor","borderColor","focus","ModalsContext","createContext","setModal","ModalsProvider","_ref","children","allModals","modals","_useState","useState","_useState2","_slicedToArray","setModals","windowType","useResizeContext","_useState3","_useState4","animationType","setAnimationType","useEffect","filter","v","visible","length","map","Component","_jsxs","Provider","value","newModals","m","modal","index","Modal","transparent","useContext","DefaultButton","hover","setHover","Pressable","onPress","onHoverIn","onHoverOut","disabled","paddingVertical","paddingHorizontal","selectable","fontSize","textStyle","title","_props","styles","StyleSheet","create","borderRadius","borderWidth","textAlign","fontWeight","getWindowType","window","height","width","ResizeContextContext","Dimensions","get","ResizeContextProvider","detectMobile","useMobileDetect","_useWindowDimensions","useWindowDimensions","setWindowType","isMobile","normalizeHash","hash","min","max","Math","floor","str","initHash","i","charCodeAt","abs","stringToHSL","name","userId","Avatar","size","label","split","join","toUpperCase","avatarFromChannel","item","user","avatar","member_count","id","subowner","owner","CommonSection","autoScale","outerContainerStyle","flex","alignSelf","flexShrink","containerStyle","margin","justifyContent","alignItems","bodyStyle","padding","maxWidth","BottomSheet","outerContainer","outerContainerFill","container","withSeparator","separator","undefined","titleView","titleStyle","subtitle","bodyView","marginHorizontal","marginVertical","flexDirection","marginBottom","marginTop","callback","deps","navigation","useNavigation","event","e","preventDefault","addListener","removeListener","defaultContext","lastJsonMessage","sendJsonMessage","WebSocketContext","WebSocketInternalProvider","path","Context","useBackground","token","setToken","AppState","currentState","isActive","setIsActive","_useWebSocket","useWebSocket","websockerURL","shouldReconnect","closeEvent","protocols","onOpen","console","log","onClose","AsyncStorage","getItem","then","listener","addEventListener","nextState","remove","WebSocketProvider","_ref2","disable","_Fragment","updateContnetPage","pages","updateMessages","update_i","forEach","page","current","timer","is_archive","useMessengerContentList","channel_id","queryClient","useQueryClient","_useInfiniteQuery","useInfiniteQuery","_asyncToGenerator","pageParam","getMessengerContentList","_x","apply","arguments","select","data","next","getNextPageParam","lastPage","refetchOnReconnect","refetchOnWindowFocus","query","updated_gte","Date","state","dataUpdatedAt","toISOString","newData","getNewMessengerContentList","contents","lastMessageId","nextMessages","timerMessageRefetch","findIndex","concat","_toConsumableArray","invalidateQueries","fetchNextPage","useWebsocketContext","setQueryData","_data","pageParams","useMessengerContentMutation","channelId","uploadDispatch","useUploadContext","dispatch","useMutation","message","postMessage","onSuccess","_patch","patchMessengerContent","mutate","patch","UploadContext","upload","uploadReducer","initialState","action","files","channel","f","filename","progress","push","_defineProperty","UploadContextProvider","_useReducer","useReducer","_useReducer2","MessageModal","content","isOwner","sendToScreen","message_set","editorContents","attatchment_set","type","editor","fullContent","description","replaceAll","regexForStripHTML","lang","useLangContext","useModalsContext","contentMutation","back","useModalEffect","TouchableOpacity","Ionicons","CommonButton","Clipboard","setString","editorValue","RenderHTML","React","lazy","memo","minWidth","borderTopWidth","Suspense","fallback","contentWidth","source","baseStyle","link","touchableRef","Linking","openURL","url","onLongPress","image_url","Image","uri","resizeMode","maxHeight","humanFileSize","pow","toFixed","file","showBorder","thumbnail","FontAwesome","filesize","MessengerContentPageItem","_nextPage2","lastTouchRef","useRef","now","useIsMobile","nextPage","_nextPage","nextContent","reverse","onTouchMove","index2","created","slice","date","isSystem","isFirst","isSelf","ownerId","dayChanged","marginLeft","getOnPress","timerToString","Hyperlink","linkDefault","wordBreak","linkStyle","attatchment","aIndex","EditorPreview","FilePreview","LinkPreview","auth","useViewerContentList","useMemo","_props$auth","_props$auth$user","renderItem","useCallback","FlatList","contentContainerStyle","flexGrow","onScroll","nativeEvent","contentSize","contentOffset","y","onLayout","p","layout","timerFormat","datetime","_timerFormat","dayjs","year","format","month","TimerTag","start","end","ratio","diff","setExpand","isExpand","overflow","position","preview_content","timerMessages","useQuery","getTimerMessageContentList","sorted","sort","a","b","_sorted$","ms","Number","MAX_VALUE","timeout","setTimeout","clearTimeout","useTimerMessageContentList","setNow","expand","paddingTop"],"mappings":"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","file":"static/js/2.17152441.chunk.js","sourcesContent":["/**\n * Learn more about Light and Dark modes:\n * https://docs.expo.io/guides/color-schemes/\n */\n\nimport * as React from 'react';\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\n\nimport Colors from '../constants/Colors'\nimport useColorScheme from '../hooks/useColorScheme';\n\nexport function useThemeColor(\n  props: { light?: string; dark?: string },\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\n) {\n  const theme = useColorScheme();\n  const colorFromProps = props[theme];\n\n  if (colorFromProps) {\n    return colorFromProps;\n  } else {\n    return Colors[theme][colorName];\n  }\n}\n\ntype ThemeProps = {\n  lightColor?: string;\n  darkColor?: string;\n};\n\nexport type TextProps = ThemeProps & DefaultText['props'];\nexport type ViewProps = ThemeProps & DefaultView['props'];\n\nexport function Text(props: TextProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\n\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\n}\n\nexport function View(props: ViewProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\n\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\n}\n","const tintColorLight = '#2f95dc';\nconst tintColorDark = '#fff';\n\nexport default {\n  light: {\n    text: '#000',\n    background: '#fff',\n    tint: tintColorLight,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorLight,\n    hoverColor:'rgb(242,242,242)',\n    buttonBackgroundColor: '#f6f8fa', //'rgba(9,30,66,0.08)',//rgb(242,242,242)\\\n    header:'#f6f8fa',\n    headerBottomColor:'rgb(216, 216, 216)',\n    buttonBorderColor:'rgba(27,31,36,0.15)',\n    iconColor: 'black'\n  },\n  dark: {\n    text: '#fff',\n    background: '#000',\n    tint: tintColorDark,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorDark,\n    hoverColor: '#010409',//'rgb(1,4,9)',\n    buttonBackgroundColor: '#010409',//'#282624',\n    header:'#010409',\n    headerBottomColor:'rgb(40, 40, 40)',\n    buttonBorderColor:'rgba(229,225,220,0.15)',\n    iconColor: 'white'\n  },\n  borderColor:'#d0d7de',\n  \n  focus:'#0065A4',\n};\n","import React, { useState, createContext, useContext, useEffect } from \"react\";\nimport { Modal } from \"react-native\";\nimport useResizeContext from \"./useResizeContext\";\n\ntype ModalProps = any\n\ntype ModalState = {\n  Component:React.ComponentType<ModalProps>,\n  props:any\n  visible:boolean\n}\ntype SetModal = (Component:ModalState[\"Component\"]|null, props:ModalProps|null)=>void\n\nconst ModalsContext = createContext<{setModal: SetModal}>({\n    setModal: () => {}\n});\n\nexport const ModalsProvider = ({children, modals:allModals}:{children:React.ReactNode, modals:React.ComponentType<ModalProps>[]}) => {\n    const [modals, setModals] = useState<ModalState[]>([]);\n    const windowType = useResizeContext();\n    const [animationType, setAnimationType] = useState('none')\n    const setModal:SetModal = (Component, props) => {\n        const newModals = modals.map(m=>{\n            if(Component==null){\n                return {\n                    ...m,\n                    visible:false\n                }\n            }\n            else if(m.Component == Component){\n                return {\n                    Component, \n                    props:props!==null?props:m.props,\n                    visible:props!==null\n                }\n            }\n            return m        \n        })\n        setModals(newModals);\n    }\n    useEffect(()=>{\n        if (modals.filter(v=>v.visible).length == 0)\n            setAnimationType(windowType == 'landscape'?'fade':'slide')\n    }, [windowType])\n    useEffect(()=>{\n        setModals(allModals.map((Component)=>({Component, props:null, visible:false})))\n    }, [allModals])\n    return <ModalsContext.Provider value={{setModal}}>\n        {children}\n        {modals.map((modal, index)=>{\n            const { Component, props, visible } = modal;\n            return <Modal key={index} animationType={animationType as any} visible={visible} transparent>\n                <Component {...props}/>\n            </Modal>\n        })}\n    </ModalsContext.Provider>\n}\n\nexport default ()=>{\n    const modalsContext = useContext(ModalsContext)\n    return modalsContext\n}\n\n","import React, { useState } from 'react';\nimport { Text, StyleSheet, Pressable, StyleProp, ViewStyle} from 'react-native';\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport { CustomButtonProps } from '../types';\n\nconst DefaultButton = (props:CustomButtonProps & {borderColor:string})=>{\n    const [hover, setHover] = useState(false)\n    return <Pressable\n        onPress={()=>props.onPress()}\n        //@ts-ignore\n        onHoverIn={()=>setHover(true)}\n        onHoverOut={()=>setHover(false)}\n        disabled={props.disabled}\n        style={[\n            {\n                paddingVertical:5, \n                paddingHorizontal:16\n            },\n            props.style,\n            (hover || props.disabled)?{backgroundColor:props.color, borderColor:props.borderColor}:{}\n        ]}>\n            {props.children?props.children:\n            <Text selectable={false} style={[{fontSize:14}, props.textStyle]}>{props.title}</Text>}\n        </Pressable>\n}\n\nexport default (props:CustomButtonProps)=>{\n    const theme = useColorScheme()\n    const _props = {\n        color:Colors[theme].hoverColor,\n        borderColor:theme=='light'?Colors[theme].buttonBorderColor:'#7d8590',\n        ...props,\n        style:[\n            styles.style,\n            {\n                backgroundColor:Colors[theme].buttonBackgroundColor,\n                borderColor:Colors[theme].buttonBorderColor\n            },\n            props.style,\n        ] as StyleProp<ViewStyle>,\n        textStyle:[\n            styles.text, \n            {color:Colors[theme].text},\n            props.textStyle\n        ]\n    }\n    return <DefaultButton {..._props}/>\n}\n\nconst styles = StyleSheet.create({\n    style:{\n        borderRadius:6, \n        borderWidth:1, \n    },\n    text:{\n        textAlign:'center', \n        fontWeight:'600'\n    }\n});\n","import React, { useState, useEffect, createContext, useContext, useMemo } from 'react';\nimport { Dimensions, ScaledSize, useWindowDimensions } from 'react-native';\n//@ts-ignore\nimport useMobileDetect from 'use-mobile-detect-hook';\n\ntype WindowType = 'portrait' | 'landscape'\n\nconst getWindowType = (window:{width:number, height:number})=> window.height >= window.width?'portrait':'landscape' as WindowType;\n\nconst ResizeContextContext = createContext<WindowType>(getWindowType(Dimensions.get('window')));\n\nexport const ResizeContextProvider = ({children}:{children:React.ReactNode})=>{\n  const detectMobile = useMobileDetect();\n  const {width, height} = useWindowDimensions()\n  const [windowType, setWindowType] = useState(getWindowType({width, height}))\n  useEffect(()=>{\n    setWindowType(getWindowType({width, height}))\n  }, [width, height])\n  return <ResizeContextContext.Provider value={detectMobile.isMobile()?'portrait':windowType}>\n    {children}\n  </ResizeContextContext.Provider>\n}\n\nexport default function useResizeContext() {\n  const windowType = useContext(ResizeContextContext)\n  return windowType\n}","import * as React from 'react';\nimport { Avatar } from 'react-native-paper';\nimport { AvatarProps } from '../../types';\n\nconst normalizeHash = (hash: number, min: number, max: number) => {\n    return Math.floor((hash % (max - min)) + min);\n};\n\nconst stringToHSL = (str: string, initHash?:number) => {\n    let hash = initHash || 0;\n    for (let i = 0; i < str.length; i++) {\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    hash = Math.abs(hash);\n    return `hsl(${normalizeHash(hash, 0, 360)}, ${normalizeHash(hash, 0, 100)}%, ${normalizeHash(hash, 25, 75)}%)`;\n};\n\nexport default (props:AvatarProps) => {\n    const backgroundColor = stringToHSL(props.name, props.userId)\n    return <Avatar.Text style={{backgroundColor}} size={props.size} label={props.name.split(' ').map(v=>v[0]).join().toUpperCase()} />\n};","import React from 'react';\nimport Avatar from '../lib/react-native-paper/Avatar';\nimport { AvatarProps, MessengerChannel, User } from '../types';\n\nexport function avatarFromChannel(item:MessengerChannel, user?:User|null){\n    let avatar;\n    let name = item.name\n    if (item.member_count<3){\n        avatar = (item.member_count==1 || user?.id == item.subowner.id)?item.owner:item.subowner\n        name = name.length>0?name:avatar.name \n    }\n    return {avatar, name}\n}\n\nexport default (props:AvatarProps)=>{\n    return <Avatar {...props}/>\n}\n\n","import React from 'react'\nimport CommonSection from \"./CommonSection\";\nimport useResizeContext from '../hooks/useResizeContext';\n\nexport default (props:{children?: React.ReactNode})=>{\n    const windowType = useResizeContext();\n    return <CommonSection\n        autoScale\n        outerContainerStyle={{flex:1, alignSelf:'center', backgroundColor:'#8888', flexShrink:1, width:'100%'}}\n        containerStyle={{flex:1, margin:0, justifyContent:'center', alignItems:'center'}}\n        bodyStyle={windowType=='landscape'?{width:'90%', height:'90%', padding:'5%'}:{width:'100%', height:'100%', maxWidth:1080}}\n    >\n        {props.children}\n    </CommonSection>\n}\n\nexport const BottomSheet = (props:{children?: React.ReactNode})=><CommonSection\n    autoScale\n    outerContainerStyle={{flex:1, alignSelf:'center', backgroundColor:'#8888', width:'100%'}}\n    containerStyle={{flex:1, margin:0, justifyContent:'flex-end'}}\n>\n    {props.children}\n</CommonSection>","import * as React from 'react';\nimport { View, Text } from './Themed';\nimport { StyleSheet, StyleProp, ViewStyle, TextStyle } from 'react-native';\nimport Colors from '../constants/Colors';\n\nexport type SectionParamList = {\n    title?: string,\n    titleStyle?:StyleProp<TextStyle>\n    outerContainerStyle?:StyleProp<TextStyle>\n    containerStyle?:StyleProp<ViewStyle>\n    bodyStyle?:StyleProp<ViewStyle>\n    subtitle?: string\n    withSeparator?: boolean\n    autoScale?:boolean\n    children?: React.ReactNode\n}\n\nexport default function CommonSection(props:SectionParamList){\n  return (\n    <View style={[styles.outerContainer, props.autoScale?{}:styles.outerContainerFill, props.outerContainerStyle]}>\n        <View style={[styles.container, props.containerStyle]}>\n            {props.withSeparator?<View style={styles.separator} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />:undefined}\n            {props.title?<View style={styles.titleView}>\n              <Text style={[styles.title, props.titleStyle]}>{props.title}</Text>\n              <Text style={styles.subtitle}>{props.subtitle}</Text>\n            </View>:undefined}\n            <View style={[styles.bodyView, props.bodyStyle]}>\n            {props.children}\n            </View>\n          </View>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n  outerContainer:{\n    alignItems:'stretch',\n    backgroundColor:'transparent'\n  },\n  outerContainerFill:{\n    width:'100%',\n    maxWidth:1080,\n  },\n  container: {\n      marginHorizontal:20,\n      marginVertical: 10,\n      backgroundColor:'transparent',\n    },\n    titleView:{\n      width: '100%',\n      flexDirection:'row',\n      backgroundColor:'transparent',\n      marginBottom:5,\n    },\n    title: {\n      flex:1,\n      fontSize: 16,\n    },\n    subtitle: {\n      flex:1,\n      fontSize: 12,\n      textAlign: 'right',\n      marginTop:4\n    },\n    separator: {\n      marginBottom: 0,\n      height: 1,\n      width: '100%',\n    },\n    bodyView:{\n      width: '100%',\n      padding: 20,\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderWidth:1,\n      borderColor:Colors.borderColor,\n      borderRadius:6\n    }\n  });\n  ","import { DependencyList, useEffect } from \"react\";\nimport { EventArg, useNavigation } from \"@react-navigation/core\";\n\n\nexport default (callback:()=>void, deps?:DependencyList)=>{\n    const navigation = useNavigation()\n    useEffect(()=>{\n        const event = (e:EventArg<any, true, any>)=> {\n            e.preventDefault();\n            callback()\n        }\n        navigation.addListener('beforeRemove', event)\n        return () => {\n            navigation.removeListener('beforeRemove', event)\n        }\n  }, deps)\n}","import React, { Context, createContext,  useContext, useEffect, useState } from \"react\"\nimport useWebSocket from \"react-use-websocket\"\nimport { SendJsonMessage } from \"react-use-websocket/dist/lib/types\"\nimport {websockerURL } from \"../constants/Envs\"\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { AppState, AppStateStatus } from \"react-native\";\n\ntype WebsocketContextType = {lastJsonMessage:any, sendJsonMessage:SendJsonMessage }\nconst defaultContext = {lastJsonMessage:undefined, sendJsonMessage:()=>{}}\nconst WebSocketContext = createContext<WebsocketContextType>(defaultContext);\n\nexport const WebSocketInternalProvider = ({children, path, Context, useBackground}:{children:React.ReactNode, path:string, Context:Context<WebsocketContextType>, useBackground?:boolean})=>{\n  const [token, setToken] = useState<string|null>(null)\n  const [isActive, setIsActive] = useState<boolean>(useBackground || AppState.currentState == 'active')\n  const { lastJsonMessage, sendJsonMessage } = useWebSocket(`${websockerURL}/${path}`,{\n    shouldReconnect: (closeEvent) => true,\n    protocols: token?['Authorization',  token]:undefined,\n    onOpen: (e)=>{console.log(`success websocket connection(${path})`)},\n    onClose: (e)=> {console.log(`closed websocket connection(${path})`)},\n  }, isActive && token!=null)\n  useEffect(()=>{\n    AsyncStorage.getItem('Authorization').then(setToken)\n    const onChange = (nextState:AppStateStatus)=>setIsActive(useBackground || nextState == 'active')\n    const listener = AppState.addEventListener(\"change\", onChange)\n    return ()=> listener.remove()\n  }, [])\n  return <Context.Provider value={token!=null?{lastJsonMessage, sendJsonMessage}:defaultContext}>\n      {children}\n    </Context.Provider>\n}\n\nexport const WebSocketProvider = ({disable, children}:{disable?:boolean, children:React.ReactNode})=>{\n  return disable?<>{children}</>:<WebSocketInternalProvider path={'messenger/ws/'} Context={WebSocketContext}>\n    {children}\n  </WebSocketInternalProvider>\n}\n\nexport default ()=>{\n  const webSocketContext = useContext(WebSocketContext)\n  return webSocketContext\n}\n\n","import { useEffect } from \"react\"\nimport { InfiniteData, Query, QueryKey, useInfiniteQuery, useMutation, useQueryClient } from \"react-query\"\nimport { getMessengerContentList, postMessage, patchMessengerContent, getNewMessengerContentList } from \"../../services\"\nimport { EditMessage, MessengerContent } from \"../../types\"\nimport useWebsocketContext from \"../useWebsocketContext\"\nimport useUploadContext from \"../useUploadContext\"\n\nexport type MessengerContentPage = {\n  next?:MessengerContentPage\n  current:MessengerContent[]\n}\n\nconst updateContnetPage = (pages:MessengerContentPage[], updateMessages:MessengerContent[])=>{\n  let update_i = 0\n  pages.forEach(page=>{\n    if (update_i == updateMessages.length)\n      return\n    page.current.forEach(v=>{\n      if (update_i == updateMessages.length)\n        return\n      if (v.id==updateMessages[update_i].id){\n        v.timer = updateMessages[update_i].timer\n        v.is_archive = updateMessages[update_i].is_archive\n        update_i += 1\n      }\n    })\n    page.current = page.current.filter(v=>!v.is_archive)\n  })\n}\n\nexport default function useMessengerContentList(channel_id:number){  \n  const queryClient = useQueryClient()\n  const refetch = (query:Query<MessengerContentPage, unknown, InfiniteData<MessengerContentPage>, QueryKey>)=>{\n    const updated_gte = new Date(query.state.dataUpdatedAt).toISOString()\n    const newData = {...query.state.data}\n    getNewMessengerContentList(channel_id, updated_gte).then(contents=>{\n      if(newData.pages){\n        const lastMessageId = newData.pages[0].current[0].id || 0\n        const nextMessages = contents.filter(v=>v.id>lastMessageId && v.is_archive==false)\n        const updateMessages = contents.filter(v=>v.id<=lastMessageId)\n        const timerMessageRefetch = nextMessages.findIndex(v=>v.timer) >= 0 || updateMessages.length > 0\n        newData.pages[0].current = [...nextMessages, ...newData.pages[0].current]\n        updateContnetPage(newData.pages, updateMessages)\n        timerMessageRefetch && queryClient.invalidateQueries([\"TimerMessageContentList\", channel_id])\n      }\n    })\n    return false\n  }\n  const { data, fetchNextPage } = useInfiniteQuery<MessengerContentPage>(\n    [\"MessengerContentList\", channel_id], \n    async({pageParam})=>getMessengerContentList(channel_id, pageParam).then(current=>({current})), \n    {\n      select:data=>{\n        if(data.pages.length > 1)\n          data.pages[data.pages.length - 2].next = data.pages[data.pages.length - 1]\n        return data;\n      },\n      getNextPageParam:(lastPage)=>lastPage?.current.length?lastPage.current[lastPage.current.length - 1].id:undefined,\n      refetchOnReconnect:false,\n      refetchOnWindowFocus:refetch\n    }\n  )\n  const { lastJsonMessage } = useWebsocketContext()\n  useEffect(()=>{\n    if(lastJsonMessage !=null && lastJsonMessage['data']['channel'] == channel_id){\n      if(lastJsonMessage['type']=='next_message'){\n        queryClient.setQueryData<InfiniteData<MessengerContentPage>>([\"MessengerContentList\", channel_id], (_data)=>{\n          if(_data?.pages[0].current && _data?.pages[0].current[0].id != lastJsonMessage['data'].id)\n            _data.pages[0].current = [lastJsonMessage['data'], ..._data?.pages[0].current]\n          return {...(_data || {pages:[], pageParams:[]})}\n        })\n      }\n      if(lastJsonMessage['type']=='update_message'){\n        queryClient.setQueryData<InfiniteData<MessengerContentPage>>([\"MessengerContentList\", channel_id], (_data)=>{\n          _data?.pages && updateContnetPage(_data.pages, [lastJsonMessage['data']])\n          return {...(_data || {pages:[], pageParams:[]})}\n        })\n      }\n    }\n  }, [lastJsonMessage])\n  return { data, fetchNextPage }\n}\n\nexport function useMessengerContentMutation(channelId?:number){\n  // const queryClient = useQueryClient()\n  const {dispatch:uploadDispatch} = useUploadContext()\n  const create = useMutation((message:EditMessage)=>postMessage(message, uploadDispatch), {\n    onSuccess: () => {\n      // queryClient.setQueryData(['MessengerContentList'], (data:any) => ({\n      //   pages: data.pages.slice(0, 1),\n      //   pageParams: data.pageParams.slice(0, 1),\n      // }))\n      // queryClient.invalidateQueries(\"MessengerContentList\")\n    }\n  });\n  const _patch = useMutation(patchMessengerContent);\n  return { create:create.mutate, patch:_patch.mutate }\n}","import React, { createContext, useContext, Dispatch, useReducer } from 'react';\n\ntype UploadState = Record<number, {\n  filename: string,\n  progress?: number,\n}[]>\n\ntype UploadAction = {\n  channel:number,\n  filename:string,\n  progress?:number\n}\n\ntype UploadContextType = {\n  upload:UploadState,\n  dispatch:Dispatch<UploadAction>\n}\n\nconst UploadContext = createContext<UploadContextType>({upload:{} as UploadState, dispatch:()=>{}});\n\nconst uploadReducer =(initialState:UploadState, action:UploadAction)=>{\n  const files = [...(initialState[action.channel] || [])]\n  const index = files.findIndex(f=>f.filename==action.filename)\n  if (index >= 0){\n    files[index] = {filename:action.filename, progress:action.progress} \n  }\n  else{\n    files.push({filename:action.filename, progress:action.progress})\n  }\n  return {\n    ...initialState,\n    [action.channel] : files.filter(f=>(f.progress || 0)<1)\n  }\n}\n\nexport const UploadContextProvider = ({children}:{children:React.ReactNode})=>{\n  const [upload, dispatch] = useReducer(uploadReducer, {})\n  return <UploadContext.Provider value={{upload, dispatch}}>\n    {children}\n  </UploadContext.Provider>\n}\n\nexport default function useUploadContext() {\n  const upload = useContext(UploadContext)\n  return upload\n}","import React from 'react';\nimport Clipboard from '@react-native-clipboard/clipboard/dist';\nimport CommonButton from '../components/CommonButton';\nimport useModalsContext from '../hooks/useModalsContext';\nimport { Text, View } from '../components/Themed';\nimport useLangContext from '../hooks/useLangContext';\nimport { BottomSheet } from '../components/ModalSection';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport Colors from '../constants/Colors';\nimport { Ionicons } from '../lib/@expo/vector-icons';\nimport useColorScheme from '../hooks/useColorScheme';\nimport { useMessengerContentMutation } from '../hooks/lists/useMessengerContentList';\nimport useModalEffect from '../hooks/useModalEffect';\nimport { EditorContent, MessengerContent } from '../types';\nimport { regexForStripHTML } from '../components/EditorPreview';\n\n\n\nexport default function MessageModal({content, isOwner, sendToScreen}:{content:MessengerContent, isOwner:boolean, sendToScreen?:(e:{value:string, editorValue:string})=>void}) {\n  const message = content.message_set[0]\n  const editorContents = (content.attatchment_set.filter(v=>v.type=='editor') as EditorContent[])\n  const editor  = editorContents.length>0?editorContents[0]:undefined\n  const fullContent = editor?editor.title.concat('\\r\\n', editor.description.replaceAll(regexForStripHTML, '')):message.content\n  const { lang } = useLangContext()\n  const { setModal } = useModalsContext()\n  const theme = useColorScheme()\n  const contentMutation = useMessengerContentMutation()\n  const back = ()=>{\n    setModal(MessageModal, null)\n  }\n  useModalEffect(back, [])\n  return <BottomSheet>\n    <View style={{flexDirection:'row', width:'100%'}}>\n      <View style={{flex:1, flexDirection:'row'}}>\n        <TouchableOpacity onPress={back}>\n          <Ionicons size={20} name=\"arrow-back\" color={Colors[theme].text}/>\n        </TouchableOpacity>\n      </View>\n      <View style={{flex:1}}>\n        <Text style={{fontSize:20, textAlign:'center'}}>{lang('Message')}</Text>\n      </View>\n      <View style={{flex:1}}/>\n    </View>\n    <View style={{marginBottom: 20, height: 1, width: '100%'}} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />\n      <CommonButton style={{height:40, width:'100%', maxWidth:320, justifyContent:'center'}} title={lang('copy')} onPress={()=>{Clipboard.setString(fullContent);back()}}/>\n      {editor && sendToScreen && <CommonButton style={{height:40, width:'100%', maxWidth:320, justifyContent:'center'}} title={lang('move to editor')} onPress={()=>{sendToScreen({value:editor.title, editorValue:editor.description});back()}}/>}\n      {isOwner && content.timer && <CommonButton style={{height:40, width:'100%', maxWidth:320, justifyContent:'center'}} textStyle={{color:'red'}} title={lang('delete timer')} onPress={()=>{contentMutation.patch({id:content.id, timer:null});back()}}/>}\n      {isOwner && <CommonButton style={{height:40, width:'100%', maxWidth:320, justifyContent:'center'}} textStyle={{color:'red'}} title={lang('delete')} onPress={()=>{contentMutation.patch({id:content.id, is_archive:true});back()}}/>}\n  </BottomSheet>\n}\n","import React, { Suspense } from 'react'\nimport CommonSection from \"./CommonSection\"\nimport { View, Text } from \"./Themed\"\nimport { EditorContent } from \"../types\"\nimport useColorScheme from \"../hooks/useColorScheme\";\nimport Colors from \"../constants/Colors\";\n\nconst RenderHTML = React.lazy(()=> import('react-native-render-html'))\n\nexport const regexForStripHTML = /<\\/?[^>]*>/gi;\n\nexport default React.memo(({content}:{content:EditorContent})=>{\n    const theme = useColorScheme()\n    return <View>\n        <Text style={{fontSize:18, fontWeight:'600', minWidth:140}}>{content.title}</Text>\n        <CommonSection containerStyle={{width:'100%', margin:0}} bodyStyle={{borderWidth:0, borderRadius:0, borderTopWidth:1, padding:0, alignItems:\"flex-start\"}}>\n            <Suspense fallback={<Text>{content.description.replaceAll(regexForStripHTML, '')}</Text>}>\n                <RenderHTML contentWidth={320} source={{'html':content.description}} baseStyle={{color:Colors[theme].text}}/>\n            </Suspense>\n        </CommonSection>\n    </View>\n})","import React, { MutableRefObject } from 'react'\nimport { Image, Linking } from \"react-native\"\nimport { TouchableOpacity } from \"react-native-gesture-handler\"\nimport CommonSection from \"./CommonSection\"\nimport { View, Text } from \"./Themed\"\nimport { Link } from \"../types\"\n\n\n\nexport default ({link, isMobile, touchableRef}:{link:Link, isMobile:boolean, touchableRef:MutableRefObject<()=>boolean>})=>{\n    return <CommonSection containerStyle={{marginHorizontal:0}} bodyStyle={{padding:0}}>\n    <TouchableOpacity \n        onPress={()=>touchableRef.current() && Linking.openURL(link.url)}\n        onLongPress={()=>{}}\n        style={{width:'100%', flexDirection:'row'}}\n    >\n        {link.image_url?<Image source={{uri:link.image_url}} resizeMode=\"cover\" style={{ width:'100%', maxWidth:isMobile?120:150, maxHeight:isMobile?120:150, borderWidth:1}}/>:undefined}\n        <View style={{flex:1, marginHorizontal:20}}>\n            <Text style={{fontSize:18}}>{link.title}</Text>\n            <Text style={{fontSize:14}}>{link.description}</Text>\n            <Text style={{fontSize:12}}>{link.url}</Text>\n        </View>\n    </TouchableOpacity>\n    </CommonSection>\n}","import React, { MutableRefObject } from 'react'\nimport { Image, Linking } from \"react-native\"\nimport {TouchableOpacity} from \"react-native-gesture-handler\"\nimport CommonSection from \"./CommonSection\"\nimport { FontAwesome } from '../lib/@expo/vector-icons'; \nimport { View, Text } from \"./Themed\"\nimport { File } from \"../types\"\nimport useColorScheme from '../hooks/useColorScheme';\nimport Colors from '../constants/Colors';\n\nfunction humanFileSize(size:number) {\n    var i = size == 0 ? 0 : Math.floor(Math.log(size) / Math.log(1024));\n    return (size / Math.pow(1024, i)).toFixed(2) + ' ' + ['B', 'kB', 'MB', 'GB', 'TB'][i];\n  }\n  \n\nexport default ({file, isMobile, showBorder, touchableRef}:{file:File, isMobile:boolean, showBorder:ConstrainBoolean, touchableRef:MutableRefObject<()=>boolean>})=>{\n    const theme = useColorScheme()\n    return <CommonSection containerStyle={{marginHorizontal:0}} bodyStyle={showBorder?{padding:10}:{borderWidth:0, padding:0}}>\n    <TouchableOpacity \n        onPress={()=>touchableRef.current() && Linking.openURL(file.file)} \n        onLongPress={()=>{}}\n        style={{flexDirection:'row', alignItems:'flex-start', width:'100%'}} \n    >\n        {   file.thumbnail?\n            <Image source={{uri:file.thumbnail}} resizeMode=\"cover\" style={{width:isMobile?120:150, height:isMobile?120:150, borderWidth:1}}/>:\n            <FontAwesome name=\"file-o\" size={20} color={Colors[theme].iconColor} />}\n        <View style={{flex:1, marginHorizontal:10}}>\n            <Text style={{fontSize:18}}>{file.filename}</Text>\n            <Text style={{fontSize:14}}>{humanFileSize(file.filesize)}</Text>\n        </View>\n    </TouchableOpacity>\n    </CommonSection>\n}","import React, {useCallback, useMemo, useRef} from \"react\"\nimport { View, TouchableOpacity } from 'react-native';\nimport { FlatList } from \"react-native-gesture-handler\";\nimport { Auth } from \"../../../hooks/useAuthContext\";\nimport useMessengerContentList, { MessengerContentPage } from \"../../../hooks/lists/useMessengerContentList\"\nimport useIsMobile from \"../../../hooks/useIsMobile\"\nimport useModalsContext from \"../../../hooks/useModalsContext\"\nimport { Text } from '../../../components/Themed' \nimport Avatar from '../../../components/Avatar';\nimport LinkPreview from '../../../components/LinkPreview';\nimport FilePreview from '../../../components/FilePreview';\nimport MessageModal from '../../../modals/MessageModal';\nimport CommonSection from \"../../../components/CommonSection\";\nimport Hyperlink from \"react-native-hyperlink\";\nimport { timerToString } from \"./TimerTags\";\nimport useViewerContentList from \"../../../hooks/lists/useMessengerViewerList\";\nimport EditorPreview from \"../../../components/EditorPreview\";\nimport { MessengerContent } from \"../../../types\";\n\nconst MessengerContentPageItem = React.memo((props:MessengerContentPage & {ownerId?:number, reverse?:boolean, getOnPress?:(content:MessengerContent)=>()=>void})=>{\n    const lastTouchRef = useRef(Date.now()) \n    const touchableRef = useRef(()=>{\n      return Date.now() - lastTouchRef.current > 350\n    })\n    const isMobile = useIsMobile()\n    let nextPage = props.next;\n      while(nextPage?.next && nextPage.current.length==0){\n        nextPage = nextPage.next\n      }\n      const nextContent = nextPage?.current[0]\n      return <View \n        style={{flexDirection: props.reverse?'column-reverse':'column'}}\n        onTouchMove={()=>{lastTouchRef.current=Date.now()}}\n      >  \n        {props.current.map((content, index2)=>{\n          const next = index2 + 1 < props.current.length?props.current[index2+1]:nextContent\n          const created:string = content.created.slice(0, 16)\n          const date = created.slice(0, 10)\n          const isSystem = content.user == null\n          const isFirst = next==undefined || (content.user != next.user || created != next.created.slice(0, 16))\n          const isSelf = props.ownerId == content.user\n          const dayChanged = next==undefined || date != next.created.slice(0, 10)\n          const message = content.message_set[0]\n          if (isSystem)\n            return <View key={content.id} style={{flexDirection:'row', justifyContent:'center', width:'100%', marginVertical:5}}>\n              <Text>{message.content}</Text>\n            </View>\n          return <View key={content.id}>\n            {dayChanged?<View style={{flexDirection:'row', justifyContent:'center', width:'100%'}}><Text>{date}</Text></View>:undefined}\n            <View key={content.id} style={{flexDirection:'row', justifyContent:isSelf?'space-between':'flex-start', width:'100%'}}>\n              {isFirst && !isSelf? <View style={{marginTop:3, marginLeft:12}}><Avatar name={content.name} userId={content.user} size={36}/></View>:<View style={{width:48}}/>}\n              <CommonSection autoScale outerContainerStyle={{maxWidth:'90%'}} title={isFirst?content.name:undefined} titleStyle={{flex:undefined}} bodyStyle={{padding:10}} subtitle={`${created.slice(11)}`}>\n                <TouchableOpacity onLongPress={props.getOnPress?.(content)}>\n                  {content.timer && <View style={{flexDirection:'row', alignItems:'stretch'}}>\n                    <Text style={{fontSize:12}}>⌚</Text>\n                    <Text style={{fontSize:12}} selectable={!isMobile}>{timerToString(content.timer)}</Text>\n                  </View>}\n                  {/* @ts-ignore */}\n                  <Hyperlink linkDefault={ true } style={{wordBreak:\"break-word\"}} linkStyle={{color: '#12b886'}} onPress={touchableRef.current()?undefined:()=>{}}>\n                    <Text selectable={!isMobile} style={{textAlign:isSelf?'right':'left'}}>{message.content}</Text>\n                  </Hyperlink> \n                  {\n                    content.attatchment_set.map((attatchment, aIndex)=>{\n                      if (attatchment.type=='editor')\n                        return <EditorPreview key={aIndex} content={attatchment}/>\n                      if (attatchment.type=='file')\n                        return <FilePreview key={aIndex} file={attatchment} isMobile={isMobile} showBorder={false} touchableRef={touchableRef}/>\n                      if (attatchment.type=='link')\n                        return <LinkPreview key={aIndex} link={attatchment} isMobile={isMobile} touchableRef={touchableRef}/>\n                    })\n                  }\n                </TouchableOpacity>\n              </CommonSection>\n            </View>\n          </View>\n        })}\n      </View>\n  \n  })\n\nexport default (props:{channel_id:number, auth?:Auth, reverse?:boolean, sendToScreen?:(e:any)=>void})=>{\n    const height = useRef(0)\n    const {data, fetchNextPage } = props.auth?useMessengerContentList(props.channel_id):useViewerContentList(props.channel_id)\n    const ownerId = useMemo(()=>props.auth?.user?.id, [props.auth])\n    const { setModal } = useModalsContext()\n    const getOnPress = (content: MessengerContent)=>()=>setModal(MessageModal, {content, isOwner:ownerId == content.user, sendToScreen:props.sendToScreen})\n    const renderItem = useCallback(({item, index}:{item:MessengerContentPage, index:number})=><MessengerContentPageItem \n      {...item} \n      ownerId={ownerId} \n      reverse={props.reverse}\n      getOnPress={getOnPress}  \n    />, [ownerId])\n    return <FlatList\n        style={{flexDirection: props.reverse?'column-reverse':'column'}}\n        contentContainerStyle={{padding:10, flexGrow:1, flexDirection: props.reverse?'column-reverse':'column'}}\n        data={data?.pages}\n        renderItem={renderItem}\n        onScroll={(e)=>{\n          if (e.nativeEvent.contentSize.height - height.current + (props.reverse?1:-1)*e.nativeEvent.contentOffset.y < 1)\n            fetchNextPage()\n        }}\n        onLayout={(p)=>{height.current = p.nativeEvent.layout.height}}\n      />\n}","import { useInfiniteQuery } from \"react-query\"\nimport { getMessengerContentList } from \"../../services\"\nimport { MessengerContentPage } from \"./useMessengerContentList\"\n\n\nexport default function useViewerContentList(channel_id:number){  \n  const { data, fetchNextPage } = useInfiniteQuery<MessengerContentPage>(\n    [\"ViewerContentList\", channel_id], \n    async({pageParam})=>getMessengerContentList(channel_id, pageParam, true).then(current=>({current})), \n    {\n      select:data=>{\n        if(data.pages.length > 1)\n          data.pages[data.pages.length - 2].next = data.pages[data.pages.length - 1]\n        return data;\n      },\n      getNextPageParam:(lastPage)=>lastPage?.current.length?lastPage.current[lastPage.current.length - 1].id:undefined,\n      refetchOnReconnect:false,\n      refetchOnWindowFocus:false,\n    }\n  )\n  return { data, fetchNextPage }\n}\n","import React, {useState, useEffect} from \"react\"\nimport dayjs from \"dayjs\";\nimport {View, TouchableOpacity} from 'react-native'\nimport { Text } from \"../../../components/Themed\";\nimport useTimerMessageContentList from \"../../../hooks/lists/useTimerMessageContent\";\nimport { MessengerContent } from \"../../../types\";\nimport Avatar from \"../../../components/Avatar\";\nimport Hyperlink from \"react-native-hyperlink\";\n\nexport function timerFormat(datetime:string){\n    return _timerFormat(dayjs(datetime), dayjs())\n}\n\nfunction _timerFormat(m:dayjs.Dayjs, now:dayjs.Dayjs){\n    if (m.year() != now.year()){\n        return m.format('YYYY.MM')\n    }\n    if(m.month()!= now.month() || m.date() != now.date()){\n        return m.format('MM.DD')\n    }\n    return m.format('HH:mm')\n  }\n\nexport function timerToString(timer:string){\n    return dayjs(timer).format('YYYY.MM.DD HH:mm')\n}\n\nconst TimerTag = (props:{data:MessengerContent, now:dayjs.Dayjs, isExpand:boolean, setExpand:(id?:number)=>void})=>{\n    const start = dayjs(props.data.created)\n    const end = dayjs(props.data.timer)\n    const ratio = (start.diff(props.now)/start.diff(end))\n    const message = props.data.message_set[0]\n    return <TouchableOpacity onPress={()=>props.setExpand(props.isExpand?undefined:props.data.id)}>\n        <View style={{backgroundColor:'lightgray', borderRadius:20, overflow:'hidden', margin:5}}>\n            <View style={{backgroundColor:'darkgray', position:'absolute', width:`${ratio*100}%`, height:'100%'}}/>\n            {props.isExpand?\n            <View style={{paddingVertical:5, paddingHorizontal:5, maxWidth:270}}>\n                <View style={{flexDirection:'row'}}>\n                    <Avatar name={props.data.name} userId={props.data.user} size={20}/>\n                    <View style={{paddingHorizontal:5}}><Text>{props.data.name}</Text></View>\n                </View>\n                {props.data.timer &&\n                <View style={{flexDirection:'row', alignItems:'stretch'}}>\n                    <Text>⌚</Text>\n                    <Text selectable>{timerToString(props.data.timer)}</Text>\n                </View>}\n                {/* @ts-ignore */}\n                <Hyperlink linkDefault={ true } style={{wordBreak:\"break-word\"}} linkStyle={{color: '#12b886'}}>\n                    <Text selectable>{message.preview_content || message.content}</Text>\n                </Hyperlink>\n            </View>:    \n            <View style={{paddingVertical:5, paddingHorizontal:5, flexDirection:'row'}}>\n                <Avatar name={props.data.name} userId={props.data.user} size={20}/>\n                <View style={{paddingHorizontal:5}}><Text>{_timerFormat(end, props.now)}</Text></View>\n            </View>}\n        </View>\n    </TouchableOpacity>\n}\n\n\nexport default (props:{channel_id:number})=>{\n    const timerMessages = useTimerMessageContentList(props.channel_id)\n    const [now, setNow] = useState(dayjs())\n    const [expand, setExpand] = useState<number>()\n    useEffect(()=>{\n        const timeout = setTimeout(()=>{\n            setNow(dayjs())\n        }, 2000)\n        return ()=>clearTimeout(timeout)\n    }, [now])\n    return <View style={{flexDirection:'row', paddingTop:5, paddingHorizontal:20}}>\n        {timerMessages?.map((v,i)=><TimerTag key={i} data={v} now={now} isExpand={v.id==expand} setExpand={setExpand}/>)}\n    </View>\n}","import { useEffect, useMemo } from \"react\"\nimport { useQuery, useQueryClient } from \"react-query\"\nimport { getTimerMessageContentList } from \"../../services\"\nimport { MessengerContent } from \"../../types\"\nimport useWebsocketContext from \"../useWebsocketContext\"\nimport dayjs from \"dayjs\"\n\nexport default function useTimerMessageContentList(channel_id:number){  \n  const queryClient = useQueryClient()\n  const { data } = useQuery<MessengerContent[]>(\n    [\"TimerMessageContentList\", channel_id], \n    async()=>await getTimerMessageContentList(channel_id, dayjs().toISOString()), \n    {\n      refetchOnReconnect:false,\n      refetchOnWindowFocus:false\n    }\n  )\n  const { lastJsonMessage } = useWebsocketContext()\n  useEffect(()=>{\n    if(lastJsonMessage !=null && lastJsonMessage['data']['channel'] == channel_id){\n      if(lastJsonMessage['type']=='next_message'){\n        if(lastJsonMessage['data']['timer'] && dayjs() < dayjs(lastJsonMessage['data']['timer']))\n          queryClient.setQueryData<MessengerContent[]>([\"TimerMessageContentList\", channel_id], (_data)=>{\n            return [...(_data || []), lastJsonMessage['data']]\n          })\n      }\n      if(lastJsonMessage['type']=='update_message'){\n        queryClient.setQueryData<MessengerContent[]>([\"TimerMessageContentList\", channel_id], (_data)=>{\n          return [...(_data?.filter(v=>v.id!=lastJsonMessage['data'].id || (lastJsonMessage['data']['timer']!=null && !lastJsonMessage['data']['is_archive'])) || [])]\n        })\n      }\n    }\n  }, [lastJsonMessage])\n  const sorted = useMemo(()=>data?.sort((a, b)=>(a.timer || '') > (b.timer || '')?1:-1), [data])\n  useEffect(()=>{\n    if (sorted?.[0]?.timer){\n      const id = sorted[0].id\n      const ms = Math.min(dayjs(sorted[0].timer).diff(dayjs()), Number.MAX_VALUE)\n      let timeout = setTimeout(()=>{\n        queryClient.setQueryData<MessengerContent[]>([\"TimerMessageContentList\", channel_id], (_data)=>{\n          return (_data || []).filter(v=>v.id!=id || dayjs(v.timer).diff(dayjs()) > 0)\n        })\n      }, ms)\n      return ()=>clearTimeout(timeout)\n    }\n  },[sorted])\n  return sorted\n}\n"],"sourceRoot":""}