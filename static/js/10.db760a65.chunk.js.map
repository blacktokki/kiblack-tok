{"version":3,"sources":["src/screens/NotFoundScreen.tsx","src/navigation/Drawer.tsx","src/modals/index.ts","src/navigation/MainNavigator.tsx","src/hooks/lists/useMessengerChannelList.ts","src/navigation/index.tsx","src/hooks/lists/useUserMembershipList.ts","src/hooks/lists/useMessengerMemberList.ts","src/components/TextButton.tsx","src/modals/ChannelEditModal.tsx","src/modals/RegistrationModal.tsx","src/components/HeaderRight.tsx","src/components/RowField.tsx","src/components/TabView.tsx","src/components/CommonItem.tsx","src/modals/ProfileModal.tsx","src/components/ContractFooter.tsx","src/screens/main/LoginScreen.tsx","src/lib/react-native-webrtc/useWebsocketContext.tsx","src/lib/react-native-webrtc/webrtc/p2p.tsx","src/lib/react-native-webrtc/webrtc/index.ts","src/lib/react-native-webrtc/LocalCam.tsx","src/lib/react-native-webrtc/RemoteCam.tsx","src/screens/main/ChatScreen/VideoCallSection.tsx","src/screens/main/ChatScreen/UploadTags.tsx","src/lib/tinymce/Editor.tsx","src/components/Editor.tsx","src/screens/main/HomeScreen/ConfigSections.tsx","src/screens/main/HomeScreen/index.tsx","src/screens/index.ts","src/screens/main/ChatScreen/index.tsx","src/screens/main/DemoScreen.tsx","src/modals/AlertModal.tsx","src/hooks/lists/useExternalMembershipList.ts","src/components/TextField.tsx","src/components/CommonTextInput.tsx","src/components/MemberItem.tsx","src/modals/DateTimePickerModal.tsx","src/components/Profile.tsx","src/hooks/useFirebaseContext.tsx","src/hooks/useLocalSearch.ts","src/components/CopyField.tsx","src/modals/InviteModal.tsx","src/hooks/useInvitee.ts","web/editor-config.js","web/firebase-config.js","src/navigation/LinkingConfiguration.ts"],"names":["NotFoundScreen","_ref","navigation","lang","useLangContext","auth","useAuthContext","_jsxs","View","style","styles","container","children","_jsx","Text","title","TouchableOpacity","onPress","replace","user","link","linkText","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","padding","fontSize","fontWeight","marginTop","paddingVertical","color","MemberTabView","setModal","useModalsContext","userList","useUserMembershipList","map","item","index","CommonItem","containerStyle","marginHorizontal","bodyStyle","ProfileModal","id","marginLeft","name","MessengerTabView","channelList","useMessengerChannelSorted","avatarFromChannel","navigate","colors","useTheme","theme","useColorScheme","windowType","useResizeContext","_useState","useState","_useState2","_slicedToArray","setIndex","onAddList","_auth$user","RegistrationModal","is_guest","ChannelEditModal","type","drawerTabs","Colors","iconColor","MemberTab","component","icon","MaterialCommunityIcons","size","marginBottom","ChatTab","Ionicons","getDrawerTabs","useEffect","undefined","length","tabBar","background","borderTopColor","border","width","pointerEvents","_Fragment","Profile","userId","username","flexDirection","TextButton","textStyle","borderRadius","accessibilityRole","content","Object","keys","TabView","tabs","tabBarPosition","onTab","borderTopWidth","borderColor","values","drawerTab","Tab","elevation","borderRightWidth","tab","label","textAlign","InviteModal","AlertModal","DateTimePickerModal","MessageModal","Main","createStackNavigator","isMobile","useIsMobile","_useLangContext","locale","entries","useMemo","console","log","login","main","modalValues","modals","backgroundStyle","UploadContextProvider","ModalsProvider","Drawer","WebSocketProvider","disable","FirebaseProvider","Navigator","screenOptions","route","headerStyle","header","height","headerTitleStyle","text","headerLeft","canGOBackScreen","findIndex","v","goBack","canGoBack","disabled","CommonButton","buttonBackgroundColor","hoverColor","margin","paddingHorizontal","headerRight","HeaderRight","headerLeftContainerStyle","borderBottomWidth","headerBottomColor","cardStyle","flexShrink","animationEnabled","cardStyleInterpolator","CardStyleInterpolators","forHorizontalIOS","_ref2","_ref3","key","screen","Screen","options","useMessengerChannelList","queryClient","useQueryClient","lastJsonMessage","useWebsocketContext","data","useQuery","_asyncToGenerator","getMessengerChannelList","setQueryData","_data","find","concat","_toConsumableArray","sort","a","b","_data2$message_set$","channel","_objectSpread","last_message","message_set","created","_a$last_message","_b$last_message","useMessengerChannelMutation","useMutation","postChannel","onSuccess","invalidateQueries","update","putChannel","direct","postDirectChannel","mutateAsync","enableScreens","electronVersion","navigationRef","React","params","_navigationRef$curren","_navigationRef$curren2","current","_process","_process$versions","process","versions","e","Navigation","defaultColorScheme","useDefaultColorScheme","userColorScheme","colorScheme","NavigationContainer","ref","documentTitle","formatter","linking","LinkingConfiguration","DarkTheme","DefaultTheme","ResizeContextProvider","RootNavigator","Root","useInvitee","mode","headerMode","forVerticalIOS","MainNavigator","headerShown","modal","gestureDirection","replaceInviteeState","window","location","IGNORE_WERNINGS","warnLogger","warn","message","some","includes","groupId","getUserMembershipList","useUserMembershipMutation","_useAuthContext","dispatch","_create","postUser","_update","patchUser","password","_delete","deleteUser","_auth$user2","delete","useMessengerMemberList","channel_id","getMessengerMemberList","useMessengerMemberMutation","invite","postBulkMessengerMember","leave","deleteMessengerMember","props","borderWidth","member_id","channelMutation","messengerMemberMutation","setName","_useState3","_useState4","description","setDescription","back","_name","useModalEffect","ModalSection","separator","lightColor","darkColor","TextField","value","setValue","multiline","then","newChannel","owner","group","field","ErrorView","form_error","form_error_text","setUsername","_useState5","_useState6","setPassword","_useState7","_useState8","checkPassword","setCheckPassword","_useState9","_useState10","isStaff","_useState11","_useState12","error","setError","externalMemberList","useExternalMembershipList","userMembershipMutation","usernameDisable","RowField","CommonTextInput","keyboardType","secureTextEntry","newError","test","is_staff","inviteGroupId","textAlignVertical","defaultButtonProps","buttonProps","extra","filter","k","rowStyle","_React$useState","_React$useState2","icons","assign","apply","_defineProperty","renderTabBar","TabBar","indicatorStyle","activeColor","inactiveColor","renderIcon","scene","onTabPress","_ref4","_ref5","navigationState","routes","_ref6","_ref7","onIndexChange","renderScene","SceneMap","_ref8","_ref9","press","setPress","Pressable","outerContainer","outerContainerStyle","onPressIn","onPressOut","bodyView","maxWidth","minHeight","isSelf","BottomSheet","_auth$user3","subowner","openURL","Platform","OS","url","href","Linking","Styles","footer_buttons","footer_button","AntDesign","paddingBottom","paddingRight","login_container","login_header","paddingTop","login_header_logo","resizeMode","login_header_text","login_header_text_bold","login_wrapper","borderTopRightRadius","borderTopLeftRadius","form","form_input","button","button_label","login_social","login_social_separator","login_social_separator_line","login_social_separator_text","login_social_buttons","login_social_button","login_social_icon","login_social_facebook","login_footer_text","guest_footer_text","alignSelf","login_footer_link","WebSocketContext","createContext","sendJsonMessage","WebSocketInternalProvider","path","Context","useBackground","useContext","TURN_SERVER","peerConstraints","iceServers","JSON","parse","urls","sessionConstraints","mandatory","OfferToReceiveAudio","OfferToReceiveVideo","VoiceActivityDetection","mediaConstraints","audio","video","framerate","onICEcandidate","pc","_message","rtcMessage","candidate","RTCIceCandidate","addIceCandidate","sendICEcandidate","event","sendMessage","receiver","target","createOffer","pcRefCurrent","stream","addStream","offerDescription","arr","sdp","split","forEach","str","i","RTCSessionDescription","join","optimizeSdp","setLocalDescription","_x","_x2","_x3","_x4","_x5","arguments","camStyle","cam","bottonContainer","position","bottom","buttonBar","_props$user","_useWebsocketContext","_useLocalCam","pcRef","useRef","sender","setSender","_stream","setStream","isPlay","CustomRTCView","useCallback","memo","RTCView","videoProps","start","newStream","mediaDevices","getUserMedia","getDisplayMedia","catch","_x6","_x7","_x8","stop","getTracks","track","websocketOnMessage","_websocketOnMessage","response","channel_name","peerConnection","RTCPeerConnection","addEventListener","answerDescription","setRemoteDescription","_x9","_x10","useLocalCam","Button","setReceiver","_useRemoteCam","setUser","close","clearInterval","statsInterval","_websocketOnMessage2","_pcRef$current","_pcRef$current2","_pcRef$current3","_pcRef$current4","iceConnectionState","activeStream","setInterval","stats","getStats","statsOutput","framePerSecond","report","kind","statName","framesPerSecond","Date","toTimeString","addTransceiver","direction","streams","getRemoteStreams","createAnswer","localDescription","_x11","useRemoteCam","TextInput","onChangeText","VideoView","scale","maxHeight","flexGrow","focusGuest","setFocusGuest","VideoCallContainer","setDisable","videoMode","setVideoMode","guests","setGuests","_useRtcContext","useRtcContext","Math","max","ceil","sqrt","toggleVideoMode","ThemedView","aspectRatio","borderLeftWidth","flexWrap","RemoteCam","LocalCam","RtcProvider","UploadTag","overflow","progress","filename","upload","useUploadContext","expand","setExpand","uploadData","f","isExpand","INIT","require","Editor","tinymceScriptSrc","onInit","editor","onReady","onEditorChange","init","plugins","toolbar","skin","content_css","menubar","branding","statusbar","block_formats","fontsize_formats","ready","setReady","active","ConfigSection","CommonSection","setLocale","configTheme","useConfigColorScheme","_useFirebaseContext","useFirebaseContext","noti","enable","setNoti","setEnable","n","textDecorationLine","l","setColorScheme","paddingLeft","memberItem","MemberItem","member","ScrollView","today","toISOString","slice","_item$last_message","_item$last_message2","_item$last_message3","_item$last_message4","_avatarFromChannel","avatar","date","preview_content","marginRight","Avatar","FontAwesome","opacity","member_count","replaceAll","unread_count","ConfigTabView","ConfigSections","getBottomTabs","OneTab","TwoTab","FourTab","SimpleLineIcons","HomeScreen","_route$params2","home","setHome","useLayoutEffect","_route$params","setOptions","contentContainerStyle","StyledText","ContractFooter","parseInt","setParams","ChatScreen","_useMessengerChannelL","inputRef","channelAvatar","memberList","_memberList$find","editorValue","setEditorValue","timer","setTimer","autoFocus","setAutoFocus","bottomTab","setBottomTab","_useState13","_useState14","isEditor","setIsEditor","_useState15","_useState16","messageEvent","sendToScreen","valueLines","postValue","contentMutation","useMessengerContentMutation","_auth$user4","focus","timeout","setTimeout","clearTimeout","minWidth","VideoCallSection","d","Messages","reverse","UploadTags","TimerTags","borderBottomRightRadius","top","Entypo","timerFormat","datetime","callback","onKeyPress","shiftKey","preventDefault","onFocus","numberOfLines","borderBottomLeftRadius","Promise","resolve","reject","input","document","createElement","onchange","files","onabort","onerror","click","_auth$user5","file","LoginScreen","_login","placeholder","autoCapitalize","onSubmitEditing","DemoScreen","messages","keyword","getExternalMembershipList","contentHeight","setContentHeight","editable","onContentSizeChange","nativeEvent","contentSize","onBlur","onEndEditing","dayTypes","hours","Array","toString","padStart","minutes","getDisableDays","startDate","clone","startOf","add","endDate","endOf","dayjs","result","push","format","Calendar","lazy","CommonPicker","_dayjs","m","restMinute","defaultDayjs","setDate","dayType","setDayType","hour","setHour","minute","setMinute","disableDays","setDisableDays","Suspense","fallback","disableAllTouchEventsForDisabledDays","onMonthChange","dateString","markedDates","reduce","p","c","selected","firebaseConfig","messagingSenderId","apiKeyEncrypted","FCM_API_KEY","charCodeAt","app","firebase","initializeApp","apiKey","messaging","onMessage","payload","Notification","permission","body","alert","requestToken","requestPermission","serviceWorkerRegistration","navigator","serviceWorker","register","scope","currentToken","getToken","vapidKey","FCM_PUBLIC_VAPID_KEY","unregister","FirebaseContext","tokenRef","notification","setNotification","token","isMount","t","putNotification","getNotification","postNotification","Provider","_useContext","localSearchReducer","initialState","action","Error","CopyField","copied","setCopied","Clipboard","setString","InviteItem","selectedRef","has","setSelected","GroupTabView","_useLocalSearch","compare","_useReducer","useReducer","_useReducer2","searchState","useLocalSearch","memberSet","Set","dispatchKeyword","FlatList","renderItem","user_ids","ExternalMembershipTabView","setKeyword","timeoutRef","inviteLink","marginVertical","external","invitee_id","invitee_state","pathname","endsWith","search","startsWith","history","replaceState","redirect","editorConfig","module","exports","ROOTPATH","prefixes","config","screens","NotFound"],"mappings":"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","file":"static/js/10.db760a65.chunk.js","sourcesContent":["import { StackScreenProps } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport useAuthContext from '../hooks/useAuthContext';\nimport useLangContext from '../hooks/useLangContext';\n\nexport default function NotFoundScreen({\n  navigation,\n}: StackScreenProps<any, 'NotFound'>) {\n  const { lang } = useLangContext()\n  const { auth } = useAuthContext()\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>{lang(\"This screen doesn't exist.\")}</Text>\n      <TouchableOpacity onPress={() => navigation.replace(auth.user?'HomeScreen':'LoginScreen')} style={styles.link}>\n        <Text style={styles.linkText}>{lang(\"Go to home screen!\")}</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  link: {\n    marginTop: 15,\n    paddingVertical: 15,\n  },\n  linkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n});\n","import { useTheme } from '@react-navigation/native';\nimport React, { useEffect, useState } from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport Profile from '../components/Profile';\nimport TextButton from '../components/TextButton';\nimport Colors from '../constants/Colors';\nimport useResizeContext from '../hooks/useResizeContext';\nimport TabView from '../components/TabView';\nimport { TabViewRecord, UserMembership } from '../types';\nimport useModalsContext from '../hooks/useModalsContext';\nimport ChannelEditModal from '../modals/ChannelEditModal';\nimport CommonItem from '../components/CommonItem';\nimport { Text } from '../components/Themed';\nimport useAuthContext, { Auth } from '../hooks/useAuthContext';\nimport { useMessengerChannelSorted } from '../hooks/lists/useMessengerChannelList';\nimport { navigate } from '.'\nimport { avatarFromChannel } from '../components/Avatar';\nimport useColorScheme from '../hooks/useColorScheme';\nimport { Ionicons, MaterialCommunityIcons } from '../lib/@expo/vector-icons';\nimport RegistrationModal from '../modals/RegistrationModal';\nimport useUserMembershipList from '../hooks/lists/useUserMembershipList';\nimport ProfileModal from '../modals/ProfileModal';\n\n\nconst MemberTabView = ()=>{\n  const {auth} = useAuthContext()\n  const { setModal } = useModalsContext()\n  const userList = useUserMembershipList(auth)\n  return <View style={{flex:1}}>\n    {userList?.map((item, index)=>{\n      return <CommonItem key={index} containerStyle={{marginHorizontal:0}} bodyStyle={{alignItems:'flex-start'}} onPress={()=>setModal(ProfileModal, {id:item.id})}>\n        <Text style={{marginLeft:20}}>{item.name}</Text>\n      </CommonItem>\n    })}\n  </View>\n}\n\nconst MessengerTabView = ()=>{\n  const {auth} = useAuthContext()\n  const channelList = useMessengerChannelSorted(auth);\n  return <View style={{flex:1}}>\n    {channelList?.map((item, index)=>{\n      const {name} = avatarFromChannel(item, auth.user)\n      return <CommonItem key={index} containerStyle={{marginHorizontal:0}} bodyStyle={{alignItems:'flex-start'}} onPress={()=>navigate(\"ChatScreen\", {id:item.id})}>\n        <Text style={{marginLeft:20}}>{name}</Text>\n      </CommonItem>\n    })}\n  </View>\n}\nconst getDrawerTabs = (theme:'light'|'dark')=>{\n  const color = Colors[theme].iconColor\n  return {\n    MemberTab:{\n      title:'member',\n      component:MemberTabView,\n      icon:<MaterialCommunityIcons size={32} color={color} style={{ marginBottom: -3 }} name='account'/>,\n    },\n    ChatTab:{\n        title:'chat',\n        component:MessengerTabView,\n        icon:<Ionicons size={30} color={color} style={{ marginBottom: -3 }} name='chatbox'/>\n    },\n  } as TabViewRecord\n}\n\nexport default ({auth}:{auth:Auth})=> {\n  const { colors } = useTheme();\n  const theme = useColorScheme();\n  const windowType = useResizeContext();\n  const channelList = useMessengerChannelSorted(auth);\n  const [index, setIndex] = useState<number>();\n  const { setModal } = useModalsContext()\n  \n  const onAddList = [\n    ()=>setModal(RegistrationModal, auth.user?.is_guest?{id:auth.user.id}:{}),\n    ()=>setModal(ChannelEditModal, {type:'messenger'}),\n  ]\n  const drawerTabs = getDrawerTabs(theme)\n\n  useEffect(()=>{\n    if(index===undefined && channelList){\n      setIndex(channelList.length>0?1:0)\n    }\n  }, [channelList])\n  return <View style={windowType=='landscape'?[\n      styles.tabBar,\n      {\n        backgroundColor: Colors[theme].background,\n        borderTopColor: colors.border,\n      },\n      // tabBarStyle,\n    ]:{width:0}}\n    pointerEvents={false ? 'none' : 'auto'}\n  >\n    {windowType=='landscape' && auth.user && index!==undefined && <>\n      <Profile userId={auth.user.id} username={auth.user.username} name={auth.user.name}/>\n      <View style={{flexDirection:'row-reverse'}}>\n          <TextButton title='+' textStyle={{fontSize:20}} style={{borderRadius:20}} onPress={onAddList[index]}/>\n      </View>\n      <View accessibilityRole=\"tablist\" style={styles.content}>\n        {Object.keys(drawerTabs).length>1 ? \n          <TabView tabs={drawerTabs} tabBarPosition={\"top\"} onTab={setIndex} index={index}/>: \n          <View style={{borderTopWidth:1, flex:1, borderColor:colors.border}}>            \n            {Object.values(drawerTabs).map(drawerTab=>{const Tab = drawerTab.component; return <Tab key={drawerTab.title}/>})}\n          </View>\n        }\n      </View>\n    </>}\n  </View>\n}\n\n{/*<Text style={[styles.label, { color: d.isFocused ? colors.primary : '#222' }]}></Text> */}\n\nconst styles = StyleSheet.create({\n    tabBar: {\n      width:240,\n      elevation: 8,\n      borderRightWidth:1,\n      borderColor:Colors.borderColor\n    },\n    content: {\n      flex: 1,\n      flexDirection: 'row',\n    },\n    tab: {\n        flex: 1,\n        alignItems: 'center',\n    },\n    label: {\n        textAlign: 'center',\n        backgroundColor: 'transparent',\n      },\n  });","import InviteModal from \"./InviteModal\";\nimport ProfileModal from \"./ProfileModal\";\nimport ChannelEditModal from \"./ChannelEditModal\"\nimport AlertModal from \"./AlertModal\";\nimport DateTimePickerModal from \"./DateTimePickerModal\"\nimport MessageModal from \"./MessageModal\";\nimport RegistrationModal from \"./RegistrationModal\";\n\nexport default [\n    InviteModal,\n    ProfileModal,\n    ChannelEditModal,\n    AlertModal,\n    DateTimePickerModal,\n    MessageModal,\n    RegistrationModal\n]","import { CardStyleInterpolators, createStackNavigator } from '@react-navigation/stack';\nimport React, {useMemo} from 'react';\nimport { View } from 'react-native';\nimport { Ionicons } from '../lib/@expo/vector-icons';\nimport useResizeContext from '../hooks/useResizeContext';\nimport NotFoundScreen from '../screens/NotFoundScreen';\nimport {main, login} from '../screens';\nimport Drawer from './Drawer';\nimport useAuthContext from '../hooks/useAuthContext';\nimport { WebSocketProvider } from '../hooks/useWebsocketContext';\nimport HeaderRight from '../components/HeaderRight'\nimport Colors from '../constants/Colors';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { FirebaseProvider } from '../hooks/useFirebaseContext';\nimport useIsMobile from '../hooks/useIsMobile';\nimport useColorScheme from '../hooks/useColorScheme';\nimport { ModalsProvider } from '../hooks/useModalsContext';\nimport modals from '../modals';\nimport useLangContext from '../hooks/useLangContext';\nimport CommonButton from '../components/CommonButton';\nimport { UploadContextProvider } from '../hooks/useUploadContext';\n\nconst Main = createStackNavigator();\n\nfunction headerLeft(navigation:any, route:any, windowType:string, theme:'light'|'dark', isMobile:boolean){\n    const canGOBackScreen = ['HomeScreen', 'LoginScreen'].findIndex(v=>v == route.name) == -1\n    const goBack = ()=>{\n        if (navigation.canGoBack())\n            navigation.goBack()\n        else if (canGOBackScreen)\n            navigation.replace('HomeScreen')\n    }\n    if (windowType=='portrait' && canGOBackScreen)\n        return <TouchableOpacity onPress={goBack} disabled={!isMobile}>\n            <CommonButton title={''} color={isMobile?Colors[theme].buttonBackgroundColor:Colors[theme].hoverColor} onPress={goBack} disabled={isMobile} style={{width:32, height:32, margin:16, paddingVertical:1, paddingHorizontal:4}}>\n                <Ionicons size={24} color={Colors[theme].iconColor} name=\"arrow-back\"/>\n            </CommonButton>\n        </TouchableOpacity>\n    return null\n}\n\nexport default ()=>{\n    const windowType = useResizeContext();\n    const isMobile = useIsMobile()\n    const {auth} = useAuthContext()\n    const theme = useColorScheme()\n    const {lang, locale} = useLangContext()\n    const entries = useMemo(()=>{\n        if (auth.user === undefined)\n            return []\n        console.log('current user: ', auth.user)\n        return Object.entries(auth.user === null?login:main)\n    }, [auth, locale])\n    const modalValues = useMemo(()=>{\n        if (auth.user === undefined)\n            return []\n        return auth.user === null?[]:modals\n    }, [auth])\n    const backgroundStyle = theme=='light'?{}:{backgroundColor:'#010409'}\n    return (auth.user!==undefined?<View style={{flexDirection:'row', flex:1}}>\n        <UploadContextProvider>\n            <ModalsProvider modals={modalValues}>\n                {auth.user?<Drawer auth={auth}/>:undefined}\n                <View style={[{flex:1}, backgroundStyle]}>\n                    <WebSocketProvider disable={auth.user === null || auth.user === undefined}>\n                        <FirebaseProvider user={auth.user}>\n                            <Main.Navigator\n                                screenOptions={({navigation, route})=>({\n                                    headerStyle:{backgroundColor:Colors[theme].header, height:isMobile?50:undefined},\n                                    headerTitleStyle:{color:Colors[theme].text},\n                                    headerLeft:()=>headerLeft(navigation, route, windowType, theme, isMobile),\n                                    headerRight:()=><HeaderRight/>,\n                                    headerLeftContainerStyle:{backgroundColor:Colors[theme].header, borderBottomWidth:1, borderColor:Colors[theme].headerBottomColor},\n                                    cardStyle:[{flexShrink:1}, backgroundStyle],\n                                    animationEnabled:windowType=='portrait',\n                                    cardStyleInterpolator: CardStyleInterpolators.forHorizontalIOS\n                                })}\n                            >\n                                {entries.map(([key, screen])=><Main.Screen key={key} name={key} component={screen.component} options={{ title: lang(screen.title) }} />)}\n                                <Main.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n                            </Main.Navigator>\n                        </FirebaseProvider>\n                    </WebSocketProvider>\n                </View>\n            </ModalsProvider>\n        </UploadContextProvider>\n    </View>:<></>);\n}","import { useEffect } from \"react\";\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport { getMessengerChannelList, postChannel, postDirectChannel, putChannel } from \"../../services\";\nimport { MessengerChannel, MessengerContent } from \"../../types\";\nimport { Auth } from \"../useAuthContext\";\nimport useWebsocketContext from \"../useWebsocketContext\";\n\nexport default function useMessengerChannelList(auth?:Auth){\n  const queryClient = useQueryClient()\n  const {lastJsonMessage} = useWebsocketContext()\n  const { data } = useQuery(\"MessengerChannelList\" , async()=>await getMessengerChannelList(auth?.user?.id))\n\n  useEffect(()=>{\n    if(lastJsonMessage !=null){\n      if(lastJsonMessage['type']=='enter'){\n        queryClient.setQueryData<MessengerChannel[]>(\"MessengerChannelList\", (_data)=>{\n          return (_data?.find(v=>v.id==lastJsonMessage['data']['id'])?_data:[lastJsonMessage['data'] , ...(_data|| [])]).sort((a, b)=>a.id - b.id)\n        })\n      }\n      if (lastJsonMessage['type']=='next_message'){\n        const data:MessengerContent = lastJsonMessage['data']\n        queryClient.setQueryData<MessengerChannel[]>(\"MessengerChannelList\", (_data)=>(_data || []).map(v=>{\n          if (v.id == data.channel){\n            return {...v, last_message:{content:data.message_set[0]?.content, created:data.created}}\n          }\n          return v\n        }))\n      }\n      // if(lastJsonMessage['type']=='leave'){\n      //   queryClient.setQueryData<Channel[]>(\"MessengerChannelList\", (_data)=>_data?.filter(v=>v.id!=lastJsonMessage['data']['channel_id']) || [])\n      // }\n    }\n  }, [lastJsonMessage])\n  return data\n}\n\nexport function useMessengerChannelSorted(auth?:Auth){\n  const channelList = useMessengerChannelList(auth);\n  return channelList?.sort((a, b)=>(a.last_message?.created || '') < (b.last_message?.created || '')?1:-1)\n}\nexport function useMessengerChannelMutation(){\n  const queryClient = useQueryClient()\n\n  const create = useMutation(postChannel, {\n    onSuccess: ()=>queryClient.invalidateQueries(\"MessengerChannelList\")\n  });\n\n  const update = useMutation(putChannel, {\n    onSuccess: () => queryClient.invalidateQueries(\"MessengerChannelList\")\n  })\n\n  const direct = useMutation(postDirectChannel, {\n    onSuccess: () => queryClient.invalidateQueries(\"MessengerChannelList\")\n  })\n\n  return { create:create.mutateAsync, update:update.mutateAsync, direct:direct.mutateAsync}\n}","/**\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\n * https://reactnavigation.org/docs/getting-started\n *\n */\nimport * as React from 'react';\nimport { useColorScheme as useDefaultColorScheme } from 'react-native';\nimport { useColorScheme as useColorScheme } from 'react-native-appearance';\nimport { enableScreens } from 'react-native-screens';\nimport { NavigationContainer, DefaultTheme, DarkTheme, NavigationContainerRef } from '@react-navigation/native';\nimport { CardStyleInterpolators, createStackNavigator } from '@react-navigation/stack';\n\nimport useResizeContext, { ResizeContextProvider } from '../hooks/useResizeContext';\nimport useInvitee, { replaceInviteeState } from '../hooks/useInvitee';\nimport { modal } from '../screens';\nimport LinkingConfiguration from './LinkingConfiguration';\nimport MainNavigator from './MainNavigator';\n\n\nenableScreens();\n\nconst navigationRef = React.createRef<NavigationContainerRef>();\n\nexport function navigate(name:string, params?:any) {\n  if (params)\n    navigationRef.current?.navigate(name, params);\n  navigationRef.current?.navigate(name);\n}\n\nlet electronVersion:string|undefined;\ntry{\n  electronVersion = process?.versions?.['electron']\n}\ncatch(e){\n  electronVersion = undefined\n}\n\nexport default function Navigation() {\n  const defaultColorScheme = useDefaultColorScheme()\n  const userColorScheme = useColorScheme()\n  const colorScheme = userColorScheme =='no-preference'?defaultColorScheme:userColorScheme\n  return <NavigationContainer\n    ref={navigationRef}\n    documentTitle={{formatter: (options, route) => {return `TOKKI TOK`}}}\n    linking={electronVersion?undefined:LinkingConfiguration}\n    theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n        <ResizeContextProvider>\n          <RootNavigator />\n        </ResizeContextProvider>\n  </NavigationContainer>\n}\n\n\n// A root stack navigator is often used for displaying modals on top of all other content\n// Read more here: https://reactnavigation.org/docs/modal\nconst Root = createStackNavigator();\n\nfunction RootNavigator() {\n    const windowType = useResizeContext();\n    useInvitee()\n    return <Root.Navigator\n        mode= 'modal'\n        headerMode= 'screen'\n        screenOptions={{\n            cardStyle:{backgroundColor:\"white\"},\n            animationEnabled: true,\n            cardStyleInterpolator: CardStyleInterpolators.forVerticalIOS,\n        }}\n    >\n        <Root.Screen name=\"Main\" component={MainNavigator} options={{headerShown:false}}/>\n        {Object.entries(modal).map(([key, screen])=><Root.Screen key={key} name={key} component={screen.component} options={{\n            title: screen.title,\n            gestureDirection: windowType == 'landscape'?'vertical-inverted':'vertical'\n        }} />)}\n    </Root.Navigator>\n}\n\nreplaceInviteeState(window.location)\n\nconst IGNORE_WERNINGS:string[] = ['setNativeProps', 'useNativeDriver'];\n\nconst warnLogger = console.warn\n\nconsole.warn = (message: string|Object) => {\n    var warn = true;\n    if (message instanceof Object){\n      warn = false;\n    }\n    else if (IGNORE_WERNINGS.some(log=>message.includes(log))){\n      warn = false\n    };\n    if (warn){\n      warnLogger(message);\n    }\n    else{\n        // console.log(message)\n    }\n};\n","import { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport { deleteUser, getUserMembershipList, patchUser, postUser } from \"../../services\";\nimport useAuthContext, { Auth } from \"../useAuthContext\";\n\nexport default function useUserMembershipList(auth?:Auth){\n  const { data } = useQuery([\"UserMembershipList\", auth?.groupId] , async()=>auth?.groupId?(await getUserMembershipList(auth?.groupId)):[])\n  return data\n}\n\nexport function useUserMembershipMutation(){\n  const queryClient = useQueryClient()\n  const { auth, dispatch } = useAuthContext()\n  const _create = useMutation(postUser, {\n    onSuccess: ()=>{\n      queryClient.invalidateQueries(\"UserMembershipList\")\n    }\n  })\n  const _update = useMutation(patchUser, {\n    onSuccess: (data, user)=>{\n      if (user.id == auth.user?.id)\n        if(user.username && user.password){\n          dispatch({type:'LOGIN_REQUEST', username:user.username, password:user.password})\n        }\n        else{\n          dispatch({type:\"REFRESH\"})\n        }\n      else{\n        queryClient.invalidateQueries(\"UserMembershipList\")\n      }\n    }\n  })\n  const _delete = useMutation(deleteUser, {\n    onSuccess: (data, id)=>{\n      queryClient.invalidateQueries(\"UserMembershipList\")\n      if (id == auth.user?.id)\n        dispatch({type:\"LOGOUT_REQUEST\"})\n    }\n  })\n  return {create:_create.mutateAsync, update:_update.mutateAsync, delete:_delete.mutateAsync}\n}","import { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport { postBulkMessengerMember, deleteMessengerMember, getMessengerMemberList } from \"../../services\";\n\nexport default function useMessengerMemberList(channel_id:number){\n  const { data } = useQuery([\"MessengerMemberList\", channel_id] , async()=>await getMessengerMemberList(channel_id))\n  return data\n}\n\n\nexport function useMessengerMemberMutation(){\n  const queryClient = useQueryClient()\n  const invite = useMutation(postBulkMessengerMember, {\n    onSuccess: ()=>{\n      queryClient.invalidateQueries(\"MessengerMemberList\")\n    }\n  })\n\n  const leave = useMutation(deleteMessengerMember, {\n    onSuccess: () => {\n      queryClient.invalidateQueries(\"MessengerChannelList\")\n      queryClient.invalidateQueries(\"MessengerMemberList\")\n    }\n  })\n  return {invite:invite.mutateAsync, leave:leave.mutateAsync}\n}","import React, { useState } from 'react';\nimport { StyleSheet} from 'react-native';\nimport { CustomButtonProps } from '../types';\nimport CommonButton from './CommonButton';\n\nexport default (props:CustomButtonProps)=>{\n    return <CommonButton {...props} style={[styles.style, props.style]}/>\n}\n\nconst styles = StyleSheet.create({\n    style:{\n        borderRadius:6, \n        backgroundColor: 'transparent',\n        borderWidth:0\n    },\n});\n","import React, {useState, useEffect } from 'react';\nimport { StyleSheet } from 'react-native';\nimport { View, Text } from '../components/Themed';\nimport CommonButton from '../components/CommonButton';\n// import useBoardChannelList, { useBoardChannelMutation } from '../hooks/lists/useBoardChannelList';\nimport useAuthContext from '../hooks/useAuthContext';\nimport { navigate } from '../navigation';\nimport { Channel } from '../types';\nimport useMessengerChannelList, { useMessengerChannelMutation } from '../hooks/lists/useMessengerChannelList';\nimport TextField from '../components/TextField';\nimport useModalsContext from '../hooks/useModalsContext';\nimport useLangContext from '../hooks/useLangContext';\nimport ModalSection from '../components/ModalSection';\nimport { useMessengerMemberMutation } from '../hooks/lists/useMessengerMemberList';\nimport { avatarFromChannel } from '../components/Avatar';\nimport useModalEffect from '../hooks/useModalEffect';\n\nexport default function ChannelEditModal({id, member_id, type}: {id?:number, member_id?:number, type:string}) {\n  const { lang } = useLangContext()\n  const {auth} = useAuthContext()\n  const { setModal } = useModalsContext()\n  const channelList = useMessengerChannelList(auth)\n  const channelMutation = useMessengerChannelMutation()\n  const messengerMemberMutation = useMessengerMemberMutation()\n  const channel = channelList?.find(v=>v.id==id)\n  const [name, setName] = useState('')\n  const [description, setDescription] = useState('')\n  const back = ()=>{\n    setModal(ChannelEditModal, null)\n  }\n\n  useEffect(()=>{\n    if (channel){\n      const {name:_name} = avatarFromChannel(channel, auth.user)\n      setName(_name)\n      setDescription(channel?.description || '')\n    }\n  }, [channel?.id])\n  useModalEffect(back, [])\n  return <ModalSection>\n    <View style={{justifyContent:'space-between', flex:1, width:'100%'}}>\n      <View style={{width:'100%'}}>\n        <Text style={{fontSize:20}}>{id?lang('Chat Setting'):lang('New chat')}</Text>\n        <View style={styles.separator} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />\n        <TextField name={lang('Channel Name')} value={name} setValue={setName} width={'60%'}/>\n        <TextField name={lang('Description')} value={description} setValue={setDescription} multiline width={'60%'}/>\n      </View>\n      <View style={{width:'100%', flexDirection:'row'}}>\n        {member_id &&<View style={{flexDirection:'row', justifyContent:'flex-start'}}>\n          <CommonButton title={lang('leave')} style={{marginHorizontal:5}} textStyle={{color:'red'}} onPress={()=>messengerMemberMutation.leave(member_id).then(back)}/>\n        </View>}\n        <View style={{flex:1, flexDirection:'row', justifyContent:'flex-end'}}>\n          <CommonButton title={lang('save')} onPress={()=>{\n            if(auth?.user?.id && auth.groupId){\n              const newChannel:Channel = {id, name, description, type, owner:auth?.user?.id, group:auth.groupId};\n              (id?channelMutation.update(newChannel):channelMutation.create(newChannel)).then(v=>navigate(\"Main\", {\n                screen:v.type == 'messenger'?'ChatScreen':'BoardScreen',\n                params:{id:v.id}\n              }))\n            }\n          }}/>\n          <CommonButton title={lang('cancel')} style={{marginHorizontal:5}} onPress={back}/>\n        </View>\n      </View>\n    </View>\n  </ModalSection>\n}\n\nconst styles = StyleSheet.create({\n  field:{\n    width:'50%',\n    flexDirection:'row',\n    padding:10,\n  },\n  separator: {\n    marginBottom: 20,\n    height: 1,\n    width: '100%',\n  },\n})","import React, { useState, useEffect } from \"react\";\nimport { StyleSheet, TextInput } from \"react-native\";\nimport useLangContext from \"../hooks/useLangContext\";\nimport useUserMembershipList, { useUserMembershipMutation } from \"../hooks/lists/useUserMembershipList\";\nimport useAuthContext from \"../hooks/useAuthContext\";\nimport ModalSection from \"../components/ModalSection\";\nimport useModalsContext from \"../hooks/useModalsContext\";\nimport { View, Text } from \"../components/Themed\";\nimport RowField from \"../components/RowField\";\nimport CommonButton from \"../components/CommonButton\";\nimport CommonTextInput from \"../components/CommonTextInput\";\nimport useExternalMembershipList from \"../hooks/lists/useExternalMembershipList\";\n// import TextButton from \"../components/TextButton\";\n// import Colors from \"../constants/Colors\";\n// import useColorScheme from \"../hooks/useColorScheme\";\n\ntype ErrorMessages = {\n    username?:string,\n    name?:string,\n    password?:string,\n    checkPassword?:string\n}\n\nconst ErrorView = (props:{message?:string})=>{\n  const { lang } = useLangContext()\n  return props.message?<View style={styles.form_error}>\n  <Text style={styles.form_error_text}>{lang(props.message)}</Text>\n</View>:<></>\n}\n\nexport default function RegistrationModal({id}:{id?:number}) {\n  const { lang } = useLangContext()\n  const {auth} = useAuthContext()\n  // const theme = useColorScheme()\n  // const color = Colors[theme].text\n  const { setModal } = useModalsContext()\n  const [username, setUsername] = useState(\"\");\n  const [name, setName] = useState(\"\")\n  const [password, setPassword] = useState(\"\");\n  const [checkPassword, setCheckPassword] = useState(\"\")\n  const [isStaff, setIsStaff] = useState(false)\n  const [error, setError] = useState<ErrorMessages>({})\n  const userList = useUserMembershipList(auth)\n  const externalMemberList = useExternalMembershipList(username)\n  const userMembershipMutation = useUserMembershipMutation()\n  const user = userList?.find(v=>v.id==id)\n  const usernameDisable = user && user.is_guest===false\n  useEffect(()=>{\n    if (user){\n      setUsername(user.username)\n      setName(user.name)\n    }\n  }, [user?.id])\n  const _register = ()=>{\n    let newError:ErrorMessages = {};\n    if ((externalMemberList?.length || 0) >0 && !usernameDisable) newError.username = \"The username is already in use.\"\n    if (username.length < 10 || username.length > 64) newError.username = \"Set 10-64 characters.\"\n    if (name.length < 1 || name.length > 64) newError.name = \"Set 1-64 characters.\"\n    if (!/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{10,64}$/.test(password) && !(usernameDisable && password.length==0)) newError.password = \"Set 10-64 characters with a combination of letters/numbers/valid special characters.\"\n    if (password != checkPassword) newError.checkPassword = \"Incorrect between password and check password.\"\n    if (Object.keys(newError).length > 0){\n        setError(newError)\n        return\n    }\n    if (id){\n      userMembershipMutation.update({\n        id,\n        name,\n        username:usernameDisable?undefined:username,\n        is_guest:false,\n        password:password.length>0?password:undefined,\n      }).then(()=>{(id!=auth.user?.id || user?.is_guest) && back()})\n    }\n    else{\n      auth?.groupId && userMembershipMutation.create({\n          username,\n          name,\n          password,\n          is_guest:false,\n          is_staff:isStaff,\n          inviteGroupId:auth.groupId,\n\n      }).then(back)\n    }\n  }\n  const back = ()=>{\n    setModal(RegistrationModal, null)\n  }\n  return <ModalSection>\n    <View style={{justifyContent:'space-between', flex:1, width:'100%'}}>\n      <View style={{flex:1, width:'100%'}}>\n        <Text style={{fontSize:20}}>{usernameDisable?lang('Edit User'):lang('Create User')}</Text>\n        <View style={styles.separator} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />\n        <RowField name={lang('Username')} width={'60%'}>\n          {usernameDisable?<Text style={{fontSize:16}}>{username}</Text>:<CommonTextInput\n              value={username}\n              setValue={(text) => setUsername(text)}\n              keyboardType={'email-address'}\n          />}\n          <ErrorView message={error.username}/>\n        </RowField>\n        <RowField name={lang('Name')} width={'60%'}>\n          <CommonTextInput\n              value={name}\n              setValue={(text) => setName(text)}\n          />\n          <ErrorView message={error.name}/>\n        </RowField>\n        <RowField name={lang('Password')} width={'60%'}>\n          <CommonTextInput\n              value={password}\n              secureTextEntry\n              setValue={(text) => setPassword(text)}\n          />\n          <ErrorView message={error.password}/>\n        </RowField>\n        <RowField name={lang('Check Password')} width={'60%'}>\n          <CommonTextInput\n              value={checkPassword}\n              secureTextEntry\n              setValue={(text) => setCheckPassword(text)}\n          />\n          <ErrorView message={error.checkPassword}/>\n        </RowField>\n        {/* <RowField name={lang('Manager Permission')} width={'60%'}>\n          <View style={{flexDirection:'row'}}>\n            {[[lang('Yes'), true], [lang('No'), false]].map(([title, value])=><TextButton \n              key={title} title={title} textStyle={{fontSize:16, color, textDecorationLine:isStaff==value?'underline':'none'}} style={{borderRadius:20}} onPress={(\n              )=>setIsStaff(value)}/>)}\n          </View>\n        </RowField> */}\n      </View>\n      <View style={{width:'100%', flexDirection:'row'}}>\n        {id && <View style={{flexDirection:'row', justifyContent:'flex-start'}}>\n          <CommonButton title={lang('delete account')} style={{marginHorizontal:5}} textStyle={{color:'red'}} onPress={()=>userMembershipMutation.delete(id).then(back)}/>\n        </View>}\n        <View style={{flex:1, flexDirection:'row', justifyContent:'flex-end'}}>\n          <CommonButton title={lang('save')} onPress={_register}/>\n          <CommonButton title={lang('cancel')} style={{marginHorizontal:5}} onPress={back}/>\n        </View>\n      </View>\n    </View>\n  </ModalSection>\n};\n\nconst styles = StyleSheet.create({\n  form_error: {\n    height: 22,\n    width:'100%',\n  },\n  form_error_text:{\n    textAlignVertical:'center',\n    color:'red',\n    fontSize:13,\n  },\n  separator: {\n    marginBottom: 20,\n    height: 1,\n    width: '100%',\n  },\n});","import React from 'react'\nimport TextButton from \"./TextButton\"\nimport useAuthContext from \"../hooks/useAuthContext\"\nimport useResizeContext from '../hooks/useResizeContext'\nimport { View } from 'react-native'\nimport useModalsContext from '../hooks/useModalsContext'\nimport AlertModal from '../modals/AlertModal'\nimport useLangContext from '../hooks/useLangContext'\nimport useColorScheme from '../hooks/useColorScheme'\nimport Colors from '../constants/Colors'\n\ntype ButtonProps = {title:string, onPress:()=>void, windowType?:'landscape'|'portrait'}\n\nexport default (props:{extra?:ButtonProps[]})=>{\n    const { lang } = useLangContext()\n    const theme = useColorScheme()\n    const {auth, dispatch} = useAuthContext()\n    const { setModal } = useModalsContext()\n    const windowType = useResizeContext()\n    const defaultButtonProps:ButtonProps[] = [{title:lang('sign out'), onPress:()=>{\n        if (auth?.user?.is_guest){\n            setModal(AlertModal, {type:\"GUEST_LOGOUT\"})\n        }\n        else{\n            dispatch({type:\"LOGOUT_REQUEST\"})\n        }\n    }}]\n    const buttonProps = (props.extra?[...props.extra, ...defaultButtonProps]:defaultButtonProps).filter(v=>v.windowType==windowType || v.windowType == undefined)\n    return<View style={{flexDirection:'row'}}>\n        {buttonProps.map((v,k)=><TextButton key={k} {...v} textStyle={{color:Colors[theme].text}} color='#gray'/>)}\n    </View>\n}\n  ","import React, { useMemo } from 'react';\n\nimport { TextProps, StyleProp } from 'react-native';\nimport {View, Text } from './Themed'\nimport useResizeContext from '../hooks/useResizeContext';\n\ntype Props = {\n  name: string,\n  width?:any,\n  children: React.ReactNode\n  textStyle?: StyleProp<TextProps>\n}\n\nexport default function RowField(props:Props) {\n  const windowType = useResizeContext()\n  const rowStyle = useMemo(()=>windowType=='landscape'?\n    {flexDirection:'row', alignItems: 'center', justifyContent:'space-between'}:\n    {flexDirection:'column', alignItems:'flex-start'} as any\n  , [windowType])\n  return (\n    <View style={[{paddingVertical:windowType=='landscape'?15:5, width:'100%'}, rowStyle]}>\n        <Text style={[windowType=='landscape'?{flex:1}:{width:'100%'},{paddingHorizontal: 15, fontSize:16}, props.textStyle]}>{props.name}</Text>\n        <View style={[windowType=='landscape'?{flex:6}:{width:'100%'},{paddingHorizontal: 15}]}>\n          <View style={{width:props.width}}>\n            {props.children}\n          </View>\n        </View>\n    </View>\n  )\n}","import React from 'react';\nimport { TabView, SceneMap,NavigationState, SceneRendererProps, TabBar } from 'react-native-tab-view';\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport useLangContext from '../hooks/useLangContext';\nimport { TabViewRecord } from '../types';\n\n\nexport default (props:{tabs:TabViewRecord, tabBarPosition:\"top\"|\"bottom\", index?:number, onTab?:(index:number)=>void})=>{\n  const { lang } = useLangContext()\n  const [index, setIndex] = React.useState(props.index || 0);\n  const theme = useColorScheme()\n  const entries = Object.entries(props.tabs)\n  const onTab = props.onTab\n  const icons = Object.assign({}, ...entries.map(([k, v])=>({[k]:v.icon})))\n  return <TabView\n    renderTabBar={(props:SceneRendererProps & {navigationState: NavigationState<any>})=>{\n      return <TabBar\n        {...props}\n        indicatorStyle={{ backgroundColor: \"#2196F3\" }}\n        style={{ backgroundColor:Colors[theme].background }}\n        activeColor={Colors[theme].text}\n        inactiveColor={Colors[theme].text}\n        renderIcon={(scene)=>icons[scene.route.key]}\n        onTabPress={(scene)=>onTab?.(entries.findIndex(([k, v])=>k == scene.route.key))}\n      />\n    }}\n    navigationState={{ index, routes: entries.map(([k, v])=>({key:k, title:lang(v.title)}))}}\n    onIndexChange={setIndex}\n    renderScene={SceneMap(Object.assign({}, ...entries.map(([k, v])=>({[k]:v.component}))))}\n    tabBarPosition={props.tabBarPosition}\n  />\n}\n\n","import * as React from 'react';\nimport { View } from './Themed';\nimport { StyleSheet, StyleProp, ViewStyle, TextStyle, Pressable } from 'react-native';\nimport Colors from '../constants/Colors';\n\nexport type ItemParamList = {\n    outerContainerStyle?:StyleProp<TextStyle>\n    containerStyle?:StyleProp<ViewStyle>\n    bodyStyle?:StyleProp<ViewStyle>\n    children?: React.ReactNode\n    onPress?: ()=>void\n}\n\nexport default function CommonItem(props:ItemParamList){\n  // const [hover, setHover] = React.useState(false)\n  const [press, setPress] = React.useState(false)\n  return (\n    <Pressable\n      style={[styles.outerContainer ,props.outerContainerStyle, (press)?{backgroundColor:'rgb(242,242,242)'}:{}]}\n      onPressIn={()=>setPress(true)}\n      onPress={()=>props.onPress?.()}\n      onPressOut={()=>setPress(false)}\n      //  //@ts-ignore\n      //  onHoverIn={()=>setHover(true)}\n      //  onHoverOut={()=>setHover(false)}\n    >\n        <View style={[styles.container ,props.containerStyle]}>\n            <View style={[styles.bodyView, props.bodyStyle]}>\n                <>{props.children}</>\n            </View>\n      </View>\n    </Pressable>\n    )\n}\n\nconst styles = StyleSheet.create({\n  outerContainer:{\n    width:'100%',\n    maxWidth:1080,\n    alignItems:'stretch',\n  },  \n  container: {\n      marginHorizontal:20,\n      backgroundColor:'transparent'\n    },\n    bodyView:{\n      width: '100%',\n      padding: 10,\n      minHeight: 40,\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderBottomWidth:1,\n      borderColor:Colors.borderColor,\n      backgroundColor:'transparent'\n    }\n  });\n  ","import React, { useEffect } from 'react';\nimport Profile from '../components/Profile';\nimport useAuthContext from '../hooks/useAuthContext';\nimport useUserMembershipList from '../hooks/lists/useUserMembershipList';\nimport { useMessengerChannelMutation } from '../hooks/lists/useMessengerChannelList';\nimport CommonButton from '../components/CommonButton';\nimport { Channel } from '../types';\nimport { navigate } from '../navigation';\nimport useModalsContext from '../hooks/useModalsContext';\nimport { Text, View } from '../components/Themed';\nimport useLangContext from '../hooks/useLangContext';\nimport { Ionicons } from '../lib/@expo/vector-icons';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport { BottomSheet } from '../components/ModalSection';\nimport useModalEffect from '../hooks/useModalEffect';\n\nexport default function ProfileModal({id}:{id:number}) {\n  const { lang } = useLangContext()\n  const theme = useColorScheme()\n  const {auth} = useAuthContext()\n  const { setModal } = useModalsContext()\n  const userList = useUserMembershipList(auth)\n  const user = userList?.find(v=>v.id==id)\n  const isSelf = auth.user && user && (auth.user?.id==user?.id)\n  const channelMutation = useMessengerChannelMutation()\n  const back = ()=>{\n    setModal(ProfileModal, null)\n  }\n  useEffect(()=>{\n    if (!(id && user) && userList)\n      back()\n  }, [userList])\n  useModalEffect(back, [])\n  return user?<BottomSheet>\n    <View style={{flexDirection:'row', width:'100%'}}>\n      <View style={{flex:1, flexDirection:'row'}}>\n        <TouchableOpacity onPress={back}>\n          <Ionicons size={20} name=\"arrow-back\" color={Colors[theme].text}/>\n        </TouchableOpacity>\n      </View>\n      <View style={{flex:1}}>\n        <Text style={{fontSize:20, textAlign:'center'}}>{lang('profile')}</Text>\n      </View>\n      <View style={{flex:1}}/>\n    </View>\n    <View style={{marginBottom: 20, height: 1, width: '100%'}} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />\n    \n    <Profile username={user.username} name={user.name} userId={user.id} />\n    <CommonButton title={lang(isSelf?'Chat with me':'1:1 Chat')} onPress={()=>{\n      if(auth?.user?.id && auth.groupId){\n        const newChannel:Channel = {name:\"\", type:'messenger', owner:auth?.user?.id, group:auth.groupId, subowner:isSelf?undefined:user.id};\n        channelMutation.direct(newChannel).then(v=>navigate(\"Main\", {screen:\"ChatScreen\", params: {id:v.id}}))\n      }\n    }}/>\n  </BottomSheet>:<></>\n}\n","import React from 'react'\nimport { View, StyleSheet, Linking, Platform, TouchableOpacity  } from 'react-native'\nimport { } from 'react-native-gesture-handler'\nimport { AntDesign } from '../lib/@expo/vector-icons'; \nimport Colors from '../constants/Colors';\n\nconst openURL = Platform.OS=='web'?(url:string)=>{location.href=url}:Linking.openURL\n\nexport default (props:{theme:'light'|'dark'})=>{\n    return<View style={Styles.footer_buttons}>\n        <TouchableOpacity style={Styles.footer_button} onPress={()=>openURL(\"https://github.com/blacktokki/tokki-tok\")}>\n            <AntDesign name=\"github\" size={24} color={Colors[props.theme].iconColor} />\n        </TouchableOpacity>\n        <TouchableOpacity style={Styles.footer_button} onPress={()=>Linking.openURL(\"mailto:ydh051541@naver.com\")}>\n            <AntDesign name=\"mail\" size={24} color={Colors[props.theme].iconColor} />\n        </TouchableOpacity>\n    </View>\n}\n\nconst Styles = StyleSheet.create({\n      footer_buttons: {\n        width: '100%',\n        flexDirection: 'row',\n        justifyContent: 'flex-end',\n        paddingBottom: 20,\n        paddingRight: 20,\n      },\n      footer_button: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: 38,\n        height: 38,\n        marginHorizontal: 12,\n        borderWidth: 1,\n        borderColor: '#E7E7E7',\n        borderRadius: 60,\n      },\n})","import React, {useEffect, useState} from 'react';\nimport {\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n  StyleSheet,\n} from 'react-native';\nimport { StackScreenProps } from '@react-navigation/stack';\nimport useAuthContext from '../../hooks/useAuthContext';\nimport useLangContext from '../../hooks/useLangContext';\nimport ContractFooter from '../../components/ContractFooter';\n\nexport default function LoginScreen({\n  navigation, route\n}: StackScreenProps<any, 'Login'>) {\n  const { lang } = useLangContext()\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const {error, dispatch} = useAuthContext()\n  const _login = ()=>dispatch({type:'LOGIN_REQUEST', username, password})\n  useEffect(() => {\n    navigation.setOptions({\n      headerRight: undefined\n    });\n  }, [navigation]);\n\n  return (<View style={Styles.login_container}>\n    <View style={Styles.login_wrapper}>\n      <View style={Styles.form}>\n        {error && <View style={Styles.form_error}>\n          <Text style={Styles.form_error_text}>{lang(error)}</Text>\n        </View>}\n        <TextInput\n          style={Styles.form_input}\n          value={username}\n          placeholder={lang('Username')}\n          onChangeText={(text) => setUsername(text)}\n          autoCapitalize={'none'}\n          keyboardType={'email-address'}\n          onSubmitEditing={_login}\n        />\n        <TextInput\n          style={Styles.form_input}\n          value={password}\n          placeholder={lang('Password')}\n          secureTextEntry\n          onChangeText={(text) => setPassword(text)}\n          onSubmitEditing={_login}\n        />\n        <TouchableOpacity onPress={_login}>\n          <View style={Styles.button}>\n            <Text style={Styles.button_label}>{lang('Sign in')}</Text>\n          </View>\n        </TouchableOpacity>\n        <TouchableOpacity onPress={() => dispatch({type:\"LOGIN_GUEST\"})}>\n          <Text style={Styles.guest_footer_text}>\n            {lang(\"Sign in as guest\")}\n          </Text>\n        </TouchableOpacity>\n      </View>\n      <View style={Styles.login_social}>\n        <View style={Styles.login_social_separator}>\n          <View style={Styles.login_social_separator_line} />\n          <Text style={Styles.login_social_separator_text}>{'*'}</Text>\n          <View style={Styles.login_social_separator_line} />\n        </View>\n        <View style={Styles.login_social_buttons}>\n        </View>\n      </View>\n      {/* <>\n        <TouchableOpacity onPress={() => navigate(\"RegistrationScreen\")}>\n          <Text style={Styles.login_footer_text}>\n            {\"Don't have an account? \"}\n            <Text style={Styles.login_footer_link}>{'Sign up'}</Text>\n          </Text>\n        </TouchableOpacity>\n      </> */}\n    </View>\n    <ContractFooter theme='light'/>\n  </View>);\n};\n\nconst Styles = StyleSheet.create({\n    login_container: {\n      flex: 1,\n      backgroundColor: '#FFF',\n    },\n    login_header: {\n      alignItems: 'center',\n      paddingTop: 30,\n      paddingBottom: 50,\n      backgroundColor: '#208AEC',\n    },\n    login_header_logo: {\n      width: 220,\n      resizeMode: 'contain',\n    },\n    login_header_text: {\n      marginTop: 15,\n      color: '#f0f0f0',\n      fontSize: 16,\n    },\n    login_header_text_bold: {\n      color: '#fff',\n      fontWeight: 'bold',\n    },\n    login_wrapper: {\n      flex: 1,\n      justifyContent: 'space-between',\n      paddingTop: 40,\n      borderTopRightRadius: 12,\n      borderTopLeftRadius: 12,\n      backgroundColor: '#fff',\n      alignItems: 'center',\n    },\n    form: {\n      width: '100%',\n      maxWidth: 320,\n    },\n    form_error: {\n      height: 22,\n      width:'100%',\n    },\n    form_error_text:{\n      textAlignVertical:'center',\n      color:'red',\n      fontSize:13,\n    },\n    form_input: {\n      height: 44,\n      paddingHorizontal: 20,\n      marginBottom: 20,\n      backgroundColor: '#EDF0F7',\n      borderRadius: 50,\n    },\n    button: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: 44,\n      backgroundColor: '#0065A4',\n      borderRadius: 50,\n    },\n    button_label: {\n      color: '#fff',\n      fontSize: 16,\n    },\n    login_social: {\n      width: '100%',\n      maxWidth: 280,\n      marginTop: 20,\n    },\n    login_social_separator: {\n      flexDirection: 'row',\n      alignItems: 'center',\n    },\n    login_social_separator_line: {\n      flex: 1,\n      width: '100%',\n      height: 1,\n      backgroundColor: '#E0E0E0',\n    },\n    login_social_separator_text: {\n      marginHorizontal: 10,\n      color: '#808080',\n      fontSize: 16,\n    },\n    login_social_buttons: {\n      flexDirection: 'row',\n      justifyContent: 'center',\n      marginTop: 20,\n    },\n    login_social_button: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: 60,\n      height: 60,\n      marginHorizontal: 12,\n      borderWidth: 1,\n      borderColor: '#E7E7E7',\n      borderRadius: 60,\n    },\n    login_social_icon: {\n      width: 38,\n      height: 38,\n      resizeMode: 'contain',\n    },\n    login_social_facebook: {\n      backgroundColor: '#4267B2',\n      borderColor: '#4267B2',\n    },\n    login_footer_text: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      color: '#808080',\n      fontSize: 14,\n    },\n    guest_footer_text: {\n      flexDirection: 'row',\n      alignSelf: 'center',\n      color: '#808080',\n      fontSize: 15,\n      margin: 15\n    },\n    login_footer_link: {\n      color: '#208AEC',\n      fontSize: 15,\n      fontWeight: 'bold',\n    },\n  });\n  ","import React, { createContext, useContext } from \"react\"\nimport { SendJsonMessage } from \"react-use-websocket/dist/lib/types\";\nimport { WebSocketInternalProvider } from \"../../hooks/useWebsocketContext\";\n\nconst WebSocketContext = createContext<{lastJsonMessage:any, sendJsonMessage:SendJsonMessage }>({lastJsonMessage:undefined, sendJsonMessage:()=>{}});\n\nexport const WebSocketProvider = ({disable, children}:{disable?:boolean, children:React.ReactNode})=>{\n  return disable?<></>:<WebSocketInternalProvider path={'messenger/ws/rtc/'} Context={WebSocketContext} useBackground>\n    {children}\n  </WebSocketInternalProvider>\n}\n\nexport default ()=>{\n  const webSocketContext = useContext(WebSocketContext)\n  return webSocketContext\n}\n\n","import React, { useCallback, useRef, useState, useMemo } from \"react\";\n//@ts-ignore\nimport { RTCView, mediaDevices, RTCPeerConnection, MediaStream, RTCSessionDescription, RTCIceCandidate } from \"react-native-webrtc-web-shim\";\nimport {TURN_SERVER} from \"../../../constants/Envs\"\n\n\nconsole.log(TURN_SERVER?\"use turn server\": \"use stun server\")\n\nexport const peerConstraints = {\n\ticeServers: [TURN_SERVER?JSON.parse(TURN_SERVER):{urls: 'stun:stun.l.google.com:19302'}]\n};\n\nexport const sessionConstraints = {\n\tmandatory: {\n\t\tOfferToReceiveAudio: true,\n\t\tOfferToReceiveVideo: true,\n\t\tVoiceActivityDetection: true\n\t}\n};\n\nconst mediaConstraints = {audio:true, video:{framerate:30}}\n\n//@ts-ignore\nexport {MediaStream, RTCPeerConnection, RTCSessionDescription} from \"react-native-webrtc-web-shim\";\n\nconst onICEcandidate = (pc:typeof RTCPeerConnection, message:any)=>{\n\tconst _message = message.data.rtcMessage\n\t\tconst candidate = new RTCIceCandidate(_message);\n\t\tif (pc) {\n\t\t\tconsole.log(\"ICE candidate Added\");\n\t\t\tpc.addIceCandidate(candidate);\n\t\t}\n}\n\nconst sendICEcandidate = (event:any, sendMessage:(data:any)=>void, receiver:string, target:string) => {\n\t// When you find a null candidate then there are no more candidates.\n\t// Gathering of candidates has finished.\n\tif ( !event.candidate ) { return; };\n\t// Send the event.candidate onto the person you're calling.\n\t// Keeping to Trickle ICE Standards, you should send the candidates immediately.\n\tsendMessage({type:'ICEcandidate', receiver, data:{target, rtcMessage:event.candidate}})\n  }\n\nconst BAND_WIDTH = 8000\n\nconst optimizeSdp = (offerDescription:RTCSessionDescription)=>{\n\tvar arr = offerDescription.sdp.split('\\r\\n');\n\tarr.forEach((str:string, i:number) => {\n\t\tif (/^a=fmtp:\\d*/.test(str)) {\n\t\t\tarr[i] = str + `;x-google-max-bitrate=${BAND_WIDTH};x-google-min-bitrate=${BAND_WIDTH};x-google-start-bitrate=${BAND_WIDTH}`;\n\t\t} else if (/^a=mid:(0|video)/.test(str)) { // if with audio then 0=>1\n\t\t\tarr[i] += `\\r\\nb=AS:${BAND_WIDTH}`;\n\t\t}\n\t});\n  \treturn new RTCSessionDescription({\n    \ttype: offerDescription.type,\n    \tsdp: arr.join('\\r\\n'),\n  \t})\n}\n\nconst createOffer = async(pcRefCurrent:{pc?:typeof RTCPeerConnection, receiver:string}, sendMessage:(data:any)=>void, stream:typeof MediaStream, target:string, user?:{name:string})=>{\n\tstream && pcRefCurrent.pc.addStream( stream );\n\tconst offerDescription = optimizeSdp((await pcRefCurrent.pc.createOffer( sessionConstraints )));\n\tawait pcRefCurrent.pc.setLocalDescription( offerDescription );\n\tsendMessage({type:'call', receiver:pcRefCurrent.receiver, data:{target, name:user?.name, rtcMessage:offerDescription}})\n}\n\nexport const useLocalCam = (sendMessage:(data:any)=>void)=>{\n\tconst pcRef = useRef<Record<number,{pc:typeof RTCPeerConnection, receiver:string}>>({})\n\tconst [sender, setSender] = useState<string>()\n\tconst [_stream, setStream] = useState<MediaStream>()\n\tconst isPlay = useMemo(()=>_stream?true:false, [_stream])\n\tconst CustomRTCView = useCallback(React.memo(({style}:{style:any})=>(_stream?<RTCView stream={_stream} style={style} videoProps={{height:'100%'}} />:<></>)) , [_stream])\n\tconst start = useCallback(async(user:{name:string}, stream?:typeof MediaStream, mode?:'camera'|'display')=>{\n\t\tconsole.log(\"start\");\n\t\tif (!_stream || mode!==undefined) {\n\t\t\ttry {\n\t\t\t\tlet newStream:typeof MediaStream;\n\t\t\t\tif(mode == 'camera'){\n\t\t\t\t\tnewStream = await mediaDevices.getUserMedia(mediaConstraints)\n\t\t\t\t}\n\t\t\t\telse if (mode == 'display'){\n\t\t\t\t\tnewStream = await mediaDevices.getDisplayMedia(mediaConstraints)\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tnewStream = stream || await mediaDevices.getUserMedia(mediaConstraints).catch((e:any)=>mediaDevices.getDisplayMedia(mediaConstraints));\n\t\t\t\t}\n\t\t\t\tsetStream(newStream)\n\t\t\t\tObject.entries(pcRef.current).map(([k, v])=>{\n\t\t\t\t\tcreateOffer(v, sendMessage, newStream, 'guest', user)\n\t\t\t\t})\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e);\n\t\t\t}\n\t\t}\n\t}, [_stream])\n\tconst stop = useCallback(()=>{\n\t\tconsole.log(\"stop\");\n\t\tif(_stream){\n\t\t\t_stream.getTracks().map((track:any) => track.stop());\n\t\t\tsetStream(undefined)\n\t\t}\n\t}, [_stream])\n\treturn {\n\t\tstart,\n\t\tstop,\n\t\twebsocketOnMessage: async(response:any, user:{name:string})=>{\n\t\t\tlet type = response.type;\n\t\t\tif (type == 'connection'){\n\t\t\t\tsetSender(response.data.channel_name)\n\t\t\t}\n\t\t\tif (type == 'start' && response.data.target=='host'){\n\t\t\t  console.log('1 start')\n\t\t\t  const peerConnection = new RTCPeerConnection( peerConstraints );\n\t\t\t  peerConnection.addEventListener( 'icecandidate', (event:any) => sendICEcandidate(event, sendMessage, response.sender, 'guest'));\n\t\t\t  pcRef.current[response.sender] = {pc:peerConnection, receiver: response.sender}\n\t\t\t  createOffer(pcRef.current[response.sender], sendMessage, _stream, 'guest', user)\n\t\t\t}\n\t\t\t\n\t\t\tif (type == \"answer\" && response.data.target == 'host'){\n\t\t\t  console.log('3 answer')\n\t\t\t  const peerConnection = pcRef.current[response.sender].pc\n\t\t\t  const answerDescription = new RTCSessionDescription(response.data.rtcMessage);\n\t\t\t  await peerConnection.setRemoteDescription( answerDescription );\n\t\t\t  // const streams = pcRef.current.pc.getRemoteStreams()\n\t\t\t  // setMirrorStream(streams[streams.length - 1])\n\t\t\t}\n\t\t\tif (type == \"ICEcandidate\" && response.data.target=='host'){\n\t\t\t\tconst peerConnection = pcRef.current[response.sender].pc\n\t\t\t\tonICEcandidate(peerConnection, response)\n\t\t\t}\n\t\t},\n\t\tCustomRTCView,\n\t\tisPlay,\n\t\tsender,\n\t\t// renderMirrorView,\n\t}\n}\n\nexport const useRemoteCam = (sendMessage:(data:any)=>void)=>{\n\tconst pcRef = useRef<{pc?:RTCPeerConnection, receiver?:string, statsInterval?:any}>({})\n\tconst [user, setUser] = useState<{name:string}>()\n\tconst [_stream, setStream] = useState<MediaStream>()\n\tconst CustomRTCView = useCallback(React.memo((style:any)=>_stream?<RTCView stream={_stream} style={style} videoProps={{height:'100%'}} />:<></>), [_stream])\n\tconst isPlay = useMemo(()=>_stream?true:false, [_stream])\n\tconst start = useCallback((receiver:string)=>{\n\t\tconsole.log(\"start\");\n\t\tif (!pcRef.current.pc) {\n\t\t  pcRef.current.pc = new RTCPeerConnection( peerConstraints );\n\t\t  pcRef.current.receiver = receiver\n\t\t}\n\t\tif (!_stream){\n\t\t\tsendMessage({type:'start', receiver, data:{'target': 'host'}})\n\t\t}\n\t}, [_stream])\n\tconst stop = () => {\n\t\tconsole.log(\"stop\");\n\t\tif (pcRef.current.pc) {\n\t\t  // peerConnection._unregisterEvents();\n\t\t  setStream(undefined)\n\t\t  pcRef.current.pc.close();\n\t\t  pcRef.current.pc = undefined\n\t\t  pcRef.current.receiver = undefined\n\t\t  clearInterval(pcRef.current.statsInterval)\n\t\t}\n\t}\n\treturn {\n\t\tstart,\n\t\tstop,\n\t\twebsocketOnMessage: async(response:any)=>{\n\t\t\tlet type = response.type;\n\t\t\tif (type == 'start' && response.data.target=='guest' && response.sender == pcRef.current?.receiver){\n\t\t\t\tconsole.log('(remote)1 start')\n\t\t\t\tconst peerConnection = pcRef.current.pc\n\t\t\t\tsetUser({name: response.data.name})\n\t\t\t\tpeerConnection.addEventListener('icecandidate', (event:any) => sendICEcandidate(event, sendMessage, response.sender, 'host'));\n\t\t\t\tpeerConnection.addEventListener('iceconnectionstatechange', (e:any)=>{\n\t\t\t\t\tif (pcRef.current.pc.iceConnectionState == 'connected'){\n\t\t\t\t\t\tlet activeStream = false\n\t\t\t\t\t\tpcRef.current.statsInterval = setInterval(async()=>{\n\t\t\t\t\t\t\tconst stats = await pcRef.current.pc.getStats(null)\n\t\t\t\t\t\t\tlet statsOutput = \"\";\n\t\t\t\t\t\t\tlet framePerSecond = undefined\n\t\t\t\t\t\t\tstats.forEach((report:any) => {\n\t\t\t\t\t\t\t\tif (report.type === \"inbound-rtp\" && report.kind === \"video\") {\n\t\t\t\t\t\t\t\t\tObject.keys(report).forEach((statName) => {\n\t\t\t\t\t\t\t\t\t\tstatsOutput += `${statName}: ${report[statName]}\\n`;\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tframePerSecond = report.framesPerSecond\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tconsole.log(activeStream, framePerSecond)\n\t\t\t\t\t\t\tif (framePerSecond != undefined){\n\t\t\t\t\t\t\t\tactiveStream = true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (activeStream){\n\t\t\t\t\t\t\t\tstop()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconsole.log(new Date().toTimeString().split(' ')[0], statsOutput)\n\t\t\t\t\t\t}, 1000);\n\t\t\t\t\t}\n\t\t\t\t\telse if (pcRef.current.pc.iceConnectionState == 'failed'){\n\t\t\t\t\t\tstop()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t// peerConnection.addTransceiver('audio', {\n\t\t\t\t// \tdirection: 'recvonly'\n\t\t\t\t// });\n\t\t\t\tpeerConnection.addTransceiver('video', {\n\t\t\t\t\tdirection: 'recvonly'\n\t\t\t\t});\n\t\t\t\tawait createOffer({pc:pcRef.current.pc, receiver:response.sender}, sendMessage, _stream, 'host', user)\n\t\t\t}  \n\t\t\tif (type == \"answer\" && response.data.target=='guest' && response.sender == pcRef.current?.receiver){\n\t\t\t\tconsole.log('(remote)3 answer')\n\t\t\t\tconst answerDescription = new RTCSessionDescription(response.data.rtcMessage);\n\t\t\t\tawait pcRef.current.pc.setRemoteDescription( answerDescription );\n\t\t\t\tconst streams = pcRef.current.pc.getRemoteStreams()\n\t\t\t\tsetStream(streams[streams.length - 1])\n\t\t\t\tsendMessage({type:'end', receiver:pcRef.current.receiver, data:{}})\n\t\t\t}\n\t\t\tif (type == \"call\" && response.sender == pcRef.current?.receiver){\n\t\t\t  console.log('2 call')\n\t\t\t  const peerConnection = pcRef.current.pc\n\t\t\t  setUser({name:response.data.name})\n\t\t\t  if (!peerConnection)\n\t\t\t\treturn\n\t\t\t  peerConnection.addEventListener( 'icecandidate', (event:any) => sendICEcandidate(event, sendMessage, response.sender, 'host'));\n\t\t\t  const offerDescription = new RTCSessionDescription(response.data.rtcMessage);\n\t\t\t  await peerConnection.setRemoteDescription( offerDescription );\n\t\t\t  const answerDescription = await peerConnection.createAnswer( sessionConstraints );\n\t\t\t  await peerConnection.setLocalDescription( answerDescription );\n\t\t\t  sendMessage({type:'answer', receiver:pcRef.current.receiver, data:{target:'host', rtcMessage:peerConnection.localDescription}})\n\t\t\t  // Here is a good place to process candidates.\n\t\t\t  const streams = pcRef.current.pc.getRemoteStreams()\n\t\t\t  setStream(streams[streams.length - 1])\n\t\t\t}\n\t\t\tif (type == \"ICEcandidate\" && response.data.target=='guest' && response.sender == pcRef.current?.receiver)\n\t\t\t  onICEcandidate(pcRef.current.pc, response)\n\t\t},\n\t\tCustomRTCView,\n\t\tuser,\n\t\tisPlay\n\t}\n}","import {StyleSheet} from \"react-native\";\nexport {useLocalCam, useRemoteCam} from \"./p2p\"\n\nexport const camStyle = StyleSheet.create({\n\tcontainer:{ flex: 1},\n\tcam:{ flex: 1, height:'100%'},\n\tbottonContainer: {position:\"absolute\", bottom:0, justifyContent:'flex-end'},\n\tbuttonBar: { flexDirection: \"row\", justifyContent: \"space-around\" },\n\tlabel: {backgroundColor:'#0008', color:'white', paddingHorizontal:5},\n})","import React, { useEffect } from \"react\";\nimport {Button, View, Text} from \"react-native\";\nimport useWebsocketContext from \"./useWebsocketContext\";\nimport { useLocalCam, camStyle} from \"./webrtc\";\n\n\nexport default (props:{user?:{name:string}|null, mode?:'camera'|'display'|null})=>{\n  const {lastJsonMessage, sendJsonMessage} = useWebsocketContext()\n  const {start, stop, websocketOnMessage, CustomRTCView, isPlay} = useLocalCam(sendJsonMessage)\n  useEffect(()=>{\n    props.user && lastJsonMessage && websocketOnMessage(lastJsonMessage, props.user)\n  }, [lastJsonMessage, props.user])\n  useEffect(()=>{\n    if(props.mode && !isPlay){\n      props.user && start(props.user, undefined, props.mode)\n    }\n    else if(props.mode===null && isPlay){\n      stop()\n    }\n    return ()=>{isPlay && stop()}\n  }, [isPlay, props.user, props.mode])\n  return (\n    <View style={camStyle.container}>\n      <CustomRTCView style={camStyle.cam}/>\n      <View style={camStyle.bottonContainer}>\n        <View style={camStyle.buttonBar}>  \n        </View>\n        <View style={{flexDirection:'row'}}><Text style={camStyle.label}>{props.user?.name}</Text></View>\n        <View style={camStyle.buttonBar}>\n          {props.mode === undefined && !isPlay && <Button title=\"Start\" onPress={()=>props.user && start(props.user)} />}\n          {props.mode === undefined && isPlay && <Button title=\"Stop\" onPress={stop} />}\n        </View>\n      </View>\n    </View>\n  );\n}\n","import React, { useState, useEffect, } from \"react\";\nimport {Button,Text, TextInput, View} from \"react-native\";\nimport useWebsocketContext from \"./useWebsocketContext\";\nimport { useRemoteCam, camStyle} from \"./webrtc\";\n\nexport default (props:{receiver?:string})=>{\n  const [receiver, setReceiver] = useState('')\n  const {lastJsonMessage, sendJsonMessage} = useWebsocketContext()\n  const {start, stop, websocketOnMessage, CustomRTCView, isPlay, user} = useRemoteCam(sendJsonMessage)\n  useEffect(()=>{\n    lastJsonMessage && websocketOnMessage(lastJsonMessage)\n  }, [lastJsonMessage])\n  useEffect(()=>{\n    if(props.receiver){\n      start(props.receiver)\n    }\n    return ()=>stop()\n  }, [props.receiver])\n  return (\n    <View style={camStyle.container}>\n      <CustomRTCView style={camStyle.cam}/>\n      <View style={camStyle.bottonContainer}>\n        <View style={camStyle.buttonBar}>\n        </View>\n        <View style={{flexDirection:'row'}}>{\n          (props.receiver || isPlay)?\n          <Text style={camStyle.label}>{user?.name || 'loading...'}</Text>:\n          <>\n            <Text style={{borderWidth:1}}>Receiver:&nbsp;</Text>\n            <TextInput style={{borderWidth:1, flex:1}} value={receiver} onChangeText={setReceiver}/>\n          </> \n        }</View>\n        <View style={camStyle.buttonBar}>\n          {props.receiver === undefined && !isPlay && <Button title=\"Start\" onPress={()=>start(receiver)} />}\n          {props.receiver === undefined && isPlay && <Button title=\"Stop\" onPress={stop} />}\n        </View>\n      </View>\n    </View>\n  );\n}\n\n","import React, {useEffect, useState} from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { View as ThemedView } from '../../../components/Themed' \nimport Colors from '../../../constants/Colors';\nimport {default as useRtcContext, WebSocketProvider as RtcProvider} from \"../../../lib/react-native-webrtc/useWebsocketContext\";\nimport LocalCam from '../../../lib/react-native-webrtc/LocalCam';\nimport RemoteCam from '../../../lib/react-native-webrtc/RemoteCam';\nimport useResizeContext from '../../../hooks/useResizeContext';\nimport useAuthContext from '../../../hooks/useAuthContext';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport CommonButton from '../../../components/CommonButton';\nimport { Ionicons } from '../../../lib/@expo/vector-icons';\nimport useIsMobile from '../../../hooks/useIsMobile';\n\ntype VideoType = 'camera'|'display'|null\ntype VideoCallProps = {channel_id:number, setDisable:(disable:boolean)=>void, disable?:boolean}\n\n\nconst VideoView = (props:{\n  scale:string,\n  focusGuest?:string,\n  setFocusGuest:(focusGuest?:string)=>void\n  receiver?:string\n  children:React.ReactNode\n})=>{\n  return <View style={[{maxWidth:props.scale, maxHeight:props.scale, borderWidth:1, borderColor:Colors.borderColor, backgroundColor:'gray', flexDirection:'row', flexGrow:1}, (props.focusGuest == undefined || props.focusGuest == props.receiver)?{height:'100%'}:{maxWidth:0, height:0}]}>\n    <TouchableOpacity style={{flex:1}} containerStyle={{flex:1, justifyContent:'center'}} onPress={()=>props.setFocusGuest(props.focusGuest?undefined:props.receiver)}>\n    {props.children}\n    </TouchableOpacity>\n  </View>\n    \n  \n}\n\nconst VideoCallContainer = ({channel_id, disable, setDisable}:VideoCallProps)=>{\n  const {auth} = useAuthContext()\n  const isMobile = useIsMobile()\n  const [videoMode, setVideoMode] = useState<VideoType>(null)\n  const [guests, setGuests] = useState<string[]>([])\n  const [focusGuest, setFocusGuest] = useState<string>()\n  const windowType = useResizeContext()\n  const { lastJsonMessage, sendJsonMessage } = useRtcContext()\n  useEffect(()=>{\n    if(lastJsonMessage !=null){\n      if(lastJsonMessage['type']=='connection'){\n        sendJsonMessage({'type':'broadcast', 'data':{'channel_id':channel_id}})\n      }\n      if(lastJsonMessage['type']=='broadcast_guest' || lastJsonMessage['type']=='broadcast_host'){\n        setGuests([...guests, lastJsonMessage['sender']])\n      }\n      if(lastJsonMessage['type']=='broadcast_disconnect'){\n        const channel_name = lastJsonMessage['sender']\n        const exist = guests.find(v=>v == channel_name)\n        exist && setGuests(guests.filter(v=>v != channel_name))\n      }\n    }\n  }, [lastJsonMessage])\n  const scale = focusGuest?'100%':`${100 / Math.max(2, Math.ceil(Math.sqrt(guests.length + 1)))}%`\n  const toggleVideoMode = (mode:VideoType)=>{\n    setVideoMode(videoMode!=mode?mode:null)\n  }\n  return lastJsonMessage !==undefined ?\n    <ThemedView style={[\n      {aspectRatio:!disable?16/9:0, borderColor:Colors.borderColor, borderRadius:10},\n      windowType=='landscape'?{flexShrink:1, flexGrow:0, height:'100%', borderLeftWidth:1, paddingBottom:65}:{maxHeight:'36%', width:'100%', borderBottomWidth:1}\n    ]}>\n      <View style={{aspectRatio:focusGuest?undefined:16/9, backgroundColor:'white', flexWrap:'wrap', flexDirection:'row', width:'100%', height:'100%'}}>\n        {guests.map((receiver, i)=><VideoView scale={scale} focusGuest={focusGuest} setFocusGuest={setFocusGuest} receiver={receiver}>\n          <RemoteCam receiver={receiver}/>\n        </VideoView>\n        )}\n        <VideoView scale={scale} focusGuest={focusGuest} setFocusGuest={setFocusGuest} receiver={auth.user?.name}>\n          <LocalCam user={auth.user} mode={videoMode}/>\n        </VideoView>\n      </View>\n      <ThemedView style={[\n          {position:'absolute', alignItems:'center', justifyContent:'flex-end', width:'100%',flexDirection:'row'},\n          windowType=='landscape'?{bottom:0, paddingTop:15, paddingBottom:10, paddingHorizontal:19}:{backgroundColor:'transparent'}\n        ]}>\n        <CommonButton title={'⏺️'} style={{height:40, paddingTop:8}} onPress={()=>toggleVideoMode('camera')}/>\n        {!isMobile && <CommonButton title={'🖥️'} style={{height:40, paddingTop:8}} onPress={()=>toggleVideoMode('display')}/>}\n        <CommonButton title={''} style={{height:40, paddingTop:8}} onPress={()=>setDisable(true)}>\n          <Ionicons size={20} name=\"arrow-back\" color={'deepskyblue'}/>\n        </CommonButton>\n      </ThemedView>\n    </ThemedView>:\n  <></>\n  }\n  \nexport default React.memo(({channel_id, disable, setDisable}:VideoCallProps)=>{\n  return <RtcProvider disable={disable}>\n    <VideoCallContainer channel_id={channel_id} disable={disable} setDisable={setDisable}/>\n  </RtcProvider>\n})\n","import React, {useState} from \"react\"\nimport {View, TouchableOpacity} from 'react-native'\nimport { Text } from \"../../../components/Themed\";\nimport useUploadContext from \"../../../hooks/useUploadContext\";\n\nconst UploadTag = (props:{data:{filename:string, progress?:number}, index:number, isExpand:boolean, setExpand:(index?:number)=>void})=>{\n    return <View style={{backgroundColor:'lightgray', borderRadius:20, overflow:'hidden', margin:5}}>\n        <View style={{backgroundColor:'darkgray', position:'absolute', width:`${(props.data.progress || 0)*100}%`, height:'100%'}}/>\n        <View style={{paddingVertical:5, paddingHorizontal:5, flexDirection:'row'}}>\n            <Text>📤</Text>\n            <View style={{paddingHorizontal:5}}><Text>{props.data.filename}</Text></View>\n        </View>\n    </View>\n}\n\n\nexport default (props:{channel_id:number})=>{\n    const { upload } = useUploadContext()\n    const [expand, setExpand] = useState<number>()\n    const uploadData = upload[props.channel_id]\n    return <View style={{flexDirection:'row', paddingTop:5, paddingHorizontal:(uploadData?.length || 0)>0?20:0}}>\n        {uploadData?.map((f,i)=><UploadTag key={i} data={f} index={i} isExpand={i==expand} setExpand={setExpand}/>)}\n    </View>\n}","import React from 'react';\nimport { Editor } from '@tinymce/tinymce-react';\nimport { EditorProps } from '../../types';\nconst INIT = require('../../../web/editor-config')\nconst PATH = process.env.PUBLIC_URL + '/tinymce/tinymce.min.js'\n\nexport default (props:EditorProps) => {\n\treturn <Editor\n        tinymceScriptSrc={PATH}\n        onInit={(e, editor) => {props.onReady?.()}}\n        onEditorChange={props.setValue}\n        init={{\n          plugins: INIT.plugins,\n          toolbar: INIT.toolbar,\n          height: '100%',\n          skin: props.theme=='light'?'oxide':'oxide-dark',\n          content_css: props.theme=='light'?'default':'dark',\n          menubar: false,\n          branding: false,\n          statusbar: false,\n          block_formats: '제목1=h2;제목2=h3;제목3=h4;본문=p;',\n          fontsize_formats: '11pt 14pt 18pt 24pt',\n        }}\n        value={props.value}\n    />\n};\n","import React, { useState, useEffect } from 'react';\nimport { View } from 'react-native';\nimport Editor from '../lib/tinymce/Editor';\n// import Editor from '../lib/tinymce/EditorView';\nimport { EditorProps } from '../types';\n\nexport default (props:EditorProps & {active:boolean, children?:React.ReactNode}) => {\n\tconst [ready, setReady] = useState<boolean>(false)\n  useEffect(()=>{\n    if(!props.active)\n      setReady(false)\n  }, [props.active])\n  return props.active?(\n        <View style={{flex:1, height:'100%'}}>\n        {!ready && props.children}\n    \t  <Editor\n          theme={props.theme}\n          value={props.value}\n          setValue={props.setValue}\n          onReady={()=>{\n            if(!ready){\n              setReady(true); props.onReady?.()\n            }\n          }}/>\n      </View>\n    ):<>{props.children}</>;\n};\n","import React from \"react\"\nimport CommonSection from \"../../../components/CommonSection\"\nimport Colors from \"../../../constants/Colors\"\nimport useColorScheme, { setColorScheme } from \"../../../hooks/useColorScheme\"\nimport { StyleSheet, Text, View} from 'react-native';\nimport useLangContext from \"../../../hooks/useLangContext\";\nimport { useColorScheme as useConfigColorScheme} from 'react-native-appearance';\nimport useFirebaseContext from \"../../../hooks/useFirebaseContext\";\nimport TextButton from \"../../../components/TextButton\";\nimport useModalsContext from \"../../../hooks/useModalsContext\";\nimport RegistrationModal from \"../../../modals/RegistrationModal\";\nimport useAuthContext from \"../../../hooks/useAuthContext\";\n\n\nconst ConfigSection = ({title, children}:{title:string, children?: React.ReactNode})=>{\n  const theme = useColorScheme()\n  const color = Colors[theme].text\n  return <CommonSection bodyStyle={{alignItems:'flex-start', backgroundColor:theme=='light'?'transparent':\"black\"}}>\n    <Text style={{fontSize:20, color, fontWeight:'600'}}>{title}</Text>\n    {children}\n  </CommonSection>\n}\n\nexport default ()=>{\n  const { lang, locale, setLocale } = useLangContext()\n  const { setModal } = useModalsContext()\n  const {auth} = useAuthContext()\n  const theme = useColorScheme()\n  const configTheme = useConfigColorScheme()\n  const {enable:noti, setEnable:setNoti} = useFirebaseContext()\n  const color = Colors[theme].text\n  return <>\n    <ConfigSection title={lang('* Notification Settings')}>\n      <View style={{flexDirection:'row'}}>\n        {[[lang('On'), true], [lang('Off'), false]].map(([title, n])=><TextButton\n          key={title} title={title || ''} textStyle={{fontSize:16, color, textDecorationLine:noti==n?'underline':'none'}} style={{borderRadius:20}} onPress={()=>{setNoti(n)}}/>)}\n      </View>\n    </ConfigSection>\n    <ConfigSection title={lang('* Language Settings')}>\n    <View style={{flexDirection:'row'}}>\n        {[[lang('Auto'), 'auto'], ['한국어', 'ko'], ['English', 'en']].map(([title, l])=><TextButton \n          key={title} title={title || ''} textStyle={{fontSize:16, color, textDecorationLine:locale==l?'underline':'none'}} style={{borderRadius:20}} onPress={()=>setLocale(l)}/>)}\n      </View>\n    </ConfigSection>\n    <ConfigSection title={lang('* Skin Settings')}>\n      <View style={{flexDirection:'row'}}>\n        {[[lang('Auto'), 'no-preference'], [lang('Light'), 'light'], [lang('Dark'), 'dark']].map(([title, colorScheme])=><TextButton \n          key={title} title={title} textStyle={{fontSize:16, color, textDecorationLine:configTheme==colorScheme?'underline':'none'}} style={{borderRadius:20}} onPress={(\n            )=>setColorScheme(colorScheme)}/>)}\n      </View>\n    </ConfigSection>\n    {!auth.user?.is_guest && <CommonSection bodyStyle={{alignItems:'flex-start', backgroundColor:theme=='light'?'transparent':\"black\"}}>\n      <TextButton title={lang('> Account Settings')} textStyle={{fontSize:20, color}} style={{paddingLeft:0, borderRadius:20}} onPress={()=>setModal(RegistrationModal, {id:auth.user?.id})}/>\n    </CommonSection>}\n  </>\n}","import React, {useState, useEffect, useLayoutEffect, useMemo} from 'react';\nimport { StackScreenProps } from '@react-navigation/stack';\nimport { StyleSheet, View, ScrollView} from 'react-native';\nimport { Text as StyledText } from 'react-native-paper';\nimport { Text } from '../../../components/Themed'\nimport useResizeContext from '../../../hooks/useResizeContext';\nimport TabView from '../../../components/TabView';\nimport HeaderRight from '../../../components/HeaderRight';\nimport TextButton from '../../../components/TextButton';\nimport Colors from '../../../constants/Colors';\nimport useColorScheme  from '../../../hooks/useColorScheme';\nimport useModalsContext from '../../../hooks/useModalsContext';\nimport ChannelEditModal from '../../../modals/ChannelEditModal';\nimport useLangContext from '../../../hooks/useLangContext';\nimport ContractFooter from '../../../components/ContractFooter';\nimport { TabViewRecord } from '../../../types';\nimport useAuthContext from '../../../hooks/useAuthContext';\nimport useUserMembershipList from '../../../hooks/lists/useUserMembershipList';\nimport { FontAwesome, Ionicons, MaterialCommunityIcons, SimpleLineIcons } from '../../../lib/@expo/vector-icons';\nimport { useMessengerChannelSorted } from '../../../hooks/lists/useMessengerChannelList';\nimport CommonItem from '../../../components/CommonItem';\nimport MemberItem from '../../../components/MemberItem';\nimport ProfileModal from '../../../modals/ProfileModal';\nimport { navigate } from '../../../navigation';\nimport CommonSection from '../../../components/CommonSection';\nimport ConfigSections from './ConfigSections';\nimport Avatar, { avatarFromChannel } from '../../../components/Avatar';\nimport RegistrationModal from '../../../modals/RegistrationModal';\n\nconst MemberTabView = ()=>{\n  const {auth} = useAuthContext()\n  const theme = useColorScheme()\n  const { setModal } = useModalsContext()\n  const userList = useUserMembershipList(auth)\n  const memberItem = React.useMemo(\n      ()=>userList && userList.map((item, index)=><MemberItem key={index} member={item} onPress={()=>setModal(ProfileModal, {id:item.id})}/>), [userList])\n  return <ScrollView style={{flex:1, backgroundColor:Colors[theme].background}}>\n      {memberItem}\n  </ScrollView>\n}\n\nconst MessengerTabView = ()=>{\n  const {auth} = useAuthContext()\n  const channelList = useMessengerChannelSorted(auth)\n  const theme = useColorScheme()\n\n  const today = (new Date()).toISOString().slice(0, 10)\n  return <ScrollView style={{flex:1, backgroundColor:Colors[theme].background}}>\n      {channelList?.map((item, index)=>{\n          const {avatar, name} = avatarFromChannel(item, auth.user)\n          const date = item.last_message?.created.slice(0,10)\n          const content = item.last_message?.preview_content || item.last_message?.content || ''\n          return <CommonItem key={index} bodyStyle={{flexDirection:'row', justifyContent:'space-between'}} onPress={()=>navigate(\"ChatScreen\", {id:item.id})}>\n              <View style={{flexDirection:'row', flexShrink:1}}>\n                  {avatar?\n                    <View style={{ marginRight:20}}>\n                      <Avatar name={avatar.name} size={44} userId={avatar.id}/>\n                    </View>:\n                    <FontAwesome size={40} color={Colors[theme].iconColor} style={{ marginBottom: -3, marginRight:20 }} name='users'/>}\n                  <View>\n                      <View style={{flexDirection:'row'}}>\n                          <Text style={{fontSize:18}}>{name}</Text>\n                          <Text style={{fontSize:18, opacity: 0.4, paddingLeft:5}}>{item.member_count}</Text>\n                      </View>\n                      <Text style={{fontSize:16, opacity: 0.4}}>{content.replaceAll('\\n', ' ')}</Text>\n                  </View>\n              </View>\n              <View>\n                  <Text style={{fontSize:14, opacity: 0.4, textAlign:'right'}}>{date==today?item.last_message?.created.slice(11,16):date}</Text>\n                  <Text style={{fontSize:14, textAlign:'right'}}>{item.unread_count?item.unread_count:' '}</Text>\n              </View>\n          </CommonItem>\n      })}\n  </ScrollView>\n}\n\n\nconst ConfigTabView = ()=>{\n  const theme = useColorScheme()\n  return <ScrollView style={{flex:1, backgroundColor:Colors[theme].background}}>\n    <ConfigSections/>\n  </ScrollView>\n}\n\nconst getBottomTabs = (theme:'light'|'dark')=>{\n  const color = Colors[theme].iconColor\n  return {\n    OneTab:{\n        title:'member',\n        component:MemberTabView,\n        icon:<MaterialCommunityIcons size={32} color={color} style={{ marginBottom: -3 }} name='account'/>,\n    },\n    TwoTab:{\n        title:'chat',\n        component:MessengerTabView,\n        icon:<Ionicons size={30} color={color} style={{ marginBottom: -3 }} name='chatbox'/>\n    },\n    // ThreeTab:{\n    //     title:'board',\n    //     component:()=><></>,\n    //     icon:<></>\n    // },\n    FourTab:{\n        title:'config',\n        component:ConfigTabView,\n        icon:<SimpleLineIcons size={30} color={color} style={{ marginBottom: -3 }} name='options'/>\n    }\n  } as TabViewRecord\n}\n\n\nexport default function HomeScreen({navigation, route}: StackScreenProps<any, 'Home'>) {\n  const { lang, locale } = useLangContext()\n  const windowType = useResizeContext();\n  const theme = useColorScheme()\n  const { setModal } = useModalsContext()\n  const {auth} = useAuthContext()\n  const [ home, setHome ] = useState(windowType == 'landscape')\n  const color = Colors[theme].text\n  const options = [\n    {title:lang('member'), headerRight:()=><HeaderRight extra={[{title:lang('create'), onPress:()=>setModal(RegistrationModal, auth.user?.is_guest?{id:auth.user.id}:{})}]}/>},\n    {title:lang('chat'), headerRight:()=><HeaderRight extra={[{title:lang('create'), onPress:()=>setModal(ChannelEditModal, {type:'messenger'})}]}/>},\n    // {title:'board', headerRight:()=><HeaderRight extra={[{title:'create', onPress:()=>setModal(ChannelEditModal, props:{type:'board'}}) }]}/>},\n    {title:lang('config'), headerRight:()=><HeaderRight/>}\n  ]\n  \n  useLayoutEffect(() => {\n    const index = route?.params?.tab | 0\n    navigation.setOptions(windowType == 'portrait'?options[index]:{\n      title: lang('home'),\n      headerRight: ()=><HeaderRight/>\n    });\n  }, [navigation, route, windowType, locale]);\n  useEffect(()=>{\n    setHome(windowType == 'landscape')\n  }, [windowType])\n  return home?\n    <ScrollView contentContainerStyle={{flex:1, alignItems:'center'}}>\n      <View style={{flexGrow:1, width:'80%', marginTop:72}}>\n        <StyledText style={{fontSize:32, color}}>Tokki Tok</StyledText>\n        <View style={{backgroundColor:Colors.borderColor, height:1, width:'100%'}}/>\n        {/* <Text style={{fontSize:20, color:'gray'}}>Welcome! This is a messenger for teams.</Text>*/}\n        <View style={{height:24}}/>\n        <CommonSection bodyStyle={{alignItems:'flex-start', backgroundColor:theme=='light'?'transparent':\"black\"}}>\n          <TextButton title={lang('+ New chat')} textStyle={{fontSize:20, color}} style={{paddingLeft:0, borderRadius:20}} onPress={()=>setModal(ChannelEditModal, {type:'messenger'})}/>\n        </CommonSection>\n        <ConfigSections/>\n      </View>\n      <ContractFooter theme={theme}/>\n    </ScrollView>:\n    <TabView tabs={getBottomTabs(theme)} tabBarPosition=\"bottom\" index={parseInt(route.params?.['tab'] || 0)} onTab={(index)=>{navigation.setParams({tab:index})}}/>\n}\n\n","import LoginScreen from \"./main/LoginScreen\";\nimport ChatScreen from \"./main/ChatScreen\";\nimport HomeScreen from \"./main/HomeScreen\";\n// import BoardScreen from \"../lib/blacktokki-board/BoardScreen\";\n// import BoardEditScreen from \"../lib/blacktokki-board/BoardEditScreen\";\nimport { Screens } from \"../types\";\nimport DemoScreen from \"./main/DemoScreen\";\n\nexport const main = {\n    HomeScreen:{\n        title:'home',\n        component:HomeScreen,\n        path:'home',\n    },\n    ChatScreen:{\n        title:'chat',\n        component:ChatScreen,\n        path:'chat'\n    },\n    // BoardScreen:{\n    //     title:'board',\n    //     component:BoardScreen,\n    //     path:'board'\n    // },\n} as Screens\n\nexport const login = {\n    LoginScreen:{\n        path: 'login',\n        title: 'Sign in',\n        component:LoginScreen\n    },\n    DemoScreen:{\n        title:'',\n        component:DemoScreen,\n        path:'demo'\n    }\n} as Screens\n\nexport const modal = {\n    // BoardEditScreen:{\n    //     title:'board',\n    //     component:BoardEditScreen,\n    //     path:'modal/board'\n    // },\n} as Screens","import React, { useEffect, useLayoutEffect, useMemo, useRef, useState} from 'react';\nimport { StackScreenProps } from '@react-navigation/stack';\nimport { Platform, View } from 'react-native';\nimport { TextInput } from 'react-native-gesture-handler';\nimport CommonButton from '../../../components/CommonButton';\nimport { useMessengerContentMutation } from '../../../hooks/lists/useMessengerContentList';\nimport useAuthContext from '../../../hooks/useAuthContext';\nimport HeaderRight from '../../../components/HeaderRight';\nimport useMessengerMemberList from '../../../hooks/lists/useMessengerMemberList';\nimport Colors from '../../../constants/Colors';\nimport useColorScheme from '../../../hooks/useColorScheme';\nimport { View as ThemedView } from '../../../components/Themed' \nimport useMessengerChannelList from '../../../hooks/lists/useMessengerChannelList';\nimport useIsMobile from '../../../hooks/useIsMobile';\nimport { avatarFromChannel } from '../../../components/Avatar';\nimport VideoCallSection from './VideoCallSection';\nimport useResizeContext from '../../../hooks/useResizeContext';\nimport useModalsContext from '../../../hooks/useModalsContext';\nimport InviteModal from '../../../modals/InviteModal';\nimport DateTimePickerModal from '../../../modals/DateTimePickerModal'\nimport useLangContext from '../../../hooks/useLangContext';\nimport { Entypo } from '../../../lib/@expo/vector-icons';\nimport TimerTags, { timerFormat } from './TimerTags';\nimport ChannelEditModal from '../../../modals/ChannelEditModal';\nimport UploadTags from './UploadTags';\nimport Messages from './Messages';\nimport Editor from '../../../components/Editor';\n\n\nfunction uploadFile(){\n  return new Promise<Blob|undefined>((resolve, reject)=>{\n    if (Platform.OS == 'web'){\n      var input = document.createElement('input');\n      input.type = 'file';\n      input.onchange = e => { \n        resolve((e.target as any).files[0])\n      }\n      input.onabort = reject\n      input.onerror = reject\n      input.click();\n    }\n    else\n      resolve(undefined)\n  })\n}\n\nexport default function ChatScreen({navigation, route}: StackScreenProps<any, 'Chat'>) {\n  const { lang, locale } = useLangContext()\n  const isMobile = useIsMobile()\n  const channel_id = route?.params?.id\n  const inputRef = useRef<TextInput>(null)\n  const {auth} = useAuthContext()\n  const { setModal } = useModalsContext()\n  const channel = useMessengerChannelList(auth)?.find(v=>v.id==parseInt(channel_id))\n  const channelAvatar = channel?avatarFromChannel(channel, auth.user):undefined\n  const memberList = useMessengerMemberList(channel_id)\n  const member_id = useMemo(()=>memberList?.find(v=>v.user == auth.user?.id)?.id, [auth, memberList])\n  const windowType = useResizeContext()\n  const [value, setValue] = useState('')\n  const [editorValue, setEditorValue] = useState('')\n  const [timer, setTimer] = useState<string>()\n  const [autoFocus, setAutoFocus] = useState<boolean|null>(null)\n  const [videoMode, setVideoMode] = useState<boolean>(false)\n  const [bottomTab, setBottomTab] = useState<boolean>(false)\n  const [isEditor, setIsEditor] = useState<boolean>(false)\n  const [messageEvent, sendToScreen] = useState<{value:string, editorValue:string}>()\n  const valueLines = useMemo(()=>bottomTab?1:value.split(\"\\n\").length, [value, bottomTab])\n\n  const theme = useColorScheme()\n  const postValue = ()=>{\n    if (value.length>0){\n      if(isEditor){\n        contentMutation.create({channel:channel_id, user:auth.user?.id, content:'', timer, editor: {title:value, content:editorValue}})\n      }\n      else{\n        contentMutation.create({channel:channel_id, user:auth.user?.id, content:value, timer})\n      }\n      setTimer(undefined)\n      setBottomTab(false)\n      setValue('')\n      setAutoFocus(true)\n      if(isEditor){\n        setEditorValue('')\n        setIsEditor(false)\n      }\n    }\n  }\n  useEffect(()=>{\n    if(messageEvent){\n      setIsEditor(false)\n      setValue(value.concat(value.length>0?\"\\n\":\"\", messageEvent.value))\n      setEditorValue(editorValue.concat(\"\\r\\n\", messageEvent.editorValue))\n      sendToScreen(undefined)\n      setIsEditor(true)\n    }\n  }, [messageEvent, value, editorValue])\n  const contentMutation = useMessengerContentMutation()\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      headerRight: ()=> <HeaderRight extra={[\n        {title:lang('invite'), onPress:()=>setModal(InviteModal, {id:channel_id})},\n        {title:lang('setting'), onPress:()=>setModal(ChannelEditModal, {id:channel_id, type:'messenger', member_id})}\n      ]}/>,\n      title: channelAvatar?.name,\n      headerShown:!(windowType=='portrait' && isEditor)\n    });\n  }, [navigation, route, member_id, locale, windowType, isEditor]);\n\n  const back = ()=>{\n    if(navigation.canGoBack())\n        navigation.goBack()\n      else{\n        navigation.navigate('HomeScreen', {tab:2})\n      }\n  }\n  const onKeyPress = (e:any) => {\n    if (!isMobile){\n      const event = e as KeyboardEvent;\n        if (!event.shiftKey && event.key === \"Enter\"){\n          postValue()\n          event.preventDefault()\n      }\n    }\n  }\n  useEffect(()=>{\n    setModal(null, null)\n    if (!channel_id)\n      back()\n  }, [route])\n  useEffect(()=>{\n    if (memberList===null || (memberList!=undefined && memberList.find(v=>v.user==auth.user?.id)==undefined))\n      back()\n  }, [memberList])\n  useEffect(()=>{\n    if(autoFocus){\n      (inputRef.current as any).focus?.()\n      setAutoFocus(false)\n    }\n  }, [autoFocus])\n  useEffect(()=>{\n    if (autoFocus==null && !isMobile){\n      const timeout = setTimeout(()=>setAutoFocus(true), 500)\n      return ()=>clearTimeout(timeout)\n    }\n  })\n  return <View style={[\n    {flex:1, alignItems:'center'},\n    windowType=='landscape'?{flexDirection:'row-reverse', minWidth:480}:{flexDirection:'column'}\n  ]}>\n    <VideoCallSection channel_id={channel_id} setDisable={(d)=>setVideoMode(!d)} disable={!videoMode}/>\n    <View style={[videoMode?{flexShrink:1}:{flex:1}, windowType=='landscape'?{minWidth:320, height:'100%'}:{width:'100%'}]}>\n      <Messages channel_id={channel_id} auth={auth} reverse sendToScreen={sendToScreen}/>\n      <View style={{position:'absolute', flexDirection:'row'}}>\n        <UploadTags channel_id={channel_id}/>\n        <TimerTags channel_id={channel_id}/>\n      </View>\n      <ThemedView style={[{bottom:0, width:'100%', paddingTop:15, paddingBottom:10, paddingHorizontal:19}, isEditor?{height:windowType=='landscape'?'50%':'100%'}:{}]}>\n        <View style={{alignItems:'center', width:'100%',flexDirection:'row'}}>\n          <CommonButton title={''} style={{height:'100%', paddingTop:8, borderTopRightRadius:0, borderBottomRightRadius:0, justifyContent:'center'}} onPress={()=>{isEditor?setIsEditor(false):setBottomTab(!bottomTab)}}>\n            <View style={{top:-2}}>\n              <Entypo name={isEditor || bottomTab?\"cross\":\"plus\"} size={24} color={Colors[theme].text}/>\n            </View>\n          </CommonButton>\n          {timer && <CommonButton style={{height:'100%', paddingTop:8, borderRadius:0}} title={`⌚${timerFormat(timer)}`} onPress={()=>{setModal(DateTimePickerModal, {datetime:timer, callback:(datetime:string)=>setTimer(datetime)});setBottomTab(false)}}/>}\n          <TextInput\n              ref={inputRef}\n              value={value} \n              onChangeText={setValue}\n              onKeyPress={onKeyPress}\n              style={{flex:1, borderWidth:1, minHeight:41, borderColor:Colors.borderColor, backgroundColor:Colors[theme].background, color:Colors[theme].text, paddingVertical:1, paddingHorizontal:3}}\n              onFocus={()=>setBottomTab(false)}\n              multiline \n              numberOfLines={valueLines}/>\n          <CommonButton style={{height:'100%', paddingTop:8, borderTopLeftRadius:0, borderBottomLeftRadius:0, justifyContent:'center'}} title={'💬'} onPress={postValue}/>\n        </View>\n        <Editor theme={theme} active={isEditor} value={editorValue} setValue={setEditorValue} onReady={()=>setBottomTab(false)}/>\n        {bottomTab && <View style={{alignItems:'center', width:'100%', flexDirection:'row', paddingTop:15, paddingBottom:5}}>\n          <CommonButton style={{height:80, flex:1, justifyContent:'center', marginRight:15}} title={`📤\\n ${lang('File')}`} onPress={()=>uploadFile().then(f=>{contentMutation.create({channel:channel_id, user:auth.user?.id, content:'', file:f});setBottomTab(false)})}/>\n          <CommonButton style={{height:80, flex:1, justifyContent:'center', marginRight:15}} title={`✏️\\n ${lang('Editor')}`} onPress={()=>{setIsEditor(!isEditor); isEditor && setBottomTab(false)}}/>\n          <CommonButton style={{height:80, flex:1, justifyContent:'center', marginRight:15}} title={`⌚\\n ${lang('Timer')}`} onPress={()=>{setModal(DateTimePickerModal, {datetime:timer, callback:(datetime:string)=>setTimer(datetime)});setBottomTab(false)}}/>\n          <CommonButton style={{height:80, flex:1, justifyContent:'center'}} title={`📹\\n ${lang('Video Call')}`} onPress={()=>{setVideoMode(!videoMode);setBottomTab(false)}} disabled={videoMode}/>\n        </View>}\n      </ThemedView>\n    </View>\n  </View>\n}","import React, { useLayoutEffect } from 'react';\n\nimport { StackScreenProps } from '@react-navigation/stack';\nimport useAuthContext from '../../hooks/useAuthContext';\n\nexport default function DemoScreen({navigation}: StackScreenProps<any, 'Demo'>) {\n    const {dispatch} = useAuthContext()\n    useLayoutEffect(() => {\n        navigation.setOptions({headerRight: undefined});\n        dispatch({type:\"LOGIN_GUEST\"})\n    }, []);\n  return <></>\n};","import React from 'react';\nimport useAuthContext from '../hooks/useAuthContext';\nimport CommonButton from '../components/CommonButton';\nimport useModalsContext from '../hooks/useModalsContext';\nimport { Text, View } from '../components/Themed';\nimport useLangContext from '../hooks/useLangContext';\nimport { BottomSheet } from '../components/ModalSection';\nimport useModalEffect from '../hooks/useModalEffect';\n\n\nexport default function AlertModal({type}:{type:string}) {\n  const { lang } = useLangContext()\n  const { setModal } = useModalsContext()\n  const {dispatch} = useAuthContext()\n  const back = ()=>{\n    setModal(AlertModal, null)\n  }\n  const messages = {\n    \"GUEST_LOGOUT\":{\n      message: 'Guest users cannot reconnect after logging out. Please create an account or log in.',\n      title: 'sign out',\n      onPress: ()=>dispatch({type:\"LOGOUT_REQUEST\"})\n    }\n  } as Record<string, {message:string, title:string, onPress:()=>void}>\n\n  useModalEffect(back, [])\n  return <BottomSheet>\n    <Text>{lang(messages[type].message)}</Text>\n    <View style={{width:'100%', flexDirection:'row', justifyContent:'flex-end'}}>\n      <CommonButton title={lang(messages[type].title)} onPress={messages[type].onPress}/>\n      <CommonButton title={lang('cancel')} onPress={()=>back()}/>\n    </View>\n  </BottomSheet>\n}\n","import { useQuery } from \"react-query\";\nimport { getExternalMembershipList } from \"../../services\";\n\nexport default function useExternalMembershipList(keyword?:string){\n  const { data } = useQuery([\"UserMembershipList\", keyword] , async()=>keyword?(await getExternalMembershipList(keyword)):[])\n  return data\n}","import React from 'react';\nimport { StyleProp, TextStyle } from 'react-native';\nimport { CustomTextInputProps } from '../types';\nimport CommonTextInput from './CommonTextInput';\nimport RowField from './RowField';\n\nexport default function TextField(props:CustomTextInputProps & {name: string, width?:any, textStyle?:StyleProp<TextStyle>}) {\n  return (\n    <RowField name={props.name} width={props.width} textStyle={props.textStyle}>\n      <CommonTextInput {...props} />\n   </RowField>\n  )\n}","import React, { useState } from 'react';\nimport { TextInput } from 'react-native';\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport { CustomTextInputProps } from '../types';\n\nexport default (props:CustomTextInputProps)=>{\n    const [contentHeight, setContentHeight] = useState<number>()\n    const minHeight = props.minHeight || 30\n    const theme = useColorScheme()\n    return <TextInput style={[{\n            borderColor:'#d0d7de', \n            fontSize:16, \n            borderWidth:1, \n            borderRadius:6, \n            paddingHorizontal:10, \n            paddingVertical:3, \n            backgroundColor:Colors[theme].background,\n            color:Colors[theme].text,\n            height:props.multiline?contentHeight:minHeight,\n        }, props.style]}\n        placeholder={props.placeholder}\n        editable={!props.disabled} \n        keyboardType={props.keyboardType}\n        secureTextEntry={props.secureTextEntry}\n        value={props.value}\n        onChangeText={props.setValue}\n        onContentSizeChange={props.multiline?(e) => setContentHeight(Math.max(e.nativeEvent.contentSize.height, minHeight) + 2):undefined}\n        onBlur={()=>props.onBlur?.(props.value)}\n        onEndEditing={()=>props.onEndEditing?.(props.value)}\n        multiline={props.multiline}\n    />\n}","import React from \"react\"\nimport CommonItem from \"./CommonItem\"\nimport { UserMembership } from \"../types\"\nimport Avatar from \"./Avatar\"\nimport { Text, View } from \"./Themed\"\n\nexport default ({member:item, onPress}:{member:UserMembership, onPress?:()=>void})=> {\n    return <CommonItem key={item.id} bodyStyle={{flexDirection:'row', justifyContent:'flex-start'}} onPress={onPress}>\n        <View style={{marginTop:4, marginRight:12}}><Avatar name={item.name} userId={item.id} size={44}/></View>\n        <Text style={{fontSize:20, fontWeight:'400'}}>{item.name}</Text>\n    </CommonItem>\n}","import React, { Suspense, useState } from 'react';\nimport CommonButton from '../components/CommonButton';\nimport useModalsContext from '../hooks/useModalsContext';\nimport { Text, View } from '../components/Themed';\nimport useLangContext from '../hooks/useLangContext';\nimport { Ionicons } from '../lib/@expo/vector-icons';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport { BottomSheet } from '../components/ModalSection';\nimport dayjs from 'dayjs';\nimport useModalEffect from '../hooks/useModalEffect';\n\nconst dayTypes = ['AM', 'PM'].map(value=>({label:value, value}))\nconst hours = [...Array(12).keys()].map((value, index)=>(index + 1).toString().padStart(2, '0')).map(value=>({label:value, value}))\nconst minutes = [...Array(12).keys()].map((value, index)=>(index * 5).toString().padStart(2, '0')).map(value=>({label:value, value}))\n\n\nconst getDisableDays=(date:dayjs.Dayjs)=>{\n  let startDate = date.clone().startOf('month').add(-1, 'month')\n  const endDate = date.clone().endOf('month').add(1, 'month')\n  const today = dayjs().startOf('day')\n  const result = []\n  while(startDate<=endDate && startDate<today){\n    result.push(startDate.format('YYYY-MM-DD'))\n    startDate = startDate.add(1, 'day')\n  }\n  return result\n}\n\nconst defaultDayjs = ()=>{\n  const m = dayjs()\n  const restMinute = parseInt(m.format('mm')) % 5\n  return m.add(5-restMinute, 'minute')\n}\n\nconst Calendar = React.lazy(()=> import('../components/Calendar'))\nconst CommonPicker = React.lazy(()=>import('../components/CommonPicker'))\n\nexport default function DateTimePickerModal({datetime, callback}:{datetime?:string, callback:(datetime?:string)=>void}) {\n  const _dayjs = datetime?dayjs(datetime):defaultDayjs()\n  const { lang, locale } = useLangContext()\n  const theme = useColorScheme()\n  const [date, setDate] = useState(_dayjs.format('YYYY-MM-DD'));\n  const [dayType, setDayType] = useState(_dayjs.locale('en').format('A'))\n  const [hour, setHour] = useState(_dayjs.format('hh'))\n  const [minute, setMinute] = useState(_dayjs.format('mm'))\n  const [disableDays, setDisableDays] = useState<string[]>(getDisableDays(_dayjs))\n  const { setModal } = useModalsContext()\n  const back = ()=>{\n    setModal(DateTimePickerModal, null)\n  }\n  useModalEffect(back, [])\n  return <BottomSheet>\n    <View style={{flexDirection:'row', width:'100%'}}>\n      <View style={{flex:1, flexDirection:'row'}}>\n        <TouchableOpacity onPress={back}>\n          <Ionicons size={20} name=\"arrow-back\" color={Colors[theme].text}/>\n        </TouchableOpacity>\n      </View>\n      <View style={{flex:1}}>\n        <Text style={{fontSize:20, textAlign:'center'}}>{lang('Date & Time')}</Text>\n      </View>\n      <View style={{flex:1}}/>\n    </View>\n    <View style={{marginBottom: 20, height: 1, width: '100%'}} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />\n    <Suspense fallback={<></>}>\n      <Calendar\n        locale={locale}\n        style={undefined} \n        setDate={setDate}\n        disableAllTouchEventsForDisabledDays={true}\n        onMonthChange={(v)=>setDisableDays(getDisableDays(dayjs(v.dateString)))}\n        markedDates={{\n          ...disableDays.reduce((p, c)=>{p[c]={disabled:true};return p}, {} as Record<string, any>),\n          ...(date?[date]:[]).reduce((p, c)=>{p[c]={selected:true};return p}, {} as Record<string, any>)\n        }}\n      />\n      <View style={{flexDirection:'row', paddingVertical:10, width:400, height:50}}>\n        <CommonPicker value={dayType} setValue={setDayType} values={dayTypes}/>\n        <Text style={{fontSize:20}}> </Text>\n        <CommonPicker value={hour} setValue={setHour} values={hours}/>\n        <Text style={{fontSize:20}}> : </Text>\n        <CommonPicker value={minute} setValue={setMinute} values={minutes}/>\n      </View>\n    </Suspense>\n    <View style={{flexDirection:'row'}}>\n      <CommonButton title={lang('save')} onPress={()=>{\n        callback?.(dayjs(`${date} ${hour}:${minute} ${dayType}`).toISOString())\n        back()\n      }}/>\n      <CommonButton title={lang('cancel')} onPress={()=>{\n        callback?.(undefined)\n        back()\n      }}/>\n      \n    </View>\n  </BottomSheet>\n}\n","import React from 'react';\nimport {View} from 'react-native'\nimport {Text} from './Themed';\nimport { ProfileProps } from '../types';\nimport Avatar from './Avatar';\n\nexport default (props:ProfileProps)=>{\n    return <View style={{width:'100%', height:135, justifyContent:'space-evenly', alignItems:'center'}}>\n        <Avatar {...props} size={75}/>\n        <Text style={{fontWeight:'bold', fontSize:15}}>{props.name}</Text>\n        <Text style={{fontWeight:'normal', fontSize:14}}>{props.username}</Text>\n    </View>\n}","import React, { useState,  useEffect, createContext, useMemo, useRef, useContext } from \"react\"\nimport firebase from \"firebase/app\";\nimport \"firebase/messaging\";\nimport {FCM_PUBLIC_VAPID_KEY, FCM_API_KEY} from \"../constants/Envs\"\nimport { Notification as NotificationType, UserMembership } from \"../types\";\nimport { getNotification, postNotification, putNotification } from \"../services/notification\";\n\nconst firebaseConfig = require(\"../../web/firebase-config.js\")\n// Initialize Firebase\nconst key = firebaseConfig.messagingSenderId\nconst apiKeyEncrypted = (FCM_API_KEY as string).split('').map((v, i)=> (v.charCodeAt(0) ^ key.charCodeAt(i)).toString(16).padStart(2, '0')).join('')\nconst app = firebase.initializeApp({...firebaseConfig, apiKey:FCM_API_KEY});\n// const analytics = getAnalytics(app);\nconst messaging = firebase.messaging(app);\n\nmessaging.onMessage((payload) => {\n  if (!(\"Notification\" in window)) {\n    alert(\"This browser does not support desktop notification\");\n  }\n  else if (Notification.permission === \"granted\") {\n    const message_set = JSON.parse(payload.data['message_set'])[0]\n    new Notification(payload.data.channel_name, { body: `${payload.data.name}: ${message_set.content}` });\n  }\n});\n\nconst requestToken = async()=>{\n  const permission = await Notification.requestPermission();\n  if (permission === 'granted') {\n    const serviceWorkerRegistration = await navigator.serviceWorker.register(`${process.env.PUBLIC_URL}/firebase-messaging-sw.js?${apiKeyEncrypted}`)\n    console.log('[SW]: SCOPE: ', serviceWorkerRegistration.scope);\n    const currentToken = await messaging.getToken({serviceWorkerRegistration, vapidKey: FCM_PUBLIC_VAPID_KEY }).catch(\n      async()=>await messaging.getToken({serviceWorkerRegistration, vapidKey: FCM_PUBLIC_VAPID_KEY })\n    )\n    window.addEventListener('beforeunload', (event:any) => {\n      event.preventDefault();\n      serviceWorkerRegistration.unregister()\n    });\n    if (currentToken)\n      return currentToken\n  }\n  return null\n}\n\nconst FirebaseContext = createContext<{enable?:boolean, setEnable:(enable:boolean)=>void}>({setEnable:()=>{}});\n\nexport const FirebaseProvider = ({user, children}:{user?:UserMembership|null, children:React.ReactNode})=>{\n  const tokenRef = useRef<string|null>()\n  const [notification, setNotification] = useState<NotificationType|null>()\n  const enable = useMemo(()=>notification===undefined?undefined:(notification?.token?true:false), [notification])\n  const setEnable = (enable:boolean)=>{\n    if(user && notification){\n      putNotification({...notification, token:enable?(tokenRef.current==undefined?null:tokenRef.current):null}).then((noti)=>{\n        setNotification(noti)\n      })\n    }\n  }\n  useEffect(()=>{\n    let isMount = true;\n    if(user){\n      if (tokenRef.current ===undefined){\n        tokenRef.current = null\n        requestToken().then((t)=>{\n          tokenRef.current = t\n          if (notification){\n            putNotification({...notification, token:tokenRef.current}).then((noti)=>{\n              if(isMount)setNotification(noti)\n            })\n          }\n        });\n      }\n      if (notification===undefined){\n        getNotification(user.id).then((noti)=>{\n          if(isMount)setNotification(noti || null)\n        })\n      }\n      else if(notification===null){\n        postNotification({user:user.id, type:'WEB', token:null}).then((noti)=>{\n          if(isMount)setNotification(noti)\n        })\n      }\n      else if (notification.token && tokenRef.current && tokenRef.current != notification.token){\n        putNotification({...notification, token:tokenRef.current}).then((noti)=>{\n          if(isMount)setNotification(noti)\n        })\n      }\n    }\n    return ()=>{isMount=false}\n  }, [user, notification])\n  return <FirebaseContext.Provider value={{enable, setEnable}}>\n    {(enable!=undefined || user===null) && children}\n  </FirebaseContext.Provider>\n}\n\nexport default ()=>{\n  const {enable, setEnable} = useContext(FirebaseContext)\n  return {enable, setEnable}\n}\n","import { useMemo, useReducer } from \"react\"\n\ntype LocalSearchAction = {type:string, keyword?:string}\n\ntype LocalSearchState ={active:boolean, keyword:string}\n\n\n\nconst localSearchReducer =(initialState:LocalSearchState, action:LocalSearchAction)=>{\n    switch (action.type){\n        case 'SEARCH':\n          return {\n            ...initialState,\n            keyword: action.keyword\n          } as LocalSearchState\n        case 'ENABLE_SEARCH':\n          return {\n            ...initialState,\n            active:true,\n          }\n        case 'DISABLE_SEARCH':\n            return{\n                ...initialState,\n                active:false,\n                keyword: ''\n            }\n        default:\n            throw new Error( `Unhandled action type: ${action.type}`)\n    }\n  }\n\n\nexport default function useLocalSearch<T>(target:T[], compare:(value:T, keyword:string)=>boolean) {\n  const [searchState, dispatch] = useReducer(localSearchReducer, {active:false, keyword:''})\n  const data = useMemo(()=>searchState.active?target.filter(v=>compare(v, searchState.keyword)):target, [searchState, target])\n  return {searchState, dispatch, data}\n}","\nimport React, {useState} from 'react';\nimport { StyleProp, TextStyle, View } from 'react-native';\nimport Clipboard from '@react-native-clipboard/clipboard';\nimport useLangContext from '../hooks/useLangContext';\nimport { CustomTextInputProps } from '../types';\nimport CommonButton from './CommonButton';\nimport RowField from './RowField';\nimport { Text } from './Themed';\nimport useResizeContext from '../hooks/useResizeContext';\n\nexport default function CopyField(props:CustomTextInputProps & {name: string, width?:any, textStyle?:StyleProp<TextStyle>}) {\n  const { lang } = useLangContext()\n  const windowType = useResizeContext()\n  const [copied, setCopied] = useState(false)\n  return (\n    <RowField name={props.name} width={props.width} textStyle={props.textStyle}>\n      <View style={{flexDirection:windowType=='landscape'?'row':'column', justifyContent:'space-between'}}>\n        <View style={{justifyContent:'center'}}>\n          <Text style={{fontSize:16}}>{props.value}</Text>\n        </View>\n        <View>\n          <CommonButton title={lang('copy')} onPress={()=>{Clipboard.setString(props.value);setCopied(true)}}/>\n          {copied && <Text style={{fontSize:12, alignSelf:'center', color:'red'}}>{lang(\"copied\")}</Text>}\n        </View>\n      </View>\n   </RowField>\n  )\n}","import React, {useRef,MutableRefObject, useMemo, useState, useEffect } from 'react';\nimport { View, Text } from '../components/Themed';\nimport useAuthContext from '../hooks/useAuthContext';\nimport useUserMembershipList from '../hooks/lists/useUserMembershipList';\nimport { TabViewRecord, UserMembership } from '../types';\nimport CommonButton from '../components/CommonButton';\nimport useMessengerMemberList, { useMessengerMemberMutation } from '../hooks/lists/useMessengerMemberList';\nimport useModalsContext from '../hooks/useModalsContext';\nimport useExternalMembershipList from '../hooks/lists/useExternalMembershipList';\nimport TextField from '../components/TextField';\nimport useLocalSearch from '../hooks/useLocalSearch';\nimport TabView from '../components/TabView';\nimport { FlatList } from 'react-native-gesture-handler';\nimport useLangContext from '../hooks/useLangContext';\nimport MemberItem from '../components/MemberItem';\nimport ModalSection from '../components/ModalSection';\nimport useModalEffect from '../hooks/useModalEffect';\nimport CopyField from '../components/CopyField';\n\nconst InviteItem = (props:{item:UserMembership, selectedRef:MutableRefObject<Set<number>>})=>{\n  const [selected, setSelected] = useState(props.selectedRef.current.has(props.item.id))\n  return <View style={selected?{borderWidth:1, borderColor:'blue'}:{}}>\n    <MemberItem member={props.item} onPress={()=>{\n      if (selected){\n        setSelected(false)\n        props.selectedRef.current.delete(props.item.id)\n      }\n      else{\n        setSelected(true)\n        props.selectedRef.current.add(props.item.id)\n      }\n    }}/>\n  </View>\n\n}\ntype InviteTabViewProps = {\n  id:number,\n  selectedRef:MutableRefObject<Set<number>>\n}\n\nconst GroupTabView = ({id, selectedRef}:InviteTabViewProps)=>{\n  const { lang } = useLangContext()\n  const {auth} = useAuthContext()\n  const { setModal } = useModalsContext()\n  const userList = useUserMembershipList(auth)\n  const memberList = useMessengerMemberList(id)\n  const messengerMemberMutation = useMessengerMemberMutation()\n  const rawData = useMemo(()=>{\n    const memberSet = new Set(memberList?.map(v=>v.user))\n    return userList?.filter(v=>!memberSet.has(v.id)) || []\n  }, [userList, memberList])\n  const {data, dispatch:dispatchKeyword, searchState} = useLocalSearch(rawData, (v, keyword)=>(v.username.includes(keyword) || v.name.includes(keyword)))\n  const search = (k:string)=>{\n    if (k?.length>0){\n      dispatchKeyword({type:'ENABLE_SEARCH'})\n      dispatchKeyword({type:'SEARCH', keyword:k})\n    }\n    else{\n      dispatchKeyword({type:'DISABLE_SEARCH'})\n    }\n  }\n  const back = ()=>{\n    setModal(InviteModal, null)\n  }\n  useModalEffect(back, [])\n  return <View style={{alignItems:'center', flex:1}}>\n    <View style={{'width': '100%', flex:1}}>\n      <TextField name={`${lang('Username')} & ${lang('Name')}`} placeholder={auth.user?.name} value={searchState.keyword} setValue={search} width={'80%'}/>\n      {id && data && <FlatList contentContainerStyle={{flexGrow:1}} data={data} renderItem={({item})=><InviteItem item={item} selectedRef={selectedRef}/>}/>}\n    </View>\n    <View style={[{width:'100%', flexDirection:'row', padding:10,}, {justifyContent:'flex-end'}]}>\n      <CommonButton title={lang('invite')} onPress={()=>{\n        messengerMemberMutation.invite({\n          channel_id:id,\n          user_ids:[...selectedRef.current]\n        }).then(back)\n      }}/>\n      <CommonButton title={lang('cancel')} onPress={back}/>\n    </View>\n  </View>\n}\n\nconst DELAY = 500\n\nconst ExternalMembershipTabView = ({id, selectedRef}:InviteTabViewProps)=>{\n  const { lang } = useLangContext()\n  const [value, setValue] = useState('')\n  const [keyword, setKeyword] = useState('')\n  const timeoutRef = useRef<NodeJS.Timeout>()\n  const {auth} = useAuthContext()\n  const { setModal } = useModalsContext()\n  const memberList = useMessengerMemberList(id)\n  const externalMemberList = useExternalMembershipList(keyword)\n  const data = useMemo(()=>{\n    const memberSet = new Set(memberList?.map(v=>v.user))\n    return externalMemberList?.filter(v=>!memberSet.has(v.id)) || []\n  }, [externalMemberList, memberList])\n  const messengerMemberMutation = useMessengerMemberMutation()\n  useEffect(()=>{\n    timeoutRef.current = setTimeout(()=>{\n      setKeyword(value)\n    }, DELAY)\n    return ()=>{timeoutRef.current && clearTimeout(timeoutRef.current)}\n  }, [value])\n  const back = ()=>{\n    setModal(InviteModal, null)\n  }\n  const inviteLink = location.href.replace('chat', 'invitee')\n  return <View style={{alignItems:'center', flex:1}}>\n  <View style={{'width': '100%', flex:1, paddingVertical:10}}>\n    <CopyField name={lang('invite link')} width={'80%'} value={inviteLink}/>\n    <View style={{marginVertical: 10, height: 1, width: '100%'}} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />\n    <TextField name={lang('Username')} placeholder={auth.user?.username} value={value} setValue={setValue} width={'80%'}/>\n    {id && data && <FlatList contentContainerStyle={{flexGrow:1}} data={data} renderItem={({item})=><InviteItem item={item} selectedRef={selectedRef}/>}/>}\n  </View>\n  <View style={[{width:'100%', flexDirection:'row', padding:10,}, {justifyContent:'flex-end'}]}>\n    <CommonButton title={lang('invite')} onPress={()=>{\n      messengerMemberMutation.invite({\n        channel_id:id,\n        user_ids:[...selectedRef.current]\n      }).then(back)\n    }}/>\n    <CommonButton title={lang('cancel')} onPress={back}/>\n  </View>\n</View>\n}\n\nexport default function InviteModal({id}:{id:number}) {\n  const { lang } = useLangContext()\n  const selectedRef = useRef<Set<number>>(new Set())\n  const drawerTabs:TabViewRecord = {\n    group:{\n      title: 'Group',\n      component: ()=><GroupTabView id={id} selectedRef={selectedRef}/>,\n      icon: <></>\n    },\n    external:{\n      title: 'External members',\n      component: ()=><ExternalMembershipTabView id={id} selectedRef={selectedRef}/>,\n      icon: <></>\n    }\n  }\n  return <ModalSection>\n    <View style={{flex:1, width:'100%'}}>\n      <View style={{width:'100%'}}>\n        <Text style={{fontSize:20}}>{lang('invite')}</Text>\n        <View style={{marginBottom: 20, height: 1, width: '100%'}} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />\n      </View>\n      <TabView tabs={drawerTabs} tabBarPosition={\"top\"}/>\n    </View>\n  </ModalSection>\n}\n\n","import { useEffect } from \"react\"\nimport { navigate } from \"../navigation\"\nimport useMessengerChannelList from \"./lists/useMessengerChannelList\"\nimport { useMessengerMemberMutation } from \"./lists/useMessengerMemberList\"\nimport useAuthContext from \"./useAuthContext\"\n\nlet invitee_id:number|undefined\nlet invitee_state:0|1|2=0\n\nexport const replaceInviteeState = (l:Location)=>{\n    if(l !==undefined && l.pathname.endsWith('/invitee')){\n        var params = l.search.slice(1).split('&').filter(v=>v.startsWith('id='))\n        if (params.length>0)\n            invitee_id = parseInt(params[0].split('=')[1])\n        window.history.replaceState(null, '', l.href.split('invitee')[0]\n        );\n    }\n}\n\nexport default ()=>{\n    const {auth} = useAuthContext()\n    const channelList = useMessengerChannelList(auth)\n    const messengerMemberMutation = useMessengerMemberMutation()\n    useEffect(()=>{\n        if (auth.user){\n            if (invitee_id && channelList){\n                var id = invitee_id;\n                var redirect = ()=>navigate(\"Main\", {screen:\"ChatScreen\", params: {id}})\n                invitee_id = undefined;\n                invitee_state = 1;\n                if(channelList.find(v=>v.id==id) === undefined){\n                    console.log(`invite processing (channel:${id})`)\n                    messengerMemberMutation.invite({\n                        channel_id:id,\n                        user_ids:[auth.user.id]\n                    }).then(redirect)\n                }\n                else{\n                    console.log('already invite')\n                    redirect()\n                }\n            }\n        }\n        else{\n            if (invitee_state == 1){\n                invitee_state=2\n            }\n        }\n    }, [auth, channelList])\n    useEffect(()=>{\n        if(auth.user && invitee_state==2){\n            navigate(\"Main\", {screen:\"HomeScreen\"})\n        }\n    }, [auth.user])\n}","editorConfig = {\n    plugins: 'image link charmap advlist lists paste', //autoresize textcolor imagetools,\n    toolbar: 'fontsizeselect | bold italic underline strikethrough | undo redo | alignleft aligncenter alignright | bullist numlist | link' // charmap removeformat\n}\nif (typeof module !== 'undefined') {\n    module.exports = editorConfig\n}\n","firebaseConfig = {\n    \"authDomain\": \"virtual-metrics-355712.firebaseapp.com\",\n    \"projectId\": \"virtual-metrics-355712\",\n    \"storageBucket\": \"virtual-metrics-355712.appspot.com\",\n    \"messagingSenderId\": \"76003576924\",\n    \"appId\": \"1:76003576924:web:c8c8a006d07918bbc02a99\",\n    \"measurementId\": \"G-SEL35L4N5R\"\n}\nif (typeof module !== 'undefined') {\n    module.exports = firebaseConfig\n}\n","/**\n * Learn more about deep linking with React Navigation\n * https://reactnavigation.org/docs/deep-linking\n * https://reactnavigation.org/docs/configuring-links\n */\n\nimport { LinkingOptions } from '@react-navigation/native';\nimport * as Linking from 'expo-linking';\nimport {main, login, modal} from '../screens';\n\nconst ROOTPATH = 'tokki-tok'  // github repository name\n\nObject.values(modal).forEach(v=>v.path = ROOTPATH + '/' + v.path)\n\nexport default  {\n  prefixes: [Linking.makeUrl('/')],\n  config: {\n    screens: {\n      Main: {\n        screens:{\n          ...main,\n          ...login,\n          NotFound: '*',\n        },\n        path: ROOTPATH\n      },\n      ...modal\n    },\n  },\n} as LinkingOptions;\n"],"sourceRoot":""}