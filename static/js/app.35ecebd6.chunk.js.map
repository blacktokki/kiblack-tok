{"version":3,"sources":["src/components/HeaderRight.tsx","src/screens/main/LoginScreen.tsx","src/components/CommonSection.tsx","src/hooks/lists/useMessengerContent.List.ts","src/hooks/lists/useMessengerMemberList.ts","src/lib/react-native-webrtc/useWebsocketContext.tsx","src/lib/react-native-webrtc/webrtc/p2p.tsx","src/lib/react-native-webrtc/webrtc/index.ts","src/lib/react-native-webrtc/LocalCam.tsx","src/components/LinkPreview.tsx","src/lib/react-native-webrtc/RemoteCam.tsx","src/screens/main/ChatScreen.tsx","src/screens/main/TabOneScreen.tsx","src/components/RowField.tsx","src/components/TextField.tsx","src/screens/ChannelEditScreen.tsx","src/screens/InviteScreen.tsx","src/screens/index.ts","src/screens/main/HomeScreen.tsx","src/screens/ProfileScreen.tsx","src/hooks/useWebsocketContext.tsx","src/components/TextButton.tsx","src/hooks/useIsMobile.ts","src/components/CommonItem.tsx","src/hooks/lists/useUserMembershipList.ts","src/tabs/DrawerTab.tsx","src/tabs/MessengerTab.tsx","src/tabs/index.ts","src/tabs/MemberTab.tsx","src/hooks/useColorScheme.ts","src/navigation/DrawerNavigator.tsx","src/lib/react-native-paper/Profile.tsx","src/components/Profile.tsx","src/navigation/LinkingConfiguration.ts","src/screens/NotFoundScreen.tsx","src/apis/notification.ts","src/hooks/useFirebaseContext.tsx","src/components/MobileSafeAreaView.tsx","src/navigation/RootNavigator.tsx","App.tsx","src/hooks/useCachedResources.ts","src/apis/axios.ts","src/components/Themed.tsx","src/hooks/useAuthContext.tsx","src/navigation/index.tsx","web/firebase-config.js","src/constants/Colors.ts","src/assets/fonts/SpaceMono-Regular.ttf","src/apis/account.ts","src/apis/messenger.ts","src/components/CommonButton.tsx","src/hooks/useResizeWindow.ts","src/hooks/lists/useMessengerChannelList.ts"],"names":["props","dispatch","useAuthContext","windowType","useResizeWindow","defaultButtonProps","title","onPress","type","buttonProps","extra","concat","_toConsumableArray","filter","v","undefined","React","createElement","View","style","flexDirection","map","k","TextButton","_extends","key","textStyle","color","Styles","StyleSheet","create","login_container","flex","backgroundColor","login_header","alignItems","paddingTop","paddingBottom","login_header_logo","width","resizeMode","login_header_text","marginTop","fontSize","login_header_text_bold","fontWeight","login_wrapper","justifyContent","paddingVertical","borderTopRightRadius","borderTopLeftRadius","form","maxWidth","form_input","height","paddingHorizontal","marginBottom","borderRadius","button","button_label","login_social","login_social_separator","login_social_separator_line","login_social_separator_text","marginHorizontal","login_social_buttons","login_social_button","borderWidth","borderColor","login_social_icon","login_social_facebook","login_footer_text","guest_footer_text","alignSelf","margin","login_footer_link","CommonSection","styles","outerContainer","outerContainerStyle","container","containerStyle","withSeparator","separator","lightColor","darkColor","titleView","Text","titleStyle","subtitle","bodyView","bodyStyle","children","marginVertical","textAlign","padding","Colors","useMessengerContentList","channel_id","queryClient","useQueryClient","_useInfiniteQuery","useInfiniteQuery","_ref","pageParam","_regeneratorRuntime","async","_context","prev","next","abrupt","getMessengerContentList","then","current","stop","Promise","select","data","pages","length","getNextPageParam","lastPage","id","refetchOnReconnect","refetchOnWindowFocus","fetchNextPage","lastJsonMessage","useWebsocketContext","useEffect","setQueryData","_data","_objectSpread","pageParams","useMessengerMemberList","useQuery","awrap","getMessengerMemberList","sent","useMessengerMemberMutation","invite","useMutation","postBulkMessengerMember","onSuccess","invalidateQueries","leave","deleteMessengerMember","mutate","WebSocketContext","createContext","sendJsonMessage","WebSocketProvider","disable","Fragment","WebSocketInternalProvider","path","Context","useBackground","useContext","peerConstraints","iceServers","urls","sessionConstraints","mandatory","OfferToReceiveAudio","OfferToReceiveVideo","VoiceActivityDetection","mediaConstraints","audio","video","framerate","onICEcandidate","pc","message","_message","rtcMessage","candidate","RTCIceCandidate","console","log","addIceCandidate","sendICEcandidate","event","sendMessage","userId","target","user","optimizeSdp","offerDescription","arr","sdp","split","forEach","str","i","test","RTCSessionDescription","join","createOffer","pcRefCurrent","stream","owner","_pcRefCurrent$user","addStream","t0","t1","setLocalDescription","username","camStyle","cam","bottonContainer","position","buttonBar","label","_auth$user","auth","_useWebsocketContext","_useLocalCam","pcRef","useRef","_useState","useState","_useState2","_slicedToArray","_stream","setStream","isPlay","useMemo","CustomRTCView","useCallback","memo","RTCView","videoProps","start","mode","newStream","_context2","mediaDevices","getUserMedia","getDisplayMedia","catch","e","Object","entries","_ref2","_ref3","error","getTracks","track","websocketOnMessage","response","peerConnection","_peerConnection","answerDescription","_peerConnection2","_context3","RTCPeerConnection","addEventListener","sender","setRemoteDescription","useLocalCam","name","Button","link","isMobile","TouchableOpacity","Linking","openURL","url","Image","source","uri","image","maxHeight","description","_props$user","setUsername","_useRemoteCam","_useState3","_useState4","close","clearInterval","statsInterval","_pcRef$current","_pcRef$current$user","_pcRef$current3","_pcRef$current3$user","_pcRef$current5","_pcRef$current5$user","_pcRef$current7","_pcRef$current7$user","_pcRef$current2","_pcRef$current4","_pcRef$current4$user","streams","_pcRef$current6","_pcRef$current$user2","_peerConnection3","_answerDescription","_streams","_context5","iceConnectionState","activeStream","setInterval","stats","statsOutput","framePerSecond","_context4","getStats","report","kind","keys","statName","framesPerSecond","Date","toTimeString","addTransceiver","direction","getRemoteStreams","createAnswer","localDescription","useRemoteCam","TextInput","value","onChangeText","VideoCallContainer","videoMode","guests","setGuests","_useRtcContext","useRtcContext","channel_name","find","borderTopWidth","RemoteCam","LocalCam","VideoCallSection","RtcProvider","Panel_Button_Text","Panel_Holder","RowField","rowStyle","TextField","contentHeight","setContentHeight","minHeight","disabled","multiline","editable","setValue","onContentSizeChange","Math","max","nativeEvent","contentSize","field","InviteItem","selectedRef","has","item","selected","setSelected","renderMemberItem","delete","add","main","HomeScreen","component","_route$params2","navigation","route","options","headerRight","HeaderRight","navigate","useLayoutEffect","_route$params","index","params","tab","setOptions","StyledText","paddingLeft","TabViewNavigator","tabs","bottomTabs","tabBarPosition","parseInt","onTab","setParams","ChatScreen","_useMessengerChannelL","useIsMobile","inputRef","channel","useMessengerChannelList","_useMessengerContentL","memberList","member_id","_memberList$find","messengerMemberMutation","_useState5","_useState6","autoFocus","setAutoFocus","_useState7","_useState8","setVideoMode","postValue","_auth$user2","contentMutation","content","toggleVideoMode","postMessage","_delete","deleteMessengerContent","d","variables","useMessengerContentMutation","back","renderItem","_ref4","_nextPage2","nextPage","_nextPage","nextContent","index2","_auth$user3","created","slice","date","isSystem","isFirst","isSelf","dayChanged","message_set","MaterialIcons","size","marginRight","Hyperlink","linkDefault","wordBreak","linkStyle","link_set","linkIndex","LinkPreview","canGoBack","goBack","focus","FlatList","contentContainerStyle","flexGrow","onScroll","contentOffset","y","onLayout","p","layout","bottom","ref","onSubmitEditing","blurOnSubmit","CommonButton","TabOneScreen","login","LoginScreen","password","setPassword","_login","placeholder","text","autoCapitalize","keyboardType","secureTextEntry","modal","ChannelEditScreen","channelList","channelMutation","useMessengerChannelMutation","setName","setDescription","groupId","newChannel","group","update","screen","replace","InviteScreen","userList","useUserMembershipList","Set","memberSet","user_ids","ProfileScreen","Profile","_split","_split2","SCHEMA","DOMAIN","token","setToken","AppState","currentState","isActive","setIsActive","_useWebSocket","useWebSocket","shouldReconnect","closeEvent","protocols","onOpen","onClose","AsyncStorage","getItem","onChange","nextState","removeEventListener","Provider","useMobileDetect","Platform","OS","CommonItem","_React$useState","_React$useState2","setHover","_React$useState3","_React$useState4","press","setPress","Pressable","onPressIn","onPressOut","onHoverIn","onHoverOut","borderBottomWidth","getUserMembershipList","DrawerTab","marginLeft","Messenger","MessengerIcon","Ionicons","OneTab","MemberTab","icon","MemberIcon","TwoTab","today","toISOString","_item$last_message","_item$last_message2","_item$last_message3","last_message","FontAwesome","opacity","member_count","unread_count","drawerTabs","MaterialCommunityIcons","useColorScheme","_useColorScheme","setIndex","icons","assign","apply","_defineProperty","TabView","renderTabBar","TabBar","indicatorStyle","activeColor","inactiveColor","renderIcon","scene","onTabPress","findIndex","_ref5","navigationState","routes","_ref6","_ref7","onIndexChange","renderScene","SceneMap","_ref8","_ref9","onAddList","_ref11","colors","useTheme","tabBar","card","borderTopColor","border","pointerEvents","accessibilityRole","values","drawerTab","Tab","elevation","borderRightWidth","Avatar","header","toUpperCase","ROOTPATH","prefixes","config","screens","Main","NotFound","NotFoundScreen","linkText","putNotification","notification","axios","put","firebaseConfig","require","messagingSenderId","apiKeyEncrypted","charCodeAt","toString","padStart","app","firebase","initializeApp","apiKey","messaging","onMessage","payload","window","Notification","permission","JSON","parse","body","alert","FirebaseContext","enable","setEnable","FirebaseProvider","tokenRef","setNotification","isMount","serviceWorkerRegistration","currentToken","requestPermission","navigator","serviceWorker","register","process","scope","getToken","vapidKey","requestToken","t","user_id","get","getNotification","noti","setNotificationInternal","n","post","postNotification","innerHeight","setHeight","Dimensions","Root","createStackNavigator","QueryClient","RootNavigator","MobileSafeAreaView","AuthProvider","QueryClientProvider","client","Navigator","headerMode","screenOptions","cardStyle","animationEnabled","cardStyleInterpolator","CardStyleInterpolators","forVerticalIOS","Screen","MainNavigator","headerShown","gestureDirection","DrawerNavigator","headerStyle","headerTitleStyle","headerLeft","canGOBackScreen","headerLeftContainerStyle","flexShrink","forHorizontalIOS","App","isLoadingComplete","setLoadingComplete","SplashScreen","Font","font","warn","finish","useCachedResources","colorScheme","SafeAreaProvider","Navigation","StatusBar","defaultOption","baseURL","withCredentials","headers","_axios","interceptors","request","use","reject","status","r","defaults","setItem","removeItem","useThemeColor","colorName","theme","colorFromProps","otherProps","_objectWithoutProperties","_excluded","light","dark","DefaultText","_excluded2","DefaultView","AuthContext","authReducer","initialState","action","Error","_useReducer","useReducer","_useReducer2","authState","_authState$user","_authState$user$membe","membership_set","g","root_group_id","checkLogin","logout","navigationRef","_navigationRef$curren","_navigationRef$curren2","NavigationContainer","documentTitle","formatter","linking","versions","LinkingConfiguration","DarkTheme","DefaultTheme","l","search","decoded","s","history","replaceState","pathname","hash","location","ignoreWarnings","_console","_","clone","indexOf","module","exports","background","tint","tabIconDefault","tabIconSelected","endsWith","guestLogin","checkLoginToken","_await$axios$get","isOffline","code","startsWith","getUserList","group_id","_context6","_context7","getMessengerChannelList","postChannel","putChannel","deleteChannel","id_lt","id_lt_param","_context8","results","_context9","content_id","_context10","DefaultButton","hover","selectable","_props","detectMobile","setWindow","sort","a","b","mutateAsync"],"mappings":"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","file":"static/js/app.35ecebd6.chunk.js","sourcesContent":["import React from 'react'\r\nimport TextButton from \"./TextButton\"\r\nimport useAuthContext from \"../hooks/useAuthContext\"\r\nimport useResizeWindow from '../hooks/useResizeWindow'\r\nimport { View } from 'react-native'\r\n\r\ntype ButtonProps = {title:string, onPress:()=>void, windowType?:'landscape'|'portrait'}\r\n\r\nexport default (props:{extra?:ButtonProps[]})=>{\r\n    const {dispatch} = useAuthContext()\r\n    const windowType = useResizeWindow()\r\n    const defaultButtonProps:ButtonProps[] = [{title:'logout', onPress:()=>dispatch({type:\"LOGOUT_REQUEST\"})}]\r\n    const buttonProps = (props.extra?[...props.extra, ...defaultButtonProps]:defaultButtonProps).filter(v=>v.windowType==windowType || v.windowType == undefined)\r\n    return<View style={{flexDirection:'row'}}>\r\n        {buttonProps.map((v,k)=><TextButton key={k} {...v} textStyle={{color:'white'}} color='#gray'/>)}\r\n    </View>\r\n}\r\n  ","import React, {useState} from 'react';\r\nimport {\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  View,\r\n  StyleSheet,\r\n} from 'react-native';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport useAuthContext from '../../hooks/useAuthContext';\r\n\r\nexport default function LoginScreen({\r\n  navigation\r\n}: StackScreenProps<any, 'Login'>) {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const {dispatch} = useAuthContext()\r\n  const _login = ()=>dispatch({type:'LOGIN_REQUEST', username, password})\r\n\r\n  return (\r\n    <View style={Styles.login_wrapper}>\r\n      <View style={Styles.form}>\r\n        <TextInput\r\n          style={Styles.form_input}\r\n          value={username}\r\n          placeholder={'Username'}\r\n          onChangeText={(text) => setUsername(text)}\r\n          autoCapitalize={'none'}\r\n          keyboardType={'email-address'}\r\n          onSubmitEditing={_login}\r\n        />\r\n        <TextInput\r\n          style={Styles.form_input}\r\n          value={password}\r\n          placeholder={'Password'}\r\n          secureTextEntry\r\n          onChangeText={(text) => setPassword(text)}\r\n          onSubmitEditing={_login}\r\n        />\r\n        <TouchableOpacity onPress={_login}>\r\n          <View style={Styles.button}>\r\n            <Text style={Styles.button_label}>{'Sign in'}</Text>\r\n          </View>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity onPress={() => dispatch({type:\"LOGIN_GUEST\"})}>\r\n          <Text style={Styles.guest_footer_text}>\r\n            {\"Sign in as guest\"}\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      <View style={Styles.login_social}>\r\n        <View style={Styles.login_social_separator}>\r\n          <View style={Styles.login_social_separator_line} />\r\n          <Text style={Styles.login_social_separator_text}>{'text'}</Text>\r\n          <View style={Styles.login_social_separator_line} />\r\n        </View>\r\n        <View style={Styles.login_social_buttons}>\r\n        </View>\r\n      </View>\r\n      {/* <>\r\n        <TouchableOpacity onPress={() => navigate(\"RegistrationScreen\")}>\r\n          <Text style={Styles.login_footer_text}>\r\n            {\"Don't have an account? \"}\r\n            <Text style={Styles.login_footer_link}>{'Sign up'}</Text>\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </> */}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst Styles = StyleSheet.create({\r\n    login_container: {\r\n      flex: 1,\r\n      backgroundColor: '#FFF',\r\n    },\r\n    login_header: {\r\n      alignItems: 'center',\r\n      paddingTop: 30,\r\n      paddingBottom: 50,\r\n      backgroundColor: '#208AEC',\r\n    },\r\n    login_header_logo: {\r\n      width: 220,\r\n      resizeMode: 'contain',\r\n    },\r\n    login_header_text: {\r\n      marginTop: 15,\r\n      color: '#f0f0f0',\r\n      fontSize: 16,\r\n    },\r\n    login_header_text_bold: {\r\n      color: '#fff',\r\n      fontWeight: 'bold',\r\n    },\r\n    login_wrapper: {\r\n      flex: 1,\r\n      justifyContent: 'space-between',\r\n      paddingVertical: 40,\r\n      borderTopRightRadius: 12,\r\n      borderTopLeftRadius: 12,\r\n      marginTop: -10,\r\n      backgroundColor: '#fff',\r\n      alignItems: 'center',\r\n    },\r\n    form: {\r\n      width: '100%',\r\n      maxWidth: 280,\r\n    },\r\n    form_input: {\r\n      height: 44,\r\n      paddingHorizontal: 20,\r\n      marginBottom: 20,\r\n      backgroundColor: '#EDF0F7',\r\n      borderRadius: 50,\r\n    },\r\n    button: {\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      height: 44,\r\n      backgroundColor: '#0065A4',\r\n      borderRadius: 50,\r\n    },\r\n    button_label: {\r\n      color: '#fff',\r\n      fontSize: 16,\r\n    },\r\n    login_social: {\r\n      width: '100%',\r\n      maxWidth: 280,\r\n      marginTop: 20,\r\n    },\r\n    login_social_separator: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n    },\r\n    login_social_separator_line: {\r\n      flex: 1,\r\n      width: '100%',\r\n      height: 1,\r\n      backgroundColor: '#E0E0E0',\r\n    },\r\n    login_social_separator_text: {\r\n      marginHorizontal: 10,\r\n      color: '#808080',\r\n      fontSize: 16,\r\n    },\r\n    login_social_buttons: {\r\n      flexDirection: 'row',\r\n      justifyContent: 'center',\r\n      marginTop: 20,\r\n    },\r\n    login_social_button: {\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      width: 60,\r\n      height: 60,\r\n      marginHorizontal: 12,\r\n      borderWidth: 1,\r\n      borderColor: '#E7E7E7',\r\n      borderRadius: 60,\r\n    },\r\n    login_social_icon: {\r\n      width: 38,\r\n      height: 38,\r\n      resizeMode: 'contain',\r\n    },\r\n    login_social_facebook: {\r\n      backgroundColor: '#4267B2',\r\n      borderColor: '#4267B2',\r\n    },\r\n    login_footer_text: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      color: '#808080',\r\n      fontSize: 14,\r\n    },\r\n    guest_footer_text: {\r\n      flexDirection: 'row',\r\n      alignSelf: 'center',\r\n      color: '#808080',\r\n      fontSize: 15,\r\n      margin: 15\r\n    },\r\n    login_footer_link: {\r\n      color: '#208AEC',\r\n      fontSize: 15,\r\n      fontWeight: 'bold',\r\n    },\r\n  });\r\n  ","import * as React from 'react';\r\nimport { View, Text } from './Themed';\r\nimport { StyleSheet, StyleProp, ViewStyle, TextStyle } from 'react-native';\r\nimport Colors from '../constants/Colors';\r\n\r\nexport type SectionParamList = {\r\n    title?: string,\r\n    titleStyle?:StyleProp<TextStyle>\r\n    outerContainerStyle?:StyleProp<TextStyle>\r\n    containerStyle?:StyleProp<ViewStyle>\r\n    bodyStyle?:StyleProp<ViewStyle>\r\n    subtitle?: string\r\n    withSeparator?: boolean\r\n    children?: React.ReactNode\r\n}\r\n\r\nexport default function CommonSection(props:SectionParamList){\r\n  return (\r\n    <View style={[styles.outerContainer, props.outerContainerStyle]}>\r\n        <View style={[styles.container, props.containerStyle]}>\r\n            {props.withSeparator?<View style={styles.separator} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />:undefined}\r\n            {props.title?<View style={styles.titleView}>\r\n              <Text style={[styles.title, props.titleStyle]}>{props.title}</Text>\r\n              <Text style={styles.subtitle}>{props.subtitle}</Text>\r\n            </View>:undefined}\r\n            <View style={[styles.bodyView, props.bodyStyle]}>\r\n            {props.children}\r\n            </View>\r\n          </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  outerContainer:{\r\n    width:'100%',\r\n    maxWidth:1080,\r\n    alignItems:'stretch',\r\n    backgroundColor:'transparent'\r\n  },  \r\n  container: {\r\n      marginHorizontal:20,\r\n      marginVertical: 10,\r\n      backgroundColor:'transparent',\r\n    },\r\n    titleView:{\r\n      width: '100%',\r\n      flexDirection:'row',\r\n      backgroundColor:'transparent',\r\n      marginBottom:5,\r\n    },\r\n    title: {\r\n      flex:1,\r\n      fontSize: 16,\r\n    },\r\n    subtitle: {\r\n      flex:1,\r\n      fontSize: 12,\r\n      textAlign: 'right',\r\n      marginTop:4\r\n    },\r\n    separator: {\r\n      marginBottom: 20,\r\n      height: 1,\r\n      width: '100%',\r\n    },\r\n    bodyView:{\r\n      width: '100%',\r\n      padding: 20,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      borderWidth:1,\r\n      borderColor:Colors.borderColor,\r\n      borderRadius:6\r\n    }\r\n  });\r\n  ","import { useCallback, useEffect, useState } from \"react\"\r\nimport { InfiniteData, useInfiniteQuery, useMutation, useQueryClient } from \"react-query\"\r\nimport { getMessengerContentList, postMessage, deleteMessengerContent } from \"../../apis\"\r\nimport { MessengerContent } from \"../../types\"\r\nimport useWebsocketContext from \"../useWebsocketContext\"\r\n\r\nexport type MessengerContentPage = {\r\n  next?:MessengerContentPage\r\n  current:MessengerContent[]\r\n}\r\n\r\nexport default function useMessengerContentList(channel_id:number){  \r\n  const queryClient = useQueryClient()\r\n  const { data, fetchNextPage } = useInfiniteQuery<MessengerContentPage>(\r\n    [\"MessengerContentList\", channel_id], \r\n    async({pageParam})=>getMessengerContentList(channel_id, pageParam).then(current=>({current})), \r\n    {\r\n      select:data=>{\r\n        if(data.pages.length > 1)\r\n          data.pages[data.pages.length - 2].next = data.pages[data.pages.length - 1]\r\n        return data;\r\n      },\r\n      getNextPageParam:(lastPage)=>lastPage?.current.length?lastPage.current[lastPage.current.length - 1].id:undefined,\r\n      refetchOnReconnect:false,\r\n      refetchOnWindowFocus:false\r\n    }\r\n  )\r\n  const { lastJsonMessage } = useWebsocketContext()\r\n  useEffect(()=>{\r\n    if(lastJsonMessage !=null && lastJsonMessage['type']=='next_message' && lastJsonMessage['data']['channel'] == channel_id){\r\n      queryClient.setQueryData<InfiniteData<MessengerContentPage>>([\"MessengerContentList\", channel_id], (_data)=>{\r\n        if(_data?.pages[0].current && _data?.pages[0].current[0].id != lastJsonMessage['data'].id)\r\n          _data.pages[0].current = [lastJsonMessage['data'], ..._data?.pages[0].current]\r\n        return {...(_data || {pages:[], pageParams:[]})}\r\n      })\r\n    }\r\n  }, [lastJsonMessage])\r\n  return { data, fetchNextPage }\r\n}\r\n\r\nexport function useMessengerContentMutation(){\r\n  // const queryClient = useQueryClient()\r\n  const create = useMutation(postMessage, {\r\n    onSuccess: () => {\r\n      // queryClient.setQueryData(['MessengerContentList'], (data:any) => ({\r\n      //   pages: data.pages.slice(0, 1),\r\n      //   pageParams: data.pageParams.slice(0, 1),\r\n      // }))\r\n      // queryClient.invalidateQueries(\"MessengerContentList\")\r\n    }\r\n  });\r\n  const _delete = useMutation(deleteMessengerContent, {\r\n    onSuccess: (d, variables) => {\r\n      // queryClient.setQueryData(['MessengerContentList'], (data:any) => ({\r\n      //   pages: (data.pages as MessengerContent[][]).map(v=>v.filter(v2=>v2.id != variables)),\r\n      //   pageParams: data.pageParams,\r\n      // }))\r\n    }\r\n  })\r\n  return { create:create.mutate, delete:_delete.mutate }\r\n}","import { useMutation, useQuery, useQueryClient } from \"react-query\";\r\nimport { postBulkMessengerMember, deleteMessengerMember, getMessengerMemberList } from \"../../apis\";\r\n\r\nexport default function useMessengerMemberList(channel_id:number){\r\n  const { data } = useQuery([\"MessengerMemberList\", channel_id] , async()=>await getMessengerMemberList(channel_id))\r\n  return data\r\n}\r\n\r\n\r\nexport function useMessengerMemberMutation(){\r\n  const queryClient = useQueryClient()\r\n  const invite = useMutation(postBulkMessengerMember, {\r\n    onSuccess: ()=>{\r\n      queryClient.invalidateQueries(\"MessengerMemberList\")\r\n    }\r\n  })\r\n\r\n  const leave = useMutation(deleteMessengerMember, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(\"MessengerChannelList\")\r\n      queryClient.invalidateQueries(\"MessengerMemberList\")\r\n    }\r\n  })\r\n  return {invite:invite.mutate, leave:leave.mutate}\r\n}","import React, { createContext, useContext } from \"react\"\r\nimport { SendJsonMessage } from \"react-use-websocket/dist/lib/types\";\r\nimport { WebSocketInternalProvider } from \"../../hooks/useWebsocketContext\";\r\n\r\nconst WebSocketContext = createContext<{lastJsonMessage:any, sendJsonMessage:SendJsonMessage }>({lastJsonMessage:undefined, sendJsonMessage:()=>{}});\r\n\r\nexport const WebSocketProvider = ({disable, children}:{disable?:boolean, children:React.ReactNode})=>{\r\n  return disable?<></>:<WebSocketInternalProvider path={'messenger/ws/rtc/'} Context={WebSocketContext} useBackground>\r\n    {children}\r\n  </WebSocketInternalProvider>\r\n}\r\n\r\nexport default ()=>{\r\n  const webSocketContext = useContext(WebSocketContext)\r\n  return webSocketContext\r\n}\r\n\r\n","import React, { useCallback, useRef, useState, useMemo } from \"react\";\r\n//@ts-ignore\r\nimport { RTCView, mediaDevices, RTCPeerConnection, MediaStream, RTCSessionDescription, RTCIceCandidate } from \"react-native-webrtc-web-shim\";\r\nexport const peerConstraints = {\r\n\ticeServers: [\r\n\t\t{\r\n\t\t\turls: 'stun:stun.l.google.com:19302'\r\n\t\t}\r\n\t]\r\n};\r\n\r\nexport const sessionConstraints = {\r\n\tmandatory: {\r\n\t\tOfferToReceiveAudio: true,\r\n\t\tOfferToReceiveVideo: true,\r\n\t\tVoiceActivityDetection: true\r\n\t}\r\n};\r\n\r\nconst mediaConstraints = {audio:true, video:{framerate:30}}\r\n\r\n//@ts-ignore\r\nexport {MediaStream, RTCPeerConnection, RTCSessionDescription} from \"react-native-webrtc-web-shim\";\r\n\r\nconst onICEcandidate = (pc:typeof RTCPeerConnection, message:any)=>{\r\n\tconst _message = message.data.rtcMessage\r\n\t\tconst candidate = new RTCIceCandidate(_message);\r\n\t\tif (pc) {\r\n\t\t\tconsole.log(\"ICE candidate Added\");\r\n\t\t\tpc.addIceCandidate(candidate);\r\n\t\t}\r\n}\r\n\r\nconst sendICEcandidate = (event:any, sendMessage:(data:any)=>void, userId:number, target:string) => {\r\n\t// When you find a null candidate then there are no more candidates.\r\n\t// Gathering of candidates has finished.\r\n\tif ( !event.candidate ) { return; };\r\n\t// Send the event.candidate onto the person you're calling.\r\n\t// Keeping to Trickle ICE Standards, you should send the candidates immediately.\r\n\tsendMessage({type:'ICEcandidate', user:userId, data:{target, rtcMessage:event.candidate}})\r\n  }\r\n\r\nconst BAND_WIDTH = 8000\r\n\r\nconst optimizeSdp = (offerDescription:RTCSessionDescription)=>{\r\n\tvar arr = offerDescription.sdp.split('\\r\\n');\r\n\tarr.forEach((str:string, i:number) => {\r\n\t\tif (/^a=fmtp:\\d*/.test(str)) {\r\n\t\t\tarr[i] = str + `;x-google-max-bitrate=${BAND_WIDTH};x-google-min-bitrate=${BAND_WIDTH};x-google-start-bitrate=${BAND_WIDTH}`;\r\n\t\t} else if (/^a=mid:(0|video)/.test(str)) { // if with audio then 0=>1\r\n\t\t\tarr[i] += `\\r\\nb=AS:${BAND_WIDTH}`;\r\n\t\t}\r\n\t});\r\n  \treturn new RTCSessionDescription({\r\n    \ttype: offerDescription.type,\r\n    \tsdp: arr.join('\\r\\n'),\r\n  \t})\r\n}\r\n\r\nconst createOffer = async(pcRefCurrent:{pc?:typeof RTCPeerConnection, user?:{id:number}}, sendMessage:(data:any)=>void, stream:typeof MediaStream, target:string, owner?:{username:string})=>{\r\n\tstream && pcRefCurrent.pc.addStream( stream );\r\n\tconst offerDescription = optimizeSdp((await pcRefCurrent.pc.createOffer( sessionConstraints )));\r\n\tawait pcRefCurrent.pc.setLocalDescription( offerDescription );\r\n\tsendMessage({type:'call', user:pcRefCurrent.user?.id, data:{target, username:owner?.username, rtcMessage:offerDescription}})\r\n}\r\n\r\nexport const useLocalCam = (sendMessage:(data:any)=>void)=>{\r\n\tconst pcRef = useRef<Record<number,{pc:typeof RTCPeerConnection, user:{id:number}}>>({})\r\n\tconst [_stream, setStream] = useState<MediaStream>()\r\n\tconst isPlay = useMemo(()=>_stream?true:false, [_stream])\r\n\t// const [_mirrorStream, setMirrorStream] = useState<MediaStream>()\r\n\tconst CustomRTCView = useCallback(React.memo(({style}:{style:any})=>(_stream?<RTCView stream={_stream} style={style} videoProps={{height:'100%'}} />:<></>)) , [_stream])\r\n\t// const renderMirrorView = useCallback((style)=>_mirrorStream && <RTCView stream={_mirrorStream} style={style} /> , [_mirrorStream])\r\n\tconst start = useCallback(async(owner:{username:string}, stream?:typeof MediaStream, mode?:'camera'|'display')=>{\r\n\t\tconsole.log(\"start\");\r\n\t\tif (!_stream || mode!==undefined) {\r\n\t\t\ttry {\r\n\t\t\t\tlet newStream:typeof MediaStream;\r\n\t\t\t\tif(mode == 'camera'){\r\n\t\t\t\t\tnewStream = await mediaDevices.getUserMedia(mediaConstraints)\r\n\t\t\t\t}\r\n\t\t\t\telse if (mode == 'display'){\r\n\t\t\t\t\tnewStream = await mediaDevices.getDisplayMedia(mediaConstraints)\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tnewStream = stream || await mediaDevices.getUserMedia(mediaConstraints).catch((e:any)=>mediaDevices.getDisplayMedia(mediaConstraints));\r\n\t\t\t\t}\r\n\t\t\t\tsetStream(newStream)\r\n\t\t\t\tObject.entries(pcRef.current).map(([k, v])=>{\r\n\t\t\t\t\tcreateOffer(v, sendMessage, newStream, 'guest', owner)\r\n\t\t\t\t})\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.error(e);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [_stream])\r\n\tconst stop = useCallback(()=>{\r\n\t\tconsole.log(\"stop\");\r\n\t\tif(_stream){\r\n\t\t\t_stream.getTracks().map((track:any) => track.stop());\r\n\t\t\tsetStream(undefined)\r\n\t\t}\r\n\t}, [_stream])\r\n\treturn {\r\n\t\tstart,\r\n\t\tstop,\r\n\t\twebsocketOnMessage: async(response:any, owner:{username:string})=>{\r\n\t\t\tlet type = response.type;\r\n\t\t\tif (type == 'start' && response.data.username == undefined){\r\n\t\t\t  console.log('1 start')\r\n\t\t\t  const peerConnection = new RTCPeerConnection( peerConstraints );\r\n\t\t\t  peerConnection.addEventListener( 'icecandidate', (event:any) => sendICEcandidate(event, sendMessage, response.sender, 'guest'));\r\n\t\t\t  pcRef.current[response.sender] = {pc:peerConnection, user: {id:response.sender}}\r\n\t\t\t  createOffer(pcRef.current[response.sender], sendMessage, _stream, 'guest', owner)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (type == \"answer\" && response.data.target == 'host'){\r\n\t\t\t  console.log('3 answer')\r\n\t\t\t  const peerConnection = pcRef.current[response.sender].pc\r\n\t\t\t  const answerDescription = new RTCSessionDescription(response.data.rtcMessage);\r\n\t\t\t  await peerConnection.setRemoteDescription( answerDescription );\r\n\t\t\t  // const streams = pcRef.current.pc.getRemoteStreams()\r\n\t\t\t  // setMirrorStream(streams[streams.length - 1])\r\n\t\t\t}\r\n\t\t\tif (type == \"ICEcandidate\" && response.data.target=='host'){\r\n\t\t\t\tconst peerConnection = pcRef.current[response.sender].pc\r\n\t\t\t\tonICEcandidate(peerConnection, response)\r\n\t\t\t}\r\n\t\t},\r\n\t\tCustomRTCView,\r\n\t\tisPlay,\r\n\t\t// renderMirrorView,\r\n\t}\r\n}\r\n\r\nexport const useRemoteCam = (sendMessage:(data:any)=>void)=>{\r\n\tconst pcRef = useRef<{pc?:RTCPeerConnection, user?:{username:string, id?:number}, statsInterval?:any}>({})\r\n\tconst [_stream, setStream] = useState<MediaStream>()\r\n\tconst CustomRTCView = useCallback(React.memo((style:any)=>_stream?<RTCView stream={_stream} style={style} videoProps={{height:'100%'}} />:<></>), [_stream])\r\n\tconst isPlay = useMemo(()=>_stream?true:false, [_stream])\r\n\tconst start = useCallback((username:string)=>{\r\n\t\tconsole.log(\"start\");\r\n\t\tif (!pcRef.current.pc) {\r\n\t\t  pcRef.current.pc = new RTCPeerConnection( peerConstraints );\r\n\t\t  pcRef.current.user = {username}\r\n\t\t}\r\n\t\tif (!_stream){\r\n\t\t\tsendMessage({type:'start', username, data:{}})\r\n\t\t}\r\n\t}, [_stream])\r\n\tconst stop = () => {\r\n\t\tconsole.log(\"stop\");\r\n\t\tif (pcRef.current.pc) {\r\n\t\t  // peerConnection._unregisterEvents();\r\n\t\t  setStream(undefined)\r\n\t\t  pcRef.current.pc.close();\r\n\t\t  pcRef.current.pc = undefined\r\n\t\t  pcRef.current.user = undefined\r\n\t\t  clearInterval(pcRef.current.statsInterval)\r\n\t\t}\r\n\t}\r\n\treturn {\r\n\t\tstart,\r\n\t\tstop,\r\n\t\twebsocketOnMessage: async(response:any)=>{\r\n\t\t\tlet type = response.type;\r\n\t\t\tif (type == 'start' && response.data.username && response.data.username == pcRef.current?.user?.username){\r\n\t\t\t\tconsole.log('(remote)1 start')\r\n\t\t\t\tconst peerConnection = pcRef.current.pc\r\n\t\t\t\tif(pcRef.current?.user)\r\n\t\t\t\t\tpcRef.current.user.id = response.sender\r\n\t\t\t\tpeerConnection.addEventListener('icecandidate', (event:any) => sendICEcandidate(event, sendMessage, response.sender, 'host'));\r\n\t\t\t\tpeerConnection.addEventListener('iceconnectionstatechange', (e:any)=>{\r\n\t\t\t\t\tif (pcRef.current.pc.iceConnectionState == 'connected'){\r\n\t\t\t\t\t\tlet activeStream = false\r\n\t\t\t\t\t\tpcRef.current.statsInterval = setInterval(async()=>{\r\n\t\t\t\t\t\t\tconst stats = await pcRef.current.pc.getStats(null)\r\n\t\t\t\t\t\t\tlet statsOutput = \"\";\r\n\t\t\t\t\t\t\tlet framePerSecond = undefined\r\n\t\t\t\t\t\t\tstats.forEach((report:any) => {\r\n\t\t\t\t\t\t\t\tif (report.type === \"inbound-rtp\" && report.kind === \"video\") {\r\n\t\t\t\t\t\t\t\t\tObject.keys(report).forEach((statName) => {\r\n\t\t\t\t\t\t\t\t\t\tstatsOutput += `${statName}: ${report[statName]}\\n`;\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tframePerSecond = report.framesPerSecond\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tconsole.log(activeStream, framePerSecond)\r\n\t\t\t\t\t\t\tif (framePerSecond != undefined){\r\n\t\t\t\t\t\t\t\tactiveStream = true\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (activeStream){\r\n\t\t\t\t\t\t\t\tstop()\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tconsole.log(new Date().toTimeString().split(' ')[0], statsOutput)\r\n\t\t\t\t\t\t}, 1000);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (pcRef.current.pc.iceConnectionState == 'failed'){\r\n\t\t\t\t\t\tstop()\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t// peerConnection.addTransceiver('audio', {\r\n\t\t\t\t// \tdirection: 'recvonly'\r\n\t\t\t\t// });\r\n\t\t\t\tpeerConnection.addTransceiver('video', {\r\n\t\t\t\t\tdirection: 'recvonly'\r\n\t\t\t\t});\r\n\t\t\t\tawait createOffer({pc:pcRef.current.pc, user:{id:response.sender}}, sendMessage, _stream, 'host', pcRef.current.user)\r\n\t\t\t}  \r\n\t\t\tif (type == \"answer\" && response.data.target=='guest' && response.sender == pcRef.current?.user?.id){\r\n\t\t\t\tconsole.log('(remote)3 answer')\r\n\t\t\t\tconst answerDescription = new RTCSessionDescription(response.data.rtcMessage);\r\n\t\t\t\tawait pcRef.current.pc.setRemoteDescription( answerDescription );\r\n\t\t\t\tconst streams = pcRef.current.pc.getRemoteStreams()\r\n\t\t\t\tsetStream(streams[streams.length - 1])\r\n\t\t\t\tsendMessage({type:'end', username:pcRef.current?.user?.username, data:{}})\r\n\t\t\t}\r\n\t\t\tif (type == \"call\" && pcRef.current?.user?.username == response.data.username){\r\n\t\t\t  console.log('2 call')\r\n\t\t\t  const peerConnection = pcRef.current.pc\r\n\t\t\t  if(pcRef.current?.user)\r\n\t\t\t\t  pcRef.current.user.id = response.sender\r\n\t\t\t  if (!peerConnection)\r\n\t\t\t\treturn\r\n\t\t\t  peerConnection.addEventListener( 'icecandidate', (event:any) => sendICEcandidate(event, sendMessage, response.sender, 'host'));\r\n\t\t\t  const offerDescription = new RTCSessionDescription(response.data.rtcMessage);\r\n\t\t\t  await peerConnection.setRemoteDescription( offerDescription );\r\n\t\t\t  const answerDescription = await peerConnection.createAnswer( sessionConstraints );\r\n\t\t\t  await peerConnection.setLocalDescription( answerDescription );\r\n\t\t\t  sendMessage({type:'answer', user:pcRef.current.user?.id, data:{target:'host', rtcMessage:peerConnection.localDescription}})\r\n\t\t\t  // Here is a good place to process candidates.\r\n\t\t\t  const streams = pcRef.current.pc.getRemoteStreams()\r\n\t\t\t  setStream(streams[streams.length - 1])\r\n\t\t\t}\r\n\t\t\tif (type == \"ICEcandidate\" && response.data.target=='guest' && pcRef.current?.user?.id == response.sender)\r\n\t\t\t  onICEcandidate(pcRef.current.pc, response)\r\n\t\t},\r\n\t\tCustomRTCView,\r\n\t\tisPlay\r\n\t}\r\n}","import {StyleSheet} from \"react-native\";\r\nexport {useLocalCam, useRemoteCam} from \"./p2p\"\r\n\r\nexport const camStyle = StyleSheet.create({\r\n\tcontainer:{ flex: 1},\r\n\tcam:{ flex: 1, height:'100%'},\r\n\tbottonContainer: {position:\"absolute\", width:'100%', height:'100%', justifyContent:'flex-end'},\r\n\tbuttonBar: { flexDirection: \"row\", justifyContent: \"space-around\" },\r\n\tlabel: {backgroundColor:'#0008', color:'white', paddingHorizontal:5},\r\n})","import React, { useEffect } from \"react\";\r\nimport {Button, View, Text} from \"react-native\";\r\nimport useAuthContext from \"../../hooks/useAuthContext\";\r\n\r\nimport useWebsocketContext from \"./useWebsocketContext\";\r\nimport { useLocalCam, camStyle} from \"./webrtc\";\r\n\r\n\r\nexport default (props:{mode?:'camera'|'display'|null})=>{\r\n  const {auth} = useAuthContext()\r\n  const {lastJsonMessage, sendJsonMessage} = useWebsocketContext()\r\n  const {start, stop, websocketOnMessage, CustomRTCView, isPlay} = useLocalCam(sendJsonMessage)\r\n  useEffect(()=>{\r\n    auth.user && lastJsonMessage && websocketOnMessage(lastJsonMessage, auth.user)\r\n  }, [lastJsonMessage, auth])\r\n  useEffect(()=>{\r\n    if(props.mode){\r\n      auth.user && start(auth.user, undefined, props.mode)\r\n    }\r\n    else if(props.mode===null){\r\n      isPlay && stop()\r\n    }\r\n  }, [auth, props.mode])\r\n  return (\r\n    <View style={camStyle.container}>\r\n      <CustomRTCView style={camStyle.cam}/>\r\n      <View style={camStyle.bottonContainer}>\r\n        <View style={camStyle.buttonBar}>  \r\n        </View>\r\n        {(props.mode === undefined || isPlay) &&<View style={{flexDirection:'row'}}><Text style={camStyle.label}>{auth.user?.name}</Text></View>}\r\n        <View style={camStyle.buttonBar}>\r\n          {props.mode === undefined && !isPlay && <Button title=\"Start\" onPress={()=>auth.user && start(auth.user)} />}\r\n          {props.mode === undefined && isPlay && <Button title=\"Stop\" onPress={stop} />}\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport CommonSection from \"./CommonSection\"\r\nimport { Image, Linking } from \"react-native\"\r\nimport { View, Text } from \"./Themed\"\r\nimport { Link } from \"../types\"\r\n\r\n\r\n\r\nexport default ({link, isMobile}:{link:Link, isMobile:boolean})=>{\r\n    return <CommonSection containerStyle={{marginHorizontal:0}} bodyStyle={{padding:0}}>\r\n    <TouchableOpacity onPress={()=>Linking.openURL(link.url)} style={{flexDirection:'row'}} containerStyle={{width:'100%'}}>\r\n        <Image source={{uri:link.image}} resizeMode=\"cover\" style={{ width:'100%', maxWidth:isMobile?120:150, maxHeight:isMobile?120:150, borderWidth:1}}/>\r\n        <View style={{flex:1, marginHorizontal:20}}>\r\n        <Text style={{fontSize:20}}>{link.title}</Text>\r\n        <Text style={{fontSize:14}}>{link.description}</Text>\r\n        <Text style={{fontSize:12}}>{link.url}</Text>\r\n        </View>\r\n    </TouchableOpacity>\r\n    </CommonSection>\r\n}","import React, { useState, useEffect, } from \"react\";\r\nimport {Button,Text, TextInput, View} from \"react-native\";\r\nimport useWebsocketContext from \"./useWebsocketContext\";\r\nimport { useRemoteCam, camStyle} from \"./webrtc\";\r\n\r\nexport default (props:{user?:{username:string, name:string}})=>{\r\n  const [username, setUsername] = useState('')\r\n  const {lastJsonMessage, sendJsonMessage} = useWebsocketContext()\r\n  const {start, stop, websocketOnMessage, CustomRTCView, isPlay} = useRemoteCam(sendJsonMessage)\r\n  useEffect(()=>{\r\n    lastJsonMessage && websocketOnMessage(lastJsonMessage)\r\n  }, [lastJsonMessage])\r\n  useEffect(()=>{\r\n    if(props.user){\r\n      start(props.user.username)\r\n    }\r\n    return ()=>stop()\r\n  }, [props.user])\r\n  return (\r\n    <View style={camStyle.container}>\r\n      <CustomRTCView style={camStyle.cam}/>\r\n      <View style={camStyle.bottonContainer}>\r\n        <View style={camStyle.buttonBar}>\r\n        </View>\r\n        {(props.user ===undefined || isPlay) &&\r\n          <View style={{flexDirection:'row'}}>{\r\n            (props.user || isPlay)?\r\n            <Text style={camStyle.label}>{props.user?.name||username}</Text>:\r\n            <>\r\n              <Text style={{borderWidth:1}}>Username:&nbsp;</Text>\r\n              <TextInput style={{borderWidth:1, flex:1}} value={username} onChangeText={setUsername}/>\r\n            </> \r\n          }</View>}\r\n        <View style={camStyle.buttonBar}>\r\n          {props.user === undefined && !isPlay && <Button title=\"Start\" onPress={()=>start(username)} />}\r\n          {props.user === undefined && isPlay && <Button title=\"Stop\" onPress={stop} />}\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\n","import React, {useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState} from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { StyleSheet, Text,  View} from 'react-native';\r\nimport CommonSection from '../../components/CommonSection';\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\nimport { FlatList, TextInput, TouchableOpacity } from 'react-native-gesture-handler';\r\nimport CommonButton from '../../components/CommonButton';\r\nimport useMessengerContentList, { MessengerContentPage, useMessengerContentMutation } from '../../hooks/lists/useMessengerContent.List';\r\nimport useAuthContext from '../../hooks/useAuthContext';\r\nimport HeaderRight from '../../components/HeaderRight';\r\nimport useMessengerMemberList, { useMessengerMemberMutation } from '../../hooks/lists/useMessengerMemberList';\r\nimport { navigate } from '../../navigation';\r\nimport Colors from '../../constants/Colors';\r\nimport Hyperlink from 'react-native-hyperlink'\r\nimport useMessengerChannelList from '../../hooks/lists/useMessengerChannelList';\r\nimport LocalCam from '../../lib/react-native-webrtc/LocalCam';\r\nimport useIsMobile from '../../hooks/useIsMobile';\r\nimport LinkPreview from '../../components/LinkPreview';\r\nimport {default as useRtcContext, WebSocketProvider as RtcProvider} from \"../../lib/react-native-webrtc/useWebsocketContext\";\r\nimport RemoteCam from '../../lib/react-native-webrtc/RemoteCam';\r\n\r\ntype VideoCallProps = {channel_id:number, videoMode:'camera'|'display'|null}\r\n\r\nconst VideoCallContainer = ({channel_id, videoMode}:VideoCallProps)=>{\r\n  const [guests, setGuests] = useState<{username:string, name:string, channel_name:string}[]>([])\r\n  const { lastJsonMessage, sendJsonMessage } = useRtcContext()\r\n  useEffect(()=>{\r\n    if(lastJsonMessage !=null){\r\n      if(lastJsonMessage['type']=='connection'){\r\n        sendJsonMessage({'type':'broadcast', 'data':{'channel_id':channel_id}})\r\n      }\r\n      if(lastJsonMessage['type']=='broadcast'){\r\n        const target = lastJsonMessage['data']['target']\r\n        const channel_name = lastJsonMessage['data']['channel_name']\r\n        if(target == 'host' || target == 'guest')\r\n          setGuests([...guests, {\r\n            username:lastJsonMessage['username'], \r\n            name:lastJsonMessage['data']['name'],\r\n            channel_name\r\n          }])\r\n        if(target == 'disconnect'){\r\n          const exist = guests.find(v=>v.channel_name == channel_name)\r\n          exist && setGuests(guests.filter(v=>v.channel_name != channel_name))\r\n        }\r\n       }\r\n    }\r\n  }, [lastJsonMessage])\r\n  return lastJsonMessage !==undefined ?<View style={[\r\n      {flexDirection: 'row', justifyContent:'center', borderColor:Colors.borderColor, borderRadius:10, paddingTop:10, backgroundColor:'white'},\r\n      videoMode!==null?{borderTopWidth:1}:{}]}>\r\n      {guests.map((user, i)=><View key={i} style={{maxWidth:'33%', flexDirection: 'row', marginHorizontal:10, flex:1}}>\r\n        <RemoteCam user={user}/>\r\n      </View>)}\r\n      <View style={{maxWidth:'33%', flexDirection: 'row', marginHorizontal:10, flex:1}}>\r\n        <LocalCam mode={videoMode}/>\r\n      </View>\r\n    </View>:<></>\r\n}\r\n\r\nconst VideoCallSection = React.memo(({channel_id, videoMode}:VideoCallProps)=>{\r\n  return <RtcProvider disable={videoMode==null}>\r\n    <VideoCallContainer channel_id={channel_id} videoMode={videoMode}/>\r\n  </RtcProvider>\r\n})\r\n\r\nexport default function ChatScreen({navigation, route}: StackScreenProps<any, 'Chat'>) {\r\n  const channel_id = route?.params?.id\r\n  const height = useRef(0)\r\n  const isMobile = useIsMobile()\r\n  const inputRef = useRef<TextInput>(null)\r\n  const {auth} = useAuthContext()\r\n  const channel = useMessengerChannelList(auth)?.find(v=>v.id==parseInt(channel_id))\r\n  const {data, fetchNextPage } = useMessengerContentList(channel_id)\r\n  const memberList = useMessengerMemberList(channel_id)\r\n  const member_id = useMemo(()=>memberList?.find(v=>v.user == auth.user?.id)?.id, [auth, memberList])\r\n  const messengerMemberMutation = useMessengerMemberMutation()\r\n  const [value, setValue] = useState('')\r\n  const [autoFocus, setAutoFocus] = useState(true)\r\n  const [videoMode, setVideoMode] = useState<'camera'|'display'|null>(null)\r\n  const postValue = ()=>{\r\n    if (value.length>0){\r\n      contentMutation.create({channel:channel_id, user:auth.user?.id, content:value})\r\n      setValue('')\r\n      setAutoFocus(true)\r\n    }\r\n  }\r\n  const toggleVideoMode = (mode:'camera'|'display')=>{\r\n    setVideoMode(videoMode!=mode?mode:null)\r\n  }\r\n  const contentMutation = useMessengerContentMutation()\r\n\r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      headerRight: ()=> <HeaderRight extra={[\r\n        {title:'invite', onPress:()=>{navigate(\"InviteScreen\", {id:channel_id})}},\r\n        {title:'leave', onPress:()=>{member_id && messengerMemberMutation.leave(member_id);back()}}\r\n      ]}/>,\r\n      title: channel?.name\r\n    });\r\n  }, [navigation, route, member_id]);\r\n\r\n  const renderItem = useCallback(({item, index}:{item:MessengerContentPage, index:number})=>{\r\n    let nextPage = item.next;\r\n    while(nextPage?.next && nextPage.current.length==0){\r\n      nextPage = nextPage.next\r\n    }\r\n    const nextContent = nextPage?.current[0]\r\n    return <View style={{flexDirection: 'column-reverse'}}>\r\n      \r\n      {item.current.map((content, index2)=>{\r\n        const next = index2 + 1 < item.current.length?item.current[index2+1]:nextContent\r\n        const created:string = content.created.slice(0, 16)\r\n        const date = created.slice(0, 10)\r\n        const isSystem = content.user == null\r\n        const isFirst = next==undefined || (content.user != next.user || created != next.created.slice(0, 16))\r\n        const isSelf = auth.user?.id == content.user\r\n        const dayChanged = next==undefined || date != next.created.slice(0, 10)\r\n        if (isSystem)\r\n          return <View key={content.id} style={{flexDirection:'row', justifyContent:'center', width:'100%', marginVertical:5}}>\r\n            <Text>{content.message_set[0].content}</Text>\r\n          </View>\r\n        return <View key={content.id}>\r\n          {dayChanged?<View style={{flexDirection:'row', justifyContent:'center', width:'100%'}}><Text>{date}</Text></View>:undefined}\r\n          <View key={content.id} style={{flexDirection:'row', justifyContent:isSelf?'space-between':'flex-start', width:'100%'}}>\r\n            {isFirst && !isSelf?<MaterialIcons size={38} style={{marginBottom: -3, marginRight:10 }} name='account-circle'/>:<View style={{width:48}}/>}\r\n            <CommonSection outerContainerStyle={{width:undefined, maxWidth:'90%'}} title={isFirst?content.name:undefined} titleStyle={{flex:undefined}} bodyStyle={{padding:10}} subtitle={`${created.slice(11)}`}>\r\n              {/* @ts-ignore */}\r\n              <Hyperlink linkDefault={ true } style={{wordBreak:\"break-word\"}} linkStyle={{color: '#12b886'}}>\r\n                <Text>{content.message_set[0].content}</Text>\r\n              </Hyperlink>\r\n              {content.link_set.map((link, linkIndex)=><LinkPreview key={linkIndex} link={link} isMobile={isMobile}/>)}\r\n            </CommonSection>\r\n          </View>\r\n        </View>\r\n      })}\r\n    </View>\r\n  }, [navigation, contentMutation])\r\n  \r\n  const back = ()=>{\r\n    if(navigation.canGoBack())\r\n        navigation.goBack()\r\n      else{\r\n        navigation.navigate('HomeScreen', {tab:2})\r\n      }\r\n  }\r\n  useEffect(()=>{\r\n    if (!(channel_id))\r\n      back()\r\n  }, [])\r\n  useEffect(()=>{\r\n    if(autoFocus){\r\n      (inputRef.current as any).focus()\r\n      setAutoFocus(false)\r\n    }\r\n  }, [autoFocus])\r\n\r\n  return <View style={{flex:1, alignItems:'center'}}>\r\n        <FlatList\r\n          style={{width:'100%', flexDirection: 'column-reverse'}}\r\n          contentContainerStyle={{padding:10, flexGrow:1, flexDirection: 'column-reverse'}}\r\n          data={data?.pages}\r\n          renderItem={renderItem}\r\n          onScroll={(e)=>{\r\n            if (e.nativeEvent.contentOffset.y + e.nativeEvent.contentSize.height - height.current < 1)\r\n              fetchNextPage()\r\n          }}\r\n          onLayout={(p)=>{height.current = p.nativeEvent.layout.height}}\r\n        />\r\n      <View style={{width:'100%'}}>\r\n        <VideoCallSection channel_id={channel_id} videoMode={videoMode}/>\r\n        <View style={{bottom:0, width:'100%', backgroundColor:'white', alignItems:'center'}}>\r\n          <View style={{width:'100%',flexDirection:'row', paddingTop:15, paddingBottom:10, paddingHorizontal:19}}>\r\n            <TextInput ref={inputRef} value={value} onChangeText={setValue} style={{flex:1, borderWidth:1, height:40, borderRadius:6, borderColor:Colors.borderColor}} onSubmitEditing={postValue} blurOnSubmit={true}/>\r\n            <CommonButton title={'💬'} onPress={postValue}/>\r\n            <CommonButton title={'📹'} onPress={()=>toggleVideoMode('camera')}/>\r\n            <CommonButton title={'🖥️'} onPress={()=>toggleVideoMode('display')}/>\r\n          </View>\r\n        </View>\r\n      </View>\r\n  </View>\r\n}\r\n// outerContainerStyle={{alignContent:'flex-end'}} containerStyle={{width:'50%'}}\r\n","import React, {useCallback, useRef} from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { StyleSheet, Text, Button, View} from 'react-native';\r\n\r\n\r\nexport default function TabOneScreen({\r\n  navigation\r\n}: StackScreenProps<any, 'TabOne'>) {\r\n  return <View style={{padding:10}}>\r\n    \r\n  </View>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  Panel_Button_Text: {\r\n    textAlign: 'center',\r\n    color: '#fff',\r\n    fontSize: 21\r\n  },\r\n  Panel_Holder: {\r\n    borderWidth: 1,\r\n    borderColor: '#888',\r\n    marginVertical: 5\r\n  }\r\n})","import React, { useMemo } from 'react';\r\n\r\nimport { View, Text, TextProps, StyleProp } from 'react-native';\r\nimport useResizeWindow from '../hooks/useResizeWindow';\r\n\r\ntype Props = {\r\n  name: string,\r\n  width?:number,\r\n  children: React.ReactNode\r\n  textStyle?: StyleProp<TextProps>\r\n}\r\n\r\nexport default function RowField(props:Props) {\r\n  const windowType = useResizeWindow()\r\n  const rowStyle = useMemo(()=>windowType=='landscape'?\r\n    {flexDirection:'row', alignItems: 'center', justifyContent:'space-between'}:\r\n    {flexDirection:'column', alignItems:'flex-start'} as any\r\n  , [windowType])\r\n  return (\r\n    <View style={[{paddingVertical:5, width:'100%'}, rowStyle]}>\r\n        <Text style={[windowType=='landscape'?{flex:1}:{width:'100%'},{paddingHorizontal: 15, fontSize:16}, props.textStyle]}>{props.name}</Text>\r\n        <View style={[windowType=='landscape'?{flex:6}:{width:'100%'},{paddingHorizontal: 15}]}>\r\n          <View style={{width:props.width}}>\r\n            {props.children}\r\n          </View>\r\n        </View>\r\n    </View>\r\n  )\r\n}","import React, { useEffect, useState } from 'react';\r\n\r\nimport { View, Text, StyleProp, ViewStyle, TextStyle } from 'react-native';\r\n\r\nimport { TextInput } from 'react-native-gesture-handler';\r\nimport RowField from './RowField';\r\n\r\ntype Props = {\r\n  name: string,\r\n  value: any,\r\n  setValue?: (value:any)=>void\r\n  width?:any\r\n  disabled?:boolean\r\n  multiline?:boolean\r\n  minHeight?:number\r\n  textStyle?:StyleProp<TextStyle>\r\n  style?:StyleProp<ViewStyle>\r\n}\r\n\r\nexport default function TextField(props:Props) {\r\n  const [contentHeight, setContentHeight] = useState<number>()\r\n  const minHeight = props.minHeight || 30\r\n  return (\r\n    <RowField name={props.name} width={props.width} textStyle={props.textStyle}>\r\n      <TextInput style={[{\r\n          borderColor:'#d0d7de', \r\n          fontSize:16, \r\n          borderWidth:1, \r\n          borderRadius:6, \r\n          paddingHorizontal:10, \r\n          paddingVertical:3, \r\n          backgroundColor:props.disabled?'#EEE':undefined,\r\n          height:props.multiline?contentHeight:minHeight,\r\n        }, props.style]} editable={!props.disabled} value={props.value} onChangeText={props.setValue}\r\n        onContentSizeChange={props.multiline?(e) => setContentHeight(Math.max(e.nativeEvent.contentSize.height, minHeight) + 2):undefined} \r\n        multiline={props.multiline}\r\n      ></TextInput>\r\n   </RowField>\r\n  )\r\n}","import React, {useState, useEffect } from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { StyleSheet } from 'react-native';\r\nimport CommonSection from '../components/CommonSection';\r\nimport { View, Text } from '../components/Themed';\r\nimport CommonButton from '../components/CommonButton';\r\n// import useBoardChannelList, { useBoardChannelMutation } from '../hooks/lists/useBoardChannelList';\r\nimport useAuthContext from '../hooks/useAuthContext';\r\nimport { navigate } from '../navigation';\r\nimport { Channel } from '../types';\r\nimport useMessengerChannelList, { useMessengerChannelMutation } from '../hooks/lists/useMessengerChannelList';\r\nimport TextField from '../components/TextField';\r\n\r\n\r\nexport default function ChannelEditScreen({navigation, route}: StackScreenProps<any, 'ChannelEdit'>) {\r\n  const id = route?.params?.id\r\n  const type = route?.params?.type\r\n  const {auth} = useAuthContext()\r\n  const channelList = useMessengerChannelList(auth)\r\n  const channelMutation = useMessengerChannelMutation()\r\n  const channel = channelList?.find(v=>v.id==id)\r\n  const [name, setName] = useState('')\r\n  const [description, setDescription] = useState('')\r\n  const back = ()=>{\r\n    if(navigation.canGoBack())\r\n        navigation.goBack()\r\n      else{\r\n        navigation.replace('Main')\r\n      }\r\n  }\r\n  useEffect(()=>{\r\n    if (channel){\r\n      setName(channel.name)\r\n      setDescription(channel?.description || '')\r\n    }\r\n  }, [channel])\r\n  return <CommonSection outerContainerStyle={{alignSelf:'center'}}>\r\n    <View style={{justifyContent:'space-around'}}>\r\n    <Text style={{fontSize:20}}>Edit Channel - {type}</Text>\r\n    </View>\r\n    <View style={styles.separator} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />\r\n    <View style={{width:'100%'}}>\r\n      <TextField name='Channel Name' value={name} setValue={setName} width={'60%'}/>\r\n      <TextField name='Description' value={description} setValue={setDescription} multiline width={'60%'}/>\r\n    </View>\r\n    <View style={{width:'100%', flexDirection:'row', justifyContent:'flex-end'}}>\r\n      <CommonButton title={'save'} onPress={()=>{\r\n        if(auth?.user?.id && auth.groupId){\r\n          const newChannel:Channel = {id, name, description, type, owner:auth?.user?.id, group:auth.groupId};\r\n          (id?channelMutation.update(newChannel):channelMutation.create(newChannel)).then(v=>navigate(\"Main\", {\r\n            screen:v.type == 'messenger'?'MessengerScreen':'BoardScreen',\r\n            params:{id:v.id}\r\n          }))\r\n        }\r\n      }}/>\r\n      <CommonButton title={'cancel'} style={{marginHorizontal:5}} onPress={back}/>\r\n    </View>\r\n  </CommonSection>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  field:{\r\n    width:'50%',\r\n    flexDirection:'row',\r\n    padding:10,\r\n  },\r\n  separator: {\r\n    marginBottom: 20,\r\n    height: 1,\r\n    width: '100%',\r\n  },\r\n})","import React, {useRef,MutableRefObject, useMemo, useState } from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { View, Text } from '../components/Themed';\r\nimport CommonSection from '../components/CommonSection';\r\nimport useAuthContext from '../hooks/useAuthContext';\r\nimport useUserMembershipList from '../hooks/lists/useUserMembershipList';\r\nimport { UserMembership } from '../types';\r\nimport CommonButton from '../components/CommonButton';\r\nimport useMessengerMemberList, { useMessengerMemberMutation } from '../hooks/lists/useMessengerMemberList';\r\nimport { renderMemberItem } from '../tabs/MemberTab';\r\nimport { navigate } from '../navigation';\r\n\r\n\r\nconst InviteItem = (props:{item:UserMembership, selectedRef:MutableRefObject<Set<number>>})=>{\r\n  const [selected, setSelected] = useState(props.selectedRef.current.has(props.item.id))\r\n  return <View style={selected?{borderWidth:1, borderColor:'blue'}:{}}>\r\n    {renderMemberItem(props.item, (item)=>{\r\n      if (selected){\r\n        setSelected(false)\r\n        props.selectedRef.current.delete(item.id)\r\n      }\r\n      else{\r\n        setSelected(true)\r\n        props.selectedRef.current.add(item.id)\r\n      }\r\n    })}\r\n  </View>\r\n\r\n}\r\n\r\nexport default function InviteScreen({navigation, route}: StackScreenProps<any, 'Invite'>) {\r\n  const id = route?.params?.id\r\n  const {auth} = useAuthContext()\r\n  const userList = useUserMembershipList(auth)\r\n  const memberList = useMessengerMemberList(id)\r\n  const messengerMemberMutation = useMessengerMemberMutation()\r\n  const selectedRef = useRef<Set<number>>(new Set())\r\n  const data = useMemo(()=>{\r\n    const memberSet = new Set(memberList?.map(v=>v.user))\r\n    return userList?.filter(v=>!memberSet.has(v.id))\r\n  }, [userList, memberList])\r\n\r\n\r\n  const back = ()=>{\r\n    if(navigation.canGoBack())\r\n      navigation.goBack()\r\n    else if (id)\r\n      navigate(\"ChatScreen\", {id})\r\n    else\r\n      navigation.replace('Main')\r\n  }\r\n\r\n  return <CommonSection outerContainerStyle={{alignSelf:'center'}}>\r\n    {data?.map((item, index)=><InviteItem key={index} item={item} selectedRef={selectedRef}/>)}\r\n    <View style={[{width:'50%', flexDirection:'row', padding:10,}, {justifyContent:'flex-end'}]}>\r\n      <CommonButton title={'save'} onPress={()=>{\r\n        messengerMemberMutation.invite({\r\n          channel_id:id,\r\n          user_ids:[...selectedRef.current]\r\n        })\r\n        back()\r\n      }}/>\r\n      <CommonButton title={'cancel'} onPress={back}/>\r\n    </View>\r\n  </CommonSection>\r\n}\r\n\r\n","import LoginScreen from \"./main/LoginScreen\";\r\nimport ChatScreen from \"./main/ChatScreen\";\r\nimport HomeScreen from \"./main/HomeScreen\";\r\nimport TabOneScreen from \"./main/TabOneScreen\";\r\n// import BoardScreen from \"../lib/blacktokki-board/BoardScreen\";\r\n// import BoardEditScreen from \"../lib/blacktokki-board/BoardEditScreen\";\r\nimport ChannelEditScreen from \"./ChannelEditScreen\"\r\nimport { Screens } from \"../types\";\r\nimport InviteScreen from \"./InviteScreen\";\r\nimport ProfileScreen from \"./ProfileScreen\";\r\n\r\nexport const main = {\r\n    HomeScreen:{\r\n        title:'home',\r\n        component:HomeScreen,\r\n        path:'home',\r\n    },\r\n    ChatScreen:{\r\n        title:'chat',\r\n        component:ChatScreen,\r\n        path:'chat'\r\n    },\r\n    // BoardScreen:{\r\n    //     title:'board',\r\n    //     component:BoardScreen,\r\n    //     path:'board'\r\n    // },\r\n    TabOneScreen:{\r\n        title:'tab one',\r\n        component:TabOneScreen,\r\n        path:'one'\r\n    },\r\n} as Screens\r\n\r\nexport const login = {\r\n    LoginScreen:{\r\n        path: 'login',\r\n        title: '로그인',\r\n        component:LoginScreen\r\n    },\r\n} as Screens\r\n\r\nexport const modal = {\r\n    // BoardEditScreen:{\r\n    //     title:'board',\r\n    //     component:BoardEditScreen,\r\n    //     path:'modal/board'\r\n    // },\r\n    ChannelEditScreen:{\r\n        title:'channel',\r\n        component:ChannelEditScreen,\r\n        path:'modal/channel'\r\n    },\r\n    InviteScreen:{\r\n        title:'invite',\r\n        component:InviteScreen,\r\n        path:'modal/invite'\r\n    },\r\n    ProfileScreen:{\r\n        title:'profile',\r\n        component:ProfileScreen,\r\n        path:'modal/profile'\r\n    }\r\n} as Screens","import React, {useLayoutEffect} from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { StyleSheet, Text, Button, View} from 'react-native';\r\nimport { Text as StyledText } from 'react-native-paper';\r\nimport {TabViewNavigator} from '../../navigation/DrawerNavigator';\r\nimport useResizeWindow from '../../hooks/useResizeWindow';\r\nimport { bottomTabs } from '../../tabs';\r\nimport { navigate } from '../../navigation';\r\nimport HeaderRight from '../../components/HeaderRight';\r\nimport TextButton from '../../components/TextButton';\r\nimport Colors from '../../constants/Colors';\r\n\r\n// navigate(\"BoardEditScreen\", {channel_id:item.channel, id:item.id})\r\n// deleteBoardContent(item.id).then(()=>navigate('BoardScreen', {id:item.channel}))\r\n\r\nexport default function HomeScreen({navigation, route}: StackScreenProps<any, 'Home'>) {\r\n  const windowType = useResizeWindow();\r\n\r\n  const options = [\r\n    {title:'member', headerRight:()=><HeaderRight/>},\r\n    {title:'messenger', headerRight:()=><HeaderRight extra={[{title:'create', onPress:()=>navigate(\"ChannelEditScreen\", {type:\"messenger\"})}]}/>},\r\n    // {title:'board', headerRight:()=><HeaderRight extra={[{title:'create', onPress:()=>navigate(\"ChannelEditScreen\", {type:\"board\"})}]}/>},\r\n    {title:'config', headerRight:()=><HeaderRight/>}\r\n  ]\r\n  \r\n  useLayoutEffect(() => {\r\n    const index = route?.params?.tab | 0\r\n    navigation.setOptions(windowType == 'portrait'?options[index]:{\r\n      title: 'home',\r\n      headerRight: ()=><HeaderRight/>\r\n    });\r\n  }, [navigation, route, windowType]);\r\n  return windowType == 'landscape'?\r\n    <View style={{flex:1, justifyContent:'center', alignItems:'center'}}>\r\n      <View style={{width:'80%', height:'80%'}}>\r\n        <StyledText style={{fontSize:32}}>Tokki Tok</StyledText>\r\n        <View style={{backgroundColor:Colors.borderColor, height:1, width:'100%'}}/>\r\n        <View style={{flex:1, alignItems:'flex-start'}}>\r\n          <Text style={{fontSize:20, color:'gray'}}>Welcome! This is a messenger for teams.</Text>\r\n          <Text style={{fontSize:24}}> </Text>\r\n          <Text style={{fontSize:24, fontWeight:'500'}}>Quick Start</Text>\r\n          <TextButton title='+ New Messenger' textStyle={{fontSize:20}} style={{paddingLeft:0, borderRadius:20}} onPress={()=>navigate(\"ChannelEditScreen\", {type:\"messenger\"})}/>\r\n          {/* <TextButton title='+ New Board' textStyle={{fontSize:20}} style={{paddingLeft:0, borderRadius:20}} onPress={()=>navigate(\"ChannelEditScreen\", {type:\"board\"})}/> */}\r\n        </View>\r\n      </View>\r\n    </View>:\r\n    <TabViewNavigator tabs={bottomTabs} tabBarPosition=\"bottom\" index={parseInt(route.params?.['tab'] || 0)} onTab={(index)=>{navigation.setParams({tab:index})}}/>\r\n}\r\n\r\n","import React, {useCallback, useEffect, useRef} from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { StyleSheet, Text, Button, View} from 'react-native';\r\nimport Profile from '../components/Profile';\r\nimport useAuthContext from '../hooks/useAuthContext';\r\nimport useUserMembershipList from '../hooks/lists/useUserMembershipList';\r\nimport { useMessengerChannelMutation } from '../hooks/lists/useMessengerChannelList';\r\nimport CommonButton from '../components/CommonButton';\r\nimport { Channel } from '../types';\r\nimport { navigate } from '../navigation';\r\n\r\n\r\nexport default function ProfileScreen({\r\n  navigation, route\r\n}: StackScreenProps<any, 'Profile'>) {\r\n  const id = route?.params?.id\r\n  const {auth} = useAuthContext()\r\n  const userList = useUserMembershipList(auth)\r\n  const user = userList?.find(v=>v.id==id)\r\n  const channelMutation = useMessengerChannelMutation()\r\n  const back = ()=>{\r\n    if(navigation.canGoBack())\r\n        navigation.goBack()\r\n      else{\r\n        navigation.replace('Main')\r\n      }\r\n  }\r\n  useEffect(()=>{\r\n    if (!(id && user) && userList)\r\n      back()\r\n  }, [userList])\r\n  return user?<View style={{padding:10}}>\r\n    \r\n    <Profile username={user?.username} name={user?.name} />\r\n    <CommonButton title={'create messenger'} onPress={()=>{\r\n      if(auth?.user?.id && auth.groupId){\r\n        const newChannel:Channel = {name:`${auth.user.name}, ${user.name}`, type:'messenger', owner:auth?.user?.id, group:auth.groupId};\r\n        channelMutation.create(newChannel).then(v=>navigate(\"Main\", {screen:\"MessengerScreen\", params: {id:v.id}}))\r\n      }\r\n    }}/>\r\n  </View>:<></>\r\n}\r\n","import React, { Context, createContext,  useContext, useEffect, useState } from \"react\"\r\nimport useWebSocket from \"react-use-websocket\"\r\nimport { SendJsonMessage } from \"react-use-websocket/dist/lib/types\"\r\n// @ts-ignore\r\nimport {API_URL} from \"@env\"\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { AppState, AppStateStatus } from \"react-native\";\r\n\r\ntype WebsocketContextType = {lastJsonMessage:any, sendJsonMessage:SendJsonMessage }\r\nconst WebSocketContext = createContext<WebsocketContextType>({lastJsonMessage:undefined, sendJsonMessage:()=>{}});\r\nconst [SCHEMA, DOMAIN] = `${API_URL}`.split('://')\r\n\r\nexport const WebSocketInternalProvider = ({children, path, Context, useBackground}:{children:React.ReactNode, path:string, Context:Context<WebsocketContextType>, useBackground?:boolean})=>{\r\n  const [token, setToken] = useState<string|null>(null)\r\n  const [isActive, setIsActive] = useState<boolean>(useBackground || AppState.currentState == 'active')\r\n  const { lastJsonMessage, sendJsonMessage } = useWebSocket(`${SCHEMA=='https'?'wss':'ws'}://${DOMAIN}/${path}`,{\r\n    shouldReconnect: (closeEvent) => true,\r\n    protocols: token?['Authorization',  token]:undefined,\r\n    onOpen: (e)=>{console.log(`success websocket connection(${path})`)},\r\n    onClose: (e)=> {console.log(`closed websocket connection(${path})`)},\r\n  }, isActive && token!=null)\r\n  useEffect(()=>{\r\n    AsyncStorage.getItem('Authorization').then(setToken)\r\n    const onChange = (nextState:AppStateStatus)=>setIsActive(useBackground || nextState == 'active')\r\n    AppState.addEventListener(\"change\", onChange)\r\n    return ()=>AppState.removeEventListener(\"change\", onChange)\r\n  }, [])\r\n  return (token==null)?<>{children}</>:<Context.Provider value={{lastJsonMessage, sendJsonMessage}}>\r\n      {children}\r\n    </Context.Provider>\r\n}\r\n\r\nexport const WebSocketProvider = React.memo(({disable, children}:{disable?:boolean, children:React.ReactNode})=>{\r\n  return disable?<>{children}</>:<WebSocketInternalProvider path={'messenger/ws/'} Context={WebSocketContext}>\r\n    {children}\r\n  </WebSocketInternalProvider>\r\n})\r\n\r\nexport default ()=>{\r\n  const webSocketContext = useContext(WebSocketContext)\r\n  return webSocketContext\r\n}\r\n\r\n","import React, { useState } from 'react';\r\nimport { StyleSheet} from 'react-native';\r\nimport { CustomButtonProps } from '../types';\r\nimport CommonButton from './CommonButton';\r\n\r\nexport default (props:CustomButtonProps)=>{\r\n    return <CommonButton {...props} style={[styles.style, props.style]}/>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    style:{\r\n        borderRadius:6, \r\n        backgroundColor: 'transparent',\r\n        borderWidth:0\r\n    },\r\n});\r\n","import { Platform } from 'react-native';\r\n//@ts-ignore\r\nimport useMobileDetect from 'use-mobile-detect-hook';\r\n\r\nexport default ()=>{\r\n    const detectMobile = useMobileDetect();\r\n    return (detectMobile.isMobile() || Platform.OS == 'android' || Platform.OS == 'ios') as boolean\r\n}","import * as React from 'react';\r\nimport { View } from './Themed';\r\nimport { StyleSheet, StyleProp, ViewStyle, TextStyle, Pressable } from 'react-native';\r\nimport Colors from '../constants/Colors';\r\n\r\nexport type ItemParamList = {\r\n    outerContainerStyle?:StyleProp<TextStyle>\r\n    containerStyle?:StyleProp<ViewStyle>\r\n    bodyStyle?:StyleProp<ViewStyle>\r\n    children?: React.ReactNode\r\n    onPress?: ()=>void\r\n}\r\n\r\nexport default function CommonItem(props:ItemParamList){\r\n  const [hover, setHover] = React.useState(false)\r\n  const [press, setPress] = React.useState(false)\r\n  return (\r\n    <Pressable\r\n      style={[styles.outerContainer ,props.outerContainerStyle, (press)?{backgroundColor:'rgb(242,242,242)'}:{}]}\r\n      onPressIn={()=>{setPress(true)}}\r\n      onPressOut={()=>{setPress(false);props.onPress?.()}}\r\n       //@ts-ignore\r\n       onHoverIn={()=>setHover(true)}\r\n       onHoverOut={()=>setHover(false)}\r\n    >\r\n        <View style={[styles.container ,props.containerStyle]}>\r\n            <View style={[styles.bodyView, props.bodyStyle]}>\r\n                <>{props.children}</>\r\n            </View>\r\n      </View>\r\n    </Pressable>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  outerContainer:{\r\n    width:'100%',\r\n    maxWidth:1080,\r\n    alignItems:'stretch',\r\n  },  \r\n  container: {\r\n      marginHorizontal:20,\r\n      backgroundColor:'transparent'\r\n    },\r\n    bodyView:{\r\n      width: '100%',\r\n      padding: 10,\r\n      minHeight: 40,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      borderBottomWidth:1,\r\n      borderColor:Colors.borderColor,\r\n      backgroundColor:'transparent'\r\n    }\r\n  });\r\n  ","import { useQuery } from \"react-query\";\r\nimport { getUserMembershipList } from \"../../apis\";\r\nimport { Auth } from \"../useAuthContext\";\r\n\r\nexport default function useUserMembershipList(auth?:Auth){\r\n  const { data } = useQuery([\"UserMembershipList\", auth?.groupId] , async()=>auth?.groupId?(await getUserMembershipList(auth?.groupId)):[])\r\n  return data\r\n}","import React from \"react\"\r\nimport { View, Text } from \"react-native\"\r\nimport CommonItem from \"../components/CommonItem\"\r\n// import useBoardChannelList from \"../lib/blacktokki-board/useBoardChannelList\"\r\nimport useMessengerChannelList from \"../hooks/lists/useMessengerChannelList\"\r\nimport useAuthContext from \"../hooks/useAuthContext\"\r\nimport { navigate } from \"../navigation\"\r\n\r\nconst DrawerTab = (props:{data:{name:string, onPress?:()=>void}[]})=><View style={{flex:1, backgroundColor:'white'}}>\r\n    {props.data.map((item, index)=><CommonItem key={index} containerStyle={{marginHorizontal:0}} bodyStyle={{alignItems:'flex-start'}} onPress={item.onPress}>\r\n        <Text style={{marginLeft:20}}>{item.name}</Text>\r\n    </CommonItem>\r\n    )}\r\n</View>\r\n\r\nexport default {\r\n    Messenger:()=>{\r\n        const {auth} = useAuthContext()\r\n        const channelList = useMessengerChannelList(auth);\r\n        return <DrawerTab data={(channelList || []).map(item=>({...item, onPress:()=>navigate(\"ChatScreen\", {id:item.id})}))}/>\r\n    },\r\n    // Board:()=>{\r\n    //     const {auth} = useAuthContext()\r\n    //     const channelList = useBoardChannelList(auth);\r\n    //     return <DrawerTab data={(channelList || []).map(item=>({...item, onPress:()=>navigate(\"BoardScreen\", {id:item.id})}))}/>\r\n    // },\r\n}","import { Ionicons, FontAwesome } from \"@expo/vector-icons\"\r\nimport React from \"react\"\r\nimport { Text, View } from \"react-native\"\r\nimport CommonItem from \"../components/CommonItem\"\r\nimport useAuthContext from \"../hooks/useAuthContext\"\r\nimport useMessengerChannelList from \"../hooks/lists/useMessengerChannelList\"\r\nimport { navigate } from \"../navigation\"\r\n\r\nexport default ()=>{\r\n    const {auth} = useAuthContext()\r\n    const channelList = useMessengerChannelList(auth)\r\n    const today = (new Date()).toISOString().slice(0, 10)\r\n    return <View style={{flex:1, backgroundColor:'white'}}>\r\n        {channelList?.map((item, index)=>{\r\n            const date = item.last_message?.created.slice(0,10)\r\n            return <CommonItem key={index} bodyStyle={{flexDirection:'row', justifyContent:'space-between'}} onPress={()=>navigate(\"ChatScreen\", {id:item.id})}>\r\n                <View style={{flexDirection:'row'}}>\r\n                    <FontAwesome size={36} style={{ marginBottom: -3, marginRight:20 }} name='users'/>\r\n                    <View>\r\n                        <View style={{flexDirection:'row'}}>\r\n                            <Text style={{fontSize:18}}>{item.name}</Text>\r\n                            <Text style={{fontSize:18, opacity: 0.4, paddingLeft:5}}>{item.member_count}</Text>\r\n                        </View>\r\n                        <Text style={{fontSize:16, opacity: 0.4}}>{item.last_message?.content}</Text>\r\n                    </View>\r\n                </View>\r\n                <View>\r\n                    <Text style={{fontSize:14, opacity: 0.4, textAlign:'right'}}>{date==today?item.last_message?.created.slice(11,16):date}</Text>\r\n                    <Text style={{fontSize:14, textAlign:'right'}}>{item.unread_count?item.unread_count:' '}</Text>\r\n                </View>\r\n            </CommonItem>\r\n        })}\r\n    </View>\r\n}\r\n\r\nexport const MessengerIcon = <Ionicons size={30} style={{ marginBottom: -3 }} name='chatbox'/>","import React from \"react\";\r\nimport MemberTab, {MemberIcon} from \"./MemberTab\";\r\nimport OneTab, {ConfigIcon} from \"./OneTab\";\r\nimport DrawerTab  from './DrawerTab';\r\nimport MessengerTab, {MessengerIcon} from \"./MessengerTab\";\r\n// import BoardTab, {BoardIcon}  from \"../lib/blacktokki-board/BoardTab\";\r\n\r\nexport const bottomTabs = {\r\n    OneTab:{\r\n        title:'member',\r\n        component:MemberTab,\r\n        icon:MemberIcon,\r\n    },\r\n    TwoTab:{\r\n        title:'messenger',\r\n        component:MessengerTab,\r\n        icon:MessengerIcon\r\n    },\r\n    // ThreeTab:{\r\n    //     title:'board',\r\n    //     component:BoardTab,\r\n    //     icon:BoardIcon\r\n    // },\r\n    // FourTab:{\r\n    //     title:'config',\r\n    //     component:OneTab,\r\n    //     icon:ConfigIcon\r\n    // }\r\n} as Record<string, {title:string, component:React.ComponentType<any>, icon:JSX.Element}>\r\n\r\nexport const drawerTabs = {\r\n    TwoTab:{\r\n        title:'messenger',\r\n        component:DrawerTab.Messenger,\r\n        icon:MessengerIcon\r\n    },\r\n    // ThreeTab:{\r\n    //     title:'board',\r\n    //     component:DrawerTab.Board,\r\n    //     icon:BoardIcon\r\n    // }\r\n} as Record<string, {title:string, component:React.ComponentType<any>, icon:JSX.Element}>","import { MaterialCommunityIcons, MaterialIcons } from \"@expo/vector-icons\"\r\nimport React from \"react\"\r\nimport { Text, View } from \"react-native\"\r\nimport CommonItem from \"../components/CommonItem\"\r\nimport useAuthContext from \"../hooks/useAuthContext\"\r\nimport useUserMembershipList from \"../hooks/lists/useUserMembershipList\"\r\nimport { UserMembership } from \"../types\"\r\nimport { navigate } from \"../navigation\"\r\n\r\nexport const renderMemberItem = (item:UserMembership, onPress?:(item:UserMembership)=>void)=> (\r\n    <CommonItem key={item.id} bodyStyle={{flexDirection:'row', justifyContent:'flex-start'}} onPress={onPress?()=>onPress(item):undefined}>\r\n        <MaterialIcons size={38} style={{ marginBottom: -3, marginRight:10 }} name='account-circle'/>\r\n        <Text style={{fontSize:20, fontWeight:'400'}}>{item.name}</Text>\r\n    </CommonItem>\r\n)\r\n\r\nexport default ()=>{\r\n    const {auth} = useAuthContext()\r\n    const userList = useUserMembershipList(auth)\r\n    return <View style={{flex:1, backgroundColor:'white'}}>\r\n        {userList && userList.map(item=>renderMemberItem(item, (item)=>navigate(\"ProfileScreen\", {id:item.id})))}\r\n    </View>\r\n}\r\n\r\nexport const MemberIcon = <MaterialCommunityIcons size={32} style={{ marginBottom: -3 }} name='account'/>","import { ColorSchemeName, useColorScheme as _useColorScheme } from 'react-native';\r\n\r\n// The useColorScheme value is always either light or dark, but the built-in\r\n// type suggests that it can be null. This will not happen in practice, so this\r\n// makes it a bit easier to work with.\r\nexport default function useColorScheme(): NonNullable<ColorSchemeName> {\r\n  return _useColorScheme() as NonNullable<ColorSchemeName>;\r\n}\r\n","import { useTheme } from '@react-navigation/native';\r\nimport React, { useState } from 'react';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport { TabView, SceneMap,NavigationState, SceneRendererProps, TabBar } from 'react-native-tab-view';\r\nimport { navigate } from '.';\r\nimport Profile from '../components/Profile';\r\nimport TextButton from '../components/TextButton';\r\nimport Colors from '../constants/Colors';\r\nimport useResizeWindow from '../hooks/useResizeWindow';\r\nimport { drawerTabs } from '../tabs';\r\nimport { UserMembership } from '../types';\r\n\r\nexport const TabViewNavigator = (props:{tabs:typeof drawerTabs, tabBarPosition:\"top\"|\"bottom\", index?:number, onTab?:(index:number)=>void})=>{\r\n  const [index, setIndex] = React.useState(props.index || 0);\r\n  const entries = Object.entries(props.tabs)\r\n  const onTab = props.onTab\r\n  const icons = Object.assign({}, ...entries.map(([k, v])=>({[k]:v.icon})))\r\n  return <TabView\r\n    renderTabBar={(props:SceneRendererProps & {navigationState: NavigationState<any>})=>{\r\n      return <TabBar\r\n        {...props}\r\n        indicatorStyle={{ backgroundColor: \"#2196F3\" }}\r\n        style={{ backgroundColor:'white' }}\r\n        activeColor={'black'}\r\n        inactiveColor={'black'}\r\n        renderIcon={(scene)=>icons[scene.route.key]}\r\n        onTabPress={(scene)=>onTab?.(entries.findIndex(([k, v])=>k == scene.route.key))}\r\n      />\r\n    }}\r\n    navigationState={{ index, routes: entries.map(([k, v])=>({key:k, title:v.title}))}}\r\n    onIndexChange={setIndex}\r\n    renderScene={SceneMap(Object.assign({}, ...entries.map(([k, v])=>({[k]:v.component}))))}\r\n    tabBarPosition={props.tabBarPosition}\r\n  />\r\n}\r\n\r\nconst onAddList = [\r\n  ()=>navigate(\"ChannelEditScreen\", {type:\"messenger\"}),\r\n  ()=>navigate(\"ChannelEditScreen\", {type:\"board\"})\r\n]\r\n\r\nexport default ({user}:{user:UserMembership})=> {\r\n  const { colors } = useTheme();\r\n  const windowType = useResizeWindow();\r\n  const [index, setIndex] = useState(0);\r\n  return windowType=='landscape'?<View\r\n      style={[\r\n        styles.tabBar,\r\n        {\r\n          backgroundColor: colors.card,\r\n          borderTopColor: colors.border,\r\n        },\r\n        // tabBarStyle,\r\n      ]}\r\n      pointerEvents={false ? 'none' : 'auto'}\r\n    >\r\n      <Profile username={user.username} name={user.name}/>\r\n      <View style={{flexDirection:'row-reverse'}}>\r\n          <TextButton title='+' textStyle={{fontSize:20}} style={{borderRadius:20}} onPress={onAddList[index]}/>\r\n      </View>\r\n      <View accessibilityRole=\"tablist\" style={styles.content}>\r\n        {Object.keys(drawerTabs).length>1 ? \r\n          <TabViewNavigator tabs={drawerTabs} tabBarPosition={\"top\"} onTab={setIndex}/>: \r\n          <View style={{borderTopWidth:1, flex:1, borderColor:colors.border}}>            \r\n            {Object.values(drawerTabs).map(drawerTab=>{const Tab = drawerTab.component; return <Tab key={drawerTab.title}/>})}\r\n          </View>\r\n        }\r\n      </View>\r\n    </View>:<View style={{width:0}}></View>\r\n}\r\n\r\n{/*<Text style={[styles.label, { color: d.isFocused ? colors.primary : '#222' }]}></Text> */}\r\n\r\nconst styles = StyleSheet.create({\r\n    tabBar: {\r\n      width:240,\r\n      elevation: 8,\r\n      borderRightWidth:1,\r\n      borderColor:Colors.borderColor\r\n    },\r\n    content: {\r\n      flex: 1,\r\n      flexDirection: 'row',\r\n    },\r\n    tab: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n    },\r\n    label: {\r\n        textAlign: 'center',\r\n        backgroundColor: 'transparent',\r\n      },\r\n  });","import * as React from 'react';\r\nimport {View, Text} from 'react-native';\r\nimport { Avatar } from 'react-native-paper';\r\nimport Colors from '../../constants/Colors';\r\nimport { ProfileProps } from '../../types';\r\n\r\nexport default (props:ProfileProps) => (\r\n    <View style={{width:'100%', height:135, justifyContent:'space-evenly', alignItems:'center'}}>\r\n        <Avatar.Text style={{backgroundColor:Colors.header}} size={75} label={props.name.split(' ').map(v=>v[0]).join().toUpperCase()} />\r\n        <Text style={{fontWeight:'bold', fontSize:15}}>{props.name}</Text>\r\n        <Text style={{fontWeight:'normal', fontSize:14}}>{props.username}</Text>\r\n    </View>\r\n);","import React from 'react';\r\nimport {View} from 'react-native'\r\nimport Profile from '../lib/react-native-paper/Profile';\r\nimport { ProfileProps } from '../types';\r\n\r\nexport default (props:ProfileProps)=>{\r\n    return <View style={{width:'100%', height:135}}>\r\n        <Profile {...props}/>\r\n    </View>\r\n}\r\n\r\n","/**\r\n * Learn more about deep linking with React Navigation\r\n * https://reactnavigation.org/docs/deep-linking\r\n * https://reactnavigation.org/docs/configuring-links\r\n */\r\n\r\nimport { LinkingOptions } from '@react-navigation/native';\r\nimport * as Linking from 'expo-linking';\r\nimport {main, login, modal} from '../screens';\r\n\r\nconst ROOTPATH = 'tokki-tok'  // github repository name\r\n\r\nObject.values(modal).forEach(v=>v.path = ROOTPATH + '/' + v.path)\r\n\r\nexport default  {\r\n  prefixes: [Linking.makeUrl('/')],\r\n  config: {\r\n    screens: {\r\n      Main: {\r\n        screens:{\r\n          ...main,\r\n          ...login,\r\n          NotFound: '*',\r\n        },\r\n        path: ROOTPATH\r\n      },\r\n      ...modal\r\n    },\r\n  },\r\n} as LinkingOptions;\r\n","import { StackScreenProps } from '@react-navigation/stack';\r\nimport * as React from 'react';\r\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\r\n\r\nexport default function NotFoundScreen({\r\n  navigation,\r\n}: StackScreenProps<any, 'NotFound'>) {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>This screen doesn't exist.</Text>\r\n      <TouchableOpacity onPress={() => navigation.replace('HomeScreen')} style={styles.link}>\r\n        <Text style={styles.linkText}>Go to home screen!</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n  link: {\r\n    marginTop: 15,\r\n    paddingVertical: 15,\r\n  },\r\n  linkText: {\r\n    fontSize: 14,\r\n    color: '#2e78b7',\r\n  },\r\n});\r\n","import { Notification } from '../types';\r\nimport axios from './axios';\r\n\r\nexport const getNotification = async (user_id:number)=>{\r\n    const data = (await axios.get(`/api/v1/notifications/?type=WEB&user=${user_id}`) ).data as Notification[]\r\n    return data.length?data[0]:undefined\r\n}\r\n\r\nexport const postNotification = async(notification:Notification)=>{\r\n    return (await axios.post(`/api/v1/notifications/`, notification)).data as Notification\r\n}\r\n\r\nexport const putNotification = async(notification:Notification)=>{\r\n    return (await axios.put(`/api/v1/notifications/${notification.id}/`, notification)).data as Notification\r\n}","import React, { createContext, useContext, useEffect, useMemo, useRef, useState } from \"react\"\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/messaging\";\r\n//@ts-ignore\r\nimport {FCM_PUBLIC_VAPID_KEY, FCM_API_KEY} from \"@env\"\r\nimport { Notification as NotificationType, UserMembership } from \"../types\";\r\nimport { getNotification, postNotification, putNotification } from \"../apis/notification\";\r\nconst firebaseConfig = require(\"../../web/firebase-config.js\")\r\n// Initialize Firebase\r\nconst key = firebaseConfig.messagingSenderId\r\nconst apiKeyEncrypted = (FCM_API_KEY as string).split('').map((v, i)=> (v.charCodeAt(0) ^ key.charCodeAt(i)).toString(16).padStart(2, '0')).join('')\r\nconst app = firebase.initializeApp({...firebaseConfig, apiKey:FCM_API_KEY});\r\n// const analytics = getAnalytics(app);\r\nconst messaging = firebase.messaging(app);\r\n\r\nmessaging.onMessage((payload) => {\r\n  if (!(\"Notification\" in window)) {\r\n    alert(\"This browser does not support desktop notification\");\r\n  }\r\n  else if (Notification.permission === \"granted\") {\r\n    const message_set = JSON.parse(payload.data['message_set'])[0]\r\n    new Notification(payload.data.channel_name, { body: `${payload.data.name}: ${message_set.content}` });\r\n  }\r\n});\r\n\r\nconst FirebaseContext = createContext<{enable:boolean, setEnable:(enable:boolean)=>void}>({enable:false, setEnable:()=>{}});\r\n\r\nconst requestToken = async()=>{\r\n  const permission = await Notification.requestPermission();\r\n  if (permission === 'granted') {\r\n    const serviceWorkerRegistration = await navigator.serviceWorker.register(`${process.env.PUBLIC_URL}/firebase-messaging-sw.js?${apiKeyEncrypted}`)\r\n    console.log('[SW]: SCOPE: ', serviceWorkerRegistration.scope);\r\n    const currentToken = await messaging.getToken({serviceWorkerRegistration, vapidKey: FCM_PUBLIC_VAPID_KEY })\r\n    if (currentToken)\r\n      return currentToken\r\n  }\r\n  return undefined\r\n}\r\n\r\nexport const FirebaseProvider = ({children, user}:{user?:UserMembership|null, children:React.ReactNode})=>{\r\n  const tokenRef = useRef<string>()\r\n  const [notification, setNotification] = useState<NotificationType>()\r\n  const enable = useMemo(()=>!(notification?.token), [notification])\r\n  const setEnable = (enable:boolean)=>{\r\n    if(user && notification){\r\n      putNotification({...notification, token:enable||tokenRef.current==undefined?null:tokenRef.current}).then((noti)=>{\r\n        setNotification(noti)\r\n      })\r\n    }\r\n  }\r\n  \r\n  useEffect(()=>{\r\n    let isMount = true;\r\n    if(user){\r\n      requestToken().then((t)=>{\r\n        tokenRef.current = t\r\n        getNotification(user.id).then(noti=>{\r\n          const setNotificationInternal = (n:NotificationType)=>{\r\n            if (isMount)setNotification(n)\r\n          }\r\n          const token = t==undefined?null:t\r\n          if (noti == undefined)\r\n            postNotification({user:user.id, type:'WEB', token}).then(setNotificationInternal)\r\n          else\r\n            putNotification({...noti, token}).then(setNotificationInternal)\r\n        })\r\n      })\r\n    }\r\n    return ()=>{isMount=false}\r\n  },[])\r\n  return !user?<>{children}</>:<FirebaseContext.Provider value={{enable, setEnable}}>\r\n    {children}\r\n  </FirebaseContext.Provider>\r\n}\r\n\r\nexport default ()=>{\r\n  const firebaseContext = useContext(FirebaseContext)\r\n  return firebaseContext\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Dimensions, Platform, View } from 'react-native'\r\nimport useIsMobile from '../hooks/useIsMobile'\r\n\r\ntype ViewProps = {windowType:'landscape'|'portrait', children:React.ReactNode}\r\n\r\nexport default (props:ViewProps)=>{\r\n    const isMobile = useIsMobile()\r\n    const [height, setHeight] = useState(window.innerHeight + 1)\r\n    useEffect(()=>{\r\n        if(isMobile && Platform.OS == 'web'){\r\n            const onChange = (e:any)=>{\r\n                setHeight(window.innerHeight + 1)\r\n            }\r\n            Dimensions.addEventListener(\"change\",onChange)\r\n            return () => Dimensions.removeEventListener(\"change\", onChange)\r\n            \r\n        }\r\n    },[ isMobile])\r\n    return <View style={{height:isMobile&&Platform.OS == 'web'?height:'100%'}}>\r\n        {props.children}\r\n    </View>\r\n\r\n}\r\n  ","import { CardStyleInterpolators, createStackNavigator } from '@react-navigation/stack';\r\nimport React, {useMemo} from 'react';\r\nimport { View } from 'react-native';\r\nimport { QueryClient, QueryClientProvider } from \"react-query\";\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport useResizeWindow from '../hooks/useResizeWindow';\r\nimport NotFoundScreen from '../screens/NotFoundScreen';\r\nimport {main, login, modal} from '../screens';\r\nimport DrawerNavigator from './DrawerNavigator';\r\nimport useAuthContext, {AuthProvider} from '../hooks/useAuthContext';\r\nimport { WebSocketProvider } from '../hooks/useWebsocketContext';\r\nimport HeaderRight from '../components/HeaderRight'\r\nimport Colors from '../constants/Colors';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\nimport { FirebaseProvider } from '../hooks/useFirebaseContext';\r\nimport useIsMobile from '../hooks/useIsMobile';\r\nimport MobileSafeAreaView from '../components/MobileSafeAreaView';\r\n\r\nconst Root = createStackNavigator();\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nexport default function RootNavigator() {\r\n    const windowType = useResizeWindow();\r\n    return (\r\n        <MobileSafeAreaView windowType={windowType}>\r\n            <AuthProvider>\r\n                <QueryClientProvider client={queryClient}>\r\n                    {/* devtools */}\r\n                    {/* <ReactQueryDevtools initialIsOpen={true} /> */}\r\n                        <Root.Navigator\r\n                            mode= 'modal'\r\n                            headerMode= 'screen'\r\n                            screenOptions={{\r\n                                cardStyle:{backgroundColor:\"white\"},\r\n                                animationEnabled: true,\r\n                                cardStyleInterpolator: CardStyleInterpolators.forVerticalIOS,\r\n                            }}\r\n                        >\r\n                            <Root.Screen name=\"Main\" component={MainNavigator} options={{headerShown:false}}/>\r\n                            {Object.entries(modal).map(([key, screen])=><Root.Screen key={key} name={key} component={screen.component} options={{\r\n                                title: screen.title,\r\n                                gestureDirection: windowType == 'landscape'?'vertical-inverted':'vertical'\r\n                            }} />)}\r\n                        </Root.Navigator>\r\n                </QueryClientProvider>\r\n            </AuthProvider>\r\n        </MobileSafeAreaView>\r\n    );\r\n}\r\n\r\nconst Main = createStackNavigator();\r\n\r\nfunction headerLeft(navigation:any, route:any, windowType:string, isMobile:boolean){\r\n    const canGOBackScreen = ['HomeScreen', 'LoginScreen'].findIndex(v=>v == route.name) == -1\r\n    const goBack = ()=>{\r\n        if (navigation.canGoBack())\r\n            navigation.goBack()\r\n        else if (canGOBackScreen)\r\n            navigation.replace('HomeScreen')\r\n    }\r\n    if (windowType=='portrait' && canGOBackScreen)\r\n        return <TouchableOpacity onPress={goBack}><Ionicons size={isMobile?20:24} style={{marginHorizontal:isMobile?16:20 }} name=\"arrow-back\"/></TouchableOpacity>\r\n    return null\r\n}\r\n\r\nfunction MainNavigator(){\r\n    const windowType = useResizeWindow();\r\n    const isMobile = useIsMobile()\r\n    const {auth} = useAuthContext()\r\n    const entries = useMemo(()=>{\r\n        if (auth.user === undefined)\r\n            return []\r\n        console.log('current user: ', auth.user)\r\n        return Object.entries(auth.user === null?login:main)\r\n    }, [auth])\r\n    return (auth.user!==undefined?<View style={{flexDirection:'row', flex:1}}>\r\n        {auth.user?<DrawerNavigator user={auth.user}/>:undefined}\r\n        <View style={{flex:1}}>\r\n            <FirebaseProvider user={auth.user}>\r\n                <WebSocketProvider disable={auth.user === null || auth.user === undefined}>\r\n                    <Main.Navigator\r\n                        screenOptions={({navigation, route})=>({\r\n                            headerStyle:{backgroundColor:Colors.header, height:isMobile?50:undefined},\r\n                            headerTitleStyle:{color:'white'},\r\n                            headerLeft:()=>headerLeft(navigation, route, windowType, isMobile),\r\n                            headerRight:()=><HeaderRight/>,\r\n                            headerLeftContainerStyle:{backgroundColor:'white', borderBottomWidth:1, borderColor:Colors.borderColor},\r\n                            cardStyle:{flexShrink:1},\r\n                            animationEnabled:windowType=='portrait',\r\n                            cardStyleInterpolator: CardStyleInterpolators.forHorizontalIOS\r\n                        })}\r\n                    >\r\n                        {entries.map(([key, screen])=><Main.Screen key={key} name={key} component={screen.component} options={{ title: screen.title }} />)}\r\n                        <Main.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\r\n                    </Main.Navigator>\r\n                </WebSocketProvider>\r\n            </FirebaseProvider>\r\n        </View>\r\n    </View>:<></>);\r\n}","import React from 'react';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\r\nimport Navigation from './src/navigation';\r\nimport useColorScheme from './src/hooks/useColorScheme';\r\nimport useCachedResources from './src/hooks/useCachedResources';\r\n\r\nexport default function App() {\r\n  const isLoadingComplete = useCachedResources();\r\n  const colorScheme = useColorScheme();\r\n  if (!isLoadingComplete) {\r\n    return null;\r\n  } else {\r\n    return (\r\n      <SafeAreaProvider>\r\n        <Navigation colorScheme={colorScheme} />\r\n        <StatusBar />\r\n      </SafeAreaProvider>\r\n    );\r\n  }\r\n}\r\n","import { Ionicons } from '@expo/vector-icons';\r\nimport * as Font from 'expo-font';\r\nimport * as SplashScreen from 'expo-splash-screen';\r\nimport * as React from 'react';\r\n\r\nexport default function useCachedResources() {\r\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\r\n\r\n  // Load any resources or data that we need prior to rendering the app\r\n  React.useEffect(() => {\r\n    async function loadResourcesAndDataAsync() {\r\n      try {\r\n        SplashScreen.preventAutoHideAsync();\r\n\r\n        // Load fonts\r\n        await Font.loadAsync({\r\n          ...Ionicons.font,\r\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\r\n        });\r\n      } catch (e) {\r\n        // We might want to provide this error information to an error reporting service\r\n        console.warn(e);\r\n      } finally {\r\n        setLoadingComplete(true);\r\n        SplashScreen.hideAsync();\r\n      }\r\n    }\r\n\r\n    loadResourcesAndDataAsync();\r\n  }, []);\r\n\r\n  return isLoadingComplete;\r\n}\r\n","import axios, { AxiosRequestConfig } from 'axios';\r\n// @ts-ignore\r\nimport {API_URL} from \"@env\"\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nconst baseURL =  `${API_URL}/messenger/`\r\nconst defaultOption:AxiosRequestConfig = {\r\n    baseURL,\r\n    withCredentials: true,\r\n    headers: {}\r\n};\r\nconst _axios = axios.create(defaultOption);\r\n\r\n_axios.interceptors.request.use(\r\n    config => {\r\n        return config;\r\n    },\r\n    error => {\r\n        return Promise.reject(error);\r\n    }\r\n)\r\n\r\n_axios.interceptors.response.use(\r\n    response => {\r\n        // if((response.request.responseURL as string).indexOf('/task/login')>=0 && response.data.length != 0){\r\n        //     // redirect login\r\n        // }\r\n        return response;\r\n    },\r\n    error => {\r\n        if (error.response.status === 401) {\r\n            getToken().then(async(token)=>{\r\n                const r = await _axios.post(\"/api-token-refresh/\", {token}, {headers:{'Authorization':''}})\r\n                if (r.status == 200 && r.data !== ''){\r\n                    setToken(r.data)\r\n                }\r\n            })\r\n        }\r\n        return Promise.reject(error)\r\n    }\r\n)\r\n\r\nexport const setToken = async (token:string|null)=>{\r\n    _axios.defaults.headers['Authorization'] = `JWT ${token}`\r\n    if (token)\r\n        await AsyncStorage.setItem(\"Authorization\", token)\r\n    else\r\n        AsyncStorage.removeItem(\"Authorization\")\r\n}\r\nexport const getToken = async ()=>{\r\n    const token = await AsyncStorage.getItem(\"Authorization\")\r\n    _axios.defaults.headers['Authorization'] = `JWT ${token}`\r\n    return token\r\n}\r\n\r\nexport default _axios\r\n","/**\r\n * Learn more about Light and Dark modes:\r\n * https://docs.expo.io/guides/color-schemes/\r\n */\r\n\r\nimport * as React from 'react';\r\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\r\n\r\nimport Colors from '../constants/Colors'\r\nimport useColorScheme from '../hooks/useColorScheme';\r\n\r\nexport function useThemeColor(\r\n  props: { light?: string; dark?: string },\r\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\r\n) {\r\n  const theme = useColorScheme();\r\n  const colorFromProps = props[theme];\r\n\r\n  if (colorFromProps) {\r\n    return colorFromProps;\r\n  } else {\r\n    return Colors[theme][colorName];\r\n  }\r\n}\r\n\r\ntype ThemeProps = {\r\n  lightColor?: string;\r\n  darkColor?: string;\r\n};\r\n\r\nexport type TextProps = ThemeProps & DefaultText['props'];\r\nexport type ViewProps = ThemeProps & DefaultView['props'];\r\n\r\nexport function Text(props: TextProps) {\r\n  const { style, lightColor, darkColor, ...otherProps } = props;\r\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\r\n\r\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\r\n}\r\n\r\nexport function View(props: ViewProps) {\r\n  const { style, lightColor, darkColor, ...otherProps } = props;\r\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\r\n\r\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\r\n}\r\n","import React, { createContext, useContext, useEffect, useReducer, useMemo, Dispatch } from \"react\"\r\nimport { checkLogin, login, logout } from \"../apis\"\r\nimport { UserMembership } from \"../types\"\r\n\r\ntype AuthAction = {type:string, username?:string, password?:string, user?:UserMembership|null}\r\n\r\nexport type Auth = {user?:UserMembership|null, groupId?:number}\r\n\r\ntype AuthState ={user?:UserMembership|null, request?:{username:string, password:string}|null}\r\n\r\nconst AuthContext = createContext<{auth:Auth, dispatch:Dispatch<AuthAction>}>({auth:{}, dispatch:()=>{}});\r\n\r\nconst authReducer =(initialState:AuthState, action:AuthAction)=>{\r\n  switch (action.type){\r\n      case 'LOGIN_REQUEST':\r\n        return {\r\n          ...initialState,\r\n          request:{username:action.username, password:action.password},\r\n        } as AuthState\r\n      case 'LOGIN_GUEST':\r\n        return {\r\n          ...initialState,\r\n          request:{username:'guest', password:'guest'},\r\n        } as AuthState\r\n      case 'LOGIN_SUCCESS':\r\n          return{\r\n              ...initialState,\r\n              user:action.user,\r\n              request:undefined\r\n          }\r\n      case 'LOGIN_FAILED':\r\n          return{\r\n              ...initialState,\r\n              request:undefined\r\n          }\r\n      case 'LOGOUT_REQUEST':\r\n          return{\r\n              ...initialState,\r\n              request:null\r\n          }\r\n      case 'LOGOUT_SUCCESS':\r\n          return {\r\n            ...initialState,\r\n            user:null,\r\n            request:undefined\r\n          }\r\n      default:\r\n          throw new Error( `Unhandled action type: ${action.type}`)\r\n  }\r\n}\r\n\r\n\r\nexport const AuthProvider = ({children}:{children:React.ReactNode})=>{\r\n  const [authState, dispatch] = useReducer(authReducer, {} as Auth)\r\n  const auth = useMemo(()=>({\r\n    user:authState.user,\r\n    groupId: authState.user?.membership_set.find(g=>g.root_group_id==null)?.group\r\n  }), [authState])\r\n  useEffect(()=>{\r\n    if(authState.user===undefined){\r\n      checkLogin().then((user)=>{\r\n        dispatch({type:\"LOGIN_SUCCESS\", user})\r\n      }).catch((e)=>{\r\n        console.log(e)\r\n        dispatch({type:\"LOGOUT_SUCCESS\"})\r\n      })\r\n    }\r\n    else if(authState.user===null && authState.request){\r\n      login(authState.request.username, authState.request.password).then(user=>{\r\n        dispatch({type:\"LOGIN_SUCCESS\", user})\r\n      }).catch(()=>{\r\n        dispatch({type:\"LOGIN_FAILED\"})\r\n      })\r\n    }\r\n    else if(authState.user && authState.request===null){\r\n      logout().then(()=>dispatch({type:\"LOGOUT_SUCCESS\"}))\r\n    }\r\n  }, [authState])\r\n  return <AuthContext.Provider value={{auth, dispatch}}>\r\n    {children}\r\n  </AuthContext.Provider>\r\n}\r\n\r\nexport default ()=>{\r\n  const authContext = useContext(AuthContext)\r\n  return authContext\r\n}\r\n","/**\r\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\r\n * https://reactnavigation.org/docs/getting-started\r\n *\r\n */\r\nimport _ from 'lodash';\r\nimport { NavigationContainer, DefaultTheme, DarkTheme, NavigationContainerRef } from '@react-navigation/native';\r\nimport * as React from 'react';\r\nimport { ColorSchemeName } from 'react-native';\r\n\r\nimport LinkingConfiguration from './LinkingConfiguration';\r\nimport RootNavigator from './RootNavigator';\r\n\r\nconst navigationRef = React.createRef<NavigationContainerRef>();\r\n\r\nexport function navigate(name:string, params?:any) {\r\n  if (params)\r\n    navigationRef.current?.navigate(name, params);\r\n  navigationRef.current?.navigate(name);\r\n}\r\n\r\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\r\n  return (\r\n    <NavigationContainer\r\n      ref={navigationRef}\r\n      documentTitle={{formatter: (options, route) => {return `TOKKI TOK`}}}\r\n      linking={(process.versions && process.versions['electron'])?undefined:LinkingConfiguration}\r\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\r\n      <RootNavigator />\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\n(function(l) {  // for github-page\r\n    if (l !== undefined && l.search[1] === '/' ) {\r\n        var decoded = l.search.slice(1).split('&').map(function(s) { \r\n        return s.replace(/~and~/g, '&')\r\n        }).join('?');\r\n        window.history.replaceState(null, '',\r\n            l.pathname.slice(0, -1) + decoded + l.hash\r\n        );\r\n    }\r\n}(window.location))\r\n    \r\nconst ignoreWarnings = ['ReactNativeFiberHostComponent'];\r\nconst _console = _.clone(console);\r\nconsole.warn = (message: string|Object) => {\r\n    var warn = true;\r\n    if (message instanceof Object)\r\n    warn = false;\r\n    else{\r\n    ignoreWarnings.forEach((value)=>{\r\n        if (message.indexOf && message.indexOf(value) <= -1) {\r\n            warn = false;\r\n        }\r\n    })\r\n    };\r\n    if (warn){\r\n        _console.warn(message);\r\n    }\r\n    else{\r\n        // console.log(message)\r\n    }\r\n};\r\n","firebaseConfig = {\n    \"authDomain\": \"virtual-metrics-355712.firebaseapp.com\",\n    \"projectId\": \"virtual-metrics-355712\",\n    \"storageBucket\": \"virtual-metrics-355712.appspot.com\",\n    \"messagingSenderId\": \"76003576924\",\n    \"appId\": \"1:76003576924:web:c8c8a006d07918bbc02a99\",\n    \"measurementId\": \"G-SEL35L4N5R\"\n}\nif (typeof module !== 'undefined') {\n    module.exports = firebaseConfig\n}\n","const tintColorLight = '#2f95dc';\r\nconst tintColorDark = '#fff';\r\n\r\nexport default {\r\n  light: {\r\n    text: '#000',\r\n    background: '#fff',\r\n    tint: tintColorLight,\r\n    tabIconDefault: '#ccc',\r\n    tabIconSelected: tintColorLight,\r\n  },\r\n  dark: {\r\n    text: '#fff',\r\n    background: '#000',\r\n    tint: tintColorDark,\r\n    tabIconDefault: '#ccc',\r\n    tabIconSelected: tintColorDark,\r\n  },\r\n  button:{\r\n    color:'rgb(242,242,242)',\r\n    borderColor:'rgba(27,31,36,0.15)',\r\n    backgroundColor:'#f6f8fa', //'rgba(9,30,66,0.08)',//rgb(242,242,242)\r\n  },\r\n  borderColor:'#d0d7de',\r\n  header:'#24292f',\r\n  focus:'#0065A4',\r\n};\r\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","\r\nimport { User, UserMembership } from '../types';\r\nimport axios, { getToken, setToken } from './axios';\r\n\r\nexport const login = async(username:string, password:string) => {\r\n    if(username.endsWith('.guest') && password.length == 0)\r\n        password = 'guest'\r\n    const r = await axios.post(\"/api-token-auth/\", {username, password});\r\n    if(r.status == 200){\r\n        await setToken(r.data)\r\n        return await checkLogin()\r\n    }\r\n}\r\n\r\nexport const logout = async() => {\r\n    await setToken(null)\r\n    return await axios.get(\"/api-auth/logout/\")\r\n}\r\n\r\nexport const guestLogin =  async() => {\r\n    return await login('guest', 'guest')\r\n}\r\n\r\nconst checkLoginToken = async ()=>{\r\n    const value = (await axios.get(\"/api/v1/users/memberships/?_self=true\"))?.data\r\n    if (value && value.length){\r\n        return value[0] as UserMembership\r\n    }\r\n    return null\r\n}\r\n\r\nexport const checkLogin = async() => {\r\n    const token = await getToken()\r\n    if (token === null)\r\n        return null\r\n    try{\r\n       return await checkLoginToken()\r\n    }\r\n    catch(e:any){\r\n        let error = e\r\n        if(e.response !== undefined && e.response.status==401){\r\n            try{\r\n                return await checkLoginToken()\r\n            }\r\n            catch(e2){\r\n                error = e2\r\n            }\r\n        }\r\n        const isOffline = ((error as any).code == \"ERR_NETWORK\" || (error as any).message && ((error as any).message as string).startsWith(\"Cannot read\"))\r\n        throw {error, isOffline}\r\n    }\r\n}\r\n\r\nexport const getUserList = async (group_id:number)=>{\r\n    return (await axios.get(`/api/v1/users/?group_id=${group_id}`) ).data as User[]\r\n}\r\n\r\nexport const getUserMembershipList = async (group_id:number)=>{\r\n    return (await axios.get(`/api/v1/users/memberships/?group_id=${group_id}`) ).data as UserMembership[]\r\n}\r\n\r\n// export const getGroup = async (user:User)=>{\r\n//     return (await) axios.get(``)\r\n// }\r\n\r\n","import { Channel, MessengerMember, MessengerContent, EditMessage, MessengerChannel } from '../types';\r\nimport axios from './axios';\r\n\r\nexport const getMessengerChannelList = async (user_id:number)=>{\r\n    return (await axios.get(`/api/v1/channels/messenger/?type=messenger&messenger_user_id=${user_id}`) ).data as MessengerChannel[]\r\n}\r\n\r\nexport const postChannel = async(channel:Channel)=>{\r\n    return (await axios.post(`/api/v1/channels/`, channel)).data as Channel\r\n}\r\n\r\nexport const putChannel = async(channel:Channel)=>{\r\n    return (await axios.put(`/api/v1/channels/${channel.id}/`, channel)).data as Channel\r\n}\r\n\r\nexport const deleteChannel = async(channel_id:number)=>{\r\n    await axios.delete(`/api/v1/channels/${channel_id}/`)\r\n}\r\n\r\nexport const getMessengerMemberList = async(channel_id:number)=>{\r\n    return (await axios.get(`/api/v1/messengermembers/?channel=${channel_id}`) ).data as MessengerMember[]\r\n}\r\n\r\nexport const postBulkMessengerMember = async(data:{channel_id:number, user_ids:number[]})=>{\r\n    await axios.post(`/api/v1/messengermembers/bulk/`, {channel:data.channel_id, user_ids:data.user_ids})\r\n}\r\n\r\nexport const deleteMessengerMember = async(member_id:number)=>{\r\n    await axios.delete(`/api/v1/messengermembers/${member_id}/`)\r\n}\r\n\r\nexport const getMessengerContentList = async (channel_id:number, id_lt?:number)=>{\r\n    const id_lt_param = id_lt?`&id_lt=${id_lt}`:''\r\n    return (await axios.get(`/api/v1/messengercontents/?limit=30&channel=${channel_id}${id_lt_param}`)).data.results as MessengerContent[]\r\n}\r\n\r\nexport const postMessage = async (message:EditMessage)=>{\r\n    await axios.post(`/api/v1/messengercontents/messages/`, message)\r\n}\r\n\r\nexport const deleteMessengerContent = async (content_id:number)=>{\r\n    await axios.delete(`/api/v1/messengercontents/${content_id}/`)\r\n}","import React, { useState } from 'react';\r\nimport { Text, StyleSheet, Pressable, StyleProp, ViewStyle} from 'react-native';\r\nimport Colors from '../constants/Colors';\r\nimport { CustomButtonProps } from '../types';\r\n\r\nconst DefaultButton = (props:CustomButtonProps)=>{\r\n    const [hover, setHover] = useState(false)\r\n    return <Pressable\r\n        onPress={()=>props.onPress()}\r\n        //@ts-ignore\r\n        onHoverIn={()=>setHover(true)}\r\n        onHoverOut={()=>setHover(false)}\r\n        style={[\r\n            {\r\n                paddingVertical:5, \r\n                paddingHorizontal:16\r\n            },\r\n            props.style,\r\n            hover?{backgroundColor:props.color}:{}\r\n        ]}>\r\n            <Text selectable={false} style={[{fontSize:14}, props.textStyle]}>{props.title}</Text>\r\n        </Pressable>\r\n}\r\n\r\nexport default (props:CustomButtonProps)=>{\r\n    const _props = {\r\n        color:Colors.button.color,\r\n        ...props,\r\n        style:[\r\n            styles.style,\r\n            props.style,\r\n        ] as StyleProp<ViewStyle>,\r\n        textStyle:[\r\n            styles.text, props.textStyle\r\n        ]\r\n    }\r\n    return <DefaultButton {..._props}/>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    style:{\r\n        borderRadius:6, \r\n        borderColor:Colors.button.borderColor, \r\n        borderWidth:1, \r\n        backgroundColor:Colors.button.backgroundColor\r\n    },\r\n    text:{\r\n        color:'black', \r\n        textAlign:'center', \r\n        fontWeight:'600'\r\n    }\r\n});\r\n","import { useState, useEffect } from 'react';\r\nimport { Dimensions, Keyboard } from 'react-native';\r\n//@ts-ignore\r\nimport useMobileDetect from 'use-mobile-detect-hook';\r\n\r\ntype WindowType = 'portrait' | 'landscape'\r\n\r\nexport default function useResizeWindow() {\r\n  const detectMobile = useMobileDetect();\r\n  const [window, setWindow] = useState(Dimensions.get('window'));\r\n  const onChange = () => setWindow(Dimensions.get('window'))\r\n\r\n  useEffect(() => {\r\n    Dimensions.addEventListener(\"change\", onChange);\r\n    return () => {\r\n      Dimensions.removeEventListener(\"change\", onChange);\r\n    };\r\n  });\r\n  if (detectMobile.isMobile())\r\n    return 'portrait'\r\n  return window.height >= window.width?'portrait':'landscape' as WindowType;\r\n}","import { useEffect } from \"react\";\r\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\r\nimport { getMessengerChannelList, postChannel, putChannel } from \"../../apis\";\r\nimport { MessengerChannel } from \"../../types\";\r\nimport { Auth } from \"../useAuthContext\";\r\nimport useWebsocketContext from \"../useWebsocketContext\";\r\n\r\nexport default function useMessengerChannelList(auth?:Auth){\r\n  const queryClient = useQueryClient()\r\n  const {lastJsonMessage} = useWebsocketContext()\r\n  const { data } = useQuery(\"MessengerChannelList\" , async()=>auth?.user?.id?(await getMessengerChannelList(auth.user.id)):[])\r\n\r\n  useEffect(()=>{\r\n    if(lastJsonMessage !=null){\r\n      if(lastJsonMessage['type']=='enter'){\r\n        queryClient.setQueryData<MessengerChannel[]>(\"MessengerChannelList\", (_data)=>{\r\n          return (_data?.find(v=>v.id==lastJsonMessage['data']['id'])?_data:[lastJsonMessage['data'] , ...(_data|| [])]).sort((a, b)=>a.id - b.id)\r\n        })\r\n      }\r\n      // if(lastJsonMessage['type']=='leave'){\r\n      //   queryClient.setQueryData<Channel[]>(\"MessengerChannelList\", (_data)=>_data?.filter(v=>v.id!=lastJsonMessage['data']['channel_id']) || [])\r\n      // }\r\n    }\r\n  }, [lastJsonMessage])\r\n  return data\r\n}\r\n\r\nexport function useMessengerChannelMutation(){\r\n  const queryClient = useQueryClient()\r\n\r\n  const create = useMutation(postChannel, {\r\n    onSuccess: ()=>queryClient.invalidateQueries(\"MessengerChannelList\")\r\n  });\r\n\r\n  const update = useMutation(putChannel, {\r\n    onSuccess: () => queryClient.invalidateQueries(\"MessengerChannelList\")\r\n  })\r\n\r\n\r\n  return { create:create.mutateAsync, update:update.mutateAsync}\r\n}"],"sourceRoot":""}