{"version":3,"sources":["src/navigation/index.tsx","src/components/TextButton.tsx","src/hooks/lists/useMessengerMemberList.ts","src/components/HeaderRight.tsx","src/components/ContractFooter.tsx","src/screens/main/LoginScreen.tsx","src/hooks/lists/useMessengerContent.List.ts","src/components/LinkPreview.tsx","src/lib/react-native-webrtc/useWebsocketContext.tsx","src/lib/react-native-webrtc/webrtc/p2p.tsx","src/lib/react-native-webrtc/webrtc/index.ts","src/lib/react-native-webrtc/LocalCam.tsx","src/lib/react-native-webrtc/RemoteCam.tsx","src/screens/main/ChatScreen/VideoCallSection.tsx","src/components/FilePreview.tsx","src/screens/main/ChatScreen/index.tsx","src/screens/main/HomeScreen.tsx","src/screens/main/InviteeScreen.tsx","src/screens/index.ts","src/hooks/useWebsocketContext.tsx","src/components/ModalSection.tsx","src/modals/ChannelEditModal.tsx","src/apis/notification.ts","src/hooks/useIsMobile.ts","src/hooks/lists/useUserMembershipList.ts","src/components/TabView.tsx","src/components/CommonItem.tsx","src/lib/react-native-paper/Avatar.tsx","src/components/Avatar.tsx","src/components/RowField.tsx","src/components/TextField.tsx","src/components/Themed.tsx","src/modals/GuestLogoutModal.tsx","src/components/CommonTextInput.tsx","src/components/MemberItem.tsx","src/modals/ProfileModal.tsx","src/components/Profile.tsx","src/hooks/useLocalSearch.ts","src/modals/InviteModal.tsx","src/hooks/lists/useExternalMembershipList.ts","src/apis/axios.ts","src/constants/Colors.ts","src/navigation/LinkingConfiguration.ts","src/hooks/useAuthContext.tsx","src/screens/NotFoundScreen.tsx","src/navigation/DrawerNavigator.tsx","src/hooks/useFirebaseContext.tsx","src/modals/index.ts","src/navigation/RootNavigator.tsx","src/components/MobileSafeAreaView.tsx","App.tsx","src/hooks/useCachedResources.ts","src/lang/index.ts","src/hooks/useLangContext.tsx","src/components/CommonButton.tsx","web/firebase-config.js","src/assets/fonts/SpaceMono-Regular.ttf","src/apis/account.ts","src/apis/messenger.ts","src/hooks/useColorScheme.ts","src/hooks/useResizeContext.tsx","src/hooks/useModalsContext.tsx","src/hooks/lists/useMessengerChannelList.ts","src/components/CommonSection.tsx"],"names":["navigationRef","React","navigate","name","params","current","Navigation","defaultColorScheme","useDefaultColorScheme","userColorScheme","useColorScheme","colorScheme","ref","documentTitle","formatter","options","route","linking","process","versions","undefined","LinkingConfiguration","theme","DarkTheme","DefaultTheme","l","search","decoded","slice","split","map","s","replace","join","window","history","replaceState","pathname","hash","location","ignoreWarnings","_console","_","clone","console","warn","message","Object","forEach","value","indexOf","props","style","styles","StyleSheet","create","borderRadius","backgroundColor","borderWidth","useMessengerMemberList","channel_id","useQuery","a","async","getMessengerMemberList","data","useMessengerMemberMutation","queryClient","useQueryClient","invite","useMutation","postBulkMessengerMember","onSuccess","invalidateQueries","leave","deleteMessengerMember","mutateAsync","lang","useLangContext","useAuthContext","auth","dispatch","setModal","useModalsContext","windowType","useResizeContext","defaultButtonProps","title","onPress","user","username","endsWith","GuestLogoutModal","type","buttonProps","extra","filter","v","flexDirection","k","key","textStyle","color","openURL","Platform","OS","url","href","Linking","View","Styles","footer_buttons","footer_button","AntDesign","size","width","justifyContent","paddingBottom","paddingRight","alignItems","height","marginHorizontal","borderColor","login_container","flex","login_header","paddingTop","login_header_logo","resizeMode","login_header_text","marginTop","fontSize","login_header_text_bold","fontWeight","login_wrapper","borderTopRightRadius","borderTopLeftRadius","form","maxWidth","form_error","form_error_text","textAlignVertical","form_input","paddingHorizontal","marginBottom","button","button_label","login_social","login_social_separator","login_social_separator_line","login_social_separator_text","login_social_buttons","login_social_button","login_social_icon","login_social_facebook","login_footer_text","guest_footer_text","alignSelf","margin","login_footer_link","useMessengerContentList","useInfiniteQuery","pageParam","getMessengerContentList","then","select","pages","length","next","getNextPageParam","lastPage","id","refetchOnReconnect","refetchOnWindowFocus","fetchNextPage","lastJsonMessage","useWebsocketContext","useEffect","setQueryData","_data","pageParams","link","isMobile","CommonSection","containerStyle","bodyStyle","padding","image","Image","source","uri","maxHeight","description","WebSocketContext","createContext","sendJsonMessage","WebSocketProvider","disable","children","path","Context","useBackground","useContext","log","peerConstraints","iceServers","JSON","parse","sessionConstraints","mandatory","OfferToReceiveAudio","OfferToReceiveVideo","VoiceActivityDetection","mediaConstraints","audio","video","framerate","onICEcandidate","pc","_message","rtcMessage","candidate","RTCIceCandidate","addIceCandidate","sendICEcandidate","event","sendMessage","receiver","target","optimizeSdp","offerDescription","arr","sdp","str","i","test","RTCSessionDescription","createOffer","pcRefCurrent","stream","addStream","setLocalDescription","camStyle","container","cam","bottonContainer","position","bottom","buttonBar","label","pcRef","useRef","useState","sender","setSender","_stream","setStream","isPlay","useMemo","CustomRTCView","useCallback","memo","videoProps","start","mode","mediaDevices","getUserMedia","newStream","getDisplayMedia","catch","e","entries","error","stop","getTracks","track","websocketOnMessage","response","channel_name","peerConnection","RTCPeerConnection","addEventListener","answerDescription","setRemoteDescription","useLocalCam","Text","Button","setReceiver","setUser","close","clearInterval","statsInterval","iceConnectionState","activeStream","setInterval","getStats","stats","statsOutput","framePerSecond","report","kind","keys","statName","framesPerSecond","Date","toTimeString","addTransceiver","direction","streams","getRemoteStreams","createAnswer","localDescription","useRemoteCam","TextInput","onChangeText","VideoView","scale","Colors","flexGrow","focusGuest","setFocusGuest","VideoCallContainer","setDisable","videoMode","setVideoMode","guests","setGuests","useRtcContext","find","Math","max","ceil","sqrt","toggleVideoMode","Themed","aspectRatio","flexShrink","borderLeftWidth","borderBottomWidth","flexWrap","RemoteCam","LocalCam","CommonButton","file","showBorder","FontAwesome","filename","floor","pow","toFixed","humanFileSize","filesize","MessengerContentPageItem","useIsMobile","nextPage","nextContent","content","index2","created","date","isSystem","isFirst","isSelf","ownerId","dayChanged","message_set","marginVertical","marginLeft","Avatar","userId","outerContainerStyle","titleStyle","subtitle","linkDefault","wordBreak","linkStyle","selectable","file_set","fileIndex","FilePreview","link_set","linkIndex","LinkPreview","bottomTabs","OneTab","component","userList","useUserMembershipList","memberItem","item","index","MemberItem","member","ProfileModal","icon","MaterialCommunityIcons","TwoTab","channelList","useMessengerChannelSorted","today","toISOString","last_message","CommonItem","marginRight","opacity","paddingLeft","member_count","textAlign","unread_count","Ionicons","InviteeScreen","navigation","enterGuest","setEnterGuest","useMessengerChannelList","messengerMemberMutation","useLayoutEffect","setOptions","headerRight","user_ids","main","HomeScreen","locale","setLocale","configTheme","useConfigColorScheme","home","setHome","text","HeaderRight","ChannelEditModal","tab","TextButton","textDecorationLine","setColorScheme","ContractFooter","TabView","tabs","tabBarPosition","parseInt","onTab","setParams","ChatScreen","inputRef","channel","memberList","member_id","setValue","autoFocus","setAutoFocus","postValue","contentMutation","postMessage","_delete","deleteMessengerContent","d","variables","mutate","delete","useMessengerContentMutation","InviteModal","back","renderItem","canGoBack","goBack","focus","timeout","setTimeout","clearTimeout","minWidth","VideoCallSection","contentContainerStyle","onScroll","nativeEvent","contentOffset","y","contentSize","onLayout","p","layout","background","onSubmitEditing","blurOnSubmit","Promise","resolve","reject","input","document","createElement","onchange","files","onabort","onerror","click","f","login","LoginScreen","setUsername","password","setPassword","_login","placeholder","autoCapitalize","keyboardType","secureTextEntry","TouchableOpacity","modal","defaultContext","SCHEMA","DOMAIN","WebSocketInternalProvider","token","setToken","AppState","currentState","isActive","setIsActive","useWebSocket","shouldReconnect","closeEvent","protocols","onOpen","onClose","AsyncStorage","getItem","onChange","nextState","removeEventListener","Provider","BottomSheet","channelMutation","useMessengerChannelMutation","setName","setDescription","separator","lightColor","darkColor","multiline","groupId","newChannel","owner","group","update","screen","field","getNotification","user_id","axios","get","postNotification","notification","post","putNotification","put","useMobileDetect","getUserMembershipList","setIndex","icons","assign","renderTabBar","indicatorStyle","activeColor","inactiveColor","renderIcon","scene","onTabPress","findIndex","navigationState","routes","onIndexChange","renderScene","SceneMap","setHover","press","setPress","outerContainer","onPressIn","onPressOut","onHoverIn","onHoverOut","bodyView","minHeight","normalizeHash","min","initHash","charCodeAt","abs","stringToHSL","toUpperCase","RowField","rowStyle","paddingVertical","TextField","CommonTextInput","useThemeColor","colorName","colorFromProps","otherProps","light","dark","contentHeight","setContentHeight","editable","disabled","onContentSizeChange","onBlur","onEndEditing","counterpart","direct","patchUser","finally","localSearchReducer","initialState","action","keyword","active","Error","InviteItem","selectedRef","has","selected","setSelected","add","GroupTabView","compare","useReducer","searchState","useLocalSearch","memberSet","Set","includes","dispatchKeyword","ExternalMembershipTabView","setKeyword","copied","setCopied","timeoutRef","externalMemberList","getExternalMembershipList","useExternalMembershipList","inviteLink","Clipboard","setString","drawerTabs","external","ModalSection","accountURL","defaultOption","baseURL","withCredentials","headers","_axios","interceptors","request","use","config","status","getToken","r","defaults","setItem","removeItem","tint","tabIconDefault","tabIconSelected","header","buttonColor","buttonBackgroundColor","values","ROOTPATH","prefixes","screens","Main","NotFound","AuthContext","authReducer","AuthProvider","authState","setError","membership_set","g","root_group_id","checkLogin","noti","logout","NotFoundScreen","linkText","DrawerTabView","MessengerTab","colors","useTheme","onAddList","tabBar","card","borderTopColor","border","pointerEvents","Profile","accessibilityRole","borderTopWidth","drawerTab","Tab","elevation","borderRightWidth","firebaseConfig","require","messagingSenderId","apiKeyEncrypted","toString","padStart","app","firebase","initializeApp","apiKey","messaging","onMessage","payload","Notification","permission","body","alert","requestToken","requestPermission","navigator","serviceWorker","register","serviceWorkerRegistration","scope","vapidKey","currentToken","preventDefault","unregister","setEnable","enable","context","FirebaseContext","Root","createStackNavigator","RootNavigator","Navigator","headerMode","screenOptions","cardStyle","animationEnabled","cardStyleInterpolator","CardStyleInterpolators","forVerticalIOS","Screen","MainNavigator","headerShown","gestureDirection","modalValues","modals","useFirebaseContext","DrawerNavigator","headerStyle","headerTitleStyle","headerLeft","canGOBackScreen","headerLeftContainerStyle","forHorizontalIOS","innerHeight","setHeight","Dimensions","QueryClient","App","isLoadingComplete","setLoadingComplete","SplashScreen","Font","font","useCachedResources","isAppearenceComplete","useInitColorScheme","MobileSafeAreaView","client","StatusBar","translations","ko","RNLocalize","languageTag","isRTL","I18nManager","forceRTL","intl","createIntl","defaultLocale","messages","createIntlCache","IntlContext","IntlProvider","complete","setComplete","formatMessage","defaultMessage","DefaultButton","hover","_props","module","exports","guestLogin","checkLoginToken","isOffline","code","startsWith","getUserList","group_id","patch","ids","updated","getMessengerChannelList","postChannel","postDirectChannel","putChannel","deleteChannel","id_lt","id_lt_param","results","formData","FormData","append","content_id","Appearance","set","getWindowType","ResizeContextContext","ResizeContextProvider","detectMobile","useWindowDimensions","setWindowType","ModalsContext","ModalsProvider","allModals","setModals","animationType","setAnimationType","visible","Component","newModals","m","transparent","sort","b","withSeparator","titleView"],"mappings":"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","file":"static/js/app.be613d34.chunk.js","sourcesContent":["/**\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\n * https://reactnavigation.org/docs/getting-started\n *\n */\nimport _ from 'lodash';\nimport { NavigationContainer, DefaultTheme, DarkTheme, NavigationContainerRef } from '@react-navigation/native';\nimport * as React from 'react';\n\nimport LinkingConfiguration from './LinkingConfiguration';\nimport RootNavigator from './RootNavigator';\n\nimport { useColorScheme as useDefaultColorScheme } from 'react-native';\nimport { useColorScheme as useColorScheme } from 'react-native-appearance';\nimport { ResizeContextProvider } from '../hooks/useResizeContext';\n\n\nconst navigationRef = React.createRef<NavigationContainerRef>();\n\nexport function navigate(name:string, params?:any) {\n  if (params)\n    navigationRef.current?.navigate(name, params);\n  navigationRef.current?.navigate(name);\n}\n\nexport default function Navigation() {\n  const defaultColorScheme = useDefaultColorScheme()\n  const userColorScheme = useColorScheme()\n  const colorScheme = userColorScheme =='no-preference'?defaultColorScheme:userColorScheme\n  return <NavigationContainer\n    ref={navigationRef}\n    documentTitle={{formatter: (options, route) => {return `TOKKI TOK`}}}\n    linking={(process.versions && process.versions['electron'])?undefined:LinkingConfiguration}\n    theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n        <ResizeContextProvider>\n          <RootNavigator />\n        </ResizeContextProvider>\n  </NavigationContainer>\n}\n\n(function(l) {  // for github-page\n    if (l !== undefined && l.search[1] === '/' ) {\n        var decoded = l.search.slice(1).split('&').map(function(s) { \n        return s.replace(/~and~/g, '&')\n        }).join('?');\n        window.history.replaceState(null, '',\n            l.pathname.slice(0, -1) + decoded + l.hash\n        );\n    }\n}(window.location))\n    \nconst ignoreWarnings = ['ReactNativeFiberHostComponent'];\nconst _console = _.clone(console);\nconsole.warn = (message: string|Object) => {\n    var warn = true;\n    if (message instanceof Object)\n    warn = false;\n    else{\n    ignoreWarnings.forEach((value)=>{\n        if (message.indexOf && message.indexOf(value) <= -1) {\n            warn = false;\n        }\n    })\n    };\n    if (warn){\n        _console.warn(message);\n    }\n    else{\n        // console.log(message)\n    }\n};\n","import React, { useState } from 'react';\nimport { StyleSheet} from 'react-native';\nimport { CustomButtonProps } from '../types';\nimport CommonButton from './CommonButton';\n\nexport default (props:CustomButtonProps)=>{\n    return <CommonButton {...props} style={[styles.style, props.style]}/>\n}\n\nconst styles = StyleSheet.create({\n    style:{\n        borderRadius:6, \n        backgroundColor: 'transparent',\n        borderWidth:0\n    },\n});\n","import { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport { postBulkMessengerMember, deleteMessengerMember, getMessengerMemberList } from \"../../apis\";\n\nexport default function useMessengerMemberList(channel_id:number){\n  const { data } = useQuery([\"MessengerMemberList\", channel_id] , async()=>await getMessengerMemberList(channel_id))\n  return data\n}\n\n\nexport function useMessengerMemberMutation(){\n  const queryClient = useQueryClient()\n  const invite = useMutation(postBulkMessengerMember, {\n    onSuccess: ()=>{\n      queryClient.invalidateQueries(\"MessengerMemberList\")\n    }\n  })\n\n  const leave = useMutation(deleteMessengerMember, {\n    onSuccess: () => {\n      queryClient.invalidateQueries(\"MessengerChannelList\")\n      queryClient.invalidateQueries(\"MessengerMemberList\")\n    }\n  })\n  return {invite:invite.mutateAsync, leave:leave.mutateAsync}\n}","import React from 'react'\nimport TextButton from \"./TextButton\"\nimport useAuthContext from \"../hooks/useAuthContext\"\nimport useResizeContext from '../hooks/useResizeContext'\nimport { View } from 'react-native'\nimport useModalsContext from '../hooks/useModalsContext'\nimport GuestLogoutModal from '../modals/GuestLogoutModal'\nimport useLangContext from '../hooks/useLangContext'\n\ntype ButtonProps = {title:string, onPress:()=>void, windowType?:'landscape'|'portrait'}\n\nexport default (props:{extra?:ButtonProps[]})=>{\n    const { lang } = useLangContext()\n    const {auth, dispatch} = useAuthContext()\n    const { setModal } = useModalsContext()\n    const windowType = useResizeContext()\n    const defaultButtonProps:ButtonProps[] = [{title:lang('sign out'), onPress:()=>{\n        if (auth?.user?.username.endsWith(\".guest\")){\n            setModal(GuestLogoutModal, {})\n        }\n        else{\n            dispatch({type:\"LOGOUT_REQUEST\"})\n        }\n    }}]\n    const buttonProps = (props.extra?[...props.extra, ...defaultButtonProps]:defaultButtonProps).filter(v=>v.windowType==windowType || v.windowType == undefined)\n    return<View style={{flexDirection:'row'}}>\n        {buttonProps.map((v,k)=><TextButton key={k} {...v} textStyle={{color:'white'}} color='#gray'/>)}\n    </View>\n}\n  ","import React from 'react'\nimport { View, StyleSheet, Linking, Platform } from 'react-native'\nimport { TouchableOpacity } from 'react-native-gesture-handler'\nimport { AntDesign } from '@expo/vector-icons'; \nimport useColorScheme from '../hooks/useColorScheme';\n\nconst openURL = Platform.OS=='web'?(url:string)=>{location.href=url}:Linking.openURL\n\nexport default ()=>{\n    const theme = useColorScheme()\n    return<View style={Styles.footer_buttons}>\n        <TouchableOpacity style={Styles.footer_button} onPress={()=>openURL(\"https://github.com/blacktokki/tokki-tok\")}>\n            <AntDesign name=\"github\" size={24} color={theme=='light'?'black':'white'} />\n        </TouchableOpacity>\n        <TouchableOpacity style={Styles.footer_button} onPress={()=>Linking.openURL(\"mailto:ydh051541@naver.com\")}>\n            <AntDesign name=\"mail\" size={24} color={theme=='light'?'black':'white'} />\n        </TouchableOpacity>\n    </View>\n}\n\nconst Styles = StyleSheet.create({\n      footer_buttons: {\n        width: '100%',\n        flexDirection: 'row',\n        justifyContent: 'flex-end',\n        paddingBottom: 20,\n        paddingRight: 20,\n      },\n      footer_button: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: 38,\n        height: 38,\n        marginHorizontal: 12,\n        borderWidth: 1,\n        borderColor: '#E7E7E7',\n        borderRadius: 60,\n      },\n})","import React, {useLayoutEffect, useState} from 'react';\nimport {\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n  StyleSheet,\n} from 'react-native';\nimport { StackScreenProps } from '@react-navigation/stack';\nimport useAuthContext from '../../hooks/useAuthContext';\nimport useLangContext from '../../hooks/useLangContext';\nimport ContractFooter from '../../components/ContractFooter';\n\nexport default function LoginScreen({\n  navigation, route\n}: StackScreenProps<any, 'Login'>) {\n  const { lang } = useLangContext()\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const {error, dispatch} = useAuthContext()\n  const _login = ()=>dispatch({type:'LOGIN_REQUEST', username, password})\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      headerRight: undefined\n    });\n  }, [navigation, route]);\n\n  return (<View style={Styles.login_container}>\n    <View style={Styles.login_wrapper}>\n      <View style={Styles.form}>\n        {error && <View style={Styles.form_error}>\n          <Text style={Styles.form_error_text}>{lang(error)}</Text>\n        </View>}\n        <TextInput\n          style={Styles.form_input}\n          value={username}\n          placeholder={lang('Username')}\n          onChangeText={(text) => setUsername(text)}\n          autoCapitalize={'none'}\n          keyboardType={'email-address'}\n          onSubmitEditing={_login}\n        />\n        <TextInput\n          style={Styles.form_input}\n          value={password}\n          placeholder={lang('Password')}\n          secureTextEntry\n          onChangeText={(text) => setPassword(text)}\n          onSubmitEditing={_login}\n        />\n        <TouchableOpacity onPress={_login}>\n          <View style={Styles.button}>\n            <Text style={Styles.button_label}>{lang('Sign in')}</Text>\n          </View>\n        </TouchableOpacity>\n        <TouchableOpacity onPress={() => dispatch({type:\"LOGIN_GUEST\"})}>\n          <Text style={Styles.guest_footer_text}>\n            {lang(\"Sign in as guest\")}\n          </Text>\n        </TouchableOpacity>\n      </View>\n      <View style={Styles.login_social}>\n        <View style={Styles.login_social_separator}>\n          <View style={Styles.login_social_separator_line} />\n          <Text style={Styles.login_social_separator_text}>{'*'}</Text>\n          <View style={Styles.login_social_separator_line} />\n        </View>\n        <View style={Styles.login_social_buttons}>\n        </View>\n      </View>\n      {/* <>\n        <TouchableOpacity onPress={() => navigate(\"RegistrationScreen\")}>\n          <Text style={Styles.login_footer_text}>\n            {\"Don't have an account? \"}\n            <Text style={Styles.login_footer_link}>{'Sign up'}</Text>\n          </Text>\n        </TouchableOpacity>\n      </> */}\n    </View>\n    <ContractFooter/>\n  </View>);\n};\n\nconst Styles = StyleSheet.create({\n    login_container: {\n      flex: 1,\n      backgroundColor: '#FFF',\n    },\n    login_header: {\n      alignItems: 'center',\n      paddingTop: 30,\n      paddingBottom: 50,\n      backgroundColor: '#208AEC',\n    },\n    login_header_logo: {\n      width: 220,\n      resizeMode: 'contain',\n    },\n    login_header_text: {\n      marginTop: 15,\n      color: '#f0f0f0',\n      fontSize: 16,\n    },\n    login_header_text_bold: {\n      color: '#fff',\n      fontWeight: 'bold',\n    },\n    login_wrapper: {\n      flex: 1,\n      justifyContent: 'space-between',\n      paddingTop: 40,\n      borderTopRightRadius: 12,\n      borderTopLeftRadius: 12,\n      backgroundColor: '#fff',\n      alignItems: 'center',\n    },\n    form: {\n      width: '100%',\n      maxWidth: 320,\n    },\n    form_error: {\n      height: 22,\n      width:'100%',\n    },\n    form_error_text:{\n      textAlignVertical:'center',\n      color:'red',\n      fontSize:13,\n    },\n    form_input: {\n      height: 44,\n      paddingHorizontal: 20,\n      marginBottom: 20,\n      backgroundColor: '#EDF0F7',\n      borderRadius: 50,\n    },\n    button: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: 44,\n      backgroundColor: '#0065A4',\n      borderRadius: 50,\n    },\n    button_label: {\n      color: '#fff',\n      fontSize: 16,\n    },\n    login_social: {\n      width: '100%',\n      maxWidth: 280,\n      marginTop: 20,\n    },\n    login_social_separator: {\n      flexDirection: 'row',\n      alignItems: 'center',\n    },\n    login_social_separator_line: {\n      flex: 1,\n      width: '100%',\n      height: 1,\n      backgroundColor: '#E0E0E0',\n    },\n    login_social_separator_text: {\n      marginHorizontal: 10,\n      color: '#808080',\n      fontSize: 16,\n    },\n    login_social_buttons: {\n      flexDirection: 'row',\n      justifyContent: 'center',\n      marginTop: 20,\n    },\n    login_social_button: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: 60,\n      height: 60,\n      marginHorizontal: 12,\n      borderWidth: 1,\n      borderColor: '#E7E7E7',\n      borderRadius: 60,\n    },\n    login_social_icon: {\n      width: 38,\n      height: 38,\n      resizeMode: 'contain',\n    },\n    login_social_facebook: {\n      backgroundColor: '#4267B2',\n      borderColor: '#4267B2',\n    },\n    login_footer_text: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      color: '#808080',\n      fontSize: 14,\n    },\n    guest_footer_text: {\n      flexDirection: 'row',\n      alignSelf: 'center',\n      color: '#808080',\n      fontSize: 15,\n      margin: 15\n    },\n    login_footer_link: {\n      color: '#208AEC',\n      fontSize: 15,\n      fontWeight: 'bold',\n    },\n  });\n  ","import { useCallback, useEffect, useState } from \"react\"\nimport { InfiniteData, useInfiniteQuery, useMutation, useQueryClient } from \"react-query\"\nimport { getMessengerContentList, postMessage, deleteMessengerContent } from \"../../apis\"\nimport { MessengerContent } from \"../../types\"\nimport useWebsocketContext from \"../useWebsocketContext\"\n\nexport type MessengerContentPage = {\n  next?:MessengerContentPage\n  current:MessengerContent[]\n}\n\nexport default function useMessengerContentList(channel_id:number){  \n  const queryClient = useQueryClient()\n  const { data, fetchNextPage } = useInfiniteQuery<MessengerContentPage>(\n    [\"MessengerContentList\", channel_id], \n    async({pageParam})=>getMessengerContentList(channel_id, pageParam).then(current=>({current})), \n    {\n      select:data=>{\n        if(data.pages.length > 1)\n          data.pages[data.pages.length - 2].next = data.pages[data.pages.length - 1]\n        return data;\n      },\n      getNextPageParam:(lastPage)=>lastPage?.current.length?lastPage.current[lastPage.current.length - 1].id:undefined,\n      refetchOnReconnect:false,\n      refetchOnWindowFocus:true\n    }\n  )\n  const { lastJsonMessage } = useWebsocketContext()\n  useEffect(()=>{\n    if(lastJsonMessage !=null && lastJsonMessage['type']=='next_message' && lastJsonMessage['data']['channel'] == channel_id){\n      queryClient.setQueryData<InfiniteData<MessengerContentPage>>([\"MessengerContentList\", channel_id], (_data)=>{\n        if(_data?.pages[0].current && _data?.pages[0].current[0].id != lastJsonMessage['data'].id)\n          _data.pages[0].current = [lastJsonMessage['data'], ..._data?.pages[0].current]\n        return {...(_data || {pages:[], pageParams:[]})}\n      })\n    }\n  }, [lastJsonMessage])\n  return { data, fetchNextPage }\n}\n\nexport function useMessengerContentMutation(){\n  // const queryClient = useQueryClient()\n  const create = useMutation(postMessage, {\n    onSuccess: () => {\n      // queryClient.setQueryData(['MessengerContentList'], (data:any) => ({\n      //   pages: data.pages.slice(0, 1),\n      //   pageParams: data.pageParams.slice(0, 1),\n      // }))\n      // queryClient.invalidateQueries(\"MessengerContentList\")\n    }\n  });\n  const _delete = useMutation(deleteMessengerContent, {\n    onSuccess: (d, variables) => {\n      // queryClient.setQueryData(['MessengerContentList'], (data:any) => ({\n      //   pages: (data.pages as MessengerContent[][]).map(v=>v.filter(v2=>v2.id != variables)),\n      //   pageParams: data.pageParams,\n      // }))\n    }\n  })\n  return { create:create.mutate, delete:_delete.mutate }\n}","import React from 'react'\nimport { TouchableOpacity } from \"react-native-gesture-handler\"\nimport CommonSection from \"./CommonSection\"\nimport { Image, Linking, TextStyle } from \"react-native\"\nimport { View, Text } from \"./Themed\"\nimport { Link } from \"../types\"\n\n\n\nexport default ({link, isMobile}:{link:Link, isMobile:boolean})=>{\n    return <CommonSection containerStyle={{marginHorizontal:0}} bodyStyle={{padding:0}}>\n    <TouchableOpacity onPress={()=>Linking.openURL(link.url)} style={{flexDirection:'row'}} containerStyle={{width:'100%'}}>\n        {link.image && <Image source={{uri:link.image}} resizeMode=\"cover\" style={{ width:'100%', maxWidth:isMobile?120:150, maxHeight:isMobile?120:150, borderWidth:1}}/>}\n        <View style={{flex:1, marginHorizontal:20}}>\n        <Text style={{fontSize:18}}>{link.title}</Text>\n        <Text style={{fontSize:14}}>{link.description}</Text>\n        <Text style={{fontSize:12}}>{link.url}</Text>\n        </View>\n    </TouchableOpacity>\n    </CommonSection>\n}","import React, { createContext, useContext } from \"react\"\nimport { SendJsonMessage } from \"react-use-websocket/dist/lib/types\";\nimport { WebSocketInternalProvider } from \"../../hooks/useWebsocketContext\";\n\nconst WebSocketContext = createContext<{lastJsonMessage:any, sendJsonMessage:SendJsonMessage }>({lastJsonMessage:undefined, sendJsonMessage:()=>{}});\n\nexport const WebSocketProvider = ({disable, children}:{disable?:boolean, children:React.ReactNode})=>{\n  return disable?<></>:<WebSocketInternalProvider path={'messenger/ws/rtc/'} Context={WebSocketContext} useBackground>\n    {children}\n  </WebSocketInternalProvider>\n}\n\nexport default ()=>{\n  const webSocketContext = useContext(WebSocketContext)\n  return webSocketContext\n}\n\n","import React, { useCallback, useRef, useState, useMemo } from \"react\";\n//@ts-ignore\nimport { RTCView, mediaDevices, RTCPeerConnection, MediaStream, RTCSessionDescription, RTCIceCandidate } from \"react-native-webrtc-web-shim\";\n// @ts-ignore\nimport {TURN_SERVER} from \"@env\"\n\n\nconsole.log(TURN_SERVER?\"use turn server\": \"use stun server\")\n\nexport const peerConstraints = {\n\ticeServers: [TURN_SERVER?JSON.parse(TURN_SERVER):{urls: 'stun:stun.l.google.com:19302'}]\n};\n\nexport const sessionConstraints = {\n\tmandatory: {\n\t\tOfferToReceiveAudio: true,\n\t\tOfferToReceiveVideo: true,\n\t\tVoiceActivityDetection: true\n\t}\n};\n\nconst mediaConstraints = {audio:true, video:{framerate:30}}\n\n//@ts-ignore\nexport {MediaStream, RTCPeerConnection, RTCSessionDescription} from \"react-native-webrtc-web-shim\";\n\nconst onICEcandidate = (pc:typeof RTCPeerConnection, message:any)=>{\n\tconst _message = message.data.rtcMessage\n\t\tconst candidate = new RTCIceCandidate(_message);\n\t\tif (pc) {\n\t\t\tconsole.log(\"ICE candidate Added\");\n\t\t\tpc.addIceCandidate(candidate);\n\t\t}\n}\n\nconst sendICEcandidate = (event:any, sendMessage:(data:any)=>void, receiver:string, target:string) => {\n\t// When you find a null candidate then there are no more candidates.\n\t// Gathering of candidates has finished.\n\tif ( !event.candidate ) { return; };\n\t// Send the event.candidate onto the person you're calling.\n\t// Keeping to Trickle ICE Standards, you should send the candidates immediately.\n\tsendMessage({type:'ICEcandidate', receiver, data:{target, rtcMessage:event.candidate}})\n  }\n\nconst BAND_WIDTH = 8000\n\nconst optimizeSdp = (offerDescription:RTCSessionDescription)=>{\n\tvar arr = offerDescription.sdp.split('\\r\\n');\n\tarr.forEach((str:string, i:number) => {\n\t\tif (/^a=fmtp:\\d*/.test(str)) {\n\t\t\tarr[i] = str + `;x-google-max-bitrate=${BAND_WIDTH};x-google-min-bitrate=${BAND_WIDTH};x-google-start-bitrate=${BAND_WIDTH}`;\n\t\t} else if (/^a=mid:(0|video)/.test(str)) { // if with audio then 0=>1\n\t\t\tarr[i] += `\\r\\nb=AS:${BAND_WIDTH}`;\n\t\t}\n\t});\n  \treturn new RTCSessionDescription({\n    \ttype: offerDescription.type,\n    \tsdp: arr.join('\\r\\n'),\n  \t})\n}\n\nconst createOffer = async(pcRefCurrent:{pc?:typeof RTCPeerConnection, receiver:string}, sendMessage:(data:any)=>void, stream:typeof MediaStream, target:string, user?:{name:string})=>{\n\tstream && pcRefCurrent.pc.addStream( stream );\n\tconst offerDescription = optimizeSdp((await pcRefCurrent.pc.createOffer( sessionConstraints )));\n\tawait pcRefCurrent.pc.setLocalDescription( offerDescription );\n\tsendMessage({type:'call', receiver:pcRefCurrent.receiver, data:{target, name:user?.name, rtcMessage:offerDescription}})\n}\n\nexport const useLocalCam = (sendMessage:(data:any)=>void)=>{\n\tconst pcRef = useRef<Record<number,{pc:typeof RTCPeerConnection, receiver:string}>>({})\n\tconst [sender, setSender] = useState<string>()\n\tconst [_stream, setStream] = useState<MediaStream>()\n\tconst isPlay = useMemo(()=>_stream?true:false, [_stream])\n\tconst CustomRTCView = useCallback(React.memo(({style}:{style:any})=>(_stream?<RTCView stream={_stream} style={style} videoProps={{height:'100%'}} />:<></>)) , [_stream])\n\tconst start = useCallback(async(user:{name:string}, stream?:typeof MediaStream, mode?:'camera'|'display')=>{\n\t\tconsole.log(\"start\");\n\t\tif (!_stream || mode!==undefined) {\n\t\t\ttry {\n\t\t\t\tlet newStream:typeof MediaStream;\n\t\t\t\tif(mode == 'camera'){\n\t\t\t\t\tnewStream = await mediaDevices.getUserMedia(mediaConstraints)\n\t\t\t\t}\n\t\t\t\telse if (mode == 'display'){\n\t\t\t\t\tnewStream = await mediaDevices.getDisplayMedia(mediaConstraints)\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tnewStream = stream || await mediaDevices.getUserMedia(mediaConstraints).catch((e:any)=>mediaDevices.getDisplayMedia(mediaConstraints));\n\t\t\t\t}\n\t\t\t\tsetStream(newStream)\n\t\t\t\tObject.entries(pcRef.current).map(([k, v])=>{\n\t\t\t\t\tcreateOffer(v, sendMessage, newStream, 'guest', user)\n\t\t\t\t})\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e);\n\t\t\t}\n\t\t}\n\t}, [_stream])\n\tconst stop = useCallback(()=>{\n\t\tconsole.log(\"stop\");\n\t\tif(_stream){\n\t\t\t_stream.getTracks().map((track:any) => track.stop());\n\t\t\tsetStream(undefined)\n\t\t}\n\t}, [_stream])\n\treturn {\n\t\tstart,\n\t\tstop,\n\t\twebsocketOnMessage: async(response:any, user:{name:string})=>{\n\t\t\tlet type = response.type;\n\t\t\tif (type == 'connection'){\n\t\t\t\tsetSender(response.data.channel_name)\n\t\t\t}\n\t\t\tif (type == 'start' && response.data.target=='host'){\n\t\t\t  console.log('1 start')\n\t\t\t  const peerConnection = new RTCPeerConnection( peerConstraints );\n\t\t\t  peerConnection.addEventListener( 'icecandidate', (event:any) => sendICEcandidate(event, sendMessage, response.sender, 'guest'));\n\t\t\t  pcRef.current[response.sender] = {pc:peerConnection, receiver: response.sender}\n\t\t\t  createOffer(pcRef.current[response.sender], sendMessage, _stream, 'guest', user)\n\t\t\t}\n\t\t\t\n\t\t\tif (type == \"answer\" && response.data.target == 'host'){\n\t\t\t  console.log('3 answer')\n\t\t\t  const peerConnection = pcRef.current[response.sender].pc\n\t\t\t  const answerDescription = new RTCSessionDescription(response.data.rtcMessage);\n\t\t\t  await peerConnection.setRemoteDescription( answerDescription );\n\t\t\t  // const streams = pcRef.current.pc.getRemoteStreams()\n\t\t\t  // setMirrorStream(streams[streams.length - 1])\n\t\t\t}\n\t\t\tif (type == \"ICEcandidate\" && response.data.target=='host'){\n\t\t\t\tconst peerConnection = pcRef.current[response.sender].pc\n\t\t\t\tonICEcandidate(peerConnection, response)\n\t\t\t}\n\t\t},\n\t\tCustomRTCView,\n\t\tisPlay,\n\t\tsender,\n\t\t// renderMirrorView,\n\t}\n}\n\nexport const useRemoteCam = (sendMessage:(data:any)=>void)=>{\n\tconst pcRef = useRef<{pc?:RTCPeerConnection, receiver?:string, statsInterval?:any}>({})\n\tconst [user, setUser] = useState<{name:string}>()\n\tconst [_stream, setStream] = useState<MediaStream>()\n\tconst CustomRTCView = useCallback(React.memo((style:any)=>_stream?<RTCView stream={_stream} style={style} videoProps={{height:'100%'}} />:<></>), [_stream])\n\tconst isPlay = useMemo(()=>_stream?true:false, [_stream])\n\tconst start = useCallback((receiver:string)=>{\n\t\tconsole.log(\"start\");\n\t\tif (!pcRef.current.pc) {\n\t\t  pcRef.current.pc = new RTCPeerConnection( peerConstraints );\n\t\t  pcRef.current.receiver = receiver\n\t\t}\n\t\tif (!_stream){\n\t\t\tsendMessage({type:'start', receiver, data:{'target': 'host'}})\n\t\t}\n\t}, [_stream])\n\tconst stop = () => {\n\t\tconsole.log(\"stop\");\n\t\tif (pcRef.current.pc) {\n\t\t  // peerConnection._unregisterEvents();\n\t\t  setStream(undefined)\n\t\t  pcRef.current.pc.close();\n\t\t  pcRef.current.pc = undefined\n\t\t  pcRef.current.receiver = undefined\n\t\t  clearInterval(pcRef.current.statsInterval)\n\t\t}\n\t}\n\treturn {\n\t\tstart,\n\t\tstop,\n\t\twebsocketOnMessage: async(response:any)=>{\n\t\t\tlet type = response.type;\n\t\t\tif (type == 'start' && response.data.target=='guest' && response.sender == pcRef.current?.receiver){\n\t\t\t\tconsole.log('(remote)1 start')\n\t\t\t\tconst peerConnection = pcRef.current.pc\n\t\t\t\tsetUser({name: response.data.name})\n\t\t\t\tpeerConnection.addEventListener('icecandidate', (event:any) => sendICEcandidate(event, sendMessage, response.sender, 'host'));\n\t\t\t\tpeerConnection.addEventListener('iceconnectionstatechange', (e:any)=>{\n\t\t\t\t\tif (pcRef.current.pc.iceConnectionState == 'connected'){\n\t\t\t\t\t\tlet activeStream = false\n\t\t\t\t\t\tpcRef.current.statsInterval = setInterval(async()=>{\n\t\t\t\t\t\t\tconst stats = await pcRef.current.pc.getStats(null)\n\t\t\t\t\t\t\tlet statsOutput = \"\";\n\t\t\t\t\t\t\tlet framePerSecond = undefined\n\t\t\t\t\t\t\tstats.forEach((report:any) => {\n\t\t\t\t\t\t\t\tif (report.type === \"inbound-rtp\" && report.kind === \"video\") {\n\t\t\t\t\t\t\t\t\tObject.keys(report).forEach((statName) => {\n\t\t\t\t\t\t\t\t\t\tstatsOutput += `${statName}: ${report[statName]}\\n`;\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tframePerSecond = report.framesPerSecond\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tconsole.log(activeStream, framePerSecond)\n\t\t\t\t\t\t\tif (framePerSecond != undefined){\n\t\t\t\t\t\t\t\tactiveStream = true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (activeStream){\n\t\t\t\t\t\t\t\tstop()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconsole.log(new Date().toTimeString().split(' ')[0], statsOutput)\n\t\t\t\t\t\t}, 1000);\n\t\t\t\t\t}\n\t\t\t\t\telse if (pcRef.current.pc.iceConnectionState == 'failed'){\n\t\t\t\t\t\tstop()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t// peerConnection.addTransceiver('audio', {\n\t\t\t\t// \tdirection: 'recvonly'\n\t\t\t\t// });\n\t\t\t\tpeerConnection.addTransceiver('video', {\n\t\t\t\t\tdirection: 'recvonly'\n\t\t\t\t});\n\t\t\t\tawait createOffer({pc:pcRef.current.pc, receiver:response.sender}, sendMessage, _stream, 'host', user)\n\t\t\t}  \n\t\t\tif (type == \"answer\" && response.data.target=='guest' && response.sender == pcRef.current?.receiver){\n\t\t\t\tconsole.log('(remote)3 answer')\n\t\t\t\tconst answerDescription = new RTCSessionDescription(response.data.rtcMessage);\n\t\t\t\tawait pcRef.current.pc.setRemoteDescription( answerDescription );\n\t\t\t\tconst streams = pcRef.current.pc.getRemoteStreams()\n\t\t\t\tsetStream(streams[streams.length - 1])\n\t\t\t\tsendMessage({type:'end', receiver:pcRef.current.receiver, data:{}})\n\t\t\t}\n\t\t\tif (type == \"call\" && response.sender == pcRef.current?.receiver){\n\t\t\t  console.log('2 call')\n\t\t\t  const peerConnection = pcRef.current.pc\n\t\t\t  setUser({name:response.data.name})\n\t\t\t  if (!peerConnection)\n\t\t\t\treturn\n\t\t\t  peerConnection.addEventListener( 'icecandidate', (event:any) => sendICEcandidate(event, sendMessage, response.sender, 'host'));\n\t\t\t  const offerDescription = new RTCSessionDescription(response.data.rtcMessage);\n\t\t\t  await peerConnection.setRemoteDescription( offerDescription );\n\t\t\t  const answerDescription = await peerConnection.createAnswer( sessionConstraints );\n\t\t\t  await peerConnection.setLocalDescription( answerDescription );\n\t\t\t  sendMessage({type:'answer', receiver:pcRef.current.receiver, data:{target:'host', rtcMessage:peerConnection.localDescription}})\n\t\t\t  // Here is a good place to process candidates.\n\t\t\t  const streams = pcRef.current.pc.getRemoteStreams()\n\t\t\t  setStream(streams[streams.length - 1])\n\t\t\t}\n\t\t\tif (type == \"ICEcandidate\" && response.data.target=='guest' && response.sender == pcRef.current?.receiver)\n\t\t\t  onICEcandidate(pcRef.current.pc, response)\n\t\t},\n\t\tCustomRTCView,\n\t\tuser,\n\t\tisPlay\n\t}\n}","import {StyleSheet} from \"react-native\";\nexport {useLocalCam, useRemoteCam} from \"./p2p\"\n\nexport const camStyle = StyleSheet.create({\n\tcontainer:{ flex: 1},\n\tcam:{ flex: 1, height:'100%'},\n\tbottonContainer: {position:\"absolute\", bottom:0, justifyContent:'flex-end'},\n\tbuttonBar: { flexDirection: \"row\", justifyContent: \"space-around\" },\n\tlabel: {backgroundColor:'#0008', color:'white', paddingHorizontal:5},\n})","import React, { useEffect } from \"react\";\nimport {Button, View, Text} from \"react-native\";\nimport useWebsocketContext from \"./useWebsocketContext\";\nimport { useLocalCam, camStyle} from \"./webrtc\";\n\n\nexport default (props:{user?:{name:string}|null, mode?:'camera'|'display'|null})=>{\n  const {lastJsonMessage, sendJsonMessage} = useWebsocketContext()\n  const {start, stop, websocketOnMessage, CustomRTCView, isPlay} = useLocalCam(sendJsonMessage)\n  useEffect(()=>{\n    props.user && lastJsonMessage && websocketOnMessage(lastJsonMessage, props.user)\n  }, [lastJsonMessage, props.user])\n  useEffect(()=>{\n    if(props.mode && !isPlay){\n      props.user && start(props.user, undefined, props.mode)\n    }\n    else if(props.mode===null && isPlay){\n      stop()\n    }\n    return ()=>{isPlay && stop()}\n  }, [isPlay, props.user, props.mode])\n  return (\n    <View style={camStyle.container}>\n      <CustomRTCView style={camStyle.cam}/>\n      <View style={camStyle.bottonContainer}>\n        <View style={camStyle.buttonBar}>  \n        </View>\n        <View style={{flexDirection:'row'}}><Text style={camStyle.label}>{props.user?.name}</Text></View>\n        <View style={camStyle.buttonBar}>\n          {props.mode === undefined && !isPlay && <Button title=\"Start\" onPress={()=>props.user && start(props.user)} />}\n          {props.mode === undefined && isPlay && <Button title=\"Stop\" onPress={stop} />}\n        </View>\n      </View>\n    </View>\n  );\n}\n","import React, { useState, useEffect, } from \"react\";\nimport {Button,Text, TextInput, View} from \"react-native\";\nimport useWebsocketContext from \"./useWebsocketContext\";\nimport { useRemoteCam, camStyle} from \"./webrtc\";\n\nexport default (props:{receiver?:string})=>{\n  const [receiver, setReceiver] = useState('')\n  const {lastJsonMessage, sendJsonMessage} = useWebsocketContext()\n  const {start, stop, websocketOnMessage, CustomRTCView, isPlay, user} = useRemoteCam(sendJsonMessage)\n  useEffect(()=>{\n    lastJsonMessage && websocketOnMessage(lastJsonMessage)\n  }, [lastJsonMessage])\n  useEffect(()=>{\n    if(props.receiver){\n      start(props.receiver)\n    }\n    return ()=>stop()\n  }, [props.receiver])\n  return (\n    <View style={camStyle.container}>\n      <CustomRTCView style={camStyle.cam}/>\n      <View style={camStyle.bottonContainer}>\n        <View style={camStyle.buttonBar}>\n        </View>\n        <View style={{flexDirection:'row'}}>{\n          (props.receiver || isPlay)?\n          <Text style={camStyle.label}>{user?.name || 'loading...'}</Text>:\n          <>\n            <Text style={{borderWidth:1}}>Receiver:&nbsp;</Text>\n            <TextInput style={{borderWidth:1, flex:1}} value={receiver} onChangeText={setReceiver}/>\n          </> \n        }</View>\n        <View style={camStyle.buttonBar}>\n          {props.receiver === undefined && !isPlay && <Button title=\"Start\" onPress={()=>start(receiver)} />}\n          {props.receiver === undefined && isPlay && <Button title=\"Stop\" onPress={stop} />}\n        </View>\n      </View>\n    </View>\n  );\n}\n\n","import React, {useEffect, useState} from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { View as ThemedView } from '../../../components/Themed' \nimport Colors from '../../../constants/Colors';\nimport {default as useRtcContext, WebSocketProvider as RtcProvider} from \"../../../lib/react-native-webrtc/useWebsocketContext\";\nimport LocalCam from '../../../lib/react-native-webrtc/LocalCam';\nimport RemoteCam from '../../../lib/react-native-webrtc/RemoteCam';\nimport useResizeContext from '../../../hooks/useResizeContext';\nimport useAuthContext from '../../../hooks/useAuthContext';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport CommonButton from '../../../components/CommonButton';\n\ntype VideoType = 'camera'|'display'|null\ntype VideoCallProps = {channel_id:number, setDisable:(disable:boolean)=>void, disable?:boolean}\n\n\nconst VideoView = (props:{\n  scale:string,\n  focusGuest?:string,\n  setFocusGuest:(focusGuest?:string)=>void\n  receiver?:string\n  children:React.ReactNode\n})=>{\n  return <View style={[{maxWidth:props.scale, maxHeight:props.scale, borderWidth:1, borderColor:Colors.borderColor, backgroundColor:'gray', flexDirection:'row', flexGrow:1}, (props.focusGuest == undefined || props.focusGuest == props.receiver)?{height:'100%'}:{maxWidth:0, height:0}]}>\n    <TouchableOpacity style={{flex:1}} containerStyle={{flex:1, justifyContent:'center'}} onPress={()=>props.setFocusGuest(props.focusGuest?undefined:props.receiver)}>\n    {props.children}\n    </TouchableOpacity>\n  </View>\n    \n  \n}\n\nconst VideoCallContainer = ({channel_id, disable, setDisable}:VideoCallProps)=>{\n  const {auth} = useAuthContext()\n  const [videoMode, setVideoMode] = useState<VideoType>(null)\n  const [guests, setGuests] = useState<string[]>([])\n  const [focusGuest, setFocusGuest] = useState<string>()\n  const windowType = useResizeContext()\n  const { lastJsonMessage, sendJsonMessage } = useRtcContext()\n  useEffect(()=>{\n    if(lastJsonMessage !=null){\n      if(lastJsonMessage['type']=='connection'){\n        sendJsonMessage({'type':'broadcast', 'data':{'channel_id':channel_id}})\n      }\n      if(lastJsonMessage['type']=='broadcast_guest' || lastJsonMessage['type']=='broadcast_host'){\n        setGuests([...guests, lastJsonMessage['sender']])\n      }\n      if(lastJsonMessage['type']=='broadcast_disconnect'){\n        const channel_name = lastJsonMessage['sender']\n        const exist = guests.find(v=>v == channel_name)\n        exist && setGuests(guests.filter(v=>v != channel_name))\n      }\n    }\n  }, [lastJsonMessage])\n  const scale = focusGuest?'100%':`${100 / Math.max(2, Math.ceil(Math.sqrt(guests.length + 1)))}%`\n  const toggleVideoMode = (mode:VideoType)=>{\n    setVideoMode(videoMode!=mode?mode:null)\n  }\n  return lastJsonMessage !==undefined ?\n    <ThemedView style={[\n      {aspectRatio:!disable?16/9:0, borderColor:Colors.borderColor, borderRadius:10},\n      windowType=='landscape'?{flexShrink:1, flexGrow:0, height:'100%', borderLeftWidth:1, paddingBottom:65}:{maxHeight:'36%', width:'100%', borderBottomWidth:1}\n    ]}>\n      <View style={{aspectRatio:focusGuest?undefined:16/9, backgroundColor:'white', flexWrap:'wrap', flexDirection:'row', width:'100%', height:'100%'}}>\n        {guests.map((receiver, i)=><VideoView scale={scale} focusGuest={focusGuest} setFocusGuest={setFocusGuest} receiver={receiver}>\n          <RemoteCam receiver={receiver}/>\n        </VideoView>\n        )}\n        <VideoView scale={scale} focusGuest={focusGuest} setFocusGuest={setFocusGuest} receiver={auth.user?.name}>\n          <LocalCam user={auth.user} mode={videoMode}/>\n        </VideoView>\n      </View>\n      <ThemedView style={[\n          {position:'absolute', alignItems:'center', justifyContent:'flex-end', width:'100%',flexDirection:'row'},\n          windowType=='landscape'?{bottom:0, paddingTop:15, paddingBottom:10, paddingHorizontal:19}:{backgroundColor:'transparent'}\n        ]}>\n        <CommonButton title={'⏺️'} style={{height:40, paddingTop:8}} onPress={()=>toggleVideoMode('camera')}/>\n        <CommonButton title={'🖥️'} style={{height:40, paddingTop:8}} onPress={()=>toggleVideoMode('display')}/>\n        <CommonButton title={'📹'} style={{height:40, paddingTop:8}} onPress={()=>setDisable(true)}/>\n      </ThemedView>\n    </ThemedView>:\n  <></>\n  }\n  \nexport default React.memo(({channel_id, disable, setDisable}:VideoCallProps)=>{\n  return <RtcProvider disable={disable}>\n    <VideoCallContainer channel_id={channel_id} disable={disable} setDisable={setDisable}/>\n  </RtcProvider>\n})\n","import React from 'react'\nimport { TouchableOpacity } from \"react-native-gesture-handler\"\nimport CommonSection from \"./CommonSection\"\nimport { Linking, TextStyle } from \"react-native\"\nimport { FontAwesome } from '@expo/vector-icons'; \nimport { View, Text } from \"./Themed\"\nimport { File } from \"../types\"\nimport useColorScheme from '../hooks/useColorScheme';\n\nfunction humanFileSize(size:number) {\n    var i = size == 0 ? 0 : Math.floor(Math.log(size) / Math.log(1024));\n    return (size / Math.pow(1024, i)).toFixed(2) + ' ' + ['B', 'kB', 'MB', 'GB', 'TB'][i];\n  }\n  \n\nexport default ({file, isMobile, showBorder}:{file:File, isMobile:boolean, showBorder:boolean})=>{\n    const theme = useColorScheme()\n    return <CommonSection containerStyle={{marginHorizontal:0}} bodyStyle={showBorder?{padding:10}:{borderWidth:0, padding:0}}>\n    <TouchableOpacity onPress={()=>Linking.openURL(file.file)} style={{flexDirection:'row', alignItems:'flex-start'}} containerStyle={{width:'100%'}}>\n        <FontAwesome name=\"file-o\" size={20} color={theme=='light'?'black':'white'} />\n        <View style={{flex:1, marginHorizontal:10}}>\n            <Text style={{fontSize:18}}>{file.filename}</Text>\n            <Text style={{fontSize:14}}>{humanFileSize(file.filesize)}</Text>\n        </View>\n    </TouchableOpacity>\n    </CommonSection>\n}","import React, {useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState} from 'react';\nimport { StackScreenProps } from '@react-navigation/stack';\nimport { Platform, StyleSheet, View } from 'react-native';\nimport CommonSection from '../../../components/CommonSection';\nimport { FlatList, TextInput } from 'react-native-gesture-handler';\nimport CommonButton from '../../../components/CommonButton';\nimport useMessengerContentList, { MessengerContentPage, useMessengerContentMutation } from '../../../hooks/lists/useMessengerContent.List';\nimport useAuthContext from '../../../hooks/useAuthContext';\nimport HeaderRight from '../../../components/HeaderRight';\nimport useMessengerMemberList, { useMessengerMemberMutation } from '../../../hooks/lists/useMessengerMemberList';\nimport { navigate } from '../../../navigation';\nimport Colors from '../../../constants/Colors';\nimport useColorScheme from '../../../hooks/useColorScheme';\nimport { Text, View as ThemedView } from '../../../components/Themed' \nimport Hyperlink from 'react-native-hyperlink'\nimport useMessengerChannelList from '../../../hooks/lists/useMessengerChannelList';\nimport useIsMobile from '../../../hooks/useIsMobile';\nimport LinkPreview from '../../../components/LinkPreview';\nimport Avatar from '../../../components/Avatar';\nimport VideoCallSection from './VideoCallSection';\nimport useResizeContext from '../../../hooks/useResizeContext';\nimport FilePreview from '../../../components/FilePreview';\nimport useModalsContext from '../../../hooks/useModalsContext';\nimport InviteModal from '../../../modals/InviteModal';\nimport useLangContext from '../../../hooks/useLangContext';\nimport ChannelEditModal from '../../../modals/ChannelEditModal';\nimport ProfileModal from '../../../modals/ProfileModal';\n\n\nfunction uploadFile(){\n  return new Promise<Blob|undefined>((resolve, reject)=>{\n    if (Platform.OS == 'web'){\n      var input = document.createElement('input');\n      input.type = 'file';\n      input.onchange = e => { \n        resolve((e.target as any).files[0])\n      }\n      input.onabort = reject\n      input.onerror = reject\n      input.click();\n    }\n    else\n      resolve(undefined)\n  })\n}\n\nconst MessengerContentPageItem = React.memo((props:MessengerContentPage & {ownerId?:number})=>{\n  const isMobile = useIsMobile()\n  let nextPage = props.next;\n    while(nextPage?.next && nextPage.current.length==0){\n      nextPage = nextPage.next\n    }\n    const nextContent = nextPage?.current[0]\n    return <View style={{flexDirection: 'column-reverse'}}>\n      \n      {props.current.map((content, index2)=>{\n        const next = index2 + 1 < props.current.length?props.current[index2+1]:nextContent\n        const created:string = content.created.slice(0, 16)\n        const date = created.slice(0, 10)\n        const isSystem = content.user == null\n        const isFirst = next==undefined || (content.user != next.user || created != next.created.slice(0, 16))\n        const isSelf = props.ownerId == content.user\n        const dayChanged = next==undefined || date != next.created.slice(0, 10)\n        const message = content.message_set[0]\n        if (isSystem)\n          return <View key={content.id} style={{flexDirection:'row', justifyContent:'center', width:'100%', marginVertical:5}}>\n            <Text>{message.content}</Text>\n          </View>\n        return <View key={content.id}>\n          {dayChanged?<View style={{flexDirection:'row', justifyContent:'center', width:'100%'}}><Text>{date}</Text></View>:undefined}\n          <View key={content.id} style={{flexDirection:'row', justifyContent:isSelf?'space-between':'flex-start', width:'100%'}}>\n            {isFirst && !isSelf? <View style={{marginTop:3, marginLeft:12}}><Avatar name={content.name} userId={content.user} size={36}/></View>:<View style={{width:48}}/>}\n            <CommonSection outerContainerStyle={{width:undefined, maxWidth:'90%'}} title={isFirst?content.name:undefined} titleStyle={{flex:undefined}} bodyStyle={{padding:10}} subtitle={`${created.slice(11)}`}>\n              {/* @ts-ignore */}\n              <Hyperlink linkDefault={ true } style={{wordBreak:\"break-word\"}} linkStyle={{color: '#12b886'}}>\n                <Text selectable>{message.content}</Text>\n              </Hyperlink>\n              {content.file_set.map((file, fileIndex)=><FilePreview key={fileIndex} file={file} isMobile={isMobile} showBorder={content.file_set.length>1 || message.content.length>0}/>)}\n              {content.link_set.map((link, linkIndex)=><LinkPreview key={linkIndex} link={link} isMobile={isMobile}/>)}              \n            </CommonSection>\n          </View>\n        </View>\n      })}\n    </View>\n\n})\n\nexport default function ChatScreen({navigation, route}: StackScreenProps<any, 'Chat'>) {\n  const { lang, locale } = useLangContext()\n  const isMobile = useIsMobile()\n  const channel_id = route?.params?.id\n  const height = useRef(0)\n  const inputRef = useRef<TextInput>(null)\n  const {auth} = useAuthContext()\n  const { setModal } = useModalsContext()\n  const channel = useMessengerChannelList(auth)?.find(v=>v.id==parseInt(channel_id))\n  const {data, fetchNextPage } = useMessengerContentList(channel_id)\n  const memberList = useMessengerMemberList(channel_id)\n  const member_id = useMemo(()=>memberList?.find(v=>v.user == auth.user?.id)?.id, [auth, memberList])\n  const windowType = useResizeContext()\n  const messengerMemberMutation = useMessengerMemberMutation()\n  const [value, setValue] = useState('')\n  const [autoFocus, setAutoFocus] = useState<boolean|null>(null)\n  const [videoMode, setVideoMode] = useState<boolean>(false)\n  const theme = useColorScheme()\n  const postValue = ()=>{\n    if (value.length>0){\n      contentMutation.create({channel:channel_id, user:auth.user?.id, content:value})\n      setValue('')\n      setAutoFocus(true)\n    }\n  }\n  const contentMutation = useMessengerContentMutation()\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      headerRight: ()=> <HeaderRight extra={[\n        {title:lang('invite'), onPress:()=>setModal(InviteModal, {id:channel_id})},\n        {title:lang('leave'), onPress:()=>{member_id && messengerMemberMutation.leave(member_id).then(back)}}\n      ]}/>,\n      title: channel?.name\n    });\n  }, [navigation, route, member_id, locale]);\n\n  const renderItem = useCallback(({item, index}:{item:MessengerContentPage, index:number})=><MessengerContentPageItem {...item} ownerId={auth.user?.id}/>, [auth])\n  \n  const back = ()=>{\n    if(navigation.canGoBack())\n        navigation.goBack()\n      else{\n        navigation.navigate('HomeScreen', {tab:2})\n      }\n  }\n  useEffect(()=>{\n    setModal(null, null)\n    if (!(channel_id))\n      back()\n  }, [route])\n  useEffect(()=>{\n    if(autoFocus){\n      (inputRef.current as any).focus()\n      setAutoFocus(false)\n    }\n  }, [autoFocus])\n  useEffect(()=>{\n    if (autoFocus==null && !isMobile){\n      const timeout = setTimeout(()=>setAutoFocus(true), 500)\n      return ()=>clearTimeout(timeout)\n    }\n  })\n  return <View style={[\n    {flex:1, alignItems:'center'},\n    windowType=='landscape'?{flexDirection:'row-reverse', minWidth:480}:{flexDirection:'column'}\n  ]}>\n    <VideoCallSection channel_id={channel_id} setDisable={(d)=>setVideoMode(!d)} disable={!videoMode}/>\n    <View style={[{flex:videoMode?undefined:1, flexShrink:1}, windowType=='landscape'?{minWidth:320, height:'100%'}:{width:'100%'}]}>\n      <FlatList\n        style={{flexDirection: 'column-reverse'}}\n        contentContainerStyle={{padding:10, flexGrow:1, flexDirection: 'column-reverse'}}\n        data={data?.pages}\n        renderItem={renderItem}\n        onScroll={(e)=>{\n          if (e.nativeEvent.contentOffset.y + e.nativeEvent.contentSize.height - height.current < 1)\n            fetchNextPage()\n        }}\n        onLayout={(p)=>{height.current = p.nativeEvent.layout.height}}\n      />\n      <ThemedView style={{bottom:0, alignItems:'center', width:'100%',flexDirection:'row', paddingTop:15, paddingBottom:10, paddingHorizontal:19}}>\n        <TextInput ref={inputRef} value={value} onChangeText={setValue} style={{\n          flex:1, borderWidth:1, height:40, borderRadius:6, borderColor:Colors.borderColor, backgroundColor:Colors[theme].background, color:Colors[theme].text\n        }} onSubmitEditing={postValue} blurOnSubmit={true}/>\n        <CommonButton style={{height:40, paddingTop:8}} title={'💬'} onPress={postValue}/>\n        <CommonButton style={{height:40, paddingTop:8}} title={'📤'} onPress={()=>uploadFile().then(f=>{\n          contentMutation.create({channel:channel_id, user:auth.user?.id, content:'', file:f})\n        })}/>\n        {!videoMode && <CommonButton style={{height:40, paddingTop:8}} title={'📹'} onPress={()=>setVideoMode(!videoMode)}/>}\n      </ThemedView>\n    </View>\n  </View>\n}","import React, {useState, useEffect, useLayoutEffect} from 'react';\nimport { StackScreenProps } from '@react-navigation/stack';\nimport { StyleSheet, Text, View} from 'react-native';\nimport { Text as StyledText } from 'react-native-paper';\nimport { useColorScheme as useConfigColorScheme} from 'react-native-appearance';\nimport useResizeContext from '../../hooks/useResizeContext';\nimport TabView from '../../components/TabView';\nimport HeaderRight from '../../components/HeaderRight';\nimport TextButton from '../../components/TextButton';\nimport Colors from '../../constants/Colors';\nimport useColorScheme, { setColorScheme } from '../../hooks/useColorScheme';\nimport useModalsContext from '../../hooks/useModalsContext';\nimport ChannelEditModal from '../../modals/ChannelEditModal';\nimport useLangContext from '../../hooks/useLangContext';\nimport ContractFooter from '../../components/ContractFooter';\nimport { TabViewRecord } from '../../types';\nimport useAuthContext from '../../hooks/useAuthContext';\nimport useUserMembershipList from '../../hooks/lists/useUserMembershipList';\nimport { FontAwesome, Ionicons, MaterialCommunityIcons, SimpleLineIcons } from '@expo/vector-icons';\nimport { useMessengerChannelSorted } from '../../hooks/lists/useMessengerChannelList';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport CommonItem from '../../components/CommonItem';\nimport MemberItem from '../../components/MemberItem';\nimport ProfileModal from '../../modals/ProfileModal';\nimport { navigate } from '../../navigation';\nimport CommonSection from '../../components/CommonSection';\n\nconst MemberTabView = ()=>{\n  const {auth} = useAuthContext()\n  const { setModal } = useModalsContext()\n  const userList = useUserMembershipList(auth)\n  const memberItem = React.useMemo(\n      ()=>userList && userList.map((item, index)=><MemberItem key={index} member={item} onPress={()=>setModal(ProfileModal, {id:item.id})}/>), [userList])\n  return <ScrollView style={{flex:1, backgroundColor:'white'}}>\n      {memberItem}\n  </ScrollView>\n}\n\nconst MessengerTabView = ()=>{\n  const {auth} = useAuthContext()\n  const channelList = useMessengerChannelSorted(auth)\n  const today = (new Date()).toISOString().slice(0, 10)\n  return <ScrollView style={{flex:1, backgroundColor:'white'}}>\n      {channelList?.map((item, index)=>{\n          const date = item.last_message?.created.slice(0,10)\n          return <CommonItem key={index} bodyStyle={{flexDirection:'row', justifyContent:'space-between'}} onPress={()=>navigate(\"ChatScreen\", {id:item.id})}>\n              <View style={{flexDirection:'row'}}>\n                  <FontAwesome size={36} style={{ marginBottom: -3, marginRight:20 }} name='users'/>\n                  <View>\n                      <View style={{flexDirection:'row'}}>\n                          <Text style={{fontSize:18}}>{item.name}</Text>\n                          <Text style={{fontSize:18, opacity: 0.4, paddingLeft:5}}>{item.member_count}</Text>\n                      </View>\n                      <Text style={{fontSize:16, opacity: 0.4}}>{item.last_message?.content}</Text>\n                  </View>\n              </View>\n              <View>\n                  <Text style={{fontSize:14, opacity: 0.4, textAlign:'right'}}>{date==today?item.last_message?.created.slice(11,16):date}</Text>\n                  <Text style={{fontSize:14, textAlign:'right'}}>{item.unread_count?item.unread_count:' '}</Text>\n              </View>\n          </CommonItem>\n      })}\n  </ScrollView>\n}\n\nconst bottomTabs:TabViewRecord = {\n  OneTab:{\n      title:'member',\n      component:MemberTabView,\n      icon:<MaterialCommunityIcons size={32} style={{ marginBottom: -3 }} name='account'/>,\n  },\n  TwoTab:{\n      title:'chat',\n      component:MessengerTabView,\n      icon:<Ionicons size={30} style={{ marginBottom: -3 }} name='chatbox'/>\n  },\n  // ThreeTab:{\n  //     title:'board',\n  //     component:()=><></>,\n  //     icon:<></>\n  // },\n  // FourTab:{\n  //     title:'config',\n  //     component:()=><></>,\n  //     icon:<SimpleLineIcons size={30} style={{ marginBottom: -3 }} name='options'/>\n  // }\n}\n\n\nexport default function HomeScreen({navigation, route}: StackScreenProps<any, 'Home'>) {\n  const { lang, locale, setLocale } = useLangContext()\n  const windowType = useResizeContext();\n  const theme = useColorScheme()\n  const configTheme = useConfigColorScheme()\n  const { setModal } = useModalsContext()\n  const [ home, setHome ] = useState(windowType == 'landscape')\n  const color = Colors[theme].text\n  const options = [\n    {title:lang('member'), headerRight:()=><HeaderRight/>},\n    {title:lang('chat'), headerRight:()=><HeaderRight extra={[{title:lang('create'), onPress:()=>setModal(ChannelEditModal, {type:'messenger'})}]}/>},\n    // {title:'board', headerRight:()=><HeaderRight extra={[{title:'create', onPress:()=>setModal(ChannelEditModal, props:{type:'board'}}) }]}/>},\n    {title:'config', headerRight:()=><HeaderRight/>}\n  ]\n  \n  useLayoutEffect(() => {\n    const index = route?.params?.tab | 0\n    navigation.setOptions(windowType == 'portrait'?options[index]:{\n      title: lang('home'),\n      headerRight: ()=><HeaderRight/>\n    });\n  }, [navigation, route, windowType, locale]);\n  useEffect(()=>{\n    setHome(windowType == 'landscape')\n  }, [windowType])\n  return home?\n    <View style={{flex:1, justifyContent:'center', alignItems:'center'}}>\n      <View style={{width:'80%', flex:1, marginTop:72}}>\n        <StyledText style={{fontSize:32, color}}>Tokki Tok</StyledText>\n        <View style={{backgroundColor:Colors.borderColor, height:1, width:'100%'}}/>\n        {/* <Text style={{fontSize:20, color:'gray'}}>Welcome! This is a messenger for teams.</Text>*/}\n        <View style={{height:24}}/>\n        <CommonSection bodyStyle={{alignItems:'flex-start', backgroundColor:'transparent'}}>\n          <TextButton title={lang('+ New chat')} textStyle={{fontSize:20, color}} style={{paddingLeft:0, borderRadius:20}} onPress={()=>setModal(ChannelEditModal, {type:'messenger'})}/>\n        </CommonSection>\n        <CommonSection bodyStyle={{alignItems:'flex-start', backgroundColor:'transparent'}}>\n          <Text style={{fontSize:20, color, fontWeight:'600'}}>{lang('* Language Settings')}</Text>\n          <View style={{flexDirection:'row'}}>\n            {[[lang('Auto'), 'auto'], ['한국어', 'ko'], ['English', 'en']].map(([title, l])=><TextButton \n              key={title} title={title || ''} textStyle={{fontSize:16, color, textDecorationLine:locale==l?'underline':'none'}} style={{borderRadius:20}} onPress={()=>setLocale(l)}/>)}\n          </View>\n        </CommonSection>\n        <CommonSection bodyStyle={{alignItems:'flex-start', backgroundColor:'transparent'}}>\n          <Text style={{fontSize:20, color, fontWeight:'600'}}>{lang('* Skin Settings')}</Text>\n          <View style={{flexDirection:'row'}}>\n            {[[lang('Auto'), 'no-preference'], [lang('Light'), 'light'], [lang('Dark'), 'dark']].map(([title, colorScheme])=><TextButton \n              key={title} title={title} textStyle={{fontSize:16, color, textDecorationLine:configTheme==colorScheme?'underline':'none'}} style={{borderRadius:20}} onPress={(\n                )=>setColorScheme(colorScheme)}/>)}\n          </View>\n        </CommonSection>\n      </View>\n      <ContractFooter/>\n    </View>:\n    <TabView tabs={bottomTabs} tabBarPosition=\"bottom\" index={parseInt(route.params?.['tab'] || 0)} onTab={(index)=>{navigation.setParams({tab:index})}}/>\n}\n\n","import React, {useEffect, useLayoutEffect, useState} from 'react';\n\nimport { StackScreenProps } from '@react-navigation/stack';\nimport useAuthContext from '../../hooks/useAuthContext';\nimport useMessengerChannelList from '../../hooks/lists/useMessengerChannelList';\nimport { Text } from '../../components/Themed';\nimport { useMessengerMemberMutation } from '../../hooks/lists/useMessengerMemberList';\n\nexport default function InviteeScreen({navigation, route}: StackScreenProps<any, 'Invitee'>) {\n    const id = route?.params?.id\n    const {auth, dispatch} = useAuthContext()\n    const [enterGuest, setEnterGuest] = useState(false)\n    const channelList = useMessengerChannelList(auth)\n    const messengerMemberMutation = useMessengerMemberMutation()\n    useLayoutEffect(() => {\n        navigation.setOptions({headerRight: undefined});\n    }, []);\n    useEffect(()=>{\n        if(auth.user==null && enterGuest==false){\n            dispatch({type:\"LOGIN_GUEST\"})\n            setEnterGuest(true)\n        }\n        else if(auth.user && channelList!==undefined){\n            if(channelList.find(v=>v.id==id) === undefined){\n                console.log(`invite processing (channel:${id})`)\n                messengerMemberMutation.invite({\n                    channel_id:id,\n                    user_ids:[auth.user.id]\n                }).then(()=>navigation.replace(\"ChatScreen\", {id}))\n            }\n            else{\n                console.log('already invite')\n                navigation.replace(\"ChatScreen\", {id})\n            }\n        }\n    }, [auth, channelList, enterGuest])\n  return <Text>{'초대중'}</Text>\n};\n","import LoginScreen from \"./main/LoginScreen\";\nimport ChatScreen from \"./main/ChatScreen\";\nimport HomeScreen from \"./main/HomeScreen\";\nimport TabOneScreen from \"./main/TabOneScreen\";\nimport InviteeScreen from \"./main/InviteeScreen\";\n// import BoardScreen from \"../lib/blacktokki-board/BoardScreen\";\n// import BoardEditScreen from \"../lib/blacktokki-board/BoardEditScreen\";\nimport { Screens } from \"../types\";\n\nexport const main = {\n    HomeScreen:{\n        title:'home',\n        component:HomeScreen,\n        path:'home',\n    },\n    ChatScreen:{\n        title:'chat',\n        component:ChatScreen,\n        path:'chat'\n    },\n    // BoardScreen:{\n    //     title:'board',\n    //     component:BoardScreen,\n    //     path:'board'\n    // },\n    // TabOneScreen:{\n    //     title:'tab one',\n    //     component:TabOneScreen,\n    //     path:'one'\n    // },\n    InviteeScreen:{\n        title: '',        \n        component:InviteeScreen,\n        path:'invitee'\n    }\n} as Screens\n\nexport const login = {\n    LoginScreen:{\n        path: 'login',\n        title: 'Sign in',\n        component:LoginScreen\n    },\n    InviteeScreen:{\n        path:'invitee',\n        title: '',\n        component:InviteeScreen\n    }\n} as Screens\n\nexport const modal = {\n    // BoardEditScreen:{\n    //     title:'board',\n    //     component:BoardEditScreen,\n    //     path:'modal/board'\n    // },\n} as Screens","import React, { Context, createContext,  useContext, useEffect, useState } from \"react\"\nimport useWebSocket from \"react-use-websocket\"\nimport { SendJsonMessage } from \"react-use-websocket/dist/lib/types\"\n// @ts-ignore\nimport {API_URL} from \"@env\"\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { AppState, AppStateStatus } from \"react-native\";\n\ntype WebsocketContextType = {lastJsonMessage:any, sendJsonMessage:SendJsonMessage }\nconst defaultContext = {lastJsonMessage:undefined, sendJsonMessage:()=>{}}\nconst WebSocketContext = createContext<WebsocketContextType>(defaultContext);\nconst [SCHEMA, DOMAIN] = `${API_URL}`.split('://')\n\nexport const WebSocketInternalProvider = ({children, path, Context, useBackground}:{children:React.ReactNode, path:string, Context:Context<WebsocketContextType>, useBackground?:boolean})=>{\n  const [token, setToken] = useState<string|null>(null)\n  const [isActive, setIsActive] = useState<boolean>(useBackground || AppState.currentState == 'active')\n  const { lastJsonMessage, sendJsonMessage } = useWebSocket(`${SCHEMA=='https'?'wss':'ws'}://${DOMAIN}/${path}`,{\n    shouldReconnect: (closeEvent) => true,\n    protocols: token?['Authorization',  token]:undefined,\n    onOpen: (e)=>{console.log(`success websocket connection(${path})`)},\n    onClose: (e)=> {console.log(`closed websocket connection(${path})`)},\n  }, isActive && token!=null)\n  useEffect(()=>{\n    AsyncStorage.getItem('Authorization').then(setToken)\n    const onChange = (nextState:AppStateStatus)=>setIsActive(useBackground || nextState == 'active')\n    AppState.addEventListener(\"change\", onChange)\n    return ()=>AppState.removeEventListener(\"change\", onChange)\n  }, [])\n  return <Context.Provider value={token!=null?{lastJsonMessage, sendJsonMessage}:defaultContext}>\n      {children}\n    </Context.Provider>\n}\n\nexport const WebSocketProvider = ({disable, children}:{disable?:boolean, children:React.ReactNode})=>{\n  return disable?<>{children}</>:<WebSocketInternalProvider path={'messenger/ws/'} Context={WebSocketContext}>\n    {children}\n  </WebSocketInternalProvider>\n}\n\nexport default ()=>{\n  const webSocketContext = useContext(WebSocketContext)\n  return webSocketContext\n}\n\n","import React from 'react'\nimport CommonSection from \"./CommonSection\";\nimport useResizeContext from '../hooks/useResizeContext';\n\nexport default (props:{children?: React.ReactNode})=>{\n    const windowType = useResizeContext();\n    return <CommonSection\n        outerContainerStyle={{flex:1, alignSelf:'center', backgroundColor:'#8888', maxWidth:undefined, flexShrink:1}}\n        containerStyle={{flex:1, margin:0, justifyContent:'center', alignItems:'center'}}\n        bodyStyle={windowType=='landscape'?{width:'90%', height:'90%', padding:'5%'}:{width:'100%', height:'100%', maxWidth:1080}}\n    >\n        {props.children}\n    </CommonSection>\n}\n\nexport const BottomSheet = (props:{children?: React.ReactNode})=><CommonSection\n    outerContainerStyle={{flex:1, alignSelf:'center', backgroundColor:'#8888', maxWidth:undefined}}\n    containerStyle={{flex:1, margin:0, justifyContent:'flex-end'}}\n>\n    {props.children}\n</CommonSection>","import React, {useState, useEffect } from 'react';\nimport { StyleSheet } from 'react-native';\nimport { View, Text } from '../components/Themed';\nimport CommonButton from '../components/CommonButton';\n// import useBoardChannelList, { useBoardChannelMutation } from '../hooks/lists/useBoardChannelList';\nimport useAuthContext from '../hooks/useAuthContext';\nimport { navigate } from '../navigation';\nimport { Channel } from '../types';\nimport useMessengerChannelList, { useMessengerChannelMutation } from '../hooks/lists/useMessengerChannelList';\nimport TextField from '../components/TextField';\nimport useModalsContext from '../hooks/useModalsContext';\nimport useLangContext from '../hooks/useLangContext';\nimport ModalSection from '../components/ModalSection';\n\nexport default function ChannelEditModal({id, type}: {id?:number, type:string}) {\n  const { lang } = useLangContext()\n  const {auth} = useAuthContext()\n  const { setModal } = useModalsContext()\n  const channelList = useMessengerChannelList(auth)\n  const channelMutation = useMessengerChannelMutation()\n  const channel = channelList?.find(v=>v.id==id)\n  const [name, setName] = useState('')\n  const [description, setDescription] = useState('')\n  const back = ()=>{\n    setModal(ChannelEditModal, null)\n  }\n  useEffect(()=>{\n    if (channel){\n      setName(channel.name)\n      setDescription(channel?.description || '')\n    }\n  }, [channel])\n  return <ModalSection>\n    <View style={{justifyContent:'space-between', flex:1, width:'100%'}}>\n      <View style={{width:'100%'}}>\n        <Text style={{fontSize:20}}>{lang('New chat')}</Text>\n        <View style={styles.separator} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />\n        <TextField name={lang('Channel Name')} value={name} setValue={setName} width={'60%'}/>\n        <TextField name={lang('Description')} value={description} setValue={setDescription} multiline width={'60%'}/>\n      </View>\n      <View style={{width:'100%', flexDirection:'row', justifyContent:'flex-end'}}>\n        <CommonButton title={lang('save')} onPress={()=>{\n          if(auth?.user?.id && auth.groupId){\n            const newChannel:Channel = {id, name, description, type, owner:auth?.user?.id, group:auth.groupId};\n            (id?channelMutation.update(newChannel):channelMutation.create(newChannel)).then(v=>navigate(\"Main\", {\n              screen:v.type == 'messenger'?'ChatScreen':'BoardScreen',\n              params:{id:v.id}\n            }))\n          }\n        }}/>\n        <CommonButton title={lang('cancel')} style={{marginHorizontal:5}} onPress={back}/>\n      </View>\n    </View>\n  </ModalSection>\n}\n\nconst styles = StyleSheet.create({\n  field:{\n    width:'50%',\n    flexDirection:'row',\n    padding:10,\n  },\n  separator: {\n    marginBottom: 20,\n    height: 1,\n    width: '100%',\n  },\n})","import { Notification } from '../types';\nimport axios from './axios';\n\nexport const getNotification = async (user_id:number)=>{\n    const data = (await axios.get(`/api/v1/notifications/?type=WEB&user=${user_id}`) ).data as Notification[]\n    return data.length?data[0]:undefined\n}\n\nexport const postNotification = async(notification:Notification)=>{\n    return (await axios.post(`/api/v1/notifications/`, notification)).data as Notification\n}\n\nexport const putNotification = async(notification:Notification)=>{\n    return (await axios.put(`/api/v1/notifications/${notification.id}/`, notification)).data as Notification\n}","import { Platform } from 'react-native';\n//@ts-ignore\nimport useMobileDetect from 'use-mobile-detect-hook';\n\nexport default ()=>{\n    const detectMobile = useMobileDetect();\n    return (detectMobile.isMobile() || Platform.OS == 'android' || Platform.OS == 'ios') as boolean\n}","import { useQuery } from \"react-query\";\nimport { getUserMembershipList } from \"../../apis\";\nimport { Auth } from \"../useAuthContext\";\n\nexport default function useUserMembershipList(auth?:Auth){\n  const { data } = useQuery([\"UserMembershipList\", auth?.groupId] , async()=>auth?.groupId?(await getUserMembershipList(auth?.groupId)):[])\n  return data\n}","import React from 'react';\nimport { TabView, SceneMap,NavigationState, SceneRendererProps, TabBar } from 'react-native-tab-view';\nimport useLangContext from '../hooks/useLangContext';\nimport { TabViewRecord } from '../types';\n\n\nexport default (props:{tabs:TabViewRecord, tabBarPosition:\"top\"|\"bottom\", index?:number, onTab?:(index:number)=>void})=>{\n  const { lang } = useLangContext()\n  const [index, setIndex] = React.useState(props.index || 0);\n  const entries = Object.entries(props.tabs)\n  const onTab = props.onTab\n  const icons = Object.assign({}, ...entries.map(([k, v])=>({[k]:v.icon})))\n  return <TabView\n    renderTabBar={(props:SceneRendererProps & {navigationState: NavigationState<any>})=>{\n      return <TabBar\n        {...props}\n        indicatorStyle={{ backgroundColor: \"#2196F3\" }}\n        style={{ backgroundColor:'white' }}\n        activeColor={'black'}\n        inactiveColor={'black'}\n        renderIcon={(scene)=>icons[scene.route.key]}\n        onTabPress={(scene)=>onTab?.(entries.findIndex(([k, v])=>k == scene.route.key))}\n      />\n    }}\n    navigationState={{ index, routes: entries.map(([k, v])=>({key:k, title:lang(v.title)}))}}\n    onIndexChange={setIndex}\n    renderScene={SceneMap(Object.assign({}, ...entries.map(([k, v])=>({[k]:v.component}))))}\n    tabBarPosition={props.tabBarPosition}\n  />\n}\n\n","import * as React from 'react';\nimport { View } from './Themed';\nimport { StyleSheet, StyleProp, ViewStyle, TextStyle, Pressable } from 'react-native';\nimport Colors from '../constants/Colors';\n\nexport type ItemParamList = {\n    outerContainerStyle?:StyleProp<TextStyle>\n    containerStyle?:StyleProp<ViewStyle>\n    bodyStyle?:StyleProp<ViewStyle>\n    children?: React.ReactNode\n    onPress?: ()=>void\n}\n\nexport default function CommonItem(props:ItemParamList){\n  const [hover, setHover] = React.useState(false)\n  const [press, setPress] = React.useState(false)\n  return (\n    <Pressable\n      style={[styles.outerContainer ,props.outerContainerStyle, (press)?{backgroundColor:'rgb(242,242,242)'}:{}]}\n      onPressIn={()=>{setPress(true)}}\n      onPressOut={()=>{setPress(false);props.onPress?.()}}\n       //@ts-ignore\n       onHoverIn={()=>setHover(true)}\n       onHoverOut={()=>setHover(false)}\n    >\n        <View style={[styles.container ,props.containerStyle]}>\n            <View style={[styles.bodyView, props.bodyStyle]}>\n                <>{props.children}</>\n            </View>\n      </View>\n    </Pressable>\n    )\n}\n\nconst styles = StyleSheet.create({\n  outerContainer:{\n    width:'100%',\n    maxWidth:1080,\n    alignItems:'stretch',\n  },  \n  container: {\n      marginHorizontal:20,\n      backgroundColor:'transparent'\n    },\n    bodyView:{\n      width: '100%',\n      padding: 10,\n      minHeight: 40,\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderBottomWidth:1,\n      borderColor:Colors.borderColor,\n      backgroundColor:'transparent'\n    }\n  });\n  ","import * as React from 'react';\nimport { Avatar } from 'react-native-paper';\nimport { AvatarProps } from '../../types';\n\nconst normalizeHash = (hash: number, min: number, max: number) => {\n    return Math.floor((hash % (max - min)) + min);\n};\n\nconst stringToHSL = (str: string, initHash?:number) => {\n    let hash = initHash || 0;\n    for (let i = 0; i < str.length; i++) {\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    hash = Math.abs(hash);\n    return `hsl(${normalizeHash(hash, 0, 360)}, ${normalizeHash(hash, 0, 100)}%, ${normalizeHash(hash, 25, 75)}%)`;\n};\n\nexport default (props:AvatarProps) => {\n    const backgroundColor = stringToHSL(props.name, props.userId)\n    return <Avatar.Text style={{backgroundColor}} size={props.size} label={props.name.split(' ').map(v=>v[0]).join().toUpperCase()} />\n};","import React from 'react';\n// import { MaterialIcons } from \"@expo/vector-icons\"\nimport Avatar from '../lib/react-native-paper/Avatar';\nimport { AvatarProps } from '../types';\n\nexport default (props:AvatarProps)=>{\n    // return <MaterialIcons size={38} style={{ marginBottom: -3, marginRight:10 }} name='account-circle'/>\n    return <Avatar {...props}/>\n}\n\n","import React, { useMemo } from 'react';\n\nimport { TextProps, StyleProp } from 'react-native';\nimport {View, Text } from './Themed'\nimport useResizeContext from '../hooks/useResizeContext';\n\ntype Props = {\n  name: string,\n  width?:number,\n  children: React.ReactNode\n  textStyle?: StyleProp<TextProps>\n}\n\nexport default function RowField(props:Props) {\n  const windowType = useResizeContext()\n  const rowStyle = useMemo(()=>windowType=='landscape'?\n    {flexDirection:'row', alignItems: 'center', justifyContent:'space-between'}:\n    {flexDirection:'column', alignItems:'flex-start'} as any\n  , [windowType])\n  return (\n    <View style={[{paddingVertical:5, width:'100%'}, rowStyle]}>\n        <Text style={[windowType=='landscape'?{flex:1}:{width:'100%'},{paddingHorizontal: 15, fontSize:16}, props.textStyle]}>{props.name}</Text>\n        <View style={[windowType=='landscape'?{flex:6}:{width:'100%'},{paddingHorizontal: 15}]}>\n          <View style={{width:props.width}}>\n            {props.children}\n          </View>\n        </View>\n    </View>\n  )\n}","import React from 'react';\nimport { StyleProp, TextStyle } from 'react-native';\nimport { CustomTextInputProps } from '../types';\nimport CommonTextInput from './CommonTextInput';\nimport RowField from './RowField';\n\nexport default function TextField(props:CustomTextInputProps & {name: string, width?:any, textStyle?:StyleProp<TextStyle>}) {\n  return (\n    <RowField name={props.name} width={props.width} textStyle={props.textStyle}>\n      <CommonTextInput {...props} />\n   </RowField>\n  )\n}","/**\n * Learn more about Light and Dark modes:\n * https://docs.expo.io/guides/color-schemes/\n */\n\nimport * as React from 'react';\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\n\nimport Colors from '../constants/Colors'\nimport useColorScheme from '../hooks/useColorScheme';\n\nexport function useThemeColor(\n  props: { light?: string; dark?: string },\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\n) {\n  const theme = useColorScheme();\n  const colorFromProps = props[theme];\n\n  if (colorFromProps) {\n    return colorFromProps;\n  } else {\n    return Colors[theme][colorName];\n  }\n}\n\ntype ThemeProps = {\n  lightColor?: string;\n  darkColor?: string;\n};\n\nexport type TextProps = ThemeProps & DefaultText['props'];\nexport type ViewProps = ThemeProps & DefaultView['props'];\n\nexport function Text(props: TextProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\n\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\n}\n\nexport function View(props: ViewProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\n\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\n}\n","import React from 'react';\nimport useAuthContext from '../hooks/useAuthContext';\nimport CommonButton from '../components/CommonButton';\nimport useModalsContext from '../hooks/useModalsContext';\nimport { Text, View } from '../components/Themed';\nimport useLangContext from '../hooks/useLangContext';\nimport { BottomSheet } from '../components/ModalSection';\n\nexport default function GuestLogoutModal({id}:{id:number}) {\n  const { lang } = useLangContext()\n  const { setModal } = useModalsContext()\n  const {dispatch} = useAuthContext()\n  const back = ()=>{\n    setModal(GuestLogoutModal, null)\n  }\n  return <BottomSheet>\n    <Text>{lang('Guest users cannot reconnect after logging out. Please create an account or log in.')}</Text>\n    <View style={{width:'100%', flexDirection:'row', justifyContent:'flex-end'}}>\n      <CommonButton title={lang('sign out')} onPress={()=>dispatch({type:\"LOGOUT_REQUEST\"})}/>\n      <CommonButton title={lang('cancel')} onPress={()=>back()}/>\n    </View>\n  </BottomSheet>\n}\n","import React, { useState } from 'react';\nimport { TextInput } from 'react-native';\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport { CustomTextInputProps } from '../types';\n\nexport default (props:CustomTextInputProps)=>{\n    const [contentHeight, setContentHeight] = useState<number>()\n    const minHeight = props.minHeight || 30\n    const theme = useColorScheme()\n    return <TextInput style={[{\n            borderColor:'#d0d7de', \n            fontSize:16, \n            borderWidth:1, \n            borderRadius:6, \n            paddingHorizontal:10, \n            paddingVertical:3, \n            backgroundColor:Colors[theme].background,\n            color:Colors[theme].text,\n            height:props.multiline?contentHeight:minHeight,\n        }, props.style]} \n        editable={!props.disabled} \n        value={props.value} \n        onChangeText={props.setValue}\n        onContentSizeChange={props.multiline?(e) => setContentHeight(Math.max(e.nativeEvent.contentSize.height, minHeight) + 2):undefined}\n        onBlur={()=>props.onBlur?.(props.value)}\n        onEndEditing={()=>props.onEndEditing?.(props.value)}\n        multiline={props.multiline}\n    />\n}","import React from \"react\"\nimport { Text, View } from \"react-native\"\nimport CommonItem from \"./CommonItem\"\nimport { UserMembership } from \"../types\"\nimport Avatar from \"./Avatar\"\n\nexport default ({member:item, onPress}:{member:UserMembership, onPress?:()=>void})=> {\n    return <CommonItem key={item.id} bodyStyle={{backgroundColor:'white', flexDirection:'row', justifyContent:'flex-start'}} onPress={onPress}>\n        <View style={{marginTop:4, marginRight:12}}><Avatar name={item.name} userId={item.id} size={44}/></View>\n        <Text style={{fontSize:20, fontWeight:'400'}}>{item.name}</Text>\n    </CommonItem>\n}","import React, { useEffect } from 'react';\nimport Profile from '../components/Profile';\nimport useAuthContext from '../hooks/useAuthContext';\nimport useUserMembershipList from '../hooks/lists/useUserMembershipList';\nimport { useMessengerChannelMutation } from '../hooks/lists/useMessengerChannelList';\nimport CommonButton from '../components/CommonButton';\nimport { DirectChannel } from '../types';\nimport { navigate } from '../navigation';\nimport useModalsContext from '../hooks/useModalsContext';\nimport { Text, View } from '../components/Themed';\nimport useLangContext from '../hooks/useLangContext';\nimport { Ionicons } from '@expo/vector-icons';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport { BottomSheet } from '../components/ModalSection';\n\nexport default function ProfileModal({id}:{id:number}) {\n  const { lang } = useLangContext()\n  const theme = useColorScheme()\n  const {auth} = useAuthContext()\n  const { setModal } = useModalsContext()\n  const userList = useUserMembershipList(auth)\n  const user = userList?.find(v=>v.id==id)\n  const channelMutation = useMessengerChannelMutation()\n  const back = ()=>{\n    setModal(ProfileModal, null)\n  }\n  useEffect(()=>{\n    if (!(id && user) && userList)\n      back()\n  }, [userList])\n  return user?<BottomSheet>\n    <View style={{flexDirection:'row', width:'100%'}}>\n      <View style={{flex:1, flexDirection:'row'}}>\n        <TouchableOpacity onPress={back}>\n          <Ionicons size={20} name=\"arrow-back\" color={Colors[theme].text}/>\n        </TouchableOpacity>\n      </View>\n      <View style={{flex:1}}>\n        <Text style={{fontSize:20, textAlign:'center'}}>{lang('profile')}</Text>\n      </View>\n      <View style={{flex:1}}/>\n    </View>\n    <View style={{marginBottom: 20, height: 1, width: '100%'}} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />\n    \n    <Profile username={user.username} name={user.name} userId={user.id} />\n    <CommonButton title={lang('1:1 Chat')} onPress={()=>{\n      if(auth?.user?.id && auth.groupId){\n        const newChannel:DirectChannel = {name:auth.user.id!=user.id?`${auth.user.name}, ${user.name}`:auth.user.name, type:'messenger', owner:auth?.user?.id, group:auth.groupId, counterpart:user.id};\n        channelMutation.direct(newChannel).then(v=>navigate(\"Main\", {screen:\"ChatScreen\", params: {id:v.id}}))\n      }\n    }}/>\n  </BottomSheet>:<></>\n}\n","import React from 'react';\nimport {View} from 'react-native'\nimport {Text} from './Themed';\nimport { ProfileProps } from '../types';\nimport Avatar from './Avatar';\nimport TextButton from './TextButton';\nimport CommonTextInput from './CommonTextInput';\nimport { patchUser } from '../apis';\nimport useAuthContext from '../hooks/useAuthContext';\n\nexport default (props:ProfileProps)=>{\n    const [name, setName] = React.useState<string>()\n    const { auth, dispatch } = useAuthContext()\n    const isSelf = auth.user?.id == props.userId\n    const onChange = ()=>{\n        isSelf && patchUser({id:props.userId, name:name || ''}).finally(()=>{\n            setName(undefined)\n            dispatch({type:\"REFRESH\"})\n        })\n    }\n    return <View style={{width:'100%', height:135, justifyContent:'space-evenly', alignItems:'center'}}>\n        <Avatar {...props} size={75}/>\n        {name===undefined?\n            <TextButton textStyle={{fontWeight:'bold', fontSize:15}} onPress={()=>isSelf && setName(props.name)} title={props.name} disabled={!isSelf}/>:\n            <CommonTextInput value={name} style={{textAlign:'center'}} setValue={setName} onBlur={onChange} onEndEditing={onChange} />}\n        <Text style={{fontWeight:'normal', fontSize:14}}>{props.username}</Text>\n    </View>\n}","import { useMemo, useReducer } from \"react\"\n\ntype LocalSearchAction = {type:string, keyword?:string}\n\ntype LocalSearchState ={active:boolean, keyword:string}\n\n\n\nconst localSearchReducer =(initialState:LocalSearchState, action:LocalSearchAction)=>{\n    switch (action.type){\n        case 'SEARCH':\n          return {\n            ...initialState,\n            keyword: action.keyword\n          } as LocalSearchState\n        case 'ENABLE_SEARCH':\n          return {\n            ...initialState,\n            active:true,\n          }\n        case 'DISABLE_SEARCH':\n            return{\n                ...initialState,\n                active:false,\n                keyword: ''\n            }\n        default:\n            throw new Error( `Unhandled action type: ${action.type}`)\n    }\n  }\n\n\nexport default function useLocalSearch<T>(target:T[], compare:(value:T, keyword:string)=>boolean) {\n  const [searchState, dispatch] = useReducer(localSearchReducer, {active:false, keyword:''})\n  const data = useMemo(()=>searchState.active?target.filter(v=>compare(v, searchState.keyword)):target, [searchState, target])\n  return {searchState, dispatch, data}\n}","import React, {useRef,MutableRefObject, useMemo, useState, useEffect } from 'react';\nimport Clipboard from '@react-native-clipboard/clipboard/dist';\nimport { View, Text } from '../components/Themed';\nimport useAuthContext from '../hooks/useAuthContext';\nimport useUserMembershipList from '../hooks/lists/useUserMembershipList';\nimport { TabViewRecord, UserMembership } from '../types';\nimport CommonButton from '../components/CommonButton';\nimport useMessengerMemberList, { useMessengerMemberMutation } from '../hooks/lists/useMessengerMemberList';\nimport useModalsContext from '../hooks/useModalsContext';\nimport useExternalMembershipList from '../hooks/lists/useExternalMembershipList';\nimport TextField from '../components/TextField';\nimport useLocalSearch from '../hooks/useLocalSearch';\nimport TabView from '../components/TabView';\nimport { FlatList, TouchableOpacity } from 'react-native-gesture-handler';\nimport useLangContext from '../hooks/useLangContext';\nimport MemberItem from '../components/MemberItem';\nimport ModalSection from '../components/ModalSection';\n\nconst InviteItem = (props:{item:UserMembership, selectedRef:MutableRefObject<Set<number>>})=>{\n  const [selected, setSelected] = useState(props.selectedRef.current.has(props.item.id))\n  return <View style={selected?{borderWidth:1, borderColor:'blue'}:{}}>\n    <MemberItem member={props.item} onPress={()=>{\n      if (selected){\n        setSelected(false)\n        props.selectedRef.current.delete(props.item.id)\n      }\n      else{\n        setSelected(true)\n        props.selectedRef.current.add(props.item.id)\n      }\n    }}/>\n  </View>\n\n}\ntype InviteTabViewProps = {\n  id:number,\n  selectedRef:MutableRefObject<Set<number>>\n}\n\nconst GroupTabView = ({id, selectedRef}:InviteTabViewProps)=>{\n  const { lang } = useLangContext()\n  const {auth} = useAuthContext()\n  const { setModal } = useModalsContext()\n  const userList = useUserMembershipList(auth)\n  const memberList = useMessengerMemberList(id)\n  const messengerMemberMutation = useMessengerMemberMutation()\n  const rawData = useMemo(()=>{\n    const memberSet = new Set(memberList?.map(v=>v.user))\n    return userList?.filter(v=>!memberSet.has(v.id)) || []\n  }, [userList, memberList])\n  const {data, dispatch:dispatchKeyword, searchState} = useLocalSearch(rawData, (v, keyword)=>(v.username.includes(keyword) || v.name.includes(keyword)))\n  const search = (k:string)=>{\n    if (k?.length>0){\n      dispatchKeyword({type:'ENABLE_SEARCH'})\n      dispatchKeyword({type:'SEARCH', keyword:k})\n    }\n    else{\n      dispatchKeyword({type:'DISABLE_SEARCH'})\n    }\n  }\n  const back = ()=>{\n    setModal(InviteModal, null)\n  }\n  return <View style={{alignItems:'center', flex:1}}>\n    <View style={{'width': '100%', flex:1}}>\n      <TextField name={`${lang('Username')} & ${lang('Name')}`} value={searchState.keyword} setValue={search} width={'80%'}/>\n      {id && data && <FlatList contentContainerStyle={{flexGrow:1}} data={data} renderItem={({item})=><InviteItem item={item} selectedRef={selectedRef}/>}/>}\n    </View>\n    <View style={[{width:'100%', flexDirection:'row', padding:10,}, {justifyContent:'flex-end'}]}>\n      <CommonButton title={lang('invite')} onPress={()=>{\n        messengerMemberMutation.invite({\n          channel_id:id,\n          user_ids:[...selectedRef.current]\n        }).then(back)\n      }}/>\n      <CommonButton title={lang('cancel')} onPress={back}/>\n    </View>\n  </View>\n}\n\nconst DELAY = 500\n\nconst ExternalMembershipTabView = ({id, selectedRef}:InviteTabViewProps)=>{\n  const { lang } = useLangContext()\n  const [value, setValue] = useState('')\n  const [keyword, setKeyword] = useState('')\n  const [copied, setCopied] = useState(false)\n  const timeoutRef = useRef<NodeJS.Timeout>()\n  const { setModal } = useModalsContext()\n  const memberList = useMessengerMemberList(id)\n  const externalMemberList = useExternalMembershipList(keyword)\n  const data = useMemo(()=>{\n    const memberSet = new Set(memberList?.map(v=>v.user))\n    return externalMemberList?.filter(v=>!memberSet.has(v.id)) || []\n  }, [externalMemberList, memberList])\n  const messengerMemberMutation = useMessengerMemberMutation()\n  useEffect(()=>{\n    timeoutRef.current = setTimeout(()=>{\n      setKeyword(value)\n    }, DELAY)\n    return ()=>{timeoutRef.current && clearTimeout(timeoutRef.current)}\n  }, [value])\n  const back = ()=>{\n    setModal(InviteModal, null)\n  }\n  const inviteLink = location.href.replace('chat', 'invitee')\n  return <View style={{alignItems:'center', flex:1}}>\n  <TouchableOpacity style={{paddingVertical:10, flexDirection:\"row\"}} onPress={()=>{Clipboard.setString(inviteLink);setCopied(true)}}>\n    <Text style={{fontSize:14}}>{lang('invite link')}{\": \"}</Text>\n    <Text style={{fontSize:14, color:'#12b886'}}>{inviteLink}{\" \"}</Text>\n    {copied && <Text style={{fontSize:12, color:'red'}}>{lang(\"copied\")}</Text>}\n  </TouchableOpacity>\n  <View style={{'width': '100%', flex:1}}>\n    <TextField name={lang('Username')} value={value} setValue={setValue} width={'80%'}/>\n    {id && data && <FlatList contentContainerStyle={{flexGrow:1}} data={data} renderItem={({item})=><InviteItem item={item} selectedRef={selectedRef}/>}/>}\n  </View>\n  <View style={[{width:'100%', flexDirection:'row', padding:10,}, {justifyContent:'flex-end'}]}>\n    <CommonButton title={lang('invite')} onPress={()=>{\n      messengerMemberMutation.invite({\n        channel_id:id,\n        user_ids:[...selectedRef.current]\n      }).then(back)\n    }}/>\n    <CommonButton title={lang('cancel')} onPress={back}/>\n  </View>\n</View>\n}\n\nexport default function InviteModal({id}:{id:number}) {\n  const { lang } = useLangContext()\n  const selectedRef = useRef<Set<number>>(new Set())\n  const drawerTabs:TabViewRecord = {\n    group:{\n      title: 'Group',\n      component: ()=><GroupTabView id={id} selectedRef={selectedRef}/>,\n      icon: <></>\n    },\n    external:{\n      title: 'External members',\n      component: ()=><ExternalMembershipTabView id={id} selectedRef={selectedRef}/>,\n      icon: <></>\n    }\n  }\n  return <ModalSection>\n    <View style={{flex:1, width:'100%'}}>\n      <View style={{width:'100%'}}>\n        <Text style={{fontSize:20}}>{lang('invite')}</Text>\n        <View style={{marginBottom: 20, height: 1, width: '100%'}} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />\n      </View>\n      <TabView tabs={drawerTabs} tabBarPosition={\"top\"}/>\n    </View>\n  </ModalSection>\n}\n\n","import { useQuery } from \"react-query\";\nimport { getExternalMembershipList } from \"../../apis\";\n\nexport default function useExternalMembershipList(keyword?:string){\n  const { data } = useQuery([\"UserMembershipList\", keyword] , async()=>keyword?(await getExternalMembershipList(keyword)):[])\n  return data\n}","import axios, { AxiosRequestConfig } from 'axios';\n// @ts-ignore\nimport {API_URL} from \"@env\"\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nexport const accountURL =  `${API_URL}/account/`\nconst baseURL =  `${API_URL}/messenger/`\nconst defaultOption:AxiosRequestConfig = {\n    baseURL,\n    withCredentials: true,\n    headers: {}\n};\nconst _axios = axios.create(defaultOption);\n\n_axios.interceptors.request.use(\n    config => {\n        return config;\n    },\n    error => {\n        return Promise.reject(error);\n    }\n)\n\n_axios.interceptors.response.use(\n    response => {\n        // if((response.request.responseURL as string).indexOf('/task/login')>=0 && response.data.length != 0){\n        //     // redirect login\n        // }\n        return response;\n    },\n    error => {\n        if (error.response.status === 401) {\n            return getToken().then(async(token)=>{\n                if (token){\n                    const r = await _axios.post(\"/api/v1/user/sso/refresh/\", {token}, {headers:{'Authorization':''}, baseURL: accountURL})\n                    if (r.status == 200 && r.data !== ''){\n                        setToken(r.data)\n                    }\n                }\n            }).finally(()=>{\n                return Promise.reject(error)\n            })\n        }\n        return Promise.reject(error)\n    }\n)\n\nexport const setToken = async (token:string|null)=>{\n    _axios.defaults.headers['Authorization'] = `JWT ${token}`\n    if (token)\n        await AsyncStorage.setItem(\"Authorization\", token)\n    else\n        AsyncStorage.removeItem(\"Authorization\")\n}\nexport const getToken = async ()=>{\n    const token = await AsyncStorage.getItem(\"Authorization\")\n    _axios.defaults.headers['Authorization'] = token?`JWT ${token}`:null\n    return token\n}\n\nexport default _axios\n","const tintColorLight = '#2f95dc';\nconst tintColorDark = '#fff';\n\nexport default {\n  light: {\n    text: '#000',\n    background: '#fff',\n    tint: tintColorLight,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorLight,\n    header:'#24292f',\n    buttonColor:'rgb(242,242,242)',\n    buttonBackgroundColor: '#f6f8fa', //'rgba(9,30,66,0.08)',//rgb(242,242,242)\n  },\n  dark: {\n    text: '#fff',\n    background: '#000',\n    tint: tintColorDark,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorDark,\n    header:'#dbd6d1',\n    buttonColor:'rgb(14,14,14)',\n    buttonBackgroundColor: '#282624',\n  },\n  button:{\n    borderColor:'rgba(27,31,36,0.15)',\n  },\n  borderColor:'#d0d7de',\n  \n  focus:'#0065A4',\n};\n","/**\n * Learn more about deep linking with React Navigation\n * https://reactnavigation.org/docs/deep-linking\n * https://reactnavigation.org/docs/configuring-links\n */\n\nimport { LinkingOptions } from '@react-navigation/native';\nimport * as Linking from 'expo-linking';\nimport {main, login, modal} from '../screens';\n\nconst ROOTPATH = 'tokki-tok'  // github repository name\n\nObject.values(modal).forEach(v=>v.path = ROOTPATH + '/' + v.path)\n\nexport default  {\n  prefixes: [Linking.makeUrl('/')],\n  config: {\n    screens: {\n      Main: {\n        screens:{\n          ...main,\n          ...login,\n          NotFound: '*',\n        },\n        path: ROOTPATH\n      },\n      ...modal\n    },\n  },\n} as LinkingOptions;\n","import React, { createContext, useContext, useEffect, useReducer, useMemo, Dispatch, useState } from \"react\"\nimport { checkLogin, login, logout } from \"../apis\"\nimport { getNotification, putNotification } from \"../apis/notification\"\nimport { UserMembership } from \"../types\"\n\ntype AuthAction = {type:string, username?:string, password?:string, user?:UserMembership|null}\n\nexport type Auth = {user?:UserMembership|null, groupId?:number}\n\ntype AuthState ={user?:UserMembership|null, request?:{username:string, password:string}|null}\n\nconst AuthContext = createContext<{auth:Auth, error?:string, dispatch:Dispatch<AuthAction>}>({auth:{}, dispatch:()=>{}});\n\nconst authReducer =(initialState:AuthState, action:AuthAction)=>{\n  switch (action.type){\n      case 'LOGIN_REQUEST':\n        return {\n          ...initialState,\n          request:{username:action.username, password:action.password},\n        } as AuthState\n      case 'LOGIN_GUEST':\n        return {\n          ...initialState,\n          request:{username:'guest', password:'guest'},\n        } as AuthState\n      case 'LOGIN_SUCCESS':\n          return{\n              ...initialState,\n              user:action.user,\n              request:undefined\n          }\n      case 'LOGIN_FAILED':\n          return{\n              ...initialState,\n              request:undefined\n          }\n      case 'LOGOUT_REQUEST':\n          return{\n              ...initialState,\n              request:null\n          }\n      case 'LOGOUT_SUCCESS':\n          return {\n            ...initialState,\n            user:null,\n            request:undefined\n          }\n      case 'REFRESH':\n        return {\n          ...initialState,\n          user:undefined\n        }\n      default:\n          throw new Error( `Unhandled action type: ${action.type}`)\n  }\n}\n\n\nexport const AuthProvider = ({children}:{children:React.ReactNode})=>{\n  const [authState, dispatch] = useReducer(authReducer, {} as Auth)\n  const [error, setError] = useState<string>()\n  const auth = useMemo(()=>({\n    user:authState.user,\n    groupId: authState.user?.membership_set.find(g=>g.root_group_id==null)?.group\n  }), [authState])\n  useEffect(()=>{\n    if(authState.user===undefined){\n      checkLogin().then((user)=>{\n        dispatch({type:\"LOGIN_SUCCESS\", user})\n      }).catch((e)=>{\n        console.log(e)\n        dispatch({type:\"LOGOUT_SUCCESS\"})\n      })\n    }\n    else if(authState.user===null && authState.request){\n      login(authState.request.username, authState.request.password).then(user=>{\n        dispatch({type:\"LOGIN_SUCCESS\", user})\n      }).catch((data)=>{\n        dispatch({type:\"LOGIN_FAILED\"})\n        setError(data.response?.data?.message)\n      })\n    }\n    else if(authState.user && authState.request===null){\n      getNotification(authState.user.id).then(noti=>{\n        noti && putNotification({...noti, token:''}).then(()=>{\n          logout().then(()=>dispatch({type:\"LOGOUT_SUCCESS\"}))\n        })\n      })\n    }\n  }, [authState])\n  return <AuthContext.Provider value={{auth, error, dispatch}}>\n    {children}\n  </AuthContext.Provider>\n}\n\nexport default ()=>{\n  const authContext = useContext(AuthContext)\n  return authContext\n}\n","import { StackScreenProps } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport useLangContext from '../hooks/useLangContext';\n\nexport default function NotFoundScreen({\n  navigation,\n}: StackScreenProps<any, 'NotFound'>) {\n  const { lang } = useLangContext()\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>{lang(\"This screen doesn't exist.\")}</Text>\n      <TouchableOpacity onPress={() => navigation.replace('HomeScreen')} style={styles.link}>\n        <Text style={styles.linkText}>{lang(\"Go to home screen!\")}</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  link: {\n    marginTop: 15,\n    paddingVertical: 15,\n  },\n  linkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n});\n","import { useTheme } from '@react-navigation/native';\nimport React, { useState } from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport Profile from '../components/Profile';\nimport TextButton from '../components/TextButton';\nimport Colors from '../constants/Colors';\nimport useResizeContext from '../hooks/useResizeContext';\nimport TabView from '../components/TabView';\nimport { TabViewRecord, UserMembership } from '../types';\nimport useModalsContext from '../hooks/useModalsContext';\nimport ChannelEditModal from '../modals/ChannelEditModal';\nimport CommonItem from '../components/CommonItem';\nimport { Text } from '../components/Themed';\nimport useAuthContext from '../hooks/useAuthContext';\nimport { useMessengerChannelSorted } from '../hooks/lists/useMessengerChannelList';\nimport { navigate } from '.'\n\nconst DrawerTabView = (props:{data:{name:string, onPress?:()=>void}[]})=><View style={{flex:1}}>\n    {props.data.map((item, index)=><CommonItem key={index} containerStyle={{marginHorizontal:0}} bodyStyle={{alignItems:'flex-start'}} onPress={item.onPress}>\n        <Text style={{marginLeft:20}}>{item.name}</Text>\n    </CommonItem>\n    )}\n</View>\n\nconst MessengerTabView = ()=>{\n  const {auth} = useAuthContext()\n  const channelList = useMessengerChannelSorted(auth);\n  return <DrawerTabView data={(channelList || []).map(item=>({...item, onPress:()=>navigate(\"ChatScreen\", {id:item.id})}))}/>\n}\n\nconst drawerTabs:TabViewRecord = {\n  MessengerTab:{\n      title:'messenger',\n      component:MessengerTabView,\n      icon:<></>\n  },\n}\n\nexport default ({user}:{user:UserMembership})=> {\n  const { colors } = useTheme();\n  const windowType = useResizeContext();\n  const [index, setIndex] = useState(0);\n  const { setModal } = useModalsContext()\n  const onAddList = [\n    ()=>setModal(ChannelEditModal, {type:'messenger'}),\n    ()=>setModal(ChannelEditModal, {type:'board'})\n  ]\n  return <View style={windowType=='landscape'?[\n      styles.tabBar,\n      {\n        backgroundColor: colors.card,\n        borderTopColor: colors.border,\n      },\n      // tabBarStyle,\n    ]:{width:0}}\n    pointerEvents={false ? 'none' : 'auto'}\n  >\n    <Profile userId={user.id} username={user.username} name={user.name}/>\n    {windowType=='landscape' && <>\n      <View style={{flexDirection:'row-reverse'}}>\n          <TextButton title='+' textStyle={{fontSize:20}} style={{borderRadius:20}} onPress={onAddList[index]}/>\n      </View>\n      <View accessibilityRole=\"tablist\" style={styles.content}>\n        {Object.keys(drawerTabs).length>1 ? \n          <TabView tabs={drawerTabs} tabBarPosition={\"top\"} onTab={setIndex}/>: \n          <View style={{borderTopWidth:1, flex:1, borderColor:colors.border}}>            \n            {Object.values(drawerTabs).map(drawerTab=>{const Tab = drawerTab.component; return <Tab key={drawerTab.title}/>})}\n          </View>\n        }\n      </View>\n    </>}\n  </View>\n}\n\n{/*<Text style={[styles.label, { color: d.isFocused ? colors.primary : '#222' }]}></Text> */}\n\nconst styles = StyleSheet.create({\n    tabBar: {\n      width:240,\n      elevation: 8,\n      borderRightWidth:1,\n      borderColor:Colors.borderColor\n    },\n    content: {\n      flex: 1,\n      flexDirection: 'row',\n    },\n    tab: {\n        flex: 1,\n        alignItems: 'center',\n    },\n    label: {\n        textAlign: 'center',\n        backgroundColor: 'transparent',\n      },\n  });","import React, { createContext, useContext, useEffect } from \"react\"\nimport firebase from \"firebase/app\";\nimport \"firebase/messaging\";\n//@ts-ignore\nimport {FCM_PUBLIC_VAPID_KEY, FCM_API_KEY} from \"@env\"\nimport { Notification as NotificationType, UserMembership } from \"../types\";\nimport { getNotification, postNotification, putNotification } from \"../apis/notification\";\nimport { Auth } from \"./useAuthContext\";\nconst firebaseConfig = require(\"../../web/firebase-config.js\")\n// Initialize Firebase\nconst key = firebaseConfig.messagingSenderId\nconst apiKeyEncrypted = (FCM_API_KEY as string).split('').map((v, i)=> (v.charCodeAt(0) ^ key.charCodeAt(i)).toString(16).padStart(2, '0')).join('')\nconst app = firebase.initializeApp({...firebaseConfig, apiKey:FCM_API_KEY});\n// const analytics = getAnalytics(app);\nconst messaging = firebase.messaging(app);\n\nmessaging.onMessage((payload) => {\n  if (!(\"Notification\" in window)) {\n    alert(\"This browser does not support desktop notification\");\n  }\n  else if (Notification.permission === \"granted\") {\n    const message_set = JSON.parse(payload.data['message_set'])[0]\n    new Notification(payload.data.channel_name, { body: `${payload.data.name}: ${message_set.content}` });\n  }\n});\n\nconst requestToken = async()=>{\n  const permission = await Notification.requestPermission();\n  if (permission === 'granted') {\n    const serviceWorkerRegistration = await navigator.serviceWorker.register(`${process.env.PUBLIC_URL}/firebase-messaging-sw.js?${apiKeyEncrypted}`)\n    console.log('[SW]: SCOPE: ', serviceWorkerRegistration.scope);\n    const currentToken = await messaging.getToken({serviceWorkerRegistration, vapidKey: FCM_PUBLIC_VAPID_KEY })\n    window.addEventListener('beforeunload', (event:any) => {\n      event.preventDefault();\n      serviceWorkerRegistration.unregister()\n    });\n    if (currentToken)\n      return currentToken\n  }\n  return undefined\n}\n\n\nlet noti:NotificationType|undefined\n\nconst setEnable = async(enable:boolean, user?:UserMembership|null)=>{\n  context.enable = enable\n  if(user && enable){\n    const token = await requestToken() || null\n    noti = await getNotification(user.id)\n    if (noti == undefined)\n      noti = await postNotification({user:user.id, type:'WEB', token})\n    else\n      noti = await putNotification({...noti, token})\n  }\n  else if (noti){\n    await putNotification({...noti, token:null})\n  }\n}\n\nconst context:{enable:boolean, setEnable:(enable:boolean, user?:UserMembership|null)=>void} = {enable:false, setEnable}\nconst FirebaseContext = createContext(context);\n\nexport default (auth:Auth)=>{\n  useEffect(()=>{\n    setEnable(true, auth.user)\n  }, [auth.user])\n  const firebaseContext = useContext(FirebaseContext)\n  return firebaseContext\n}\n","import InviteModal from \"./InviteModal\";\nimport ProfileModal from \"./ProfileModal\";\nimport ChannelEditModal from \"./ChannelEditModal\"\nimport GuestLogoutModal from \"./GuestLogoutModal\";\n\nexport default [\n    InviteModal,\n    ProfileModal,\n    ChannelEditModal,\n    GuestLogoutModal\n]","import { CardStyleInterpolators, createStackNavigator } from '@react-navigation/stack';\nimport React, {useMemo} from 'react';\nimport { View } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport useResizeContext from '../hooks/useResizeContext';\nimport NotFoundScreen from '../screens/NotFoundScreen';\nimport {main, login, modal} from '../screens';\nimport DrawerNavigator from './DrawerNavigator';\nimport useAuthContext from '../hooks/useAuthContext';\nimport { WebSocketProvider } from '../hooks/useWebsocketContext';\nimport HeaderRight from '../components/HeaderRight'\nimport Colors from '../constants/Colors';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport useFirebaseContext from '../hooks/useFirebaseContext';\nimport useIsMobile from '../hooks/useIsMobile';\nimport useColorScheme from '../hooks/useColorScheme';\nimport { ModalsProvider } from '../hooks/useModalsContext';\nimport modals from '../modals';\nimport useLangContext from '../hooks/useLangContext';\n\nconst Root = createStackNavigator();\n\nexport default function RootNavigator() {\n    const windowType = useResizeContext();\n    return <Root.Navigator\n        mode= 'modal'\n        headerMode= 'screen'\n        screenOptions={{\n            cardStyle:{backgroundColor:\"white\"},\n            animationEnabled: true,\n            cardStyleInterpolator: CardStyleInterpolators.forVerticalIOS,\n        }}\n    >\n        <Root.Screen name=\"Main\" component={MainNavigator} options={{headerShown:false}}/>\n        {Object.entries(modal).map(([key, screen])=><Root.Screen key={key} name={key} component={screen.component} options={{\n            title: screen.title,\n            gestureDirection: windowType == 'landscape'?'vertical-inverted':'vertical'\n        }} />)}\n    </Root.Navigator>\n}\n\nconst Main = createStackNavigator();\n\nfunction headerLeft(navigation:any, route:any, windowType:string, isMobile:boolean){\n    const canGOBackScreen = ['HomeScreen', 'LoginScreen'].findIndex(v=>v == route.name) == -1\n    const goBack = ()=>{\n        if (navigation.canGoBack())\n            navigation.goBack()\n        else if (canGOBackScreen)\n            navigation.replace('HomeScreen')\n    }\n    if (windowType=='portrait' && canGOBackScreen)\n        return <TouchableOpacity onPress={goBack}><Ionicons size={isMobile?20:24} style={{marginHorizontal:isMobile?16:20 }} name=\"arrow-back\"/></TouchableOpacity>\n    return null\n}\n\nconst MainNavigator = ()=>{\n    const windowType = useResizeContext();\n    const isMobile = useIsMobile()\n    const {auth} = useAuthContext()\n    const theme = useColorScheme()\n    const {lang, locale} = useLangContext()\n    const entries = useMemo(()=>{\n        if (auth.user === undefined)\n            return []\n        console.log('current user: ', auth.user)\n        return Object.entries(auth.user === null?login:main)\n    }, [auth, locale])\n    const modalValues = useMemo(()=>{\n        if (auth.user === undefined)\n            return []\n        return auth.user === null?[]:modals\n    }, [auth])\n\n    useFirebaseContext(auth)\n    return (auth.user!==undefined?<View style={{flexDirection:'row', flex:1}}>\n        <ModalsProvider modals={modalValues}>\n            {auth.user?<DrawerNavigator user={auth.user}/>:undefined}\n            <View style={{flex:1}}>\n                <WebSocketProvider disable={auth.user === null || auth.user === undefined}>\n                        <Main.Navigator\n                            screenOptions={({navigation, route})=>({\n                                headerStyle:{backgroundColor:Colors[theme].header, height:isMobile?50:undefined},\n                                headerTitleStyle:{color:'white'},\n                                headerLeft:()=>headerLeft(navigation, route, windowType, isMobile),\n                                headerRight:()=><HeaderRight/>,\n                                headerLeftContainerStyle:{backgroundColor:'white', borderBottomWidth:1, borderColor:Colors.borderColor},\n                                cardStyle:{flexShrink:1},\n                                animationEnabled:windowType=='portrait',\n                                cardStyleInterpolator: CardStyleInterpolators.forHorizontalIOS\n                            })}\n                        >\n                            {entries.map(([key, screen])=><Main.Screen key={key} name={key} component={screen.component} options={{ title: lang(screen.title) }} />)}\n                            <Main.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n                        </Main.Navigator>\n                </WebSocketProvider>\n            </View>\n        </ModalsProvider>\n    </View>:<></>);\n}","import React, { useEffect, useState } from 'react'\nimport { Dimensions, Platform, View } from 'react-native'\nimport useIsMobile from '../hooks/useIsMobile'\n\n\nexport default (props:{children:React.ReactNode})=>{\n    const isMobile = useIsMobile()\n    const [height, setHeight] = useState(window.innerHeight + 1)\n    useEffect(()=>{\n        if(isMobile && Platform.OS == 'web'){\n            const onChange = (e:any)=>{\n                setHeight(window.innerHeight + 1)\n            }\n            Dimensions.addEventListener(\"change\",onChange)\n            return () => Dimensions.removeEventListener(\"change\", onChange)\n            \n        }\n    },[ isMobile])\n    return <View style={{height:isMobile&&Platform.OS == 'web'?height:'100%'}}>\n        {props.children}\n    </View>\n\n}\n  ","import React from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport Navigation from './src/navigation';\nimport useCachedResources from './src/hooks/useCachedResources';\nimport { useInitColorScheme } from './src/hooks/useColorScheme';\nimport MobileSafeAreaView from './src/components/MobileSafeAreaView';\nimport { AuthProvider } from './src/hooks/useAuthContext';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { IntlProvider } from './src/hooks/useLangContext';\n\nconst queryClient = new QueryClient();\n\nexport default function App() {\n  const isLoadingComplete = useCachedResources();\n  const isAppearenceComplete = useInitColorScheme()\n  if (!isLoadingComplete || !isAppearenceComplete) {\n    return null;\n  } else {\n    return (\n      <SafeAreaProvider>\n        <MobileSafeAreaView>\n          <AuthProvider>\n            <QueryClientProvider client={queryClient}>\n              <IntlProvider>\n                {/* devtools */}\n                {/* <ReactQueryDevtools initialIsOpen={true} /> */}\n                <Navigation/>\n                <StatusBar />\n              </IntlProvider>\n            </QueryClientProvider>\n          </AuthProvider>\n        </MobileSafeAreaView>\n      </SafeAreaProvider>\n    );\n  }\n}\n","import { Ionicons } from '@expo/vector-icons';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as React from 'react';\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...Ionicons.font,\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete;\n}\n","import { createIntl, createIntlCache } from \"@formatjs/intl\";\nimport {I18nManager} from \"react-native\";\nimport * as RNLocalize from \"react-native-localize\";\n\nexport const translations = {\n  ko: require(\"./ko.json\"),\n} as const;\n\ntype Translation = keyof typeof translations;\n\n// fallback if no available language fits\nconst fallback = { languageTag: \"en\", isRTL: false };\n\nconst { languageTag, isRTL } =\n  RNLocalize.findBestLanguageTag(Object.keys(translations)) ?? fallback;\n\n// update layout direction\nI18nManager.forceRTL(isRTL);\n\n// console.log(languageTag)\nconst intl = createIntl(\n  {\n    defaultLocale: \"en\",\n    locale: languageTag,\n    messages: translations[languageTag as Translation],\n  },\n  createIntlCache(),\n);\n\nexport default intl","import React, { createContext, useContext, useState, useEffect } from \"react\";\nimport { IntlShape } from \"@formatjs/intl\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport intl, { translations } from \"../lang\";\n\nconst IntlContext = createContext<{locale?:string, setLocale:(locale:string|undefined)=>void}>({setLocale:()=>{}});\n\nexport const IntlProvider = ({children}:{children:React.ReactNode})=>{\n  const [complete, setComplete] = useState(false)\n  const [locale, setLocale] = useState<string>()\n  useEffect(()=>{\n    AsyncStorage.getItem(\"locale\").then(v=>{\n      setLocale(v || undefined)\n      setComplete(true)\n    })\n  }, [])\n  return complete?<IntlContext.Provider value={{locale, setLocale}}>\n      {children}\n    </IntlContext.Provider>:<></>\n}\n\n\n\ntype TranslationParams = Parameters<IntlShape<string>[\"formatMessage\"]>[1];\n\nexport default ()=>{\n  const { locale, setLocale } = useContext(IntlContext)\n  return {\n    lang:(key: string, params?: TranslationParams) => {\n      if (locale == 'en' || key.length==0)\n        return key\n      if (locale != undefined && locale !='auto')\n        return translations[locale as 'ko'][key]\n      return intl\n        .formatMessage({ id: key, defaultMessage: key }, params)\n        .toString()\n    },\n    locale,\n    setLocale: (locale:string)=>{AsyncStorage.setItem('locale', locale).then(()=>setLocale(locale))}\n  }\n}\n","import React, { useState } from 'react';\nimport { Text, StyleSheet, Pressable, StyleProp, ViewStyle} from 'react-native';\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport { CustomButtonProps } from '../types';\n\nconst DefaultButton = (props:CustomButtonProps)=>{\n    const [hover, setHover] = useState(false)\n    return <Pressable\n        onPress={()=>props.onPress()}\n        //@ts-ignore\n        onHoverIn={()=>setHover(true)}\n        onHoverOut={()=>setHover(false)}\n        style={[\n            {\n                paddingVertical:5, \n                paddingHorizontal:16\n            },\n            props.style,\n            hover?{backgroundColor:props.color}:{}\n        ]}>\n            <Text selectable={false} style={[{fontSize:14}, props.textStyle]}>{props.title}</Text>\n        </Pressable>\n}\n\nexport default (props:CustomButtonProps)=>{\n    const theme = useColorScheme()\n    const _props = {\n        color:Colors[theme].buttonColor,\n        ...props,\n        style:[\n            styles.style,\n            {\n                backgroundColor:Colors[theme].buttonBackgroundColor\n            },\n            props.style,\n        ] as StyleProp<ViewStyle>,\n        textStyle:[\n            styles.text, \n            {color:Colors[theme].text},\n            props.textStyle\n        ]\n    }\n    return <DefaultButton {..._props}/>\n}\n\nconst styles = StyleSheet.create({\n    style:{\n        borderRadius:6, \n        borderColor:Colors.button.borderColor, \n        borderWidth:1, \n    },\n    text:{\n        textAlign:'center', \n        fontWeight:'600'\n    }\n});\n","firebaseConfig = {\n    \"authDomain\": \"virtual-metrics-355712.firebaseapp.com\",\n    \"projectId\": \"virtual-metrics-355712\",\n    \"storageBucket\": \"virtual-metrics-355712.appspot.com\",\n    \"messagingSenderId\": \"76003576924\",\n    \"appId\": \"1:76003576924:web:c8c8a006d07918bbc02a99\",\n    \"measurementId\": \"G-SEL35L4N5R\"\n}\nif (typeof module !== 'undefined') {\n    module.exports = firebaseConfig\n}\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","\nimport { User, UserMembership } from '../types';\nimport axios, { getToken, setToken, accountURL as baseURL } from './axios';\n\nexport const login = async(username:string, password:string) => {\n    if(username.endsWith('.guest') && password.length == 0)\n        password = 'guest'\n    const r = await axios.post(\"/api-token-auth/\", {username, password});\n    if(r.status == 200){\n        await setToken(r.data)\n        return await checkLogin()\n    }\n}\n\nexport const logout = async() => {\n    await setToken(null)\n    return await axios.get(\"/api-auth/logout/\")\n}\n\nexport const guestLogin =  async() => {\n    return await login('guest', 'guest')\n}\n\nconst checkLoginToken = async ()=>{\n    const value = (await axios.get(\"/api/v1/users/memberships/?_self=true\"))?.data\n    if (value && value.length){\n        return value[0] as UserMembership\n    }\n    return null\n}\n\nexport const checkLogin = async() => {\n    const token = await getToken()\n    if (token === null)\n        return null\n    try{\n       return await checkLoginToken()\n    }\n    catch(e:any){\n        let error = e\n        if(e.response !== undefined && e.response.status==401){\n            try{\n                return await checkLoginToken()\n            }\n            catch(e2){\n                error = e2\n            }\n        }\n        const isOffline = ((error as any).code == \"ERR_NETWORK\" || (error as any).message && ((error as any).message as string).startsWith(\"Cannot read\"))\n        throw {error, isOffline}\n    }\n}\n\nexport const getUserList = async (group_id:number)=>{\n    return (await axios.get(`/api/v1/users/?group_id=${group_id}`) ).data as User[]\n}\n\nexport const patchUser = async (user:{id:number, name:string})=>{\n    await axios.patch(`/api/v1/user/`, {ids:[user.id], updated: {name:user.name}}, {baseURL})\n}\n\nexport const getUserMembershipList = async (group_id:number)=>{\n    return (await axios.get(`/api/v1/users/memberships/?group_id=${group_id}`) ).data as UserMembership[]\n}\n\nexport const getExternalMembershipList = async (username:string)=>{\n    return (await axios.get(`/api/v1/users/memberships/?username=${username}`) ).data as UserMembership[]\n}","import { Channel, MessengerMember, MessengerContent, EditMessage, MessengerChannel, DirectChannel } from '../types';\nimport axios from './axios';\n\nexport const getMessengerChannelList = async (user_id:number)=>{\n    return (await axios.get(`/api/v1/channels/messenger/?type=messenger&messenger_user_id=${user_id}`) ).data as MessengerChannel[]\n}\n\nexport const postChannel = async(channel:Channel)=>{\n    return (await axios.post(`/api/v1/channels/`, channel)).data as Channel\n}\n\nexport const postDirectChannel = async(channel:DirectChannel)=>{\n    return (await axios.post(`/api/v1/channels/direct/`, channel)).data as Channel\n}\n\nexport const putChannel = async(channel:Channel)=>{\n    return (await axios.put(`/api/v1/channels/${channel.id}/`, channel)).data as Channel\n}\n\nexport const deleteChannel = async(channel_id:number)=>{\n    await axios.delete(`/api/v1/channels/${channel_id}/`)\n}\n\nexport const getMessengerMemberList = async(channel_id:number)=>{\n    return (await axios.get(`/api/v1/messengermembers/?channel=${channel_id}`) ).data as MessengerMember[]\n}\n\nexport const postBulkMessengerMember = async(data:{channel_id:number, user_ids:number[]})=>{\n    await axios.post(`/api/v1/messengermembers/bulk/`, {channel:data.channel_id, user_ids:data.user_ids})\n}\n\nexport const deleteMessengerMember = async(member_id:number)=>{\n    await axios.delete(`/api/v1/messengermembers/${member_id}/`)\n}\n\nexport const getMessengerContentList = async (channel_id:number, id_lt?:number)=>{\n    const id_lt_param = id_lt?`&id_lt=${id_lt}`:''\n    return (await axios.get(`/api/v1/messengercontents/?limit=30&channel=${channel_id}${id_lt_param}`)).data.results as MessengerContent[]\n}\n\nexport const postMessage = async (message:EditMessage)=>{\n    if (message.file){\n        const formData = new FormData(); // formData 객체를 생성한다.\n        formData.append(\"file\", message.file)\n        Object.entries(message).forEach(value=>{\n            formData.append(value[0], `${value[1]}`)\n        })\n        await axios.post(`/api/v1/messengercontents/messages/`, formData, {headers:{\n            ...(axios.defaults.headers as any), \"Content-Type\": \"multipart/form-data\",\n        }})\n    }\n    else{\n        await axios.post(`/api/v1/messengercontents/messages/`, message)\n    }\n}\n\nexport const deleteMessengerContent = async (content_id:number)=>{\n    await axios.delete(`/api/v1/messengercontents/${content_id}/`)\n}","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useTheme } from '@react-navigation/native';\nimport { useMemo, useEffect, useState } from 'react';\nimport { ColorSchemeName } from 'react-native';\nimport { Appearance, ColorSchemeName as UserColorSchemeName } from 'react-native-appearance';\n\n// The useColorScheme value is always either light or dark, but the built-in\n// type suggests that it can be null. This will not happen in practice, so this\n// makes it a bit easier to work with.\n\nexport function useInitColorScheme(){\n  const [complete, setComplete] = useState(false)\n  useEffect(()=>{\n    if (!complete){\n      AsyncStorage.getItem(\"color\").then(v=>{\n        Appearance.set({colorScheme:(v==null)?'no-preference':(v as any)})\n        setComplete(true)\n      })\n    }\n  }, [complete])\n  return complete\n}\n\nexport function setColorScheme(colorScheme:UserColorSchemeName){\n  AsyncStorage.setItem('color',colorScheme as string).then(()=>Appearance.set({colorScheme}))\n}\n\nexport default function useColorScheme(): NonNullable<ColorSchemeName> {\n  const { dark } = useTheme()\n  const colorScheme = useMemo(()=> dark?'dark':'light', [dark]) as NonNullable<ColorSchemeName>;\n  return colorScheme\n}\n","import React, { useState, useEffect, createContext, useContext, useMemo } from 'react';\nimport { Dimensions, ScaledSize, useWindowDimensions } from 'react-native';\n//@ts-ignore\nimport useMobileDetect from 'use-mobile-detect-hook';\n\ntype WindowType = 'portrait' | 'landscape'\n\nconst getWindowType = (window:{width:number, height:number})=> window.height >= window.width?'portrait':'landscape' as WindowType;\n\nconst ResizeContextContext = createContext<WindowType>(getWindowType(Dimensions.get('window')));\n\nexport const ResizeContextProvider = ({children}:{children:React.ReactNode})=>{\n  const detectMobile = useMobileDetect();\n  const {width, height} = useWindowDimensions()\n  const [windowType, setWindowType] = useState(getWindowType({width, height}))\n  useEffect(()=>{\n    setWindowType(getWindowType({width, height}))\n  }, [width, height])\n  return <ResizeContextContext.Provider value={detectMobile.isMobile()?'portrait':windowType}>\n    {children}\n  </ResizeContextContext.Provider>\n}\n\nexport default function useResizeContext() {\n  const windowType = useContext(ResizeContextContext)\n  return windowType\n}","import React, { useState, createContext, useContext, useEffect } from \"react\";\nimport { Modal } from \"react-native\";\nimport useResizeContext from \"./useResizeContext\";\n\ntype ModalProps = any\n\ntype ModalState = {\n  Component:React.ComponentType<ModalProps>,\n  props:any\n  visible:boolean\n}\ntype SetModal = (Component:ModalState[\"Component\"]|null, props:ModalProps|null)=>void\n\nconst ModalsContext = createContext<{setModal: SetModal}>({\n    setModal: () => {}\n});\n\nexport const ModalsProvider = ({children, modals:allModals}:{children:React.ReactNode, modals:React.ComponentType<ModalProps>[]}) => {\n    const [modals, setModals] = useState<ModalState[]>([]);\n    const windowType = useResizeContext();\n    const [animationType, setAnimationType] = useState('none')\n    const setModal:SetModal = (Component, props) => {\n        const newModals = modals.map(m=>{\n            if(Component==null){\n                return {\n                    ...m,\n                    visible:false\n                }\n            }\n            else if(m.Component == Component){\n                return {\n                    Component, \n                    props:props!==null?props:m.props,\n                    visible:props!==null\n                }\n            }\n            return m        \n        })\n        setModals(newModals);\n    }\n    useEffect(()=>{\n        if (modals.filter(v=>v.visible).length == 0)\n            setAnimationType(windowType == 'landscape'?'fade':'slide')\n    }, [windowType])\n    useEffect(()=>{\n        setModals(allModals.map((Component)=>({Component, props:null, visible:false})))\n    }, [allModals])\n    return <ModalsContext.Provider value={{setModal}}>\n        {children}\n        {modals.map((modal, index)=>{\n            const { Component, props, visible } = modal;\n            return <Modal key={index} animationType={animationType as any} visible={visible} transparent>\n                <Component {...props}/>\n            </Modal>\n        })}\n    </ModalsContext.Provider>\n}\n\nexport default ()=>{\n    const modalsContext = useContext(ModalsContext)\n    return modalsContext\n}\n\n","import { useEffect } from \"react\";\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport { getMessengerChannelList, postChannel, postDirectChannel, putChannel } from \"../../apis\";\nimport { MessengerChannel, MessengerContent } from \"../../types\";\nimport { Auth } from \"../useAuthContext\";\nimport useWebsocketContext from \"../useWebsocketContext\";\n\nexport default function useMessengerChannelList(auth?:Auth){\n  const queryClient = useQueryClient()\n  const {lastJsonMessage} = useWebsocketContext()\n  const { data } = useQuery(\"MessengerChannelList\" , async()=>auth?.user?.id?(await getMessengerChannelList(auth.user.id)):[])\n\n  useEffect(()=>{\n    if(lastJsonMessage !=null){\n      if(lastJsonMessage['type']=='enter'){\n        queryClient.setQueryData<MessengerChannel[]>(\"MessengerChannelList\", (_data)=>{\n          return (_data?.find(v=>v.id==lastJsonMessage['data']['id'])?_data:[lastJsonMessage['data'] , ...(_data|| [])]).sort((a, b)=>a.id - b.id)\n        })\n      }\n      if (lastJsonMessage['type']=='next_message'){\n        const data:MessengerContent = lastJsonMessage['data']\n        queryClient.setQueryData<MessengerChannel[]>(\"MessengerChannelList\", (_data)=>(_data || []).map(v=>{\n          if (v.id == data.channel){\n            return {...v, last_message:{content:data.message_set[0]?.content, created:data.created}}\n          }\n          return v\n        }))\n      }\n      // if(lastJsonMessage['type']=='leave'){\n      //   queryClient.setQueryData<Channel[]>(\"MessengerChannelList\", (_data)=>_data?.filter(v=>v.id!=lastJsonMessage['data']['channel_id']) || [])\n      // }\n    }\n  }, [lastJsonMessage])\n  return data\n}\n\nexport function useMessengerChannelSorted(auth?:Auth){\n  const channelList = useMessengerChannelList(auth);\n  return channelList?.sort((a, b)=>(a.last_message?.created || '') < (b.last_message?.created || '')?1:-1)\n}\nexport function useMessengerChannelMutation(){\n  const queryClient = useQueryClient()\n\n  const create = useMutation(postChannel, {\n    onSuccess: ()=>queryClient.invalidateQueries(\"MessengerChannelList\")\n  });\n\n  const update = useMutation(putChannel, {\n    onSuccess: () => queryClient.invalidateQueries(\"MessengerChannelList\")\n  })\n\n  const direct = useMutation(postDirectChannel, {\n    onSuccess: () => queryClient.invalidateQueries(\"MessengerChannelList\")\n  })\n\n  return { create:create.mutateAsync, update:update.mutateAsync, direct:direct.mutateAsync}\n}","import * as React from 'react';\nimport { View, Text } from './Themed';\nimport { StyleSheet, StyleProp, ViewStyle, TextStyle } from 'react-native';\nimport Colors from '../constants/Colors';\n\nexport type SectionParamList = {\n    title?: string,\n    titleStyle?:StyleProp<TextStyle>\n    outerContainerStyle?:StyleProp<TextStyle>\n    containerStyle?:StyleProp<ViewStyle>\n    bodyStyle?:StyleProp<ViewStyle>\n    subtitle?: string\n    withSeparator?: boolean\n    children?: React.ReactNode\n}\n\nexport default function CommonSection(props:SectionParamList){\n  return (\n    <View style={[styles.outerContainer, props.outerContainerStyle]}>\n        <View style={[styles.container, props.containerStyle]}>\n            {props.withSeparator?<View style={styles.separator} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />:undefined}\n            {props.title?<View style={styles.titleView}>\n              <Text style={[styles.title, props.titleStyle]}>{props.title}</Text>\n              <Text style={styles.subtitle}>{props.subtitle}</Text>\n            </View>:undefined}\n            <View style={[styles.bodyView, props.bodyStyle]}>\n            {props.children}\n            </View>\n          </View>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n  outerContainer:{\n    width:'100%',\n    maxWidth:1080,\n    alignItems:'stretch',\n    backgroundColor:'transparent'\n  },  \n  container: {\n      marginHorizontal:20,\n      marginVertical: 10,\n      backgroundColor:'transparent',\n    },\n    titleView:{\n      width: '100%',\n      flexDirection:'row',\n      backgroundColor:'transparent',\n      marginBottom:5,\n    },\n    title: {\n      flex:1,\n      fontSize: 16,\n    },\n    subtitle: {\n      flex:1,\n      fontSize: 12,\n      textAlign: 'right',\n      marginTop:4\n    },\n    separator: {\n      marginBottom: 20,\n      height: 1,\n      width: '100%',\n    },\n    bodyView:{\n      width: '100%',\n      padding: 20,\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderWidth:1,\n      borderColor:Colors.borderColor,\n      borderRadius:6\n    }\n  });\n  "],"sourceRoot":""}