{"version":3,"sources":["src/hooks/useResizeWindow.ts","src/hooks/useIsMobile.ts","src/screens/main/LoginScreen.tsx","src/components/CommonSection.tsx","src/hooks/lists/useMessengerContent.List.ts","src/hooks/lists/useMessengerMemberList.ts","src/screens/main/TabOneScreen.tsx","src/hooks/lists/useBoardContentList.ts","src/components/RowField.tsx","src/components/TextField.tsx","src/screens/BoardEditScreen.tsx","src/screens/ChannelEditScreen.tsx","src/screens/InviteScreen.tsx","src/screens/index.ts","src/screens/main/HomeScreen.tsx","src/screens/main/ChatScreen.tsx","src/screens/main/BoardScreen.tsx","src/screens/ProfileScreen.tsx","src/components/CommonItem.tsx","src/components/TextButton.tsx","src/hooks/useWebsocketContext.tsx","src/hooks/lists/useUserMembershipList.ts","src/tabs/MemberTab.tsx","src/hooks/useColorScheme.ts","src/navigation/DrawerNavigator.tsx","src/tabs/DrawerTab.tsx","src/tabs/MessengerTab.tsx","src/tabs/BoardTab.tsx","src/tabs/index.ts","src/lib/react-native-paper/Profile.tsx","src/components/Profile.tsx","src/components/Themed.tsx","src/navigation/LinkingConfiguration.ts","src/apis/axios.ts","src/navigation/index.tsx","src/screens/NotFoundScreen.tsx","src/apis/notification.ts","src/hooks/useFirebaseContext.tsx","src/navigation/RootNavigator.tsx","App.tsx","src/hooks/useCachedResources.ts","src/hooks/useAuthContext.tsx","src/apis/account.ts","src/apis/messenger.ts","web/firebase-config.js","src/assets/fonts/SpaceMono-Regular.ttf","src/constants/Colors.ts","src/components/CommonButton.tsx","src/hooks/lists/useBoardChannelList.ts","src/components/HeaderRight.tsx","src/hooks/lists/useMessengerChannelList.ts"],"names":["useResizeWindow","detectMobile","useMobileDetect","useState","Dimensions","get","window","setWindow","onChange","useEffect","addEventListener","removeEventListener","isMobile","height","width","Platform","OS","Styles","StyleSheet","create","login_container","flex","backgroundColor","login_header","alignItems","paddingTop","paddingBottom","login_header_logo","resizeMode","login_header_text","marginTop","color","fontSize","login_header_text_bold","fontWeight","login_wrapper","justifyContent","paddingVertical","borderTopRightRadius","borderTopLeftRadius","form","maxWidth","form_input","paddingHorizontal","marginBottom","borderRadius","button","button_label","login_social","login_social_separator","flexDirection","login_social_separator_line","login_social_separator_text","marginHorizontal","login_social_buttons","login_social_button","borderWidth","borderColor","login_social_icon","login_social_facebook","login_footer_text","guest_footer_text","alignSelf","margin","login_footer_link","CommonSection","props","style","styles","outerContainer","outerContainerStyle","container","containerStyle","withSeparator","separator","lightColor","darkColor","undefined","title","titleView","titleStyle","subtitle","bodyView","bodyStyle","children","marginVertical","textAlign","padding","Colors","useMessengerContentList","channel_id","queryClient","useQueryClient","useInfiniteQuery","a","async","pageParam","getMessengerContentList","then","current","select","data","pages","length","next","getNextPageParam","lastPage","id","refetchOnReconnect","refetchOnWindowFocus","fetchNextPage","lastJsonMessage","useWebsocketContext","setQueryData","_data","pageParams","useMessengerMemberList","useQuery","getMessengerMemberList","useMessengerMemberMutation","invite","useMutation","postBulkMessengerMember","onSuccess","invalidateQueries","leave","deleteMessengerMember","mutate","Panel_Button_Text","Panel_Holder","useBoardContentList","getBoardContentList","useBoardContentMutation","postBoard","update","patchBoard","_delete","deleteBoardContent","delete","RowField","View","Text","textStyle","name","TextField","contentHeight","setContentHeight","minHeight","disabled","multiline","editable","value","onChangeText","setValue","onContentSizeChange","e","Math","max","nativeEvent","contentSize","field","InviteItem","selectedRef","has","item","selected","setSelected","renderMemberItem","add","main","HomeScreen","component","navigation","route","windowType","options","headerRight","HeaderRight","extra","onPress","navigate","type","useLayoutEffect","index","params","tab","setOptions","TextButton","paddingLeft","tabs","bottomTabs","tabBarPosition","parseInt","onTab","setParams","path","ChatScreen","useRef","auth","useAuthContext","channel","useMessengerChannelList","find","v","memberList","member_id","useMemo","user","messengerMemberMutation","postValue","contentMutation","content","postMessage","deleteMessengerContent","d","variables","useMessengerContentMutation","back","renderItem","useCallback","nextPage","nextContent","map","index2","created","slice","date","isSystem","isFirst","isSelf","dayChanged","key","message_set","MaterialIcons","size","marginRight","linkDefault","wordBreak","linkStyle","canGoBack","goBack","contentContainerStyle","flexGrow","onScroll","contentOffset","y","onLayout","p","layout","position","top","onSubmitEditing","CommonButton","BoardScreen","useBoardChannelList","contentList","boardChannelMutation","useBoardChannelMutation","useIsMobile","opacity","split","replace","board_set","link_set","link","linkIndex","Linking","openURL","url","Image","source","uri","image","maxHeight","description","FlatList","ListHeaderComponent","TabOneScreen","login","LoginScreen","username","setUsername","password","setPassword","dispatch","_login","TextInput","placeholder","text","autoCapitalize","keyboardType","secureTextEntry","TouchableOpacity","modal","BoardEditScreen","boardChannelList","boardContentList","boardContentMutation","board","setTitle","setContent","minWidth","newBoard","screen","ChannelEditScreen","channelList","channelMutation","useMessengerChannelMutation","setName","setDescription","groupId","newChannel","owner","group","InviteScreen","userList","useUserMembershipList","Set","memberSet","filter","user_ids","ProfileScreen","Profile","CommonItem","React","setHover","press","setPress","onPressIn","onPressOut","onHoverIn","onHoverOut","borderBottomWidth","WebSocketContext","createContext","sendJsonMessage","SCHEMA","DOMAIN","WebSocketProviderInternal","token","useWebSocket","shouldReconnect","closeEvent","protocols","Provider","WebSocketProvider","disable","setToken","AsyncStorage","getItem","useContext","getUserMembershipList","MemberIcon","useColorScheme","_useColorScheme","TabViewNavigator","setIndex","entries","Object","icons","assign","k","icon","renderTabBar","indicatorStyle","activeColor","inactiveColor","renderIcon","scene","onTabPress","findIndex","navigationState","routes","onIndexChange","renderScene","SceneMap","onAddList","colors","useTheme","tabBar","card","borderTopColor","border","pointerEvents","accessibilityRole","drawerTabs","elevation","borderRightWidth","label","DrawerTab","marginLeft","Messenger","Board","MessengerIcon","Ionicons","BoardIcon","FontAwesome5","OneTab","MemberTab","TwoTab","today","Date","toISOString","last_message","FontAwesome","member_count","unread_count","ThreeTab","header","join","toUpperCase","useThemeColor","colorName","theme","colorFromProps","otherProps","light","dark","values","forEach","ROOTPATH","prefixes","config","screens","Main","NotFound","defaultOption","baseURL","withCredentials","headers","_axios","axios","interceptors","request","use","error","Promise","reject","response","status","getToken","post","r","defaults","setItem","removeItem","navigationRef","Navigation","colorScheme","ref","documentTitle","formatter","linking","process","versions","LinkingConfiguration","DarkTheme","DefaultTheme","l","search","decoded","s","history","replaceState","pathname","hash","location","ignoreWarnings","_console","_","clone","console","warn","message","indexOf","NotFoundScreen","linkText","putNotification","notification","put","firebaseConfig","require","messagingSenderId","apiKeyEncrypted","i","charCodeAt","toString","padStart","app","firebase","initializeApp","apiKey","messaging","onMessage","payload","Notification","permission","JSON","parse","channel_name","body","alert","FirebaseContext","enable","setEnable","FirebaseProvider","tokenRef","setNotification","isMount","requestPermission","navigator","serviceWorker","register","serviceWorkerRegistration","log","scope","vapidKey","currentToken","requestToken","t","user_id","getNotification","noti","setNotificationInternal","n","postNotification","Root","createStackNavigator","QueryClient","RootNavigator","innerHeight","client","Navigator","mode","headerMode","screenOptions","cardStyle","animationEnabled","cardStyleInterpolator","CardStyleInterpolators","forVerticalIOS","Screen","MainNavigator","headerShown","gestureDirection","DrawerNavigator","headerStyle","headerTitleStyle","headerLeft","canGOBackScreen","headerLeftContainerStyle","flexShrink","forHorizontalIOS","App","isLoadingComplete","setLoadingComplete","SplashScreen","Font","font","useCachedResources","StatusBar","AuthContext","authReducer","initialState","action","Error","AuthProvider","useReducer","authState","membership_set","g","root_group_id","checkLogin","catch","logout","endsWith","guestLogin","checkLoginToken","isOffline","code","startsWith","getUserList","group_id","getBoardChannelList","getMessengerChannelList","postChannel","putChannel","deleteChannel","patch","content_id","id_lt","id_lt_param","results","authDomain","projectId","storageBucket","appId","measurementId","module","exports","background","tint","tabIconDefault","tabIconSelected","focus","DefaultButton","hover","selectable","_props","mutateAsync","defaultButtonProps","buttonProps","sort","b"],"mappings":"2LAOe,SAASA,IACtB,IAAMC,EAAeC,MACrB,EAA4BC,mBAASC,UAAWC,IAAI,WAAU,WAAvDC,EAAM,KAAEC,EAAS,KAClBC,EAAW,WAAH,OAASD,EAAUH,UAAWC,IAAI,YAQhD,OANAI,qBAAU,WAER,OADAL,UAAWM,iBAAiB,SAAUF,GAC/B,WACLJ,UAAWO,oBAAoB,SAAUH,OAGzCP,EAAaW,YAEVN,EAAOO,QAAUP,EAAOQ,MADtB,WACuC,c,qEChBnC,qBAEX,OADqBZ,MACAU,YAA6B,WAAfG,UAASC,IAAkC,OAAfD,UAASC,K,gPCiE5E,IAAMC,EAASC,UAAWC,OAAO,CAC7BC,gBAAiB,CACfC,KAAM,EACNC,gBAAiB,QAEnBC,aAAc,CACZC,WAAY,SACZC,WAAY,GACZC,cAAe,GACfJ,gBAAiB,WAEnBK,kBAAmB,CACjBb,MAAO,IACPc,WAAY,WAEdC,kBAAmB,CACjBC,UAAW,GACXC,MAAO,UACPC,SAAU,IAEZC,uBAAwB,CACtBF,MAAO,OACPG,WAAY,QAEdC,cAAe,CACbd,KAAM,EACNe,eAAgB,gBAChBC,gBAAiB,GACjBC,qBAAsB,GACtBC,oBAAqB,GACrBT,WAAY,GACZR,gBAAiB,OACjBE,WAAY,UAEdgB,KAAM,CACJ1B,MAAO,OACP2B,SAAU,KAEZC,WAAY,CACV7B,OAAQ,GACR8B,kBAAmB,GACnBC,aAAc,GACdtB,gBAAiB,UACjBuB,aAAc,IAEhBC,OAAQ,CACNtB,WAAY,SACZY,eAAgB,SAChBvB,OAAQ,GACRS,gBAAiB,UACjBuB,aAAc,IAEhBE,aAAc,CACZhB,MAAO,OACPC,SAAU,IAEZgB,aAAc,CACZlC,MAAO,OACP2B,SAAU,IACVX,UAAW,IAEbmB,uBAAwB,CACtBC,cAAe,MACf1B,WAAY,UAEd2B,4BAA6B,CAC3B9B,KAAM,EACNP,MAAO,OACPD,OAAQ,EACRS,gBAAiB,WAEnB8B,4BAA6B,CAC3BC,iBAAkB,GAClBtB,MAAO,UACPC,SAAU,IAEZsB,qBAAsB,CACpBJ,cAAe,MACfd,eAAgB,SAChBN,UAAW,IAEbyB,oBAAqB,CACnB/B,WAAY,SACZY,eAAgB,SAChBtB,MAAO,GACPD,OAAQ,GACRwC,iBAAkB,GAClBG,YAAa,EACbC,YAAa,UACbZ,aAAc,IAEhBa,kBAAmB,CACjB5C,MAAO,GACPD,OAAQ,GACRe,WAAY,WAEd+B,sBAAuB,CACrBrC,gBAAiB,UACjBmC,YAAa,WAEfG,kBAAmB,CACjBV,cAAe,MACf1B,WAAY,SACZO,MAAO,UACPC,SAAU,IAEZ6B,kBAAmB,CACjBX,cAAe,MACfY,UAAW,SACX/B,MAAO,UACPC,SAAU,GACV+B,OAAQ,IAEVC,kBAAmB,CACjBjC,MAAO,UACPC,SAAU,GACVE,WAAY,U,gBC3KH,SAAS+B,EAAcC,GACpC,OACE,gBAAC,OAAI,CAACC,MAAO,CAACC,EAAOC,eAAgBH,EAAMI,sBACvC,gBAAC,OAAI,CAACH,MAAO,CAACC,EAAOG,UAAWL,EAAMM,iBACjCN,EAAMO,cAAc,gBAAC,OAAI,CAACN,MAAOC,EAAOM,UAAWC,WAAW,OAAOC,UAAU,gCAA4BC,EAC3GX,EAAMY,MAAM,gBAAC,OAAI,CAACX,MAAOC,EAAOW,WAC/B,gBAAC,OAAI,CAACZ,MAAO,CAACC,EAAOU,MAAOZ,EAAMc,aAAcd,EAAMY,OACtD,gBAAC,OAAI,CAACX,MAAOC,EAAOa,UAAWf,EAAMe,gBAC/BJ,EACR,gBAAC,OAAI,CAACV,MAAO,CAACC,EAAOc,SAAUhB,EAAMiB,YACpCjB,EAAMkB,YAOnB,IAAMhB,EAASlD,UAAWC,OAAO,CAC/BkD,eAAe,CACbvD,MAAM,OACN2B,SAAS,KACTjB,WAAW,UACXF,gBAAgB,eAElBiD,UAAW,CACPlB,iBAAiB,GACjBgC,eAAgB,GAChB/D,gBAAgB,eAElByD,UAAU,CACRjE,MAAO,OACPoC,cAAc,MACd5B,gBAAgB,cAChBsB,aAAa,GAEfkC,MAAO,CACLzD,KAAK,EACLW,SAAU,IAEZiD,SAAU,CACR5D,KAAK,EACLW,SAAU,GACVsD,UAAW,QACXxD,UAAU,GAEZ4C,UAAW,CACT9B,aAAc,GACd/B,OAAQ,EACRC,MAAO,QAEToE,SAAS,CACPpE,MAAO,OACPyE,QAAS,GACT/D,WAAY,SACZY,eAAgB,SAChBoB,YAAY,EACZC,YAAY+B,UAAO/B,YACnBZ,aAAa,K,kUC9DJ,SAAS4C,EAAwBC,GAC9C,IAAMC,EAAcC,2BACpB,EAAgCC,2BAC9B,CAAC,uBAAwBH,IACzB,2BAAAI,EAAAC,OAAA,gDAAgB,OAATC,EAAS,EAATA,UAAS,kBAAIC,kCAAwBP,EAAYM,GAAWE,MAAK,SAAAC,GAAO,MAAG,CAACA,eAAU,8DAC7F,CACEC,OAAO,SAAAC,GAGL,OAFGA,EAAKC,MAAMC,OAAS,IACrBF,EAAKC,MAAMD,EAAKC,MAAMC,OAAS,GAAGC,KAAOH,EAAKC,MAAMD,EAAKC,MAAMC,OAAS,IACnEF,GAETI,iBAAiB,SAACC,GAAQ,OAAGA,EAASP,QAAQI,OAAOG,EAASP,QAAQO,EAASP,QAAQI,OAAS,GAAGI,QAAG9B,GACtG+B,oBAAmB,EACnBC,sBAAqB,IAXjBR,EAAI,EAAJA,KAAMS,EAAa,EAAbA,cAcNC,EAAoBC,oBAApBD,gBAUR,OATAtG,qBAAU,WACa,MAAlBsG,GAAmD,gBAAzBA,EAAsB,MAAqBA,EAAsB,KAAW,SAAKrB,GAC5GC,EAAYsB,aAAiD,CAAC,uBAAwBvB,IAAa,SAACwB,GAGlG,OAFQ,MAALA,KAAOZ,MAAM,GAAGH,UAAgB,MAALe,OAAK,EAALA,EAAOZ,MAAM,GAAGH,QAAQ,GAAGQ,KAAMI,EAAsB,KAAEJ,KACrFO,EAAMZ,MAAM,GAAGH,QAAO,CAAIY,EAAsB,MAAC,WAAU,MAALG,OAAK,EAALA,EAAOZ,MAAM,GAAGH,W,iWACjE,CAAP,GAAYe,GAAS,CAACZ,MAAM,GAAIa,WAAW,UAG9C,CAACJ,IACG,CAAEV,OAAMS,iB,YClCF,SAASM,EAAuB1B,GAE7C,OADiB2B,mBAAS,CAAC,sBAAuB3B,IAAc,oBAAAI,EAAAC,OAAA,kEAAAD,EAAA,MAAewB,iCAAuB5B,IAAW,uGAAzGW,KAKH,SAASkB,IACd,IAAM5B,EAAcC,2BACd4B,EAASC,sBAAYC,0BAAyB,CAClDC,UAAW,WACThC,EAAYiC,kBAAkB,0BAI5BC,EAAQJ,sBAAYK,wBAAuB,CAC/CH,UAAW,WACThC,EAAYiC,kBAAkB,wBAC9BjC,EAAYiC,kBAAkB,0BAGlC,MAAO,CAACJ,OAAOA,EAAOO,OAAQF,MAAMA,EAAME,Q,6ECV7B7G,UAAWC,OAAO,CAC/B6G,kBAAmB,CACjB1C,UAAW,SACXvD,MAAO,OACPC,SAAU,IAEZiG,aAAc,CACZzE,YAAa,EACbC,YAAa,OACb4B,eAAgB,KATpB,I,0BCTe,SAAS6C,EAAoBxC,GAE1C,OADiB2B,mBAAS,CAAC,mBAAoB3B,IAAc,oBAAAI,EAAAC,OAAA,kEAAAD,EAAA,MAAeqC,8BAAoBzC,IAAW,uGAAnGW,KAIH,SAAS+B,IACd,IAAMzC,EAAcC,2BACdzE,EAASsG,sBAAYY,YAAW,CACpCV,UAAW,kBAAMhC,EAAYiC,kBAAkB,uBAE3CU,EAASb,sBAAYc,aAAY,CACrCZ,UAAW,kBAAMhC,EAAYiC,kBAAkB,uBAE3CY,EAAUf,sBAAYgB,qBAAoB,CAC9Cd,UAAW,kBAAMhC,EAAYiC,kBAAkB,uBAEjD,MAAO,CAAEzG,OAAOA,EAAO4G,OAAQO,OAAOA,EAAOP,OAAQW,OAAOF,EAAQT,Q,qBCTvD,SAASY,EAASzE,GAC/B,OACE,kBAAC0E,EAAA,QAAI,CAACzE,MAAO,CAACjB,cAAc,MAAO1B,WAAY,SAAUY,eAAe,gBAAiBC,gBAAgB,IACrG,kBAACwG,EAAA,QAAI,CAAC1E,MAAO,CAAC,CAAC9C,KAAK,EAAGsB,kBAAmB,GAAIX,SAAS,IAAKkC,EAAM4E,YAAa5E,EAAM6E,MACrF,kBAACH,EAAA,QAAI,CAACzE,MAAO,CAEb9C,KAAM,EACNe,eAAgB,SAChBO,kBAAmB,KAEjB,kBAACiG,EAAA,QAAI,CAACzE,MAAO,CAACrD,MAAMoD,EAAMpD,QACvBoD,EAAMkB,YCHJ,SAAS4D,EAAU9E,GAChC,MAA0C/D,qBAAkB,WAArD8I,EAAa,KAAEC,EAAgB,KAChCC,EAAYjF,EAAMiF,WAAa,GACrC,OACE,kBAACR,EAAQ,CAACI,KAAM7E,EAAM6E,KAAMjI,MAAOoD,EAAMpD,MAAOgI,UAAW5E,EAAM4E,WAC/D,kBAAC,YAAS,CAAC3E,MAAO,CAAC,CACfV,YAAY,UACZzB,SAAS,GACTwB,YAAY,EACZX,aAAa,EACbF,kBAAkB,GAClBN,gBAAgB,EAChBf,gBAAgB4C,EAAMkF,SAAS,YAAOvE,EACtChE,OAAOqD,EAAMmF,UAAUJ,EAAcE,GACpCjF,EAAMC,OAAQmF,UAAWpF,EAAMkF,SAAUG,MAAOrF,EAAMqF,MAAOC,aAActF,EAAMuF,SACpFC,oBAAqBxF,EAAMmF,UAAU,SAACM,GAAC,OAAKT,EAAiBU,KAAKC,IAAIF,EAAEG,YAAYC,YAAYlJ,OAAQsI,GAAa,SAAGtE,EACxHwE,UAAWnF,EAAMmF,a,ikBC+BzB,IAAMjF,GAASlD,UAAWC,OAAO,CAC/B6I,MAAM,CACJlJ,MAAM,MACNoC,cAAc,MACdqC,QAAQ,IAEVb,UAAW,CACT9B,aAAc,GACd/B,OAAQ,EACRC,MAAO,UCZX,IAAMsD,GAASlD,UAAWC,OAAO,CAC/B6I,MAAM,CACJlJ,MAAM,MACNoC,cAAc,MACdqC,QAAQ,IAEVb,UAAW,CACT9B,aAAc,GACd/B,OAAQ,EACRC,MAAO,U,oBC3DLmJ,GAAa,SAAC/F,GAClB,MAAgC/D,mBAAS+D,EAAMgG,YAAY/D,QAAQgE,IAAIjG,EAAMkG,KAAKzD,KAAI,WAA/E0D,EAAQ,KAAEC,EAAW,KAC5B,OAAO,kBAAC,OAAI,CAACnG,MAAOkG,EAAS,CAAC7G,YAAY,EAAGC,YAAY,QAAQ,IAC9D8G,4BAAiBrG,EAAMkG,MAAM,SAACA,GACzBC,GACFC,GAAY,GACZpG,EAAMgG,YAAY/D,QAAQuC,OAAO0B,EAAKzD,MAGtC2D,GAAY,GACZpG,EAAMgG,YAAY/D,QAAQqE,IAAIJ,EAAKzD,U,cCZpC,IAAM8D,GAAO,CAChBC,WAAW,CACP5F,MAAM,OACN6F,UCCO,SAAoB,GAAqD,IAAD,EAAnDC,EAAU,EAAVA,WAAYC,EAAK,EAALA,MACxCC,EAAa9K,oBAEb+K,EAAU,CACd,CAACjG,MAAM,SAAUkG,YAAY,kBAAI,kBAACC,EAAA,QAAW,QAC7C,CAACnG,MAAM,YAAakG,YAAY,kBAAI,kBAACC,EAAA,QAAW,CAACC,MAAO,CAAC,CAACpG,MAAM,SAAUqG,QAAQ,kBAAIC,mBAAS,oBAAqB,CAACC,KAAK,qBAC1H,CAACvG,MAAM,QAASkG,YAAY,kBAAI,kBAACC,EAAA,QAAW,CAACC,MAAO,CAAC,CAACpG,MAAM,SAAUqG,QAAQ,kBAAIC,mBAAS,oBAAqB,CAACC,KAAK,iBACtH,CAACvG,MAAM,SAAUkG,YAAY,kBAAI,kBAACC,EAAA,QAAW,SAU/C,OAPAK,2BAAgB,WAAO,IAAD,EACdC,EAA6B,GAAhB,MAALV,GAAa,OAAR,EAALA,EAAOW,aAAF,EAAL,EAAeC,KAC7Bb,EAAWc,WAAyB,YAAdZ,EAAyBC,EAAQQ,GAAO,CAC5DzG,MAAO,OACPkG,YAAa,kBAAI,kBAACC,EAAA,QAAW,WAE9B,CAACL,EAAYC,EAAOC,IACF,aAAdA,EACL,kBAAClC,EAAA,QAAI,CAACzE,MAAO,CAAC9C,KAAK,EAAGe,eAAe,SAAUZ,WAAW,WACxD,kBAACoH,EAAA,QAAI,CAACzE,MAAO,CAACrD,MAAM,MAAOD,OAAO,QAChC,kBAAC,UAAU,CAACsD,MAAO,CAACnC,SAAS,KAAK,eAClC,kBAAC4G,EAAA,QAAI,CAACzE,MAAO,CAAC7C,gBAAgBkE,UAAO/B,YAAa5C,OAAO,EAAGC,MAAM,UAClE,kBAAC8H,EAAA,QAAI,CAACzE,MAAO,CAAC9C,KAAK,EAAGG,WAAW,eAC/B,kBAACqH,EAAA,QAAI,CAAC1E,MAAO,CAACnC,SAAS,GAAID,MAAM,SAAS,mDAC1C,kBAAC8G,EAAA,QAAI,CAAC1E,MAAO,CAACnC,SAAS,KAAK,KAC5B,kBAAC6G,EAAA,QAAI,CAAC1E,MAAO,CAACnC,SAAS,GAAIE,WAAW,QAAQ,eAC9C,kBAACyJ,EAAA,QAAU,CAAC7G,MAAM,kBAAkBgE,UAAW,CAAC9G,SAAS,IAAKmC,MAAO,CAACyH,YAAY,EAAG/I,aAAa,IAAKsI,QAAS,kBAAIC,mBAAS,oBAAqB,CAACC,KAAK,iBACxJ,kBAACM,EAAA,QAAU,CAAC7G,MAAM,cAAcgE,UAAW,CAAC9G,SAAS,IAAKmC,MAAO,CAACyH,YAAY,EAAG/I,aAAa,IAAKsI,QAAS,kBAAIC,mBAAS,oBAAqB,CAACC,KAAK,gBAI1J,kBAAC,mBAAgB,CAACQ,KAAMC,aAAYC,eAAe,SAASR,MAAOS,UAAqB,OAAZ,EAAAnB,EAAMW,aAAM,EAAZ,EAAoB,MAAK,GAAIS,MAAO,SAACV,GAASX,EAAWsB,UAAU,CAACT,IAAIF,QD/BhJY,KAAK,QAETC,WAAW,CACPtH,MAAM,OACN6F,UEDO,SAAoB,GAAqD,IAAD,IAAnDC,EAAU,EAAVA,WAAYC,EAAK,EAALA,MACxCnF,EAAkB,MAALmF,GAAa,OAAR,EAALA,EAAOW,aAAF,EAAL,EAAe7E,GAC5B9F,EAASwL,iBAAO,GACfC,EAAQC,oBAARD,KACDE,EAAuC,OAAhC,EAAGC,kBAAwBH,SAAK,EAA7B,EAA+BI,MAAK,SAAAC,GAAC,OAAEA,EAAEhG,IAAIqF,SAAStG,MACtE,EAA+BD,EAAwBC,GAAhDW,EAAI,EAAJA,KAAMS,EAAa,EAAbA,cACP8F,EAAaxF,EAAuB1B,GACpCmH,EAAYC,mBAAQ,wBAAc,MAAVF,GAA4C,OAAlC,EAAVA,EAAYF,MAAK,SAAAC,GAAC,aAAEA,EAAEI,OAAiB,OAAb,EAAIT,EAAKS,WAAI,EAAT,EAAWpG,aAA/B,EAAV,EAA8CA,KAAI,CAAC2F,EAAMM,IACjFI,EAA0BzF,IAChC,EAA0BpH,mBAAS,IAAG,WAA/BoJ,EAAK,KAAEE,EAAQ,KAChBwD,EAAY,WAAK,IAAD,EACpBC,EAAgB/L,OAAO,CAACqL,QAAQ9G,EAAYqH,KAAc,OAAV,EAACT,EAAKS,WAAI,EAAT,EAAWpG,GAAIwG,QAAQ5D,IACxEE,EAAS,KAELyD,EXQD,WAEL,IAAM/L,EAASsG,sBAAY2F,cAAa,CACtCzF,UAAW,eAQPa,EAAUf,sBAAY4F,yBAAwB,CAClD1F,UAAW,SAAC2F,EAAGC,OAOjB,MAAO,CAAEpM,OAAOA,EAAO4G,OAAQW,OAAOF,EAAQT,QW3BtByF,GAExBlC,2BAAgB,WACdV,EAAWc,WAAW,CACpBV,YAAa,kBAAK,kBAACC,EAAA,QAAW,CAACC,MAAO,CACpC,CAACpG,MAAM,SAAUqG,QAAQ,WAAKC,mBAAS,eAAgB,CAACzE,GAAGjB,MAC3D,CAACZ,MAAM,QAASqG,QAAQ,WAAK0B,GAAaG,EAAwBnF,MAAMgF,GAAWY,UAErF3I,MAAc,MAAP0H,OAAO,EAAPA,EAASzD,SAEjB,CAAC6B,EAAYC,EAAOgC,IAEvB,IAAMa,EAAaC,uBAAY,YAE7B,IAFyF,IAAD,EAAzDvD,EAAI,EAAJA,KAC3BwD,GADsC,EAALrC,MACtBnB,EAAK5D,MACN,OAAR,EAAAoH,IAAA,EAAUpH,MAAiC,GAAzBoH,EAASzH,QAAQI,QAAU,CAAC,IAAD,EACjDqH,EAAWA,EAASpH,KAEtB,IAAMqH,EAAsB,OAAX,EAAGD,QAAQ,EAAR,EAAUzH,QAAQ,GACtC,OAAO,kBAACyC,EAAA,QAAI,CAACzE,MAAO,CAACjB,cAAe,mBAEjCkH,EAAKjE,QAAQ2H,KAAI,SAACX,EAASY,GAAU,IAAD,EAC7BvH,EAAOuH,EAAS,EAAI3D,EAAKjE,QAAQI,OAAO6D,EAAKjE,QAAQ4H,EAAO,GAAGF,EAC/DG,EAAiBb,EAAQa,QAAQC,MAAM,EAAG,IAC1CC,EAAOF,EAAQC,MAAM,EAAG,IACxBE,EAA2B,MAAhBhB,EAAQJ,KACnBqB,OAAgBvJ,GAAN2B,GAAoB2G,EAAQJ,MAAQvG,EAAKuG,MAAQiB,GAAWxH,EAAKwH,QAAQC,MAAM,EAAG,IAC5FI,GAAkB,OAAT,EAAA/B,EAAKS,WAAI,EAAT,EAAWpG,KAAMwG,EAAQJ,KAClCuB,OAAmBzJ,GAAN2B,GAAmB0H,GAAQ1H,EAAKwH,QAAQC,MAAM,EAAG,IACpE,OAAIE,EACK,kBAACvF,EAAA,QAAI,CAAC2F,IAAKpB,EAAQxG,GAAIxC,MAAO,CAACjB,cAAc,MAAOd,eAAe,SAAUtB,MAAM,SACxF,kBAAC+H,EAAA,QAAI,KAAEsE,EAAQqB,YAAY,GAAGrB,UAE3B,kBAACvE,EAAA,QAAI,CAAC2F,IAAKpB,EAAQxG,IACvB2H,EAAW,kBAAC1F,EAAA,QAAI,CAACzE,MAAO,CAACjB,cAAc,MAAOd,eAAe,SAAUtB,MAAM,SAAS,kBAAC+H,EAAA,QAAI,KAAEqF,SAAoBrJ,EAClH,kBAAC+D,EAAA,QAAI,CAAC2F,IAAKpB,EAAQxG,GAAIxC,MAAO,CAACjB,cAAc,MAAOd,eAAeiM,EAAO,gBAAgB,aAAcvN,MAAM,SAC3GsN,IAAYC,EAAO,kBAACI,EAAA,QAAa,CAACC,KAAM,GAAIvK,MAAO,CAACvB,cAAe,EAAG+L,YAAY,IAAM5F,KAAK,mBAAmB,kBAACH,EAAA,QAAI,CAACzE,MAAO,CAACrD,MAAM,MACrI,kBAACmD,EAAa,CAACK,oBAAqB,CAACxD,WAAM+D,EAAWpC,SAAS,OAAQqC,MAAOsJ,EAAQjB,EAAQpE,UAAKlE,EAAWG,WAAY,CAAC3D,UAAKwD,GAAYM,UAAW,CAACI,QAAQ,IAAKN,SAAQ,GAAK+I,EAAQC,MAAM,KAE9L,kBAAC,UAAS,CAACW,aAAc,EAAOzK,MAAO,CAAC0K,UAAU,cAAeC,UAAW,CAAC/M,MAAO,YAClF,kBAAC8G,EAAA,QAAI,KAAEsE,EAAQqB,YAAY,GAAGrB,mBAOzC,CAACvC,EAAYsC,IAEVO,EAAO,WACR7C,EAAWmE,YACVnE,EAAWoE,SAEXpE,EAAWQ,SAAS,aAAc,CAACK,IAAI,KAQ7C,OALAhL,qBAAU,WACFiF,GACJ+H,MACD,IAEI,kBAAC7E,EAAA,QAAI,CAACzE,MAAO,CAAC9C,KAAK,EAAGG,WAAW,WACtC,kBAAC,WAAQ,CACL2C,MAAO,CAACrD,MAAM,OAAQoC,cAAe,iBAAkBN,aA9E1C,IA+EbqM,sBAAuB,CAAC1J,QAAQ,GAAI2J,SAAS,EAAGhM,cAAe,kBAC/DmD,KAAU,MAAJA,OAAI,EAAJA,EAAMC,MACZoH,WAAYA,EACZyB,SAAU,SAACxF,GACLA,EAAEG,YAAYsF,cAAcC,EAAI1F,EAAEG,YAAYC,YAAYlJ,OAASA,EAAOsF,SAAW,GACvFW,KAEJwI,SAAU,SAACC,GAAK1O,EAAOsF,QAAUoJ,EAAEzF,YAAY0F,OAAO3O,UAExD,kBAAC+H,EAAA,QAAI,CAACzE,MAAO,CAACrD,MAAM,SAClB,kBAAC8H,EAAA,QAAI,CAACzE,MAAO,CAACsL,SAAS,WAAYC,KAzFtB,GAyFyC5O,MAAM,OAAQQ,gBAAgB,QAASE,WAAW,WACtG,kBAACoH,EAAA,QAAI,CAACzE,MAAO,CAACrD,MAAM,OAAOoC,cAAc,MAAOzB,WAAW,GAAIC,cAAc,GAAIiB,kBAAkB,KACjG,kBAAC,YAAS,CAAC4G,MAAOA,EAAOC,aAAcC,EAAUtF,MAAO,CAAC9C,KAAK,EAAGmC,YAAY,EAAG3C,OAAO,GAAIgC,aAAa,EAAGY,YAAY+B,UAAO/B,aAAckM,gBAAiB1C,IAAY,kBAAC2C,EAAA,QAAY,CAAC9K,MAAO,QAASqG,QAAS8B,SFvFpNd,KAAK,QAET0D,YAAY,CACR/K,MAAM,QACN6F,UGLO,SAAqB,GAAsD,IAAD,IAApDC,EAAU,EAAVA,WAAYC,EAAK,EAALA,MACzCnF,EAAkB,MAALmF,GAAa,OAAR,EAALA,EAAOW,aAAF,EAAL,EAAe7E,GAC3B2F,EAAQC,oBAARD,KACDE,EAAmC,OAA5B,EAAGsD,kBAAoBxD,SAAK,EAAzB,EAA2BI,MAAK,SAAAC,GAAC,OAAEA,EAAEhG,IAAIqF,SAAStG,MAC5DqK,EAAc7H,EAAoBxC,GAClCsK,EAAuBC,oCACvB/C,EAAkB9E,IAClBxH,EAAWsP,oBAEjB5E,2BAAgB,WACdV,EAAWc,WAAW,CACpBV,YAAa,kBAAK,kBAACC,EAAA,QAAW,CAACC,MAAO,CAAC,CAACpG,MAAM,SAAUqG,QAAQ,WAAK6E,EAAqBtH,OAAOhD,GAAY+H,UAC7G3I,MAAc,MAAP0H,OAAO,EAAPA,EAASzD,SAEjB,CAAC6B,EAAYC,IAEhB,IAAM6C,EAAaC,uBAAY,gBAAEvD,EAAI,EAAJA,KAAI,OAAwB,kBAACnG,EAAa,CAACkB,UAAW,CAAC3D,WAAW,aAAcmB,kBAAkB,OACjI,kBAAC,OAAI,CAACwB,MAAO,CAACjB,cAActC,EAAS,SAAU,MAAOE,MAAM,OAAQsB,eAAe,kBACjF,kBAAC,OAAI,CAAC+B,MAAO,CAACjB,cAAc,QAC1B,kBAACuL,EAAA,QAAa,CAACC,KAAM,GAAIvK,MAAO,CAACvB,cAAe,EAAG+L,YAAY,IAAM5F,KAAK,mBAC1E,kBAAC,OAAI,KACH,kBAAC,OAAI,CAAC5E,MAAO,CAACnC,SAAS,KAAMoI,EAAKrB,MAClC,kBAAC,OAAI,CAAC5E,MAAO,CAACnC,SAAS,GAAImO,QAAS,KAAO/F,EAAK4D,QAAQoC,MAAM,KAAK,GAAGC,QAAQ,IAAK,QAGvF,kBAAC,OAAI,CAAClM,MAAO,CAACjB,cAAc,MAAOrC,OAAOD,EAAS,MAAM,QACvD,kBAACgP,EAAA,QAAY,CAAC9K,MAAO,OAAQqG,QAAS,kBAAIP,EAAWQ,SAAS,kBAAmB,CAAC1F,WAAW0E,EAAKoC,QAAS7F,GAAGyD,EAAKzD,QACnH,kBAACiJ,EAAA,QAAY,CAAC9K,MAAO,SAAUX,MAAO,CAACd,iBAAiB,GAAI8H,QAAS,kBAAK+B,EAAgBxE,OAAO0B,EAAKzD,SAG1G,kBAAC,OAAI,CAACxC,MAAO,CAACnC,SAAS,KAAMoI,EAAKkG,UAAU,GAAGxL,OAE/C,kBAAC,UAAS,CAAC8J,aAAc,EAAOzK,MAAO,CAAC0K,UAAU,cAAeC,UAAW,CAAC/M,MAAO,YAClF,kBAAC,OAAI,CAACoC,MAAO,CAACnC,SAAS,KAAMoI,EAAKkG,UAAU,GAAGnD,UAEhD/C,EAAKmG,SAASzC,KAAI,SAAC0C,EAAMC,GAAS,OAAG,kBAACxM,EAAa,CAACsK,IAAKkC,EAAWjM,eAAgB,CAACnB,iBAAiB,GAAI8B,UAAW,CAACI,QAAQ,IAC7H,kBAAC,mBAAgB,CAAC4F,QAAS,kBAAIuF,UAAQC,QAAQH,EAAKI,MAAMzM,MAAO,CAACjB,cAAc,OAAQsB,eAAgB,CAAC1D,MAAM,SAC3G,kBAAC+P,EAAA,QAAK,CAACC,OAAQ,CAACC,IAAIP,EAAKQ,OAAQpP,WAAW,QAAQuC,MAAO,CAAErD,MAAM,OAAQ2B,SAAS7B,EAAS,IAAI,IAAKqQ,UAAUrQ,EAAS,IAAI,IAAK4C,YAAY,KAC9I,kBAAC,OAAI,CAACW,MAAO,CAAC9C,KAAK,EAAGgC,iBAAiB,KACrC,kBAAC,OAAI,CAACc,MAAO,CAACnC,SAAS,KAAMwO,EAAK1L,OAClC,kBAAC,OAAI,CAACX,MAAO,CAACnC,SAAS,KAAMwO,EAAKU,aAClC,kBAAC,OAAI,CAAC/M,MAAO,CAACnC,SAAS,KAAMwO,EAAKI,cAM1C,CAAChG,EAAYsC,EAAiBtM,IAE1B6M,EAAO,WACR7C,EAAWmE,YACVnE,EAAWoE,SAEXpE,EAAWQ,SAAS,aAAc,CAACK,IAAI,KAO7C,OAJAhL,qBAAU,WACFiF,GACJ+H,MACD,IACI,kBAAC,OAAI,CAACtJ,MAAO,CAAC9C,KAAK,EAAGC,gBAAgB,UACzC,kBAAC6P,EAAA,QAAQ,CACP9K,KAAM0J,EACNrC,WAAYA,EACZuB,sBAAuB,CAACC,SAAS,GACjCkC,oBAAqB,kBAAI,kBAACnN,EAAa,CAACkB,UAAW,CAACjC,cAAc,MAAOd,eAAe,WAAYC,gBAAgB,EAAGmB,YAAY,IAC/H,kBAACoM,EAAA,QAAY,CAAC9K,MAAO,QAASX,MAAO,CAACxB,kBAAkB,GAAIjB,cAAc,GAAIyJ,QAAS,kBAAIP,EAAWQ,SAAS,kBAAmB,CAAC1F,wBH5DvIyG,KAAK,SAETkF,aAAa,CACTvM,MAAM,UACN6F,UPxBO,SAAsB,GAGnC,OAFU,EAAVC,WAEO,kBAAChC,EAAA,QAAI,CAACzE,MAAO,CAACoB,QAAQ,OOsBvB4G,KAAK,QAIAmF,GAAQ,CACjBC,YAAY,CACRpF,KAAM,QACNrH,MAAO,qBACP6F,UX3BO,SAAqB,GACxB,EAAVC,WACkC,IAClC,EAAgCzK,mBAAS,IAAG,WAArCqR,EAAQ,KAAEC,EAAW,KAC5B,EAAgCtR,mBAAS,IAAG,WAArCuR,EAAQ,KAAEC,EAAW,KACrBC,EAAYrF,oBAAZqF,SACDC,EAAS,WAAH,OAAOD,EAAS,CAACvG,KAAK,gBAAiBmG,WAAUE,cAE7D,OACE,kBAAC9I,EAAA,QAAI,CAACzE,MAAOlD,EAAOkB,eAClB,kBAACyG,EAAA,QAAI,CAACzE,MAAOlD,EAAOuB,MAClB,kBAACsP,EAAA,QAAS,CACR3N,MAAOlD,EAAOyB,WACd6G,MAAOiI,EACPO,YAAa,WACbvI,aAAc,SAACwI,GAAI,OAAKP,EAAYO,IACpCC,eAAgB,OAChBC,aAAc,gBACdvC,gBAAiBkC,IAEnB,kBAACC,EAAA,QAAS,CACR3N,MAAOlD,EAAOyB,WACd6G,MAAOmI,EACPK,YAAa,WACbI,iBAAe,EACf3I,aAAc,SAACwI,GAAI,OAAKL,EAAYK,IACpCrC,gBAAiBkC,IAEnB,kBAACO,EAAA,QAAgB,CAACjH,QAAS0G,GACzB,kBAACjJ,EAAA,QAAI,CAACzE,MAAOlD,EAAO6B,QAClB,kBAAC+F,EAAA,QAAI,CAAC1E,MAAOlD,EAAO8B,cAAe,aAGvC,kBAACqP,EAAA,QAAgB,CAACjH,QAAS,kBAAMyG,EAAS,CAACvG,KAAK,kBAC9C,kBAACxC,EAAA,QAAI,CAAC1E,MAAOlD,EAAO4C,mBACjB,sBAIP,kBAAC+E,EAAA,QAAI,CAACzE,MAAOlD,EAAO+B,cAClB,kBAAC4F,EAAA,QAAI,CAACzE,MAAOlD,EAAOgC,wBAClB,kBAAC2F,EAAA,QAAI,CAACzE,MAAOlD,EAAOkC,8BACpB,kBAAC0F,EAAA,QAAI,CAAC1E,MAAOlD,EAAOmC,6BAA8B,QAClD,kBAACwF,EAAA,QAAI,CAACzE,MAAOlD,EAAOkC,+BAEtB,kBAACyF,EAAA,QAAI,CAACzE,MAAOlD,EAAOqC,4BWdf+O,GAAQ,CACjBC,gBAAgB,CACZxN,MAAM,QACN6F,UH9BO,SAAyB,GAA0D,IAAD,IAAxDC,EAAU,EAAVA,WAAYC,EAAK,EAALA,MAC7ClE,EAAU,MAALkE,GAAa,OAAR,EAALA,EAAOW,aAAF,EAAL,EAAe7E,GACpBjB,EAAkB,MAALmF,GAAa,OAAR,EAALA,EAAOW,aAAF,EAAL,EAAe9F,WAC3B4G,EAAQC,oBAARD,KACDiG,EAAmBzC,kBAAoBxD,GACvCkG,EAAmBtK,EAAoBxC,GACvC+M,EAAuBrK,IACvBoE,EAA0B,MAAhB+F,OAAgB,EAAhBA,EAAkB7F,MAAK,SAAAC,GAAC,OAAEA,EAAEhG,IAAIjB,KAC1CgN,EAAQ5F,mBAAQ,wBAAoB,MAAhB0F,GAAmC,OAAnB,EAAhBA,EAAkB9F,MAAK,SAAAC,GAAC,OAAEA,EAAEhG,IAAIA,WAAhB,EAAhB,EAAqC2J,UAAU,KAAI,CAACkC,IAC9E,EAA0BrS,mBAAS,IAAG,WAA/B2E,EAAK,KAAE6N,EAAQ,KACtB,EAA8BxS,mBAAS,IAAG,WAAnCgN,EAAO,KAAEyF,EAAU,KACpBhS,EAAWsP,oBACXzC,EAAO,WACR7C,EAAWmE,YACVnE,EAAWoE,SAEXpE,EAAWyF,QAAQ,SAGzB5P,qBAAU,WACFiF,GAAc8G,IAAY+F,GAC9B9E,MACD,CAAC8E,IACJ9R,qBAAU,WACJiS,IACFC,EAASD,EAAM5N,OACf8N,EAAWF,EAAMvF,YAElB,CAACuF,IACJ,IAAMG,EAAWjS,EAAS,IAAI,IAC9B,OAAO,kBAACqD,EAAa,CAACK,oBAAqB,CAACR,UAAU,WACpD,kBAAC,OAAI,CAACK,MAAO,CAAC/B,eAAe,iBAC3B,kBAAC,OAAI,CAAC+B,MAAO,CAACnC,SAAS,KAAK,eAE9B,kBAAC,OAAI,CAACmC,MAAOC,GAAOM,UAAWC,WAAW,OAAOC,UAAU,2BAC3D,kBAAC,OAAI,CAACT,MAAO,CAACrD,MAAMF,EAAS,MAAM,MAAOiS,aACxC,kBAAC7J,EAAS,CAACD,KAAK,UAAUK,UAAU,EAAMG,OAAc,MAAPiD,OAAO,EAAPA,EAASzD,OAAQ,GAAIjI,MAAO,SAC7E,kBAACkI,EAAS,CAACD,KAAK,QAAQQ,MAAOzE,EAAO2E,SAAUkJ,EAAU7R,MAAO,SACjE,kBAACkI,EAAS,CAACD,KAAK,UAAUQ,MAAO4D,EAAS1D,SAAUmJ,EAAYvJ,WAAS,EAACvI,MAAO,OAAQqI,UAAW,OAEtG,kBAAC,OAAI,CAAChF,MAAO,CAACC,GAAO4F,MAAO,CAAC5H,eAAe,WAAYyQ,cACtD,kBAACjD,EAAA,QAAY,CAAC9K,MAAO,OAAQqG,QAAS,WAAK,IAAD,EAClC2H,EAAiB,CAACnM,GAAQ,MAAL+L,OAAK,EAALA,EAAO/L,GAAI7B,QAAOqI,WAC7CxG,EAAG8L,EAAqBnK,OAAOwK,GAAUL,EAAqBtR,OAAO,OAAI2R,GAAQ,IAAE/F,KAAc,OAAV,EAACT,EAAKS,WAAI,EAAT,EAAWpG,GAAI6F,QAAQ9G,KAC/G0F,mBAAS,OAAQ,CAAC2H,OAAO,cAAevH,OAAQ,CAAC7E,GAAGjB,QAEtD,kBAACkK,EAAA,QAAY,CAAC9K,MAAO,SAAUX,MAAO,CAACd,iBAAiB,GAAI8H,QAASsC,OGfnEtB,KAAK,eAET6G,kBAAkB,CACdlO,MAAM,UACN6F,UFnCO,SAA2B,GAA4D,IAAD,IAA1DC,EAAU,EAAVA,WAAYC,EAAK,EAALA,MAC/ClE,EAAU,MAALkE,GAAa,OAAR,EAALA,EAAOW,aAAF,EAAL,EAAe7E,GACpB0E,EAAY,MAALR,GAAa,OAAR,EAALA,EAAOW,aAAF,EAAL,EAAeH,KACrBiB,EAAQC,oBAARD,KACD2G,EAAoB,aAAN5H,EAAkBoB,kBAAwBH,GAAMwD,kBAAoBxD,GAClF4G,EAAwB,aAAN7H,EAAkB8H,wCAA8BlD,oCAClEzD,EAAqB,MAAXyG,OAAW,EAAXA,EAAavG,MAAK,SAAAC,GAAC,OAAEA,EAAEhG,IAAIA,KAC3C,EAAwBxG,mBAAS,IAAG,WAA7B4I,EAAI,KAAEqK,EAAO,KACpB,EAAsCjT,mBAAS,IAAG,WAA3C+Q,EAAW,KAAEmC,EAAc,KAC5BzS,EAAWsP,oBAQjBzP,qBAAU,WACJ+L,IACF4G,EAAQ5G,EAAQzD,MAChBsK,GAAsB,MAAP7G,OAAO,EAAPA,EAAS0E,cAAe,OAExC,CAAC1E,IACJ,IAAMqG,EAAWjS,EAAS,IAAI,IAC9B,OAAO,kBAACqD,EAAa,CAACK,oBAAqB,CAACR,UAAU,WACpD,kBAAC,OAAI,CAACK,MAAO,CAAC/B,eAAe,iBAC7B,kBAAC,OAAI,CAAC+B,MAAO,CAACnC,SAAS,KAAK,kBAAgBqJ,IAE5C,kBAAC,OAAI,CAAClH,MAAOC,GAAOM,UAAWC,WAAW,OAAOC,UAAU,2BAC3D,kBAAC,OAAI,CAACT,MAAO,CAACrD,MAAM,MAAO+R,SAAS,MAClC,kBAAC7J,EAAS,CAACD,KAAK,eAAeQ,MAAOR,EAAMU,SAAU2J,EAAStS,MAAO,SACtE,kBAACkI,EAAS,CAACD,KAAK,cAAcQ,MAAO2H,EAAazH,SAAU4J,EAAgBhK,WAAS,EAACvI,MAAO,UAE/F,kBAAC,OAAI,CAACqD,MAAO,CAACC,GAAO4F,MAAO,CAAC5H,eAAe,WAAYyQ,cACtD,kBAACjD,EAAA,QAAY,CAAC9K,MAAO,OAAQqG,QAAS,WAAK,IAAD,EACxC,GAAO,MAAJmB,GAAU,OAAN,EAAJA,EAAMS,OAAN,EAAYpG,IAAM2F,EAAKgH,QAAQ,CAAC,IAAD,EAC1BC,EAAqB,CAAC5M,KAAIoC,OAAMmI,cAAa7F,OAAMmI,MAAU,MAAJlH,GAAU,OAAN,EAAJA,EAAMS,WAAF,EAAJ,EAAYpG,GAAI8M,MAAMnH,EAAKgH,UACzF3M,EAAGuM,EAAgB5K,OAAOiL,GAAYL,EAAgB/R,OAAOoS,IAAarN,MAAK,SAAAyG,GAAC,OAAEvB,mBAAS,OAAQ,CAClG2H,OAAiB,aAAVpG,EAAEtB,KAAoB,kBAAkB,cAC/CG,OAAO,CAAC7E,GAAGgG,EAAEhG,aAInB,kBAACiJ,EAAA,QAAY,CAAC9K,MAAO,SAAUX,MAAO,CAACd,iBAAiB,GAAI8H,QAjCnD,WACRP,EAAWmE,YACVnE,EAAWoE,SAEXpE,EAAWyF,QAAQ,cEsBnBlE,KAAK,iBAETuH,aAAa,CACT5O,MAAM,SACN6F,UDzBO,SAAsB,GAAuD,IAAD,EAArDC,EAAU,EAAVA,WAAYC,EAAK,EAALA,MAC1ClE,EAAU,MAALkE,GAAa,OAAR,EAALA,EAAOW,aAAF,EAAL,EAAe7E,GACnB2F,EAAQC,oBAARD,KACDqH,EAAWC,mBAAsBtH,GACjCM,EAAaxF,EAAuBT,GACpCqG,EAA0BzF,IAC1B2C,EAAcmC,iBAAoB,IAAIwH,KACtCxN,EAAOyG,mBAAQ,WACnB,IAAMgH,EAAY,IAAID,IAAc,MAAVjH,OAAU,EAAVA,EAAYkB,KAAI,SAAAnB,GAAC,OAAEA,EAAEI,SAC/C,OAAe,MAAR4G,OAAQ,EAARA,EAAUI,QAAO,SAAApH,GAAC,OAAGmH,EAAU3J,IAAIwC,EAAEhG,SAC3C,CAACgN,EAAU/G,IAGRa,EAAO,WACR7C,EAAWmE,YACZnE,EAAWoE,SACJrI,EACPyE,mBAAS,aAAc,CAACzE,OAExBiE,EAAWyF,QAAQ,SAGvB,OAAO,kBAACpM,EAAa,CAACK,oBAAqB,CAACR,UAAU,WAC/C,MAAJuC,OAAI,EAAJA,EAAMyH,KAAI,SAAC1D,EAAMmB,GAAK,OAAG,kBAAC,GAAU,CAACgD,IAAKhD,EAAOnB,KAAMA,EAAMF,YAAaA,OAC3E,kBAAC,OAAI,CAAC/F,MAAO,CAAC,CAACrD,MAAM,MAAOoC,cAAc,MAAOqC,QAAQ,IAAM,CAACnD,eAAe,cAC7E,kBAACwN,EAAA,QAAY,CAAC9K,MAAO,OAAQqG,QAAS,WACpC6B,EAAwBxF,OAAO,CAC7B9B,WAAWiB,EACXqN,SAAS,IAAI9J,EAAY/D,WAE3BsH,OAEF,kBAACmC,EAAA,QAAY,CAAC9K,MAAO,SAAUqG,QAASsC,OCNtCtB,KAAK,gBAET8H,cAAc,CACVnP,MAAM,UACN6F,UIhDO,SAAuB,GAEA,IAAD,EADnCC,EAAU,EAAVA,WAAYC,EAAK,EAALA,MAENlE,EAAU,MAALkE,GAAa,OAAR,EAALA,EAAOW,aAAF,EAAL,EAAe7E,GACnB2F,EAAQC,oBAARD,KACDqH,EAAWC,mBAAsBtH,GACjCS,EAAe,MAAR4G,OAAQ,EAARA,EAAUjH,MAAK,SAAAC,GAAC,OAAEA,EAAEhG,IAAIA,KAC/BuM,EAAkBC,wCAYxB,OAJA1S,qBAAU,WACFkG,GAAMoG,IAAS4G,IAPlB/I,EAAWmE,YACVnE,EAAWoE,SAEXpE,EAAWyF,QAAQ,WAMtB,CAACsD,IACG5G,EAAK,kBAACnE,EAAA,QAAI,CAACzE,MAAO,CAACoB,QAAQ,KAEhC,kBAAC2O,GAAA,QAAO,CAAC1C,SAAc,MAAJzE,OAAI,EAAJA,EAAMyE,SAAUzI,KAAU,MAAJgE,OAAI,EAAJA,EAAMhE,OAC/C,kBAAC6G,EAAA,QAAY,CAAC9K,MAAO,mBAAoBqG,QAAS,WAAK,IAAD,EACpD,GAAO,MAAJmB,GAAU,OAAN,EAAJA,EAAMS,OAAN,EAAYpG,IAAM2F,EAAKgH,QAAQ,CAAC,IAAD,EAC1BC,EAAqB,CAACxK,KAAQuD,EAAKS,KAAKhE,KAAI,KAAKgE,EAAKhE,KAAQsC,KAAK,YAAamI,MAAU,MAAJlH,GAAU,OAAN,EAAJA,EAAMS,WAAF,EAAJ,EAAYpG,GAAI8M,MAAMnH,EAAKgH,SACvHJ,EAAgB/R,OAAOoS,GAAYrN,MAAK,SAAAyG,GAAC,OAAEvB,mBAAS,OAAQ,CAAC2H,OAAO,kBAAmBvH,OAAQ,CAAC7E,GAAGgG,EAAEhG,cAGnG,sCJqBFwF,KAAK,mB,4IKhDE,SAASgI,EAAWjQ,GACjC,MAA0BkQ,YAAe,GAAM,WAAjCC,GAAF,KAAU,MACtB,EAA0BD,YAAe,GAAM,WAAxCE,EAAK,KAAEC,EAAQ,KACtB,OACE,gBAAC,UAAS,CACRpQ,MAAO,CAACC,EAAOC,eAAgBH,EAAMI,oBAAsBgQ,EAAO,CAAChT,gBAAgB,oBAAoB,IACvGkT,UAAW,WAAKD,GAAS,IACzBE,WAAY,WAAKF,GAAS,GAAoB,MAAbrQ,EAAMiH,SAANjH,EAAMiH,WAEtCuJ,UAAW,kBAAIL,GAAS,IACxBM,WAAY,kBAAIN,GAAS,KAExB,gBAAC,OAAI,CAAClQ,MAAO,CAACC,EAAOG,UAAWL,EAAMM,iBAClC,gBAAC,OAAI,CAACL,MAAO,CAACC,EAAOc,SAAUhB,EAAMiB,YACjC,gCAAGjB,EAAMkB,aAOzB,IAAMhB,EAASlD,UAAWC,OAAO,CAC/BkD,eAAe,CACbvD,MAAM,OACN2B,SAAS,KACTjB,WAAW,WAEb+C,UAAW,CACPlB,iBAAiB,GACjB/B,gBAAgB,eAElB4D,SAAS,CACPpE,MAAO,OACPyE,QAAS,GACT4D,UAAW,GACX3H,WAAY,SACZY,eAAgB,SAChBwS,kBAAkB,EAClBnR,YAAY+B,UAAO/B,YACnBnC,gBAAgB,kB,4FC/CP,mBAAC4C,GACZ,OAAO,kBAAC,UAAY,OAAKA,EAAK,CAAEC,MAAO,CAACC,EAAOD,MAAOD,EAAMC,WAGhE,IAAMC,EAASlD,UAAWC,OAAO,CAC7BgD,MAAM,CACFtB,aAAa,EACbvB,gBAAiB,cACjBkC,YAAY,M,0JCNdqR,EAAmBC,wBAAuE,CAAC/N,gBAAgB,KAAMgO,gBAAgB,eACvI,EAAyB,yBAAa3E,MAAM,OAAM,WAA3C4E,EAAM,KAAEC,EAAM,KAEfC,EAA4B,SAAH,GAAkE,IAA7DC,EAAK,EAALA,MAAO/P,EAAQ,EAARA,SACzC,EAA6CgQ,KAAwB,SAARJ,EAAgB,MAAM,MAAI,MAAMC,EAAM,iBAAiB,CAClHI,gBAAiB,SAACC,GAAU,OAAK,GACjCC,UAAW,CAAC,gBAAiBJ,KAFvBpO,EAAe,EAAfA,gBAAiBgO,EAAe,EAAfA,gBAIzB,OAAO,kBAACF,EAAiBW,SAAQ,CAACjM,MAAO,CAACxC,kBAAiBgO,oBAC1D3P,IAIUqQ,EAAoB,SAAH,GAAwE,IAAnEC,EAAO,EAAPA,QAAStQ,EAAQ,EAARA,SAC1C,EAA0BjF,mBAAsB,MAAK,WAA9CgV,EAAK,KAAEQ,EAAQ,KAOtB,OANAlV,qBAAU,WACLiV,EACDC,EAAS,MAETC,UAAaC,QAAQ,iBAAiB3P,KAAKyP,KAC7C,CAACD,IACKA,GAAkB,MAAPP,EAAa,oCAAG/P,GAAa,kBAAC8P,EAAyB,CAACC,MAAOA,GAC/E/P,IAIU,qBAEb,OADyB0Q,qBAAWjB,K,oHC9BvB,SAASjB,EAAsBtH,GAE5C,OADiBjF,mBAAS,CAAC,qBAA0B,MAAJiF,OAAI,EAAJA,EAAMgH,UAAW,oBAAAxN,EAAAC,OAAA,mDAAa,MAAJuG,MAAMgH,QAAO,0CAAQyC,gCAA0B,MAAJzJ,OAAI,EAAJA,EAAMgH,UAAQ,8CAAE,GAAE,qGAAhIjN,O,iCCLV,0LASakE,EAAmB,SAACH,EAAqBe,GAAoC,OACtF,kBAAC,UAAU,CAACoD,IAAKnE,EAAKzD,GAAIxB,UAAW,CAACjC,cAAc,MAAOd,eAAe,cAAe+I,QAASA,EAAQ,kBAAIA,EAAQf,SAAMvF,GACxH,kBAAC,UAAa,CAAC6J,KAAM,GAAIvK,MAAO,CAAEvB,cAAe,EAAG+L,YAAY,IAAM5F,KAAK,mBAC3E,kBAAC,UAAI,CAAC5E,MAAO,CAACnC,SAAS,GAAIE,WAAW,QAASkI,EAAKrB,QAI7C,qBACX,IAAOuD,EAAQC,oBAARD,KACDqH,EAAWC,kBAAsBtH,GACvC,OAAO,kBAAC,UAAI,CAACnI,MAAO,CAAC9C,KAAK,EAAGC,gBAAgB,UACxCqS,GAAYA,EAAS7F,KAAI,SAAA1D,GAAI,OAAEG,EAAiBH,GAAM,SAACA,GAAI,OAAGgB,mBAAS,gBAAiB,CAACzE,GAAGyD,EAAKzD,aAInG,IAAMqP,EAAa,kBAAC,UAAsB,CAACtH,KAAM,GAAIvK,MAAO,CAAEvB,cAAe,GAAKmG,KAAK,a,6FCnB/E,SAASkN,IACtB,OAAOC,sB,oQCMIC,EAAmB,SAACjS,GAC/B,MAA0BkQ,IAAMjU,SAAS+D,EAAMqH,OAAS,GAAE,WAAnDA,EAAK,KAAE6K,EAAQ,KAChBC,EAAUC,OAAOD,QAAQnS,EAAM2H,MAC/BI,EAAQ/H,EAAM+H,MACdsK,EAAQD,OAAOE,OAAM,MAAbF,OAAM,CAAQ,IAAE,WAAKD,EAAQvI,KAAI,2BAAE2I,EAAC,KAAE9J,EAAC,mBAAO8J,EAAG9J,EAAE+J,YACjE,OAAO,kBAAC,UAAO,CACbC,aAAc,SAACzS,GACb,OAAO,kBAAC,SAAM,OACRA,EAAK,CACT0S,eAAgB,CAAEtV,gBAAiB,WACnC6C,MAAO,CAAE7C,gBAAgB,SACzBuV,YAAa,QACbC,cAAe,QACfC,WAAY,SAACC,GAAK,OAAGT,EAAMS,EAAMnM,MAAM0D,MACvC0I,WAAY,SAACD,GAAK,OAAQ,MAAL/K,OAAK,EAALA,EAAQoK,EAAQa,WAAU,2BAAET,EAAC,KAAG,YAAIA,GAAKO,EAAMnM,MAAM0D,aAG9E4I,gBAAiB,CAAE5L,QAAO6L,OAAQf,EAAQvI,KAAI,2BAAM,MAAK,CAACS,IAAT,KAAgBzJ,MAAb,KAAqBA,WACzEuS,cAAejB,EACfkB,YAAaC,mBAASjB,OAAOE,OAAM,MAAbF,OAAM,CAAQ,IAAE,WAAKD,EAAQvI,KAAI,2BAAE2I,EAAC,KAAE9J,EAAC,mBAAO8J,EAAG9J,EAAEhC,kBACzEoB,eAAgB7H,EAAM6H,kBAIpByL,EAAY,CAChB,kBAAIpM,mBAAS,oBAAqB,CAACC,KAAK,eACxC,kBAAID,mBAAS,oBAAqB,CAACC,KAAK,YAG3B,sBAAkC,IAAhC0B,EAAI,EAAJA,KACP0K,EAAWC,oBAAXD,OACF3M,EAAa9K,oBACnB,EAA0BG,mBAAS,GAAE,WAA9BoL,EAAK,KAAE6K,EAAQ,KACtB,MAAmB,aAAZtL,EAAwB,kBAAC,UAAI,CAChC3G,MAAO,CACLC,EAAOuT,OACP,CACErW,gBAAiBmW,EAAOG,KACxBC,eAAgBJ,EAAOK,SAI3BC,cAAgC,QAEhC,kBAAC,UAAO,CAACvG,SAAUzE,EAAKyE,SAAUzI,KAAMgE,EAAKhE,OAC7C,kBAAC,UAAI,CAAC5E,MAAO,CAACjB,cAAc,gBACxB,kBAAC,UAAU,CAAC4B,MAAM,IAAIgE,UAAW,CAAC9G,SAAS,IAAKmC,MAAO,CAACtB,aAAa,IAAKsI,QAASqM,EAAUjM,MAEjG,kBAAC,UAAI,CAACyM,kBAAkB,UAAU7T,MAAOC,EAAO+I,SAC9C,kBAACgJ,EAAgB,CAACtK,KAAMoM,aAAYlM,eAAgB,MAAOE,MAAOmK,MAE9D,kBAAC,UAAI,CAACjS,MAAO,CAACrD,MAAM,MAKhC,IAAMsD,EAASlD,UAAWC,OAAO,CAC7BwW,OAAQ,CACN7W,MAAM,IACNoX,UAAW,EACXC,iBAAiB,EACjB1U,YAAY+B,UAAO/B,aAErB0J,QAAS,CACP9L,KAAM,EACN6B,cAAe,OAEjBuI,IAAK,CACDpK,KAAM,EACNG,WAAY,UAEhB4W,MAAO,CACH9S,UAAW,SACXhE,gBAAiB,kB,oyBC7EzB,IAAM+W,EAAY,SAACnU,GAA+C,OAAG,kBAAC0E,EAAA,QAAI,CAACzE,MAAO,CAAC9C,KAAK,EAAGC,gBAAgB,UACtG4C,EAAMmC,KAAKyH,KAAI,SAAC1D,EAAMmB,GAAK,OAAG,kBAAC4I,EAAA,QAAU,CAAC5F,IAAKhD,EAAO/G,eAAgB,CAACnB,iBAAiB,GAAI8B,UAAW,CAAC3D,WAAW,cAAe2J,QAASf,EAAKe,SAC7I,kBAACtC,EAAA,QAAI,CAAC1E,MAAO,CAACmU,WAAW,KAAMlO,EAAKrB,YAK7B,GACXwP,UAAU,WACN,IAAOjM,EAAQC,oBAARD,KACD2G,EAAcxG,kBAAwBH,GAC5C,OAAO,kBAAC,EAAS,CAACjG,MAAO4M,GAAe,IAAInF,KAAI,SAAA1D,GAAI,cAAOA,GAAI,IAAEe,QAAQ,kBAAIC,mBAAS,aAAc,CAACzE,GAAGyD,EAAKzD,cAEjH6R,MAAM,WACF,IAAOlM,EAAQC,oBAARD,KACD2G,EAAcnD,kBAAoBxD,GACxC,OAAO,kBAAC,EAAS,CAACjG,MAAO4M,GAAe,IAAInF,KAAI,SAAA1D,GAAI,cAAOA,GAAI,IAAEe,QAAQ,kBAAIC,mBAAS,cAAe,CAACzE,GAAGyD,EAAKzD,e,kBCWzG8R,EAAgB,kBAACC,EAAA,QAAQ,CAAChK,KAAM,GAAIvK,MAAO,CAAEvB,cAAe,GAAKmG,KAAK,Y,SChBtE4P,EAAY,kBAACC,EAAA,QAAY,CAAClK,KAAM,GAAIvK,MAAO,CAAEvB,aAAc,GAAKmG,KAAK,mBCZrE+C,EAAa,CACtB+M,OAAO,CACH/T,MAAM,SACN6F,UAAUmO,UACVpC,KAAKV,cAET+C,OAAO,CACHjU,MAAM,YACN6F,UFPO,WACX,IAAO2B,EAAQC,oBAARD,KACD2G,EAAcxG,kBAAwBH,GACtC0M,GAAS,IAAIC,MAAQC,cAAcjL,MAAM,EAAG,IAClD,OAAO,kBAACrF,EAAA,QAAI,CAACzE,MAAO,CAAC9C,KAAK,EAAGC,gBAAgB,UAC7B,MAAX2R,OAAW,EAAXA,EAAanF,KAAI,SAAC1D,EAAMmB,GAAS,IAAD,MACvB2C,EAAwB,OAApB,EAAG9D,EAAK+O,mBAAY,EAAjB,EAAmBnL,QAAQC,MAAM,EAAE,IAChD,OAAO,kBAACkG,EAAA,QAAU,CAAC5F,IAAKhD,EAAOpG,UAAW,CAACjC,cAAc,MAAOd,eAAe,iBAAkB+I,QAAS,kBAAIC,mBAAS,aAAc,CAACzE,GAAGyD,EAAKzD,OAC1I,kBAACiC,EAAA,QAAI,CAACzE,MAAO,CAACjB,cAAc,QACxB,kBAACkW,EAAA,QAAW,CAAC1K,KAAM,GAAIvK,MAAO,CAAEvB,cAAe,EAAG+L,YAAY,IAAM5F,KAAK,UACzE,kBAACH,EAAA,QAAI,KACD,kBAACA,EAAA,QAAI,CAACzE,MAAO,CAACjB,cAAc,QACxB,kBAAC2F,EAAA,QAAI,CAAC1E,MAAO,CAACnC,SAAS,KAAMoI,EAAKrB,MAClC,kBAACF,EAAA,QAAI,CAAC1E,MAAO,CAACnC,SAAS,GAAImO,QAAS,GAAKvE,YAAY,IAAKxB,EAAKiP,eAEnE,kBAACxQ,EAAA,QAAI,CAAC1E,MAAO,CAACnC,SAAS,GAAImO,QAAS,KAAwB,OAAnB,EAAE/F,EAAK+O,mBAAY,EAAjB,EAAmBhM,WAGtE,kBAACvE,EAAA,QAAI,KACD,kBAACC,EAAA,QAAI,CAAC1E,MAAO,CAACnC,SAAS,GAAImO,QAAS,GAAK7K,UAAU,UAAW4I,GAAM8K,EAAuB,OAAlB,EAAC5O,EAAK+O,mBAAY,EAAjB,EAAmBnL,QAAQC,MAAM,GAAG,IAAIC,GAClH,kBAACrF,EAAA,QAAI,CAAC1E,MAAO,CAACnC,SAAS,GAAIsD,UAAU,UAAW8E,EAAKkP,aAAalP,EAAKkP,aAAa,YEZhG5C,KAAK+B,GAETc,SAAS,CACLzU,MAAM,QACN6F,UDZO,WACX,IAAO2B,EAAQC,oBAARD,KACD2G,EAAcnD,kBAAoBxD,GACxC,OAAO,kBAAC1D,EAAA,QAAI,CAACzE,MAAO,CAAC9C,KAAK,EAAGC,gBAAgB,UAC7B,MAAX2R,OAAW,EAAXA,EAAanF,KAAI,SAAA1D,GAAI,OAAE,kBAAC+J,EAAA,QAAU,CAAC5F,IAAKnE,EAAKzD,GAAIxB,UAAW,CAACjC,cAAc,MAAOd,eAAe,cAAe+I,QAAS,kBAAIC,mBAAS,cAAe,CAACzE,GAAGyD,EAAKzD,OAC3J,kBAACyS,EAAA,QAAW,CAAC1K,KAAM,GAAIvK,MAAO,CAAEvB,cAAe,EAAG+L,YAAY,IAAM5F,KAAK,SACzE,kBAACF,EAAA,QAAI,CAAC1E,MAAO,CAACnC,SAAS,GAAIE,WAAW,QAASkI,EAAKrB,YCOxD2N,KAAKiC,IASAV,EAAa,CACtBc,OAAO,CACHjU,MAAM,YACN6F,UAAU0N,EAAUE,UACpB7B,KAAK+B,GAETc,SAAS,CACLzU,MAAM,QACN6F,UAAU0N,EAAUG,MACpB9B,KAAKiC,K,4FCjCE,WAACzU,GAAkB,OAC9B,gBAAC0E,EAAA,QAAI,CAACzE,MAAO,CAACrD,MAAM,OAAQD,OAAO,IAAKuB,eAAe,eAAgBZ,WAAW,WAC9E,gBAAC,SAAOqH,KAAI,CAAC1E,MAAO,CAAC7C,gBAAgBkE,UAAOgU,QAAS9K,KAAM,GAAI0J,MAAOlU,EAAM6E,KAAKqH,MAAM,KAAKtC,KAAI,SAAAnB,GAAC,OAAEA,EAAE,MAAI8M,OAAOC,gBAChH,gBAAC7Q,EAAA,QAAI,CAAC1E,MAAO,CAACjC,WAAW,OAAQF,SAAS,KAAMkC,EAAM6E,MACtD,gBAACF,EAAA,QAAI,CAAC1E,MAAO,CAACjC,WAAW,SAAUF,SAAS,KAAMkC,EAAMsN,YCLjD,mBAACtN,GACZ,OAAO,kBAAC0E,EAAA,QAAI,CAACzE,MAAO,CAACrD,MAAM,OAAQD,OAAO,MACtC,kBAACqT,EAAYhQ,M,qTCId,SAASyV,EACdzV,EACA0V,GAEA,IAAMC,EAAQ5D,oBACR6D,EAAiB5V,EAAM2V,GAE7B,OAAIC,GAGKtU,UAAOqU,GAAOD,GAYlB,SAAS/Q,EAAK3E,GACnB,IAAQC,EAAgDD,EAAhDC,MAAOQ,EAAyCT,EAAzCS,WAAYC,EAA6BV,EAA7BU,UAAcmV,EAAU,IAAK7V,EAAK,GACvDnC,EAAQ4X,EAAc,CAAEK,MAAOrV,EAAYsV,KAAMrV,GAAa,QAEpE,OAAO,gBAAC,UAAW,KAACT,MAAO,CAAC,CAAEpC,SAASoC,IAAY4V,IAG9C,SAASnR,EAAK1E,GACnB,IAAQC,EAAgDD,EAAhDC,MAAOQ,EAAyCT,EAAzCS,WAAYC,EAA6BV,EAA7BU,UAAcmV,EAAU,IAAK7V,EAAK,GACvD5C,EAAkBqY,EAAc,CAAEK,MAAOrV,EAAYsV,KAAMrV,GAAa,cAE9E,OAAO,gBAAC,UAAW,KAACT,MAAO,CAAC,CAAE7C,mBAAmB6C,IAAY4V,M,+oBChC/DzD,OAAO4D,OAAO7H,SAAO8H,SAAQ,SAAAxN,GAAC,OAAEA,EAAER,KAAOiO,eAAiBzN,EAAER,QAE5C,WACdkO,SAAU,CAAC3J,UAAgB,MAC3B4J,OAAQ,CACNC,QAAQ,EAAD,CACLC,KAAM,CACJD,QAAQ,EAAD,OACF9P,QACA6G,SAAK,IACRmJ,SAAU,MAEZtO,KAdS,gBAgBRkG,Y,+JCrBHqI,EAAmC,CACrCC,QAFS,oCAGTC,iBAAiB,EACjBC,QAAS,IAEPC,EAASC,UAAM5Z,OAAOuZ,GAE5BI,EAAOE,aAAaC,QAAQC,KACxB,SAAAZ,GACI,OAAOA,KAEX,SAAAa,GACI,OAAOC,QAAQC,OAAOF,MAI9BL,EAAOE,aAAaM,SAASJ,KACzB,SAAAI,GAII,OAAOA,KAEX,SAAAH,GASI,OAR8B,MAA1BA,EAAMG,SAASC,QACfC,IAAWtV,MAAK,SAAMiP,GAAK,kGACP2F,EAAOW,KAAK,sBAAuB,CAACtG,SAAQ,CAAC0F,QAAQ,CAAC,cAAgB,OAAK,OAC3E,MADVa,EAAC,QACDH,QAA4B,KAAXG,EAAErV,MACrBsP,EAAS+F,EAAErV,MACd,+DAGF+U,QAAQC,OAAOF,MAIvB,IAAMxF,EAAW,SAAOR,GAAiB,kEACa,GAAzD2F,EAAOa,SAASd,QAAuB,cAAC,OAAU1F,GAC9CA,EAAM,CAAD,yCACCS,UAAagG,QAAQ,gBAAiBzG,IAAM,6BAElDS,UAAaiG,WAAW,iBAAgB,6DAEnCL,EAAW,WAAH,kGACG5F,UAAaC,QAAQ,kBAAgB,OACA,OADnDV,EAAK,OACX2F,EAAOa,SAASd,QAAuB,cAAC,OAAU1F,EAAO,kBAClDA,GAAK,6DAGD2F,a,gCCjDf,8KAQMgB,EAAgB1H,cAEf,SAAShJ,EAASrC,EAAayC,GAAc,IAAD,IAC7CA,IACmB,OAArB,EAAAsQ,EAAc3V,UAAd,EAAuBiF,SAASrC,EAAMyC,IACnB,OAArB,EAAAsQ,EAAc3V,UAAd,EAAuBiF,SAASrC,GAGnB,SAASgT,EAAW,GAAoD,IAAlDC,EAAW,EAAXA,YACnC,OACE,gBAAC,UAAmB,CAClBC,IAAKH,EACLI,cAAe,CAACC,UAAW,SAACpR,EAASF,GAAW,MAAM,gBACtDuR,QAAUC,EAAQC,UAAYD,EAAQC,SAAmB,cAAGzX,EAAU0X,UACtE1C,MAAuB,SAAhBmC,EAAyBQ,UAAYC,WAC5C,gBAAC,UAAa,QAKnB,SAASC,GACN,QAAU7X,IAAN6X,GAAmC,MAAhBA,EAAEC,OAAO,GAAa,CACzC,IAAIC,EAAUF,EAAEC,OAAO1O,MAAM,GAAGmC,MAAM,KAAKtC,KAAI,SAAS+O,GACxD,OAAOA,EAAExM,QAAQ,SAAU,QACxBoJ,KAAK,KACRnZ,OAAOwc,QAAQC,aAAa,KAAM,GAC9BL,EAAEM,SAAS/O,MAAM,GAAI,GAAK2O,EAAUF,EAAEO,OANjD,CASC3c,OAAO4c,UAET,IAAMC,EAAiB,CAAC,iCAClBC,EAAWC,IAAEC,MAAMC,SACzBA,QAAQC,KAAO,SAACC,GACZ,IAAID,GAAO,EACPC,aAAmBnH,OACvBkH,GAAO,EAEPL,EAAehD,SAAQ,SAAC5Q,GAChBkU,EAAQC,SAAWD,EAAQC,QAAQnU,KAAW,IAC9CiU,GAAO,MAIXA,GACAJ,EAASI,KAAKC,K,0NCtDP,SAASE,EAAe,GAEA,IADrC/S,EAAU,EAAVA,WAEA,OACE,gBAAChC,EAAA,QAAI,CAACzE,MAAOC,EAAOG,WAClB,gBAACsE,EAAA,QAAI,CAAC1E,MAAOC,EAAOU,OAAO,8BAC3B,gBAACsN,EAAA,QAAgB,CAACjH,QAAS,kBAAMP,EAAWyF,QAAQ,eAAelM,MAAOC,EAAOoM,MAC/E,gBAAC3H,EAAA,QAAI,CAAC1E,MAAOC,EAAOwZ,UAAU,wBAMtC,IAAMxZ,EAASlD,UAAWC,OAAO,CAC/BoD,UAAW,CACTlD,KAAM,EACNC,gBAAiB,OACjBE,WAAY,SACZY,eAAgB,SAChBmD,QAAS,IAEXT,MAAO,CACL9C,SAAU,GACVE,WAAY,QAEdsO,KAAM,CACJ1O,UAAW,GACXO,gBAAiB,IAEnBub,SAAU,CACR5b,SAAU,GACVD,MAAO,a,sHCvBE8b,EAAkB,SAAMC,GAAyB,4FAC5C/C,UAAMgD,IAAI,yBAAyBD,EAAanX,GAAE,IAAKmX,IAAa,uCAAEzX,MAAI,6D,ikBCN5F,IAAM2X,EAAiBC,EAAQ,KAEzB1P,EAAMyP,EAAeE,kBACrBC,EAAkB,0CAAwB/N,MAAM,IAAItC,KAAI,SAACnB,EAAGyR,GAAC,OAAKzR,EAAE0R,WAAW,GAAK9P,EAAI8P,WAAWD,IAAIE,SAAS,IAAIC,SAAS,EAAG,QAAM9E,KAAK,IAC3I+E,EAAMC,UAASC,cAAc,EAAD,KAAKV,GAAc,IAAEW,OAAO,6CAExDC,EAAYH,UAASG,UAAUJ,GAErCI,EAAUC,WAAU,SAACC,GACnB,GAAM,iBAAkBxe,QAGnB,GAAgC,YAA5Bye,aAAaC,WAA0B,CAC9C,IAAMxQ,EAAcyQ,KAAKC,MAAMJ,EAAQzY,KAAkB,aAAG,GAC5D,IAAI0Y,aAAaD,EAAQzY,KAAK8Y,aAAc,CAAEC,KAASN,EAAQzY,KAAK0C,KAAI,KAAKyF,EAAYrB,gBAJzFkS,MAAM,yDAQV,IAAMC,EAAkBxK,wBAAkE,CAACyK,QAAO,EAAOC,UAAU,eActGC,EAAmB,SAAH,GAA8E,IAAzEra,EAAQ,EAARA,SAAU2H,EAAI,EAAJA,KACpC2S,EAAWrT,mBACjB,EAAwClM,qBAA4B,WAA7D2d,EAAY,KAAE6B,EAAe,KAC9BJ,EAASzS,mBAAQ,mBAAkB,MAAZgR,KAAc3I,SAAQ,CAAC2I,IA4BpD,OAnBArd,qBAAU,WACR,IAAImf,GAAU,EAgBd,OAfG7S,GA1Bc,WAAH,oGACSgS,aAAac,qBAAmB,OAAzC,GACG,YADH,OACY,2CACcC,UAAUC,cAAcC,SAAY3D,yCAAmD8B,IAAkB,OACnF,OADxD8B,EAAyB,OAC/B1C,QAAQ2C,IAAI,gBAAiBD,EAA0BE,OAAO,oBACnCvB,EAAUpD,SAAS,CAACyE,4BAA2BG,SAAS,6FAAwB,QAAzF,KAAZC,EAAY,QACD,CAAD,yCACPA,GAAY,sCAEhBxb,GAAS,6DAkBZyb,GAAepa,MAAK,SAACqa,GACnBb,EAASvZ,QAAUoa,EDpDI,SAAOC,GAAc,kGAC5BzF,UAAM1a,IAAI,wCAAwCmgB,IAAU,OAAO,OAAjFna,EAAI,OAAyEA,KAAI,kBAChFA,EAAKE,OAAOF,EAAK,QAAGxB,GAAS,4DCmDhC4b,CAAgB1T,EAAKpG,IAAIT,MAAK,SAAAwa,GAC5B,IAAMC,EAA0B,SAACC,GAC3BhB,GAAQD,EAAgBiB,IAExBzL,OAAWtQ,GAAH0b,EAAa,KAAKA,OACpB1b,GAAR6b,EDrDkB,SAAM5C,GAAyB,4FAC7C/C,UAAMU,KAAK,yBAA0BqC,IAAa,uCAAEzX,MAAI,4DCqD9Dwa,CAAiB,CAAC9T,KAAKA,EAAKpG,GAAI0E,KAAK,MAAO8J,UAAQjP,KAAKya,GAEzD9C,EAAgB,EAAD,KAAK6C,GAAI,IAAEvL,WAAQjP,KAAKya,SAIxC,WAAKf,GAAQ,KACpB,IACM7S,EAAqB,kBAACuS,EAAgB9J,SAAQ,CAACjM,MAAO,CAACgW,SAAQC,UA3BrD,SAACD,GACdxS,GAAQ+Q,GACTD,EAAgB,EAAD,KAAKC,GAAY,IAAE3I,MAAMoK,QAA0B1a,GAAlB6a,EAASvZ,QAAmB,KAAKuZ,EAASvZ,WAAUD,MAAK,SAACwa,GACxGf,EAAgBe,SAyBnBtb,GADU,oCAAGA,I,SCrDZ0b,EAAOC,oBAEPpb,EAAc,IAAIqb,cAET,SAASC,IACpB,IAAMnW,EAAa9K,oBACbY,EAAWsP,oBAWjB,OACI,kBAACtH,EAAA,QAAI,CAACzE,MAAO,CAACtD,OAAOD,GAAyB,OAAfG,UAASC,GAAYV,OAAO4gB,YAAY,SACnE,kBAAC,eAAY,KACT,kBAAC,sBAAmB,CAACC,OAAQxb,GAGrB,kBAACmb,EAAKM,UAAS,CACXC,KAAM,QACNC,WAAY,SACZC,cAAe,CACXC,UAAU,CAAClgB,gBAAgB,SAC3BmgB,kBAAkB,EAClBC,sBAAuBC,yBAAuBC,iBAGlD,kBAACd,EAAKe,OAAM,CAAC9Y,KAAK,OAAO4B,UAAWmX,EAAe/W,QAAS,CAACgX,aAAY,KACxEzL,OAAOD,QAAQhE,SAAOvE,KAAI,2BAAES,EAAG,KAAEwE,EAAM,YAAI,kBAAC+N,EAAKe,OAAM,CAACtT,IAAKA,EAAKxF,KAAMwF,EAAK5D,UAAWoI,EAAOpI,UAAWI,QAAS,CAChHjG,MAAOiO,EAAOjO,MACdkd,iBAAgC,aAAdlX,EAA0B,oBAAoB,qBAShG,IAAM0P,EAAOuG,oBAeb,SAASe,IACL,IAAMhX,EAAa9K,oBACbY,EAAWsP,oBACV5D,EAAQC,oBAARD,KACD+J,EAAUvJ,mBAAQ,WACpB,YAAkBjI,IAAdyH,EAAKS,KACE,IACXwQ,QAAQ2C,IAAI,iBAAkB5T,EAAKS,MAC5BuJ,OAAOD,QAAsB,OAAd/J,EAAKS,KAAcuE,QAAM7G,WAChD,CAAC6B,IACJ,YAAoBzH,IAAZyH,EAAKS,KAAiB,kBAACnE,EAAA,QAAI,CAACzE,MAAO,CAACjB,cAAc,MAAO7B,KAAK,IACjEiL,EAAKS,KAAK,kBAACkV,EAAA,QAAe,CAAClV,KAAMT,EAAKS,YAAQlI,EAC/C,kBAAC+D,EAAA,QAAI,CAACzE,MAAO,CAAC9C,KAAK,IACf,kBAAC,EAAgB,CAAC0L,KAAMT,EAAKS,MACzB,kBAAC,oBAAiB,CAAC2I,QAAuB,OAAdpJ,EAAKS,WAA+BlI,IAAdyH,EAAKS,MACnD,kBAACyN,EAAK4G,UAAS,CACXG,cAAe,gBAAE3W,EAAU,EAAVA,WAAYC,EAAK,EAALA,MAAK,MAAK,CACnCqX,YAAY,CAAC5gB,gBAAgBkE,UAAOgU,OAAQ3Y,OAAOD,EAAS,QAAGiE,GAC/Dsd,iBAAiB,CAACpgB,MAAM,SACxBqgB,WAAW,kBAhCvC,SAAoBxX,EAAgBC,EAAWC,EAAmBlK,GAC9D,IAAMyhB,GAAkF,GAAhE,CAAC,aAAc,eAAenL,WAAU,SAAAvK,GAAC,OAAEA,GAAK9B,EAAM9B,QAO9E,MAAgB,YAAZ+B,GAA0BuX,EACnB,kBAAC,mBAAgB,CAAClX,QAPd,WACPP,EAAWmE,YACXnE,EAAWoE,SACNqT,GACLzX,EAAWyF,QAAQ,gBAGmB,kBAACqI,EAAA,QAAQ,CAAChK,KAAM9N,EAAS,GAAG,GAAIuD,MAAO,CAACd,iBAAiBzC,EAAS,GAAG,IAAMmI,KAAK,gBACvH,KAsBgCqZ,CAAWxX,EAAYC,EAAOC,EAAYlK,IACzDoK,YAAY,kBAAI,kBAACC,EAAA,QAAW,OAC5BqX,yBAAyB,CAAChhB,gBAAgB,QAASsT,kBAAkB,EAAGnR,YAAY+B,UAAO/B,aAC3F+d,UAAU,CAACe,WAAW,GACtBd,iBAA6B,YAAZ3W,EACjB4W,sBAAuBC,yBAAuBa,oBAGjDnM,EAAQvI,KAAI,2BAAES,EAAG,KAAEwE,EAAM,YAAI,kBAACyH,EAAKqH,OAAM,CAACtT,IAAKA,EAAKxF,KAAMwF,EAAK5D,UAAWoI,EAAOpI,UAAWI,QAAS,CAAEjG,MAAOiO,EAAOjO,YACtH,kBAAC0V,EAAKqH,OAAM,CAAC9Y,KAAK,WAAW4B,UAAWgT,EAAgB5S,QAAS,CAAEjG,MAAO,gBAKtF,uC,oxBCtGG,SAAS2d,IACtB,IAAMC,ECHO,WACb,MAAgDtO,YAAe,GAAM,WAA9DsO,EAAiB,KAAEC,EAAkB,KAyB5C,OAtBAvO,aAAgB,WAC0B,2DAEA,OAFA,SAEpCwO,yBAAoC,mBAG9BC,YAAe,EAAD,KACfnK,UAASoK,MAAI,IAChB,aAAc7E,EAAQ,SACtB,sDAGFV,QAAQC,KAAK,EAAD,IAAI,OAGS,OAHT,SAEhBmF,GAAmB,GACnBC,cAAyB,mFAK5B,IAEIF,EDvBmBK,GACpB/G,EAAc/F,oBACpB,OAAKyM,EAID,kBAAC,mBAAgB,KACf,kBAAC,UAAU,CAAC1G,YAAaA,IACzB,kBAACgH,EAAA,UAAS,OALP,O,wvBEDX,IAAMC,EAAcnO,wBAA0D,CAACxI,KAAK,GAAIsF,SAAS,eAE3FsR,EAAa,SAACC,EAAwBC,GAC1C,OAAQA,EAAO/X,MACX,IAAK,gBACH,OAAO,EAAP,KACK8X,GAAY,IACflI,QAAQ,CAACzJ,SAAS4R,EAAO5R,SAAUE,SAAS0R,EAAO1R,YAEvD,IAAK,cACH,OAAO,EAAP,KACKyR,GAAY,IACflI,QAAQ,CAACzJ,SAAS,QAASE,SAAS,WAExC,IAAK,gBACD,cACOyR,GAAY,IACfpW,KAAKqW,EAAOrW,KACZkO,aAAQpW,IAEhB,IAAK,eACD,cACOse,GAAY,IACflI,aAAQpW,IAEhB,IAAK,iBACD,cACOse,GAAY,IACflI,QAAQ,OAEhB,IAAK,iBACD,OAAO,EAAP,KACKkI,GAAY,IACfpW,KAAK,KACLkO,aAAQpW,IAEd,QACI,MAAM,IAAIwe,MAAM,0BAA2BD,EAAO/X,QAK/CiY,EAAe,SAAH,GAA6C,IAAxCle,EAAQ,EAARA,SAC5B,EAA8Bme,qBAAWL,EAAa,IAAW,WAA1DM,EAAS,KAAE5R,EAAQ,KACpBtF,EAAOQ,mBAAQ,yBAAK,CACxBC,KAAKyW,EAAUzW,KACfuG,QAAuB,OAAhB,EAAEkQ,EAAUzW,OAAmD,OAA/C,EAAd,EAAgB0W,eAAe/W,MAAK,SAAAgX,GAAC,OAAmB,MAAjBA,EAAEC,uBAA3B,EAAd,EAA+DlQ,SACtE,CAAC+P,IAqBL,OApBA/iB,qBAAU,gBACYoE,IAAjB2e,EAAUzW,KACX6W,uBAAa1d,MAAK,SAAC6G,GACjB6E,EAAS,CAACvG,KAAK,gBAAiB0B,YAC/B8W,OAAM,SAACla,GACR4T,QAAQ2C,IAAIvW,GACZiI,EAAS,CAACvG,KAAK,sBAGM,OAAjBmY,EAAUzW,MAAeyW,EAAUvI,QACzC3J,gBAAMkS,EAAUvI,QAAQzJ,SAAUgS,EAAUvI,QAAQvJ,UAAUxL,MAAK,SAAA6G,GACjE6E,EAAS,CAACvG,KAAK,gBAAiB0B,YAC/B8W,OAAM,WACPjS,EAAS,CAACvG,KAAK,oBAGXmY,EAAUzW,MAA4B,OAApByW,EAAUvI,SAClC6I,mBAAS5d,MAAK,kBAAI0L,EAAS,CAACvG,KAAK,wBAElC,CAACmY,IACG,kBAACP,EAAYzN,SAAQ,CAACjM,MAAO,CAAC+C,OAAMsF,aACxCxM,IAIU,qBAEb,OADoB0Q,qBAAWmN,K,6qCChFpB3R,EAAQ,SAAME,EAAiBE,GAAe,wEAEjC,OADnBF,EAASuS,SAAS,WAAgC,GAAnBrS,EAASnL,SACvCmL,EAAW,SAAO,mBACNqJ,UAAMU,KAAK,mBAAoB,CAACjK,WAAUE,cAAU,OAA7D,GACQ,MADTgK,EAAC,QACFH,OAAa,2CACR5F,mBAAS+F,EAAErV,OAAK,iCACTud,KAAY,sGAIpBE,EAAS,WAAH,4FACTnO,mBAAS,OAAK,iCACPoF,UAAM1a,IAAI,sBAAoB,qGAGlC2jB,EAAc,WAAJ,4FACN1S,EAAM,QAAS,UAAQ,qGAGlC2S,EAAkB,WAAH,oGACIlJ,UAAM1a,IAAI,0CAAwC,0FAAzD,EAA4DgG,KAAI,OAAnE,KAALkD,EAAK,QACEA,EAAMhD,OAAM,0CACdgD,EAAM,IAAE,iCAEZ,MAAI,8DAGFqa,EAAa,WAAH,oGACCpI,sBAAU,OAAnB,GACG,OADH,OACO,yCACP,MAAI,0CAECyI,KAAiB,gDAGpB,GAHoB,0BAGzB9I,EAAK,UACStW,IAAf,KAAEyW,UAA6C,KAAnB,KAAEA,SAASC,OAAW,sDAEhC0I,KAAiB,4EAG9B9I,EAAK,KAAK,QAG+H,MAA3I+I,EAAoC,eAAtB/I,EAAcgJ,MAA0BhJ,EAAcsC,SAAatC,EAAcsC,QAAmB2G,WAAW,eAC7H,CAACjJ,QAAO+I,aAAU,0EAInBG,EAAc,SAAOC,GAAe,4FAC/BvJ,UAAM1a,IAAI,2BAA2BikB,IAAW,uCAAGje,MAAI,6DAG5D0P,EAAwB,SAAOuO,GAAe,4FACzCvJ,UAAM1a,IAAI,uCAAuCikB,IAAW,uCAAGje,MAAI,6DCvDxEke,EAAsB,SAAOD,GAAe,4FACvCvJ,UAAM1a,IAAI,sCAAsCikB,IAAW,uCAAGje,MAAI,6DAGvEme,EAA0B,SAAOhE,GAAc,4FAC1CzF,UAAM1a,IAAI,gEAAgEmgB,IAAU,uCAAGna,MAAI,6DAGhGoe,EAAc,SAAMjY,GAAe,4FAC9BuO,UAAMU,KAAK,oBAAqBjP,IAAQ,uCAAEnG,MAAI,6DAGnDqe,EAAa,SAAMlY,GAAe,4FAC7BuO,UAAMgD,IAAI,oBAAoBvR,EAAQ7F,GAAE,IAAK6F,IAAQ,uCAAEnG,MAAI,6DAGhEse,EAAgB,SAAMjf,GAAiB,4FAC1CqV,UAAMrS,OAAO,oBAAoBhD,EAAU,MAAI,6DAG5CyC,EAAsB,SAAOzC,GAAiB,4FACzCqV,UAAM1a,IAAI,kCAAkCqF,IAAa,uCAAGW,MAAI,6DAGrEgC,EAAY,SAAOqK,GAAe,4FACrCqI,UAAMU,KAAK,gCAAiC/I,IAAM,6DAG/CnK,EAAa,SAAOmK,GAAW,4FAClCqI,UAAM6J,MAAM,yBAAyBlS,EAAM/L,GAAE,UAAW+L,IAAM,6DAG3DjK,EAAqB,SAAOoc,GAAiB,4FAChD9J,UAAMrS,OAAO,yBAAyBmc,EAAU,MAAI,6DAGjDvd,EAAyB,SAAM5B,GAAiB,4FAC3CqV,UAAM1a,IAAI,qCAAqCqF,IAAa,uCAAGW,MAAI,6DAGxEqB,EAA0B,SAAMrB,GAA2C,4FAC9E0U,UAAMU,KAAK,iCAAkC,CAACjP,QAAQnG,EAAKX,WAAYsO,SAAS3N,EAAK2N,YAAU,6DAG5FlM,EAAwB,SAAM+E,GAAgB,4FACjDkO,UAAMrS,OAAO,4BAA4BmE,EAAS,MAAI,6DAGnD5G,EAA0B,SAAOP,EAAmBof,GAAa,wEAC5B,OAAxCC,EAAcD,EAAM,UAAUA,EAAQ,GAAE,mBAChC/J,UAAM1a,IAAI,+CAA+CqF,EAAaqf,IAAc,uCAAE1e,KAAK2e,SAAO,6DAGvG5X,EAAc,SAAOqQ,GAAmB,4FAC3C1C,UAAMU,KAAK,sCAAuCgC,IAAQ,6DAGvDpQ,EAAyB,SAAOwX,GAAiB,4FACpD9J,UAAMrS,OAAO,6BAA6Bmc,EAAU,MAAI,8D,oBC7DlE7G,eAAiB,CACbiH,WAAY,yCACdC,UAAW,yBACXC,cAAe,qCACfjH,kBAAmB,cACnBkH,MAAO,2CACPC,cAAe,gBAGbC,EAAOC,QAAUvH,gB,oBCTrBsH,EAAOC,QAAU,IAA0B,iC,gCCA3C,OAGe,WACbvL,MAAO,CACLhI,KAAM,OACNwT,WAAY,OACZC,KAPmB,UAQnBC,eAAgB,OAChBC,gBATmB,WAWrB1L,KAAM,CACJjI,KAAM,OACNwT,WAAY,OACZC,KAbkB,OAclBC,eAAgB,OAChBC,gBAfkB,QAiBpB7iB,OAAO,CACLf,MAAM,mBACN0B,YAAY,sBACZnC,gBAAgB,WAElBmC,YAAY,UACZ+V,OAAO,UACPoM,MAAM,Y,6rBCpBR,IAAMC,EAAgB,SAAC3hB,GACnB,MAA0B/D,oBAAS,GAAM,WAAlC2lB,EAAK,KAAEzR,EAAQ,KACtB,OAAO,kBAAC,UAAS,CACblJ,QAAS,kBAAIjH,EAAMiH,WAEnBuJ,UAAW,kBAAIL,GAAS,IACxBM,WAAY,kBAAIN,GAAS,IACzBlQ,MAAO,CACH,CACI9B,gBAAgB,EAChBM,kBAAkB,IAEtBuB,EAAMC,MACN2hB,EAAM,CAACxkB,gBAAgB4C,EAAMnC,OAAO,KAEpC,kBAAC,UAAI,CAACgkB,YAAY,EAAO5hB,MAAO,CAAC,CAACnC,SAAS,IAAKkC,EAAM4E,YAAa5E,EAAMY,SAItE,mBAACZ,GACZ,IAAM8hB,EAAM,KACRjkB,MAAMyD,UAAO1C,OAAOf,OACjBmC,GAAK,IACRC,MAAM,CACFC,EAAOD,MACPD,EAAMC,OAEV2E,UAAU,CACN1E,EAAO4N,KAAM9N,EAAM4E,aAG3B,OAAO,kBAAC+c,EAAkBG,IAG9B,IAAM5hB,EAASlD,UAAWC,OAAO,CAC7BgD,MAAM,CACFtB,aAAa,EACbY,YAAY+B,UAAO1C,OAAOW,YAC1BD,YAAY,EACZlC,gBAAgBkE,UAAO1C,OAAOxB,iBAElC0Q,KAAK,CACDjQ,MAAM,QACNuD,UAAU,SACVpD,WAAW,U,2KC7CJ,SAAS4N,EAAoBxD,GAE1C,OADiBjF,mBAAS,CAAC,mBAAwB,MAAJiF,OAAI,EAAJA,EAAMgH,UAAW,oBAAAxN,EAAAC,OAAA,mDAAa,MAAJuG,MAAMgH,QAAO,0CAAQiR,8BAAwB,MAAJjY,OAAI,EAAJA,EAAMgH,UAAQ,8CAAE,GAAE,qGAA5HjN,KAIH,SAAS4J,IACd,IAAMtK,EAAcC,2BACdzE,EAASsG,sBAAYgd,cAAa,CACtC9c,UAAW,kBAAMhC,EAAYiC,kBAAkB,uBAE3CU,EAASb,sBAAYid,aAAY,CACrC/c,UAAW,kBAAMhC,EAAYiC,kBAAkB,uBAE3CY,EAAUf,sBAAYkd,gBAAe,CACzChd,UAAW,kBAAMhC,EAAYiC,kBAAkB,uBAGjD,MAAO,CAAEzG,OAAOA,EAAO8kB,YAAa3d,OAAOA,EAAO2d,YAAavd,OAAOF,EAAQT,U,8HCbjE,mBAAC7D,GACZ,IAAO0N,EAAYrF,oBAAZqF,SACD9G,EAAa9K,oBACbkmB,EAAmC,CAAC,CAACphB,MAAM,SAAUqG,QAAQ,kBAAIyG,EAAS,CAACvG,KAAK,sBAChF8a,GAAejiB,EAAMgH,MAAM,GAAD,WAAKhH,EAAMgH,OAAUgb,GAAoBA,GAAoBnS,QAAO,SAAApH,GAAC,OAAEA,EAAE7B,YAAYA,QAA8BjG,GAAhB8H,EAAE7B,cACrI,OAAM,kBAAC,UAAI,CAAC3G,MAAO,CAACjB,cAAc,QAC7BijB,EAAYrY,KAAI,SAACnB,EAAE8J,GAAC,OAAG,kBAAC,UAAU,KAAClI,IAAKkI,GAAO9J,EAAC,CAAE7D,UAAW,CAAC/G,MAAM,SAAUA,MAAM,iB,gNCP9E,SAAS0K,EAAwBH,GAC9C,IAAM3G,EAAcC,2BACbmB,EAAmBC,oBAAnBD,gBACCV,EAASgB,mBAAS,wBAAyB,0BAAAvB,EAAAC,OAAA,mDAAa,MAAJuG,GAAU,OAAN,EAAJA,EAAMS,QAAN,EAAYpG,GAAE,0CAAQ6d,kCAAwBlY,EAAKS,KAAKpG,KAAG,8CAAE,GAAE,qGAAnHN,KAcR,OAZA5F,qBAAU,WACa,MAAlBsG,GAC2B,SAAzBA,EAAsB,MACvBpB,EAAYsB,aAAiC,wBAAwB,SAACC,GACpE,OAAa,MAALA,KAAOwF,MAAK,SAAAC,GAAC,OAAEA,EAAEhG,IAAII,EAAsB,KAAM,MAAGG,EAAM,CAACH,EAAsB,MAAC,WAAOG,GAAQ,MAAMkf,MAAK,SAACtgB,EAAGugB,GAAC,OAAGvgB,EAAEa,GAAK0f,EAAE1f,WAO1I,CAACI,IACGV,EAGF,SAAS8M,IACd,IAAMxN,EAAcC,2BAEdzE,EAASsG,sBAAYgd,cAAa,CACtC9c,UAAW,kBAAIhC,EAAYiC,kBAAkB,2BAGzCU,EAASb,sBAAYid,aAAY,CACrC/c,UAAW,kBAAMhC,EAAYiC,kBAAkB,2BAIjD,MAAO,CAAEzG,OAAOA,EAAO8kB,YAAa3d,OAAOA,EAAO2d,gB","file":"static/js/app.160cdf35.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { Dimensions, Keyboard } from 'react-native';\r\n//@ts-ignore\r\nimport useMobileDetect from 'use-mobile-detect-hook';\r\n\r\ntype WindowType = 'portrait' | 'landscape'\r\n\r\nexport default function useResizeWindow() {\r\n  const detectMobile = useMobileDetect();\r\n  const [window, setWindow] = useState(Dimensions.get('window'));\r\n  const onChange = () => setWindow(Dimensions.get('window'))\r\n\r\n  useEffect(() => {\r\n    Dimensions.addEventListener(\"change\", onChange);\r\n    return () => {\r\n      Dimensions.removeEventListener(\"change\", onChange);\r\n    };\r\n  });\r\n  if (detectMobile.isMobile())\r\n    return 'portrait'\r\n  return window.height >= window.width?'portrait':'landscape' as WindowType;\r\n}","import { Platform } from 'react-native';\r\n//@ts-ignore\r\nimport useMobileDetect from 'use-mobile-detect-hook';\r\n\r\nexport default ()=>{\r\n    const detectMobile = useMobileDetect();\r\n    return (detectMobile.isMobile() || Platform.OS == 'android' || Platform.OS == 'ios') as boolean\r\n}","import React, {useState} from 'react';\r\nimport {\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  View,\r\n  StyleSheet,\r\n} from 'react-native';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport useAuthContext from '../../hooks/useAuthContext';\r\n\r\nexport default function LoginScreen({\r\n  navigation\r\n}: StackScreenProps<any, 'Login'>) {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const {dispatch} = useAuthContext()\r\n  const _login = ()=>dispatch({type:'LOGIN_REQUEST', username, password})\r\n\r\n  return (\r\n    <View style={Styles.login_wrapper}>\r\n      <View style={Styles.form}>\r\n        <TextInput\r\n          style={Styles.form_input}\r\n          value={username}\r\n          placeholder={'Username'}\r\n          onChangeText={(text) => setUsername(text)}\r\n          autoCapitalize={'none'}\r\n          keyboardType={'email-address'}\r\n          onSubmitEditing={_login}\r\n        />\r\n        <TextInput\r\n          style={Styles.form_input}\r\n          value={password}\r\n          placeholder={'Password'}\r\n          secureTextEntry\r\n          onChangeText={(text) => setPassword(text)}\r\n          onSubmitEditing={_login}\r\n        />\r\n        <TouchableOpacity onPress={_login}>\r\n          <View style={Styles.button}>\r\n            <Text style={Styles.button_label}>{'Sign in'}</Text>\r\n          </View>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity onPress={() => dispatch({type:\"LOGIN_GUEST\"})}>\r\n          <Text style={Styles.guest_footer_text}>\r\n            {\"Sign in as guest\"}\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      <View style={Styles.login_social}>\r\n        <View style={Styles.login_social_separator}>\r\n          <View style={Styles.login_social_separator_line} />\r\n          <Text style={Styles.login_social_separator_text}>{'text'}</Text>\r\n          <View style={Styles.login_social_separator_line} />\r\n        </View>\r\n        <View style={Styles.login_social_buttons}>\r\n        </View>\r\n      </View>\r\n      {/* <>\r\n        <TouchableOpacity onPress={() => navigate(\"RegistrationScreen\")}>\r\n          <Text style={Styles.login_footer_text}>\r\n            {\"Don't have an account? \"}\r\n            <Text style={Styles.login_footer_link}>{'Sign up'}</Text>\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </> */}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst Styles = StyleSheet.create({\r\n    login_container: {\r\n      flex: 1,\r\n      backgroundColor: '#FFF',\r\n    },\r\n    login_header: {\r\n      alignItems: 'center',\r\n      paddingTop: 30,\r\n      paddingBottom: 50,\r\n      backgroundColor: '#208AEC',\r\n    },\r\n    login_header_logo: {\r\n      width: 220,\r\n      resizeMode: 'contain',\r\n    },\r\n    login_header_text: {\r\n      marginTop: 15,\r\n      color: '#f0f0f0',\r\n      fontSize: 16,\r\n    },\r\n    login_header_text_bold: {\r\n      color: '#fff',\r\n      fontWeight: 'bold',\r\n    },\r\n    login_wrapper: {\r\n      flex: 1,\r\n      justifyContent: 'space-between',\r\n      paddingVertical: 40,\r\n      borderTopRightRadius: 12,\r\n      borderTopLeftRadius: 12,\r\n      marginTop: -10,\r\n      backgroundColor: '#fff',\r\n      alignItems: 'center',\r\n    },\r\n    form: {\r\n      width: '100%',\r\n      maxWidth: 280,\r\n    },\r\n    form_input: {\r\n      height: 44,\r\n      paddingHorizontal: 20,\r\n      marginBottom: 20,\r\n      backgroundColor: '#EDF0F7',\r\n      borderRadius: 50,\r\n    },\r\n    button: {\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      height: 44,\r\n      backgroundColor: '#0065A4',\r\n      borderRadius: 50,\r\n    },\r\n    button_label: {\r\n      color: '#fff',\r\n      fontSize: 16,\r\n    },\r\n    login_social: {\r\n      width: '100%',\r\n      maxWidth: 280,\r\n      marginTop: 20,\r\n    },\r\n    login_social_separator: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n    },\r\n    login_social_separator_line: {\r\n      flex: 1,\r\n      width: '100%',\r\n      height: 1,\r\n      backgroundColor: '#E0E0E0',\r\n    },\r\n    login_social_separator_text: {\r\n      marginHorizontal: 10,\r\n      color: '#808080',\r\n      fontSize: 16,\r\n    },\r\n    login_social_buttons: {\r\n      flexDirection: 'row',\r\n      justifyContent: 'center',\r\n      marginTop: 20,\r\n    },\r\n    login_social_button: {\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      width: 60,\r\n      height: 60,\r\n      marginHorizontal: 12,\r\n      borderWidth: 1,\r\n      borderColor: '#E7E7E7',\r\n      borderRadius: 60,\r\n    },\r\n    login_social_icon: {\r\n      width: 38,\r\n      height: 38,\r\n      resizeMode: 'contain',\r\n    },\r\n    login_social_facebook: {\r\n      backgroundColor: '#4267B2',\r\n      borderColor: '#4267B2',\r\n    },\r\n    login_footer_text: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      color: '#808080',\r\n      fontSize: 14,\r\n    },\r\n    guest_footer_text: {\r\n      flexDirection: 'row',\r\n      alignSelf: 'center',\r\n      color: '#808080',\r\n      fontSize: 15,\r\n      margin: 15\r\n    },\r\n    login_footer_link: {\r\n      color: '#208AEC',\r\n      fontSize: 15,\r\n      fontWeight: 'bold',\r\n    },\r\n  });\r\n  ","import * as React from 'react';\r\nimport { View, Text } from './Themed';\r\nimport { StyleSheet, StyleProp, ViewStyle, TextStyle } from 'react-native';\r\nimport Colors from '../constants/Colors';\r\n\r\nexport type SectionParamList = {\r\n    title?: string,\r\n    titleStyle?:StyleProp<TextStyle>\r\n    outerContainerStyle?:StyleProp<TextStyle>\r\n    containerStyle?:StyleProp<ViewStyle>\r\n    bodyStyle?:StyleProp<ViewStyle>\r\n    subtitle?: string\r\n    withSeparator?: boolean\r\n    children?: React.ReactNode\r\n}\r\n\r\nexport default function CommonSection(props:SectionParamList){\r\n  return (\r\n    <View style={[styles.outerContainer, props.outerContainerStyle]}>\r\n        <View style={[styles.container, props.containerStyle]}>\r\n            {props.withSeparator?<View style={styles.separator} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />:undefined}\r\n            {props.title?<View style={styles.titleView}>\r\n              <Text style={[styles.title, props.titleStyle]}>{props.title}</Text>\r\n              <Text style={styles.subtitle}>{props.subtitle}</Text>\r\n            </View>:undefined}\r\n            <View style={[styles.bodyView, props.bodyStyle]}>\r\n            {props.children}\r\n            </View>\r\n          </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  outerContainer:{\r\n    width:'100%',\r\n    maxWidth:1080,\r\n    alignItems:'stretch',\r\n    backgroundColor:'transparent'\r\n  },  \r\n  container: {\r\n      marginHorizontal:20,\r\n      marginVertical: 10,\r\n      backgroundColor:'transparent',\r\n    },\r\n    titleView:{\r\n      width: '100%',\r\n      flexDirection:'row',\r\n      backgroundColor:'transparent',\r\n      marginBottom:5,\r\n    },\r\n    title: {\r\n      flex:1,\r\n      fontSize: 16,\r\n    },\r\n    subtitle: {\r\n      flex:1,\r\n      fontSize: 12,\r\n      textAlign: 'right',\r\n      marginTop:4\r\n    },\r\n    separator: {\r\n      marginBottom: 20,\r\n      height: 1,\r\n      width: '100%',\r\n    },\r\n    bodyView:{\r\n      width: '100%',\r\n      padding: 20,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      borderWidth:1,\r\n      borderColor:Colors.borderColor,\r\n      borderRadius:6\r\n    }\r\n  });\r\n  ","import { useCallback, useEffect, useState } from \"react\"\r\nimport { InfiniteData, useInfiniteQuery, useMutation, useQueryClient } from \"react-query\"\r\nimport { getMessengerContentList, postMessage, deleteMessengerContent } from \"../../apis\"\r\nimport { MessengerContent } from \"../../types\"\r\nimport useWebsocketContext from \"../useWebsocketContext\"\r\n\r\nexport type MessengerContentPage = {\r\n  next?:MessengerContentPage\r\n  current:MessengerContent[]\r\n}\r\n\r\nexport default function useMessengerContentList(channel_id:number){  \r\n  const queryClient = useQueryClient()\r\n  const { data, fetchNextPage } = useInfiniteQuery<MessengerContentPage>(\r\n    [\"MessengerContentList\", channel_id], \r\n    async({pageParam})=>getMessengerContentList(channel_id, pageParam).then(current=>({current})), \r\n    {\r\n      select:data=>{\r\n        if(data.pages.length > 1)\r\n          data.pages[data.pages.length - 2].next = data.pages[data.pages.length - 1]\r\n        return data;\r\n      },\r\n      getNextPageParam:(lastPage)=>lastPage.current.length?lastPage.current[lastPage.current.length - 1].id:undefined,\r\n      refetchOnReconnect:false,\r\n      refetchOnWindowFocus:false\r\n    }\r\n  )\r\n  const { lastJsonMessage } = useWebsocketContext()\r\n  useEffect(()=>{\r\n    if(lastJsonMessage !=null && lastJsonMessage['type']=='next_message' && lastJsonMessage['data']['channel'] == channel_id){\r\n      queryClient.setQueryData<InfiniteData<MessengerContentPage>>([\"MessengerContentList\", channel_id], (_data)=>{\r\n        if(_data?.pages[0].current && _data?.pages[0].current[0].id != lastJsonMessage['data'].id)\r\n          _data.pages[0].current = [lastJsonMessage['data'], ..._data?.pages[0].current]\r\n        return {...(_data || {pages:[], pageParams:[]})}\r\n      })\r\n    }\r\n  }, [lastJsonMessage])\r\n  return { data, fetchNextPage }\r\n}\r\n\r\nexport function useMessengerContentMutation(){\r\n  // const queryClient = useQueryClient()\r\n  const create = useMutation(postMessage, {\r\n    onSuccess: () => {\r\n      // queryClient.setQueryData(['MessengerContentList'], (data:any) => ({\r\n      //   pages: data.pages.slice(0, 1),\r\n      //   pageParams: data.pageParams.slice(0, 1),\r\n      // }))\r\n      // queryClient.invalidateQueries(\"MessengerContentList\")\r\n    }\r\n  });\r\n  const _delete = useMutation(deleteMessengerContent, {\r\n    onSuccess: (d, variables) => {\r\n      // queryClient.setQueryData(['MessengerContentList'], (data:any) => ({\r\n      //   pages: (data.pages as MessengerContent[][]).map(v=>v.filter(v2=>v2.id != variables)),\r\n      //   pageParams: data.pageParams,\r\n      // }))\r\n    }\r\n  })\r\n  return { create:create.mutate, delete:_delete.mutate }\r\n}","import { useMutation, useQuery, useQueryClient } from \"react-query\";\r\nimport { postBulkMessengerMember, deleteMessengerMember, getMessengerMemberList } from \"../../apis\";\r\n\r\nexport default function useMessengerMemberList(channel_id:number){\r\n  const { data } = useQuery([\"MessengerMemberList\", channel_id] , async()=>await getMessengerMemberList(channel_id))\r\n  return data\r\n}\r\n\r\n\r\nexport function useMessengerMemberMutation(){\r\n  const queryClient = useQueryClient()\r\n  const invite = useMutation(postBulkMessengerMember, {\r\n    onSuccess: ()=>{\r\n      queryClient.invalidateQueries(\"MessengerMemberList\")\r\n    }\r\n  })\r\n\r\n  const leave = useMutation(deleteMessengerMember, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(\"MessengerChannelList\")\r\n      queryClient.invalidateQueries(\"MessengerMemberList\")\r\n    }\r\n  })\r\n  return {invite:invite.mutate, leave:leave.mutate}\r\n}","import React, {useCallback, useRef} from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { StyleSheet, Text, Button, View} from 'react-native';\r\n\r\n\r\nexport default function TabOneScreen({\r\n  navigation\r\n}: StackScreenProps<any, 'TabOne'>) {\r\n  return <View style={{padding:10}}>\r\n    \r\n  </View>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  Panel_Button_Text: {\r\n    textAlign: 'center',\r\n    color: '#fff',\r\n    fontSize: 21\r\n  },\r\n  Panel_Holder: {\r\n    borderWidth: 1,\r\n    borderColor: '#888',\r\n    marginVertical: 5\r\n  }\r\n})","import { useMutation, useQuery, useQueryClient } from \"react-query\"\r\nimport { deleteBoardContent, getBoardContentList, patchBoard, postBoard } from \"../../apis\"\r\n\r\n\r\nexport default function useBoardContentList(channel_id:number){\r\n  const { data } = useQuery([\"BoardContentList\", channel_id] , async()=>await getBoardContentList(channel_id))\r\n  return data\r\n}\r\n\r\nexport function useBoardContentMutation(){\r\n  const queryClient = useQueryClient()\r\n  const create = useMutation(postBoard, {\r\n    onSuccess: () => queryClient.invalidateQueries(\"BoardContentList\")\r\n  });\r\n  const update = useMutation(patchBoard, {\r\n    onSuccess: () => queryClient.invalidateQueries(\"BoardContentList\")\r\n  })\r\n  const _delete = useMutation(deleteBoardContent, {\r\n    onSuccess: () => queryClient.invalidateQueries(\"BoardContentList\")\r\n  })\r\n  return { create:create.mutate, update:update.mutate, delete:_delete.mutate }\r\n}","import React from 'react';\r\n\r\nimport { View, Text, TextProps, StyleProp } from 'react-native';\r\n\r\ntype Props = {\r\n  name: string,\r\n  width?:number,\r\n  children: React.ReactNode\r\n  textStyle?: StyleProp<TextProps>\r\n}\r\n\r\nexport default function RowField(props:Props) {\r\n  return (\r\n    <View style={{flexDirection:'row', alignItems: 'center', justifyContent:'space-between', paddingVertical:5}}>\r\n        <Text style={[{flex:1, paddingHorizontal: 15, fontSize:16}, props.textStyle]}>{props.name}</Text>\r\n        <View style={{\r\n        // backgroundColor: '#171717',\r\n        flex: 6,\r\n        justifyContent: 'center',\r\n        paddingHorizontal: 15,\r\n        }}>\r\n          <View style={{width:props.width}}>\r\n            {props.children}\r\n          </View>\r\n        </View>\r\n    </View>\r\n  )\r\n}","import React, { useEffect, useState } from 'react';\r\n\r\nimport { View, Text, StyleProp, ViewStyle, TextStyle } from 'react-native';\r\n\r\nimport { TextInput } from 'react-native-gesture-handler';\r\nimport RowField from './RowField';\r\n\r\ntype Props = {\r\n  name: string,\r\n  value: any,\r\n  setValue?: (value:any)=>void\r\n  width?:any\r\n  disabled?:boolean\r\n  multiline?:boolean\r\n  minHeight?:number\r\n  textStyle?:StyleProp<TextStyle>\r\n  style?:StyleProp<ViewStyle>\r\n}\r\n\r\nexport default function TextField(props:Props) {\r\n  const [contentHeight, setContentHeight] = useState<number>()\r\n  const minHeight = props.minHeight || 30\r\n  return (\r\n    <RowField name={props.name} width={props.width} textStyle={props.textStyle}>\r\n      <TextInput style={[{\r\n          borderColor:'#d0d7de', \r\n          fontSize:16, \r\n          borderWidth:1, \r\n          borderRadius:6, \r\n          paddingHorizontal:10, \r\n          paddingVertical:3, \r\n          backgroundColor:props.disabled?'#EEE':undefined,\r\n          height:props.multiline?contentHeight:minHeight,\r\n        }, props.style]} editable={!props.disabled} value={props.value} onChangeText={props.setValue}\r\n        onContentSizeChange={props.multiline?(e) => setContentHeight(Math.max(e.nativeEvent.contentSize.height, minHeight) + 2):undefined} \r\n        multiline={props.multiline}\r\n      ></TextInput>\r\n   </RowField>\r\n  )\r\n}","import React, {useState, useEffect, useMemo} from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { StyleSheet } from 'react-native';\r\nimport CommonSection from '../components/CommonSection';\r\nimport { View, Text } from '../components/Themed';\r\nimport CommonButton from '../components/CommonButton';\r\nimport useBoardChannelList from '../hooks/lists/useBoardChannelList';\r\nimport useAuthContext from '../hooks/useAuthContext';\r\nimport { navigate } from '../navigation';\r\nimport useBoardContentList, { useBoardContentMutation } from '../hooks/lists/useBoardContentList';\r\nimport { Board } from '../types';\r\nimport TextField from '../components/TextField';\r\nimport useIsMobile from '../hooks/useIsMobile';\r\n\r\n\r\nexport default function BoardEditScreen({navigation, route}: StackScreenProps<any, 'BoardEdit'>) {\r\n  const id = route?.params?.id\r\n  const channel_id = route?.params?.channel_id\r\n  const {auth} = useAuthContext()\r\n  const boardChannelList = useBoardChannelList(auth)\r\n  const boardContentList = useBoardContentList(channel_id)\r\n  const boardContentMutation = useBoardContentMutation()\r\n  const channel = boardChannelList?.find(v=>v.id==channel_id)\r\n  const board = useMemo(()=>boardContentList?.find(v=>v.id==id)?.board_set[0], [boardContentList])\r\n  const [title, setTitle] = useState('')\r\n  const [content, setContent] = useState('')\r\n  const isMobile = useIsMobile()\r\n  const back = ()=>{\r\n    if(navigation.canGoBack())\r\n        navigation.goBack()\r\n      else{\r\n        navigation.replace('Main')\r\n      }\r\n  }\r\n  useEffect(()=>{\r\n    if (!(channel_id && channel) && boardChannelList)\r\n      back()\r\n  }, [boardChannelList])\r\n  useEffect(()=>{\r\n    if (board){\r\n      setTitle(board.title)\r\n      setContent(board.content)\r\n    }\r\n  }, [board])\r\n  const minWidth = isMobile?270:720\r\n  return <CommonSection outerContainerStyle={{alignSelf:'center'}}>\r\n    <View style={{justifyContent:'space-around'}}>\r\n      <Text style={{fontSize:20}}>Edit Board</Text>\r\n    </View>\r\n    <View style={styles.separator} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />\r\n    <View style={{width:isMobile?'50%':'80%', minWidth}}>\r\n      <TextField name='Channel' disabled={true} value={channel?.name || ''} width={'100%'}/>\r\n      <TextField name='Title' value={title} setValue={setTitle} width={'100%'}/>\r\n      <TextField name='Content' value={content} setValue={setContent} multiline width={'100%'} minHeight={300}/>\r\n    </View>\r\n    <View style={[styles.field, {justifyContent:'flex-end', minWidth}]}>\r\n      <CommonButton title={'save'} onPress={()=>{\r\n        const newBoard:Board = {id:board?.id, title, content};\r\n        id?boardContentMutation.update(newBoard):boardContentMutation.create({...newBoard, user:auth.user?.id, channel:channel_id})\r\n        navigate(\"Main\", {screen:\"BoardScreen\", params: {id:channel_id}})\r\n      }}/>\r\n      <CommonButton title={'cancel'} style={{marginHorizontal:5}} onPress={back}/>\r\n    </View>\r\n  </CommonSection>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  field:{\r\n    width:'50%',\r\n    flexDirection:'row',\r\n    padding:10,\r\n  },\r\n  separator: {\r\n    marginBottom: 20,\r\n    height: 1,\r\n    width: '100%',\r\n  },\r\n})","import React, {useState, useEffect } from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { StyleSheet } from 'react-native';\r\nimport CommonSection from '../components/CommonSection';\r\nimport { View, Text } from '../components/Themed';\r\nimport CommonButton from '../components/CommonButton';\r\nimport useBoardChannelList, { useBoardChannelMutation } from '../hooks/lists/useBoardChannelList';\r\nimport useAuthContext from '../hooks/useAuthContext';\r\nimport { navigate } from '../navigation';\r\nimport { Channel } from '../types';\r\nimport useMessengerChannelList, { useMessengerChannelMutation } from '../hooks/lists/useMessengerChannelList';\r\nimport TextField from '../components/TextField';\r\nimport useIsMobile from '../hooks/useIsMobile';\r\n\r\n\r\nexport default function ChannelEditScreen({navigation, route}: StackScreenProps<any, 'ChannelEdit'>) {\r\n  const id = route?.params?.id\r\n  const type = route?.params?.type\r\n  const {auth} = useAuthContext()\r\n  const channelList = type=='messenger'?useMessengerChannelList(auth):useBoardChannelList(auth)\r\n  const channelMutation = type=='messenger'?useMessengerChannelMutation():useBoardChannelMutation()\r\n  const channel = channelList?.find(v=>v.id==id)\r\n  const [name, setName] = useState('')\r\n  const [description, setDescription] = useState('')\r\n  const isMobile = useIsMobile()\r\n  const back = ()=>{\r\n    if(navigation.canGoBack())\r\n        navigation.goBack()\r\n      else{\r\n        navigation.replace('Main')\r\n      }\r\n  }\r\n  useEffect(()=>{\r\n    if (channel){\r\n      setName(channel.name)\r\n      setDescription(channel?.description || '')\r\n    }\r\n  }, [channel])\r\n  const minWidth = isMobile?270:720\r\n  return <CommonSection outerContainerStyle={{alignSelf:'center'}}>\r\n    <View style={{justifyContent:'space-around'}}>\r\n    <Text style={{fontSize:20}}>Edit Channel - {type}</Text>\r\n    </View>\r\n    <View style={styles.separator} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />\r\n    <View style={{width:'50%', minWidth:450}}>\r\n      <TextField name='Channel Name' value={name} setValue={setName} width={'100%'}/>\r\n      <TextField name='Description' value={description} setValue={setDescription} multiline width={'100%'}/>\r\n    </View>\r\n    <View style={[styles.field, {justifyContent:'flex-end', minWidth}]}>\r\n      <CommonButton title={'save'} onPress={()=>{\r\n        if(auth?.user?.id && auth.groupId){\r\n          const newChannel:Channel = {id, name, description, type, owner:auth?.user?.id, group:auth.groupId};\r\n          (id?channelMutation.update(newChannel):channelMutation.create(newChannel)).then(v=>navigate(\"Main\", {\r\n            screen:v.type == 'messenger'?'MessengerScreen':'BoardScreen',\r\n            params:{id:v.id}\r\n          }))\r\n        }\r\n      }}/>\r\n      <CommonButton title={'cancel'} style={{marginHorizontal:5}} onPress={back}/>\r\n    </View>\r\n  </CommonSection>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  field:{\r\n    width:'50%',\r\n    flexDirection:'row',\r\n    padding:10,\r\n  },\r\n  separator: {\r\n    marginBottom: 20,\r\n    height: 1,\r\n    width: '100%',\r\n  },\r\n})","import React, {useRef,MutableRefObject, useMemo, useState } from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { View, Text } from '../components/Themed';\r\nimport CommonSection from '../components/CommonSection';\r\nimport useAuthContext from '../hooks/useAuthContext';\r\nimport useUserMembershipList from '../hooks/lists/useUserMembershipList';\r\nimport { UserMembership } from '../types';\r\nimport CommonButton from '../components/CommonButton';\r\nimport useMessengerMemberList, { useMessengerMemberMutation } from '../hooks/lists/useMessengerMemberList';\r\nimport { renderMemberItem } from '../tabs/MemberTab';\r\nimport { navigate } from '../navigation';\r\n\r\n\r\nconst InviteItem = (props:{item:UserMembership, selectedRef:MutableRefObject<Set<number>>})=>{\r\n  const [selected, setSelected] = useState(props.selectedRef.current.has(props.item.id))\r\n  return <View style={selected?{borderWidth:1, borderColor:'blue'}:{}}>\r\n    {renderMemberItem(props.item, (item)=>{\r\n      if (selected){\r\n        setSelected(false)\r\n        props.selectedRef.current.delete(item.id)\r\n      }\r\n      else{\r\n        setSelected(true)\r\n        props.selectedRef.current.add(item.id)\r\n      }\r\n    })}\r\n  </View>\r\n\r\n}\r\n\r\nexport default function InviteScreen({navigation, route}: StackScreenProps<any, 'Invite'>) {\r\n  const id = route?.params?.id\r\n  const {auth} = useAuthContext()\r\n  const userList = useUserMembershipList(auth)\r\n  const memberList = useMessengerMemberList(id)\r\n  const messengerMemberMutation = useMessengerMemberMutation()\r\n  const selectedRef = useRef<Set<number>>(new Set())\r\n  const data = useMemo(()=>{\r\n    const memberSet = new Set(memberList?.map(v=>v.user))\r\n    return userList?.filter(v=>!memberSet.has(v.id))\r\n  }, [userList, memberList])\r\n\r\n\r\n  const back = ()=>{\r\n    if(navigation.canGoBack())\r\n      navigation.goBack()\r\n    else if (id)\r\n      navigate(\"ChatScreen\", {id})\r\n    else\r\n      navigation.replace('Main')\r\n  }\r\n\r\n  return <CommonSection outerContainerStyle={{alignSelf:'center'}}>\r\n    {data?.map((item, index)=><InviteItem key={index} item={item} selectedRef={selectedRef}/>)}\r\n    <View style={[{width:'50%', flexDirection:'row', padding:10,}, {justifyContent:'flex-end'}]}>\r\n      <CommonButton title={'save'} onPress={()=>{\r\n        messengerMemberMutation.invite({\r\n          channel_id:id,\r\n          user_ids:[...selectedRef.current]\r\n        })\r\n        back()\r\n      }}/>\r\n      <CommonButton title={'cancel'} onPress={back}/>\r\n    </View>\r\n  </CommonSection>\r\n}\r\n\r\n","import LoginScreen from \"./main/LoginScreen\";\r\nimport ChatScreen from \"./main/ChatScreen\";\r\nimport HomeScreen from \"./main/HomeScreen\";\r\nimport TabOneScreen from \"./main/TabOneScreen\";\r\nimport BoardScreen from \"./main/BoardScreen\";\r\nimport BoardEditScreen from \"./BoardEditScreen\";\r\nimport ChannelEditScreen from \"./ChannelEditScreen\"\r\nimport { Screens } from \"../types\";\r\nimport InviteScreen from \"./InviteScreen\";\r\nimport ProfileScreen from \"./ProfileScreen\";\r\n\r\nexport const main = {\r\n    HomeScreen:{\r\n        title:'home',\r\n        component:HomeScreen,\r\n        path:'home',\r\n    },\r\n    ChatScreen:{\r\n        title:'chat',\r\n        component:ChatScreen,\r\n        path:'chat'\r\n    },\r\n    BoardScreen:{\r\n        title:'board',\r\n        component:BoardScreen,\r\n        path:'board'\r\n    },\r\n    TabOneScreen:{\r\n        title:'tab one',\r\n        component:TabOneScreen,\r\n        path:'one'\r\n    },\r\n} as Screens\r\n\r\nexport const login = {\r\n    LoginScreen:{\r\n        path: 'login',\r\n        title: '로그인',\r\n        component:LoginScreen\r\n    },\r\n} as Screens\r\n\r\nexport const modal = {\r\n    BoardEditScreen:{\r\n        title:'board',\r\n        component:BoardEditScreen,\r\n        path:'modal/board'\r\n    },\r\n    ChannelEditScreen:{\r\n        title:'channel',\r\n        component:ChannelEditScreen,\r\n        path:'modal/channel'\r\n    },\r\n    InviteScreen:{\r\n        title:'invite',\r\n        component:InviteScreen,\r\n        path:'modal/invite'\r\n    },\r\n    ProfileScreen:{\r\n        title:'profile',\r\n        component:ProfileScreen,\r\n        path:'modal/profile'\r\n    }\r\n} as Screens","import React, {useLayoutEffect} from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { StyleSheet, Text, Button, View} from 'react-native';\r\nimport { Text as StyledText } from 'react-native-paper';\r\nimport {TabViewNavigator} from '../../navigation/DrawerNavigator';\r\nimport useResizeWindow from '../../hooks/useResizeWindow';\r\nimport { bottomTabs } from '../../tabs';\r\nimport { navigate } from '../../navigation';\r\nimport HeaderRight from '../../components/HeaderRight';\r\nimport TextButton from '../../components/TextButton';\r\nimport Colors from '../../constants/Colors';\r\n\r\n// navigate(\"BoardEditScreen\", {channel_id:item.channel, id:item.id})\r\n// deleteBoardContent(item.id).then(()=>navigate('BoardScreen', {id:item.channel}))\r\n\r\nexport default function HomeScreen({navigation, route}: StackScreenProps<any, 'Home'>) {\r\n  const windowType = useResizeWindow();\r\n\r\n  const options = [\r\n    {title:'member', headerRight:()=><HeaderRight/>},\r\n    {title:'messenger', headerRight:()=><HeaderRight extra={[{title:'create', onPress:()=>navigate(\"ChannelEditScreen\", {type:\"messenger\"})}]}/>},\r\n    {title:'board', headerRight:()=><HeaderRight extra={[{title:'create', onPress:()=>navigate(\"ChannelEditScreen\", {type:\"board\"})}]}/>},\r\n    {title:'config', headerRight:()=><HeaderRight/>}\r\n  ]\r\n  \r\n  useLayoutEffect(() => {\r\n    const index = route?.params?.tab | 0\r\n    navigation.setOptions(windowType == 'portrait'?options[index]:{\r\n      title: 'home',\r\n      headerRight: ()=><HeaderRight/>\r\n    });\r\n  }, [navigation, route, windowType]);\r\n  return windowType == 'landscape'?\r\n    <View style={{flex:1, justifyContent:'center', alignItems:'center'}}>\r\n      <View style={{width:'80%', height:'80%'}}>\r\n        <StyledText style={{fontSize:32}}>Kiblack Tok</StyledText>\r\n        <View style={{backgroundColor:Colors.borderColor, height:1, width:'100%'}}/>\r\n        <View style={{flex:1, alignItems:'flex-start'}}>\r\n          <Text style={{fontSize:20, color:'gray'}}>Welcome! This is a messenger & board for teams.</Text>\r\n          <Text style={{fontSize:24}}> </Text>\r\n          <Text style={{fontSize:24, fontWeight:'500'}}>Quick Start</Text>\r\n          <TextButton title='+ New Messenger' textStyle={{fontSize:20}} style={{paddingLeft:0, borderRadius:20}} onPress={()=>navigate(\"ChannelEditScreen\", {type:\"messenger\"})}/>\r\n          <TextButton title='+ New Board' textStyle={{fontSize:20}} style={{paddingLeft:0, borderRadius:20}} onPress={()=>navigate(\"ChannelEditScreen\", {type:\"board\"})}/>\r\n        </View>\r\n      </View>\r\n    </View>:\r\n    <TabViewNavigator tabs={bottomTabs} tabBarPosition=\"bottom\" index={parseInt(route.params?.['tab'] || 0)} onTab={(index)=>{navigation.setParams({tab:index})}}/>\r\n}\r\n\r\n","import React, {useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState} from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { StyleSheet, Text, View} from 'react-native';\r\nimport CommonSection from '../../components/CommonSection';\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\nimport { FlatList, TextInput } from 'react-native-gesture-handler';\r\nimport CommonButton from '../../components/CommonButton';\r\nimport useMessengerContentList, { MessengerContentPage, useMessengerContentMutation } from '../../hooks/lists/useMessengerContent.List';\r\nimport useAuthContext from '../../hooks/useAuthContext';\r\nimport HeaderRight from '../../components/HeaderRight';\r\nimport useMessengerMemberList, { useMessengerMemberMutation } from '../../hooks/lists/useMessengerMemberList';\r\nimport { navigate } from '../../navigation';\r\nimport Colors from '../../constants/Colors';\r\nimport Hyperlink from 'react-native-hyperlink'\r\nimport useMessengerChannelList from '../../hooks/lists/useMessengerChannelList';\r\n\r\nconst marginBottom = 65\r\n\r\nexport default function ChatScreen({navigation, route}: StackScreenProps<any, 'Chat'>) {\r\n  const channel_id = route?.params?.id\r\n  const height = useRef(0)\r\n  const {auth} = useAuthContext()\r\n  const channel = useMessengerChannelList(auth)?.find(v=>v.id==parseInt(channel_id))\r\n  const {data, fetchNextPage } = useMessengerContentList(channel_id)\r\n  const memberList = useMessengerMemberList(channel_id)\r\n  const member_id = useMemo(()=>memberList?.find(v=>v.user == auth.user?.id)?.id, [auth, memberList])\r\n  const messengerMemberMutation = useMessengerMemberMutation()\r\n  const [value, setValue] = useState('')\r\n  const postValue = ()=>{\r\n    contentMutation.create({channel:channel_id, user:auth.user?.id, content:value})\r\n    setValue('')\r\n  }\r\n  const contentMutation = useMessengerContentMutation()\r\n\r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      headerRight: ()=> <HeaderRight extra={[\r\n        {title:'invite', onPress:()=>{navigate(\"InviteScreen\", {id:channel_id})}},\r\n        {title:'leave', onPress:()=>{member_id && messengerMemberMutation.leave(member_id);back()}}\r\n      ]}/>,\r\n      title: channel?.name\r\n    });\r\n  }, [navigation, route, member_id]);\r\n\r\n  const renderItem = useCallback(({item, index}:{item:MessengerContentPage, index:number})=>{\r\n    let nextPage = item.next;\r\n    while(nextPage?.next && nextPage.current.length==0){\r\n      nextPage = nextPage.next\r\n    }\r\n    const nextContent = nextPage?.current[0]\r\n    return <View style={{flexDirection: 'column-reverse'}}>\r\n      \r\n      {item.current.map((content, index2)=>{\r\n        const next = index2 + 1 < item.current.length?item.current[index2+1]:nextContent\r\n        const created:string = content.created.slice(0, 16)\r\n        const date = created.slice(0, 10)\r\n        const isSystem = content.user == null\r\n        const isFirst = next==undefined || (content.user != next.user || created != next.created.slice(0, 16))\r\n        const isSelf = auth.user?.id == content.user\r\n        const dayChanged = next==undefined || date != next.created.slice(0, 10)\r\n        if (isSystem)\r\n          return <View key={content.id} style={{flexDirection:'row', justifyContent:'center', width:'100%'}}>\r\n            <Text>{content.message_set[0].content}</Text>\r\n          </View>\r\n        return <View key={content.id}>\r\n          {dayChanged?<View style={{flexDirection:'row', justifyContent:'center', width:'100%'}}><Text>{date}</Text></View>:undefined}\r\n          <View key={content.id} style={{flexDirection:'row', justifyContent:isSelf?'space-between':'flex-start', width:'100%'}}>\r\n            {isFirst && !isSelf?<MaterialIcons size={38} style={{marginBottom: -3, marginRight:10 }} name='account-circle'/>:<View style={{width:48}}/>}\r\n            <CommonSection outerContainerStyle={{width:undefined, maxWidth:'90%'}} title={isFirst?content.name:undefined} titleStyle={{flex:undefined}} bodyStyle={{padding:10}} subtitle={`${created.slice(11)}`}>\r\n              {/* @ts-ignore */}\r\n              <Hyperlink linkDefault={ true } style={{wordBreak:\"break-word\"}} linkStyle={{color: '#12b886'}}>\r\n                <Text>{content.message_set[0].content}</Text>\r\n              </Hyperlink>\r\n            </CommonSection>\r\n          </View>\r\n        </View>\r\n      })}\r\n    </View>\r\n  }, [navigation, contentMutation])\r\n  \r\n  const back = ()=>{\r\n    if(navigation.canGoBack())\r\n        navigation.goBack()\r\n      else{\r\n        navigation.navigate('HomeScreen', {tab:2})\r\n      }\r\n  }\r\n  useEffect(()=>{\r\n    if (!(channel_id))\r\n      back()\r\n  }, [])\r\n\r\n  return <View style={{flex:1, alignItems:'center'}}>\r\n    <FlatList\r\n        style={{width:'100%', flexDirection: 'column-reverse', marginBottom}}\r\n        contentContainerStyle={{padding:10, flexGrow:1, flexDirection: 'column-reverse'}}\r\n        data={data?.pages}\r\n        renderItem={renderItem}\r\n        onScroll={(e)=>{\r\n          if (e.nativeEvent.contentOffset.y + e.nativeEvent.contentSize.height - height.current == 0)\r\n            fetchNextPage()\r\n        }}\r\n        onLayout={(p)=>{height.current = p.nativeEvent.layout.height}}\r\n      />\r\n      <View style={{width:'100%'}}>\r\n        <View style={{position:'absolute', top:-marginBottom, width:'100%', backgroundColor:'white', alignItems:'center'}}>\r\n          <View style={{width:'100%',flexDirection:'row', paddingTop:15, paddingBottom:10, paddingHorizontal:19}}>\r\n            <TextInput value={value} onChangeText={setValue} style={{flex:1, borderWidth:1, height:40, borderRadius:6, borderColor:Colors.borderColor}} onSubmitEditing={postValue}/><CommonButton title={'write'} onPress={postValue}/>\r\n          </View>\r\n        </View>\r\n      </View>\r\n  </View>\r\n}\r\n// outerContainerStyle={{alignContent:'flex-end'}} containerStyle={{width:'50%'}}\r\n","import React, {useCallback, useEffect, useLayoutEffect} from 'react';\r\nimport {FlatList, Image, Linking } from 'react-native';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\nimport Hyperlink from 'react-native-hyperlink'\r\nimport useBoardContentList, { useBoardContentMutation } from '../../hooks/lists/useBoardContentList';\r\nimport CommonSection from '../../components/CommonSection';\r\nimport { View, Text } from '../../components/Themed';\r\nimport CommonButton from '../../components/CommonButton';\r\nimport { BoardContent } from '../../types';\r\nimport HeaderRight from '../../components/HeaderRight';\r\nimport useBoardChannelList, { useBoardChannelMutation } from '../../hooks/lists/useBoardChannelList';\r\nimport useAuthContext from '../../hooks/useAuthContext';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\nimport useIsMobile from '../../hooks/useIsMobile';\r\n\r\n\r\n\r\n\r\nexport default function BoardScreen({navigation, route}: StackScreenProps<any, 'Board'>) {\r\n  const channel_id = route?.params?.id\r\n  const {auth} = useAuthContext()\r\n  const channel = useBoardChannelList(auth)?.find(v=>v.id==parseInt(channel_id))\r\n  const contentList = useBoardContentList(channel_id)\r\n  const boardChannelMutation = useBoardChannelMutation()\r\n  const contentMutation = useBoardContentMutation()\r\n  const isMobile = useIsMobile()\r\n\r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      headerRight: ()=> <HeaderRight extra={[{title:'delete', onPress:()=>{boardChannelMutation.delete(channel_id);back()}}]}/>,\r\n      title: channel?.name\r\n    });\r\n  }, [navigation, route]);\r\n  \r\n  const renderItem = useCallback(({item}:{item:BoardContent})=><CommonSection bodyStyle={{alignItems:'flex-start', paddingHorizontal:'5%'}}>\r\n    <View style={{flexDirection:isMobile?'column': 'row', width:'100%', justifyContent:'space-between'}}>\r\n      <View style={{flexDirection:'row'}}>\r\n        <MaterialIcons size={38} style={{marginBottom: -3, marginRight:10 }} name='account-circle'/>\r\n        <View>\r\n          <Text style={{fontSize:16}}>{item.name}</Text>\r\n          <Text style={{fontSize:14, opacity: 0.4}}>{item.created.split('.')[0].replace('T', ' ')}</Text>\r\n        </View>\r\n      </View>\r\n      <View style={{flexDirection:'row', height:isMobile?'45%':'80%'}}>\r\n        <CommonButton title={'edit'} onPress={()=>navigation.navigate(\"BoardEditScreen\", {channel_id:item.channel, id:item.id})}/>\r\n        <CommonButton title={'delete'} style={{marginHorizontal:5}} onPress={()=> contentMutation.delete(item.id)}/>\r\n      </View>\r\n    </View>\r\n    <Text style={{fontSize:20}}>{item.board_set[0].title}</Text>\r\n    {/* @ts-ignore */}\r\n    <Hyperlink linkDefault={ true } style={{wordBreak:\"break-word\"}} linkStyle={{color: '#12b886'}}>\r\n      <Text style={{fontSize:14}}>{item.board_set[0].content}</Text>\r\n    </Hyperlink>\r\n    {item.link_set.map((link, linkIndex)=><CommonSection key={linkIndex} containerStyle={{marginHorizontal:0}} bodyStyle={{padding:0}}>\r\n      <TouchableOpacity onPress={()=>Linking.openURL(link.url)} style={{flexDirection:'row'}} containerStyle={{width:'100%'}}>\r\n          <Image source={{uri:link.image}} resizeMode=\"cover\" style={{ width:'100%', maxWidth:isMobile?120:150, maxHeight:isMobile?120:150, borderWidth:1}}/>\r\n          <View style={{flex:1, marginHorizontal:20}}>\r\n            <Text style={{fontSize:20}}>{link.title}</Text>\r\n            <Text style={{fontSize:14}}>{link.description}</Text>\r\n            <Text style={{fontSize:12}}>{link.url}</Text>\r\n          </View>\r\n        </TouchableOpacity>\r\n      </CommonSection>\r\n    )}\r\n  </CommonSection>\r\n  , [navigation, contentMutation, isMobile])\r\n  \r\n  const back = ()=>{\r\n    if(navigation.canGoBack())\r\n        navigation.goBack()\r\n      else{\r\n        navigation.navigate('HomeScreen', {tab:2})\r\n      }\r\n  }\r\n  useEffect(()=>{\r\n    if (!(channel_id))\r\n      back()\r\n  }, [])\r\n  return <View style={{flex:1, backgroundColor:'white'}}>\r\n      <FlatList\r\n        data={contentList}\r\n        renderItem={renderItem}\r\n        contentContainerStyle={{flexGrow:1}}\r\n        ListHeaderComponent={()=><CommonSection bodyStyle={{flexDirection:'row', justifyContent:'flex-end', paddingVertical:0, borderWidth:0}}>\r\n            <CommonButton title={'write'} style={{paddingHorizontal:32, paddingBottom:8}} onPress={()=>navigation.navigate(\"BoardEditScreen\", {channel_id})}/>\r\n        </CommonSection>}\r\n      />\r\n  </View>\r\n}\r\n// outerContainerStyle={{alignContent:'flex-end'}} containerStyle={{width:'50%'}}\r\n","import React, {useCallback, useEffect, useRef} from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { StyleSheet, Text, Button, View} from 'react-native';\r\nimport Profile from '../components/Profile';\r\nimport useAuthContext from '../hooks/useAuthContext';\r\nimport useUserMembershipList from '../hooks/lists/useUserMembershipList';\r\nimport { useMessengerChannelMutation } from '../hooks/lists/useMessengerChannelList';\r\nimport CommonButton from '../components/CommonButton';\r\nimport { Channel } from '../types';\r\nimport { navigate } from '../navigation';\r\n\r\n\r\nexport default function ProfileScreen({\r\n  navigation, route\r\n}: StackScreenProps<any, 'Profile'>) {\r\n  const id = route?.params?.id\r\n  const {auth} = useAuthContext()\r\n  const userList = useUserMembershipList(auth)\r\n  const user = userList?.find(v=>v.id==id)\r\n  const channelMutation = useMessengerChannelMutation()\r\n  const back = ()=>{\r\n    if(navigation.canGoBack())\r\n        navigation.goBack()\r\n      else{\r\n        navigation.replace('Main')\r\n      }\r\n  }\r\n  useEffect(()=>{\r\n    if (!(id && user) && userList)\r\n      back()\r\n  }, [userList])\r\n  return user?<View style={{padding:10}}>\r\n    \r\n    <Profile username={user?.username} name={user?.name} />\r\n    <CommonButton title={'create messenger'} onPress={()=>{\r\n      if(auth?.user?.id && auth.groupId){\r\n        const newChannel:Channel = {name:`${auth.user.name}, ${user.name}`, type:'messenger', owner:auth?.user?.id, group:auth.groupId};\r\n        channelMutation.create(newChannel).then(v=>navigate(\"Main\", {screen:\"MessengerScreen\", params: {id:v.id}}))\r\n      }\r\n    }}/>\r\n  </View>:<></>\r\n}\r\n","import * as React from 'react';\r\nimport { View } from './Themed';\r\nimport { StyleSheet, StyleProp, ViewStyle, TextStyle, Pressable } from 'react-native';\r\nimport Colors from '../constants/Colors';\r\n\r\nexport type ItemParamList = {\r\n    outerContainerStyle?:StyleProp<TextStyle>\r\n    containerStyle?:StyleProp<ViewStyle>\r\n    bodyStyle?:StyleProp<ViewStyle>\r\n    children?: React.ReactNode\r\n    onPress?: ()=>void\r\n}\r\n\r\nexport default function CommonItem(props:ItemParamList){\r\n  const [hover, setHover] = React.useState(false)\r\n  const [press, setPress] = React.useState(false)\r\n  return (\r\n    <Pressable\r\n      style={[styles.outerContainer ,props.outerContainerStyle, (press)?{backgroundColor:'rgb(242,242,242)'}:{}]}\r\n      onPressIn={()=>{setPress(true)}}\r\n      onPressOut={()=>{setPress(false);props.onPress?.()}}\r\n       //@ts-ignore\r\n       onHoverIn={()=>setHover(true)}\r\n       onHoverOut={()=>setHover(false)}\r\n    >\r\n        <View style={[styles.container ,props.containerStyle]}>\r\n            <View style={[styles.bodyView, props.bodyStyle]}>\r\n                <>{props.children}</>\r\n            </View>\r\n      </View>\r\n    </Pressable>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  outerContainer:{\r\n    width:'100%',\r\n    maxWidth:1080,\r\n    alignItems:'stretch',\r\n  },  \r\n  container: {\r\n      marginHorizontal:20,\r\n      backgroundColor:'transparent'\r\n    },\r\n    bodyView:{\r\n      width: '100%',\r\n      padding: 10,\r\n      minHeight: 40,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      borderBottomWidth:1,\r\n      borderColor:Colors.borderColor,\r\n      backgroundColor:'transparent'\r\n    }\r\n  });\r\n  ","import React, { useState } from 'react';\r\nimport { StyleSheet} from 'react-native';\r\nimport { CustomButtonProps } from '../types';\r\nimport CommonButton from './CommonButton';\r\n\r\nexport default (props:CustomButtonProps)=>{\r\n    return <CommonButton {...props} style={[styles.style, props.style]}/>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    style:{\r\n        borderRadius:6, \r\n        backgroundColor: 'transparent',\r\n        borderWidth:0\r\n    },\r\n});\r\n","import React, { createContext, useContext, useEffect, useState } from \"react\"\r\nimport useWebSocket from \"react-use-websocket\"\r\nimport { SendJsonMessage } from \"react-use-websocket/dist/lib/types\"\r\n// @ts-ignore\r\nimport {API_URL} from \"@env\"\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\nconst WebSocketContext = createContext<{lastJsonMessage:any, sendJsonMessage:SendJsonMessage }>({lastJsonMessage:null, sendJsonMessage:()=>{}});\r\nconst [SCHEMA, DOMAIN] = `${API_URL}`.split('://')\r\n\r\nconst WebSocketProviderInternal = ({token, children}:{token:string, children:React.ReactNode})=>{\r\n  const { lastJsonMessage, sendJsonMessage } = useWebSocket(`${SCHEMA=='https'?'wss':'ws'}://${DOMAIN}/messenger/ws/`,{\r\n    shouldReconnect: (closeEvent) => true,\r\n    protocols: ['Authorization', token]\r\n  })\r\n  return <WebSocketContext.Provider value={{lastJsonMessage, sendJsonMessage}}>\r\n  {children}\r\n</WebSocketContext.Provider>\r\n}\r\n\r\nexport const WebSocketProvider = ({disable, children}:{disable?:boolean, children:React.ReactNode})=>{\r\n  const [token, setToken] = useState<string|null>(null)\r\n  useEffect(()=>{\r\n    if(disable)\r\n      setToken(null)\r\n    else\r\n      AsyncStorage.getItem('Authorization').then(setToken)   \r\n  },[disable])\r\n  return (disable || token==null)?<>{children}</>:<WebSocketProviderInternal token={token}>\r\n    {children}\r\n  </WebSocketProviderInternal>\r\n}\r\n\r\nexport default ()=>{\r\n  const webSocketContext = useContext(WebSocketContext)\r\n  return webSocketContext\r\n}\r\n\r\n","import { useQuery } from \"react-query\";\r\nimport { getUserMembershipList } from \"../../apis\";\r\nimport { Auth } from \"../useAuthContext\";\r\n\r\nexport default function useUserMembershipList(auth?:Auth){\r\n  const { data } = useQuery([\"UserMembershipList\", auth?.groupId] , async()=>auth?.groupId?(await getUserMembershipList(auth?.groupId)):[])\r\n  return data\r\n}","import { MaterialCommunityIcons, MaterialIcons } from \"@expo/vector-icons\"\r\nimport React from \"react\"\r\nimport { Text, View } from \"react-native\"\r\nimport CommonItem from \"../components/CommonItem\"\r\nimport useAuthContext from \"../hooks/useAuthContext\"\r\nimport useUserMembershipList from \"../hooks/lists/useUserMembershipList\"\r\nimport { UserMembership } from \"../types\"\r\nimport { navigate } from \"../navigation\"\r\n\r\nexport const renderMemberItem = (item:UserMembership, onPress?:(item:UserMembership)=>void)=> (\r\n    <CommonItem key={item.id} bodyStyle={{flexDirection:'row', justifyContent:'flex-start'}} onPress={onPress?()=>onPress(item):undefined}>\r\n        <MaterialIcons size={38} style={{ marginBottom: -3, marginRight:10 }} name='account-circle'/>\r\n        <Text style={{fontSize:20, fontWeight:'400'}}>{item.name}</Text>\r\n    </CommonItem>\r\n)\r\n\r\nexport default ()=>{\r\n    const {auth} = useAuthContext()\r\n    const userList = useUserMembershipList(auth)\r\n    return <View style={{flex:1, backgroundColor:'white'}}>\r\n        {userList && userList.map(item=>renderMemberItem(item, (item)=>navigate(\"ProfileScreen\", {id:item.id})))}\r\n    </View>\r\n}\r\n\r\nexport const MemberIcon = <MaterialCommunityIcons size={32} style={{ marginBottom: -3 }} name='account'/>","import { ColorSchemeName, useColorScheme as _useColorScheme } from 'react-native';\r\n\r\n// The useColorScheme value is always either light or dark, but the built-in\r\n// type suggests that it can be null. This will not happen in practice, so this\r\n// makes it a bit easier to work with.\r\nexport default function useColorScheme(): NonNullable<ColorSchemeName> {\r\n  return _useColorScheme() as NonNullable<ColorSchemeName>;\r\n}\r\n","import { useTheme } from '@react-navigation/native';\r\nimport React, { useState } from 'react';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport { TabView, SceneMap,NavigationState, SceneRendererProps, TabBar } from 'react-native-tab-view';\r\nimport { navigate } from '.';\r\nimport Profile from '../components/Profile';\r\nimport TextButton from '../components/TextButton';\r\nimport Colors from '../constants/Colors';\r\nimport useResizeWindow from '../hooks/useResizeWindow';\r\nimport { drawerTabs } from '../tabs';\r\nimport { UserMembership } from '../types';\r\n\r\nexport const TabViewNavigator = (props:{tabs:typeof drawerTabs, tabBarPosition:\"top\"|\"bottom\", index?:number, onTab?:(index:number)=>void})=>{\r\n  const [index, setIndex] = React.useState(props.index || 0);\r\n  const entries = Object.entries(props.tabs)\r\n  const onTab = props.onTab\r\n  const icons = Object.assign({}, ...entries.map(([k, v])=>({[k]:v.icon})))\r\n  return <TabView\r\n    renderTabBar={(props:SceneRendererProps & {navigationState: NavigationState<any>})=>{\r\n      return <TabBar\r\n        {...props}\r\n        indicatorStyle={{ backgroundColor: \"#2196F3\" }}\r\n        style={{ backgroundColor:'white' }}\r\n        activeColor={'black'}\r\n        inactiveColor={'black'}\r\n        renderIcon={(scene)=>icons[scene.route.key]}\r\n        onTabPress={(scene)=>onTab?.(entries.findIndex(([k, v])=>k == scene.route.key))}\r\n      />\r\n    }}\r\n    navigationState={{ index, routes: entries.map(([k, v])=>({key:k, title:v.title}))}}\r\n    onIndexChange={setIndex}\r\n    renderScene={SceneMap(Object.assign({}, ...entries.map(([k, v])=>({[k]:v.component}))))}\r\n    tabBarPosition={props.tabBarPosition}\r\n  />\r\n}\r\n\r\nconst onAddList = [\r\n  ()=>navigate(\"ChannelEditScreen\", {type:\"messenger\"}),\r\n  ()=>navigate(\"ChannelEditScreen\", {type:\"board\"})\r\n]\r\n\r\nexport default ({user}:{user:UserMembership})=> {\r\n  const { colors } = useTheme();\r\n  const windowType = useResizeWindow();\r\n  const [index, setIndex] = useState(0);\r\n  return windowType=='landscape'?<View\r\n      style={[\r\n        styles.tabBar,\r\n        {\r\n          backgroundColor: colors.card,\r\n          borderTopColor: colors.border,\r\n        },\r\n        // tabBarStyle,\r\n      ]}\r\n      pointerEvents={false ? 'none' : 'auto'}\r\n    >\r\n      <Profile username={user.username} name={user.name}/>\r\n      <View style={{flexDirection:'row-reverse'}}>\r\n          <TextButton title='+' textStyle={{fontSize:20}} style={{borderRadius:20}} onPress={onAddList[index]}/>\r\n      </View>\r\n      <View accessibilityRole=\"tablist\" style={styles.content}>\r\n        <TabViewNavigator tabs={drawerTabs} tabBarPosition={\"top\"} onTab={setIndex}/>\r\n      </View>\r\n    </View>:<View style={{width:0}}></View>\r\n}\r\n\r\n{/*<Text style={[styles.label, { color: d.isFocused ? colors.primary : '#222' }]}></Text> */}\r\n\r\nconst styles = StyleSheet.create({\r\n    tabBar: {\r\n      width:240,\r\n      elevation: 8,\r\n      borderRightWidth:1,\r\n      borderColor:Colors.borderColor\r\n    },\r\n    content: {\r\n      flex: 1,\r\n      flexDirection: 'row',\r\n    },\r\n    tab: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n    },\r\n    label: {\r\n        textAlign: 'center',\r\n        backgroundColor: 'transparent',\r\n      },\r\n  });","import React from \"react\"\r\nimport { View, Text } from \"react-native\"\r\nimport CommonItem from \"../components/CommonItem\"\r\nimport useBoardChannelList from \"../hooks/lists/useBoardChannelList\"\r\nimport useMessengerChannelList from \"../hooks/lists/useMessengerChannelList\"\r\nimport useAuthContext from \"../hooks/useAuthContext\"\r\nimport { navigate } from \"../navigation\"\r\n\r\nconst DrawerTab = (props:{data:{name:string, onPress?:()=>void}[]})=><View style={{flex:1, backgroundColor:'white'}}>\r\n    {props.data.map((item, index)=><CommonItem key={index} containerStyle={{marginHorizontal:0}} bodyStyle={{alignItems:'flex-start'}} onPress={item.onPress}>\r\n        <Text style={{marginLeft:20}}>{item.name}</Text>\r\n    </CommonItem>\r\n    )}\r\n</View>\r\n\r\nexport default {\r\n    Messenger:()=>{\r\n        const {auth} = useAuthContext()\r\n        const channelList = useMessengerChannelList(auth);\r\n        return <DrawerTab data={(channelList || []).map(item=>({...item, onPress:()=>navigate(\"ChatScreen\", {id:item.id})}))}/>\r\n    },\r\n    Board:()=>{\r\n        const {auth} = useAuthContext()\r\n        const channelList = useBoardChannelList(auth);\r\n        return <DrawerTab data={(channelList || []).map(item=>({...item, onPress:()=>navigate(\"BoardScreen\", {id:item.id})}))}/>\r\n    },\r\n}","import { Ionicons, FontAwesome } from \"@expo/vector-icons\"\r\nimport React from \"react\"\r\nimport { Text, View } from \"react-native\"\r\nimport CommonItem from \"../components/CommonItem\"\r\nimport useAuthContext from \"../hooks/useAuthContext\"\r\nimport useMessengerChannelList from \"../hooks/lists/useMessengerChannelList\"\r\nimport { navigate } from \"../navigation\"\r\n\r\nexport default ()=>{\r\n    const {auth} = useAuthContext()\r\n    const channelList = useMessengerChannelList(auth)\r\n    const today = (new Date()).toISOString().slice(0, 10)\r\n    return <View style={{flex:1, backgroundColor:'white'}}>\r\n        {channelList?.map((item, index)=>{\r\n            const date = item.last_message?.created.slice(0,10)\r\n            return <CommonItem key={index} bodyStyle={{flexDirection:'row', justifyContent:'space-between'}} onPress={()=>navigate(\"ChatScreen\", {id:item.id})}>\r\n                <View style={{flexDirection:'row'}}>\r\n                    <FontAwesome size={36} style={{ marginBottom: -3, marginRight:20 }} name='users'/>\r\n                    <View>\r\n                        <View style={{flexDirection:'row'}}>\r\n                            <Text style={{fontSize:18}}>{item.name}</Text>\r\n                            <Text style={{fontSize:18, opacity: 0.4, paddingLeft:5}}>{item.member_count}</Text>\r\n                        </View>\r\n                        <Text style={{fontSize:16, opacity: 0.4}}>{item.last_message?.content}</Text>\r\n                    </View>\r\n                </View>\r\n                <View>\r\n                    <Text style={{fontSize:14, opacity: 0.4, textAlign:'right'}}>{date==today?item.last_message?.created.slice(11,16):date}</Text>\r\n                    <Text style={{fontSize:14, textAlign:'right'}}>{item.unread_count?item.unread_count:' '}</Text>\r\n                </View>\r\n            </CommonItem>\r\n        })}\r\n    </View>\r\n}\r\n\r\nexport const MessengerIcon = <Ionicons size={30} style={{ marginBottom: -3 }} name='chatbox'/>","import { FontAwesome, FontAwesome5 } from \"@expo/vector-icons\"\r\nimport React from \"react\"\r\nimport { Text, View } from \"react-native\"\r\nimport CommonItem from \"../components/CommonItem\"\r\nimport useBoardChannelList from \"../hooks/lists/useBoardChannelList\"\r\nimport useAuthContext from \"../hooks/useAuthContext\"\r\nimport { navigate } from \"../navigation\"\r\n\r\nexport default ()=>{\r\n    const {auth} = useAuthContext()\r\n    const channelList = useBoardChannelList(auth)\r\n    return <View style={{flex:1, backgroundColor:'white'}}>\r\n        {channelList?.map(item=><CommonItem key={item.id} bodyStyle={{flexDirection:'row', justifyContent:'flex-start'}} onPress={()=>navigate(\"BoardScreen\", {id:item.id})}>\r\n            <FontAwesome size={32} style={{ marginBottom: -3, marginRight:10 }} name='bars'/>\r\n            <Text style={{fontSize:20, fontWeight:'400'}}>{item.name}</Text>\r\n        </CommonItem>)}\r\n    </View>\r\n}\r\n\r\nexport const BoardIcon = <FontAwesome5 size={30} style={{ marginBottom: 3 }} name='clipboard-list'/>","import React from \"react\";\r\nimport MemberTab, {MemberIcon} from \"./MemberTab\";\r\nimport OneTab, {ConfigIcon} from \"./OneTab\";\r\nimport DrawerTab  from './DrawerTab';\r\nimport MessengerTab, {MessengerIcon} from \"./MessengerTab\";\r\nimport BoardTab, {BoardIcon}  from \"./BoardTab\";\r\n\r\nexport const bottomTabs = {\r\n    OneTab:{\r\n        title:'member',\r\n        component:MemberTab,\r\n        icon:MemberIcon,\r\n    },\r\n    TwoTab:{\r\n        title:'messenger',\r\n        component:MessengerTab,\r\n        icon:MessengerIcon\r\n    },\r\n    ThreeTab:{\r\n        title:'board',\r\n        component:BoardTab,\r\n        icon:BoardIcon\r\n    },\r\n    // FourTab:{\r\n    //     title:'config',\r\n    //     component:OneTab,\r\n    //     icon:ConfigIcon\r\n    // }\r\n} as Record<string, {title:string, component:React.ComponentType<any>, icon:JSX.Element}>\r\n\r\nexport const drawerTabs = {\r\n    TwoTab:{\r\n        title:'messenger',\r\n        component:DrawerTab.Messenger,\r\n        icon:MessengerIcon\r\n    },\r\n    ThreeTab:{\r\n        title:'board',\r\n        component:DrawerTab.Board,\r\n        icon:BoardIcon\r\n    }\r\n} as Record<string, {title:string, component:React.ComponentType<any>, icon:JSX.Element}>","import * as React from 'react';\r\nimport {View, Text} from 'react-native';\r\nimport { Avatar } from 'react-native-paper';\r\nimport Colors from '../../constants/Colors';\r\nimport { ProfileProps } from '../../types';\r\n\r\nexport default (props:ProfileProps) => (\r\n    <View style={{width:'100%', height:135, justifyContent:'space-evenly', alignItems:'center'}}>\r\n        <Avatar.Text style={{backgroundColor:Colors.header}} size={75} label={props.name.split(' ').map(v=>v[0]).join().toUpperCase()} />\r\n        <Text style={{fontWeight:'bold', fontSize:15}}>{props.name}</Text>\r\n        <Text style={{fontWeight:'normal', fontSize:14}}>{props.username}</Text>\r\n    </View>\r\n);","import React from 'react';\r\nimport {View} from 'react-native'\r\nimport Profile from '../lib/react-native-paper/Profile';\r\nimport { ProfileProps } from '../types';\r\n\r\nexport default (props:ProfileProps)=>{\r\n    return <View style={{width:'100%', height:135}}>\r\n        <Profile {...props}/>\r\n    </View>\r\n}\r\n\r\n","/**\r\n * Learn more about Light and Dark modes:\r\n * https://docs.expo.io/guides/color-schemes/\r\n */\r\n\r\nimport * as React from 'react';\r\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\r\n\r\nimport Colors from '../constants/Colors'\r\nimport useColorScheme from '../hooks/useColorScheme';\r\n\r\nexport function useThemeColor(\r\n  props: { light?: string; dark?: string },\r\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\r\n) {\r\n  const theme = useColorScheme();\r\n  const colorFromProps = props[theme];\r\n\r\n  if (colorFromProps) {\r\n    return colorFromProps;\r\n  } else {\r\n    return Colors[theme][colorName];\r\n  }\r\n}\r\n\r\ntype ThemeProps = {\r\n  lightColor?: string;\r\n  darkColor?: string;\r\n};\r\n\r\nexport type TextProps = ThemeProps & DefaultText['props'];\r\nexport type ViewProps = ThemeProps & DefaultView['props'];\r\n\r\nexport function Text(props: TextProps) {\r\n  const { style, lightColor, darkColor, ...otherProps } = props;\r\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\r\n\r\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\r\n}\r\n\r\nexport function View(props: ViewProps) {\r\n  const { style, lightColor, darkColor, ...otherProps } = props;\r\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\r\n\r\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\r\n}\r\n","/**\r\n * Learn more about deep linking with React Navigation\r\n * https://reactnavigation.org/docs/deep-linking\r\n * https://reactnavigation.org/docs/configuring-links\r\n */\r\n\r\nimport { LinkingOptions } from '@react-navigation/native';\r\nimport * as Linking from 'expo-linking';\r\nimport {main, login, modal} from '../screens';\r\n\r\nconst ROOTPATH = 'kiblack-tok'  // github repository name\r\n\r\nObject.values(modal).forEach(v=>v.path = ROOTPATH + '/' + v.path)\r\n\r\nexport default  {\r\n  prefixes: [Linking.makeUrl('/')],\r\n  config: {\r\n    screens: {\r\n      Main: {\r\n        screens:{\r\n          ...main,\r\n          ...login,\r\n          NotFound: '*',\r\n        },\r\n        path: ROOTPATH\r\n      },\r\n      ...modal\r\n    },\r\n  },\r\n} as LinkingOptions;\r\n","import axios, { AxiosRequestConfig } from 'axios';\r\n// @ts-ignore\r\nimport {API_URL} from \"@env\"\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nconst baseURL =  `${API_URL}/messenger/`\r\nconst defaultOption:AxiosRequestConfig = {\r\n    baseURL,\r\n    withCredentials: true,\r\n    headers: {}\r\n};\r\nconst _axios = axios.create(defaultOption);\r\n\r\n_axios.interceptors.request.use(\r\n    config => {\r\n        return config;\r\n    },\r\n    error => {\r\n        return Promise.reject(error);\r\n    }\r\n)\r\n\r\n_axios.interceptors.response.use(\r\n    response => {\r\n        // if((response.request.responseURL as string).indexOf('/task/login')>=0 && response.data.length != 0){\r\n        //     // redirect login\r\n        // }\r\n        return response;\r\n    },\r\n    error => {\r\n        if (error.response.status === 401) {\r\n            getToken().then(async(token)=>{\r\n                const r = await _axios.post(\"/api-token-refresh/\", {token}, {headers:{'Authorization':''}})\r\n                if (r.status == 200 && r.data !== ''){\r\n                    setToken(r.data)\r\n                }\r\n            })\r\n        }\r\n        return Promise.reject(error)\r\n    }\r\n)\r\n\r\nexport const setToken = async (token:string|null)=>{\r\n    _axios.defaults.headers['Authorization'] = `JWT ${token}`\r\n    if (token)\r\n        await AsyncStorage.setItem(\"Authorization\", token)\r\n    else\r\n        AsyncStorage.removeItem(\"Authorization\")\r\n}\r\nexport const getToken = async ()=>{\r\n    const token = await AsyncStorage.getItem(\"Authorization\")\r\n    _axios.defaults.headers['Authorization'] = `JWT ${token}`\r\n    return token\r\n}\r\n\r\nexport default _axios\r\n","/**\r\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\r\n * https://reactnavigation.org/docs/getting-started\r\n *\r\n */\r\nimport _ from 'lodash';\r\nimport { NavigationContainer, DefaultTheme, DarkTheme, NavigationContainerRef } from '@react-navigation/native';\r\nimport * as React from 'react';\r\nimport { ColorSchemeName } from 'react-native';\r\n\r\nimport LinkingConfiguration from './LinkingConfiguration';\r\nimport RootNavigator from './RootNavigator';\r\n\r\nconst navigationRef = React.createRef<NavigationContainerRef>();\r\n\r\nexport function navigate(name:string, params?:any) {\r\n  if (params)\r\n    navigationRef.current?.navigate(name, params);\r\n  navigationRef.current?.navigate(name);\r\n}\r\n\r\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\r\n  return (\r\n    <NavigationContainer\r\n      ref={navigationRef}\r\n      documentTitle={{formatter: (options, route) => {return `KIBLACK TOK`}}}\r\n      linking={(process.versions && process.versions['electron'])?undefined:LinkingConfiguration}\r\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\r\n      <RootNavigator />\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\n(function(l) {  // for github-page\r\n    if (l !== undefined && l.search[1] === '/' ) {\r\n        var decoded = l.search.slice(1).split('&').map(function(s) { \r\n        return s.replace(/~and~/g, '&')\r\n        }).join('?');\r\n        window.history.replaceState(null, '',\r\n            l.pathname.slice(0, -1) + decoded + l.hash\r\n        );\r\n    }\r\n}(window.location))\r\n    \r\nconst ignoreWarnings = ['ReactNativeFiberHostComponent'];\r\nconst _console = _.clone(console);\r\nconsole.warn = (message: string|Object) => {\r\n    var warn = true;\r\n    if (message instanceof Object)\r\n    warn = false;\r\n    else{\r\n    ignoreWarnings.forEach((value)=>{\r\n        if (message.indexOf && message.indexOf(value) <= -1) {\r\n            warn = false;\r\n        }\r\n    })\r\n    };\r\n    if (warn){\r\n        _console.warn(message);\r\n    }\r\n    else{\r\n        // console.log(message)\r\n    }\r\n};\r\n","import { StackScreenProps } from '@react-navigation/stack';\r\nimport * as React from 'react';\r\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\r\n\r\nexport default function NotFoundScreen({\r\n  navigation,\r\n}: StackScreenProps<any, 'NotFound'>) {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>This screen doesn't exist.</Text>\r\n      <TouchableOpacity onPress={() => navigation.replace('HomeScreen')} style={styles.link}>\r\n        <Text style={styles.linkText}>Go to home screen!</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n  link: {\r\n    marginTop: 15,\r\n    paddingVertical: 15,\r\n  },\r\n  linkText: {\r\n    fontSize: 14,\r\n    color: '#2e78b7',\r\n  },\r\n});\r\n","import { Notification } from '../types';\r\nimport axios from './axios';\r\n\r\nexport const getNotification = async (user_id:number)=>{\r\n    const data = (await axios.get(`/api/v1/notifications/?type=WEB&user=${user_id}`) ).data as Notification[]\r\n    return data.length?data[0]:undefined\r\n}\r\n\r\nexport const postNotification = async(notification:Notification)=>{\r\n    return (await axios.post(`/api/v1/notifications/`, notification)).data as Notification\r\n}\r\n\r\nexport const putNotification = async(notification:Notification)=>{\r\n    return (await axios.put(`/api/v1/notifications/${notification.id}/`, notification)).data as Notification\r\n}","import React, { createContext, useContext, useEffect, useMemo, useRef, useState } from \"react\"\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/messaging\";\r\n//@ts-ignore\r\nimport {FCM_PUBLIC_VAPID_KEY, FCM_API_KEY} from \"@env\"\r\nimport { Notification as NotificationType, UserMembership } from \"../types\";\r\nimport { getNotification, postNotification, putNotification } from \"../apis/notification\";\r\nconst firebaseConfig = require(\"../../web/firebase-config.js\")\r\n// Initialize Firebase\r\nconst key = firebaseConfig.messagingSenderId\r\nconst apiKeyEncrypted = (FCM_API_KEY as string).split('').map((v, i)=> (v.charCodeAt(0) ^ key.charCodeAt(i)).toString(16).padStart(2, '0')).join('')\r\nconst app = firebase.initializeApp({...firebaseConfig, apiKey:FCM_API_KEY});\r\n// const analytics = getAnalytics(app);\r\nconst messaging = firebase.messaging(app);\r\n\r\nmessaging.onMessage((payload) => {\r\n  if (!(\"Notification\" in window)) {\r\n    alert(\"This browser does not support desktop notification\");\r\n  }\r\n  else if (Notification.permission === \"granted\") {\r\n    const message_set = JSON.parse(payload.data['message_set'])[0]\r\n    new Notification(payload.data.channel_name, { body: `${payload.data.name}: ${message_set.content}` });\r\n  }\r\n});\r\n\r\nconst FirebaseContext = createContext<{enable:boolean, setEnable:(enable:boolean)=>void}>({enable:false, setEnable:()=>{}});\r\n\r\nconst requestToken = async()=>{\r\n  const permission = await Notification.requestPermission();\r\n  if (permission === 'granted') {\r\n    const serviceWorkerRegistration = await navigator.serviceWorker.register(`${process.env.PUBLIC_URL}/firebase-messaging-sw.js?${apiKeyEncrypted}`)\r\n    console.log('[SW]: SCOPE: ', serviceWorkerRegistration.scope);\r\n    const currentToken = await messaging.getToken({serviceWorkerRegistration, vapidKey: FCM_PUBLIC_VAPID_KEY })\r\n    if (currentToken)\r\n      return currentToken\r\n  }\r\n  return undefined\r\n}\r\n\r\nexport const FirebaseProvider = ({children, user}:{user?:UserMembership|null, children:React.ReactNode})=>{\r\n  const tokenRef = useRef<string>()\r\n  const [notification, setNotification] = useState<NotificationType>()\r\n  const enable = useMemo(()=>!(notification?.token), [notification])\r\n  const setEnable = (enable:boolean)=>{\r\n    if(user && notification){\r\n      putNotification({...notification, token:enable||tokenRef.current==undefined?null:tokenRef.current}).then((noti)=>{\r\n        setNotification(noti)\r\n      })\r\n    }\r\n  }\r\n  \r\n  useEffect(()=>{\r\n    let isMount = true;\r\n    if(user){\r\n      requestToken().then((t)=>{\r\n        tokenRef.current = t\r\n        getNotification(user.id).then(noti=>{\r\n          const setNotificationInternal = (n:NotificationType)=>{\r\n            if (isMount)setNotification(n)\r\n          }\r\n          const token = t==undefined?null:t\r\n          if (noti == undefined)\r\n            postNotification({user:user.id, type:'WEB', token}).then(setNotificationInternal)\r\n          else\r\n            putNotification({...noti, token}).then(setNotificationInternal)\r\n        })\r\n      })\r\n    }\r\n    return ()=>{isMount=false}\r\n  },[])\r\n  return !user?<>{children}</>:<FirebaseContext.Provider value={{enable, setEnable}}>\r\n    {children}\r\n  </FirebaseContext.Provider>\r\n}\r\n\r\nexport default ()=>{\r\n  const firebaseContext = useContext(FirebaseContext)\r\n  return firebaseContext\r\n}\r\n","import { CardStyleInterpolators, createStackNavigator } from '@react-navigation/stack';\r\nimport React, {useMemo, useState, useEffect} from 'react';\r\nimport { Dimensions, Platform, View } from 'react-native';\r\nimport { QueryClient, QueryClientProvider } from \"react-query\";\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport useResizeWindow from '../hooks/useResizeWindow';\r\nimport NotFoundScreen from '../screens/NotFoundScreen';\r\nimport {main, login, modal} from '../screens';\r\nimport DrawerNavigator from './DrawerNavigator';\r\nimport useAuthContext, {AuthProvider} from '../hooks/useAuthContext';\r\nimport { WebSocketProvider } from '../hooks/useWebsocketContext';\r\nimport HeaderRight from '../components/HeaderRight'\r\nimport Colors from '../constants/Colors';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\nimport useFirebase, { FirebaseProvider } from '../hooks/useFirebaseContext';\r\nimport useIsMobile from '../hooks/useIsMobile';\r\n\r\nconst Root = createStackNavigator();\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nexport default function RootNavigator() {\r\n    const windowType = useResizeWindow();\r\n    const isMobile = useIsMobile()\r\n    // const [height, setHeight] = useState('101%')\r\n    // useEffect(()=>{\r\n    //     if(isMobile && Platform.OS == 'web'){\r\n    //         const onScroll = (e:any)=>{\r\n    //             setHeight('101%')\r\n    //         }\r\n    //         window.addEventListener(\"touchmove\", onScroll)\r\n    //         return () => window.removeEventListener(\"touchmove\", onScroll)\r\n    //     }\r\n    // }, [windowType, isMobile])\r\n    return (\r\n        <View style={{height:isMobile&&Platform.OS == 'web'?window.innerHeight:'100%'}}>\r\n            <AuthProvider>\r\n                <QueryClientProvider client={queryClient}>\r\n                    {/* devtools */}\r\n                    {/* <ReactQueryDevtools initialIsOpen={true} /> */}\r\n                        <Root.Navigator\r\n                            mode= 'modal'\r\n                            headerMode= 'screen'\r\n                            screenOptions={{\r\n                                cardStyle:{backgroundColor:\"white\"},\r\n                                animationEnabled: true,\r\n                                cardStyleInterpolator: CardStyleInterpolators.forVerticalIOS,\r\n                            }}\r\n                        >\r\n                            <Root.Screen name=\"Main\" component={MainNavigator} options={{headerShown:false}}/>\r\n                            {Object.entries(modal).map(([key, screen])=><Root.Screen key={key} name={key} component={screen.component} options={{\r\n                                title: screen.title,\r\n                                gestureDirection: windowType == 'landscape'?'vertical-inverted':'vertical'\r\n                            }} />)}\r\n                        </Root.Navigator>\r\n                </QueryClientProvider>\r\n            </AuthProvider>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst Main = createStackNavigator();\r\n\r\nfunction headerLeft(navigation:any, route:any, windowType:string, isMobile:boolean){\r\n    const canGOBackScreen = ['HomeScreen', 'LoginScreen'].findIndex(v=>v == route.name) == -1\r\n    const goBack = ()=>{\r\n        if (navigation.canGoBack())\r\n            navigation.goBack()\r\n        else if (canGOBackScreen)\r\n            navigation.replace('HomeScreen')\r\n    }\r\n    if (windowType=='portrait' && canGOBackScreen)\r\n        return <TouchableOpacity onPress={goBack}><Ionicons size={isMobile?18:24} style={{marginHorizontal:isMobile?15:20 }} name=\"arrow-back\"/></TouchableOpacity>\r\n    return null\r\n}\r\n\r\nfunction MainNavigator(){\r\n    const windowType = useResizeWindow();\r\n    const isMobile = useIsMobile()\r\n    const {auth} = useAuthContext()\r\n    const entries = useMemo(()=>{\r\n        if (auth.user === undefined)\r\n            return []\r\n        console.log('current user: ', auth.user)\r\n        return Object.entries(auth.user === null?login:main)\r\n    }, [auth])\r\n    return (auth.user!==undefined?<View style={{flexDirection:'row', flex:1}}>\r\n        {auth.user?<DrawerNavigator user={auth.user}/>:undefined}\r\n        <View style={{flex:1}}>\r\n            <FirebaseProvider user={auth.user}>\r\n                <WebSocketProvider disable={auth.user === null || auth.user === undefined}>\r\n                    <Main.Navigator\r\n                        screenOptions={({navigation, route})=>({\r\n                            headerStyle:{backgroundColor:Colors.header, height:isMobile?48:undefined},\r\n                            headerTitleStyle:{color:'white'},\r\n                            headerLeft:()=>headerLeft(navigation, route, windowType, isMobile),\r\n                            headerRight:()=><HeaderRight/>,\r\n                            headerLeftContainerStyle:{backgroundColor:'white', borderBottomWidth:1, borderColor:Colors.borderColor},\r\n                            cardStyle:{flexShrink:1},\r\n                            animationEnabled:windowType=='portrait',\r\n                            cardStyleInterpolator: CardStyleInterpolators.forHorizontalIOS\r\n                        })}\r\n                    >\r\n                        {entries.map(([key, screen])=><Main.Screen key={key} name={key} component={screen.component} options={{ title: screen.title }} />)}\r\n                        <Main.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\r\n                    </Main.Navigator>\r\n                </WebSocketProvider>\r\n            </FirebaseProvider>\r\n        </View>\r\n    </View>:<></>);\r\n}","import React from 'react';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\r\nimport Navigation from './src/navigation';\r\nimport useColorScheme from './src/hooks/useColorScheme';\r\nimport useCachedResources from './src/hooks/useCachedResources';\r\n\r\nexport default function App() {\r\n  const isLoadingComplete = useCachedResources();\r\n  const colorScheme = useColorScheme();\r\n  if (!isLoadingComplete) {\r\n    return null;\r\n  } else {\r\n    return (\r\n      <SafeAreaProvider>\r\n        <Navigation colorScheme={colorScheme} />\r\n        <StatusBar />\r\n      </SafeAreaProvider>\r\n    );\r\n  }\r\n}\r\n","import { Ionicons } from '@expo/vector-icons';\r\nimport * as Font from 'expo-font';\r\nimport * as SplashScreen from 'expo-splash-screen';\r\nimport * as React from 'react';\r\n\r\nexport default function useCachedResources() {\r\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\r\n\r\n  // Load any resources or data that we need prior to rendering the app\r\n  React.useEffect(() => {\r\n    async function loadResourcesAndDataAsync() {\r\n      try {\r\n        SplashScreen.preventAutoHideAsync();\r\n\r\n        // Load fonts\r\n        await Font.loadAsync({\r\n          ...Ionicons.font,\r\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\r\n        });\r\n      } catch (e) {\r\n        // We might want to provide this error information to an error reporting service\r\n        console.warn(e);\r\n      } finally {\r\n        setLoadingComplete(true);\r\n        SplashScreen.hideAsync();\r\n      }\r\n    }\r\n\r\n    loadResourcesAndDataAsync();\r\n  }, []);\r\n\r\n  return isLoadingComplete;\r\n}\r\n","import React, { createContext, useContext, useEffect, useReducer, useMemo, Dispatch } from \"react\"\r\nimport { checkLogin, login, logout } from \"../apis\"\r\nimport { UserMembership } from \"../types\"\r\n\r\ntype AuthAction = {type:string, username?:string, password?:string, user?:UserMembership|null}\r\n\r\nexport type Auth = {user?:UserMembership|null, groupId?:number}\r\n\r\ntype AuthState ={user?:UserMembership|null, request?:{username:string, password:string}|null}\r\n\r\nconst AuthContext = createContext<{auth:Auth, dispatch:Dispatch<AuthAction>}>({auth:{}, dispatch:()=>{}});\r\n\r\nconst authReducer =(initialState:AuthState, action:AuthAction)=>{\r\n  switch (action.type){\r\n      case 'LOGIN_REQUEST':\r\n        return {\r\n          ...initialState,\r\n          request:{username:action.username, password:action.password},\r\n        } as AuthState\r\n      case 'LOGIN_GUEST':\r\n        return {\r\n          ...initialState,\r\n          request:{username:'guest', password:'guest'},\r\n        } as AuthState\r\n      case 'LOGIN_SUCCESS':\r\n          return{\r\n              ...initialState,\r\n              user:action.user,\r\n              request:undefined\r\n          }\r\n      case 'LOGIN_FAILED':\r\n          return{\r\n              ...initialState,\r\n              request:undefined\r\n          }\r\n      case 'LOGOUT_REQUEST':\r\n          return{\r\n              ...initialState,\r\n              request:null\r\n          }\r\n      case 'LOGOUT_SUCCESS':\r\n          return {\r\n            ...initialState,\r\n            user:null,\r\n            request:undefined\r\n          }\r\n      default:\r\n          throw new Error( `Unhandled action type: ${action.type}`)\r\n  }\r\n}\r\n\r\n\r\nexport const AuthProvider = ({children}:{children:React.ReactNode})=>{\r\n  const [authState, dispatch] = useReducer(authReducer, {} as Auth)\r\n  const auth = useMemo(()=>({\r\n    user:authState.user,\r\n    groupId: authState.user?.membership_set.find(g=>g.root_group_id==null)?.group\r\n  }), [authState])\r\n  useEffect(()=>{\r\n    if(authState.user===undefined){\r\n      checkLogin().then((user)=>{\r\n        dispatch({type:\"LOGIN_SUCCESS\", user})\r\n      }).catch((e)=>{\r\n        console.log(e)\r\n        dispatch({type:\"LOGOUT_SUCCESS\"})\r\n      })\r\n    }\r\n    else if(authState.user===null && authState.request){\r\n      login(authState.request.username, authState.request.password).then(user=>{\r\n        dispatch({type:\"LOGIN_SUCCESS\", user})\r\n      }).catch(()=>{\r\n        dispatch({type:\"LOGIN_FAILED\"})\r\n      })\r\n    }\r\n    else if(authState.user && authState.request===null){\r\n      logout().then(()=>dispatch({type:\"LOGOUT_SUCCESS\"}))\r\n    }\r\n  }, [authState])\r\n  return <AuthContext.Provider value={{auth, dispatch}}>\r\n    {children}\r\n  </AuthContext.Provider>\r\n}\r\n\r\nexport default ()=>{\r\n  const authContext = useContext(AuthContext)\r\n  return authContext\r\n}\r\n","\r\nimport { User, UserMembership } from '../types';\r\nimport axios, { getToken, setToken } from './axios';\r\n\r\nexport const login = async(username:string, password:string) => {\r\n    if(username.endsWith('.guest') && password.length == 0)\r\n        password = 'guest'\r\n    const r = await axios.post(\"/api-token-auth/\", {username, password});\r\n    if(r.status == 200){\r\n        await setToken(r.data)\r\n        return await checkLogin()\r\n    }\r\n}\r\n\r\nexport const logout = async() => {\r\n    await setToken(null)\r\n    return await axios.get(\"/api-auth/logout/\")\r\n}\r\n\r\nexport const guestLogin =  async() => {\r\n    return await login('guest', 'guest')\r\n}\r\n\r\nconst checkLoginToken = async ()=>{\r\n    const value = (await axios.get(\"/api/v1/users/memberships/?_self=true\"))?.data\r\n    if (value && value.length){\r\n        return value[0] as UserMembership\r\n    }\r\n    return null\r\n}\r\n\r\nexport const checkLogin = async() => {\r\n    const token = await getToken()\r\n    if (token === null)\r\n        return null\r\n    try{\r\n       return await checkLoginToken()\r\n    }\r\n    catch(e:any){\r\n        let error = e\r\n        if(e.response !== undefined && e.response.status==401){\r\n            try{\r\n                return await checkLoginToken()\r\n            }\r\n            catch(e2){\r\n                error = e2\r\n            }\r\n        }\r\n        const isOffline = ((error as any).code == \"ERR_NETWORK\" || (error as any).message && ((error as any).message as string).startsWith(\"Cannot read\"))\r\n        throw {error, isOffline}\r\n    }\r\n}\r\n\r\nexport const getUserList = async (group_id:number)=>{\r\n    return (await axios.get(`/api/v1/users/?group_id=${group_id}`) ).data as User[]\r\n}\r\n\r\nexport const getUserMembershipList = async (group_id:number)=>{\r\n    return (await axios.get(`/api/v1/users/memberships/?group_id=${group_id}`) ).data as UserMembership[]\r\n}\r\n\r\n// export const getGroup = async (user:User)=>{\r\n//     return (await) axios.get(``)\r\n// }\r\n\r\n","import { Board, EditBoard, BoardContent, Channel, MessengerMember, MessengerContent, EditMessage, MessengerChannel } from '../types';\r\nimport axios from './axios';\r\n\r\nexport const getBoardChannelList = async (group_id:number)=>{\r\n    return (await axios.get(`/api/v1/channels/?type=board&group=${group_id}`) ).data as Channel[]\r\n}\r\n\r\nexport const getMessengerChannelList = async (user_id:number)=>{\r\n    return (await axios.get(`/api/v1/channels/messenger/?type=messenger&messenger_user_id=${user_id}`) ).data as MessengerChannel[]\r\n}\r\n\r\nexport const postChannel = async(channel:Channel)=>{\r\n    return (await axios.post(`/api/v1/channels/`, channel)).data as Channel\r\n}\r\n\r\nexport const putChannel = async(channel:Channel)=>{\r\n    return (await axios.put(`/api/v1/channels/${channel.id}/`, channel)).data as Channel\r\n}\r\n\r\nexport const deleteChannel = async(channel_id:number)=>{\r\n    await axios.delete(`/api/v1/channels/${channel_id}/`)\r\n}\r\n\r\nexport const getBoardContentList = async (channel_id:number)=>{\r\n    return (await axios.get(`/api/v1/boardcontents/?channel=${channel_id}`) ).data as BoardContent[]\r\n}\r\n\r\nexport const postBoard = async (board:EditBoard)=>{\r\n    await axios.post(`/api/v1/boardcontents/boards/`, board)\r\n}\r\n\r\nexport const patchBoard = async (board:Board)=>{\r\n    await axios.patch(`/api/v1/boardcontents/${board.id}/board/`, board)\r\n}\r\n\r\nexport const deleteBoardContent = async (content_id:number)=>{\r\n    await axios.delete(`/api/v1/boardcontents/${content_id}/`)\r\n}\r\n\r\nexport const getMessengerMemberList = async(channel_id:number)=>{\r\n    return (await axios.get(`/api/v1/messengermembers/?channel=${channel_id}`) ).data as MessengerMember[]\r\n}\r\n\r\nexport const postBulkMessengerMember = async(data:{channel_id:number, user_ids:number[]})=>{\r\n    await axios.post(`/api/v1/messengermembers/bulk/`, {channel:data.channel_id, user_ids:data.user_ids})\r\n}\r\n\r\nexport const deleteMessengerMember = async(member_id:number)=>{\r\n    await axios.delete(`/api/v1/messengermembers/${member_id}/`)\r\n}\r\n\r\nexport const getMessengerContentList = async (channel_id:number, id_lt?:number)=>{\r\n    const id_lt_param = id_lt?`&id_lt=${id_lt}`:''\r\n    return (await axios.get(`/api/v1/messengercontents/?limit=30&channel=${channel_id}${id_lt_param}`)).data.results as MessengerContent[]\r\n}\r\n\r\nexport const postMessage = async (message:EditMessage)=>{\r\n    await axios.post(`/api/v1/messengercontents/messages/`, message)\r\n}\r\n\r\nexport const deleteMessengerContent = async (content_id:number)=>{\r\n    await axios.delete(`/api/v1/messengercontents/${content_id}/`)\r\n}","firebaseConfig = {\r\n    authDomain: \"virtual-metrics-355712.firebaseapp.com\",\r\n  projectId: \"virtual-metrics-355712\",\r\n  storageBucket: \"virtual-metrics-355712.appspot.com\",\r\n  messagingSenderId: \"76003576924\",\r\n  appId: \"1:76003576924:web:c8c8a006d07918bbc02a99\",\r\n  measurementId: \"G-SEL35L4N5R\"\r\n}\r\nif (typeof module !== 'undefined') {\r\n    module.exports = firebaseConfig\r\n}","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","const tintColorLight = '#2f95dc';\r\nconst tintColorDark = '#fff';\r\n\r\nexport default {\r\n  light: {\r\n    text: '#000',\r\n    background: '#fff',\r\n    tint: tintColorLight,\r\n    tabIconDefault: '#ccc',\r\n    tabIconSelected: tintColorLight,\r\n  },\r\n  dark: {\r\n    text: '#fff',\r\n    background: '#000',\r\n    tint: tintColorDark,\r\n    tabIconDefault: '#ccc',\r\n    tabIconSelected: tintColorDark,\r\n  },\r\n  button:{\r\n    color:'rgb(242,242,242)',\r\n    borderColor:'rgba(27,31,36,0.15)',\r\n    backgroundColor:'#f6f8fa', //'rgba(9,30,66,0.08)',//rgb(242,242,242)\r\n  },\r\n  borderColor:'#d0d7de',\r\n  header:'#24292f',\r\n  focus:'#0065A4',\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Text, StyleSheet, Pressable, StyleProp, ViewStyle} from 'react-native';\r\nimport Colors from '../constants/Colors';\r\nimport { CustomButtonProps } from '../types';\r\n\r\nconst DefaultButton = (props:CustomButtonProps)=>{\r\n    const [hover, setHover] = useState(false)\r\n    return <Pressable\r\n        onPress={()=>props.onPress()}\r\n        //@ts-ignore\r\n        onHoverIn={()=>setHover(true)}\r\n        onHoverOut={()=>setHover(false)}\r\n        style={[\r\n            {\r\n                paddingVertical:5, \r\n                paddingHorizontal:16\r\n            },\r\n            props.style,\r\n            hover?{backgroundColor:props.color}:{}\r\n        ]}>\r\n            <Text selectable={false} style={[{fontSize:14}, props.textStyle]}>{props.title}</Text>\r\n        </Pressable>\r\n}\r\n\r\nexport default (props:CustomButtonProps)=>{\r\n    const _props = {\r\n        color:Colors.button.color,\r\n        ...props,\r\n        style:[\r\n            styles.style,\r\n            props.style,\r\n        ] as StyleProp<ViewStyle>,\r\n        textStyle:[\r\n            styles.text, props.textStyle\r\n        ]\r\n    }\r\n    return <DefaultButton {..._props}/>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    style:{\r\n        borderRadius:6, \r\n        borderColor:Colors.button.borderColor, \r\n        borderWidth:1, \r\n        backgroundColor:Colors.button.backgroundColor\r\n    },\r\n    text:{\r\n        color:'black', \r\n        textAlign:'center', \r\n        fontWeight:'600'\r\n    }\r\n});\r\n","import { useMutation, useQuery, useQueryClient } from \"react-query\";\r\nimport { deleteChannel, getBoardChannelList, postChannel, putChannel } from \"../../apis\";\r\nimport { Auth } from \"../useAuthContext\";\r\n\r\nexport default function useBoardChannelList(auth?:Auth){\r\n  const { data } = useQuery([\"BoardChannelList\", auth?.groupId] , async()=>auth?.groupId?(await getBoardChannelList(auth?.groupId)):[])\r\n  return data\r\n}\r\n\r\nexport function useBoardChannelMutation(){\r\n  const queryClient = useQueryClient()\r\n  const create = useMutation(postChannel, {\r\n    onSuccess: () => queryClient.invalidateQueries(\"BoardChannelList\")    \r\n  });\r\n  const update = useMutation(putChannel, {\r\n    onSuccess: () => queryClient.invalidateQueries(\"BoardChannelList\")\r\n  })\r\n  const _delete = useMutation(deleteChannel, {\r\n    onSuccess: () => queryClient.invalidateQueries(\"BoardChannelList\")\r\n  })\r\n\r\n  return { create:create.mutateAsync, update:update.mutateAsync, delete:_delete.mutate}\r\n}","import React from 'react'\r\nimport TextButton from \"./TextButton\"\r\nimport useAuthContext from \"../hooks/useAuthContext\"\r\nimport useResizeWindow from '../hooks/useResizeWindow'\r\nimport { View } from 'react-native'\r\n\r\ntype ButtonProps = {title:string, onPress:()=>void, windowType?:'landscape'|'portrait'}\r\n\r\nexport default (props:{extra?:ButtonProps[]})=>{\r\n    const {dispatch} = useAuthContext()\r\n    const windowType = useResizeWindow()\r\n    const defaultButtonProps:ButtonProps[] = [{title:'logout', onPress:()=>dispatch({type:\"LOGOUT_REQUEST\"})}]\r\n    const buttonProps = (props.extra?[...props.extra, ...defaultButtonProps]:defaultButtonProps).filter(v=>v.windowType==windowType || v.windowType == undefined)\r\n    return<View style={{flexDirection:'row'}}>\r\n        {buttonProps.map((v,k)=><TextButton key={k} {...v} textStyle={{color:'white'}} color='#gray'/>)}\r\n    </View>\r\n}\r\n  ","import { useEffect } from \"react\";\r\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\r\nimport { getMessengerChannelList, postChannel, putChannel } from \"../../apis\";\r\nimport { MessengerChannel } from \"../../types\";\r\nimport { Auth } from \"../useAuthContext\";\r\nimport useWebsocketContext from \"../useWebsocketContext\";\r\n\r\nexport default function useMessengerChannelList(auth?:Auth){\r\n  const queryClient = useQueryClient()\r\n  const {lastJsonMessage} = useWebsocketContext()\r\n  const { data } = useQuery(\"MessengerChannelList\" , async()=>auth?.user?.id?(await getMessengerChannelList(auth.user.id)):[])\r\n\r\n  useEffect(()=>{\r\n    if(lastJsonMessage !=null){\r\n      if(lastJsonMessage['type']=='enter'){\r\n        queryClient.setQueryData<MessengerChannel[]>(\"MessengerChannelList\", (_data)=>{\r\n          return (_data?.find(v=>v.id==lastJsonMessage['data']['id'])?_data:[lastJsonMessage['data'] , ...(_data|| [])]).sort((a, b)=>a.id - b.id)\r\n        })\r\n      }\r\n      // if(lastJsonMessage['type']=='leave'){\r\n      //   queryClient.setQueryData<Channel[]>(\"MessengerChannelList\", (_data)=>_data?.filter(v=>v.id!=lastJsonMessage['data']['channel_id']) || [])\r\n      // }\r\n    }\r\n  }, [lastJsonMessage])\r\n  return data\r\n}\r\n\r\nexport function useMessengerChannelMutation(){\r\n  const queryClient = useQueryClient()\r\n\r\n  const create = useMutation(postChannel, {\r\n    onSuccess: ()=>queryClient.invalidateQueries(\"MessengerChannelList\")\r\n  });\r\n\r\n  const update = useMutation(putChannel, {\r\n    onSuccess: () => queryClient.invalidateQueries(\"MessengerChannelList\")\r\n  })\r\n\r\n\r\n  return { create:create.mutateAsync, update:update.mutateAsync}\r\n}"],"sourceRoot":""}