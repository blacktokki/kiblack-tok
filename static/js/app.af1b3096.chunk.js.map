{"version":3,"sources":["src/screens/main/LoginScreen.tsx","src/components/CommonSection.tsx","src/hooks/lists/useMessengerContent.List.ts","src/hooks/lists/useMessengerMemberList.ts","src/screens/main/TabOneScreen.tsx","src/hooks/lists/useBoardContentList.ts","src/components/RowField.tsx","src/components/TextField.tsx","src/screens/BoardEditScreen.tsx","src/screens/ChannelEditScreen.tsx","src/screens/InviteScreen.tsx","src/screens/index.ts","src/screens/main/HomeScreen.tsx","src/screens/main/ChatScreen.tsx","src/screens/main/BoardScreen.tsx","src/screens/ProfileScreen.tsx","src/hooks/useResizeWindow.ts","src/components/CommonItem.tsx","src/hooks/useWebsocketContext.tsx","src/hooks/lists/useUserMembershipList.ts","src/tabs/MemberTab.tsx","src/hooks/useColorScheme.ts","src/components/TextButton.tsx","src/navigation/DrawerNavigator.tsx","src/tabs/DrawerTab.tsx","src/tabs/MessengerTab.tsx","src/tabs/BoardTab.tsx","src/tabs/index.ts","src/lib/react-native-paper/Profile.tsx","src/components/Profile.tsx","src/components/Themed.tsx","src/navigation/LinkingConfiguration.ts","App.tsx","src/hooks/useCachedResources.ts","src/screens/NotFoundScreen.tsx","src/navigation/RootNavigator.tsx","src/apis/axios.ts","src/apis/account.ts","src/apis/messenger.ts","src/navigation/index.tsx","src/hooks/useAuthContext.tsx","src/assets/fonts/SpaceMono-Regular.ttf","src/constants/Colors.ts","src/components/CommonButton.tsx","src/components/HeaderRight.tsx","src/hooks/lists/useBoardChannelList.ts","src/hooks/lists/useMessengerChannelList.ts"],"names":["Styles","StyleSheet","create","login_container","flex","backgroundColor","login_header","alignItems","paddingTop","paddingBottom","login_header_logo","width","resizeMode","login_header_text","marginTop","color","fontSize","login_header_text_bold","fontWeight","login_wrapper","justifyContent","paddingVertical","borderTopRightRadius","borderTopLeftRadius","form","maxWidth","form_input","height","paddingHorizontal","marginBottom","borderRadius","button","button_label","login_social","login_social_separator","flexDirection","login_social_separator_line","login_social_separator_text","marginHorizontal","login_social_buttons","login_social_button","borderWidth","borderColor","login_social_icon","login_social_facebook","login_footer_text","guest_footer_text","alignSelf","margin","login_footer_link","CommonSection","props","style","styles","outerContainer","outerContainerStyle","container","containerStyle","withSeparator","separator","lightColor","darkColor","undefined","title","titleView","titleStyle","subtitle","bodyView","bodyStyle","children","marginVertical","textAlign","padding","Colors","useMessengerContentList","channel_id","queryClient","useQueryClient","useInfiniteQuery","a","async","pageParam","getMessengerContentList","then","current","select","data","pages","length","next","getNextPageParam","lastPage","id","refetchOnReconnect","refetchOnWindowFocus","fetchNextPage","lastJsonMessage","useWebsocketContext","useEffect","setQueryData","_data","pageParams","useMessengerMemberList","useQuery","getMessengerMemberList","useMessengerMemberMutation","invite","useMutation","postBulkMessengerMember","onSuccess","invalidateQueries","leave","deleteMessengerMember","mutate","Panel_Button_Text","Panel_Holder","useBoardContentList","getBoardContentList","useBoardContentMutation","postBoard","update","patchBoard","_delete","deleteBoardContent","delete","RowField","View","Text","textStyle","name","TextField","useState","contentHeight","setContentHeight","disabled","multiline","editable","value","onChangeText","setValue","onContentSizeChange","e","nativeEvent","contentSize","field","InviteItem","selectedRef","has","item","selected","setSelected","renderMemberItem","add","main","HomeScreen","component","navigation","route","windowType","useResizeWindow","options","headerRight","HeaderRight","extra","onPress","navigate","type","useLayoutEffect","index","params","tab","setOptions","tabs","bottomTabs","tabBarPosition","parseInt","onTab","setParams","path","ChatScreen","useRef","auth","useAuthContext","memberList","member_id","useMemo","find","v","user","messengerMemberMutation","postValue","contentMutation","channel","content","postMessage","deleteMessengerContent","d","variables","useMessengerContentMutation","back","renderItem","useCallback","nextPage","nextContent","map","index2","created","slice","date","isSystem","isFirst","isSelf","dayChanged","key","message_set","MaterialIcons","size","marginRight","canGoBack","goBack","contentContainerStyle","flexGrow","onScroll","contentOffset","y","onLayout","p","layout","position","top","onSubmitEditing","CommonButton","BoardScreen","contentList","boardChannelMutation","useBoardChannelMutation","opacity","split","replace","board_set","FlatList","ListFooterComponent","TabOneScreen","login","LoginScreen","username","setUsername","password","setPassword","dispatch","_login","TextInput","placeholder","text","autoCapitalize","keyboardType","secureTextEntry","TouchableOpacity","modal","BoardEditScreen","boardChannelList","useBoardChannelList","boardContentList","boardContentMutation","board","setTitle","setContent","newBoard","screen","ChannelEditScreen","channelList","useMessengerChannelList","channelMutation","useMessengerChannelMutation","setName","description","setDescription","groupId","newChannel","owner","group","InviteScreen","userList","useUserMembershipList","Set","memberSet","filter","user_ids","ProfileScreen","Profile","Dimensions","get","window","setWindow","onChange","addEventListener","removeEventListener","CommonItem","React","setHover","press","setPress","onPressIn","onPressOut","onHoverIn","onHoverOut","minHeight","borderBottomWidth","WebSocketContext","createContext","sendJsonMessage","WebSocketProviderInternal","useWebSocket","shouldReconnect","closeEvent","Provider","WebSocketProvider","disable","useContext","getUserMembershipList","MemberIcon","useColorScheme","_useColorScheme","TabViewNavigator","setIndex","entries","Object","icons","assign","k","icon","renderTabBar","indicatorStyle","activeColor","inactiveColor","renderIcon","scene","onTabPress","findIndex","navigationState","routes","onIndexChange","renderScene","SceneMap","onAddList","colors","useTheme","tabBar","card","borderTopColor","border","pointerEvents","accessibilityRole","drawerTabs","elevation","borderRightWidth","label","DrawerTab","marginLeft","Messenger","Board","MessengerIcon","Ionicons","BoardIcon","FontAwesome5","OneTab","MemberTab","TwoTab","today","Date","toISOString","last_message","FontAwesome","paddingLeft","member_count","unread_count","ThreeTab","header","join","toUpperCase","useThemeColor","colorName","theme","colorFromProps","otherProps","light","dark","values","forEach","ROOTPATH","prefixes","Linking","config","screens","Main","NotFound","App","isLoadingComplete","setLoadingComplete","SplashScreen","Font","font","require","console","warn","useCachedResources","colorScheme","StatusBar","NotFoundScreen","link","linkText","Root","createStackNavigator","QueryClient","RootNavigator","client","Navigator","mode","headerMode","screenOptions","cardStyle","animationEnabled","cardStyleInterpolator","CardStyleInterpolators","forVerticalIOS","Screen","MainNavigator","headerShown","gestureDirection","log","DrawerNavigator","headerStyle","headerTitleStyle","headerLeftContainerStyle","defaultOption","baseURL","PRODDOMAIN","withCredentials","_axios","axios","interceptors","request","use","error","Promise","reject","response","status","endsWith","r","bodyFormData","FormData","append","post","headers","checkLogin","logout","guestLogin","isOffline","code","message","startsWith","getUserList","group_id","getBoardChannelList","getMessengerChannelList","user_id","postChannel","putChannel","put","deleteChannel","patch","content_id","id_lt","id_lt_param","results","navigationRef","Navigation","ref","documentTitle","formatter","linking","process","versions","LinkingConfiguration","DarkTheme","DefaultTheme","l","search","decoded","s","history","replaceState","pathname","hash","location","ignoreWarnings","_console","_","clone","indexOf","AuthContext","authReducer","initialState","action","Error","AuthProvider","useReducer","authState","membership_set","g","root_group_id","catch","module","exports","background","tint","tabIconDefault","tabIconSelected","focus","DefaultButton","hover","selectable","_props","defaultButtonProps","buttonProps","mutateAsync","sort","b"],"mappings":"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","file":"static/js/app.af1b3096.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport {\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  View,\r\n  StyleSheet,\r\n} from 'react-native';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport useAuthContext from '../../hooks/useAuthContext';\r\n\r\nexport default function LoginScreen({\r\n  navigation\r\n}: StackScreenProps<any, 'Login'>) {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const {dispatch} = useAuthContext()\r\n  const _login = ()=>dispatch({type:'LOGIN_REQUEST', username, password})\r\n\r\n  return (\r\n    <View style={Styles.login_wrapper}>\r\n      <View style={Styles.form}>\r\n        <TextInput\r\n          style={Styles.form_input}\r\n          value={username}\r\n          placeholder={'Username'}\r\n          onChangeText={(text) => setUsername(text)}\r\n          autoCapitalize={'none'}\r\n          keyboardType={'email-address'}\r\n          onSubmitEditing={_login}\r\n        />\r\n        <TextInput\r\n          style={Styles.form_input}\r\n          value={password}\r\n          placeholder={'Password'}\r\n          secureTextEntry\r\n          onChangeText={(text) => setPassword(text)}\r\n          onSubmitEditing={_login}\r\n        />\r\n        <TouchableOpacity onPress={_login}>\r\n          <View style={Styles.button}>\r\n            <Text style={Styles.button_label}>{'Sign in'}</Text>\r\n          </View>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity onPress={() => dispatch({type:\"LOGIN_GUEST\"})}>\r\n          <Text style={Styles.guest_footer_text}>\r\n            {\"Sign in as guest\"}\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      <View style={Styles.login_social}>\r\n        <View style={Styles.login_social_separator}>\r\n          <View style={Styles.login_social_separator_line} />\r\n          <Text style={Styles.login_social_separator_text}>{'text'}</Text>\r\n          <View style={Styles.login_social_separator_line} />\r\n        </View>\r\n        <View style={Styles.login_social_buttons}>\r\n        </View>\r\n      </View>\r\n      {/* <>\r\n        <TouchableOpacity onPress={() => navigate(\"RegistrationScreen\")}>\r\n          <Text style={Styles.login_footer_text}>\r\n            {\"Don't have an account? \"}\r\n            <Text style={Styles.login_footer_link}>{'Sign up'}</Text>\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </> */}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst Styles = StyleSheet.create({\r\n    login_container: {\r\n      flex: 1,\r\n      backgroundColor: '#FFF',\r\n    },\r\n    login_header: {\r\n      alignItems: 'center',\r\n      paddingTop: 30,\r\n      paddingBottom: 50,\r\n      backgroundColor: '#208AEC',\r\n    },\r\n    login_header_logo: {\r\n      width: 220,\r\n      resizeMode: 'contain',\r\n    },\r\n    login_header_text: {\r\n      marginTop: 15,\r\n      color: '#f0f0f0',\r\n      fontSize: 16,\r\n    },\r\n    login_header_text_bold: {\r\n      color: '#fff',\r\n      fontWeight: 'bold',\r\n    },\r\n    login_wrapper: {\r\n      flex: 1,\r\n      justifyContent: 'space-between',\r\n      paddingVertical: 40,\r\n      borderTopRightRadius: 12,\r\n      borderTopLeftRadius: 12,\r\n      marginTop: -10,\r\n      backgroundColor: '#fff',\r\n      alignItems: 'center',\r\n    },\r\n    form: {\r\n      width: '100%',\r\n      maxWidth: 280,\r\n    },\r\n    form_input: {\r\n      height: 44,\r\n      paddingHorizontal: 20,\r\n      marginBottom: 20,\r\n      backgroundColor: '#EDF0F7',\r\n      borderRadius: 50,\r\n    },\r\n    button: {\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      height: 44,\r\n      backgroundColor: '#0065A4',\r\n      borderRadius: 50,\r\n    },\r\n    button_label: {\r\n      color: '#fff',\r\n      fontSize: 16,\r\n    },\r\n    login_social: {\r\n      width: '100%',\r\n      maxWidth: 280,\r\n      marginTop: 20,\r\n    },\r\n    login_social_separator: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n    },\r\n    login_social_separator_line: {\r\n      flex: 1,\r\n      width: '100%',\r\n      height: 1,\r\n      backgroundColor: '#E0E0E0',\r\n    },\r\n    login_social_separator_text: {\r\n      marginHorizontal: 10,\r\n      color: '#808080',\r\n      fontSize: 16,\r\n    },\r\n    login_social_buttons: {\r\n      flexDirection: 'row',\r\n      justifyContent: 'center',\r\n      marginTop: 20,\r\n    },\r\n    login_social_button: {\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      width: 60,\r\n      height: 60,\r\n      marginHorizontal: 12,\r\n      borderWidth: 1,\r\n      borderColor: '#E7E7E7',\r\n      borderRadius: 60,\r\n    },\r\n    login_social_icon: {\r\n      width: 38,\r\n      height: 38,\r\n      resizeMode: 'contain',\r\n    },\r\n    login_social_facebook: {\r\n      backgroundColor: '#4267B2',\r\n      borderColor: '#4267B2',\r\n    },\r\n    login_footer_text: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      color: '#808080',\r\n      fontSize: 14,\r\n    },\r\n    guest_footer_text: {\r\n      flexDirection: 'row',\r\n      alignSelf: 'center',\r\n      color: '#808080',\r\n      fontSize: 15,\r\n      margin: 15\r\n    },\r\n    login_footer_link: {\r\n      color: '#208AEC',\r\n      fontSize: 15,\r\n      fontWeight: 'bold',\r\n    },\r\n  });\r\n  ","import * as React from 'react';\r\nimport { View, Text } from './Themed';\r\nimport { StyleSheet, StyleProp, ViewStyle, TextStyle } from 'react-native';\r\nimport Colors from '../constants/Colors';\r\n\r\nexport type SectionParamList = {\r\n    title?: string,\r\n    titleStyle?:StyleProp<TextStyle>\r\n    outerContainerStyle?:StyleProp<TextStyle>\r\n    containerStyle?:StyleProp<ViewStyle>\r\n    bodyStyle?:StyleProp<ViewStyle>\r\n    subtitle?: string\r\n    withSeparator?: boolean\r\n    children?: React.ReactNode\r\n}\r\n\r\nexport default function CommonSection(props:SectionParamList){\r\n  return (\r\n    <View style={[styles.outerContainer, props.outerContainerStyle]}>\r\n        <View style={[styles.container, props.containerStyle]}>\r\n            {props.withSeparator?<View style={styles.separator} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />:undefined}\r\n            {props.title?<View style={styles.titleView}>\r\n              <Text style={[styles.title, props.titleStyle]}>{props.title}</Text>\r\n              <Text style={styles.subtitle}>{props.subtitle}</Text>\r\n            </View>:undefined}\r\n            <View style={[styles.bodyView, props.bodyStyle]}>\r\n            {props.children}\r\n            </View>\r\n          </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  outerContainer:{\r\n    width:'100%',\r\n    maxWidth:1080,\r\n    alignItems:'stretch',\r\n    backgroundColor:'transparent'\r\n  },  \r\n  container: {\r\n      marginHorizontal:20,\r\n      marginVertical: 10,\r\n      backgroundColor:'transparent',\r\n    },\r\n    titleView:{\r\n      width: '100%',\r\n      flexDirection:'row',\r\n      backgroundColor:'transparent',\r\n      marginBottom:5,\r\n    },\r\n    title: {\r\n      flex:1,\r\n      fontSize: 16,\r\n    },\r\n    subtitle: {\r\n      flex:1,\r\n      fontSize: 12,\r\n      textAlign: 'right',\r\n      marginTop:4\r\n    },\r\n    separator: {\r\n      marginBottom: 20,\r\n      height: 1,\r\n      width: '100%',\r\n    },\r\n    bodyView:{\r\n      width: '100%',\r\n      padding: 20,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      borderWidth:1,\r\n      borderColor:Colors.borderColor,\r\n      borderRadius:6\r\n    }\r\n  });\r\n  ","import { useCallback, useEffect, useState } from \"react\"\r\nimport { InfiniteData, useInfiniteQuery, useMutation, useQueryClient } from \"react-query\"\r\nimport { getMessengerContentList, postMessage, deleteMessengerContent } from \"../../apis\"\r\nimport { MessengerContent } from \"../../types\"\r\nimport useWebsocketContext from \"../useWebsocketContext\"\r\n\r\nexport type MessengerContentPage = {\r\n  next?:MessengerContentPage\r\n  current:MessengerContent[]\r\n}\r\n\r\nexport default function useMessengerContentList(channel_id:number){  \r\n  const queryClient = useQueryClient()\r\n  const { data, fetchNextPage } = useInfiniteQuery<MessengerContentPage>(\r\n    [\"MessengerContentList\", channel_id], \r\n    async({pageParam})=>getMessengerContentList(channel_id, pageParam).then(current=>({current})), \r\n    {\r\n      select:data=>{\r\n        if(data.pages.length > 1)\r\n          data.pages[data.pages.length - 2].next = data.pages[data.pages.length - 1]\r\n        return data;\r\n      },\r\n      getNextPageParam:(lastPage)=>lastPage.current.length?lastPage.current[lastPage.current.length - 1].id:undefined,\r\n      refetchOnReconnect:false,\r\n      refetchOnWindowFocus:false\r\n    }\r\n  )\r\n  const { lastJsonMessage } = useWebsocketContext()\r\n  useEffect(()=>{\r\n    if(lastJsonMessage !=null && lastJsonMessage['type']=='next_message' && lastJsonMessage['data']['channel'] == channel_id){\r\n      queryClient.setQueryData<InfiniteData<MessengerContentPage>>([\"MessengerContentList\", channel_id], (_data)=>{\r\n        if(_data?.pages[0].current)\r\n          _data.pages[0].current = [lastJsonMessage['data'], ..._data?.pages[0].current]\r\n        return {...(_data || {pages:[], pageParams:[]})}\r\n      })\r\n    }\r\n  }, [lastJsonMessage])\r\n  return { data, fetchNextPage }\r\n}\r\n\r\nexport function useMessengerContentMutation(){\r\n  // const queryClient = useQueryClient()\r\n  const create = useMutation(postMessage, {\r\n    onSuccess: () => {\r\n      // queryClient.setQueryData(['MessengerContentList'], (data:any) => ({\r\n      //   pages: data.pages.slice(0, 1),\r\n      //   pageParams: data.pageParams.slice(0, 1),\r\n      // }))\r\n      // queryClient.invalidateQueries(\"MessengerContentList\")\r\n    }\r\n  });\r\n  const _delete = useMutation(deleteMessengerContent, {\r\n    onSuccess: (d, variables) => {\r\n      // queryClient.setQueryData(['MessengerContentList'], (data:any) => ({\r\n      //   pages: (data.pages as MessengerContent[][]).map(v=>v.filter(v2=>v2.id != variables)),\r\n      //   pageParams: data.pageParams,\r\n      // }))\r\n    }\r\n  })\r\n  return { create:create.mutate, delete:_delete.mutate }\r\n}","import { useMutation, useQuery, useQueryClient } from \"react-query\";\r\nimport { postBulkMessengerMember, deleteMessengerMember, getMessengerMemberList } from \"../../apis\";\r\n\r\nexport default function useMessengerMemberList(channel_id:number){\r\n  const { data } = useQuery([\"MessengerMemberList\", channel_id] , async()=>await getMessengerMemberList(channel_id))\r\n  return data\r\n}\r\n\r\n\r\nexport function useMessengerMemberMutation(){\r\n  const queryClient = useQueryClient()\r\n  const invite = useMutation(postBulkMessengerMember, {\r\n    onSuccess: ()=>{\r\n      queryClient.invalidateQueries(\"MessengerMemberList\")\r\n    }\r\n  })\r\n\r\n  const leave = useMutation(deleteMessengerMember, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(\"MessengerChannelList\")\r\n      queryClient.invalidateQueries(\"MessengerMemberList\")\r\n    }\r\n  })\r\n  return {invite:invite.mutate, leave:leave.mutate}\r\n}","import React, {useCallback, useRef} from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { StyleSheet, Text, Button, View} from 'react-native';\r\n\r\n\r\nexport default function TabOneScreen({\r\n  navigation\r\n}: StackScreenProps<any, 'TabOne'>) {\r\n  return <View style={{padding:10}}>\r\n    \r\n  </View>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  Panel_Button_Text: {\r\n    textAlign: 'center',\r\n    color: '#fff',\r\n    fontSize: 21\r\n  },\r\n  Panel_Holder: {\r\n    borderWidth: 1,\r\n    borderColor: '#888',\r\n    marginVertical: 5\r\n  }\r\n})","import { useMutation, useQuery, useQueryClient } from \"react-query\"\r\nimport { deleteBoardContent, getBoardContentList, patchBoard, postBoard } from \"../../apis\"\r\n\r\n\r\nexport default function useBoardContentList(channel_id:number){\r\n  const { data } = useQuery([\"BoardContentList\", channel_id] , async()=>await getBoardContentList(channel_id))\r\n  return data\r\n}\r\n\r\nexport function useBoardContentMutation(){\r\n  const queryClient = useQueryClient()\r\n  const create = useMutation(postBoard, {\r\n    onSuccess: () => queryClient.invalidateQueries(\"BoardContentList\")\r\n  });\r\n  const update = useMutation(patchBoard, {\r\n    onSuccess: () => queryClient.invalidateQueries(\"BoardContentList\")\r\n  })\r\n  const _delete = useMutation(deleteBoardContent, {\r\n    onSuccess: () => queryClient.invalidateQueries(\"BoardContentList\")\r\n  })\r\n  return { create:create.mutate, update:update.mutate, delete:_delete.mutate }\r\n}","import React from 'react';\r\n\r\nimport { View, Text, TextProps, StyleProp } from 'react-native';\r\n\r\ntype Props = {\r\n  name: string,\r\n  width?:number,\r\n  children: React.ReactNode\r\n  textStyle?: StyleProp<TextProps>\r\n}\r\n\r\nexport default function RowField(props:Props) {\r\n  return (\r\n    <View style={{flexDirection:'row', alignItems: 'center', justifyContent:'space-between', paddingVertical:5}}>\r\n        <Text style={[{flex:1, paddingHorizontal: 15, fontSize:16}, props.textStyle]}>{props.name}</Text>\r\n        <View style={{\r\n        // backgroundColor: '#171717',\r\n        flex: 3,\r\n        justifyContent: 'center',\r\n        paddingHorizontal: 15,\r\n        }}>\r\n          <View style={{width:props.width}}>\r\n            {props.children}\r\n          </View>\r\n        </View>\r\n    </View>\r\n  )\r\n}","import React, { useEffect, useState } from 'react';\r\n\r\nimport { View, Text, StyleProp, ViewStyle, TextStyle } from 'react-native';\r\n\r\nimport { TextInput } from 'react-native-gesture-handler';\r\nimport RowField from './RowField';\r\n\r\ntype Props = {\r\n  name: string,\r\n  value: any,\r\n  setValue?: (value:any)=>void\r\n  width?:any\r\n  disabled?:boolean\r\n  multiline?:boolean\r\n  textStyle?:StyleProp<TextStyle>\r\n  style?:StyleProp<ViewStyle>\r\n}\r\n\r\nexport default function TextField(props:Props) {\r\n  const [contentHeight, setContentHeight] = useState<number>()\r\n  return (\r\n    <RowField name={props.name} width={props.width} textStyle={props.textStyle}>\r\n      <TextInput style={[{\r\n          borderColor:'#d0d7de', \r\n          fontSize:16, \r\n          borderWidth:1, \r\n          borderRadius:6, \r\n          paddingHorizontal:10, \r\n          paddingVertical:3, \r\n          backgroundColor:props.disabled?'#EEE':undefined,\r\n          height:props.multiline?contentHeight:30\r\n        }, props.style]} editable={!props.disabled} value={props.value} onChangeText={props.setValue}\r\n        onContentSizeChange={props.multiline?(e) => setContentHeight(e.nativeEvent.contentSize.height + 2):undefined} \r\n        multiline={props.multiline}\r\n      ></TextInput>\r\n   </RowField>\r\n  )\r\n}","import React, {useState, useEffect, useMemo} from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { StyleSheet } from 'react-native';\r\nimport CommonSection from '../components/CommonSection';\r\nimport { View, Text } from '../components/Themed';\r\nimport CommonButton from '../components/CommonButton';\r\nimport useBoardChannelList from '../hooks/lists/useBoardChannelList';\r\nimport useAuthContext from '../hooks/useAuthContext';\r\nimport { navigate } from '../navigation';\r\nimport useBoardContentList, { useBoardContentMutation } from '../hooks/lists/useBoardContentList';\r\nimport { Board } from '../types';\r\nimport TextField from '../components/TextField';\r\n\r\n\r\nexport default function BoardEditScreen({navigation, route}: StackScreenProps<any, 'BoardEdit'>) {\r\n  const id = route?.params?.id\r\n  const channel_id = route?.params?.channel_id\r\n  const {auth} = useAuthContext()\r\n  const boardChannelList = useBoardChannelList(auth)\r\n  const boardContentList = useBoardContentList(channel_id)\r\n  const boardContentMutation = useBoardContentMutation()\r\n  const channel = boardChannelList?.find(v=>v.id==channel_id)\r\n  const board = useMemo(()=>boardContentList?.find(v=>v.id==id)?.board_set[0], [boardContentList])\r\n  const [title, setTitle] = useState('')\r\n  const [content, setContent] = useState('')\r\n  const back = ()=>{\r\n    if(navigation.canGoBack())\r\n        navigation.goBack()\r\n      else{\r\n        navigation.replace('Main')\r\n      }\r\n  }\r\n  useEffect(()=>{\r\n    if (!(channel_id && channel) && boardChannelList)\r\n      back()\r\n  }, [boardChannelList])\r\n  useEffect(()=>{\r\n    if (board){\r\n      setTitle(board.title)\r\n      setContent(board.content)\r\n    }\r\n  }, [board])\r\n  return <CommonSection outerContainerStyle={{alignSelf:'center'}}>\r\n    <View style={{justifyContent:'space-around'}}>\r\n      <Text style={{fontSize:20}}>Edit Board</Text>\r\n    </View>\r\n    <View style={styles.separator} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />\r\n    <View style={{width:'50%'}}>\r\n      <TextField name='Channel' disabled={true} value={channel?.name || ''} width={'100%'}/>\r\n      <TextField name='Title' value={title} setValue={setTitle} width={'100%'}/>\r\n      <TextField name='Content'  value={content} setValue={setContent} multiline width={'100%'}/>\r\n    </View>\r\n    <View style={[styles.field, {justifyContent:'flex-end'}]}>\r\n      <CommonButton title={'save'} onPress={()=>{\r\n        const newBoard:Board = {id:board?.id, title, content};\r\n        id?boardContentMutation.update(newBoard):boardContentMutation.create({...newBoard, user:auth.user?.id, channel:channel_id})\r\n        navigate(\"Main\", {screen:\"BoardScreen\", params: {id:channel_id}})\r\n      }}/>\r\n      <CommonButton title={'cancel'} onPress={back}/>\r\n    </View>\r\n  </CommonSection>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  field:{\r\n    width:'50%',\r\n    flexDirection:'row',\r\n    padding:10,\r\n  },\r\n  separator: {\r\n    marginBottom: 20,\r\n    height: 1,\r\n    width: '100%',\r\n  },\r\n})","import React, {useState, useEffect } from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { StyleSheet } from 'react-native';\r\nimport CommonSection from '../components/CommonSection';\r\nimport { View, Text } from '../components/Themed';\r\nimport CommonButton from '../components/CommonButton';\r\nimport useBoardChannelList, { useBoardChannelMutation } from '../hooks/lists/useBoardChannelList';\r\nimport useAuthContext from '../hooks/useAuthContext';\r\nimport { navigate } from '../navigation';\r\nimport { Channel } from '../types';\r\nimport useMessengerChannelList, { useMessengerChannelMutation } from '../hooks/lists/useMessengerChannelList';\r\nimport TextField from '../components/TextField';\r\n\r\n\r\nexport default function ChannelEditScreen({navigation, route}: StackScreenProps<any, 'ChannelEdit'>) {\r\n  const id = route?.params?.id\r\n  const type = route?.params?.type\r\n  const {auth} = useAuthContext()\r\n  const channelList = type=='messenger'?useMessengerChannelList(auth):useBoardChannelList(auth)\r\n  const channelMutation = type=='messenger'?useMessengerChannelMutation():useBoardChannelMutation()\r\n  const channel = channelList?.find(v=>v.id==id)\r\n  const [name, setName] = useState('')\r\n  const [description, setDescription] = useState('')\r\n  const back = ()=>{\r\n    if(navigation.canGoBack())\r\n        navigation.goBack()\r\n      else{\r\n        navigation.replace('Main')\r\n      }\r\n  }\r\n  useEffect(()=>{\r\n    if (channel){\r\n      setName(channel.name)\r\n      setDescription(channel?.description || '')\r\n    }\r\n  }, [channel])\r\n  return <CommonSection outerContainerStyle={{alignSelf:'center'}}>\r\n    <View style={{justifyContent:'space-around'}}>\r\n    <Text style={{fontSize:20}}>Edit Channel - {type}</Text>\r\n    </View>\r\n    <View style={styles.separator} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />\r\n    <View style={{width:'50%'}}>\r\n      <TextField name='Name' value={name} setValue={setName} width={'100%'}/>\r\n      <TextField name='Description' value={description} setValue={setDescription} multiline width={'100%'}/>\r\n    </View>\r\n    <View style={[styles.field, {justifyContent:'flex-end'}]}>\r\n      <CommonButton title={'save'} onPress={()=>{\r\n        if(auth?.user?.id && auth.groupId){\r\n          const newChannel:Channel = {id, name, description, type, owner:auth?.user?.id, group:auth.groupId};\r\n          (id?channelMutation.update(newChannel):channelMutation.create(newChannel)).then(v=>navigate(\"Main\", {\r\n            screen:v.type == 'messenger'?'MessengerScreen':'BoardScreen',\r\n            params:{id:v.id}\r\n          }))\r\n        }\r\n      }}/>\r\n      <CommonButton title={'cancel'} onPress={back}/>\r\n    </View>\r\n  </CommonSection>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  field:{\r\n    width:'50%',\r\n    flexDirection:'row',\r\n    padding:10,\r\n  },\r\n  separator: {\r\n    marginBottom: 20,\r\n    height: 1,\r\n    width: '100%',\r\n  },\r\n})","import React, {useRef,MutableRefObject, useMemo, useState } from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { View, Text } from '../components/Themed';\r\nimport CommonSection from '../components/CommonSection';\r\nimport useAuthContext from '../hooks/useAuthContext';\r\nimport useUserMembershipList from '../hooks/lists/useUserMembershipList';\r\nimport { UserMembership } from '../types';\r\nimport CommonButton from '../components/CommonButton';\r\nimport useMessengerMemberList, { useMessengerMemberMutation } from '../hooks/lists/useMessengerMemberList';\r\nimport { renderMemberItem } from '../tabs/MemberTab';\r\nimport { navigate } from '../navigation';\r\n\r\n\r\nconst InviteItem = (props:{item:UserMembership, selectedRef:MutableRefObject<Set<number>>})=>{\r\n  const [selected, setSelected] = useState(props.selectedRef.current.has(props.item.id))\r\n  return <View style={selected?{borderWidth:1, borderColor:'blue'}:{}}>\r\n    {renderMemberItem(props.item, (item)=>{\r\n      if (selected){\r\n        setSelected(false)\r\n        props.selectedRef.current.delete(item.id)\r\n      }\r\n      else{\r\n        setSelected(true)\r\n        props.selectedRef.current.add(item.id)\r\n      }\r\n    })}\r\n  </View>\r\n\r\n}\r\n\r\nexport default function InviteScreen({navigation, route}: StackScreenProps<any, 'Invite'>) {\r\n  const id = route?.params?.id\r\n  const {auth} = useAuthContext()\r\n  const userList = useUserMembershipList(auth)\r\n  const memberList = useMessengerMemberList(id)\r\n  const messengerMemberMutation = useMessengerMemberMutation()\r\n  const selectedRef = useRef<Set<number>>(new Set())\r\n  const data = useMemo(()=>{\r\n    const memberSet = new Set(memberList?.map(v=>v.user))\r\n    return userList?.filter(v=>!memberSet.has(v.id))\r\n  }, [userList, memberList])\r\n\r\n\r\n  const back = ()=>{\r\n    if(navigation.canGoBack())\r\n      navigation.goBack()\r\n    else if (id)\r\n      navigate(\"ChatScreen\", {id})\r\n    else\r\n      navigation.replace('Main')\r\n  }\r\n\r\n  return <CommonSection outerContainerStyle={{alignSelf:'center'}}>\r\n    {data?.map((item, index)=><InviteItem key={index} item={item} selectedRef={selectedRef}/>)}\r\n    <View style={[{width:'50%', flexDirection:'row', padding:10,}, {justifyContent:'flex-end'}]}>\r\n      <CommonButton title={'save'} onPress={()=>{\r\n        messengerMemberMutation.invite({\r\n          channel_id:id,\r\n          user_ids:[...selectedRef.current]\r\n        })\r\n        back()\r\n      }}/>\r\n      <CommonButton title={'cancel'} onPress={back}/>\r\n    </View>\r\n  </CommonSection>\r\n}\r\n\r\n","import LoginScreen from \"./main/LoginScreen\";\r\nimport ChatScreen from \"./main/ChatScreen\";\r\nimport HomeScreen from \"./main/HomeScreen\";\r\nimport TabOneScreen from \"./main/TabOneScreen\";\r\nimport BoardScreen from \"./main/BoardScreen\";\r\nimport BoardEditScreen from \"./BoardEditScreen\";\r\nimport ChannelEditScreen from \"./ChannelEditScreen\"\r\nimport { Screens } from \"../types\";\r\nimport InviteScreen from \"./InviteScreen\";\r\nimport ProfileScreen from \"./ProfileScreen\";\r\n\r\nexport const main = {\r\n    HomeScreen:{\r\n        title:'home',\r\n        component:HomeScreen,\r\n        path:'home',\r\n    },\r\n    ChatScreen:{\r\n        title:'chat',\r\n        component:ChatScreen,\r\n        path:'chat'\r\n    },\r\n    BoardScreen:{\r\n        title:'board',\r\n        component:BoardScreen,\r\n        path:'board'\r\n    },\r\n    TabOneScreen:{\r\n        title:'tab one',\r\n        component:TabOneScreen,\r\n        path:'one'\r\n    },\r\n} as Screens\r\n\r\nexport const login = {\r\n    LoginScreen:{\r\n        path: 'login',\r\n        title: '로그인',\r\n        component:LoginScreen\r\n    },\r\n} as Screens\r\n\r\nexport const modal = {\r\n    BoardEditScreen:{\r\n        title:'board',\r\n        component:BoardEditScreen,\r\n        path:'modal/board'\r\n    },\r\n    ChannelEditScreen:{\r\n        title:'channel',\r\n        component:ChannelEditScreen,\r\n        path:'modal/channel'\r\n    },\r\n    InviteScreen:{\r\n        title:'invite',\r\n        component:InviteScreen,\r\n        path:'modal/invite'\r\n    },\r\n    ProfileScreen:{\r\n        title:'profile',\r\n        component:ProfileScreen,\r\n        path:'modal/profile'\r\n    }\r\n} as Screens","import React, {useLayoutEffect} from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { StyleSheet, Text, Button, View} from 'react-native';\r\nimport {TabViewNavigator} from '../../navigation/DrawerNavigator';\r\nimport useResizeWindow from '../../hooks/useResizeWindow';\r\nimport { bottomTabs } from '../../tabs';\r\nimport { navigate } from '../../navigation';\r\nimport HeaderRight from '../../components/HeaderRight';\r\n\r\n// navigate(\"BoardEditScreen\", {channel_id:item.channel, id:item.id})\r\n// deleteBoardContent(item.id).then(()=>navigate('BoardScreen', {id:item.channel}))\r\n\r\nexport default function HomeScreen({navigation, route}: StackScreenProps<any, 'Home'>) {\r\n  const windowType = useResizeWindow();\r\n\r\n  const options = [\r\n    {title:'member', headerRight:()=><HeaderRight/>},\r\n    {title:'messenger', headerRight:()=><HeaderRight extra={[{title:'create', onPress:()=>navigate(\"ChannelEditScreen\", {type:\"messenger\"})}]}/>},\r\n    {title:'board', headerRight:()=><HeaderRight extra={[{title:'create', onPress:()=>navigate(\"ChannelEditScreen\", {type:\"board\"})}]}/>},\r\n    {title:'config', headerRight:()=><HeaderRight/>}\r\n  ]\r\n  \r\n  useLayoutEffect(() => {\r\n    const index = route?.params?.tab | 0\r\n    navigation.setOptions(windowType == 'portrait'?options[index]:{\r\n      title: 'home',\r\n      headerRight: ()=><HeaderRight/>\r\n    });\r\n  }, [navigation, route, windowType]);\r\n  return windowType == 'landscape'?\r\n    <View style={{padding:10}}></View>:\r\n    <TabViewNavigator tabs={bottomTabs} tabBarPosition=\"bottom\" index={parseInt(route.params?.['tab'] || 0)} onTab={(index)=>{navigation.setParams({tab:index})}}/>\r\n}\r\n\r\n","import React, {useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState} from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { StyleSheet, Text, Button, View} from 'react-native';\r\nimport CommonSection from '../../components/CommonSection';\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\nimport { FlatList, TextInput } from 'react-native-gesture-handler';\r\nimport CommonButton from '../../components/CommonButton';\r\nimport useMessengerContentList, { MessengerContentPage, useMessengerContentMutation } from '../../hooks/lists/useMessengerContent.List';\r\nimport useAuthContext from '../../hooks/useAuthContext';\r\nimport HeaderRight from '../../components/HeaderRight';\r\nimport useMessengerMemberList, { useMessengerMemberMutation } from '../../hooks/lists/useMessengerMemberList';\r\nimport { navigate } from '../../navigation';\r\nimport Colors from '../../constants/Colors';\r\n\r\nconst marginBottom = 65\r\n\r\nexport default function ChatScreen({navigation, route}: StackScreenProps<any, 'Chat'>) {\r\n  const channel_id = route?.params?.id\r\n  const height = useRef(0)\r\n  const {auth} = useAuthContext()\r\n  const {data, fetchNextPage } = useMessengerContentList(channel_id)\r\n  const memberList = useMessengerMemberList(channel_id)\r\n  const member_id = useMemo(()=>memberList?.find(v=>v.user == auth.user?.id)?.id, [auth, memberList])\r\n  const messengerMemberMutation = useMessengerMemberMutation()\r\n  const [value, setValue] = useState('')\r\n  const postValue = ()=>{\r\n    contentMutation.create({channel:channel_id, user:auth.user?.id, content:value})\r\n    setValue('')\r\n  }\r\n  const contentMutation = useMessengerContentMutation()\r\n\r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      headerRight: ()=> <HeaderRight extra={[\r\n        {title:'invite', onPress:()=>{navigate(\"InviteScreen\", {id:channel_id})}},\r\n        {title:'leave', onPress:()=>{member_id && messengerMemberMutation.leave(member_id);back()}}\r\n      ]}/>\r\n    });\r\n  }, [navigation, route, member_id]);\r\n\r\n  const renderItem = useCallback(({item, index}:{item:MessengerContentPage, index:number})=>{\r\n    let nextPage = item.next;\r\n    while(nextPage?.next && nextPage.current.length==0){\r\n      nextPage = nextPage.next\r\n    }\r\n    const nextContent = nextPage?.current[0]\r\n    return <View style={{flexDirection: 'column-reverse'}}>\r\n      \r\n      {item.current.map((content, index2)=>{\r\n        const next = index2 + 1 < item.current.length?item.current[index2+1]:nextContent\r\n        const created:string = content.created.slice(0, 16)\r\n        const date = created.slice(0, 10)\r\n        const isSystem = content.user == null\r\n        const isFirst = next==undefined || (content.user != next.user || created != next.created.slice(0, 16))\r\n        const isSelf = auth.user?.id == content.user\r\n        const dayChanged = next==undefined || date != next.created.slice(0, 10)\r\n        if (isSystem)\r\n          return <View key={content.id} style={{flexDirection:'row', justifyContent:'center', width:'100%'}}>\r\n            <Text>{content.message_set[0].content}</Text>\r\n          </View>\r\n        return <View key={content.id}>\r\n          {dayChanged?<View style={{flexDirection:'row', justifyContent:'center', width:'100%'}}><Text>{date}</Text></View>:undefined}\r\n          <View key={content.id} style={{flexDirection:'row', justifyContent:isSelf?'space-between':'flex-start', width:'100%'}}>\r\n            {isFirst && !isSelf?<MaterialIcons size={38} style={{marginBottom: -3, marginRight:10 }} name='account-circle'/>:<View style={{width:48}}/>}\r\n            <CommonSection outerContainerStyle={{width:undefined, maxWidth:'90%'}} title={isFirst?content.name:undefined} titleStyle={{flex:undefined}} bodyStyle={{padding:10}} subtitle={`${created.slice(11)}`}>\r\n              <Text>{content.message_set[0].content}</Text>\r\n            </CommonSection>\r\n          </View>\r\n        </View>\r\n      })}\r\n    </View>\r\n  }, [navigation, contentMutation])\r\n  \r\n  const back = ()=>{\r\n    if(navigation.canGoBack())\r\n        navigation.goBack()\r\n      else{\r\n        navigation.navigate('HomeScreen', {tab:2})\r\n      }\r\n  }\r\n  useEffect(()=>{\r\n    if (!(channel_id))\r\n      back()\r\n  }, [])\r\n\r\n  return <View style={{flex:1, alignItems:'center'}}>\r\n    <FlatList\r\n        style={{width:'100%', flexDirection: 'column-reverse', marginBottom}}\r\n        contentContainerStyle={{padding:10, flexGrow:1, flexDirection: 'column-reverse'}}\r\n        data={data?.pages}\r\n        renderItem={renderItem}\r\n        onScroll={(e)=>{\r\n          if (e.nativeEvent.contentOffset.y + e.nativeEvent.contentSize.height - height.current == 0)\r\n            fetchNextPage()\r\n        }}\r\n        onLayout={(p)=>{height.current = p.nativeEvent.layout.height}}\r\n      />\r\n      <View style={{width:'100%'}}>\r\n        <View style={{position:'absolute', top:-marginBottom, width:'100%', backgroundColor:'white', alignItems:'center'}}>\r\n          <View style={{width:'100%',flexDirection:'row', paddingTop:15, paddingBottom:10, paddingHorizontal:19}}>\r\n            <TextInput value={value} onChangeText={setValue} style={{flex:1, borderWidth:1, height:40, borderRadius:6, borderColor:Colors.borderColor}} onSubmitEditing={postValue}/><CommonButton title={'write'} onPress={postValue}/>\r\n          </View>\r\n        </View>\r\n      </View>\r\n  </View>\r\n}\r\n// outerContainerStyle={{alignContent:'flex-end'}} containerStyle={{width:'50%'}}\r\n","import React, {useCallback, useEffect, useLayoutEffect} from 'react';\r\nimport {FlatList } from 'react-native';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { FontAwesome, MaterialIcons } from '@expo/vector-icons';\r\nimport useBoardContentList, { useBoardContentMutation } from '../../hooks/lists/useBoardContentList';\r\nimport CommonSection from '../../components/CommonSection';\r\nimport { View, Text } from '../../components/Themed';\r\nimport CommonButton from '../../components/CommonButton';\r\nimport { BoardContent } from '../../types';\r\nimport HeaderRight from '../../components/HeaderRight';\r\nimport { useBoardChannelMutation } from '../../hooks/lists/useBoardChannelList';\r\n\r\n\r\n\r\n\r\nexport default function BoardScreen({navigation, route}: StackScreenProps<any, 'Board'>) {\r\n  const channel_id = route?.params?.id\r\n  const contentList = useBoardContentList(channel_id)\r\n  const boardChannelMutation = useBoardChannelMutation()\r\n  const contentMutation = useBoardContentMutation()\r\n\r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      headerRight: ()=> <HeaderRight extra={[{title:'delete', onPress:()=>{boardChannelMutation.delete(channel_id);back()}}]}/>\r\n    });\r\n  }, [navigation, route]);\r\n  \r\n  const renderItem = useCallback(({item}:{item:BoardContent})=><CommonSection bodyStyle={{alignItems:'flex-start', paddingHorizontal:35}}>\r\n    <View style={{flexDirection:'row', width:'100%', justifyContent:'space-between'}}>\r\n      <View style={{flexDirection:'row'}}>\r\n        <MaterialIcons size={38} style={{marginBottom: -3, marginRight:10 }} name='account-circle'/>\r\n        <View>\r\n          <Text style={{fontSize:16}}>{item.name}</Text>\r\n          <Text style={{fontSize:14, opacity: 0.4}}>{item.created.split('.')[0].replace('T', ' ')}</Text>\r\n        </View>\r\n      </View>\r\n      <View style={{flexDirection:'row'}}>\r\n        <CommonButton title={'edit'} onPress={()=>navigation.navigate(\"BoardEditScreen\", {channel_id:item.channel, id:item.id})}/>\r\n        <CommonButton title={'delete'} onPress={()=> contentMutation.delete(item.id)}/>\r\n      </View>\r\n    </View>\r\n    <Text style={{fontSize:20}}>{item.board_set[0].title}</Text>\r\n    <Text style={{fontSize:14}}>{item.board_set[0].content}</Text>\r\n  </CommonSection>\r\n  , [navigation, contentMutation])\r\n  \r\n  const back = ()=>{\r\n    if(navigation.canGoBack())\r\n        navigation.goBack()\r\n      else{\r\n        navigation.navigate('HomeScreen', {tab:2})\r\n      }\r\n  }\r\n  useEffect(()=>{\r\n    if (!(channel_id))\r\n      back()\r\n  }, [])\r\n  return <View style={{flex:1, backgroundColor:'white'}}>\r\n      <FlatList\r\n        data={contentList}\r\n        renderItem={renderItem}\r\n        contentContainerStyle={{flexGrow:1}}\r\n        ListFooterComponent={()=><CommonSection bodyStyle={{flexDirection:'row', justifyContent:'flex-end', paddingVertical:0, borderWidth:0}}>\r\n            <CommonButton title={'write'} onPress={()=>navigation.navigate(\"BoardEditScreen\", {channel_id})}/>\r\n        </CommonSection>}\r\n      />\r\n  </View>\r\n}\r\n// outerContainerStyle={{alignContent:'flex-end'}} containerStyle={{width:'50%'}}\r\n","import React, {useCallback, useEffect, useRef} from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { StyleSheet, Text, Button, View} from 'react-native';\r\nimport Profile from '../components/Profile';\r\nimport useAuthContext from '../hooks/useAuthContext';\r\nimport useUserMembershipList from '../hooks/lists/useUserMembershipList';\r\nimport { useMessengerChannelMutation } from '../hooks/lists/useMessengerChannelList';\r\nimport CommonButton from '../components/CommonButton';\r\nimport { Channel } from '../types';\r\nimport { navigate } from '../navigation';\r\n\r\n\r\nexport default function ProfileScreen({\r\n  navigation, route\r\n}: StackScreenProps<any, 'Profile'>) {\r\n  const id = route?.params?.id\r\n  const {auth} = useAuthContext()\r\n  const userList = useUserMembershipList(auth)\r\n  const user = userList?.find(v=>v.id==id)\r\n  const channelMutation = useMessengerChannelMutation()\r\n  const back = ()=>{\r\n    if(navigation.canGoBack())\r\n        navigation.goBack()\r\n      else{\r\n        navigation.replace('Main')\r\n      }\r\n  }\r\n  useEffect(()=>{\r\n    if (!(id && user) && userList)\r\n      back()\r\n  }, [userList])\r\n  return user?<View style={{padding:10}}>\r\n    \r\n    <Profile username={user?.username} name={user?.name} />\r\n    <CommonButton title={'create messenger'} onPress={()=>{\r\n      if(auth?.user?.id && auth.groupId){\r\n        const newChannel:Channel = {name:`${auth.user.name}, ${user.name}`, type:'messenger', owner:auth?.user?.id, group:auth.groupId};\r\n        channelMutation.create(newChannel).then(v=>navigate(\"Main\", {screen:\"MessengerScreen\", params: {id:v.id}}))\r\n      }\r\n    }}/>\r\n  </View>:<></>\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { Dimensions } from 'react-native';\r\n\r\ntype WindowType = 'portrait' | 'landscape'\r\n\r\nexport default function useResizeWindow() {\r\n  const [window, setWindow] = useState(Dimensions.get('window'));\r\n  const onChange = () => setWindow(Dimensions.get('window'))\r\n  useEffect(() => {\r\n    Dimensions.addEventListener(\"change\", onChange);\r\n    return () => {\r\n      Dimensions.removeEventListener(\"change\", onChange);\r\n    };\r\n  });\r\n  return window.height >= window.width?'portrait':'landscape' as WindowType;\r\n}","import * as React from 'react';\r\nimport { View } from './Themed';\r\nimport { StyleSheet, StyleProp, ViewStyle, TextStyle, Pressable } from 'react-native';\r\nimport Colors from '../constants/Colors';\r\n\r\nexport type ItemParamList = {\r\n    outerContainerStyle?:StyleProp<TextStyle>\r\n    containerStyle?:StyleProp<ViewStyle>\r\n    bodyStyle?:StyleProp<ViewStyle>\r\n    children?: React.ReactNode\r\n    onPress?: ()=>void\r\n}\r\n\r\nexport default function CommonItem(props:ItemParamList){\r\n  const [hover, setHover] = React.useState(false)\r\n  const [press, setPress] = React.useState(false)\r\n  return (\r\n    <Pressable\r\n      style={[styles.outerContainer ,props.outerContainerStyle, (press)?{backgroundColor:'rgb(242,242,242)'}:{}]}\r\n      onPressIn={()=>{setPress(true)}}\r\n      onPressOut={()=>{setPress(false);props.onPress?.()}}\r\n       //@ts-ignore\r\n       onHoverIn={()=>setHover(true)}\r\n       onHoverOut={()=>setHover(false)}\r\n    >\r\n        <View style={[styles.container ,props.containerStyle]}>\r\n            <View style={[styles.bodyView, props.bodyStyle]}>\r\n                <>{props.children}</>\r\n            </View>\r\n      </View>\r\n    </Pressable>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  outerContainer:{\r\n    width:'100%',\r\n    maxWidth:1080,\r\n    alignItems:'stretch',\r\n  },  \r\n  container: {\r\n      marginHorizontal:20,\r\n      backgroundColor:'transparent'\r\n    },\r\n    bodyView:{\r\n      width: '100%',\r\n      padding: 10,\r\n      minHeight: 40,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      borderBottomWidth:1,\r\n      borderColor:Colors.borderColor,\r\n      backgroundColor:'transparent'\r\n    }\r\n  });\r\n  ","import React, { createContext, useContext } from \"react\"\r\nimport useWebSocket from \"react-use-websocket\"\r\nimport { SendJsonMessage } from \"react-use-websocket/dist/lib/types\"\r\n\r\nconst WebSocketContext = createContext<{lastJsonMessage:any, sendJsonMessage:SendJsonMessage }>({lastJsonMessage:null, sendJsonMessage:()=>{}});\r\n\r\nconst WebSocketProviderInternal = ({children}:{children:React.ReactNode})=>{\r\n  const { lastJsonMessage, sendJsonMessage } = useWebSocket('ws://localhost:9000/messenger/ws/',{\r\n    shouldReconnect: (closeEvent) => true\r\n  })\r\n  return <WebSocketContext.Provider value={{lastJsonMessage, sendJsonMessage}}>\r\n  {children}\r\n</WebSocketContext.Provider>\r\n}\r\n\r\nexport const WebSocketProvider = ({disable, children}:{disable?:boolean, children:React.ReactNode})=>{\r\n  return disable?<>{children}</>:<WebSocketProviderInternal>\r\n    {children}\r\n  </WebSocketProviderInternal>\r\n}\r\n\r\nexport default ()=>{\r\n  const webSocketContext = useContext(WebSocketContext)\r\n  return webSocketContext\r\n}\r\n\r\n","import { useQuery } from \"react-query\";\r\nimport { getUserMembershipList } from \"../../apis\";\r\nimport { Auth } from \"../useAuthContext\";\r\n\r\nexport default function useUserMembershipList(auth?:Auth){\r\n  const { data } = useQuery([\"UserMembershipList\", auth?.groupId] , async()=>auth?.groupId?(await getUserMembershipList(auth?.groupId)):[])\r\n  return data\r\n}","import { MaterialCommunityIcons, MaterialIcons } from \"@expo/vector-icons\"\r\nimport React from \"react\"\r\nimport { Text, View } from \"react-native\"\r\nimport CommonItem from \"../components/CommonItem\"\r\nimport useAuthContext from \"../hooks/useAuthContext\"\r\nimport useUserMembershipList from \"../hooks/lists/useUserMembershipList\"\r\nimport { UserMembership } from \"../types\"\r\nimport { navigate } from \"../navigation\"\r\n\r\nexport const renderMemberItem = (item:UserMembership, onPress?:(item:UserMembership)=>void)=> (\r\n    <CommonItem key={item.id} bodyStyle={{flexDirection:'row', justifyContent:'flex-start'}} onPress={onPress?()=>onPress(item):undefined}>\r\n        <MaterialIcons size={38} style={{ marginBottom: -3, marginRight:10 }} name='account-circle'/>\r\n        <Text style={{fontSize:20, fontWeight:'400'}}>{item.name}</Text>\r\n    </CommonItem>\r\n)\r\n\r\nexport default ()=>{\r\n    const {auth} = useAuthContext()\r\n    const userList = useUserMembershipList(auth)\r\n    return <View style={{flex:1, backgroundColor:'white'}}>\r\n        {userList && userList.map(item=>renderMemberItem(item, (item)=>navigate(\"ProfileScreen\", {id:item.id})))}\r\n    </View>\r\n}\r\n\r\nexport const MemberIcon = <MaterialCommunityIcons size={32} style={{ marginBottom: -3 }} name='account'/>","import { ColorSchemeName, useColorScheme as _useColorScheme } from 'react-native';\r\n\r\n// The useColorScheme value is always either light or dark, but the built-in\r\n// type suggests that it can be null. This will not happen in practice, so this\r\n// makes it a bit easier to work with.\r\nexport default function useColorScheme(): NonNullable<ColorSchemeName> {\r\n  return _useColorScheme() as NonNullable<ColorSchemeName>;\r\n}\r\n","import React, { useState } from 'react';\r\nimport { StyleSheet} from 'react-native';\r\nimport { CustomButtonProps } from '../types';\r\nimport CommonButton from './CommonButton';\r\n\r\nexport default (props:CustomButtonProps)=>{\r\n    return <CommonButton {...props} style={[styles.style, props.style]}/>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    style:{\r\n        borderRadius:6, \r\n        backgroundColor: 'transparent',\r\n        borderWidth:0\r\n    },\r\n});\r\n","import { useTheme } from '@react-navigation/native';\r\nimport React, { useState } from 'react';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport { TabView, SceneMap,NavigationState, SceneRendererProps, TabBar } from 'react-native-tab-view';\r\nimport { navigate } from '.';\r\nimport Profile from '../components/Profile';\r\nimport TextButton from '../components/TextButton';\r\nimport Colors from '../constants/Colors';\r\nimport useResizeWindow from '../hooks/useResizeWindow';\r\nimport { drawerTabs } from '../tabs';\r\nimport { UserMembership } from '../types';\r\n\r\nexport const TabViewNavigator = (props:{tabs:typeof drawerTabs, tabBarPosition:\"top\"|\"bottom\", index?:number, onTab?:(index:number)=>void})=>{\r\n  const [index, setIndex] = React.useState(props.index || 0);\r\n  const entries = Object.entries(props.tabs)\r\n  const onTab = props.onTab\r\n  const icons = Object.assign({}, ...entries.map(([k, v])=>({[k]:v.icon})))\r\n  return <TabView\r\n    renderTabBar={(props:SceneRendererProps & {navigationState: NavigationState<any>})=>{\r\n      return <TabBar\r\n        {...props}\r\n        indicatorStyle={{ backgroundColor: \"#2196F3\" }}\r\n        style={{ backgroundColor:'white' }}\r\n        activeColor={'black'}\r\n        inactiveColor={'black'}\r\n        renderIcon={(scene)=>icons[scene.route.key]}\r\n        onTabPress={(scene)=>onTab?.(entries.findIndex(([k, v])=>k == scene.route.key))}\r\n      />\r\n    }}\r\n    navigationState={{ index, routes: entries.map(([k, v])=>({key:k, title:v.title}))}}\r\n    onIndexChange={setIndex}\r\n    renderScene={SceneMap(Object.assign({}, ...entries.map(([k, v])=>({[k]:v.component}))))}\r\n    tabBarPosition={props.tabBarPosition}\r\n  />\r\n}\r\n\r\nconst onAddList = [\r\n  ()=>navigate(\"ChannelEditScreen\", {type:\"messenger\"}),\r\n  ()=>navigate(\"ChannelEditScreen\", {type:\"board\"})\r\n]\r\n\r\nexport default ({user}:{user:UserMembership})=> {\r\n  const { colors } = useTheme();\r\n  const windowType = useResizeWindow();\r\n  const [index, setIndex] = useState(0);\r\n  return windowType=='landscape'?<View\r\n      style={[\r\n        styles.tabBar,\r\n        {\r\n          backgroundColor: colors.card,\r\n          borderTopColor: colors.border,\r\n        },\r\n        // tabBarStyle,\r\n      ]}\r\n      pointerEvents={false ? 'none' : 'auto'}\r\n    >\r\n      <Profile username={user.username} name={user.name}/>\r\n      <View style={{flexDirection:'row-reverse'}}>\r\n          <TextButton title='+' textStyle={{fontSize:20}} style={{borderRadius:20}} onPress={onAddList[index]}/>\r\n      </View>\r\n      <View accessibilityRole=\"tablist\" style={styles.content}>\r\n        <TabViewNavigator tabs={drawerTabs} tabBarPosition={\"top\"} onTab={setIndex}/>\r\n      </View>\r\n    </View>:<View style={{width:0}}></View>\r\n}\r\n\r\n{/*<Text style={[styles.label, { color: d.isFocused ? colors.primary : '#222' }]}></Text> */}\r\n\r\nconst styles = StyleSheet.create({\r\n    tabBar: {\r\n      width:240,\r\n      elevation: 8,\r\n      borderRightWidth:1,\r\n      borderColor:Colors.borderColor\r\n    },\r\n    content: {\r\n      flex: 1,\r\n      flexDirection: 'row',\r\n    },\r\n    tab: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n    },\r\n    label: {\r\n        textAlign: 'center',\r\n        backgroundColor: 'transparent',\r\n      },\r\n  });","import React from \"react\"\r\nimport { View, Text } from \"react-native\"\r\nimport CommonItem from \"../components/CommonItem\"\r\nimport useBoardChannelList from \"../hooks/lists/useBoardChannelList\"\r\nimport useMessengerChannelList from \"../hooks/lists/useMessengerChannelList\"\r\nimport useAuthContext from \"../hooks/useAuthContext\"\r\nimport { navigate } from \"../navigation\"\r\n\r\nconst DrawerTab = (props:{data:{name:string, onPress?:()=>void}[]})=><View style={{flex:1, backgroundColor:'white'}}>\r\n    {props.data.map((item, index)=><CommonItem key={index} containerStyle={{marginHorizontal:0}} bodyStyle={{alignItems:'flex-start'}} onPress={item.onPress}>\r\n        <Text style={{marginLeft:20}}>{item.name}</Text>\r\n    </CommonItem>\r\n    )}\r\n</View>\r\n\r\nexport default {\r\n    Messenger:()=>{\r\n        const {auth} = useAuthContext()\r\n        const channelList = useMessengerChannelList(auth);\r\n        return <DrawerTab data={(channelList || []).map(item=>({...item, onPress:()=>navigate(\"ChatScreen\", {id:item.id})}))}/>\r\n    },\r\n    Board:()=>{\r\n        const {auth} = useAuthContext()\r\n        const channelList = useBoardChannelList(auth);\r\n        return <DrawerTab data={(channelList || []).map(item=>({...item, onPress:()=>navigate(\"BoardScreen\", {id:item.id})}))}/>\r\n    },\r\n}","import { Ionicons, FontAwesome } from \"@expo/vector-icons\"\r\nimport React from \"react\"\r\nimport { Text, View } from \"react-native\"\r\nimport CommonItem from \"../components/CommonItem\"\r\nimport useAuthContext from \"../hooks/useAuthContext\"\r\nimport useMessengerChannelList from \"../hooks/lists/useMessengerChannelList\"\r\nimport { navigate } from \"../navigation\"\r\n\r\nexport default ()=>{\r\n    const {auth} = useAuthContext()\r\n    const channelList = useMessengerChannelList(auth)\r\n    const today = (new Date()).toISOString().slice(0, 10)\r\n    return <View style={{flex:1, backgroundColor:'white'}}>\r\n        {channelList?.map((item, index)=>{\r\n            const date = item.last_message?.created.slice(0,10)\r\n            return <CommonItem key={index} bodyStyle={{flexDirection:'row', justifyContent:'space-between'}} onPress={()=>navigate(\"ChatScreen\", {id:item.id})}>\r\n                <View style={{flexDirection:'row'}}>\r\n                    <FontAwesome size={36} style={{ marginBottom: -3, marginRight:20 }} name='users'/>\r\n                    <View>\r\n                        <View style={{flexDirection:'row'}}>\r\n                            <Text style={{fontSize:18}}>{item.name}</Text>\r\n                            <Text style={{fontSize:18, opacity: 0.4, paddingLeft:5}}>{item.member_count}</Text>\r\n                        </View>\r\n                        <Text style={{fontSize:16, opacity: 0.4}}>{item.last_message?.content}</Text>\r\n                    </View>\r\n                </View>\r\n                <View>\r\n                    <Text style={{fontSize:14, opacity: 0.4, textAlign:'right'}}>{date==today?item.last_message?.created.slice(11,16):date}</Text>\r\n                    <Text style={{fontSize:14, textAlign:'right'}}>{item.unread_count?item.unread_count:' '}</Text>\r\n                </View>\r\n            </CommonItem>\r\n        })}\r\n    </View>\r\n}\r\n\r\nexport const MessengerIcon = <Ionicons size={30} style={{ marginBottom: -3 }} name='chatbox'/>","import { FontAwesome, FontAwesome5 } from \"@expo/vector-icons\"\r\nimport React from \"react\"\r\nimport { Text, View } from \"react-native\"\r\nimport CommonItem from \"../components/CommonItem\"\r\nimport useBoardChannelList from \"../hooks/lists/useBoardChannelList\"\r\nimport useAuthContext from \"../hooks/useAuthContext\"\r\nimport { navigate } from \"../navigation\"\r\n\r\nexport default ()=>{\r\n    const {auth} = useAuthContext()\r\n    const channelList = useBoardChannelList(auth)\r\n    return <View style={{flex:1, backgroundColor:'white'}}>\r\n        {channelList?.map(item=><CommonItem key={item.id} bodyStyle={{flexDirection:'row', justifyContent:'flex-start'}} onPress={()=>navigate(\"BoardScreen\", {id:item.id})}>\r\n            <FontAwesome size={32} style={{ marginBottom: -3, marginRight:10 }} name='bars'/>\r\n            <Text style={{fontSize:20, fontWeight:'400'}}>{item.name}</Text>\r\n        </CommonItem>)}\r\n    </View>\r\n}\r\n\r\nexport const BoardIcon = <FontAwesome5 size={30} style={{ marginBottom: 3 }} name='clipboard-list'/>","import React from \"react\";\r\nimport MemberTab, {MemberIcon} from \"./MemberTab\";\r\nimport OneTab, {ConfigIcon} from \"./OneTab\";\r\nimport DrawerTab  from './DrawerTab';\r\nimport MessengerTab, {MessengerIcon} from \"./MessengerTab\";\r\nimport BoardTab, {BoardIcon}  from \"./BoardTab\";\r\n\r\nexport const bottomTabs = {\r\n    OneTab:{\r\n        title:'member',\r\n        component:MemberTab,\r\n        icon:MemberIcon,\r\n    },\r\n    TwoTab:{\r\n        title:'messenger',\r\n        component:MessengerTab,\r\n        icon:MessengerIcon\r\n    },\r\n    ThreeTab:{\r\n        title:'board',\r\n        component:BoardTab,\r\n        icon:BoardIcon\r\n    },\r\n    // FourTab:{\r\n    //     title:'config',\r\n    //     component:OneTab,\r\n    //     icon:ConfigIcon\r\n    // }\r\n} as Record<string, {title:string, component:React.ComponentType<any>, icon:JSX.Element}>\r\n\r\nexport const drawerTabs = {\r\n    TwoTab:{\r\n        title:'messenger',\r\n        component:DrawerTab.Messenger,\r\n        icon:MessengerIcon\r\n    },\r\n    ThreeTab:{\r\n        title:'board',\r\n        component:DrawerTab.Board,\r\n        icon:BoardIcon\r\n    }\r\n} as Record<string, {title:string, component:React.ComponentType<any>, icon:JSX.Element}>","import * as React from 'react';\r\nimport {View, Text} from 'react-native';\r\nimport { Avatar } from 'react-native-paper';\r\nimport Colors from '../../constants/Colors';\r\nimport { ProfileProps } from '../../types';\r\n\r\nexport default (props:ProfileProps) => (\r\n    <View style={{width:'100%', height:135, justifyContent:'space-evenly', alignItems:'center'}}>\r\n        <Avatar.Text style={{backgroundColor:Colors.header}} size={75} label={props.name.split(' ').map(v=>v[0]).join().toUpperCase()} />\r\n        <Text style={{fontWeight:'bold', fontSize:15}}>{props.name}</Text>\r\n        <Text style={{fontWeight:'normal', fontSize:14}}>{props.username}</Text>\r\n    </View>\r\n);","import React from 'react';\r\nimport {View} from 'react-native'\r\nimport Profile from '../lib/react-native-paper/Profile';\r\nimport { ProfileProps } from '../types';\r\n\r\nexport default (props:ProfileProps)=>{\r\n    return <View style={{width:'100%', height:135}}>\r\n        <Profile {...props}/>\r\n    </View>\r\n}\r\n\r\n","/**\r\n * Learn more about Light and Dark modes:\r\n * https://docs.expo.io/guides/color-schemes/\r\n */\r\n\r\nimport * as React from 'react';\r\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\r\n\r\nimport Colors from '../constants/Colors'\r\nimport useColorScheme from '../hooks/useColorScheme';\r\n\r\nexport function useThemeColor(\r\n  props: { light?: string; dark?: string },\r\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\r\n) {\r\n  const theme = useColorScheme();\r\n  const colorFromProps = props[theme];\r\n\r\n  if (colorFromProps) {\r\n    return colorFromProps;\r\n  } else {\r\n    return Colors[theme][colorName];\r\n  }\r\n}\r\n\r\ntype ThemeProps = {\r\n  lightColor?: string;\r\n  darkColor?: string;\r\n};\r\n\r\nexport type TextProps = ThemeProps & DefaultText['props'];\r\nexport type ViewProps = ThemeProps & DefaultView['props'];\r\n\r\nexport function Text(props: TextProps) {\r\n  const { style, lightColor, darkColor, ...otherProps } = props;\r\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\r\n\r\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\r\n}\r\n\r\nexport function View(props: ViewProps) {\r\n  const { style, lightColor, darkColor, ...otherProps } = props;\r\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\r\n\r\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\r\n}\r\n","/**\r\n * Learn more about deep linking with React Navigation\r\n * https://reactnavigation.org/docs/deep-linking\r\n * https://reactnavigation.org/docs/configuring-links\r\n */\r\n\r\nimport { LinkingOptions } from '@react-navigation/native';\r\nimport * as Linking from 'expo-linking';\r\nimport {main, login, modal} from '../screens';\r\n\r\nconst ROOTPATH = 'kiblack-tok'  // github repository name\r\n\r\nObject.values(modal).forEach(v=>v.path = ROOTPATH + '/' + v.path)\r\n\r\nexport default  {\r\n  prefixes: [Linking.makeUrl('/')],\r\n  config: {\r\n    screens: {\r\n      Main: {\r\n        screens:{\r\n          ...main,\r\n          ...login,\r\n          NotFound: '*',\r\n        },\r\n        path: ROOTPATH\r\n      },\r\n      ...modal\r\n    },\r\n  },\r\n} as LinkingOptions;\r\n","import React from 'react';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\r\nimport Navigation from './src/navigation';\r\nimport useColorScheme from './src/hooks/useColorScheme';\r\nimport useCachedResources from './src/hooks/useCachedResources';\r\n\r\nexport default function App() {\r\n  const isLoadingComplete = useCachedResources();\r\n  const colorScheme = useColorScheme();\r\n  if (!isLoadingComplete) {\r\n    return null;\r\n  } else {\r\n    return (\r\n      <SafeAreaProvider>\r\n        <Navigation colorScheme={colorScheme} />\r\n        <StatusBar />\r\n      </SafeAreaProvider>\r\n    );\r\n  }\r\n}\r\n","import { Ionicons } from '@expo/vector-icons';\r\nimport * as Font from 'expo-font';\r\nimport * as SplashScreen from 'expo-splash-screen';\r\nimport * as React from 'react';\r\n\r\nexport default function useCachedResources() {\r\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\r\n\r\n  // Load any resources or data that we need prior to rendering the app\r\n  React.useEffect(() => {\r\n    async function loadResourcesAndDataAsync() {\r\n      try {\r\n        SplashScreen.preventAutoHideAsync();\r\n\r\n        // Load fonts\r\n        await Font.loadAsync({\r\n          ...Ionicons.font,\r\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\r\n        });\r\n      } catch (e) {\r\n        // We might want to provide this error information to an error reporting service\r\n        console.warn(e);\r\n      } finally {\r\n        setLoadingComplete(true);\r\n        SplashScreen.hideAsync();\r\n      }\r\n    }\r\n\r\n    loadResourcesAndDataAsync();\r\n  }, []);\r\n\r\n  return isLoadingComplete;\r\n}\r\n","import { StackScreenProps } from '@react-navigation/stack';\r\nimport * as React from 'react';\r\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\r\n\r\nexport default function NotFoundScreen({\r\n  navigation,\r\n}: StackScreenProps<any, 'NotFound'>) {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>This screen doesn't exist.</Text>\r\n      <TouchableOpacity onPress={() => navigation.replace('HomeScreen')} style={styles.link}>\r\n        <Text style={styles.linkText}>Go to home screen!</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n  link: {\r\n    marginTop: 15,\r\n    paddingVertical: 15,\r\n  },\r\n  linkText: {\r\n    fontSize: 14,\r\n    color: '#2e78b7',\r\n  },\r\n});\r\n","import { CardStyleInterpolators, createStackNavigator } from '@react-navigation/stack';\r\nimport React, {useMemo} from 'react';\r\nimport { View } from 'react-native';\r\nimport { QueryClient, QueryClientProvider } from \"react-query\";\r\n\r\nimport useResizeWindow from '../hooks/useResizeWindow';\r\nimport NotFoundScreen from '../screens/NotFoundScreen';\r\nimport {main, login, modal} from '../screens';\r\nimport DrawerNavigator from './DrawerNavigator';\r\nimport useAuthContext, {AuthProvider} from '../hooks/useAuthContext';\r\nimport { WebSocketProvider } from '../hooks/useWebsocketContext';\r\nimport HeaderRight from '../components/HeaderRight'\r\nimport Colors from '../constants/Colors';\r\n\r\nconst Root = createStackNavigator();\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nexport default function RootNavigator() {\r\n    const windowType = useResizeWindow();\r\n    return (\r\n            <AuthProvider>\r\n                <QueryClientProvider client={queryClient}>\r\n                    {/* devtools */}\r\n                    {/* <ReactQueryDevtools initialIsOpen={true} /> */}\r\n                        <Root.Navigator\r\n                            mode= 'modal'\r\n                            headerMode= 'screen'\r\n                            screenOptions={{\r\n                                cardStyle:{backgroundColor:\"white\"},\r\n                                animationEnabled: true,\r\n                                cardStyleInterpolator: CardStyleInterpolators.forVerticalIOS,\r\n                            }}\r\n                        >\r\n                            <Root.Screen name=\"Main\" component={MainNavigator} options={{headerShown:false}}/>\r\n                            {Object.entries(modal).map(([key, screen])=><Root.Screen key={key} name={key} component={screen.component} options={{\r\n                                title: screen.title,\r\n                                gestureDirection: windowType == 'landscape'?'vertical-inverted':'vertical'\r\n                            }} />)}\r\n                        </Root.Navigator>\r\n                </QueryClientProvider>\r\n            </AuthProvider>\r\n    );\r\n}\r\n\r\nconst Main = createStackNavigator();\r\n\r\nfunction MainNavigator(){\r\n    const {auth} = useAuthContext()\r\n    const entries = useMemo(()=>{\r\n        if (auth.user === undefined)\r\n            return []\r\n        console.log('current user: ', auth.user)\r\n        return Object.entries(auth.user === null?login:main)\r\n    }, [auth])\r\n    return (auth.user!==undefined?<View style={{flexDirection:'row', flex:1}}>\r\n        {auth.user?<DrawerNavigator user={auth.user}/>:undefined}\r\n        <View style={{flex:1}}>\r\n            <WebSocketProvider disable={auth.user === null || auth.user === undefined}>\r\n                <Main.Navigator\r\n                    screenOptions={{\r\n                        headerStyle:{backgroundColor:Colors.header},\r\n                        headerTitleStyle:{color:'white'},\r\n                        headerRight:()=><HeaderRight/>,\r\n                        headerLeftContainerStyle:{backgroundColor:'white', borderBottomWidth:1, borderColor:Colors.borderColor}\r\n                    }}\r\n                >\r\n                    {entries.map(([key, screen])=><Main.Screen key={key} name={key} component={screen.component} options={{ title: screen.title }} />)}\r\n                    <Main.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\r\n                </Main.Navigator>\r\n            </WebSocketProvider>\r\n        </View>\r\n    </View>:<></>);\r\n}","import axios, { AxiosRequestConfig } from 'axios';\r\n\r\n\r\nconst DEVDOMAIN = 'http://localhost:9000'\r\nconst PRODDOMAIN = 'https://blacktokki.com'\r\n\r\nexport const defaultOption:AxiosRequestConfig = {\r\n    baseURL: `${PRODDOMAIN}/messenger/`,\r\n    withCredentials: true\r\n};\r\n\r\nconst _axios = axios.create(defaultOption);\r\n\r\n_axios.interceptors.request.use(\r\n    config => {\r\n        return config;\r\n    },\r\n    error => {\r\n        return Promise.reject(error);\r\n    }\r\n)\r\n\r\n_axios.interceptors.response.use(\r\n    response => {\r\n        // if((response.request.responseURL as string).indexOf('/task/login')>=0 && response.data.length != 0){\r\n        //     // redirect login\r\n        // }\r\n        return response;\r\n    },\r\n    error => {\r\n        if (error.response.status === 401) {\r\n            // redirect login\r\n        }\r\n        return Promise.reject(error)\r\n    }\r\n)\r\n\r\nexport default _axios\r\n","\r\nimport { User, UserMembership } from '../types';\r\nimport axios from './axios';\r\n\r\nexport const login = async(username:string, password:string) => {\r\n    if(username.endsWith('.guest') && password.length == 0)\r\n        password = 'guest'\r\n    const r = await axios.get(\"/csrf/\")\r\n    var bodyFormData = new FormData();\r\n    bodyFormData.append('csrfmiddlewaretoken', r.data)\r\n    bodyFormData.append('username', username)\r\n    bodyFormData.append('password', password)\r\n    bodyFormData.append('submit', 'Log in')\r\n    const r2 = await axios.post(\"/api-auth/login/\", bodyFormData, {headers: {\"Content-Type\": \"multipart/form-data\"}})\r\n    if(r2.status == 200){\r\n        return await checkLogin()\r\n    }\r\n}\r\n\r\nexport const logout = async() => {\r\n    return await axios.get(\"/api-auth/logout/\")\r\n}\r\n\r\nexport const guestLogin =  async() => {\r\n    return await login('guest', 'guest')\r\n}\r\n\r\nexport const checkLogin = async() => {\r\n    try{\r\n        const value = (await axios.get(\"/api/v1/users/memberships/?_self=true\"))?.data\r\n        if (value && value.length){\r\n            return value[0] as UserMembership\r\n        }\r\n        return null\r\n    }\r\n    catch(e){\r\n        throw {\r\n            error:e,\r\n            isOffline:((e as any).code == \"ERR_NETWORK\" || (e as any).message && ((e as any).message as string).startsWith(\"Cannot read\"))\r\n        }\r\n    }\r\n}\r\n\r\nexport const getUserList = async (group_id:number)=>{\r\n    return (await axios.get(`/api/v1/users/?group_id=${group_id}`) ).data as User[]\r\n}\r\n\r\nexport const getUserMembershipList = async (group_id:number)=>{\r\n    return (await axios.get(`/api/v1/users/memberships/?group_id=${group_id}`) ).data as UserMembership[]\r\n}\r\n\r\n// export const getGroup = async (user:User)=>{\r\n//     return (await) axios.get(``)\r\n// }\r\n\r\n","import { Board, EditBoard, BoardContent, Channel, MessengerMember, MessengerContent, EditMessage, MessengerChannel } from '../types';\r\nimport axios from './axios';\r\n\r\nexport const getBoardChannelList = async (group_id:number)=>{\r\n    return (await axios.get(`/api/v1/channels/?type=board&group=${group_id}`) ).data as Channel[]\r\n}\r\n\r\nexport const getMessengerChannelList = async (user_id:number)=>{\r\n    return (await axios.get(`/api/v1/channels/messenger/?type=messenger&messenger_user_id=${user_id}`) ).data as MessengerChannel[]\r\n}\r\n\r\nexport const postChannel = async(channel:Channel)=>{\r\n    return (await axios.post(`/api/v1/channels/`, channel)).data as Channel\r\n}\r\n\r\nexport const putChannel = async(channel:Channel)=>{\r\n    return (await axios.put(`/api/v1/channels/${channel.id}/`, channel)).data as Channel\r\n}\r\n\r\nexport const deleteChannel = async(channel_id:number)=>{\r\n    await axios.delete(`/api/v1/channels/${channel_id}/`)\r\n}\r\n\r\nexport const getBoardContentList = async (channel_id:number)=>{\r\n    return (await axios.get(`/api/v1/boardcontents/?channel=${channel_id}`) ).data as BoardContent[]\r\n}\r\n\r\nexport const postBoard = async (board:EditBoard)=>{\r\n    await axios.post(`/api/v1/boardcontents/boards/`, board)\r\n}\r\n\r\nexport const patchBoard = async (board:Board)=>{\r\n    await axios.patch(`/api/v1/boardcontents/${board.id}/board/`, board)\r\n}\r\n\r\nexport const deleteBoardContent = async (content_id:number)=>{\r\n    await axios.delete(`/api/v1/boardcontents/${content_id}/`)\r\n}\r\n\r\nexport const getMessengerMemberList = async(channel_id:number)=>{\r\n    return (await axios.get(`/api/v1/messengermembers/?channel=${channel_id}`) ).data as MessengerMember[]\r\n}\r\n\r\nexport const postBulkMessengerMember = async(data:{channel_id:number, user_ids:number[]})=>{\r\n    await axios.post(`/api/v1/messengermembers/bulk/`, {channel:data.channel_id, user_ids:data.user_ids})\r\n}\r\n\r\nexport const deleteMessengerMember = async(member_id:number)=>{\r\n    await axios.delete(`/api/v1/messengermembers/${member_id}/`)\r\n}\r\n\r\nexport const getMessengerContentList = async (channel_id:number, id_lt?:number)=>{\r\n    const id_lt_param = id_lt?`&id_lt=${id_lt}`:''\r\n    return (await axios.get(`/api/v1/messengercontents/?limit=30&channel=${channel_id}${id_lt_param}`)).data.results as MessengerContent[]\r\n}\r\n\r\nexport const postMessage = async (message:EditMessage)=>{\r\n    await axios.post(`/api/v1/messengercontents/messages/`, message)\r\n}\r\n\r\nexport const deleteMessengerContent = async (content_id:number)=>{\r\n    await axios.delete(`/api/v1/messengercontents/${content_id}/`)\r\n}","/**\r\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\r\n * https://reactnavigation.org/docs/getting-started\r\n *\r\n */\r\nimport _ from 'lodash';\r\nimport { NavigationContainer, DefaultTheme, DarkTheme, NavigationContainerRef } from '@react-navigation/native';\r\nimport * as React from 'react';\r\nimport { ColorSchemeName } from 'react-native';\r\n\r\nimport LinkingConfiguration from './LinkingConfiguration';\r\nimport RootNavigator from './RootNavigator';\r\n\r\nconst navigationRef = React.createRef<NavigationContainerRef>();\r\n\r\nexport function navigate(name:string, params?:any) {\r\n  if (params)\r\n    navigationRef.current?.navigate(name, params);\r\n  navigationRef.current?.navigate(name);\r\n}\r\n\r\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\r\n  return (\r\n    <NavigationContainer\r\n      ref={navigationRef}\r\n      documentTitle={{formatter: (options, route) => {return `KIBLACK TOK`}}}\r\n      linking={(process.versions && process.versions['electron'])?undefined:LinkingConfiguration}\r\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\r\n      <RootNavigator />\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\n(function(l) {  // for github-page\r\n    if (l !== undefined && l.search[1] === '/' ) {\r\n        var decoded = l.search.slice(1).split('&').map(function(s) { \r\n        return s.replace(/~and~/g, '&')\r\n        }).join('?');\r\n        window.history.replaceState(null, '',\r\n            l.pathname.slice(0, -1) + decoded + l.hash\r\n        );\r\n    }\r\n}(window.location))\r\n    \r\nconst ignoreWarnings = ['ReactNativeFiberHostComponent'];\r\nconst _console = _.clone(console);\r\nconsole.warn = (message: string|Object) => {\r\n    var warn = true;\r\n    if (message instanceof Object)\r\n    warn = false;\r\n    else{\r\n    ignoreWarnings.forEach((value)=>{\r\n        if (message.indexOf && message.indexOf(value) <= -1) {\r\n            warn = false;\r\n        }\r\n    })\r\n    };\r\n    if (warn){\r\n        _console.warn(message);\r\n    }\r\n    else{\r\n        // console.log(message)\r\n    }\r\n};\r\n","import React, { createContext, useContext, useEffect, useReducer, useMemo, Dispatch } from \"react\"\r\nimport { checkLogin, login, logout } from \"../apis\"\r\nimport { UserMembership } from \"../types\"\r\n\r\ntype AuthAction = {type:string, username?:string, password?:string, user?:UserMembership|null}\r\n\r\nexport type Auth = {user?:UserMembership|null, groupId?:number}\r\n\r\ntype AuthState ={user?:UserMembership|null, request?:{username:string, password:string}|null}\r\n\r\nconst AuthContext = createContext<{auth:Auth, dispatch:Dispatch<AuthAction>}>({auth:{}, dispatch:()=>{}});\r\n\r\nconst authReducer =(initialState:AuthState, action:AuthAction)=>{\r\n  switch (action.type){\r\n      case 'LOGIN_REQUEST':\r\n        return {\r\n          ...initialState,\r\n          request:{username:action.username, password:action.password},\r\n        } as AuthState\r\n      case 'LOGIN_GUEST':\r\n        return {\r\n          ...initialState,\r\n          request:{username:'guest', password:'guest'},\r\n        } as AuthState\r\n      case 'LOGIN_SUCCESS':\r\n          return{\r\n              ...initialState,\r\n              user:action.user,\r\n              request:undefined\r\n          }\r\n      case 'LOGIN_FAILED':\r\n          return{\r\n              ...initialState,\r\n              request:undefined\r\n          }\r\n      case 'LOGOUT_REQUEST':\r\n          return{\r\n              ...initialState,\r\n              request:null\r\n          }\r\n      case 'LOGOUT_SUCCESS':\r\n          return {\r\n            ...initialState,\r\n            user:null,\r\n            request:undefined\r\n          }\r\n      default:\r\n          throw new Error( `Unhandled action type: ${action.type}`)\r\n  }\r\n}\r\n\r\n\r\nexport const AuthProvider = ({children}:{children:React.ReactNode})=>{\r\n  const [authState, dispatch] = useReducer(authReducer, {} as Auth)\r\n  const auth = useMemo(()=>({\r\n    user:authState.user,\r\n    groupId: authState.user?.membership_set.find(g=>g.root_group_id==null)?.group\r\n  }), [authState])\r\n  useEffect(()=>{\r\n    if(authState.user===undefined){\r\n      checkLogin().then((user)=>{\r\n        dispatch({type:\"LOGIN_SUCCESS\", user})\r\n      }).catch((e)=>{\r\n        console.log(e)\r\n        dispatch({type:\"LOGOUT_SUCCESS\"})\r\n      })\r\n    }\r\n    else if(authState.user===null && authState.request){\r\n      login(authState.request.username, authState.request.password).then(user=>{\r\n        dispatch({type:\"LOGIN_SUCCESS\", user})\r\n      }).catch(()=>{\r\n        dispatch({type:\"LOGIN_FAILED\"})\r\n      })\r\n    }\r\n    else if(authState.user && authState.request===null){\r\n      logout().then(()=>dispatch({type:\"LOGOUT_SUCCESS\"}))\r\n    }\r\n  }, [authState])\r\n  return <AuthContext.Provider value={{auth, dispatch}}>\r\n    {children}\r\n  </AuthContext.Provider>\r\n}\r\n\r\nexport default ()=>{\r\n  const authContext = useContext(AuthContext)\r\n  return authContext\r\n}\r\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","const tintColorLight = '#2f95dc';\r\nconst tintColorDark = '#fff';\r\n\r\nexport default {\r\n  light: {\r\n    text: '#000',\r\n    background: '#fff',\r\n    tint: tintColorLight,\r\n    tabIconDefault: '#ccc',\r\n    tabIconSelected: tintColorLight,\r\n  },\r\n  dark: {\r\n    text: '#fff',\r\n    background: '#000',\r\n    tint: tintColorDark,\r\n    tabIconDefault: '#ccc',\r\n    tabIconSelected: tintColorDark,\r\n  },\r\n  button:{\r\n    color:'rgb(242,242,242)',\r\n    borderColor:'rgba(27,31,36,0.15)',\r\n    backgroundColor:'#f6f8fa', //'rgba(9,30,66,0.08)',//rgb(242,242,242)\r\n  },\r\n  borderColor:'#d0d7de',\r\n  header:'#24292f',\r\n  focus:'#0065A4',\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Text, StyleSheet, Pressable, StyleProp, ViewStyle} from 'react-native';\r\nimport Colors from '../constants/Colors';\r\nimport { CustomButtonProps } from '../types';\r\n\r\nconst DefaultButton = (props:CustomButtonProps)=>{\r\n    const [hover, setHover] = useState(false)\r\n    return <Pressable\r\n        onPress={()=>props.onPress()}\r\n        //@ts-ignore\r\n        onHoverIn={()=>setHover(true)}\r\n        onHoverOut={()=>setHover(false)}\r\n        style={[\r\n            {\r\n                paddingVertical:5, \r\n                paddingHorizontal:16\r\n            },\r\n            props.style,\r\n            hover?{backgroundColor:props.color}:{}\r\n        ]}>\r\n            <Text selectable={false} style={[{fontSize:14}, props.textStyle]}>{props.title}</Text>\r\n        </Pressable>\r\n}\r\n\r\nexport default (props:CustomButtonProps)=>{\r\n    const _props = {\r\n        color:Colors.button.color,\r\n        ...props,\r\n        style:[\r\n            styles.style,\r\n            props.style,\r\n        ] as StyleProp<ViewStyle>,\r\n        textStyle:[\r\n            styles.text, props.textStyle\r\n        ]\r\n    }\r\n    return <DefaultButton {..._props}/>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    style:{\r\n        borderRadius:6, \r\n        borderColor:Colors.button.borderColor, \r\n        borderWidth:1, \r\n        backgroundColor:Colors.button.backgroundColor\r\n    },\r\n    text:{\r\n        color:'black', \r\n        textAlign:'center', \r\n        fontWeight:'600'\r\n    }\r\n});\r\n","import React from 'react'\r\nimport TextButton from \"./TextButton\"\r\nimport useAuthContext from \"../hooks/useAuthContext\"\r\nimport useResizeWindow from '../hooks/useResizeWindow'\r\nimport { View } from 'react-native'\r\n\r\ntype ButtonProps = {title:string, onPress:()=>void, windowType?:'landscape'|'portrait'}\r\n\r\nexport default (props:{extra?:ButtonProps[]})=>{\r\n    const {dispatch} = useAuthContext()\r\n    const windowType = useResizeWindow()\r\n    const defaultButtonProps:ButtonProps[] = [{title:'logout', onPress:()=>dispatch({type:\"LOGOUT_REQUEST\"})}]\r\n    const buttonProps = (props.extra?[...props.extra, ...defaultButtonProps]:defaultButtonProps).filter(v=>v.windowType==windowType || v.windowType == undefined)\r\n    return<View style={{flexDirection:'row'}}>\r\n        {buttonProps.map((v,k)=><TextButton key={k} {...v} textStyle={{color:'white'}} color='#gray'/>)}\r\n    </View>\r\n}\r\n  ","import { useMutation, useQuery, useQueryClient } from \"react-query\";\r\nimport { deleteChannel, getBoardChannelList, postChannel, putChannel } from \"../../apis\";\r\nimport { Auth } from \"../useAuthContext\";\r\n\r\nexport default function useBoardChannelList(auth?:Auth){\r\n  const { data } = useQuery([\"BoardChannelList\", auth?.groupId] , async()=>auth?.groupId?(await getBoardChannelList(auth?.groupId)):[])\r\n  return data\r\n}\r\n\r\nexport function useBoardChannelMutation(){\r\n  const queryClient = useQueryClient()\r\n  const create = useMutation(postChannel, {\r\n    onSuccess: () => queryClient.invalidateQueries(\"BoardChannelList\")    \r\n  });\r\n  const update = useMutation(putChannel, {\r\n    onSuccess: () => queryClient.invalidateQueries(\"BoardChannelList\")\r\n  })\r\n  const _delete = useMutation(deleteChannel, {\r\n    onSuccess: () => queryClient.invalidateQueries(\"BoardChannelList\")\r\n  })\r\n\r\n  return { create:create.mutateAsync, update:update.mutateAsync, delete:_delete.mutate}\r\n}","import { useEffect } from \"react\";\r\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\r\nimport { getMessengerChannelList, postChannel, putChannel } from \"../../apis\";\r\nimport { MessengerChannel } from \"../../types\";\r\nimport { Auth } from \"../useAuthContext\";\r\nimport useWebsocketContext from \"../useWebsocketContext\";\r\n\r\nexport default function useMessengerChannelList(auth?:Auth){\r\n  const queryClient = useQueryClient()\r\n  const {lastJsonMessage} = useWebsocketContext()\r\n  const { data } = useQuery(\"MessengerChannelList\" , async()=>auth?.user?.id?(await getMessengerChannelList(auth.user.id)):[])\r\n\r\n  useEffect(()=>{\r\n    if(lastJsonMessage !=null){\r\n      if(lastJsonMessage['type']=='enter'){\r\n        queryClient.setQueryData<MessengerChannel[]>(\"MessengerChannelList\", (_data)=>{\r\n          return (_data?.find(v=>v.id==lastJsonMessage['data']['id'])?_data:[lastJsonMessage['data'] , ...(_data|| [])]).sort((a, b)=>a.id - b.id)\r\n        })\r\n      }\r\n      // if(lastJsonMessage['type']=='leave'){\r\n      //   queryClient.setQueryData<Channel[]>(\"MessengerChannelList\", (_data)=>_data?.filter(v=>v.id!=lastJsonMessage['data']['channel_id']) || [])\r\n      // }\r\n    }\r\n  }, [lastJsonMessage])\r\n  return data\r\n}\r\n\r\nexport function useMessengerChannelMutation(){\r\n  const queryClient = useQueryClient()\r\n\r\n  const create = useMutation(postChannel, {\r\n    onSuccess: ()=>queryClient.invalidateQueries(\"MessengerChannelList\")\r\n  });\r\n\r\n  const update = useMutation(putChannel, {\r\n    onSuccess: () => queryClient.invalidateQueries(\"MessengerChannelList\")\r\n  })\r\n\r\n\r\n  return { create:create.mutateAsync, update:update.mutateAsync}\r\n}"],"sourceRoot":""}