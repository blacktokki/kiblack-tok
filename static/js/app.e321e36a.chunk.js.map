{"version":3,"sources":["src/navigation/index.tsx","src/components/TextButton.tsx","src/hooks/lists/useMessengerMemberList.ts","src/components/HeaderRight.tsx","src/components/ContractFooter.tsx","src/screens/main/LoginScreen.tsx","src/hooks/lists/useMessengerContent.List.ts","src/components/LinkPreview.tsx","src/lib/react-native-webrtc/useWebsocketContext.tsx","src/lib/react-native-webrtc/webrtc/p2p.tsx","src/lib/react-native-webrtc/webrtc/index.ts","src/lib/react-native-webrtc/LocalCam.tsx","src/lib/react-native-webrtc/RemoteCam.tsx","src/screens/main/ChatScreen/VideoCallSection.tsx","src/components/FilePreview.tsx","src/screens/main/ChatScreen/index.tsx","src/screens/main/HomeScreen.tsx","src/screens/main/InviteeScreen.tsx","src/screens/index.ts","src/hooks/useWebsocketContext.tsx","src/components/ModalSection.tsx","src/modals/ChannelEditModal.tsx","src/apis/notification.ts","src/hooks/useIsMobile.ts","src/hooks/lists/useUserMembershipList.ts","src/components/TabView.tsx","src/components/CommonItem.tsx","src/lib/react-native-paper/Avatar.tsx","src/components/Avatar.tsx","src/components/RowField.tsx","src/components/TextField.tsx","src/components/Themed.tsx","src/modals/GuestLogoutModal.tsx","src/components/CommonTextInput.tsx","src/components/MemberItem.tsx","src/modals/ProfileModal.tsx","src/components/Profile.tsx","src/hooks/useLocalSearch.ts","src/modals/InviteModal.tsx","src/hooks/lists/useExternalMembershipList.ts","src/apis/axios.ts","src/constants/Colors.ts","src/navigation/LinkingConfiguration.ts","src/hooks/useAuthContext.tsx","src/screens/NotFoundScreen.tsx","src/navigation/DrawerNavigator.tsx","src/hooks/useFirebaseContext.tsx","src/modals/index.ts","src/navigation/RootNavigator.tsx","src/components/MobileSafeAreaView.tsx","App.tsx","src/hooks/useCachedResources.ts","src/lang/index.ts","src/hooks/useLangContext.tsx","src/components/CommonButton.tsx","web/firebase-config.js","src/assets/fonts/SpaceMono-Regular.ttf","src/apis/account.ts","src/apis/messenger.ts","src/hooks/useColorScheme.ts","src/hooks/useResizeContext.tsx","src/hooks/useModalsContext.tsx","src/hooks/lists/useMessengerChannelList.ts","src/components/CommonSection.tsx"],"names":["navigationRef","React","navigate","name","params","_navigationRef$curren","_navigationRef$curren2","current","Navigation","defaultColorScheme","useDefaultColorScheme","userColorScheme","useColorScheme","colorScheme","NavigationContainer","ref","documentTitle","formatter","options","route","linking","process","versions","undefined","LinkingConfiguration","theme","DarkTheme","DefaultTheme","ResizeContextProvider","RootNavigator","l","search","decoded","slice","split","map","s","replace","join","window","history","replaceState","pathname","hash","location","ignoreWarnings","_console","_","clone","console","warn","message","Object","forEach","value","indexOf","props","createElement","CommonButton","_extends","style","styles","StyleSheet","create","borderRadius","backgroundColor","borderWidth","useMessengerMemberList","channel_id","useQuery","_regeneratorRuntime","async","_context","prev","next","awrap","getMessengerMemberList","abrupt","sent","stop","Promise","data","useMessengerMemberMutation","queryClient","useQueryClient","invite","useMutation","postBulkMessengerMember","onSuccess","invalidateQueries","leave","deleteMessengerMember","mutateAsync","lang","useLangContext","_useAuthContext","useAuthContext","auth","dispatch","setModal","useModalsContext","windowType","useResizeContext","defaultButtonProps","title","onPress","_auth$user","user","username","endsWith","GuestLogoutModal","type","buttonProps","extra","concat","_toConsumableArray","filter","v","View","flexDirection","k","TextButton","key","textStyle","color","openURL","Platform","OS","url","href","Linking","Styles","footer_buttons","TouchableOpacity","footer_button","AntDesign","size","width","justifyContent","paddingBottom","paddingRight","alignItems","height","marginHorizontal","borderColor","login_container","flex","login_header","paddingTop","login_header_logo","resizeMode","login_header_text","marginTop","fontSize","login_header_text_bold","fontWeight","login_wrapper","borderTopRightRadius","borderTopLeftRadius","form","maxWidth","form_error","form_error_text","textAlignVertical","form_input","paddingHorizontal","marginBottom","button","button_label","login_social","login_social_separator","login_social_separator_line","login_social_separator_text","login_social_buttons","login_social_button","login_social_icon","login_social_facebook","login_footer_text","guest_footer_text","alignSelf","margin","login_footer_link","useMessengerContentList","_useInfiniteQuery","useInfiniteQuery","_ref","pageParam","getMessengerContentList","then","select","pages","length","getNextPageParam","lastPage","id","refetchOnReconnect","refetchOnWindowFocus","fetchNextPage","lastJsonMessage","useWebsocketContext","useEffect","setQueryData","_data","_objectSpread","pageParams","link","isMobile","CommonSection","containerStyle","bodyStyle","padding","image","Image","source","uri","maxHeight","Text","description","WebSocketContext","createContext","sendJsonMessage","WebSocketProvider","disable","children","Fragment","WebSocketInternalProvider","path","Context","useBackground","useContext","log","peerConstraints","iceServers","JSON","parse","sessionConstraints","mandatory","OfferToReceiveAudio","OfferToReceiveVideo","VoiceActivityDetection","mediaConstraints","audio","video","framerate","onICEcandidate","pc","_message","rtcMessage","candidate","RTCIceCandidate","addIceCandidate","sendICEcandidate","event","sendMessage","receiver","target","optimizeSdp","offerDescription","arr","sdp","str","i","test","RTCSessionDescription","createOffer","pcRefCurrent","stream","addStream","t0","t1","setLocalDescription","camStyle","container","cam","bottonContainer","position","bottom","buttonBar","label","_props$user","_useWebsocketContext","_useLocalCam","pcRef","useRef","_useState","useState","_useState2","_slicedToArray","sender","setSender","_useState3","_useState4","_stream","setStream","isPlay","useMemo","CustomRTCView","useCallback","memo","RTCView","videoProps","start","mode","newStream","_context2","mediaDevices","getUserMedia","getDisplayMedia","catch","e","entries","_ref2","_ref3","error","getTracks","track","websocketOnMessage","response","peerConnection","_peerConnection","answerDescription","_peerConnection2","_context3","channel_name","RTCPeerConnection","addEventListener","setRemoteDescription","useLocalCam","Button","setReceiver","_useRemoteCam","_useState5","_useState6","setUser","_useState7","_useState8","close","clearInterval","statsInterval","_pcRef$current","_pcRef$current2","_pcRef$current3","_pcRef$current4","streams","_peerConnection3","_answerDescription","_streams","_context5","iceConnectionState","activeStream","setInterval","stats","statsOutput","framePerSecond","_context4","getStats","report","kind","keys","statName","framesPerSecond","Date","toTimeString","addTransceiver","direction","getRemoteStreams","createAnswer","localDescription","useRemoteCam","TextInput","onChangeText","VideoView","scale","Colors","flexGrow","focusGuest","setFocusGuest","VideoCallContainer","setDisable","videoMode","setVideoMode","guests","setGuests","_useRtcContext","useRtcContext","find","Math","max","ceil","sqrt","toggleVideoMode","ThemedView","aspectRatio","flexShrink","borderLeftWidth","borderBottomWidth","flexWrap","RemoteCam","LocalCam","RtcProvider","file","showBorder","FontAwesome","filename","floor","pow","toFixed","humanFileSize","filesize","MessengerContentPageItem","_nextPage2","useIsMobile","nextPage","_nextPage","nextContent","content","index2","created","date","isSystem","isFirst","isSelf","ownerId","dayChanged","message_set","marginVertical","marginLeft","Avatar","userId","outerContainerStyle","titleStyle","subtitle","Hyperlink","linkDefault","wordBreak","linkStyle","selectable","file_set","fileIndex","FilePreview","link_set","linkIndex","LinkPreview","bottomTabs","OneTab","component","userList","useUserMembershipList","memberItem","item","index","MemberItem","member","ProfileModal","ScrollView","icon","MaterialCommunityIcons","TwoTab","channelList","useMessengerChannelSorted","today","toISOString","_item$last_message","_item$last_message2","_item$last_message3","last_message","CommonItem","marginRight","opacity","paddingLeft","member_count","textAlign","unread_count","Ionicons","InviteeScreen","_route$params","navigation","enterGuest","setEnterGuest","useMessengerChannelList","messengerMemberMutation","useLayoutEffect","setOptions","headerRight","user_ids","main","HomeScreen","_route$params2","_useLangContext","locale","setLocale","configTheme","useConfigColorScheme","home","setHome","text","HeaderRight","ChannelEditModal","tab","StyledText","textDecorationLine","_ref4","_ref5","setColorScheme","ContractFooter","TabView","tabs","tabBarPosition","parseInt","onTab","setParams","ChatScreen","_useMessengerChannelL","inputRef","channel","_useMessengerContentL","memberList","member_id","_memberList$find","setValue","autoFocus","setAutoFocus","postValue","_auth$user2","contentMutation","postMessage","_delete","deleteMessengerContent","d","variables","mutate","delete","useMessengerContentMutation","InviteModal","back","renderItem","_auth$user3","canGoBack","goBack","focus","minWidth","VideoCallSection","FlatList","contentContainerStyle","onScroll","nativeEvent","contentOffset","y","contentSize","onLayout","p","layout","background","onSubmitEditing","blurOnSubmit","resolve","reject","input","document","onchange","files","onabort","onerror","click","f","_auth$user4","login","LoginScreen","setUsername","password","setPassword","_login","placeholder","autoCapitalize","keyboardType","secureTextEntry","modal","defaultContext","_split","_split2","SCHEMA","DOMAIN","token","setToken","AppState","currentState","isActive","setIsActive","_useWebSocket","useWebSocket","shouldReconnect","closeEvent","protocols","onOpen","onClose","AsyncStorage","getItem","onChange","nextState","removeEventListener","Provider","BottomSheet","channelMutation","useMessengerChannelMutation","setName","setDescription","ModalSection","separator","lightColor","darkColor","TextField","multiline","groupId","newChannel","owner","group","update","screen","field","getNotification","user_id","axios","get","postNotification","notification","post","putNotification","put","useMobileDetect","getUserMembershipList","_React$useState","_React$useState2","setIndex","icons","assign","apply","_defineProperty","renderTabBar","TabBar","indicatorStyle","activeColor","inactiveColor","renderIcon","scene","onTabPress","findIndex","navigationState","routes","_ref6","_ref7","onIndexChange","renderScene","SceneMap","_ref8","_ref9","setHover","_React$useState3","_React$useState4","press","setPress","Pressable","outerContainer","onPressIn","onPressOut","onHoverIn","onHoverOut","bodyView","minHeight","normalizeHash","min","initHash","charCodeAt","abs","stringToHSL","toUpperCase","RowField","rowStyle","paddingVertical","CommonTextInput","useThemeColor","colorName","colorFromProps","otherProps","_objectWithoutProperties","_excluded","light","dark","DefaultText","_excluded2","DefaultView","contentHeight","setContentHeight","editable","disabled","onContentSizeChange","onBlur","onEndEditing","Profile","counterpart","direct","patchUser","finally","localSearchReducer","initialState","action","keyword","active","Error","InviteItem","selectedRef","has","selected","setSelected","add","GroupTabView","_useLocalSearch","compare","_useReducer","useReducer","_useReducer2","searchState","useLocalSearch","memberSet","Set","includes","dispatchKeyword","ExternalMembershipTabView","setKeyword","copied","setCopied","timeoutRef","externalMemberList","getExternalMembershipList","useExternalMembershipList","setTimeout","clearTimeout","inviteLink","Clipboard","setString","drawerTabs","external","accountURL","defaultOption","baseURL","withCredentials","headers","_axios","interceptors","request","use","config","status","getToken","r","defaults","setItem","removeItem","tint","tabIconDefault","tabIconSelected","header","buttonColor","buttonBackgroundColor","values","ROOTPATH","prefixes","screens","Main","NotFound","AuthContext","authReducer","AuthProvider","authState","setError","_authState$user","_authState$user$membe","membership_set","g","root_group_id","checkLogin","_data$response","_data$response$data","noti","logout","NotFoundScreen","linkText","DrawerTabView","MessengerTab","colors","useTheme","onAddList","tabBar","card","borderTopColor","border","pointerEvents","accessibilityRole","borderTopWidth","drawerTab","Tab","elevation","borderRightWidth","firebaseConfig","require","messagingSenderId","apiKeyEncrypted","toString","padStart","app","firebase","initializeApp","apiKey","messaging","onMessage","payload","Notification","permission","body","alert","requestToken","serviceWorkerRegistration","currentToken","requestPermission","navigator","serviceWorker","register","scope","vapidKey","preventDefault","unregister","setEnable","enable","context","FirebaseContext","Root","createStackNavigator","Navigator","headerMode","screenOptions","cardStyle","animationEnabled","cardStyleInterpolator","CardStyleInterpolators","forVerticalIOS","Screen","MainNavigator","headerShown","gestureDirection","modalValues","modals","useFirebaseContext","ModalsProvider","DrawerNavigator","headerStyle","headerTitleStyle","headerLeft","canGOBackScreen","headerLeftContainerStyle","forHorizontalIOS","innerHeight","setHeight","Dimensions","QueryClient","App","isLoadingComplete","setLoadingComplete","SplashScreen","Font","font","finish","useCachedResources","isAppearenceComplete","useInitColorScheme","SafeAreaProvider","MobileSafeAreaView","QueryClientProvider","client","IntlProvider","StatusBar","translations","ko","_RNLocalize$findBestL","RNLocalize","languageTag","isRTL","I18nManager","forceRTL","intl","createIntl","defaultLocale","messages","createIntlCache","IntlContext","complete","setComplete","_useContext","formatMessage","defaultMessage","DefaultButton","hover","_props","module","exports","guestLogin","checkLoginToken","_await$axios$get","isOffline","code","startsWith","getUserList","group_id","_context6","_context7","patch","ids","updated","_context8","_context9","getMessengerChannelList","postChannel","postDirectChannel","putChannel","deleteChannel","id_lt","id_lt_param","results","formData","_context10","FormData","append","content_id","_context11","Appearance","set","getWindowType","ResizeContextContext","detectMobile","_useWindowDimensions","useWindowDimensions","setWindowType","ModalsContext","allModals","setModals","animationType","setAnimationType","visible","Component","newModals","m","Modal","transparent","sort","a","b","_data2$message_set$","_a$last_message","_b$last_message","withSeparator","titleView"],"mappings":"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","file":"static/js/app.e321e36a.chunk.js","sourcesContent":["/**\r\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\r\n * https://reactnavigation.org/docs/getting-started\r\n *\r\n */\r\nimport _ from 'lodash';\r\nimport { NavigationContainer, DefaultTheme, DarkTheme, NavigationContainerRef } from '@react-navigation/native';\r\nimport * as React from 'react';\r\n\r\nimport LinkingConfiguration from './LinkingConfiguration';\r\nimport RootNavigator from './RootNavigator';\r\n\r\nimport { useColorScheme as useDefaultColorScheme } from 'react-native';\r\nimport { useColorScheme as useColorScheme } from 'react-native-appearance';\r\nimport { ResizeContextProvider } from '../hooks/useResizeContext';\r\n\r\n\r\nconst navigationRef = React.createRef<NavigationContainerRef>();\r\n\r\nexport function navigate(name:string, params?:any) {\r\n  if (params)\r\n    navigationRef.current?.navigate(name, params);\r\n  navigationRef.current?.navigate(name);\r\n}\r\n\r\nexport default function Navigation() {\r\n  const defaultColorScheme = useDefaultColorScheme()\r\n  const userColorScheme = useColorScheme()\r\n  const colorScheme = userColorScheme =='no-preference'?defaultColorScheme:userColorScheme\r\n  return <NavigationContainer\r\n    ref={navigationRef}\r\n    documentTitle={{formatter: (options, route) => {return `TOKKI TOK`}}}\r\n    linking={(process.versions && process.versions['electron'])?undefined:LinkingConfiguration}\r\n    theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\r\n        <ResizeContextProvider>\r\n          <RootNavigator />\r\n        </ResizeContextProvider>\r\n  </NavigationContainer>\r\n}\r\n\r\n(function(l) {  // for github-page\r\n    if (l !== undefined && l.search[1] === '/' ) {\r\n        var decoded = l.search.slice(1).split('&').map(function(s) { \r\n        return s.replace(/~and~/g, '&')\r\n        }).join('?');\r\n        window.history.replaceState(null, '',\r\n            l.pathname.slice(0, -1) + decoded + l.hash\r\n        );\r\n    }\r\n}(window.location))\r\n    \r\nconst ignoreWarnings = ['ReactNativeFiberHostComponent'];\r\nconst _console = _.clone(console);\r\nconsole.warn = (message: string|Object) => {\r\n    var warn = true;\r\n    if (message instanceof Object)\r\n    warn = false;\r\n    else{\r\n    ignoreWarnings.forEach((value)=>{\r\n        if (message.indexOf && message.indexOf(value) <= -1) {\r\n            warn = false;\r\n        }\r\n    })\r\n    };\r\n    if (warn){\r\n        _console.warn(message);\r\n    }\r\n    else{\r\n        // console.log(message)\r\n    }\r\n};\r\n","import React, { useState } from 'react';\r\nimport { StyleSheet} from 'react-native';\r\nimport { CustomButtonProps } from '../types';\r\nimport CommonButton from './CommonButton';\r\n\r\nexport default (props:CustomButtonProps)=>{\r\n    return <CommonButton {...props} style={[styles.style, props.style]}/>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    style:{\r\n        borderRadius:6, \r\n        backgroundColor: 'transparent',\r\n        borderWidth:0\r\n    },\r\n});\r\n","import { useMutation, useQuery, useQueryClient } from \"react-query\";\r\nimport { postBulkMessengerMember, deleteMessengerMember, getMessengerMemberList } from \"../../apis\";\r\n\r\nexport default function useMessengerMemberList(channel_id:number){\r\n  const { data } = useQuery([\"MessengerMemberList\", channel_id] , async()=>await getMessengerMemberList(channel_id))\r\n  return data\r\n}\r\n\r\n\r\nexport function useMessengerMemberMutation(){\r\n  const queryClient = useQueryClient()\r\n  const invite = useMutation(postBulkMessengerMember, {\r\n    onSuccess: ()=>{\r\n      queryClient.invalidateQueries(\"MessengerMemberList\")\r\n    }\r\n  })\r\n\r\n  const leave = useMutation(deleteMessengerMember, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(\"MessengerChannelList\")\r\n      queryClient.invalidateQueries(\"MessengerMemberList\")\r\n    }\r\n  })\r\n  return {invite:invite.mutateAsync, leave:leave.mutateAsync}\r\n}","import React from 'react'\r\nimport TextButton from \"./TextButton\"\r\nimport useAuthContext from \"../hooks/useAuthContext\"\r\nimport useResizeContext from '../hooks/useResizeContext'\r\nimport { View } from 'react-native'\r\nimport useModalsContext from '../hooks/useModalsContext'\r\nimport GuestLogoutModal from '../modals/GuestLogoutModal'\r\nimport useLangContext from '../hooks/useLangContext'\r\n\r\ntype ButtonProps = {title:string, onPress:()=>void, windowType?:'landscape'|'portrait'}\r\n\r\nexport default (props:{extra?:ButtonProps[]})=>{\r\n    const { lang } = useLangContext()\r\n    const {auth, dispatch} = useAuthContext()\r\n    const { setModal } = useModalsContext()\r\n    const windowType = useResizeContext()\r\n    const defaultButtonProps:ButtonProps[] = [{title:lang('sign out'), onPress:()=>{\r\n        if (auth?.user?.username.endsWith(\".guest\")){\r\n            setModal(GuestLogoutModal, {})\r\n        }\r\n        else{\r\n            dispatch({type:\"LOGOUT_REQUEST\"})\r\n        }\r\n    }}]\r\n    const buttonProps = (props.extra?[...props.extra, ...defaultButtonProps]:defaultButtonProps).filter(v=>v.windowType==windowType || v.windowType == undefined)\r\n    return<View style={{flexDirection:'row'}}>\r\n        {buttonProps.map((v,k)=><TextButton key={k} {...v} textStyle={{color:'white'}} color='#gray'/>)}\r\n    </View>\r\n}\r\n  ","import React from 'react'\r\nimport { View, StyleSheet, Linking, Platform } from 'react-native'\r\nimport { TouchableOpacity } from 'react-native-gesture-handler'\r\nimport { AntDesign } from '@expo/vector-icons'; \r\nimport useColorScheme from '../hooks/useColorScheme';\r\n\r\nconst openURL = Platform.OS=='web'?(url:string)=>{location.href=url}:Linking.openURL\r\n\r\nexport default ()=>{\r\n    const theme = useColorScheme()\r\n    return<View style={Styles.footer_buttons}>\r\n        <TouchableOpacity style={Styles.footer_button} onPress={()=>openURL(\"https://github.com/blacktokki/tokki-tok\")}>\r\n            <AntDesign name=\"github\" size={24} color={theme=='light'?'black':'white'} />\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={Styles.footer_button} onPress={()=>Linking.openURL(\"mailto:ydh051541@naver.com\")}>\r\n            <AntDesign name=\"mail\" size={24} color={theme=='light'?'black':'white'} />\r\n        </TouchableOpacity>\r\n    </View>\r\n}\r\n\r\nconst Styles = StyleSheet.create({\r\n      footer_buttons: {\r\n        width: '100%',\r\n        flexDirection: 'row',\r\n        justifyContent: 'flex-end',\r\n        paddingBottom: 20,\r\n        paddingRight: 20,\r\n      },\r\n      footer_button: {\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        width: 38,\r\n        height: 38,\r\n        marginHorizontal: 12,\r\n        borderWidth: 1,\r\n        borderColor: '#E7E7E7',\r\n        borderRadius: 60,\r\n      },\r\n})","import React, {useLayoutEffect, useState} from 'react';\r\nimport {\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  View,\r\n  StyleSheet,\r\n} from 'react-native';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport useAuthContext from '../../hooks/useAuthContext';\r\nimport useLangContext from '../../hooks/useLangContext';\r\nimport ContractFooter from '../../components/ContractFooter';\r\n\r\nexport default function LoginScreen({\r\n  navigation, route\r\n}: StackScreenProps<any, 'Login'>) {\r\n  const { lang } = useLangContext()\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const {error, dispatch} = useAuthContext()\r\n  const _login = ()=>dispatch({type:'LOGIN_REQUEST', username, password})\r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      headerRight: undefined\r\n    });\r\n  }, [navigation, route]);\r\n\r\n  return (<View style={Styles.login_container}>\r\n    <View style={Styles.login_wrapper}>\r\n      <View style={Styles.form}>\r\n        {error && <View style={Styles.form_error}>\r\n          <Text style={Styles.form_error_text}>{lang(error)}</Text>\r\n        </View>}\r\n        <TextInput\r\n          style={Styles.form_input}\r\n          value={username}\r\n          placeholder={lang('Username')}\r\n          onChangeText={(text) => setUsername(text)}\r\n          autoCapitalize={'none'}\r\n          keyboardType={'email-address'}\r\n          onSubmitEditing={_login}\r\n        />\r\n        <TextInput\r\n          style={Styles.form_input}\r\n          value={password}\r\n          placeholder={lang('Password')}\r\n          secureTextEntry\r\n          onChangeText={(text) => setPassword(text)}\r\n          onSubmitEditing={_login}\r\n        />\r\n        <TouchableOpacity onPress={_login}>\r\n          <View style={Styles.button}>\r\n            <Text style={Styles.button_label}>{lang('Sign in')}</Text>\r\n          </View>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity onPress={() => dispatch({type:\"LOGIN_GUEST\"})}>\r\n          <Text style={Styles.guest_footer_text}>\r\n            {lang(\"Sign in as guest\")}\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      <View style={Styles.login_social}>\r\n        <View style={Styles.login_social_separator}>\r\n          <View style={Styles.login_social_separator_line} />\r\n          <Text style={Styles.login_social_separator_text}>{'*'}</Text>\r\n          <View style={Styles.login_social_separator_line} />\r\n        </View>\r\n        <View style={Styles.login_social_buttons}>\r\n        </View>\r\n      </View>\r\n      {/* <>\r\n        <TouchableOpacity onPress={() => navigate(\"RegistrationScreen\")}>\r\n          <Text style={Styles.login_footer_text}>\r\n            {\"Don't have an account? \"}\r\n            <Text style={Styles.login_footer_link}>{'Sign up'}</Text>\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </> */}\r\n    </View>\r\n    <ContractFooter/>\r\n  </View>);\r\n};\r\n\r\nconst Styles = StyleSheet.create({\r\n    login_container: {\r\n      flex: 1,\r\n      backgroundColor: '#FFF',\r\n    },\r\n    login_header: {\r\n      alignItems: 'center',\r\n      paddingTop: 30,\r\n      paddingBottom: 50,\r\n      backgroundColor: '#208AEC',\r\n    },\r\n    login_header_logo: {\r\n      width: 220,\r\n      resizeMode: 'contain',\r\n    },\r\n    login_header_text: {\r\n      marginTop: 15,\r\n      color: '#f0f0f0',\r\n      fontSize: 16,\r\n    },\r\n    login_header_text_bold: {\r\n      color: '#fff',\r\n      fontWeight: 'bold',\r\n    },\r\n    login_wrapper: {\r\n      flex: 1,\r\n      justifyContent: 'space-between',\r\n      paddingTop: 40,\r\n      borderTopRightRadius: 12,\r\n      borderTopLeftRadius: 12,\r\n      backgroundColor: '#fff',\r\n      alignItems: 'center',\r\n    },\r\n    form: {\r\n      width: '100%',\r\n      maxWidth: 320,\r\n    },\r\n    form_error: {\r\n      height: 22,\r\n      width:'100%',\r\n    },\r\n    form_error_text:{\r\n      textAlignVertical:'center',\r\n      color:'red',\r\n      fontSize:13,\r\n    },\r\n    form_input: {\r\n      height: 44,\r\n      paddingHorizontal: 20,\r\n      marginBottom: 20,\r\n      backgroundColor: '#EDF0F7',\r\n      borderRadius: 50,\r\n    },\r\n    button: {\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      height: 44,\r\n      backgroundColor: '#0065A4',\r\n      borderRadius: 50,\r\n    },\r\n    button_label: {\r\n      color: '#fff',\r\n      fontSize: 16,\r\n    },\r\n    login_social: {\r\n      width: '100%',\r\n      maxWidth: 280,\r\n      marginTop: 20,\r\n    },\r\n    login_social_separator: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n    },\r\n    login_social_separator_line: {\r\n      flex: 1,\r\n      width: '100%',\r\n      height: 1,\r\n      backgroundColor: '#E0E0E0',\r\n    },\r\n    login_social_separator_text: {\r\n      marginHorizontal: 10,\r\n      color: '#808080',\r\n      fontSize: 16,\r\n    },\r\n    login_social_buttons: {\r\n      flexDirection: 'row',\r\n      justifyContent: 'center',\r\n      marginTop: 20,\r\n    },\r\n    login_social_button: {\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      width: 60,\r\n      height: 60,\r\n      marginHorizontal: 12,\r\n      borderWidth: 1,\r\n      borderColor: '#E7E7E7',\r\n      borderRadius: 60,\r\n    },\r\n    login_social_icon: {\r\n      width: 38,\r\n      height: 38,\r\n      resizeMode: 'contain',\r\n    },\r\n    login_social_facebook: {\r\n      backgroundColor: '#4267B2',\r\n      borderColor: '#4267B2',\r\n    },\r\n    login_footer_text: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      color: '#808080',\r\n      fontSize: 14,\r\n    },\r\n    guest_footer_text: {\r\n      flexDirection: 'row',\r\n      alignSelf: 'center',\r\n      color: '#808080',\r\n      fontSize: 15,\r\n      margin: 15\r\n    },\r\n    login_footer_link: {\r\n      color: '#208AEC',\r\n      fontSize: 15,\r\n      fontWeight: 'bold',\r\n    },\r\n  });\r\n  ","import { useCallback, useEffect, useState } from \"react\"\r\nimport { InfiniteData, useInfiniteQuery, useMutation, useQueryClient } from \"react-query\"\r\nimport { getMessengerContentList, postMessage, deleteMessengerContent } from \"../../apis\"\r\nimport { MessengerContent } from \"../../types\"\r\nimport useWebsocketContext from \"../useWebsocketContext\"\r\n\r\nexport type MessengerContentPage = {\r\n  next?:MessengerContentPage\r\n  current:MessengerContent[]\r\n}\r\n\r\nexport default function useMessengerContentList(channel_id:number){  \r\n  const queryClient = useQueryClient()\r\n  const { data, fetchNextPage } = useInfiniteQuery<MessengerContentPage>(\r\n    [\"MessengerContentList\", channel_id], \r\n    async({pageParam})=>getMessengerContentList(channel_id, pageParam).then(current=>({current})), \r\n    {\r\n      select:data=>{\r\n        if(data.pages.length > 1)\r\n          data.pages[data.pages.length - 2].next = data.pages[data.pages.length - 1]\r\n        return data;\r\n      },\r\n      getNextPageParam:(lastPage)=>lastPage?.current.length?lastPage.current[lastPage.current.length - 1].id:undefined,\r\n      refetchOnReconnect:false,\r\n      refetchOnWindowFocus:true\r\n    }\r\n  )\r\n  const { lastJsonMessage } = useWebsocketContext()\r\n  useEffect(()=>{\r\n    if(lastJsonMessage !=null && lastJsonMessage['type']=='next_message' && lastJsonMessage['data']['channel'] == channel_id){\r\n      queryClient.setQueryData<InfiniteData<MessengerContentPage>>([\"MessengerContentList\", channel_id], (_data)=>{\r\n        if(_data?.pages[0].current && _data?.pages[0].current[0].id != lastJsonMessage['data'].id)\r\n          _data.pages[0].current = [lastJsonMessage['data'], ..._data?.pages[0].current]\r\n        return {...(_data || {pages:[], pageParams:[]})}\r\n      })\r\n    }\r\n  }, [lastJsonMessage])\r\n  return { data, fetchNextPage }\r\n}\r\n\r\nexport function useMessengerContentMutation(){\r\n  // const queryClient = useQueryClient()\r\n  const create = useMutation(postMessage, {\r\n    onSuccess: () => {\r\n      // queryClient.setQueryData(['MessengerContentList'], (data:any) => ({\r\n      //   pages: data.pages.slice(0, 1),\r\n      //   pageParams: data.pageParams.slice(0, 1),\r\n      // }))\r\n      // queryClient.invalidateQueries(\"MessengerContentList\")\r\n    }\r\n  });\r\n  const _delete = useMutation(deleteMessengerContent, {\r\n    onSuccess: (d, variables) => {\r\n      // queryClient.setQueryData(['MessengerContentList'], (data:any) => ({\r\n      //   pages: (data.pages as MessengerContent[][]).map(v=>v.filter(v2=>v2.id != variables)),\r\n      //   pageParams: data.pageParams,\r\n      // }))\r\n    }\r\n  })\r\n  return { create:create.mutate, delete:_delete.mutate }\r\n}","import React from 'react'\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport CommonSection from \"./CommonSection\"\r\nimport { Image, Linking, TextStyle } from \"react-native\"\r\nimport { View, Text } from \"./Themed\"\r\nimport { Link } from \"../types\"\r\n\r\n\r\n\r\nexport default ({link, isMobile}:{link:Link, isMobile:boolean})=>{\r\n    return <CommonSection containerStyle={{marginHorizontal:0}} bodyStyle={{padding:0}}>\r\n    <TouchableOpacity onPress={()=>Linking.openURL(link.url)} style={{flexDirection:'row'}} containerStyle={{width:'100%'}}>\r\n        {link.image && <Image source={{uri:link.image}} resizeMode=\"cover\" style={{ width:'100%', maxWidth:isMobile?120:150, maxHeight:isMobile?120:150, borderWidth:1}}/>}\r\n        <View style={{flex:1, marginHorizontal:20}}>\r\n        <Text style={{fontSize:18}}>{link.title}</Text>\r\n        <Text style={{fontSize:14}}>{link.description}</Text>\r\n        <Text style={{fontSize:12}}>{link.url}</Text>\r\n        </View>\r\n    </TouchableOpacity>\r\n    </CommonSection>\r\n}","import React, { createContext, useContext } from \"react\"\r\nimport { SendJsonMessage } from \"react-use-websocket/dist/lib/types\";\r\nimport { WebSocketInternalProvider } from \"../../hooks/useWebsocketContext\";\r\n\r\nconst WebSocketContext = createContext<{lastJsonMessage:any, sendJsonMessage:SendJsonMessage }>({lastJsonMessage:undefined, sendJsonMessage:()=>{}});\r\n\r\nexport const WebSocketProvider = ({disable, children}:{disable?:boolean, children:React.ReactNode})=>{\r\n  return disable?<></>:<WebSocketInternalProvider path={'messenger/ws/rtc/'} Context={WebSocketContext} useBackground>\r\n    {children}\r\n  </WebSocketInternalProvider>\r\n}\r\n\r\nexport default ()=>{\r\n  const webSocketContext = useContext(WebSocketContext)\r\n  return webSocketContext\r\n}\r\n\r\n","import React, { useCallback, useRef, useState, useMemo } from \"react\";\r\n//@ts-ignore\r\nimport { RTCView, mediaDevices, RTCPeerConnection, MediaStream, RTCSessionDescription, RTCIceCandidate } from \"react-native-webrtc-web-shim\";\r\n// @ts-ignore\r\nimport {TURN_SERVER} from \"@env\"\r\n\r\n\r\nconsole.log(TURN_SERVER?\"use turn server\": \"use stun server\")\r\n\r\nexport const peerConstraints = {\r\n\ticeServers: [TURN_SERVER?JSON.parse(TURN_SERVER):{urls: 'stun:stun.l.google.com:19302'}]\r\n};\r\n\r\nexport const sessionConstraints = {\r\n\tmandatory: {\r\n\t\tOfferToReceiveAudio: true,\r\n\t\tOfferToReceiveVideo: true,\r\n\t\tVoiceActivityDetection: true\r\n\t}\r\n};\r\n\r\nconst mediaConstraints = {audio:true, video:{framerate:30}}\r\n\r\n//@ts-ignore\r\nexport {MediaStream, RTCPeerConnection, RTCSessionDescription} from \"react-native-webrtc-web-shim\";\r\n\r\nconst onICEcandidate = (pc:typeof RTCPeerConnection, message:any)=>{\r\n\tconst _message = message.data.rtcMessage\r\n\t\tconst candidate = new RTCIceCandidate(_message);\r\n\t\tif (pc) {\r\n\t\t\tconsole.log(\"ICE candidate Added\");\r\n\t\t\tpc.addIceCandidate(candidate);\r\n\t\t}\r\n}\r\n\r\nconst sendICEcandidate = (event:any, sendMessage:(data:any)=>void, receiver:string, target:string) => {\r\n\t// When you find a null candidate then there are no more candidates.\r\n\t// Gathering of candidates has finished.\r\n\tif ( !event.candidate ) { return; };\r\n\t// Send the event.candidate onto the person you're calling.\r\n\t// Keeping to Trickle ICE Standards, you should send the candidates immediately.\r\n\tsendMessage({type:'ICEcandidate', receiver, data:{target, rtcMessage:event.candidate}})\r\n  }\r\n\r\nconst BAND_WIDTH = 8000\r\n\r\nconst optimizeSdp = (offerDescription:RTCSessionDescription)=>{\r\n\tvar arr = offerDescription.sdp.split('\\r\\n');\r\n\tarr.forEach((str:string, i:number) => {\r\n\t\tif (/^a=fmtp:\\d*/.test(str)) {\r\n\t\t\tarr[i] = str + `;x-google-max-bitrate=${BAND_WIDTH};x-google-min-bitrate=${BAND_WIDTH};x-google-start-bitrate=${BAND_WIDTH}`;\r\n\t\t} else if (/^a=mid:(0|video)/.test(str)) { // if with audio then 0=>1\r\n\t\t\tarr[i] += `\\r\\nb=AS:${BAND_WIDTH}`;\r\n\t\t}\r\n\t});\r\n  \treturn new RTCSessionDescription({\r\n    \ttype: offerDescription.type,\r\n    \tsdp: arr.join('\\r\\n'),\r\n  \t})\r\n}\r\n\r\nconst createOffer = async(pcRefCurrent:{pc?:typeof RTCPeerConnection, receiver:string}, sendMessage:(data:any)=>void, stream:typeof MediaStream, target:string, user?:{name:string})=>{\r\n\tstream && pcRefCurrent.pc.addStream( stream );\r\n\tconst offerDescription = optimizeSdp((await pcRefCurrent.pc.createOffer( sessionConstraints )));\r\n\tawait pcRefCurrent.pc.setLocalDescription( offerDescription );\r\n\tsendMessage({type:'call', receiver:pcRefCurrent.receiver, data:{target, name:user?.name, rtcMessage:offerDescription}})\r\n}\r\n\r\nexport const useLocalCam = (sendMessage:(data:any)=>void)=>{\r\n\tconst pcRef = useRef<Record<number,{pc:typeof RTCPeerConnection, receiver:string}>>({})\r\n\tconst [sender, setSender] = useState<string>()\r\n\tconst [_stream, setStream] = useState<MediaStream>()\r\n\tconst isPlay = useMemo(()=>_stream?true:false, [_stream])\r\n\tconst CustomRTCView = useCallback(React.memo(({style}:{style:any})=>(_stream?<RTCView stream={_stream} style={style} videoProps={{height:'100%'}} />:<></>)) , [_stream])\r\n\tconst start = useCallback(async(user:{name:string}, stream?:typeof MediaStream, mode?:'camera'|'display')=>{\r\n\t\tconsole.log(\"start\");\r\n\t\tif (!_stream || mode!==undefined) {\r\n\t\t\ttry {\r\n\t\t\t\tlet newStream:typeof MediaStream;\r\n\t\t\t\tif(mode == 'camera'){\r\n\t\t\t\t\tnewStream = await mediaDevices.getUserMedia(mediaConstraints)\r\n\t\t\t\t}\r\n\t\t\t\telse if (mode == 'display'){\r\n\t\t\t\t\tnewStream = await mediaDevices.getDisplayMedia(mediaConstraints)\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tnewStream = stream || await mediaDevices.getUserMedia(mediaConstraints).catch((e:any)=>mediaDevices.getDisplayMedia(mediaConstraints));\r\n\t\t\t\t}\r\n\t\t\t\tsetStream(newStream)\r\n\t\t\t\tObject.entries(pcRef.current).map(([k, v])=>{\r\n\t\t\t\t\tcreateOffer(v, sendMessage, newStream, 'guest', user)\r\n\t\t\t\t})\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.error(e);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [_stream])\r\n\tconst stop = useCallback(()=>{\r\n\t\tconsole.log(\"stop\");\r\n\t\tif(_stream){\r\n\t\t\t_stream.getTracks().map((track:any) => track.stop());\r\n\t\t\tsetStream(undefined)\r\n\t\t}\r\n\t}, [_stream])\r\n\treturn {\r\n\t\tstart,\r\n\t\tstop,\r\n\t\twebsocketOnMessage: async(response:any, user:{name:string})=>{\r\n\t\t\tlet type = response.type;\r\n\t\t\tif (type == 'connection'){\r\n\t\t\t\tsetSender(response.data.channel_name)\r\n\t\t\t}\r\n\t\t\tif (type == 'start' && response.data.target=='host'){\r\n\t\t\t  console.log('1 start')\r\n\t\t\t  const peerConnection = new RTCPeerConnection( peerConstraints );\r\n\t\t\t  peerConnection.addEventListener( 'icecandidate', (event:any) => sendICEcandidate(event, sendMessage, response.sender, 'guest'));\r\n\t\t\t  pcRef.current[response.sender] = {pc:peerConnection, receiver: response.sender}\r\n\t\t\t  createOffer(pcRef.current[response.sender], sendMessage, _stream, 'guest', user)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (type == \"answer\" && response.data.target == 'host'){\r\n\t\t\t  console.log('3 answer')\r\n\t\t\t  const peerConnection = pcRef.current[response.sender].pc\r\n\t\t\t  const answerDescription = new RTCSessionDescription(response.data.rtcMessage);\r\n\t\t\t  await peerConnection.setRemoteDescription( answerDescription );\r\n\t\t\t  // const streams = pcRef.current.pc.getRemoteStreams()\r\n\t\t\t  // setMirrorStream(streams[streams.length - 1])\r\n\t\t\t}\r\n\t\t\tif (type == \"ICEcandidate\" && response.data.target=='host'){\r\n\t\t\t\tconst peerConnection = pcRef.current[response.sender].pc\r\n\t\t\t\tonICEcandidate(peerConnection, response)\r\n\t\t\t}\r\n\t\t},\r\n\t\tCustomRTCView,\r\n\t\tisPlay,\r\n\t\tsender,\r\n\t\t// renderMirrorView,\r\n\t}\r\n}\r\n\r\nexport const useRemoteCam = (sendMessage:(data:any)=>void)=>{\r\n\tconst pcRef = useRef<{pc?:RTCPeerConnection, receiver?:string, statsInterval?:any}>({})\r\n\tconst [user, setUser] = useState<{name:string}>()\r\n\tconst [_stream, setStream] = useState<MediaStream>()\r\n\tconst CustomRTCView = useCallback(React.memo((style:any)=>_stream?<RTCView stream={_stream} style={style} videoProps={{height:'100%'}} />:<></>), [_stream])\r\n\tconst isPlay = useMemo(()=>_stream?true:false, [_stream])\r\n\tconst start = useCallback((receiver:string)=>{\r\n\t\tconsole.log(\"start\");\r\n\t\tif (!pcRef.current.pc) {\r\n\t\t  pcRef.current.pc = new RTCPeerConnection( peerConstraints );\r\n\t\t  pcRef.current.receiver = receiver\r\n\t\t}\r\n\t\tif (!_stream){\r\n\t\t\tsendMessage({type:'start', receiver, data:{'target': 'host'}})\r\n\t\t}\r\n\t}, [_stream])\r\n\tconst stop = () => {\r\n\t\tconsole.log(\"stop\");\r\n\t\tif (pcRef.current.pc) {\r\n\t\t  // peerConnection._unregisterEvents();\r\n\t\t  setStream(undefined)\r\n\t\t  pcRef.current.pc.close();\r\n\t\t  pcRef.current.pc = undefined\r\n\t\t  pcRef.current.receiver = undefined\r\n\t\t  clearInterval(pcRef.current.statsInterval)\r\n\t\t}\r\n\t}\r\n\treturn {\r\n\t\tstart,\r\n\t\tstop,\r\n\t\twebsocketOnMessage: async(response:any)=>{\r\n\t\t\tlet type = response.type;\r\n\t\t\tif (type == 'start' && response.data.target=='guest' && response.sender == pcRef.current?.receiver){\r\n\t\t\t\tconsole.log('(remote)1 start')\r\n\t\t\t\tconst peerConnection = pcRef.current.pc\r\n\t\t\t\tsetUser({name: response.data.name})\r\n\t\t\t\tpeerConnection.addEventListener('icecandidate', (event:any) => sendICEcandidate(event, sendMessage, response.sender, 'host'));\r\n\t\t\t\tpeerConnection.addEventListener('iceconnectionstatechange', (e:any)=>{\r\n\t\t\t\t\tif (pcRef.current.pc.iceConnectionState == 'connected'){\r\n\t\t\t\t\t\tlet activeStream = false\r\n\t\t\t\t\t\tpcRef.current.statsInterval = setInterval(async()=>{\r\n\t\t\t\t\t\t\tconst stats = await pcRef.current.pc.getStats(null)\r\n\t\t\t\t\t\t\tlet statsOutput = \"\";\r\n\t\t\t\t\t\t\tlet framePerSecond = undefined\r\n\t\t\t\t\t\t\tstats.forEach((report:any) => {\r\n\t\t\t\t\t\t\t\tif (report.type === \"inbound-rtp\" && report.kind === \"video\") {\r\n\t\t\t\t\t\t\t\t\tObject.keys(report).forEach((statName) => {\r\n\t\t\t\t\t\t\t\t\t\tstatsOutput += `${statName}: ${report[statName]}\\n`;\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tframePerSecond = report.framesPerSecond\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tconsole.log(activeStream, framePerSecond)\r\n\t\t\t\t\t\t\tif (framePerSecond != undefined){\r\n\t\t\t\t\t\t\t\tactiveStream = true\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (activeStream){\r\n\t\t\t\t\t\t\t\tstop()\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tconsole.log(new Date().toTimeString().split(' ')[0], statsOutput)\r\n\t\t\t\t\t\t}, 1000);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (pcRef.current.pc.iceConnectionState == 'failed'){\r\n\t\t\t\t\t\tstop()\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t// peerConnection.addTransceiver('audio', {\r\n\t\t\t\t// \tdirection: 'recvonly'\r\n\t\t\t\t// });\r\n\t\t\t\tpeerConnection.addTransceiver('video', {\r\n\t\t\t\t\tdirection: 'recvonly'\r\n\t\t\t\t});\r\n\t\t\t\tawait createOffer({pc:pcRef.current.pc, receiver:response.sender}, sendMessage, _stream, 'host', user)\r\n\t\t\t}  \r\n\t\t\tif (type == \"answer\" && response.data.target=='guest' && response.sender == pcRef.current?.receiver){\r\n\t\t\t\tconsole.log('(remote)3 answer')\r\n\t\t\t\tconst answerDescription = new RTCSessionDescription(response.data.rtcMessage);\r\n\t\t\t\tawait pcRef.current.pc.setRemoteDescription( answerDescription );\r\n\t\t\t\tconst streams = pcRef.current.pc.getRemoteStreams()\r\n\t\t\t\tsetStream(streams[streams.length - 1])\r\n\t\t\t\tsendMessage({type:'end', receiver:pcRef.current.receiver, data:{}})\r\n\t\t\t}\r\n\t\t\tif (type == \"call\" && response.sender == pcRef.current?.receiver){\r\n\t\t\t  console.log('2 call')\r\n\t\t\t  const peerConnection = pcRef.current.pc\r\n\t\t\t  setUser({name:response.data.name})\r\n\t\t\t  if (!peerConnection)\r\n\t\t\t\treturn\r\n\t\t\t  peerConnection.addEventListener( 'icecandidate', (event:any) => sendICEcandidate(event, sendMessage, response.sender, 'host'));\r\n\t\t\t  const offerDescription = new RTCSessionDescription(response.data.rtcMessage);\r\n\t\t\t  await peerConnection.setRemoteDescription( offerDescription );\r\n\t\t\t  const answerDescription = await peerConnection.createAnswer( sessionConstraints );\r\n\t\t\t  await peerConnection.setLocalDescription( answerDescription );\r\n\t\t\t  sendMessage({type:'answer', receiver:pcRef.current.receiver, data:{target:'host', rtcMessage:peerConnection.localDescription}})\r\n\t\t\t  // Here is a good place to process candidates.\r\n\t\t\t  const streams = pcRef.current.pc.getRemoteStreams()\r\n\t\t\t  setStream(streams[streams.length - 1])\r\n\t\t\t}\r\n\t\t\tif (type == \"ICEcandidate\" && response.data.target=='guest' && response.sender == pcRef.current?.receiver)\r\n\t\t\t  onICEcandidate(pcRef.current.pc, response)\r\n\t\t},\r\n\t\tCustomRTCView,\r\n\t\tuser,\r\n\t\tisPlay\r\n\t}\r\n}","import {StyleSheet} from \"react-native\";\r\nexport {useLocalCam, useRemoteCam} from \"./p2p\"\r\n\r\nexport const camStyle = StyleSheet.create({\r\n\tcontainer:{ flex: 1},\r\n\tcam:{ flex: 1, height:'100%'},\r\n\tbottonContainer: {position:\"absolute\", bottom:0, justifyContent:'flex-end'},\r\n\tbuttonBar: { flexDirection: \"row\", justifyContent: \"space-around\" },\r\n\tlabel: {backgroundColor:'#0008', color:'white', paddingHorizontal:5},\r\n})","import React, { useEffect } from \"react\";\r\nimport {Button, View, Text} from \"react-native\";\r\nimport useWebsocketContext from \"./useWebsocketContext\";\r\nimport { useLocalCam, camStyle} from \"./webrtc\";\r\n\r\n\r\nexport default (props:{user?:{name:string}|null, mode?:'camera'|'display'|null})=>{\r\n  const {lastJsonMessage, sendJsonMessage} = useWebsocketContext()\r\n  const {start, stop, websocketOnMessage, CustomRTCView, isPlay} = useLocalCam(sendJsonMessage)\r\n  useEffect(()=>{\r\n    props.user && lastJsonMessage && websocketOnMessage(lastJsonMessage, props.user)\r\n  }, [lastJsonMessage, props.user])\r\n  useEffect(()=>{\r\n    if(props.mode && !isPlay){\r\n      props.user && start(props.user, undefined, props.mode)\r\n    }\r\n    else if(props.mode===null && isPlay){\r\n      stop()\r\n    }\r\n    return ()=>{isPlay && stop()}\r\n  }, [isPlay, props.user, props.mode])\r\n  return (\r\n    <View style={camStyle.container}>\r\n      <CustomRTCView style={camStyle.cam}/>\r\n      <View style={camStyle.bottonContainer}>\r\n        <View style={camStyle.buttonBar}>  \r\n        </View>\r\n        <View style={{flexDirection:'row'}}><Text style={camStyle.label}>{props.user?.name}</Text></View>\r\n        <View style={camStyle.buttonBar}>\r\n          {props.mode === undefined && !isPlay && <Button title=\"Start\" onPress={()=>props.user && start(props.user)} />}\r\n          {props.mode === undefined && isPlay && <Button title=\"Stop\" onPress={stop} />}\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n","import React, { useState, useEffect, } from \"react\";\r\nimport {Button,Text, TextInput, View} from \"react-native\";\r\nimport useWebsocketContext from \"./useWebsocketContext\";\r\nimport { useRemoteCam, camStyle} from \"./webrtc\";\r\n\r\nexport default (props:{receiver?:string})=>{\r\n  const [receiver, setReceiver] = useState('')\r\n  const {lastJsonMessage, sendJsonMessage} = useWebsocketContext()\r\n  const {start, stop, websocketOnMessage, CustomRTCView, isPlay, user} = useRemoteCam(sendJsonMessage)\r\n  useEffect(()=>{\r\n    lastJsonMessage && websocketOnMessage(lastJsonMessage)\r\n  }, [lastJsonMessage])\r\n  useEffect(()=>{\r\n    if(props.receiver){\r\n      start(props.receiver)\r\n    }\r\n    return ()=>stop()\r\n  }, [props.receiver])\r\n  return (\r\n    <View style={camStyle.container}>\r\n      <CustomRTCView style={camStyle.cam}/>\r\n      <View style={camStyle.bottonContainer}>\r\n        <View style={camStyle.buttonBar}>\r\n        </View>\r\n        <View style={{flexDirection:'row'}}>{\r\n          (props.receiver || isPlay)?\r\n          <Text style={camStyle.label}>{user?.name || 'loading...'}</Text>:\r\n          <>\r\n            <Text style={{borderWidth:1}}>Receiver:&nbsp;</Text>\r\n            <TextInput style={{borderWidth:1, flex:1}} value={receiver} onChangeText={setReceiver}/>\r\n          </> \r\n        }</View>\r\n        <View style={camStyle.buttonBar}>\r\n          {props.receiver === undefined && !isPlay && <Button title=\"Start\" onPress={()=>start(receiver)} />}\r\n          {props.receiver === undefined && isPlay && <Button title=\"Stop\" onPress={stop} />}\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport { StyleSheet, View } from 'react-native';\r\nimport { View as ThemedView } from '../../../components/Themed' \r\nimport Colors from '../../../constants/Colors';\r\nimport {default as useRtcContext, WebSocketProvider as RtcProvider} from \"../../../lib/react-native-webrtc/useWebsocketContext\";\r\nimport LocalCam from '../../../lib/react-native-webrtc/LocalCam';\r\nimport RemoteCam from '../../../lib/react-native-webrtc/RemoteCam';\r\nimport useResizeContext from '../../../hooks/useResizeContext';\r\nimport useAuthContext from '../../../hooks/useAuthContext';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\nimport CommonButton from '../../../components/CommonButton';\r\n\r\ntype VideoType = 'camera'|'display'|null\r\ntype VideoCallProps = {channel_id:number, setDisable:(disable:boolean)=>void, disable?:boolean}\r\n\r\n\r\nconst VideoView = (props:{\r\n  scale:string,\r\n  focusGuest?:string,\r\n  setFocusGuest:(focusGuest?:string)=>void\r\n  receiver?:string\r\n  children:React.ReactNode\r\n})=>{\r\n  return <View style={[{maxWidth:props.scale, maxHeight:props.scale, borderWidth:1, borderColor:Colors.borderColor, backgroundColor:'gray', flexDirection:'row', flexGrow:1}, (props.focusGuest == undefined || props.focusGuest == props.receiver)?{height:'100%'}:{maxWidth:0, height:0}]}>\r\n    <TouchableOpacity style={{flex:1}} containerStyle={{flex:1, justifyContent:'center'}} onPress={()=>props.setFocusGuest(props.focusGuest?undefined:props.receiver)}>\r\n    {props.children}\r\n    </TouchableOpacity>\r\n  </View>\r\n    \r\n  \r\n}\r\n\r\nconst VideoCallContainer = ({channel_id, disable, setDisable}:VideoCallProps)=>{\r\n  const {auth} = useAuthContext()\r\n  const [videoMode, setVideoMode] = useState<VideoType>(null)\r\n  const [guests, setGuests] = useState<string[]>([])\r\n  const [focusGuest, setFocusGuest] = useState<string>()\r\n  const windowType = useResizeContext()\r\n  const { lastJsonMessage, sendJsonMessage } = useRtcContext()\r\n  useEffect(()=>{\r\n    if(lastJsonMessage !=null){\r\n      if(lastJsonMessage['type']=='connection'){\r\n        sendJsonMessage({'type':'broadcast', 'data':{'channel_id':channel_id}})\r\n      }\r\n      if(lastJsonMessage['type']=='broadcast_guest' || lastJsonMessage['type']=='broadcast_host'){\r\n        setGuests([...guests, lastJsonMessage['sender']])\r\n      }\r\n      if(lastJsonMessage['type']=='broadcast_disconnect'){\r\n        const channel_name = lastJsonMessage['sender']\r\n        const exist = guests.find(v=>v == channel_name)\r\n        exist && setGuests(guests.filter(v=>v != channel_name))\r\n      }\r\n    }\r\n  }, [lastJsonMessage])\r\n  const scale = focusGuest?'100%':`${100 / Math.max(2, Math.ceil(Math.sqrt(guests.length + 1)))}%`\r\n  const toggleVideoMode = (mode:VideoType)=>{\r\n    setVideoMode(videoMode!=mode?mode:null)\r\n  }\r\n  return lastJsonMessage !==undefined ?\r\n    <ThemedView style={[\r\n      {aspectRatio:!disable?16/9:0, borderColor:Colors.borderColor, borderRadius:10},\r\n      windowType=='landscape'?{flexShrink:1, flexGrow:0, height:'100%', borderLeftWidth:1, paddingBottom:65}:{maxHeight:'36%', width:'100%', borderBottomWidth:1}\r\n    ]}>\r\n      <View style={{aspectRatio:focusGuest?undefined:16/9, backgroundColor:'white', flexWrap:'wrap', flexDirection:'row', width:'100%', height:'100%'}}>\r\n        {guests.map((receiver, i)=><VideoView scale={scale} focusGuest={focusGuest} setFocusGuest={setFocusGuest} receiver={receiver}>\r\n          <RemoteCam receiver={receiver}/>\r\n        </VideoView>\r\n        )}\r\n        <VideoView scale={scale} focusGuest={focusGuest} setFocusGuest={setFocusGuest} receiver={auth.user?.name}>\r\n          <LocalCam user={auth.user} mode={videoMode}/>\r\n        </VideoView>\r\n      </View>\r\n      <ThemedView style={[\r\n          {position:'absolute', alignItems:'center', justifyContent:'flex-end', width:'100%',flexDirection:'row'},\r\n          windowType=='landscape'?{bottom:0, paddingTop:15, paddingBottom:10, paddingHorizontal:19}:{backgroundColor:'transparent'}\r\n        ]}>\r\n        <CommonButton title={'⏺️'} style={{height:40, paddingTop:8}} onPress={()=>toggleVideoMode('camera')}/>\r\n        <CommonButton title={'🖥️'} style={{height:40, paddingTop:8}} onPress={()=>toggleVideoMode('display')}/>\r\n        <CommonButton title={'📹'} style={{height:40, paddingTop:8}} onPress={()=>setDisable(true)}/>\r\n      </ThemedView>\r\n    </ThemedView>:\r\n  <></>\r\n  }\r\n  \r\nexport default React.memo(({channel_id, disable, setDisable}:VideoCallProps)=>{\r\n  return <RtcProvider disable={disable}>\r\n    <VideoCallContainer channel_id={channel_id} disable={disable} setDisable={setDisable}/>\r\n  </RtcProvider>\r\n})\r\n","import React from 'react'\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport CommonSection from \"./CommonSection\"\r\nimport { Linking, TextStyle } from \"react-native\"\r\nimport { FontAwesome } from '@expo/vector-icons'; \r\nimport { View, Text } from \"./Themed\"\r\nimport { File } from \"../types\"\r\nimport useColorScheme from '../hooks/useColorScheme';\r\n\r\nfunction humanFileSize(size:number) {\r\n    var i = size == 0 ? 0 : Math.floor(Math.log(size) / Math.log(1024));\r\n    return (size / Math.pow(1024, i)).toFixed(2) + ' ' + ['B', 'kB', 'MB', 'GB', 'TB'][i];\r\n  }\r\n  \r\n\r\nexport default ({file, isMobile, showBorder}:{file:File, isMobile:boolean, showBorder:boolean})=>{\r\n    const theme = useColorScheme()\r\n    return <CommonSection containerStyle={{marginHorizontal:0}} bodyStyle={showBorder?{padding:10}:{borderWidth:0, padding:0}}>\r\n    <TouchableOpacity onPress={()=>Linking.openURL(file.file)} style={{flexDirection:'row', alignItems:'flex-start'}} containerStyle={{width:'100%'}}>\r\n        <FontAwesome name=\"file-o\" size={20} color={theme=='light'?'black':'white'} />\r\n        <View style={{flex:1, marginHorizontal:10}}>\r\n            <Text style={{fontSize:18}}>{file.filename}</Text>\r\n            <Text style={{fontSize:14}}>{humanFileSize(file.filesize)}</Text>\r\n        </View>\r\n    </TouchableOpacity>\r\n    </CommonSection>\r\n}","import React, {useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState} from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { Platform, StyleSheet, View } from 'react-native';\r\nimport CommonSection from '../../../components/CommonSection';\r\nimport { FlatList, TextInput } from 'react-native-gesture-handler';\r\nimport CommonButton from '../../../components/CommonButton';\r\nimport useMessengerContentList, { MessengerContentPage, useMessengerContentMutation } from '../../../hooks/lists/useMessengerContent.List';\r\nimport useAuthContext from '../../../hooks/useAuthContext';\r\nimport HeaderRight from '../../../components/HeaderRight';\r\nimport useMessengerMemberList, { useMessengerMemberMutation } from '../../../hooks/lists/useMessengerMemberList';\r\nimport { navigate } from '../../../navigation';\r\nimport Colors from '../../../constants/Colors';\r\nimport useColorScheme from '../../../hooks/useColorScheme';\r\nimport { Text, View as ThemedView } from '../../../components/Themed' \r\nimport Hyperlink from 'react-native-hyperlink'\r\nimport useMessengerChannelList from '../../../hooks/lists/useMessengerChannelList';\r\nimport useIsMobile from '../../../hooks/useIsMobile';\r\nimport LinkPreview from '../../../components/LinkPreview';\r\nimport Avatar from '../../../components/Avatar';\r\nimport VideoCallSection from './VideoCallSection';\r\nimport useResizeContext from '../../../hooks/useResizeContext';\r\nimport FilePreview from '../../../components/FilePreview';\r\nimport useModalsContext from '../../../hooks/useModalsContext';\r\nimport InviteModal from '../../../modals/InviteModal';\r\nimport useLangContext from '../../../hooks/useLangContext';\r\nimport ChannelEditModal from '../../../modals/ChannelEditModal';\r\nimport ProfileModal from '../../../modals/ProfileModal';\r\n\r\n\r\nfunction uploadFile(){\r\n  return new Promise<Blob|undefined>((resolve, reject)=>{\r\n    if (Platform.OS == 'web'){\r\n      var input = document.createElement('input');\r\n      input.type = 'file';\r\n      input.onchange = e => { \r\n        resolve((e.target as any).files[0])\r\n      }\r\n      input.onabort = reject\r\n      input.onerror = reject\r\n      input.click();\r\n    }\r\n    else\r\n      resolve(undefined)\r\n  })\r\n}\r\n\r\nconst MessengerContentPageItem = React.memo((props:MessengerContentPage & {ownerId?:number})=>{\r\n  const isMobile = useIsMobile()\r\n  let nextPage = props.next;\r\n    while(nextPage?.next && nextPage.current.length==0){\r\n      nextPage = nextPage.next\r\n    }\r\n    const nextContent = nextPage?.current[0]\r\n    return <View style={{flexDirection: 'column-reverse'}}>\r\n      \r\n      {props.current.map((content, index2)=>{\r\n        const next = index2 + 1 < props.current.length?props.current[index2+1]:nextContent\r\n        const created:string = content.created.slice(0, 16)\r\n        const date = created.slice(0, 10)\r\n        const isSystem = content.user == null\r\n        const isFirst = next==undefined || (content.user != next.user || created != next.created.slice(0, 16))\r\n        const isSelf = props.ownerId == content.user\r\n        const dayChanged = next==undefined || date != next.created.slice(0, 10)\r\n        const message = content.message_set[0]\r\n        if (isSystem)\r\n          return <View key={content.id} style={{flexDirection:'row', justifyContent:'center', width:'100%', marginVertical:5}}>\r\n            <Text>{message.content}</Text>\r\n          </View>\r\n        return <View key={content.id}>\r\n          {dayChanged?<View style={{flexDirection:'row', justifyContent:'center', width:'100%'}}><Text>{date}</Text></View>:undefined}\r\n          <View key={content.id} style={{flexDirection:'row', justifyContent:isSelf?'space-between':'flex-start', width:'100%'}}>\r\n            {isFirst && !isSelf? <View style={{marginTop:3, marginLeft:12}}><Avatar name={content.name} userId={content.user} size={36}/></View>:<View style={{width:48}}/>}\r\n            <CommonSection outerContainerStyle={{width:undefined, maxWidth:'90%'}} title={isFirst?content.name:undefined} titleStyle={{flex:undefined}} bodyStyle={{padding:10}} subtitle={`${created.slice(11)}`}>\r\n              {/* @ts-ignore */}\r\n              <Hyperlink linkDefault={ true } style={{wordBreak:\"break-word\"}} linkStyle={{color: '#12b886'}}>\r\n                <Text selectable>{message.content}</Text>\r\n              </Hyperlink>\r\n              {content.file_set.map((file, fileIndex)=><FilePreview key={fileIndex} file={file} isMobile={isMobile} showBorder={content.file_set.length>1 || message.content.length>0}/>)}\r\n              {content.link_set.map((link, linkIndex)=><LinkPreview key={linkIndex} link={link} isMobile={isMobile}/>)}              \r\n            </CommonSection>\r\n          </View>\r\n        </View>\r\n      })}\r\n    </View>\r\n\r\n})\r\n\r\nexport default function ChatScreen({navigation, route}: StackScreenProps<any, 'Chat'>) {\r\n  const { lang, locale } = useLangContext()\r\n  const channel_id = route?.params?.id\r\n  const height = useRef(0)\r\n  const inputRef = useRef<TextInput>(null)\r\n  const {auth} = useAuthContext()\r\n  const { setModal } = useModalsContext()\r\n  const channel = useMessengerChannelList(auth)?.find(v=>v.id==parseInt(channel_id))\r\n  const {data, fetchNextPage } = useMessengerContentList(channel_id)\r\n  const memberList = useMessengerMemberList(channel_id)\r\n  const member_id = useMemo(()=>memberList?.find(v=>v.user == auth.user?.id)?.id, [auth, memberList])\r\n  const windowType = useResizeContext()\r\n  const messengerMemberMutation = useMessengerMemberMutation()\r\n  const [value, setValue] = useState('')\r\n  const [autoFocus, setAutoFocus] = useState(true)\r\n  const [videoMode, setVideoMode] = useState<boolean>(false)\r\n  const theme = useColorScheme()\r\n  const postValue = ()=>{\r\n    if (value.length>0){\r\n      contentMutation.create({channel:channel_id, user:auth.user?.id, content:value})\r\n      setValue('')\r\n      setAutoFocus(true)\r\n    }\r\n  }\r\n  const contentMutation = useMessengerContentMutation()\r\n\r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      headerRight: ()=> <HeaderRight extra={[\r\n        {title:lang('invite'), onPress:()=>setModal(InviteModal, {id:channel_id})},\r\n        {title:lang('leave'), onPress:()=>{member_id && messengerMemberMutation.leave(member_id).then(back)}}\r\n      ]}/>,\r\n      title: channel?.name\r\n    });\r\n  }, [navigation, route, member_id, locale]);\r\n\r\n  const renderItem = useCallback(({item, index}:{item:MessengerContentPage, index:number})=><MessengerContentPageItem {...item} ownerId={auth.user?.id}/>, [auth])\r\n  \r\n  const back = ()=>{\r\n    if(navigation.canGoBack())\r\n        navigation.goBack()\r\n      else{\r\n        navigation.navigate('HomeScreen', {tab:2})\r\n      }\r\n  }\r\n  useEffect(()=>{\r\n    setModal(null, null)\r\n    if (!(channel_id))\r\n      back()\r\n  }, [route])\r\n  useEffect(()=>{\r\n    if(autoFocus){\r\n      (inputRef.current as any).focus()\r\n      setAutoFocus(false)\r\n    }\r\n  }, [autoFocus])\r\n\r\n  return <View style={[\r\n    {flex:1, alignItems:'center'},\r\n    windowType=='landscape'?{flexDirection:'row-reverse', minWidth:480}:{flexDirection:'column'}\r\n  ]}>\r\n    <VideoCallSection channel_id={channel_id} setDisable={(d)=>setVideoMode(!d)} disable={!videoMode}/>\r\n    <View style={[{flex:videoMode?undefined:1, flexShrink:1}, windowType=='landscape'?{minWidth:320, height:'100%'}:{width:'100%'}]}>\r\n      <FlatList\r\n        style={{flexDirection: 'column-reverse'}}\r\n        contentContainerStyle={{padding:10, flexGrow:1, flexDirection: 'column-reverse'}}\r\n        data={data?.pages}\r\n        renderItem={renderItem}\r\n        onScroll={(e)=>{\r\n          if (e.nativeEvent.contentOffset.y + e.nativeEvent.contentSize.height - height.current < 1)\r\n            fetchNextPage()\r\n        }}\r\n        onLayout={(p)=>{height.current = p.nativeEvent.layout.height}}\r\n      />\r\n      <ThemedView style={{bottom:0, alignItems:'center', width:'100%',flexDirection:'row', paddingTop:15, paddingBottom:10, paddingHorizontal:19}}>\r\n        <TextInput ref={inputRef} value={value} onChangeText={setValue} style={{\r\n          flex:1, borderWidth:1, height:40, borderRadius:6, borderColor:Colors.borderColor, backgroundColor:Colors[theme].background, color:Colors[theme].text\r\n        }} onSubmitEditing={postValue} blurOnSubmit={true}/>\r\n        <CommonButton style={{height:40, paddingTop:8}} title={'💬'} onPress={postValue}/>\r\n        <CommonButton style={{height:40, paddingTop:8}} title={'📤'} onPress={()=>uploadFile().then(f=>{\r\n          contentMutation.create({channel:channel_id, user:auth.user?.id, content:'', file:f})\r\n        })}/>\r\n        {!videoMode && <CommonButton style={{height:40, paddingTop:8}} title={'📹'} onPress={()=>setVideoMode(!videoMode)}/>}\r\n      </ThemedView>\r\n    </View>\r\n  </View>\r\n}","import React, {useState, useEffect, useLayoutEffect} from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { StyleSheet, Text, View} from 'react-native';\r\nimport { Text as StyledText } from 'react-native-paper';\r\nimport { useColorScheme as useConfigColorScheme} from 'react-native-appearance';\r\nimport useResizeContext from '../../hooks/useResizeContext';\r\nimport TabView from '../../components/TabView';\r\nimport HeaderRight from '../../components/HeaderRight';\r\nimport TextButton from '../../components/TextButton';\r\nimport Colors from '../../constants/Colors';\r\nimport useColorScheme, { setColorScheme } from '../../hooks/useColorScheme';\r\nimport useModalsContext from '../../hooks/useModalsContext';\r\nimport ChannelEditModal from '../../modals/ChannelEditModal';\r\nimport useLangContext from '../../hooks/useLangContext';\r\nimport ContractFooter from '../../components/ContractFooter';\r\nimport { TabViewRecord } from '../../types';\r\nimport useAuthContext from '../../hooks/useAuthContext';\r\nimport useUserMembershipList from '../../hooks/lists/useUserMembershipList';\r\nimport { FontAwesome, Ionicons, MaterialCommunityIcons, SimpleLineIcons } from '@expo/vector-icons';\r\nimport { useMessengerChannelSorted } from '../../hooks/lists/useMessengerChannelList';\r\nimport { ScrollView } from 'react-native-gesture-handler';\r\nimport CommonItem from '../../components/CommonItem';\r\nimport MemberItem from '../../components/MemberItem';\r\nimport ProfileModal from '../../modals/ProfileModal';\r\nimport { navigate } from '../../navigation';\r\nimport CommonSection from '../../components/CommonSection';\r\n\r\nconst MemberTabView = ()=>{\r\n  const {auth} = useAuthContext()\r\n  const { setModal } = useModalsContext()\r\n  const userList = useUserMembershipList(auth)\r\n  const memberItem = React.useMemo(\r\n      ()=>userList && userList.map((item, index)=><MemberItem key={index} member={item} onPress={()=>setModal(ProfileModal, {id:item.id})}/>), [userList])\r\n  return <ScrollView style={{flex:1, backgroundColor:'white'}}>\r\n      {memberItem}\r\n  </ScrollView>\r\n}\r\n\r\nconst MessengerTabView = ()=>{\r\n  const {auth} = useAuthContext()\r\n  const channelList = useMessengerChannelSorted(auth)\r\n  const today = (new Date()).toISOString().slice(0, 10)\r\n  return <ScrollView style={{flex:1, backgroundColor:'white'}}>\r\n      {channelList?.map((item, index)=>{\r\n          const date = item.last_message?.created.slice(0,10)\r\n          return <CommonItem key={index} bodyStyle={{flexDirection:'row', justifyContent:'space-between'}} onPress={()=>navigate(\"ChatScreen\", {id:item.id})}>\r\n              <View style={{flexDirection:'row'}}>\r\n                  <FontAwesome size={36} style={{ marginBottom: -3, marginRight:20 }} name='users'/>\r\n                  <View>\r\n                      <View style={{flexDirection:'row'}}>\r\n                          <Text style={{fontSize:18}}>{item.name}</Text>\r\n                          <Text style={{fontSize:18, opacity: 0.4, paddingLeft:5}}>{item.member_count}</Text>\r\n                      </View>\r\n                      <Text style={{fontSize:16, opacity: 0.4}}>{item.last_message?.content}</Text>\r\n                  </View>\r\n              </View>\r\n              <View>\r\n                  <Text style={{fontSize:14, opacity: 0.4, textAlign:'right'}}>{date==today?item.last_message?.created.slice(11,16):date}</Text>\r\n                  <Text style={{fontSize:14, textAlign:'right'}}>{item.unread_count?item.unread_count:' '}</Text>\r\n              </View>\r\n          </CommonItem>\r\n      })}\r\n  </ScrollView>\r\n}\r\n\r\nconst bottomTabs:TabViewRecord = {\r\n  OneTab:{\r\n      title:'member',\r\n      component:MemberTabView,\r\n      icon:<MaterialCommunityIcons size={32} style={{ marginBottom: -3 }} name='account'/>,\r\n  },\r\n  TwoTab:{\r\n      title:'chat',\r\n      component:MessengerTabView,\r\n      icon:<Ionicons size={30} style={{ marginBottom: -3 }} name='chatbox'/>\r\n  },\r\n  // ThreeTab:{\r\n  //     title:'board',\r\n  //     component:()=><></>,\r\n  //     icon:<></>\r\n  // },\r\n  // FourTab:{\r\n  //     title:'config',\r\n  //     component:()=><></>,\r\n  //     icon:<SimpleLineIcons size={30} style={{ marginBottom: -3 }} name='options'/>\r\n  // }\r\n}\r\n\r\n\r\nexport default function HomeScreen({navigation, route}: StackScreenProps<any, 'Home'>) {\r\n  const { lang, locale, setLocale } = useLangContext()\r\n  const windowType = useResizeContext();\r\n  const theme = useColorScheme()\r\n  const configTheme = useConfigColorScheme()\r\n  const { setModal } = useModalsContext()\r\n  const [ home, setHome ] = useState(windowType == 'landscape')\r\n  const color = Colors[theme].text\r\n  const options = [\r\n    {title:lang('member'), headerRight:()=><HeaderRight/>},\r\n    {title:lang('chat'), headerRight:()=><HeaderRight extra={[{title:lang('create'), onPress:()=>setModal(ChannelEditModal, {type:'messenger'})}]}/>},\r\n    // {title:'board', headerRight:()=><HeaderRight extra={[{title:'create', onPress:()=>setModal(ChannelEditModal, props:{type:'board'}}) }]}/>},\r\n    {title:'config', headerRight:()=><HeaderRight/>}\r\n  ]\r\n  \r\n  useLayoutEffect(() => {\r\n    const index = route?.params?.tab | 0\r\n    navigation.setOptions(windowType == 'portrait'?options[index]:{\r\n      title: lang('home'),\r\n      headerRight: ()=><HeaderRight/>\r\n    });\r\n  }, [navigation, route, windowType, locale]);\r\n  useEffect(()=>{\r\n    setHome(windowType == 'landscape')\r\n  }, [windowType])\r\n  return home?\r\n    <View style={{flex:1, justifyContent:'center', alignItems:'center'}}>\r\n      <View style={{width:'80%', flex:1, marginTop:72}}>\r\n        <StyledText style={{fontSize:32, color}}>Tokki Tok</StyledText>\r\n        <View style={{backgroundColor:Colors.borderColor, height:1, width:'100%'}}/>\r\n        {/* <Text style={{fontSize:20, color:'gray'}}>Welcome! This is a messenger for teams.</Text>*/}\r\n        <View style={{height:24}}/>\r\n        <CommonSection bodyStyle={{alignItems:'flex-start', backgroundColor:'transparent'}}>\r\n          <TextButton title={lang('+ New chat')} textStyle={{fontSize:20, color}} style={{paddingLeft:0, borderRadius:20}} onPress={()=>setModal(ChannelEditModal, {type:'messenger'})}/>\r\n        </CommonSection>\r\n        <CommonSection bodyStyle={{alignItems:'flex-start', backgroundColor:'transparent'}}>\r\n          <Text style={{fontSize:20, color, fontWeight:'600'}}>{lang('* Language Settings')}</Text>\r\n          <View style={{flexDirection:'row'}}>\r\n            {[[lang('Auto'), 'auto'], ['한국어', 'ko'], ['English', 'en']].map(([title, l])=><TextButton \r\n              key={title} title={title || ''} textStyle={{fontSize:16, color, textDecorationLine:locale==l?'underline':'none'}} style={{borderRadius:20}} onPress={()=>setLocale(l)}/>)}\r\n          </View>\r\n        </CommonSection>\r\n        <CommonSection bodyStyle={{alignItems:'flex-start', backgroundColor:'transparent'}}>\r\n          <Text style={{fontSize:20, color, fontWeight:'600'}}>{lang('* Skin Settings')}</Text>\r\n          <View style={{flexDirection:'row'}}>\r\n            {[[lang('Auto'), 'no-preference'], [lang('Light'), 'light'], [lang('Dark'), 'dark']].map(([title, colorScheme])=><TextButton \r\n              key={title} title={title} textStyle={{fontSize:16, color, textDecorationLine:configTheme==colorScheme?'underline':'none'}} style={{borderRadius:20}} onPress={(\r\n                )=>setColorScheme(colorScheme)}/>)}\r\n          </View>\r\n        </CommonSection>\r\n      </View>\r\n      <ContractFooter/>\r\n    </View>:\r\n    <TabView tabs={bottomTabs} tabBarPosition=\"bottom\" index={parseInt(route.params?.['tab'] || 0)} onTab={(index)=>{navigation.setParams({tab:index})}}/>\r\n}\r\n\r\n","import React, {useEffect, useLayoutEffect, useState} from 'react';\r\n\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport useAuthContext from '../../hooks/useAuthContext';\r\nimport useMessengerChannelList from '../../hooks/lists/useMessengerChannelList';\r\nimport { Text } from '../../components/Themed';\r\nimport { useMessengerMemberMutation } from '../../hooks/lists/useMessengerMemberList';\r\n\r\nexport default function InviteeScreen({navigation, route}: StackScreenProps<any, 'Invitee'>) {\r\n    const id = route?.params?.id\r\n    const {auth, dispatch} = useAuthContext()\r\n    const [enterGuest, setEnterGuest] = useState(false)\r\n    const channelList = useMessengerChannelList(auth)\r\n    const messengerMemberMutation = useMessengerMemberMutation()\r\n    useLayoutEffect(() => {\r\n        navigation.setOptions({headerRight: undefined});\r\n    }, []);\r\n    useEffect(()=>{\r\n        if(auth.user==null && enterGuest==false){\r\n            dispatch({type:\"LOGIN_GUEST\"})\r\n            setEnterGuest(true)\r\n        }\r\n        else if(auth.user && channelList!==undefined){\r\n            if(channelList.find(v=>v.id==id) === undefined){\r\n                console.log(`invite processing (channel:${id})`)\r\n                messengerMemberMutation.invite({\r\n                    channel_id:id,\r\n                    user_ids:[auth.user.id]\r\n                }).then(()=>navigation.replace(\"ChatScreen\", {id}))\r\n            }\r\n            else{\r\n                console.log('already invite')\r\n                navigation.replace(\"ChatScreen\", {id})\r\n            }\r\n        }\r\n    }, [auth, channelList, enterGuest])\r\n  return <Text>{'초대중'}</Text>\r\n};\r\n","import LoginScreen from \"./main/LoginScreen\";\r\nimport ChatScreen from \"./main/ChatScreen\";\r\nimport HomeScreen from \"./main/HomeScreen\";\r\nimport TabOneScreen from \"./main/TabOneScreen\";\r\nimport InviteeScreen from \"./main/InviteeScreen\";\r\n// import BoardScreen from \"../lib/blacktokki-board/BoardScreen\";\r\n// import BoardEditScreen from \"../lib/blacktokki-board/BoardEditScreen\";\r\nimport { Screens } from \"../types\";\r\n\r\nexport const main = {\r\n    HomeScreen:{\r\n        title:'home',\r\n        component:HomeScreen,\r\n        path:'home',\r\n    },\r\n    ChatScreen:{\r\n        title:'chat',\r\n        component:ChatScreen,\r\n        path:'chat'\r\n    },\r\n    // BoardScreen:{\r\n    //     title:'board',\r\n    //     component:BoardScreen,\r\n    //     path:'board'\r\n    // },\r\n    // TabOneScreen:{\r\n    //     title:'tab one',\r\n    //     component:TabOneScreen,\r\n    //     path:'one'\r\n    // },\r\n    InviteeScreen:{\r\n        title: '',        \r\n        component:InviteeScreen,\r\n        path:'invitee'\r\n    }\r\n} as Screens\r\n\r\nexport const login = {\r\n    LoginScreen:{\r\n        path: 'login',\r\n        title: 'Sign in',\r\n        component:LoginScreen\r\n    },\r\n    InviteeScreen:{\r\n        path:'invitee',\r\n        title: '',\r\n        component:InviteeScreen\r\n    }\r\n} as Screens\r\n\r\nexport const modal = {\r\n    // BoardEditScreen:{\r\n    //     title:'board',\r\n    //     component:BoardEditScreen,\r\n    //     path:'modal/board'\r\n    // },\r\n} as Screens","import React, { Context, createContext,  useContext, useEffect, useState } from \"react\"\r\nimport useWebSocket from \"react-use-websocket\"\r\nimport { SendJsonMessage } from \"react-use-websocket/dist/lib/types\"\r\n// @ts-ignore\r\nimport {API_URL} from \"@env\"\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { AppState, AppStateStatus } from \"react-native\";\r\n\r\ntype WebsocketContextType = {lastJsonMessage:any, sendJsonMessage:SendJsonMessage }\r\nconst defaultContext = {lastJsonMessage:undefined, sendJsonMessage:()=>{}}\r\nconst WebSocketContext = createContext<WebsocketContextType>(defaultContext);\r\nconst [SCHEMA, DOMAIN] = `${API_URL}`.split('://')\r\n\r\nexport const WebSocketInternalProvider = ({children, path, Context, useBackground}:{children:React.ReactNode, path:string, Context:Context<WebsocketContextType>, useBackground?:boolean})=>{\r\n  const [token, setToken] = useState<string|null>(null)\r\n  const [isActive, setIsActive] = useState<boolean>(useBackground || AppState.currentState == 'active')\r\n  const { lastJsonMessage, sendJsonMessage } = useWebSocket(`${SCHEMA=='https'?'wss':'ws'}://${DOMAIN}/${path}`,{\r\n    shouldReconnect: (closeEvent) => true,\r\n    protocols: token?['Authorization',  token]:undefined,\r\n    onOpen: (e)=>{console.log(`success websocket connection(${path})`)},\r\n    onClose: (e)=> {console.log(`closed websocket connection(${path})`)},\r\n  }, isActive && token!=null)\r\n  useEffect(()=>{\r\n    AsyncStorage.getItem('Authorization').then(setToken)\r\n    const onChange = (nextState:AppStateStatus)=>setIsActive(useBackground || nextState == 'active')\r\n    AppState.addEventListener(\"change\", onChange)\r\n    return ()=>AppState.removeEventListener(\"change\", onChange)\r\n  }, [])\r\n  return <Context.Provider value={token!=null?{lastJsonMessage, sendJsonMessage}:defaultContext}>\r\n      {children}\r\n    </Context.Provider>\r\n}\r\n\r\nexport const WebSocketProvider = ({disable, children}:{disable?:boolean, children:React.ReactNode})=>{\r\n  return disable?<>{children}</>:<WebSocketInternalProvider path={'messenger/ws/'} Context={WebSocketContext}>\r\n    {children}\r\n  </WebSocketInternalProvider>\r\n}\r\n\r\nexport default ()=>{\r\n  const webSocketContext = useContext(WebSocketContext)\r\n  return webSocketContext\r\n}\r\n\r\n","import React from 'react'\r\nimport CommonSection from \"./CommonSection\";\r\nimport useResizeContext from '../hooks/useResizeContext';\r\n\r\nexport default (props:{children?: React.ReactNode})=>{\r\n    const windowType = useResizeContext();\r\n    return <CommonSection\r\n        outerContainerStyle={{flex:1, alignSelf:'center', backgroundColor:'#8888', maxWidth:undefined, flexShrink:1}}\r\n        containerStyle={{flex:1, margin:0, justifyContent:'center', alignItems:'center'}}\r\n        bodyStyle={windowType=='landscape'?{width:'90%', height:'90%', padding:'5%'}:{width:'100%', height:'100%', maxWidth:1080}}\r\n    >\r\n        {props.children}\r\n    </CommonSection>\r\n}\r\n\r\nexport const BottomSheet = (props:{children?: React.ReactNode})=><CommonSection\r\n    outerContainerStyle={{flex:1, alignSelf:'center', backgroundColor:'#8888', maxWidth:undefined}}\r\n    containerStyle={{flex:1, margin:0, justifyContent:'flex-end'}}\r\n>\r\n    {props.children}\r\n</CommonSection>","import React, {useState, useEffect } from 'react';\r\nimport { StyleSheet } from 'react-native';\r\nimport { View, Text } from '../components/Themed';\r\nimport CommonButton from '../components/CommonButton';\r\n// import useBoardChannelList, { useBoardChannelMutation } from '../hooks/lists/useBoardChannelList';\r\nimport useAuthContext from '../hooks/useAuthContext';\r\nimport { navigate } from '../navigation';\r\nimport { Channel } from '../types';\r\nimport useMessengerChannelList, { useMessengerChannelMutation } from '../hooks/lists/useMessengerChannelList';\r\nimport TextField from '../components/TextField';\r\nimport useModalsContext from '../hooks/useModalsContext';\r\nimport useLangContext from '../hooks/useLangContext';\r\nimport ModalSection from '../components/ModalSection';\r\n\r\nexport default function ChannelEditModal({id, type}: {id?:number, type:string}) {\r\n  const { lang } = useLangContext()\r\n  const {auth} = useAuthContext()\r\n  const { setModal } = useModalsContext()\r\n  const channelList = useMessengerChannelList(auth)\r\n  const channelMutation = useMessengerChannelMutation()\r\n  const channel = channelList?.find(v=>v.id==id)\r\n  const [name, setName] = useState('')\r\n  const [description, setDescription] = useState('')\r\n  const back = ()=>{\r\n    setModal(ChannelEditModal, null)\r\n  }\r\n  useEffect(()=>{\r\n    if (channel){\r\n      setName(channel.name)\r\n      setDescription(channel?.description || '')\r\n    }\r\n  }, [channel])\r\n  return <ModalSection>\r\n    <View style={{justifyContent:'space-between', flex:1, width:'100%'}}>\r\n      <View style={{width:'100%'}}>\r\n        <Text style={{fontSize:20}}>{lang('New chat')}</Text>\r\n        <View style={styles.separator} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />\r\n        <TextField name={lang('Channel Name')} value={name} setValue={setName} width={'60%'}/>\r\n        <TextField name={lang('Description')} value={description} setValue={setDescription} multiline width={'60%'}/>\r\n      </View>\r\n      <View style={{width:'100%', flexDirection:'row', justifyContent:'flex-end'}}>\r\n        <CommonButton title={lang('save')} onPress={()=>{\r\n          if(auth?.user?.id && auth.groupId){\r\n            const newChannel:Channel = {id, name, description, type, owner:auth?.user?.id, group:auth.groupId};\r\n            (id?channelMutation.update(newChannel):channelMutation.create(newChannel)).then(v=>navigate(\"Main\", {\r\n              screen:v.type == 'messenger'?'ChatScreen':'BoardScreen',\r\n              params:{id:v.id}\r\n            }))\r\n          }\r\n        }}/>\r\n        <CommonButton title={lang('cancel')} style={{marginHorizontal:5}} onPress={back}/>\r\n      </View>\r\n    </View>\r\n  </ModalSection>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  field:{\r\n    width:'50%',\r\n    flexDirection:'row',\r\n    padding:10,\r\n  },\r\n  separator: {\r\n    marginBottom: 20,\r\n    height: 1,\r\n    width: '100%',\r\n  },\r\n})","import { Notification } from '../types';\r\nimport axios from './axios';\r\n\r\nexport const getNotification = async (user_id:number)=>{\r\n    const data = (await axios.get(`/api/v1/notifications/?type=WEB&user=${user_id}`) ).data as Notification[]\r\n    return data.length?data[0]:undefined\r\n}\r\n\r\nexport const postNotification = async(notification:Notification)=>{\r\n    return (await axios.post(`/api/v1/notifications/`, notification)).data as Notification\r\n}\r\n\r\nexport const putNotification = async(notification:Notification)=>{\r\n    return (await axios.put(`/api/v1/notifications/${notification.id}/`, notification)).data as Notification\r\n}","import { Platform } from 'react-native';\r\n//@ts-ignore\r\nimport useMobileDetect from 'use-mobile-detect-hook';\r\n\r\nexport default ()=>{\r\n    const detectMobile = useMobileDetect();\r\n    return (detectMobile.isMobile() || Platform.OS == 'android' || Platform.OS == 'ios') as boolean\r\n}","import { useQuery } from \"react-query\";\r\nimport { getUserMembershipList } from \"../../apis\";\r\nimport { Auth } from \"../useAuthContext\";\r\n\r\nexport default function useUserMembershipList(auth?:Auth){\r\n  const { data } = useQuery([\"UserMembershipList\", auth?.groupId] , async()=>auth?.groupId?(await getUserMembershipList(auth?.groupId)):[])\r\n  return data\r\n}","import React from 'react';\r\nimport { TabView, SceneMap,NavigationState, SceneRendererProps, TabBar } from 'react-native-tab-view';\r\nimport useLangContext from '../hooks/useLangContext';\r\nimport { TabViewRecord } from '../types';\r\n\r\n\r\nexport default (props:{tabs:TabViewRecord, tabBarPosition:\"top\"|\"bottom\", index?:number, onTab?:(index:number)=>void})=>{\r\n  const { lang } = useLangContext()\r\n  const [index, setIndex] = React.useState(props.index || 0);\r\n  const entries = Object.entries(props.tabs)\r\n  const onTab = props.onTab\r\n  const icons = Object.assign({}, ...entries.map(([k, v])=>({[k]:v.icon})))\r\n  return <TabView\r\n    renderTabBar={(props:SceneRendererProps & {navigationState: NavigationState<any>})=>{\r\n      return <TabBar\r\n        {...props}\r\n        indicatorStyle={{ backgroundColor: \"#2196F3\" }}\r\n        style={{ backgroundColor:'white' }}\r\n        activeColor={'black'}\r\n        inactiveColor={'black'}\r\n        renderIcon={(scene)=>icons[scene.route.key]}\r\n        onTabPress={(scene)=>onTab?.(entries.findIndex(([k, v])=>k == scene.route.key))}\r\n      />\r\n    }}\r\n    navigationState={{ index, routes: entries.map(([k, v])=>({key:k, title:lang(v.title)}))}}\r\n    onIndexChange={setIndex}\r\n    renderScene={SceneMap(Object.assign({}, ...entries.map(([k, v])=>({[k]:v.component}))))}\r\n    tabBarPosition={props.tabBarPosition}\r\n  />\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { View } from './Themed';\r\nimport { StyleSheet, StyleProp, ViewStyle, TextStyle, Pressable } from 'react-native';\r\nimport Colors from '../constants/Colors';\r\n\r\nexport type ItemParamList = {\r\n    outerContainerStyle?:StyleProp<TextStyle>\r\n    containerStyle?:StyleProp<ViewStyle>\r\n    bodyStyle?:StyleProp<ViewStyle>\r\n    children?: React.ReactNode\r\n    onPress?: ()=>void\r\n}\r\n\r\nexport default function CommonItem(props:ItemParamList){\r\n  const [hover, setHover] = React.useState(false)\r\n  const [press, setPress] = React.useState(false)\r\n  return (\r\n    <Pressable\r\n      style={[styles.outerContainer ,props.outerContainerStyle, (press)?{backgroundColor:'rgb(242,242,242)'}:{}]}\r\n      onPressIn={()=>{setPress(true)}}\r\n      onPressOut={()=>{setPress(false);props.onPress?.()}}\r\n       //@ts-ignore\r\n       onHoverIn={()=>setHover(true)}\r\n       onHoverOut={()=>setHover(false)}\r\n    >\r\n        <View style={[styles.container ,props.containerStyle]}>\r\n            <View style={[styles.bodyView, props.bodyStyle]}>\r\n                <>{props.children}</>\r\n            </View>\r\n      </View>\r\n    </Pressable>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  outerContainer:{\r\n    width:'100%',\r\n    maxWidth:1080,\r\n    alignItems:'stretch',\r\n  },  \r\n  container: {\r\n      marginHorizontal:20,\r\n      backgroundColor:'transparent'\r\n    },\r\n    bodyView:{\r\n      width: '100%',\r\n      padding: 10,\r\n      minHeight: 40,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      borderBottomWidth:1,\r\n      borderColor:Colors.borderColor,\r\n      backgroundColor:'transparent'\r\n    }\r\n  });\r\n  ","import * as React from 'react';\r\nimport { Avatar } from 'react-native-paper';\r\nimport { AvatarProps } from '../../types';\r\n\r\nconst normalizeHash = (hash: number, min: number, max: number) => {\r\n    return Math.floor((hash % (max - min)) + min);\r\n};\r\n\r\nconst stringToHSL = (str: string, initHash?:number) => {\r\n    let hash = initHash || 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\r\n    }\r\n    hash = Math.abs(hash);\r\n    return `hsl(${normalizeHash(hash, 0, 360)}, ${normalizeHash(hash, 0, 100)}%, ${normalizeHash(hash, 25, 75)}%)`;\r\n};\r\n\r\nexport default (props:AvatarProps) => {\r\n    const backgroundColor = stringToHSL(props.name, props.userId)\r\n    return <Avatar.Text style={{backgroundColor}} size={props.size} label={props.name.split(' ').map(v=>v[0]).join().toUpperCase()} />\r\n};","import React from 'react';\r\n// import { MaterialIcons } from \"@expo/vector-icons\"\r\nimport Avatar from '../lib/react-native-paper/Avatar';\r\nimport { AvatarProps } from '../types';\r\n\r\nexport default (props:AvatarProps)=>{\r\n    // return <MaterialIcons size={38} style={{ marginBottom: -3, marginRight:10 }} name='account-circle'/>\r\n    return <Avatar {...props}/>\r\n}\r\n\r\n","import React, { useMemo } from 'react';\r\n\r\nimport { TextProps, StyleProp } from 'react-native';\r\nimport {View, Text } from './Themed'\r\nimport useResizeContext from '../hooks/useResizeContext';\r\n\r\ntype Props = {\r\n  name: string,\r\n  width?:number,\r\n  children: React.ReactNode\r\n  textStyle?: StyleProp<TextProps>\r\n}\r\n\r\nexport default function RowField(props:Props) {\r\n  const windowType = useResizeContext()\r\n  const rowStyle = useMemo(()=>windowType=='landscape'?\r\n    {flexDirection:'row', alignItems: 'center', justifyContent:'space-between'}:\r\n    {flexDirection:'column', alignItems:'flex-start'} as any\r\n  , [windowType])\r\n  return (\r\n    <View style={[{paddingVertical:5, width:'100%'}, rowStyle]}>\r\n        <Text style={[windowType=='landscape'?{flex:1}:{width:'100%'},{paddingHorizontal: 15, fontSize:16}, props.textStyle]}>{props.name}</Text>\r\n        <View style={[windowType=='landscape'?{flex:6}:{width:'100%'},{paddingHorizontal: 15}]}>\r\n          <View style={{width:props.width}}>\r\n            {props.children}\r\n          </View>\r\n        </View>\r\n    </View>\r\n  )\r\n}","import React from 'react';\r\nimport { StyleProp, TextStyle } from 'react-native';\r\nimport { CustomTextInputProps } from '../types';\r\nimport CommonTextInput from './CommonTextInput';\r\nimport RowField from './RowField';\r\n\r\nexport default function TextField(props:CustomTextInputProps & {name: string, width?:any, textStyle?:StyleProp<TextStyle>}) {\r\n  return (\r\n    <RowField name={props.name} width={props.width} textStyle={props.textStyle}>\r\n      <CommonTextInput {...props} />\r\n   </RowField>\r\n  )\r\n}","/**\r\n * Learn more about Light and Dark modes:\r\n * https://docs.expo.io/guides/color-schemes/\r\n */\r\n\r\nimport * as React from 'react';\r\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\r\n\r\nimport Colors from '../constants/Colors'\r\nimport useColorScheme from '../hooks/useColorScheme';\r\n\r\nexport function useThemeColor(\r\n  props: { light?: string; dark?: string },\r\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\r\n) {\r\n  const theme = useColorScheme();\r\n  const colorFromProps = props[theme];\r\n\r\n  if (colorFromProps) {\r\n    return colorFromProps;\r\n  } else {\r\n    return Colors[theme][colorName];\r\n  }\r\n}\r\n\r\ntype ThemeProps = {\r\n  lightColor?: string;\r\n  darkColor?: string;\r\n};\r\n\r\nexport type TextProps = ThemeProps & DefaultText['props'];\r\nexport type ViewProps = ThemeProps & DefaultView['props'];\r\n\r\nexport function Text(props: TextProps) {\r\n  const { style, lightColor, darkColor, ...otherProps } = props;\r\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\r\n\r\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\r\n}\r\n\r\nexport function View(props: ViewProps) {\r\n  const { style, lightColor, darkColor, ...otherProps } = props;\r\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\r\n\r\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\r\n}\r\n","import React from 'react';\r\nimport useAuthContext from '../hooks/useAuthContext';\r\nimport CommonButton from '../components/CommonButton';\r\nimport useModalsContext from '../hooks/useModalsContext';\r\nimport { Text, View } from '../components/Themed';\r\nimport useLangContext from '../hooks/useLangContext';\r\nimport { BottomSheet } from '../components/ModalSection';\r\n\r\nexport default function GuestLogoutModal({id}:{id:number}) {\r\n  const { lang } = useLangContext()\r\n  const { setModal } = useModalsContext()\r\n  const {dispatch} = useAuthContext()\r\n  const back = ()=>{\r\n    setModal(GuestLogoutModal, null)\r\n  }\r\n  return <BottomSheet>\r\n    <Text>{lang('Guest users cannot reconnect after logging out. Please create an account or log in.')}</Text>\r\n    <View style={{width:'100%', flexDirection:'row', justifyContent:'flex-end'}}>\r\n      <CommonButton title={lang('sign out')} onPress={()=>dispatch({type:\"LOGOUT_REQUEST\"})}/>\r\n      <CommonButton title={lang('cancel')} onPress={()=>back()}/>\r\n    </View>\r\n  </BottomSheet>\r\n}\r\n","import React, { useState } from 'react';\r\nimport { TextInput } from 'react-native';\r\nimport Colors from '../constants/Colors';\r\nimport useColorScheme from '../hooks/useColorScheme';\r\nimport { CustomTextInputProps } from '../types';\r\n\r\nexport default (props:CustomTextInputProps)=>{\r\n    const [contentHeight, setContentHeight] = useState<number>()\r\n    const minHeight = props.minHeight || 30\r\n    const theme = useColorScheme()\r\n    return <TextInput style={[{\r\n            borderColor:'#d0d7de', \r\n            fontSize:16, \r\n            borderWidth:1, \r\n            borderRadius:6, \r\n            paddingHorizontal:10, \r\n            paddingVertical:3, \r\n            backgroundColor:Colors[theme].background,\r\n            color:Colors[theme].text,\r\n            height:props.multiline?contentHeight:minHeight,\r\n        }, props.style]} \r\n        editable={!props.disabled} \r\n        value={props.value} \r\n        onChangeText={props.setValue}\r\n        onContentSizeChange={props.multiline?(e) => setContentHeight(Math.max(e.nativeEvent.contentSize.height, minHeight) + 2):undefined}\r\n        onBlur={()=>props.onBlur?.(props.value)}\r\n        onEndEditing={()=>props.onEndEditing?.(props.value)}\r\n        multiline={props.multiline}\r\n    />\r\n}","import React from \"react\"\r\nimport { Text, View } from \"react-native\"\r\nimport CommonItem from \"./CommonItem\"\r\nimport { UserMembership } from \"../types\"\r\nimport Avatar from \"./Avatar\"\r\n\r\nexport default ({member:item, onPress}:{member:UserMembership, onPress?:()=>void})=> {\r\n    return <CommonItem key={item.id} bodyStyle={{backgroundColor:'white', flexDirection:'row', justifyContent:'flex-start'}} onPress={onPress}>\r\n        <View style={{marginTop:4, marginRight:12}}><Avatar name={item.name} userId={item.id} size={44}/></View>\r\n        <Text style={{fontSize:20, fontWeight:'400'}}>{item.name}</Text>\r\n    </CommonItem>\r\n}","import React, { useEffect } from 'react';\r\nimport Profile from '../components/Profile';\r\nimport useAuthContext from '../hooks/useAuthContext';\r\nimport useUserMembershipList from '../hooks/lists/useUserMembershipList';\r\nimport { useMessengerChannelMutation } from '../hooks/lists/useMessengerChannelList';\r\nimport CommonButton from '../components/CommonButton';\r\nimport { DirectChannel } from '../types';\r\nimport { navigate } from '../navigation';\r\nimport useModalsContext from '../hooks/useModalsContext';\r\nimport { Text, View } from '../components/Themed';\r\nimport useLangContext from '../hooks/useLangContext';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\nimport Colors from '../constants/Colors';\r\nimport useColorScheme from '../hooks/useColorScheme';\r\nimport { BottomSheet } from '../components/ModalSection';\r\n\r\nexport default function ProfileModal({id}:{id:number}) {\r\n  const { lang } = useLangContext()\r\n  const theme = useColorScheme()\r\n  const {auth} = useAuthContext()\r\n  const { setModal } = useModalsContext()\r\n  const userList = useUserMembershipList(auth)\r\n  const user = userList?.find(v=>v.id==id)\r\n  const channelMutation = useMessengerChannelMutation()\r\n  const back = ()=>{\r\n    setModal(ProfileModal, null)\r\n  }\r\n  useEffect(()=>{\r\n    if (!(id && user) && userList)\r\n      back()\r\n  }, [userList])\r\n  return user?<BottomSheet>\r\n    <View style={{flexDirection:'row', width:'100%'}}>\r\n      <View style={{flex:1, flexDirection:'row'}}>\r\n        <TouchableOpacity onPress={back}>\r\n          <Ionicons size={20} name=\"arrow-back\" color={Colors[theme].text}/>\r\n        </TouchableOpacity>\r\n      </View>\r\n      <View style={{flex:1}}>\r\n        <Text style={{fontSize:20, textAlign:'center'}}>{lang('profile')}</Text>\r\n      </View>\r\n      <View style={{flex:1}}/>\r\n    </View>\r\n    <View style={{marginBottom: 20, height: 1, width: '100%'}} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />\r\n    \r\n    <Profile username={user.username} name={user.name} userId={user.id} />\r\n    <CommonButton title={lang('1:1 Chat')} onPress={()=>{\r\n      if(auth?.user?.id && auth.groupId){\r\n        const newChannel:DirectChannel = {name:auth.user.id!=user.id?`${auth.user.name}, ${user.name}`:auth.user.name, type:'messenger', owner:auth?.user?.id, group:auth.groupId, counterpart:user.id};\r\n        channelMutation.direct(newChannel).then(v=>navigate(\"Main\", {screen:\"ChatScreen\", params: {id:v.id}}))\r\n      }\r\n    }}/>\r\n  </BottomSheet>:<></>\r\n}\r\n","import React from 'react';\r\nimport {View} from 'react-native'\r\nimport {Text} from './Themed';\r\nimport { ProfileProps } from '../types';\r\nimport Avatar from './Avatar';\r\nimport TextButton from './TextButton';\r\nimport CommonTextInput from './CommonTextInput';\r\nimport { patchUser } from '../apis';\r\nimport useAuthContext from '../hooks/useAuthContext';\r\n\r\nexport default (props:ProfileProps)=>{\r\n    const [name, setName] = React.useState<string>()\r\n    const { auth, dispatch } = useAuthContext()\r\n    const isSelf = auth.user?.id == props.userId\r\n    const onChange = ()=>{\r\n        isSelf && patchUser({id:props.userId, name:name || ''}).finally(()=>{\r\n            setName(undefined)\r\n            dispatch({type:\"REFRESH\"})\r\n        })\r\n    }\r\n    return <View style={{width:'100%', height:135, justifyContent:'space-evenly', alignItems:'center'}}>\r\n        <Avatar {...props} size={75}/>\r\n        {name===undefined?\r\n            <TextButton textStyle={{fontWeight:'bold', fontSize:15}} onPress={()=>isSelf && setName(props.name)} title={props.name} disabled={!isSelf}/>:\r\n            <CommonTextInput value={name} style={{textAlign:'center'}} setValue={setName} onBlur={onChange} onEndEditing={onChange} />}\r\n        <Text style={{fontWeight:'normal', fontSize:14}}>{props.username}</Text>\r\n    </View>\r\n}","import { useMemo, useReducer } from \"react\"\r\n\r\ntype LocalSearchAction = {type:string, keyword?:string}\r\n\r\ntype LocalSearchState ={active:boolean, keyword:string}\r\n\r\n\r\n\r\nconst localSearchReducer =(initialState:LocalSearchState, action:LocalSearchAction)=>{\r\n    switch (action.type){\r\n        case 'SEARCH':\r\n          return {\r\n            ...initialState,\r\n            keyword: action.keyword\r\n          } as LocalSearchState\r\n        case 'ENABLE_SEARCH':\r\n          return {\r\n            ...initialState,\r\n            active:true,\r\n          }\r\n        case 'DISABLE_SEARCH':\r\n            return{\r\n                ...initialState,\r\n                active:false,\r\n                keyword: ''\r\n            }\r\n        default:\r\n            throw new Error( `Unhandled action type: ${action.type}`)\r\n    }\r\n  }\r\n\r\n\r\nexport default function useLocalSearch<T>(target:T[], compare:(value:T, keyword:string)=>boolean) {\r\n  const [searchState, dispatch] = useReducer(localSearchReducer, {active:false, keyword:''})\r\n  const data = useMemo(()=>searchState.active?target.filter(v=>compare(v, searchState.keyword)):target, [searchState, target])\r\n  return {searchState, dispatch, data}\r\n}","import React, {useRef,MutableRefObject, useMemo, useState, useEffect } from 'react';\r\nimport Clipboard from '@react-native-clipboard/clipboard/dist';\r\nimport { View, Text } from '../components/Themed';\r\nimport useAuthContext from '../hooks/useAuthContext';\r\nimport useUserMembershipList from '../hooks/lists/useUserMembershipList';\r\nimport { TabViewRecord, UserMembership } from '../types';\r\nimport CommonButton from '../components/CommonButton';\r\nimport useMessengerMemberList, { useMessengerMemberMutation } from '../hooks/lists/useMessengerMemberList';\r\nimport useModalsContext from '../hooks/useModalsContext';\r\nimport useExternalMembershipList from '../hooks/lists/useExternalMembershipList';\r\nimport TextField from '../components/TextField';\r\nimport useLocalSearch from '../hooks/useLocalSearch';\r\nimport TabView from '../components/TabView';\r\nimport { FlatList, TouchableOpacity } from 'react-native-gesture-handler';\r\nimport useLangContext from '../hooks/useLangContext';\r\nimport MemberItem from '../components/MemberItem';\r\nimport ModalSection from '../components/ModalSection';\r\n\r\nconst InviteItem = (props:{item:UserMembership, selectedRef:MutableRefObject<Set<number>>})=>{\r\n  const [selected, setSelected] = useState(props.selectedRef.current.has(props.item.id))\r\n  return <View style={selected?{borderWidth:1, borderColor:'blue'}:{}}>\r\n    <MemberItem member={props.item} onPress={()=>{\r\n      if (selected){\r\n        setSelected(false)\r\n        props.selectedRef.current.delete(props.item.id)\r\n      }\r\n      else{\r\n        setSelected(true)\r\n        props.selectedRef.current.add(props.item.id)\r\n      }\r\n    }}/>\r\n  </View>\r\n\r\n}\r\ntype InviteTabViewProps = {\r\n  id:number,\r\n  selectedRef:MutableRefObject<Set<number>>\r\n}\r\n\r\nconst GroupTabView = ({id, selectedRef}:InviteTabViewProps)=>{\r\n  const { lang } = useLangContext()\r\n  const {auth} = useAuthContext()\r\n  const { setModal } = useModalsContext()\r\n  const userList = useUserMembershipList(auth)\r\n  const memberList = useMessengerMemberList(id)\r\n  const messengerMemberMutation = useMessengerMemberMutation()\r\n  const rawData = useMemo(()=>{\r\n    const memberSet = new Set(memberList?.map(v=>v.user))\r\n    return userList?.filter(v=>!memberSet.has(v.id)) || []\r\n  }, [userList, memberList])\r\n  const {data, dispatch:dispatchKeyword, searchState} = useLocalSearch(rawData, (v, keyword)=>(v.username.includes(keyword) || v.name.includes(keyword)))\r\n  const search = (k:string)=>{\r\n    if (k?.length>0){\r\n      dispatchKeyword({type:'ENABLE_SEARCH'})\r\n      dispatchKeyword({type:'SEARCH', keyword:k})\r\n    }\r\n    else{\r\n      dispatchKeyword({type:'DISABLE_SEARCH'})\r\n    }\r\n  }\r\n  const back = ()=>{\r\n    setModal(InviteModal, null)\r\n  }\r\n  return <View style={{alignItems:'center', flex:1}}>\r\n    <View style={{'width': '100%', flex:1}}>\r\n      <TextField name={`${lang('Username')} & ${lang('Name')}`} value={searchState.keyword} setValue={search} width={'80%'}/>\r\n      {id && data && <FlatList contentContainerStyle={{flexGrow:1}} data={data} renderItem={({item})=><InviteItem item={item} selectedRef={selectedRef}/>}/>}\r\n    </View>\r\n    <View style={[{width:'100%', flexDirection:'row', padding:10,}, {justifyContent:'flex-end'}]}>\r\n      <CommonButton title={lang('invite')} onPress={()=>{\r\n        messengerMemberMutation.invite({\r\n          channel_id:id,\r\n          user_ids:[...selectedRef.current]\r\n        }).then(back)\r\n      }}/>\r\n      <CommonButton title={lang('cancel')} onPress={back}/>\r\n    </View>\r\n  </View>\r\n}\r\n\r\nconst DELAY = 500\r\n\r\nconst ExternalMembershipTabView = ({id, selectedRef}:InviteTabViewProps)=>{\r\n  const { lang } = useLangContext()\r\n  const [value, setValue] = useState('')\r\n  const [keyword, setKeyword] = useState('')\r\n  const [copied, setCopied] = useState(false)\r\n  const timeoutRef = useRef<NodeJS.Timeout>()\r\n  const { setModal } = useModalsContext()\r\n  const memberList = useMessengerMemberList(id)\r\n  const externalMemberList = useExternalMembershipList(keyword)\r\n  const data = useMemo(()=>{\r\n    const memberSet = new Set(memberList?.map(v=>v.user))\r\n    return externalMemberList?.filter(v=>!memberSet.has(v.id)) || []\r\n  }, [externalMemberList, memberList])\r\n  const messengerMemberMutation = useMessengerMemberMutation()\r\n  useEffect(()=>{\r\n    timeoutRef.current = setTimeout(()=>{\r\n      setKeyword(value)\r\n    }, DELAY)\r\n    return ()=>{timeoutRef.current && clearTimeout(timeoutRef.current)}\r\n  }, [value])\r\n  const back = ()=>{\r\n    setModal(InviteModal, null)\r\n  }\r\n  const inviteLink = location.href.replace('chat', 'invitee')\r\n  return <View style={{alignItems:'center', flex:1}}>\r\n  <TouchableOpacity style={{paddingVertical:10, flexDirection:\"row\"}} onPress={()=>{Clipboard.setString(inviteLink);setCopied(true)}}>\r\n    <Text style={{fontSize:14}}>{lang('invite link')}{\": \"}</Text>\r\n    <Text style={{fontSize:14, color:'#12b886'}}>{inviteLink}{\" \"}</Text>\r\n    {copied && <Text style={{fontSize:12, color:'red'}}>{lang(\"copied\")}</Text>}\r\n  </TouchableOpacity>\r\n  <View style={{'width': '100%', flex:1}}>\r\n    <TextField name={lang('Username')} value={value} setValue={setValue} width={'80%'}/>\r\n    {id && data && <FlatList contentContainerStyle={{flexGrow:1}} data={data} renderItem={({item})=><InviteItem item={item} selectedRef={selectedRef}/>}/>}\r\n  </View>\r\n  <View style={[{width:'100%', flexDirection:'row', padding:10,}, {justifyContent:'flex-end'}]}>\r\n    <CommonButton title={lang('invite')} onPress={()=>{\r\n      messengerMemberMutation.invite({\r\n        channel_id:id,\r\n        user_ids:[...selectedRef.current]\r\n      }).then(back)\r\n    }}/>\r\n    <CommonButton title={lang('cancel')} onPress={back}/>\r\n  </View>\r\n</View>\r\n}\r\n\r\nexport default function InviteModal({id}:{id:number}) {\r\n  const { lang } = useLangContext()\r\n  const selectedRef = useRef<Set<number>>(new Set())\r\n  const drawerTabs:TabViewRecord = {\r\n    group:{\r\n      title: 'Group',\r\n      component: ()=><GroupTabView id={id} selectedRef={selectedRef}/>,\r\n      icon: <></>\r\n    },\r\n    external:{\r\n      title: 'External members',\r\n      component: ()=><ExternalMembershipTabView id={id} selectedRef={selectedRef}/>,\r\n      icon: <></>\r\n    }\r\n  }\r\n  return <ModalSection>\r\n    <View style={{flex:1, width:'100%'}}>\r\n      <View style={{width:'100%'}}>\r\n        <Text style={{fontSize:20}}>{lang('invite')}</Text>\r\n        <View style={{marginBottom: 20, height: 1, width: '100%'}} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />\r\n      </View>\r\n      <TabView tabs={drawerTabs} tabBarPosition={\"top\"}/>\r\n    </View>\r\n  </ModalSection>\r\n}\r\n\r\n","import { useQuery } from \"react-query\";\r\nimport { getExternalMembershipList } from \"../../apis\";\r\n\r\nexport default function useExternalMembershipList(keyword?:string){\r\n  const { data } = useQuery([\"UserMembershipList\", keyword] , async()=>keyword?(await getExternalMembershipList(keyword)):[])\r\n  return data\r\n}","import axios, { AxiosRequestConfig } from 'axios';\r\n// @ts-ignore\r\nimport {API_URL} from \"@env\"\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nexport const accountURL =  `${API_URL}/account/`\r\nconst baseURL =  `${API_URL}/messenger/`\r\nconst defaultOption:AxiosRequestConfig = {\r\n    baseURL,\r\n    withCredentials: true,\r\n    headers: {}\r\n};\r\nconst _axios = axios.create(defaultOption);\r\n\r\n_axios.interceptors.request.use(\r\n    config => {\r\n        return config;\r\n    },\r\n    error => {\r\n        return Promise.reject(error);\r\n    }\r\n)\r\n\r\n_axios.interceptors.response.use(\r\n    response => {\r\n        // if((response.request.responseURL as string).indexOf('/task/login')>=0 && response.data.length != 0){\r\n        //     // redirect login\r\n        // }\r\n        return response;\r\n    },\r\n    error => {\r\n        if (error.response.status === 401) {\r\n            return getToken().then(async(token)=>{\r\n                if (token){\r\n                    const r = await _axios.post(\"/api/v1/user/sso/refresh/\", {token}, {headers:{'Authorization':''}, baseURL: accountURL})\r\n                    if (r.status == 200 && r.data !== ''){\r\n                        setToken(r.data)\r\n                    }\r\n                }\r\n            }).finally(()=>{\r\n                return Promise.reject(error)\r\n            })\r\n        }\r\n        return Promise.reject(error)\r\n    }\r\n)\r\n\r\nexport const setToken = async (token:string|null)=>{\r\n    _axios.defaults.headers['Authorization'] = `JWT ${token}`\r\n    if (token)\r\n        await AsyncStorage.setItem(\"Authorization\", token)\r\n    else\r\n        AsyncStorage.removeItem(\"Authorization\")\r\n}\r\nexport const getToken = async ()=>{\r\n    const token = await AsyncStorage.getItem(\"Authorization\")\r\n    _axios.defaults.headers['Authorization'] = token?`JWT ${token}`:null\r\n    return token\r\n}\r\n\r\nexport default _axios\r\n","const tintColorLight = '#2f95dc';\r\nconst tintColorDark = '#fff';\r\n\r\nexport default {\r\n  light: {\r\n    text: '#000',\r\n    background: '#fff',\r\n    tint: tintColorLight,\r\n    tabIconDefault: '#ccc',\r\n    tabIconSelected: tintColorLight,\r\n    header:'#24292f',\r\n    buttonColor:'rgb(242,242,242)',\r\n    buttonBackgroundColor: '#f6f8fa', //'rgba(9,30,66,0.08)',//rgb(242,242,242)\r\n  },\r\n  dark: {\r\n    text: '#fff',\r\n    background: '#000',\r\n    tint: tintColorDark,\r\n    tabIconDefault: '#ccc',\r\n    tabIconSelected: tintColorDark,\r\n    header:'#dbd6d1',\r\n    buttonColor:'rgb(14,14,14)',\r\n    buttonBackgroundColor: '#282624',\r\n  },\r\n  button:{\r\n    borderColor:'rgba(27,31,36,0.15)',\r\n  },\r\n  borderColor:'#d0d7de',\r\n  \r\n  focus:'#0065A4',\r\n};\r\n","/**\r\n * Learn more about deep linking with React Navigation\r\n * https://reactnavigation.org/docs/deep-linking\r\n * https://reactnavigation.org/docs/configuring-links\r\n */\r\n\r\nimport { LinkingOptions } from '@react-navigation/native';\r\nimport * as Linking from 'expo-linking';\r\nimport {main, login, modal} from '../screens';\r\n\r\nconst ROOTPATH = 'tokki-tok'  // github repository name\r\n\r\nObject.values(modal).forEach(v=>v.path = ROOTPATH + '/' + v.path)\r\n\r\nexport default  {\r\n  prefixes: [Linking.makeUrl('/')],\r\n  config: {\r\n    screens: {\r\n      Main: {\r\n        screens:{\r\n          ...main,\r\n          ...login,\r\n          NotFound: '*',\r\n        },\r\n        path: ROOTPATH\r\n      },\r\n      ...modal\r\n    },\r\n  },\r\n} as LinkingOptions;\r\n","import React, { createContext, useContext, useEffect, useReducer, useMemo, Dispatch, useState } from \"react\"\r\nimport { checkLogin, login, logout } from \"../apis\"\r\nimport { getNotification, putNotification } from \"../apis/notification\"\r\nimport { UserMembership } from \"../types\"\r\n\r\ntype AuthAction = {type:string, username?:string, password?:string, user?:UserMembership|null}\r\n\r\nexport type Auth = {user?:UserMembership|null, groupId?:number}\r\n\r\ntype AuthState ={user?:UserMembership|null, request?:{username:string, password:string}|null}\r\n\r\nconst AuthContext = createContext<{auth:Auth, error?:string, dispatch:Dispatch<AuthAction>}>({auth:{}, dispatch:()=>{}});\r\n\r\nconst authReducer =(initialState:AuthState, action:AuthAction)=>{\r\n  switch (action.type){\r\n      case 'LOGIN_REQUEST':\r\n        return {\r\n          ...initialState,\r\n          request:{username:action.username, password:action.password},\r\n        } as AuthState\r\n      case 'LOGIN_GUEST':\r\n        return {\r\n          ...initialState,\r\n          request:{username:'guest', password:'guest'},\r\n        } as AuthState\r\n      case 'LOGIN_SUCCESS':\r\n          return{\r\n              ...initialState,\r\n              user:action.user,\r\n              request:undefined\r\n          }\r\n      case 'LOGIN_FAILED':\r\n          return{\r\n              ...initialState,\r\n              request:undefined\r\n          }\r\n      case 'LOGOUT_REQUEST':\r\n          return{\r\n              ...initialState,\r\n              request:null\r\n          }\r\n      case 'LOGOUT_SUCCESS':\r\n          return {\r\n            ...initialState,\r\n            user:null,\r\n            request:undefined\r\n          }\r\n      case 'REFRESH':\r\n        return {\r\n          ...initialState,\r\n          user:undefined\r\n        }\r\n      default:\r\n          throw new Error( `Unhandled action type: ${action.type}`)\r\n  }\r\n}\r\n\r\n\r\nexport const AuthProvider = ({children}:{children:React.ReactNode})=>{\r\n  const [authState, dispatch] = useReducer(authReducer, {} as Auth)\r\n  const [error, setError] = useState<string>()\r\n  const auth = useMemo(()=>({\r\n    user:authState.user,\r\n    groupId: authState.user?.membership_set.find(g=>g.root_group_id==null)?.group\r\n  }), [authState])\r\n  useEffect(()=>{\r\n    if(authState.user===undefined){\r\n      checkLogin().then((user)=>{\r\n        dispatch({type:\"LOGIN_SUCCESS\", user})\r\n      }).catch((e)=>{\r\n        console.log(e)\r\n        dispatch({type:\"LOGOUT_SUCCESS\"})\r\n      })\r\n    }\r\n    else if(authState.user===null && authState.request){\r\n      login(authState.request.username, authState.request.password).then(user=>{\r\n        dispatch({type:\"LOGIN_SUCCESS\", user})\r\n      }).catch((data)=>{\r\n        dispatch({type:\"LOGIN_FAILED\"})\r\n        setError(data.response?.data?.message)\r\n      })\r\n    }\r\n    else if(authState.user && authState.request===null){\r\n      getNotification(authState.user.id).then(noti=>{\r\n        noti && putNotification({...noti, token:''}).then(()=>{\r\n          logout().then(()=>dispatch({type:\"LOGOUT_SUCCESS\"}))\r\n        })\r\n      })\r\n    }\r\n  }, [authState])\r\n  return <AuthContext.Provider value={{auth, error, dispatch}}>\r\n    {children}\r\n  </AuthContext.Provider>\r\n}\r\n\r\nexport default ()=>{\r\n  const authContext = useContext(AuthContext)\r\n  return authContext\r\n}\r\n","import { StackScreenProps } from '@react-navigation/stack';\r\nimport * as React from 'react';\r\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\r\nimport useLangContext from '../hooks/useLangContext';\r\n\r\nexport default function NotFoundScreen({\r\n  navigation,\r\n}: StackScreenProps<any, 'NotFound'>) {\r\n  const { lang } = useLangContext()\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>{lang(\"This screen doesn't exist.\")}</Text>\r\n      <TouchableOpacity onPress={() => navigation.replace('HomeScreen')} style={styles.link}>\r\n        <Text style={styles.linkText}>{lang(\"Go to home screen!\")}</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n  link: {\r\n    marginTop: 15,\r\n    paddingVertical: 15,\r\n  },\r\n  linkText: {\r\n    fontSize: 14,\r\n    color: '#2e78b7',\r\n  },\r\n});\r\n","import { useTheme } from '@react-navigation/native';\r\nimport React, { useState } from 'react';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport Profile from '../components/Profile';\r\nimport TextButton from '../components/TextButton';\r\nimport Colors from '../constants/Colors';\r\nimport useResizeContext from '../hooks/useResizeContext';\r\nimport TabView from '../components/TabView';\r\nimport { TabViewRecord, UserMembership } from '../types';\r\nimport useModalsContext from '../hooks/useModalsContext';\r\nimport ChannelEditModal from '../modals/ChannelEditModal';\r\nimport CommonItem from '../components/CommonItem';\r\nimport { Text } from '../components/Themed';\r\nimport useAuthContext from '../hooks/useAuthContext';\r\nimport { useMessengerChannelSorted } from '../hooks/lists/useMessengerChannelList';\r\nimport { navigate } from '.'\r\n\r\nconst DrawerTabView = (props:{data:{name:string, onPress?:()=>void}[]})=><View style={{flex:1}}>\r\n    {props.data.map((item, index)=><CommonItem key={index} containerStyle={{marginHorizontal:0}} bodyStyle={{alignItems:'flex-start'}} onPress={item.onPress}>\r\n        <Text style={{marginLeft:20}}>{item.name}</Text>\r\n    </CommonItem>\r\n    )}\r\n</View>\r\n\r\nconst MessengerTabView = ()=>{\r\n  const {auth} = useAuthContext()\r\n  const channelList = useMessengerChannelSorted(auth);\r\n  return <DrawerTabView data={(channelList || []).map(item=>({...item, onPress:()=>navigate(\"ChatScreen\", {id:item.id})}))}/>\r\n}\r\n\r\nconst drawerTabs:TabViewRecord = {\r\n  MessengerTab:{\r\n      title:'messenger',\r\n      component:MessengerTabView,\r\n      icon:<></>\r\n  },\r\n}\r\n\r\nexport default ({user}:{user:UserMembership})=> {\r\n  const { colors } = useTheme();\r\n  const windowType = useResizeContext();\r\n  const [index, setIndex] = useState(0);\r\n  const { setModal } = useModalsContext()\r\n  const onAddList = [\r\n    ()=>setModal(ChannelEditModal, {type:'messenger'}),\r\n    ()=>setModal(ChannelEditModal, {type:'board'})\r\n  ]\r\n  return <View style={windowType=='landscape'?[\r\n      styles.tabBar,\r\n      {\r\n        backgroundColor: colors.card,\r\n        borderTopColor: colors.border,\r\n      },\r\n      // tabBarStyle,\r\n    ]:{width:0}}\r\n    pointerEvents={false ? 'none' : 'auto'}\r\n  >\r\n    <Profile userId={user.id} username={user.username} name={user.name}/>\r\n    {windowType=='landscape' && <>\r\n      <View style={{flexDirection:'row-reverse'}}>\r\n          <TextButton title='+' textStyle={{fontSize:20}} style={{borderRadius:20}} onPress={onAddList[index]}/>\r\n      </View>\r\n      <View accessibilityRole=\"tablist\" style={styles.content}>\r\n        {Object.keys(drawerTabs).length>1 ? \r\n          <TabView tabs={drawerTabs} tabBarPosition={\"top\"} onTab={setIndex}/>: \r\n          <View style={{borderTopWidth:1, flex:1, borderColor:colors.border}}>            \r\n            {Object.values(drawerTabs).map(drawerTab=>{const Tab = drawerTab.component; return <Tab key={drawerTab.title}/>})}\r\n          </View>\r\n        }\r\n      </View>\r\n    </>}\r\n  </View>\r\n}\r\n\r\n{/*<Text style={[styles.label, { color: d.isFocused ? colors.primary : '#222' }]}></Text> */}\r\n\r\nconst styles = StyleSheet.create({\r\n    tabBar: {\r\n      width:240,\r\n      elevation: 8,\r\n      borderRightWidth:1,\r\n      borderColor:Colors.borderColor\r\n    },\r\n    content: {\r\n      flex: 1,\r\n      flexDirection: 'row',\r\n    },\r\n    tab: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n    },\r\n    label: {\r\n        textAlign: 'center',\r\n        backgroundColor: 'transparent',\r\n      },\r\n  });","import React, { createContext, useContext, useEffect } from \"react\"\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/messaging\";\r\n//@ts-ignore\r\nimport {FCM_PUBLIC_VAPID_KEY, FCM_API_KEY} from \"@env\"\r\nimport { Notification as NotificationType, UserMembership } from \"../types\";\r\nimport { getNotification, postNotification, putNotification } from \"../apis/notification\";\r\nimport { Auth } from \"./useAuthContext\";\r\nconst firebaseConfig = require(\"../../web/firebase-config.js\")\r\n// Initialize Firebase\r\nconst key = firebaseConfig.messagingSenderId\r\nconst apiKeyEncrypted = (FCM_API_KEY as string).split('').map((v, i)=> (v.charCodeAt(0) ^ key.charCodeAt(i)).toString(16).padStart(2, '0')).join('')\r\nconst app = firebase.initializeApp({...firebaseConfig, apiKey:FCM_API_KEY});\r\n// const analytics = getAnalytics(app);\r\nconst messaging = firebase.messaging(app);\r\n\r\nmessaging.onMessage((payload) => {\r\n  if (!(\"Notification\" in window)) {\r\n    alert(\"This browser does not support desktop notification\");\r\n  }\r\n  else if (Notification.permission === \"granted\") {\r\n    const message_set = JSON.parse(payload.data['message_set'])[0]\r\n    new Notification(payload.data.channel_name, { body: `${payload.data.name}: ${message_set.content}` });\r\n  }\r\n});\r\n\r\nconst requestToken = async()=>{\r\n  const permission = await Notification.requestPermission();\r\n  if (permission === 'granted') {\r\n    const serviceWorkerRegistration = await navigator.serviceWorker.register(`${process.env.PUBLIC_URL}/firebase-messaging-sw.js?${apiKeyEncrypted}`)\r\n    console.log('[SW]: SCOPE: ', serviceWorkerRegistration.scope);\r\n    const currentToken = await messaging.getToken({serviceWorkerRegistration, vapidKey: FCM_PUBLIC_VAPID_KEY })\r\n    window.addEventListener('beforeunload', (event:any) => {\r\n      event.preventDefault();\r\n      serviceWorkerRegistration.unregister()\r\n    });\r\n    if (currentToken)\r\n      return currentToken\r\n  }\r\n  return undefined\r\n}\r\n\r\n\r\nlet noti:NotificationType|undefined\r\n\r\nconst setEnable = async(enable:boolean, user?:UserMembership|null)=>{\r\n  context.enable = enable\r\n  if(user && enable){\r\n    const token = await requestToken() || null\r\n    noti = await getNotification(user.id)\r\n    if (noti == undefined)\r\n      noti = await postNotification({user:user.id, type:'WEB', token})\r\n    else\r\n      noti = await putNotification({...noti, token})\r\n  }\r\n  else if (noti){\r\n    await putNotification({...noti, token:null})\r\n  }\r\n}\r\n\r\nconst context:{enable:boolean, setEnable:(enable:boolean, user?:UserMembership|null)=>void} = {enable:false, setEnable}\r\nconst FirebaseContext = createContext(context);\r\n\r\nexport default (auth:Auth)=>{\r\n  useEffect(()=>{\r\n    setEnable(true, auth.user)\r\n  }, [auth.user])\r\n  const firebaseContext = useContext(FirebaseContext)\r\n  return firebaseContext\r\n}\r\n","import InviteModal from \"./InviteModal\";\r\nimport ProfileModal from \"./ProfileModal\";\r\nimport ChannelEditModal from \"./ChannelEditModal\"\r\nimport GuestLogoutModal from \"./GuestLogoutModal\";\r\n\r\nexport default [\r\n    InviteModal,\r\n    ProfileModal,\r\n    ChannelEditModal,\r\n    GuestLogoutModal\r\n]","import { CardStyleInterpolators, createStackNavigator } from '@react-navigation/stack';\r\nimport React, {useMemo} from 'react';\r\nimport { View } from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport useResizeContext from '../hooks/useResizeContext';\r\nimport NotFoundScreen from '../screens/NotFoundScreen';\r\nimport {main, login, modal} from '../screens';\r\nimport DrawerNavigator from './DrawerNavigator';\r\nimport useAuthContext from '../hooks/useAuthContext';\r\nimport { WebSocketProvider } from '../hooks/useWebsocketContext';\r\nimport HeaderRight from '../components/HeaderRight'\r\nimport Colors from '../constants/Colors';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\nimport useFirebaseContext from '../hooks/useFirebaseContext';\r\nimport useIsMobile from '../hooks/useIsMobile';\r\nimport useColorScheme from '../hooks/useColorScheme';\r\nimport { ModalsProvider } from '../hooks/useModalsContext';\r\nimport modals from '../modals';\r\nimport useLangContext from '../hooks/useLangContext';\r\n\r\nconst Root = createStackNavigator();\r\n\r\nexport default function RootNavigator() {\r\n    const windowType = useResizeContext();\r\n    return <Root.Navigator\r\n        mode= 'modal'\r\n        headerMode= 'screen'\r\n        screenOptions={{\r\n            cardStyle:{backgroundColor:\"white\"},\r\n            animationEnabled: true,\r\n            cardStyleInterpolator: CardStyleInterpolators.forVerticalIOS,\r\n        }}\r\n    >\r\n        <Root.Screen name=\"Main\" component={MainNavigator} options={{headerShown:false}}/>\r\n        {Object.entries(modal).map(([key, screen])=><Root.Screen key={key} name={key} component={screen.component} options={{\r\n            title: screen.title,\r\n            gestureDirection: windowType == 'landscape'?'vertical-inverted':'vertical'\r\n        }} />)}\r\n    </Root.Navigator>\r\n}\r\n\r\nconst Main = createStackNavigator();\r\n\r\nfunction headerLeft(navigation:any, route:any, windowType:string, isMobile:boolean){\r\n    const canGOBackScreen = ['HomeScreen', 'LoginScreen'].findIndex(v=>v == route.name) == -1\r\n    const goBack = ()=>{\r\n        if (navigation.canGoBack())\r\n            navigation.goBack()\r\n        else if (canGOBackScreen)\r\n            navigation.replace('HomeScreen')\r\n    }\r\n    if (windowType=='portrait' && canGOBackScreen)\r\n        return <TouchableOpacity onPress={goBack}><Ionicons size={isMobile?20:24} style={{marginHorizontal:isMobile?16:20 }} name=\"arrow-back\"/></TouchableOpacity>\r\n    return null\r\n}\r\n\r\nconst MainNavigator = ()=>{\r\n    const windowType = useResizeContext();\r\n    const isMobile = useIsMobile()\r\n    const {auth} = useAuthContext()\r\n    const theme = useColorScheme()\r\n    const {lang, locale} = useLangContext()\r\n    const entries = useMemo(()=>{\r\n        if (auth.user === undefined)\r\n            return []\r\n        console.log('current user: ', auth.user)\r\n        return Object.entries(auth.user === null?login:main)\r\n    }, [auth, locale])\r\n    const modalValues = useMemo(()=>{\r\n        if (auth.user === undefined)\r\n            return []\r\n        return auth.user === null?[]:modals\r\n    }, [auth])\r\n\r\n    useFirebaseContext(auth)\r\n    return (auth.user!==undefined?<View style={{flexDirection:'row', flex:1}}>\r\n        <ModalsProvider modals={modalValues}>\r\n            {auth.user?<DrawerNavigator user={auth.user}/>:undefined}\r\n            <View style={{flex:1}}>\r\n                <WebSocketProvider disable={auth.user === null || auth.user === undefined}>\r\n                        <Main.Navigator\r\n                            screenOptions={({navigation, route})=>({\r\n                                headerStyle:{backgroundColor:Colors[theme].header, height:isMobile?50:undefined},\r\n                                headerTitleStyle:{color:'white'},\r\n                                headerLeft:()=>headerLeft(navigation, route, windowType, isMobile),\r\n                                headerRight:()=><HeaderRight/>,\r\n                                headerLeftContainerStyle:{backgroundColor:'white', borderBottomWidth:1, borderColor:Colors.borderColor},\r\n                                cardStyle:{flexShrink:1},\r\n                                animationEnabled:windowType=='portrait',\r\n                                cardStyleInterpolator: CardStyleInterpolators.forHorizontalIOS\r\n                            })}\r\n                        >\r\n                            {entries.map(([key, screen])=><Main.Screen key={key} name={key} component={screen.component} options={{ title: lang(screen.title) }} />)}\r\n                            <Main.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\r\n                        </Main.Navigator>\r\n                </WebSocketProvider>\r\n            </View>\r\n        </ModalsProvider>\r\n    </View>:<></>);\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Dimensions, Platform, View } from 'react-native'\r\nimport useIsMobile from '../hooks/useIsMobile'\r\n\r\n\r\nexport default (props:{children:React.ReactNode})=>{\r\n    const isMobile = useIsMobile()\r\n    const [height, setHeight] = useState(window.innerHeight + 1)\r\n    useEffect(()=>{\r\n        if(isMobile && Platform.OS == 'web'){\r\n            const onChange = (e:any)=>{\r\n                setHeight(window.innerHeight + 1)\r\n            }\r\n            Dimensions.addEventListener(\"change\",onChange)\r\n            return () => Dimensions.removeEventListener(\"change\", onChange)\r\n            \r\n        }\r\n    },[ isMobile])\r\n    return <View style={{height:isMobile&&Platform.OS == 'web'?height:'100%'}}>\r\n        {props.children}\r\n    </View>\r\n\r\n}\r\n  ","import React from 'react';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\r\nimport Navigation from './src/navigation';\r\nimport useCachedResources from './src/hooks/useCachedResources';\r\nimport { useInitColorScheme } from './src/hooks/useColorScheme';\r\nimport MobileSafeAreaView from './src/components/MobileSafeAreaView';\r\nimport { AuthProvider } from './src/hooks/useAuthContext';\r\nimport { QueryClient, QueryClientProvider } from 'react-query';\r\nimport { IntlProvider } from './src/hooks/useLangContext';\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nexport default function App() {\r\n  const isLoadingComplete = useCachedResources();\r\n  const isAppearenceComplete = useInitColorScheme()\r\n  if (!isLoadingComplete || !isAppearenceComplete) {\r\n    return null;\r\n  } else {\r\n    return (\r\n      <SafeAreaProvider>\r\n        <MobileSafeAreaView>\r\n          <AuthProvider>\r\n            <QueryClientProvider client={queryClient}>\r\n              <IntlProvider>\r\n                {/* devtools */}\r\n                {/* <ReactQueryDevtools initialIsOpen={true} /> */}\r\n                <Navigation/>\r\n                <StatusBar />\r\n              </IntlProvider>\r\n            </QueryClientProvider>\r\n          </AuthProvider>\r\n        </MobileSafeAreaView>\r\n      </SafeAreaProvider>\r\n    );\r\n  }\r\n}\r\n","import { Ionicons } from '@expo/vector-icons';\r\nimport * as Font from 'expo-font';\r\nimport * as SplashScreen from 'expo-splash-screen';\r\nimport * as React from 'react';\r\n\r\nexport default function useCachedResources() {\r\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\r\n\r\n  // Load any resources or data that we need prior to rendering the app\r\n  React.useEffect(() => {\r\n    async function loadResourcesAndDataAsync() {\r\n      try {\r\n        SplashScreen.preventAutoHideAsync();\r\n\r\n        // Load fonts\r\n        await Font.loadAsync({\r\n          ...Ionicons.font,\r\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\r\n        });\r\n      } catch (e) {\r\n        // We might want to provide this error information to an error reporting service\r\n        console.warn(e);\r\n      } finally {\r\n        setLoadingComplete(true);\r\n        SplashScreen.hideAsync();\r\n      }\r\n    }\r\n\r\n    loadResourcesAndDataAsync();\r\n  }, []);\r\n\r\n  return isLoadingComplete;\r\n}\r\n","import { createIntl, createIntlCache } from \"@formatjs/intl\";\r\nimport {I18nManager} from \"react-native\";\r\nimport * as RNLocalize from \"react-native-localize\";\r\n\r\nexport const translations = {\r\n  ko: require(\"./ko.json\"),\r\n} as const;\r\n\r\ntype Translation = keyof typeof translations;\r\n\r\n// fallback if no available language fits\r\nconst fallback = { languageTag: \"en\", isRTL: false };\r\n\r\nconst { languageTag, isRTL } =\r\n  RNLocalize.findBestLanguageTag(Object.keys(translations)) ?? fallback;\r\n\r\n// update layout direction\r\nI18nManager.forceRTL(isRTL);\r\n\r\n// console.log(languageTag)\r\nconst intl = createIntl(\r\n  {\r\n    defaultLocale: \"en\",\r\n    locale: languageTag,\r\n    messages: translations[languageTag as Translation],\r\n  },\r\n  createIntlCache(),\r\n);\r\n\r\nexport default intl","import React, { createContext, useContext, useState, useEffect } from \"react\";\r\nimport { IntlShape } from \"@formatjs/intl\";\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport intl, { translations } from \"../lang\";\r\n\r\nconst IntlContext = createContext<{locale?:string, setLocale:(locale:string|undefined)=>void}>({setLocale:()=>{}});\r\n\r\nexport const IntlProvider = ({children}:{children:React.ReactNode})=>{\r\n  const [complete, setComplete] = useState(false)\r\n  const [locale, setLocale] = useState<string>()\r\n  useEffect(()=>{\r\n    AsyncStorage.getItem(\"locale\").then(v=>{\r\n      setLocale(v || undefined)\r\n      setComplete(true)\r\n    })\r\n  }, [])\r\n  return complete?<IntlContext.Provider value={{locale, setLocale}}>\r\n      {children}\r\n    </IntlContext.Provider>:<></>\r\n}\r\n\r\n\r\n\r\ntype TranslationParams = Parameters<IntlShape<string>[\"formatMessage\"]>[1];\r\n\r\nexport default ()=>{\r\n  const { locale, setLocale } = useContext(IntlContext)\r\n  return {\r\n    lang:(key: string, params?: TranslationParams) => {\r\n      if (locale == 'en' || key.length==0)\r\n        return key\r\n      if (locale != undefined && locale !='auto')\r\n        return translations[locale as 'ko'][key]\r\n      return intl\r\n        .formatMessage({ id: key, defaultMessage: key }, params)\r\n        .toString()\r\n    },\r\n    locale,\r\n    setLocale: (locale:string)=>{AsyncStorage.setItem('locale', locale).then(()=>setLocale(locale))}\r\n  }\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Text, StyleSheet, Pressable, StyleProp, ViewStyle} from 'react-native';\r\nimport Colors from '../constants/Colors';\r\nimport useColorScheme from '../hooks/useColorScheme';\r\nimport { CustomButtonProps } from '../types';\r\n\r\nconst DefaultButton = (props:CustomButtonProps)=>{\r\n    const [hover, setHover] = useState(false)\r\n    return <Pressable\r\n        onPress={()=>props.onPress()}\r\n        //@ts-ignore\r\n        onHoverIn={()=>setHover(true)}\r\n        onHoverOut={()=>setHover(false)}\r\n        style={[\r\n            {\r\n                paddingVertical:5, \r\n                paddingHorizontal:16\r\n            },\r\n            props.style,\r\n            hover?{backgroundColor:props.color}:{}\r\n        ]}>\r\n            <Text selectable={false} style={[{fontSize:14}, props.textStyle]}>{props.title}</Text>\r\n        </Pressable>\r\n}\r\n\r\nexport default (props:CustomButtonProps)=>{\r\n    const theme = useColorScheme()\r\n    const _props = {\r\n        color:Colors[theme].buttonColor,\r\n        ...props,\r\n        style:[\r\n            styles.style,\r\n            {\r\n                backgroundColor:Colors[theme].buttonBackgroundColor\r\n            },\r\n            props.style,\r\n        ] as StyleProp<ViewStyle>,\r\n        textStyle:[\r\n            styles.text, \r\n            {color:Colors[theme].text},\r\n            props.textStyle\r\n        ]\r\n    }\r\n    return <DefaultButton {..._props}/>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    style:{\r\n        borderRadius:6, \r\n        borderColor:Colors.button.borderColor, \r\n        borderWidth:1, \r\n    },\r\n    text:{\r\n        textAlign:'center', \r\n        fontWeight:'600'\r\n    }\r\n});\r\n","firebaseConfig = {\n    \"authDomain\": \"virtual-metrics-355712.firebaseapp.com\",\n    \"projectId\": \"virtual-metrics-355712\",\n    \"storageBucket\": \"virtual-metrics-355712.appspot.com\",\n    \"messagingSenderId\": \"76003576924\",\n    \"appId\": \"1:76003576924:web:c8c8a006d07918bbc02a99\",\n    \"measurementId\": \"G-SEL35L4N5R\"\n}\nif (typeof module !== 'undefined') {\n    module.exports = firebaseConfig\n}\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","\r\nimport { User, UserMembership } from '../types';\r\nimport axios, { getToken, setToken, accountURL as baseURL } from './axios';\r\n\r\nexport const login = async(username:string, password:string) => {\r\n    if(username.endsWith('.guest') && password.length == 0)\r\n        password = 'guest'\r\n    const r = await axios.post(\"/api-token-auth/\", {username, password});\r\n    if(r.status == 200){\r\n        await setToken(r.data)\r\n        return await checkLogin()\r\n    }\r\n}\r\n\r\nexport const logout = async() => {\r\n    await setToken(null)\r\n    return await axios.get(\"/api-auth/logout/\")\r\n}\r\n\r\nexport const guestLogin =  async() => {\r\n    return await login('guest', 'guest')\r\n}\r\n\r\nconst checkLoginToken = async ()=>{\r\n    const value = (await axios.get(\"/api/v1/users/memberships/?_self=true\"))?.data\r\n    if (value && value.length){\r\n        return value[0] as UserMembership\r\n    }\r\n    return null\r\n}\r\n\r\nexport const checkLogin = async() => {\r\n    const token = await getToken()\r\n    if (token === null)\r\n        return null\r\n    try{\r\n       return await checkLoginToken()\r\n    }\r\n    catch(e:any){\r\n        let error = e\r\n        if(e.response !== undefined && e.response.status==401){\r\n            try{\r\n                return await checkLoginToken()\r\n            }\r\n            catch(e2){\r\n                error = e2\r\n            }\r\n        }\r\n        const isOffline = ((error as any).code == \"ERR_NETWORK\" || (error as any).message && ((error as any).message as string).startsWith(\"Cannot read\"))\r\n        throw {error, isOffline}\r\n    }\r\n}\r\n\r\nexport const getUserList = async (group_id:number)=>{\r\n    return (await axios.get(`/api/v1/users/?group_id=${group_id}`) ).data as User[]\r\n}\r\n\r\nexport const patchUser = async (user:{id:number, name:string})=>{\r\n    await axios.patch(`/api/v1/user/`, {ids:[user.id], updated: {name:user.name}}, {baseURL})\r\n}\r\n\r\nexport const getUserMembershipList = async (group_id:number)=>{\r\n    return (await axios.get(`/api/v1/users/memberships/?group_id=${group_id}`) ).data as UserMembership[]\r\n}\r\n\r\nexport const getExternalMembershipList = async (username:string)=>{\r\n    return (await axios.get(`/api/v1/users/memberships/?username=${username}`) ).data as UserMembership[]\r\n}","import { Channel, MessengerMember, MessengerContent, EditMessage, MessengerChannel, DirectChannel } from '../types';\r\nimport axios from './axios';\r\n\r\nexport const getMessengerChannelList = async (user_id:number)=>{\r\n    return (await axios.get(`/api/v1/channels/messenger/?type=messenger&messenger_user_id=${user_id}`) ).data as MessengerChannel[]\r\n}\r\n\r\nexport const postChannel = async(channel:Channel)=>{\r\n    return (await axios.post(`/api/v1/channels/`, channel)).data as Channel\r\n}\r\n\r\nexport const postDirectChannel = async(channel:DirectChannel)=>{\r\n    return (await axios.post(`/api/v1/channels/direct/`, channel)).data as Channel\r\n}\r\n\r\nexport const putChannel = async(channel:Channel)=>{\r\n    return (await axios.put(`/api/v1/channels/${channel.id}/`, channel)).data as Channel\r\n}\r\n\r\nexport const deleteChannel = async(channel_id:number)=>{\r\n    await axios.delete(`/api/v1/channels/${channel_id}/`)\r\n}\r\n\r\nexport const getMessengerMemberList = async(channel_id:number)=>{\r\n    return (await axios.get(`/api/v1/messengermembers/?channel=${channel_id}`) ).data as MessengerMember[]\r\n}\r\n\r\nexport const postBulkMessengerMember = async(data:{channel_id:number, user_ids:number[]})=>{\r\n    await axios.post(`/api/v1/messengermembers/bulk/`, {channel:data.channel_id, user_ids:data.user_ids})\r\n}\r\n\r\nexport const deleteMessengerMember = async(member_id:number)=>{\r\n    await axios.delete(`/api/v1/messengermembers/${member_id}/`)\r\n}\r\n\r\nexport const getMessengerContentList = async (channel_id:number, id_lt?:number)=>{\r\n    const id_lt_param = id_lt?`&id_lt=${id_lt}`:''\r\n    return (await axios.get(`/api/v1/messengercontents/?limit=30&channel=${channel_id}${id_lt_param}`)).data.results as MessengerContent[]\r\n}\r\n\r\nexport const postMessage = async (message:EditMessage)=>{\r\n    if (message.file){\r\n        const formData = new FormData(); // formData 객체를 생성한다.\r\n        formData.append(\"file\", message.file)\r\n        Object.entries(message).forEach(value=>{\r\n            formData.append(value[0], `${value[1]}`)\r\n        })\r\n        await axios.post(`/api/v1/messengercontents/messages/`, formData, {headers:{\r\n            ...(axios.defaults.headers as any), \"Content-Type\": \"multipart/form-data\",\r\n        }})\r\n    }\r\n    else{\r\n        await axios.post(`/api/v1/messengercontents/messages/`, message)\r\n    }\r\n}\r\n\r\nexport const deleteMessengerContent = async (content_id:number)=>{\r\n    await axios.delete(`/api/v1/messengercontents/${content_id}/`)\r\n}","import AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { useTheme } from '@react-navigation/native';\r\nimport { useMemo, useEffect, useState } from 'react';\r\nimport { ColorSchemeName } from 'react-native';\r\nimport { Appearance, ColorSchemeName as UserColorSchemeName } from 'react-native-appearance';\r\n\r\n// The useColorScheme value is always either light or dark, but the built-in\r\n// type suggests that it can be null. This will not happen in practice, so this\r\n// makes it a bit easier to work with.\r\n\r\nexport function useInitColorScheme(){\r\n  const [complete, setComplete] = useState(false)\r\n  useEffect(()=>{\r\n    if (!complete){\r\n      AsyncStorage.getItem(\"color\").then(v=>{\r\n        Appearance.set({colorScheme:(v==null)?'no-preference':(v as any)})\r\n        setComplete(true)\r\n      })\r\n    }\r\n  }, [complete])\r\n  return complete\r\n}\r\n\r\nexport function setColorScheme(colorScheme:UserColorSchemeName){\r\n  AsyncStorage.setItem('color',colorScheme as string).then(()=>Appearance.set({colorScheme}))\r\n}\r\n\r\nexport default function useColorScheme(): NonNullable<ColorSchemeName> {\r\n  const { dark } = useTheme()\r\n  const colorScheme = useMemo(()=> dark?'dark':'light', [dark]) as NonNullable<ColorSchemeName>;\r\n  return colorScheme\r\n}\r\n","import React, { useState, useEffect, createContext, useContext, useMemo } from 'react';\r\nimport { Dimensions, ScaledSize, useWindowDimensions } from 'react-native';\r\n//@ts-ignore\r\nimport useMobileDetect from 'use-mobile-detect-hook';\r\n\r\ntype WindowType = 'portrait' | 'landscape'\r\n\r\nconst getWindowType = (window:{width:number, height:number})=> window.height >= window.width?'portrait':'landscape' as WindowType;\r\n\r\nconst ResizeContextContext = createContext<WindowType>(getWindowType(Dimensions.get('window')));\r\n\r\nexport const ResizeContextProvider = ({children}:{children:React.ReactNode})=>{\r\n  const detectMobile = useMobileDetect();\r\n  const {width, height} = useWindowDimensions()\r\n  const [windowType, setWindowType] = useState(getWindowType({width, height}))\r\n  useEffect(()=>{\r\n    setWindowType(getWindowType({width, height}))\r\n  }, [width, height])\r\n  return <ResizeContextContext.Provider value={detectMobile.isMobile()?'portrait':windowType}>\r\n    {children}\r\n  </ResizeContextContext.Provider>\r\n}\r\n\r\nexport default function useResizeContext() {\r\n  const windowType = useContext(ResizeContextContext)\r\n  return windowType\r\n}","import React, { useState, createContext, useContext, useEffect } from \"react\";\r\nimport { Modal } from \"react-native\";\r\nimport useResizeContext from \"./useResizeContext\";\r\n\r\ntype ModalProps = any\r\n\r\ntype ModalState = {\r\n  Component:React.ComponentType<ModalProps>,\r\n  props:any\r\n  visible:boolean\r\n}\r\ntype SetModal = (Component:ModalState[\"Component\"]|null, props:ModalProps|null)=>void\r\n\r\nconst ModalsContext = createContext<{setModal: SetModal}>({\r\n    setModal: () => {}\r\n});\r\n\r\nexport const ModalsProvider = ({children, modals:allModals}:{children:React.ReactNode, modals:React.ComponentType<ModalProps>[]}) => {\r\n    const [modals, setModals] = useState<ModalState[]>([]);\r\n    const windowType = useResizeContext();\r\n    const [animationType, setAnimationType] = useState('none')\r\n    const setModal:SetModal = (Component, props) => {\r\n        const newModals = modals.map(m=>{\r\n            if(Component==null){\r\n                return {\r\n                    ...m,\r\n                    visible:false\r\n                }\r\n            }\r\n            else if(m.Component == Component){\r\n                return {\r\n                    Component, \r\n                    props:props!==null?props:m.props,\r\n                    visible:props!==null\r\n                }\r\n            }\r\n            return m        \r\n        })\r\n        setModals(newModals);\r\n    }\r\n    useEffect(()=>{\r\n        if (modals.filter(v=>v.visible).length == 0)\r\n            setAnimationType(windowType == 'landscape'?'fade':'slide')\r\n    }, [windowType])\r\n    useEffect(()=>{\r\n        setModals(allModals.map((Component)=>({Component, props:null, visible:false})))\r\n    }, [allModals])\r\n    return <ModalsContext.Provider value={{setModal}}>\r\n        {children}\r\n        {modals.map((modal, index)=>{\r\n            const { Component, props, visible } = modal;\r\n            return <Modal key={index} animationType={animationType as any} visible={visible} transparent>\r\n                <Component {...props}/>\r\n            </Modal>\r\n        })}\r\n    </ModalsContext.Provider>\r\n}\r\n\r\nexport default ()=>{\r\n    const modalsContext = useContext(ModalsContext)\r\n    return modalsContext\r\n}\r\n\r\n","import { useEffect } from \"react\";\r\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\r\nimport { getMessengerChannelList, postChannel, postDirectChannel, putChannel } from \"../../apis\";\r\nimport { MessengerChannel, MessengerContent } from \"../../types\";\r\nimport { Auth } from \"../useAuthContext\";\r\nimport useWebsocketContext from \"../useWebsocketContext\";\r\n\r\nexport default function useMessengerChannelList(auth?:Auth){\r\n  const queryClient = useQueryClient()\r\n  const {lastJsonMessage} = useWebsocketContext()\r\n  const { data } = useQuery(\"MessengerChannelList\" , async()=>auth?.user?.id?(await getMessengerChannelList(auth.user.id)):[])\r\n\r\n  useEffect(()=>{\r\n    if(lastJsonMessage !=null){\r\n      if(lastJsonMessage['type']=='enter'){\r\n        queryClient.setQueryData<MessengerChannel[]>(\"MessengerChannelList\", (_data)=>{\r\n          return (_data?.find(v=>v.id==lastJsonMessage['data']['id'])?_data:[lastJsonMessage['data'] , ...(_data|| [])]).sort((a, b)=>a.id - b.id)\r\n        })\r\n      }\r\n      if (lastJsonMessage['type']=='next_message'){\r\n        const data:MessengerContent = lastJsonMessage['data']\r\n        queryClient.setQueryData<MessengerChannel[]>(\"MessengerChannelList\", (_data)=>(_data || []).map(v=>{\r\n          if (v.id == data.channel){\r\n            return {...v, last_message:{content:data.message_set[0]?.content, created:data.created}}\r\n          }\r\n          return v\r\n        }))\r\n      }\r\n      // if(lastJsonMessage['type']=='leave'){\r\n      //   queryClient.setQueryData<Channel[]>(\"MessengerChannelList\", (_data)=>_data?.filter(v=>v.id!=lastJsonMessage['data']['channel_id']) || [])\r\n      // }\r\n    }\r\n  }, [lastJsonMessage])\r\n  return data\r\n}\r\n\r\nexport function useMessengerChannelSorted(auth?:Auth){\r\n  const channelList = useMessengerChannelList(auth);\r\n  return channelList?.sort((a, b)=>(a.last_message?.created || '') < (b.last_message?.created || '')?1:-1)\r\n}\r\nexport function useMessengerChannelMutation(){\r\n  const queryClient = useQueryClient()\r\n\r\n  const create = useMutation(postChannel, {\r\n    onSuccess: ()=>queryClient.invalidateQueries(\"MessengerChannelList\")\r\n  });\r\n\r\n  const update = useMutation(putChannel, {\r\n    onSuccess: () => queryClient.invalidateQueries(\"MessengerChannelList\")\r\n  })\r\n\r\n  const direct = useMutation(postDirectChannel, {\r\n    onSuccess: () => queryClient.invalidateQueries(\"MessengerChannelList\")\r\n  })\r\n\r\n  return { create:create.mutateAsync, update:update.mutateAsync, direct:direct.mutateAsync}\r\n}","import * as React from 'react';\r\nimport { View, Text } from './Themed';\r\nimport { StyleSheet, StyleProp, ViewStyle, TextStyle } from 'react-native';\r\nimport Colors from '../constants/Colors';\r\n\r\nexport type SectionParamList = {\r\n    title?: string,\r\n    titleStyle?:StyleProp<TextStyle>\r\n    outerContainerStyle?:StyleProp<TextStyle>\r\n    containerStyle?:StyleProp<ViewStyle>\r\n    bodyStyle?:StyleProp<ViewStyle>\r\n    subtitle?: string\r\n    withSeparator?: boolean\r\n    children?: React.ReactNode\r\n}\r\n\r\nexport default function CommonSection(props:SectionParamList){\r\n  return (\r\n    <View style={[styles.outerContainer, props.outerContainerStyle]}>\r\n        <View style={[styles.container, props.containerStyle]}>\r\n            {props.withSeparator?<View style={styles.separator} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />:undefined}\r\n            {props.title?<View style={styles.titleView}>\r\n              <Text style={[styles.title, props.titleStyle]}>{props.title}</Text>\r\n              <Text style={styles.subtitle}>{props.subtitle}</Text>\r\n            </View>:undefined}\r\n            <View style={[styles.bodyView, props.bodyStyle]}>\r\n            {props.children}\r\n            </View>\r\n          </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  outerContainer:{\r\n    width:'100%',\r\n    maxWidth:1080,\r\n    alignItems:'stretch',\r\n    backgroundColor:'transparent'\r\n  },  \r\n  container: {\r\n      marginHorizontal:20,\r\n      marginVertical: 10,\r\n      backgroundColor:'transparent',\r\n    },\r\n    titleView:{\r\n      width: '100%',\r\n      flexDirection:'row',\r\n      backgroundColor:'transparent',\r\n      marginBottom:5,\r\n    },\r\n    title: {\r\n      flex:1,\r\n      fontSize: 16,\r\n    },\r\n    subtitle: {\r\n      flex:1,\r\n      fontSize: 12,\r\n      textAlign: 'right',\r\n      marginTop:4\r\n    },\r\n    separator: {\r\n      marginBottom: 20,\r\n      height: 1,\r\n      width: '100%',\r\n    },\r\n    bodyView:{\r\n      width: '100%',\r\n      padding: 20,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      borderWidth:1,\r\n      borderColor:Colors.borderColor,\r\n      borderRadius:6\r\n    }\r\n  });\r\n  "],"sourceRoot":""}