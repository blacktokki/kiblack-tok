{"version":3,"sources":["src/components/HeaderRight.tsx","src/screens/main/LoginScreen.tsx","src/components/CommonSection.tsx","src/hooks/lists/useMessengerContent.List.ts","src/hooks/lists/useMessengerMemberList.ts","src/lib/react-native-webrtc/useWebsocketContext.tsx","src/lib/react-native-webrtc/webrtc/p2p.tsx","src/lib/react-native-webrtc/webrtc/index.ts","src/lib/react-native-webrtc/LocalCam.tsx","src/components/LinkPreview.tsx","src/lib/react-native-webrtc/RemoteCam.tsx","src/screens/main/ChatScreen.tsx","src/screens/main/TabOneScreen.tsx","src/components/RowField.tsx","src/components/TextField.tsx","src/screens/ChannelEditScreen.tsx","src/screens/InviteScreen.tsx","src/screens/index.ts","src/screens/main/HomeScreen.tsx","src/screens/ProfileScreen.tsx","src/hooks/useWebsocketContext.tsx","src/components/TextButton.tsx","src/hooks/useIsMobile.ts","src/components/CommonItem.tsx","src/hooks/lists/useUserMembershipList.ts","src/tabs/DrawerTab.tsx","src/tabs/MessengerTab.tsx","src/tabs/index.ts","src/tabs/MemberTab.tsx","src/hooks/useColorScheme.ts","src/navigation/DrawerNavigator.tsx","src/lib/react-native-paper/Profile.tsx","src/components/Profile.tsx","src/navigation/LinkingConfiguration.ts","src/screens/NotFoundScreen.tsx","src/apis/notification.ts","src/hooks/useFirebaseContext.tsx","src/components/MobileSafeAreaView.tsx","src/navigation/RootNavigator.tsx","App.tsx","src/hooks/useCachedResources.ts","src/apis/axios.ts","src/components/Themed.tsx","src/hooks/useAuthContext.tsx","src/navigation/index.tsx","web/firebase-config.js","src/constants/Colors.ts","src/assets/fonts/SpaceMono-Regular.ttf","src/apis/account.ts","src/apis/messenger.ts","src/components/CommonButton.tsx","src/hooks/useResizeWindow.ts","src/hooks/lists/useMessengerChannelList.ts"],"names":["props","dispatch","useAuthContext","windowType","useResizeWindow","defaultButtonProps","title","onPress","type","buttonProps","extra","filter","v","undefined","style","flexDirection","map","k","key","textStyle","color","Styles","StyleSheet","create","login_container","flex","backgroundColor","login_header","alignItems","paddingTop","paddingBottom","login_header_logo","width","resizeMode","login_header_text","marginTop","fontSize","login_header_text_bold","fontWeight","login_wrapper","justifyContent","paddingVertical","borderTopRightRadius","borderTopLeftRadius","form","maxWidth","form_input","height","paddingHorizontal","marginBottom","borderRadius","button","button_label","login_social","login_social_separator","login_social_separator_line","login_social_separator_text","marginHorizontal","login_social_buttons","login_social_button","borderWidth","borderColor","login_social_icon","login_social_facebook","login_footer_text","guest_footer_text","alignSelf","margin","login_footer_link","CommonSection","styles","outerContainer","outerContainerStyle","container","containerStyle","withSeparator","separator","lightColor","darkColor","titleView","titleStyle","subtitle","bodyView","bodyStyle","children","marginVertical","textAlign","padding","Colors","useMessengerContentList","channel_id","queryClient","useQueryClient","useInfiniteQuery","a","async","pageParam","getMessengerContentList","then","current","select","data","pages","length","next","getNextPageParam","lastPage","id","refetchOnReconnect","refetchOnWindowFocus","fetchNextPage","lastJsonMessage","useWebsocketContext","useEffect","setQueryData","_data","pageParams","useMessengerMemberList","useQuery","getMessengerMemberList","useMessengerMemberMutation","invite","useMutation","postBulkMessengerMember","onSuccess","invalidateQueries","leave","deleteMessengerMember","mutate","WebSocketContext","createContext","sendJsonMessage","WebSocketProvider","disable","path","Context","useBackground","useContext","peerConstraints","iceServers","urls","sessionConstraints","mandatory","OfferToReceiveAudio","OfferToReceiveVideo","VoiceActivityDetection","mediaConstraints","audio","video","framerate","onICEcandidate","pc","message","_message","rtcMessage","candidate","RTCIceCandidate","console","log","addIceCandidate","sendICEcandidate","event","sendMessage","receiver","target","optimizeSdp","offerDescription","arr","sdp","split","forEach","str","i","test","RTCSessionDescription","join","createOffer","pcRefCurrent","stream","user","addStream","setLocalDescription","name","camStyle","cam","bottonContainer","position","buttonBar","label","auth","pcRef","useRef","useState","sender","setSender","_stream","setStream","isPlay","useMemo","CustomRTCView","useCallback","React","memo","videoProps","start","mode","mediaDevices","getUserMedia","newStream","getDisplayMedia","catch","e","Object","entries","error","stop","getTracks","track","websocketOnMessage","response","channel_name","peerConnection","RTCPeerConnection","addEventListener","answerDescription","setRemoteDescription","useLocalCam","View","Text","Button","link","isMobile","Linking","openURL","url","Image","source","uri","image","maxHeight","description","setReceiver","setUser","close","clearInterval","statsInterval","iceConnectionState","activeStream","setInterval","getStats","stats","statsOutput","framePerSecond","report","kind","keys","statName","framesPerSecond","Date","toTimeString","addTransceiver","direction","streams","getRemoteStreams","createAnswer","localDescription","useRemoteCam","TextInput","value","onChangeText","VideoCallContainer","videoMode","guests","setGuests","useRtcContext","find","borderTopWidth","RemoteCam","LocalCam","VideoCallSection","Panel_Button_Text","Panel_Holder","RowField","rowStyle","TextField","contentHeight","setContentHeight","minHeight","disabled","multiline","editable","setValue","onContentSizeChange","Math","max","nativeEvent","contentSize","field","InviteItem","selectedRef","has","item","selected","setSelected","renderMemberItem","delete","add","main","HomeScreen","component","navigation","route","options","headerRight","HeaderRight","navigate","useLayoutEffect","index","params","tab","setOptions","TextButton","paddingLeft","tabs","bottomTabs","tabBarPosition","parseInt","onTab","setParams","ChatScreen","useIsMobile","inputRef","channel","useMessengerChannelList","memberList","member_id","messengerMemberMutation","autoFocus","setAutoFocus","setVideoMode","postValue","contentMutation","content","toggleVideoMode","postMessage","_delete","deleteMessengerContent","d","variables","useMessengerContentMutation","back","renderItem","nextPage","nextContent","index2","created","slice","date","isSystem","isFirst","isSelf","dayChanged","message_set","MaterialIcons","size","marginRight","linkDefault","wordBreak","linkStyle","link_set","linkIndex","LinkPreview","canGoBack","goBack","focus","contentContainerStyle","flexGrow","onScroll","contentOffset","y","onLayout","p","layout","bottom","ref","onSubmitEditing","blurOnSubmit","CommonButton","TabOneScreen","login","LoginScreen","username","setUsername","password","setPassword","_login","placeholder","text","autoCapitalize","keyboardType","secureTextEntry","TouchableOpacity","modal","ChannelEditScreen","channelList","channelMutation","useMessengerChannelMutation","setName","setDescription","groupId","newChannel","owner","group","update","screen","replace","InviteScreen","userList","useUserMembershipList","Set","memberSet","user_ids","ProfileScreen","Profile","SCHEMA","DOMAIN","WebSocketInternalProvider","token","setToken","AppState","currentState","isActive","setIsActive","useWebSocket","shouldReconnect","closeEvent","protocols","onOpen","onClose","AsyncStorage","getItem","onChange","nextState","removeEventListener","Provider","useMobileDetect","Platform","OS","CommonItem","setHover","press","setPress","onPressIn","onPressOut","onHoverIn","onHoverOut","borderBottomWidth","getUserMembershipList","DrawerTab","marginLeft","Messenger","MessengerIcon","Ionicons","OneTab","MemberTab","icon","MemberIcon","TwoTab","today","toISOString","last_message","FontAwesome","opacity","member_count","unread_count","drawerTabs","useColorScheme","_useColorScheme","TabViewNavigator","setIndex","icons","assign","renderTabBar","indicatorStyle","activeColor","inactiveColor","renderIcon","scene","onTabPress","findIndex","navigationState","routes","onIndexChange","renderScene","SceneMap","onAddList","colors","useTheme","tabBar","card","borderTopColor","border","pointerEvents","accessibilityRole","values","drawerTab","Tab","elevation","borderRightWidth","header","toUpperCase","ROOTPATH","prefixes","config","screens","Main","NotFound","NotFoundScreen","linkText","putNotification","notification","axios","put","firebaseConfig","require","messagingSenderId","apiKeyEncrypted","charCodeAt","toString","padStart","app","firebase","initializeApp","apiKey","messaging","onMessage","payload","window","Notification","permission","JSON","parse","body","alert","FirebaseContext","enable","setEnable","FirebaseProvider","tokenRef","setNotification","isMount","requestPermission","navigator","serviceWorker","register","process","serviceWorkerRegistration","scope","getToken","vapidKey","currentToken","requestToken","t","user_id","get","getNotification","noti","setNotificationInternal","n","post","postNotification","innerHeight","setHeight","Dimensions","Root","createStackNavigator","QueryClient","RootNavigator","MobileSafeAreaView","client","Navigator","headerMode","screenOptions","cardStyle","animationEnabled","cardStyleInterpolator","CardStyleInterpolators","forVerticalIOS","Screen","MainNavigator","headerShown","gestureDirection","DrawerNavigator","headerStyle","headerTitleStyle","headerLeft","canGOBackScreen","headerLeftContainerStyle","flexShrink","forHorizontalIOS","App","isLoadingComplete","setLoadingComplete","SplashScreen","Font","font","warn","useCachedResources","colorScheme","StatusBar","defaultOption","baseURL","withCredentials","headers","_axios","interceptors","request","use","Promise","reject","status","r","defaults","setItem","removeItem","useThemeColor","colorName","theme","colorFromProps","otherProps","light","dark","AuthContext","authReducer","initialState","action","Error","AuthProvider","useReducer","authState","membership_set","g","root_group_id","checkLogin","logout","navigationRef","Navigation","documentTitle","formatter","linking","versions","LinkingConfiguration","DarkTheme","DefaultTheme","l","search","decoded","s","history","replaceState","pathname","hash","location","ignoreWarnings","_console","_","clone","indexOf","module","exports","background","tint","tabIconDefault","tabIconSelected","endsWith","guestLogin","checkLoginToken","isOffline","code","startsWith","getUserList","group_id","getMessengerChannelList","postChannel","putChannel","deleteChannel","id_lt","id_lt_param","results","content_id","DefaultButton","hover","selectable","_props","detectMobile","setWindow","sort","b","mutateAsync"],"mappings":"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","file":"static/js/app.3977ca41.chunk.js","sourcesContent":["import React from 'react'\nimport TextButton from \"./TextButton\"\nimport useAuthContext from \"../hooks/useAuthContext\"\nimport useResizeWindow from '../hooks/useResizeWindow'\nimport { View } from 'react-native'\n\ntype ButtonProps = {title:string, onPress:()=>void, windowType?:'landscape'|'portrait'}\n\nexport default (props:{extra?:ButtonProps[]})=>{\n    const {dispatch} = useAuthContext()\n    const windowType = useResizeWindow()\n    const defaultButtonProps:ButtonProps[] = [{title:'logout', onPress:()=>dispatch({type:\"LOGOUT_REQUEST\"})}]\n    const buttonProps = (props.extra?[...props.extra, ...defaultButtonProps]:defaultButtonProps).filter(v=>v.windowType==windowType || v.windowType == undefined)\n    return<View style={{flexDirection:'row'}}>\n        {buttonProps.map((v,k)=><TextButton key={k} {...v} textStyle={{color:'white'}} color='#gray'/>)}\n    </View>\n}\n  ","import React, {useState} from 'react';\nimport {\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n  StyleSheet,\n} from 'react-native';\nimport { StackScreenProps } from '@react-navigation/stack';\nimport useAuthContext from '../../hooks/useAuthContext';\n\nexport default function LoginScreen({\n  navigation\n}: StackScreenProps<any, 'Login'>) {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const {dispatch} = useAuthContext()\n  const _login = ()=>dispatch({type:'LOGIN_REQUEST', username, password})\n\n  return (\n    <View style={Styles.login_wrapper}>\n      <View style={Styles.form}>\n        <TextInput\n          style={Styles.form_input}\n          value={username}\n          placeholder={'Username'}\n          onChangeText={(text) => setUsername(text)}\n          autoCapitalize={'none'}\n          keyboardType={'email-address'}\n          onSubmitEditing={_login}\n        />\n        <TextInput\n          style={Styles.form_input}\n          value={password}\n          placeholder={'Password'}\n          secureTextEntry\n          onChangeText={(text) => setPassword(text)}\n          onSubmitEditing={_login}\n        />\n        <TouchableOpacity onPress={_login}>\n          <View style={Styles.button}>\n            <Text style={Styles.button_label}>{'Sign in'}</Text>\n          </View>\n        </TouchableOpacity>\n        <TouchableOpacity onPress={() => dispatch({type:\"LOGIN_GUEST\"})}>\n          <Text style={Styles.guest_footer_text}>\n            {\"Sign in as guest\"}\n          </Text>\n        </TouchableOpacity>\n      </View>\n      <View style={Styles.login_social}>\n        <View style={Styles.login_social_separator}>\n          <View style={Styles.login_social_separator_line} />\n          <Text style={Styles.login_social_separator_text}>{'text'}</Text>\n          <View style={Styles.login_social_separator_line} />\n        </View>\n        <View style={Styles.login_social_buttons}>\n        </View>\n      </View>\n      {/* <>\n        <TouchableOpacity onPress={() => navigate(\"RegistrationScreen\")}>\n          <Text style={Styles.login_footer_text}>\n            {\"Don't have an account? \"}\n            <Text style={Styles.login_footer_link}>{'Sign up'}</Text>\n          </Text>\n        </TouchableOpacity>\n      </> */}\n    </View>\n  );\n};\n\nconst Styles = StyleSheet.create({\n    login_container: {\n      flex: 1,\n      backgroundColor: '#FFF',\n    },\n    login_header: {\n      alignItems: 'center',\n      paddingTop: 30,\n      paddingBottom: 50,\n      backgroundColor: '#208AEC',\n    },\n    login_header_logo: {\n      width: 220,\n      resizeMode: 'contain',\n    },\n    login_header_text: {\n      marginTop: 15,\n      color: '#f0f0f0',\n      fontSize: 16,\n    },\n    login_header_text_bold: {\n      color: '#fff',\n      fontWeight: 'bold',\n    },\n    login_wrapper: {\n      flex: 1,\n      justifyContent: 'space-between',\n      paddingVertical: 40,\n      borderTopRightRadius: 12,\n      borderTopLeftRadius: 12,\n      marginTop: -10,\n      backgroundColor: '#fff',\n      alignItems: 'center',\n    },\n    form: {\n      width: '100%',\n      maxWidth: 280,\n    },\n    form_input: {\n      height: 44,\n      paddingHorizontal: 20,\n      marginBottom: 20,\n      backgroundColor: '#EDF0F7',\n      borderRadius: 50,\n    },\n    button: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: 44,\n      backgroundColor: '#0065A4',\n      borderRadius: 50,\n    },\n    button_label: {\n      color: '#fff',\n      fontSize: 16,\n    },\n    login_social: {\n      width: '100%',\n      maxWidth: 280,\n      marginTop: 20,\n    },\n    login_social_separator: {\n      flexDirection: 'row',\n      alignItems: 'center',\n    },\n    login_social_separator_line: {\n      flex: 1,\n      width: '100%',\n      height: 1,\n      backgroundColor: '#E0E0E0',\n    },\n    login_social_separator_text: {\n      marginHorizontal: 10,\n      color: '#808080',\n      fontSize: 16,\n    },\n    login_social_buttons: {\n      flexDirection: 'row',\n      justifyContent: 'center',\n      marginTop: 20,\n    },\n    login_social_button: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: 60,\n      height: 60,\n      marginHorizontal: 12,\n      borderWidth: 1,\n      borderColor: '#E7E7E7',\n      borderRadius: 60,\n    },\n    login_social_icon: {\n      width: 38,\n      height: 38,\n      resizeMode: 'contain',\n    },\n    login_social_facebook: {\n      backgroundColor: '#4267B2',\n      borderColor: '#4267B2',\n    },\n    login_footer_text: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      color: '#808080',\n      fontSize: 14,\n    },\n    guest_footer_text: {\n      flexDirection: 'row',\n      alignSelf: 'center',\n      color: '#808080',\n      fontSize: 15,\n      margin: 15\n    },\n    login_footer_link: {\n      color: '#208AEC',\n      fontSize: 15,\n      fontWeight: 'bold',\n    },\n  });\n  ","import * as React from 'react';\nimport { View, Text } from './Themed';\nimport { StyleSheet, StyleProp, ViewStyle, TextStyle } from 'react-native';\nimport Colors from '../constants/Colors';\n\nexport type SectionParamList = {\n    title?: string,\n    titleStyle?:StyleProp<TextStyle>\n    outerContainerStyle?:StyleProp<TextStyle>\n    containerStyle?:StyleProp<ViewStyle>\n    bodyStyle?:StyleProp<ViewStyle>\n    subtitle?: string\n    withSeparator?: boolean\n    children?: React.ReactNode\n}\n\nexport default function CommonSection(props:SectionParamList){\n  return (\n    <View style={[styles.outerContainer, props.outerContainerStyle]}>\n        <View style={[styles.container, props.containerStyle]}>\n            {props.withSeparator?<View style={styles.separator} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />:undefined}\n            {props.title?<View style={styles.titleView}>\n              <Text style={[styles.title, props.titleStyle]}>{props.title}</Text>\n              <Text style={styles.subtitle}>{props.subtitle}</Text>\n            </View>:undefined}\n            <View style={[styles.bodyView, props.bodyStyle]}>\n            {props.children}\n            </View>\n          </View>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n  outerContainer:{\n    width:'100%',\n    maxWidth:1080,\n    alignItems:'stretch',\n    backgroundColor:'transparent'\n  },  \n  container: {\n      marginHorizontal:20,\n      marginVertical: 10,\n      backgroundColor:'transparent',\n    },\n    titleView:{\n      width: '100%',\n      flexDirection:'row',\n      backgroundColor:'transparent',\n      marginBottom:5,\n    },\n    title: {\n      flex:1,\n      fontSize: 16,\n    },\n    subtitle: {\n      flex:1,\n      fontSize: 12,\n      textAlign: 'right',\n      marginTop:4\n    },\n    separator: {\n      marginBottom: 20,\n      height: 1,\n      width: '100%',\n    },\n    bodyView:{\n      width: '100%',\n      padding: 20,\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderWidth:1,\n      borderColor:Colors.borderColor,\n      borderRadius:6\n    }\n  });\n  ","import { useCallback, useEffect, useState } from \"react\"\nimport { InfiniteData, useInfiniteQuery, useMutation, useQueryClient } from \"react-query\"\nimport { getMessengerContentList, postMessage, deleteMessengerContent } from \"../../apis\"\nimport { MessengerContent } from \"../../types\"\nimport useWebsocketContext from \"../useWebsocketContext\"\n\nexport type MessengerContentPage = {\n  next?:MessengerContentPage\n  current:MessengerContent[]\n}\n\nexport default function useMessengerContentList(channel_id:number){  \n  const queryClient = useQueryClient()\n  const { data, fetchNextPage } = useInfiniteQuery<MessengerContentPage>(\n    [\"MessengerContentList\", channel_id], \n    async({pageParam})=>getMessengerContentList(channel_id, pageParam).then(current=>({current})), \n    {\n      select:data=>{\n        if(data.pages.length > 1)\n          data.pages[data.pages.length - 2].next = data.pages[data.pages.length - 1]\n        return data;\n      },\n      getNextPageParam:(lastPage)=>lastPage?.current.length?lastPage.current[lastPage.current.length - 1].id:undefined,\n      refetchOnReconnect:false,\n      refetchOnWindowFocus:false\n    }\n  )\n  const { lastJsonMessage } = useWebsocketContext()\n  useEffect(()=>{\n    if(lastJsonMessage !=null && lastJsonMessage['type']=='next_message' && lastJsonMessage['data']['channel'] == channel_id){\n      queryClient.setQueryData<InfiniteData<MessengerContentPage>>([\"MessengerContentList\", channel_id], (_data)=>{\n        if(_data?.pages[0].current && _data?.pages[0].current[0].id != lastJsonMessage['data'].id)\n          _data.pages[0].current = [lastJsonMessage['data'], ..._data?.pages[0].current]\n        return {...(_data || {pages:[], pageParams:[]})}\n      })\n    }\n  }, [lastJsonMessage])\n  return { data, fetchNextPage }\n}\n\nexport function useMessengerContentMutation(){\n  // const queryClient = useQueryClient()\n  const create = useMutation(postMessage, {\n    onSuccess: () => {\n      // queryClient.setQueryData(['MessengerContentList'], (data:any) => ({\n      //   pages: data.pages.slice(0, 1),\n      //   pageParams: data.pageParams.slice(0, 1),\n      // }))\n      // queryClient.invalidateQueries(\"MessengerContentList\")\n    }\n  });\n  const _delete = useMutation(deleteMessengerContent, {\n    onSuccess: (d, variables) => {\n      // queryClient.setQueryData(['MessengerContentList'], (data:any) => ({\n      //   pages: (data.pages as MessengerContent[][]).map(v=>v.filter(v2=>v2.id != variables)),\n      //   pageParams: data.pageParams,\n      // }))\n    }\n  })\n  return { create:create.mutate, delete:_delete.mutate }\n}","import { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport { postBulkMessengerMember, deleteMessengerMember, getMessengerMemberList } from \"../../apis\";\n\nexport default function useMessengerMemberList(channel_id:number){\n  const { data } = useQuery([\"MessengerMemberList\", channel_id] , async()=>await getMessengerMemberList(channel_id))\n  return data\n}\n\n\nexport function useMessengerMemberMutation(){\n  const queryClient = useQueryClient()\n  const invite = useMutation(postBulkMessengerMember, {\n    onSuccess: ()=>{\n      queryClient.invalidateQueries(\"MessengerMemberList\")\n    }\n  })\n\n  const leave = useMutation(deleteMessengerMember, {\n    onSuccess: () => {\n      queryClient.invalidateQueries(\"MessengerChannelList\")\n      queryClient.invalidateQueries(\"MessengerMemberList\")\n    }\n  })\n  return {invite:invite.mutate, leave:leave.mutate}\n}","import React, { createContext, useContext } from \"react\"\nimport { SendJsonMessage } from \"react-use-websocket/dist/lib/types\";\nimport { WebSocketInternalProvider } from \"../../hooks/useWebsocketContext\";\n\nconst WebSocketContext = createContext<{lastJsonMessage:any, sendJsonMessage:SendJsonMessage }>({lastJsonMessage:undefined, sendJsonMessage:()=>{}});\n\nexport const WebSocketProvider = ({disable, children}:{disable?:boolean, children:React.ReactNode})=>{\n  return disable?<></>:<WebSocketInternalProvider path={'messenger/ws/rtc/'} Context={WebSocketContext} useBackground>\n    {children}\n  </WebSocketInternalProvider>\n}\n\nexport default ()=>{\n  const webSocketContext = useContext(WebSocketContext)\n  return webSocketContext\n}\n\n","import React, { useCallback, useRef, useState, useMemo } from \"react\";\n//@ts-ignore\nimport { RTCView, mediaDevices, RTCPeerConnection, MediaStream, RTCSessionDescription, RTCIceCandidate } from \"react-native-webrtc-web-shim\";\nexport const peerConstraints = {\n\ticeServers: [\n\t\t{\n\t\t\turls: 'stun:stun.l.google.com:19302'\n\t\t}\n\t]\n};\n\nexport const sessionConstraints = {\n\tmandatory: {\n\t\tOfferToReceiveAudio: true,\n\t\tOfferToReceiveVideo: true,\n\t\tVoiceActivityDetection: true\n\t}\n};\n\nconst mediaConstraints = {audio:true, video:{framerate:30}}\n\n//@ts-ignore\nexport {MediaStream, RTCPeerConnection, RTCSessionDescription} from \"react-native-webrtc-web-shim\";\n\nconst onICEcandidate = (pc:typeof RTCPeerConnection, message:any)=>{\n\tconst _message = message.data.rtcMessage\n\t\tconst candidate = new RTCIceCandidate(_message);\n\t\tif (pc) {\n\t\t\tconsole.log(\"ICE candidate Added\");\n\t\t\tpc.addIceCandidate(candidate);\n\t\t}\n}\n\nconst sendICEcandidate = (event:any, sendMessage:(data:any)=>void, receiver:string, target:string) => {\n\t// When you find a null candidate then there are no more candidates.\n\t// Gathering of candidates has finished.\n\tif ( !event.candidate ) { return; };\n\t// Send the event.candidate onto the person you're calling.\n\t// Keeping to Trickle ICE Standards, you should send the candidates immediately.\n\tsendMessage({type:'ICEcandidate', receiver, data:{target, rtcMessage:event.candidate}})\n  }\n\nconst BAND_WIDTH = 8000\n\nconst optimizeSdp = (offerDescription:RTCSessionDescription)=>{\n\tvar arr = offerDescription.sdp.split('\\r\\n');\n\tarr.forEach((str:string, i:number) => {\n\t\tif (/^a=fmtp:\\d*/.test(str)) {\n\t\t\tarr[i] = str + `;x-google-max-bitrate=${BAND_WIDTH};x-google-min-bitrate=${BAND_WIDTH};x-google-start-bitrate=${BAND_WIDTH}`;\n\t\t} else if (/^a=mid:(0|video)/.test(str)) { // if with audio then 0=>1\n\t\t\tarr[i] += `\\r\\nb=AS:${BAND_WIDTH}`;\n\t\t}\n\t});\n  \treturn new RTCSessionDescription({\n    \ttype: offerDescription.type,\n    \tsdp: arr.join('\\r\\n'),\n  \t})\n}\n\nconst createOffer = async(pcRefCurrent:{pc?:typeof RTCPeerConnection, receiver:string}, sendMessage:(data:any)=>void, stream:typeof MediaStream, target:string, user?:{name:string})=>{\n\tstream && pcRefCurrent.pc.addStream( stream );\n\tconst offerDescription = optimizeSdp((await pcRefCurrent.pc.createOffer( sessionConstraints )));\n\tawait pcRefCurrent.pc.setLocalDescription( offerDescription );\n\tsendMessage({type:'call', receiver:pcRefCurrent.receiver, data:{target, name:user?.name, rtcMessage:offerDescription}})\n}\n\nexport const useLocalCam = (sendMessage:(data:any)=>void)=>{\n\tconst pcRef = useRef<Record<number,{pc:typeof RTCPeerConnection, receiver:string}>>({})\n\tconst [sender, setSender] = useState<string>()\n\tconst [_stream, setStream] = useState<MediaStream>()\n\tconst isPlay = useMemo(()=>_stream?true:false, [_stream])\n\tconst CustomRTCView = useCallback(React.memo(({style}:{style:any})=>(_stream?<RTCView stream={_stream} style={style} videoProps={{height:'100%'}} />:<></>)) , [_stream])\n\tconst start = useCallback(async(user:{name:string}, stream?:typeof MediaStream, mode?:'camera'|'display')=>{\n\t\tconsole.log(\"start\");\n\t\tif (!_stream || mode!==undefined) {\n\t\t\ttry {\n\t\t\t\tlet newStream:typeof MediaStream;\n\t\t\t\tif(mode == 'camera'){\n\t\t\t\t\tnewStream = await mediaDevices.getUserMedia(mediaConstraints)\n\t\t\t\t}\n\t\t\t\telse if (mode == 'display'){\n\t\t\t\t\tnewStream = await mediaDevices.getDisplayMedia(mediaConstraints)\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tnewStream = stream || await mediaDevices.getUserMedia(mediaConstraints).catch((e:any)=>mediaDevices.getDisplayMedia(mediaConstraints));\n\t\t\t\t}\n\t\t\t\tsetStream(newStream)\n\t\t\t\tObject.entries(pcRef.current).map(([k, v])=>{\n\t\t\t\t\tcreateOffer(v, sendMessage, newStream, 'guest', user)\n\t\t\t\t})\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e);\n\t\t\t}\n\t\t}\n\t}, [_stream])\n\tconst stop = useCallback(()=>{\n\t\tconsole.log(\"stop\");\n\t\tif(_stream){\n\t\t\t_stream.getTracks().map((track:any) => track.stop());\n\t\t\tsetStream(undefined)\n\t\t}\n\t}, [_stream])\n\treturn {\n\t\tstart,\n\t\tstop,\n\t\twebsocketOnMessage: async(response:any, user:{name:string})=>{\n\t\t\tlet type = response.type;\n\t\t\tif (type == 'connection'){\n\t\t\t\tsetSender(response.data.channel_name)\n\t\t\t}\n\t\t\tif (type == 'start' && response.data.target=='host'){\n\t\t\t  console.log('1 start')\n\t\t\t  const peerConnection = new RTCPeerConnection( peerConstraints );\n\t\t\t  peerConnection.addEventListener( 'icecandidate', (event:any) => sendICEcandidate(event, sendMessage, response.sender, 'guest'));\n\t\t\t  pcRef.current[response.sender] = {pc:peerConnection, receiver: response.sender}\n\t\t\t  createOffer(pcRef.current[response.sender], sendMessage, _stream, 'guest', user)\n\t\t\t}\n\t\t\t\n\t\t\tif (type == \"answer\" && response.data.target == 'host'){\n\t\t\t  console.log('3 answer')\n\t\t\t  const peerConnection = pcRef.current[response.sender].pc\n\t\t\t  const answerDescription = new RTCSessionDescription(response.data.rtcMessage);\n\t\t\t  await peerConnection.setRemoteDescription( answerDescription );\n\t\t\t  // const streams = pcRef.current.pc.getRemoteStreams()\n\t\t\t  // setMirrorStream(streams[streams.length - 1])\n\t\t\t}\n\t\t\tif (type == \"ICEcandidate\" && response.data.target=='host'){\n\t\t\t\tconst peerConnection = pcRef.current[response.sender].pc\n\t\t\t\tonICEcandidate(peerConnection, response)\n\t\t\t}\n\t\t},\n\t\tCustomRTCView,\n\t\tisPlay,\n\t\tsender,\n\t\t// renderMirrorView,\n\t}\n}\n\nexport const useRemoteCam = (sendMessage:(data:any)=>void)=>{\n\tconst pcRef = useRef<{pc?:RTCPeerConnection, receiver?:string, statsInterval?:any}>({})\n\tconst [user, setUser] = useState<{name:string}>()\n\tconst [_stream, setStream] = useState<MediaStream>()\n\tconst CustomRTCView = useCallback(React.memo((style:any)=>_stream?<RTCView stream={_stream} style={style} videoProps={{height:'100%'}} />:<></>), [_stream])\n\tconst isPlay = useMemo(()=>_stream?true:false, [_stream])\n\tconst start = useCallback((receiver:string)=>{\n\t\tconsole.log(\"start\");\n\t\tif (!pcRef.current.pc) {\n\t\t  pcRef.current.pc = new RTCPeerConnection( peerConstraints );\n\t\t  pcRef.current.receiver = receiver\n\t\t}\n\t\tif (!_stream){\n\t\t\tsendMessage({type:'start', receiver, data:{'target': 'host'}})\n\t\t}\n\t}, [_stream])\n\tconst stop = () => {\n\t\tconsole.log(\"stop\");\n\t\tif (pcRef.current.pc) {\n\t\t  // peerConnection._unregisterEvents();\n\t\t  setStream(undefined)\n\t\t  pcRef.current.pc.close();\n\t\t  pcRef.current.pc = undefined\n\t\t  pcRef.current.receiver = undefined\n\t\t  clearInterval(pcRef.current.statsInterval)\n\t\t}\n\t}\n\treturn {\n\t\tstart,\n\t\tstop,\n\t\twebsocketOnMessage: async(response:any)=>{\n\t\t\tlet type = response.type;\n\t\t\tif (type == 'start' && response.data.target=='guest' && response.sender == pcRef.current?.receiver){\n\t\t\t\tconsole.log('(remote)1 start')\n\t\t\t\tconst peerConnection = pcRef.current.pc\n\t\t\t\tsetUser({name: response.data.name})\n\t\t\t\tpeerConnection.addEventListener('icecandidate', (event:any) => sendICEcandidate(event, sendMessage, response.sender, 'host'));\n\t\t\t\tpeerConnection.addEventListener('iceconnectionstatechange', (e:any)=>{\n\t\t\t\t\tif (pcRef.current.pc.iceConnectionState == 'connected'){\n\t\t\t\t\t\tlet activeStream = false\n\t\t\t\t\t\tpcRef.current.statsInterval = setInterval(async()=>{\n\t\t\t\t\t\t\tconst stats = await pcRef.current.pc.getStats(null)\n\t\t\t\t\t\t\tlet statsOutput = \"\";\n\t\t\t\t\t\t\tlet framePerSecond = undefined\n\t\t\t\t\t\t\tstats.forEach((report:any) => {\n\t\t\t\t\t\t\t\tif (report.type === \"inbound-rtp\" && report.kind === \"video\") {\n\t\t\t\t\t\t\t\t\tObject.keys(report).forEach((statName) => {\n\t\t\t\t\t\t\t\t\t\tstatsOutput += `${statName}: ${report[statName]}\\n`;\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tframePerSecond = report.framesPerSecond\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tconsole.log(activeStream, framePerSecond)\n\t\t\t\t\t\t\tif (framePerSecond != undefined){\n\t\t\t\t\t\t\t\tactiveStream = true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (activeStream){\n\t\t\t\t\t\t\t\tstop()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconsole.log(new Date().toTimeString().split(' ')[0], statsOutput)\n\t\t\t\t\t\t}, 1000);\n\t\t\t\t\t}\n\t\t\t\t\telse if (pcRef.current.pc.iceConnectionState == 'failed'){\n\t\t\t\t\t\tstop()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t// peerConnection.addTransceiver('audio', {\n\t\t\t\t// \tdirection: 'recvonly'\n\t\t\t\t// });\n\t\t\t\tpeerConnection.addTransceiver('video', {\n\t\t\t\t\tdirection: 'recvonly'\n\t\t\t\t});\n\t\t\t\tawait createOffer({pc:pcRef.current.pc, receiver:response.sender}, sendMessage, _stream, 'host', user)\n\t\t\t}  \n\t\t\tif (type == \"answer\" && response.data.target=='guest' && response.sender == pcRef.current?.receiver){\n\t\t\t\tconsole.log('(remote)3 answer')\n\t\t\t\tconst answerDescription = new RTCSessionDescription(response.data.rtcMessage);\n\t\t\t\tawait pcRef.current.pc.setRemoteDescription( answerDescription );\n\t\t\t\tconst streams = pcRef.current.pc.getRemoteStreams()\n\t\t\t\tsetStream(streams[streams.length - 1])\n\t\t\t\tsendMessage({type:'end', receiver:pcRef.current.receiver, data:{}})\n\t\t\t}\n\t\t\tif (type == \"call\" && response.sender == pcRef.current?.receiver){\n\t\t\t  console.log('2 call')\n\t\t\t  const peerConnection = pcRef.current.pc\n\t\t\t  setUser({name:response.data.name})\n\t\t\t  if (!peerConnection)\n\t\t\t\treturn\n\t\t\t  peerConnection.addEventListener( 'icecandidate', (event:any) => sendICEcandidate(event, sendMessage, response.sender, 'host'));\n\t\t\t  const offerDescription = new RTCSessionDescription(response.data.rtcMessage);\n\t\t\t  await peerConnection.setRemoteDescription( offerDescription );\n\t\t\t  const answerDescription = await peerConnection.createAnswer( sessionConstraints );\n\t\t\t  await peerConnection.setLocalDescription( answerDescription );\n\t\t\t  sendMessage({type:'answer', receiver:pcRef.current.receiver, data:{target:'host', rtcMessage:peerConnection.localDescription}})\n\t\t\t  // Here is a good place to process candidates.\n\t\t\t  const streams = pcRef.current.pc.getRemoteStreams()\n\t\t\t  setStream(streams[streams.length - 1])\n\t\t\t}\n\t\t\tif (type == \"ICEcandidate\" && response.data.target=='guest' && response.sender == pcRef.current?.receiver)\n\t\t\t  onICEcandidate(pcRef.current.pc, response)\n\t\t},\n\t\tCustomRTCView,\n\t\tuser,\n\t\tisPlay\n\t}\n}","import {StyleSheet} from \"react-native\";\nexport {useLocalCam, useRemoteCam} from \"./p2p\"\n\nexport const camStyle = StyleSheet.create({\n\tcontainer:{ flex: 1},\n\tcam:{ flex: 1, height:'100%'},\n\tbottonContainer: {position:\"absolute\", width:'100%', height:'100%', justifyContent:'flex-end'},\n\tbuttonBar: { flexDirection: \"row\", justifyContent: \"space-around\" },\n\tlabel: {backgroundColor:'#0008', color:'white', paddingHorizontal:5},\n})","import React, { useEffect } from \"react\";\nimport {Button, View, Text} from \"react-native\";\nimport useAuthContext from \"../../hooks/useAuthContext\";\n\nimport useWebsocketContext from \"./useWebsocketContext\";\nimport { useLocalCam, camStyle} from \"./webrtc\";\n\n\nexport default (props:{mode?:'camera'|'display'|null})=>{\n  const {auth} = useAuthContext()\n  const {lastJsonMessage, sendJsonMessage} = useWebsocketContext()\n  const {start, stop, websocketOnMessage, CustomRTCView, isPlay} = useLocalCam(sendJsonMessage)\n  useEffect(()=>{\n    auth.user && lastJsonMessage && websocketOnMessage(lastJsonMessage, auth.user)\n  }, [lastJsonMessage, auth])\n  useEffect(()=>{\n    if(props.mode){\n      auth.user && start(auth.user, undefined, props.mode)\n    }\n    else if(props.mode===null){\n      isPlay && stop()\n    }\n  }, [auth, props.mode])\n  return (\n    <View style={camStyle.container}>\n      <CustomRTCView style={camStyle.cam}/>\n      <View style={camStyle.bottonContainer}>\n        <View style={camStyle.buttonBar}>  \n        </View>\n        {(props.mode === undefined || isPlay) &&<View style={{flexDirection:'row'}}><Text style={camStyle.label}>{auth.user?.name}</Text></View>}\n        <View style={camStyle.buttonBar}>\n          {props.mode === undefined && !isPlay && <Button title=\"Start\" onPress={()=>auth.user && start(auth.user)} />}\n          {props.mode === undefined && isPlay && <Button title=\"Stop\" onPress={stop} />}\n        </View>\n      </View>\n    </View>\n  );\n}\n","import React from 'react'\nimport { TouchableOpacity } from \"react-native-gesture-handler\"\nimport CommonSection from \"./CommonSection\"\nimport { Image, Linking } from \"react-native\"\nimport { View, Text } from \"./Themed\"\nimport { Link } from \"../types\"\n\n\n\nexport default ({link, isMobile}:{link:Link, isMobile:boolean})=>{\n    return <CommonSection containerStyle={{marginHorizontal:0}} bodyStyle={{padding:0}}>\n    <TouchableOpacity onPress={()=>Linking.openURL(link.url)} style={{flexDirection:'row'}} containerStyle={{width:'100%'}}>\n        <Image source={{uri:link.image}} resizeMode=\"cover\" style={{ width:'100%', maxWidth:isMobile?120:150, maxHeight:isMobile?120:150, borderWidth:1}}/>\n        <View style={{flex:1, marginHorizontal:20}}>\n        <Text style={{fontSize:20}}>{link.title}</Text>\n        <Text style={{fontSize:14}}>{link.description}</Text>\n        <Text style={{fontSize:12}}>{link.url}</Text>\n        </View>\n    </TouchableOpacity>\n    </CommonSection>\n}","import React, { useState, useEffect, } from \"react\";\nimport {Button,Text, TextInput, View} from \"react-native\";\nimport useWebsocketContext from \"./useWebsocketContext\";\nimport { useRemoteCam, camStyle} from \"./webrtc\";\n\nexport default (props:{receiver?:string})=>{\n  const [receiver, setReceiver] = useState('')\n  const {lastJsonMessage, sendJsonMessage} = useWebsocketContext()\n  const {start, stop, websocketOnMessage, CustomRTCView, isPlay, user} = useRemoteCam(sendJsonMessage)\n  useEffect(()=>{\n    lastJsonMessage && websocketOnMessage(lastJsonMessage)\n  }, [lastJsonMessage])\n  useEffect(()=>{\n    if(props.receiver){\n      start(props.receiver)\n    }\n    return ()=>stop()\n  }, [props.receiver])\n  return (\n    <View style={camStyle.container}>\n      <CustomRTCView style={camStyle.cam}/>\n      <View style={camStyle.bottonContainer}>\n        <View style={camStyle.buttonBar}>\n        </View>\n        {(props.receiver ===undefined || isPlay) &&\n          <View style={{flexDirection:'row'}}>{\n            (props.receiver || isPlay)?\n            <Text style={camStyle.label}>{user?.name}</Text>:\n            <>\n              <Text style={{borderWidth:1}}>Receiver:&nbsp;</Text>\n              <TextInput style={{borderWidth:1, flex:1}} value={receiver} onChangeText={setReceiver}/>\n            </> \n          }</View>}\n        <View style={camStyle.buttonBar}>\n          {props.receiver === undefined && !isPlay && <Button title=\"Start\" onPress={()=>start(receiver)} />}\n          {props.receiver === undefined && isPlay && <Button title=\"Stop\" onPress={stop} />}\n        </View>\n      </View>\n    </View>\n  );\n}\n\n","import React, {useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState} from 'react';\nimport { StackScreenProps } from '@react-navigation/stack';\nimport { StyleSheet, Text,  View} from 'react-native';\nimport CommonSection from '../../components/CommonSection';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { FlatList, TextInput, TouchableOpacity } from 'react-native-gesture-handler';\nimport CommonButton from '../../components/CommonButton';\nimport useMessengerContentList, { MessengerContentPage, useMessengerContentMutation } from '../../hooks/lists/useMessengerContent.List';\nimport useAuthContext from '../../hooks/useAuthContext';\nimport HeaderRight from '../../components/HeaderRight';\nimport useMessengerMemberList, { useMessengerMemberMutation } from '../../hooks/lists/useMessengerMemberList';\nimport { navigate } from '../../navigation';\nimport Colors from '../../constants/Colors';\nimport Hyperlink from 'react-native-hyperlink'\nimport useMessengerChannelList from '../../hooks/lists/useMessengerChannelList';\nimport LocalCam from '../../lib/react-native-webrtc/LocalCam';\nimport useIsMobile from '../../hooks/useIsMobile';\nimport LinkPreview from '../../components/LinkPreview';\nimport {default as useRtcContext, WebSocketProvider as RtcProvider} from \"../../lib/react-native-webrtc/useWebsocketContext\";\nimport RemoteCam from '../../lib/react-native-webrtc/RemoteCam';\n\ntype VideoCallProps = {channel_id:number, videoMode:'camera'|'display'|null}\n\nconst VideoCallContainer = ({channel_id, videoMode}:VideoCallProps)=>{\n  const [guests, setGuests] = useState<string[]>([])\n  const { lastJsonMessage, sendJsonMessage } = useRtcContext()\n  useEffect(()=>{\n    if(lastJsonMessage !=null){\n      if(lastJsonMessage['type']=='connection'){\n        sendJsonMessage({'type':'broadcast', 'data':{'channel_id':channel_id}})\n      }\n      if(lastJsonMessage['type']=='broadcast_guest' || lastJsonMessage['type']=='broadcast_host'){\n        setGuests([...guests, lastJsonMessage['sender']])\n      }\n      if(lastJsonMessage['type']=='broadcast_disconnect'){\n        const channel_name = lastJsonMessage['sender']\n        const exist = guests.find(v=>v == channel_name)\n        exist && setGuests(guests.filter(v=>v != channel_name))\n      }\n    }\n  }, [lastJsonMessage])\n  return lastJsonMessage !==undefined ?<View style={[\n      {flexDirection: 'row', justifyContent:'center', borderColor:Colors.borderColor, borderRadius:10, paddingTop:10, backgroundColor:'white'},\n      videoMode!==null?{borderTopWidth:1}:{}]}>\n      {guests.map((receiver, i)=><View key={i} style={{maxWidth:'33%', flexDirection: 'row', marginHorizontal:10, flex:1}}>\n        <RemoteCam receiver={receiver}/>\n      </View>)}\n      <View style={{maxWidth:'33%', flexDirection: 'row', marginHorizontal:10, flex:1}}>\n        <LocalCam mode={videoMode}/>\n      </View>\n    </View>:<></>\n}\n\nconst VideoCallSection = React.memo(({channel_id, videoMode}:VideoCallProps)=>{\n  return <RtcProvider disable={videoMode==null}>\n    <VideoCallContainer channel_id={channel_id} videoMode={videoMode}/>\n  </RtcProvider>\n})\n\nexport default function ChatScreen({navigation, route}: StackScreenProps<any, 'Chat'>) {\n  const channel_id = route?.params?.id\n  const height = useRef(0)\n  const isMobile = useIsMobile()\n  const inputRef = useRef<TextInput>(null)\n  const {auth} = useAuthContext()\n  const channel = useMessengerChannelList(auth)?.find(v=>v.id==parseInt(channel_id))\n  const {data, fetchNextPage } = useMessengerContentList(channel_id)\n  const memberList = useMessengerMemberList(channel_id)\n  const member_id = useMemo(()=>memberList?.find(v=>v.user == auth.user?.id)?.id, [auth, memberList])\n  const messengerMemberMutation = useMessengerMemberMutation()\n  const [value, setValue] = useState('')\n  const [autoFocus, setAutoFocus] = useState(true)\n  const [videoMode, setVideoMode] = useState<'camera'|'display'|null>(null)\n  const postValue = ()=>{\n    if (value.length>0){\n      contentMutation.create({channel:channel_id, user:auth.user?.id, content:value})\n      setValue('')\n      setAutoFocus(true)\n    }\n  }\n  const toggleVideoMode = (mode:'camera'|'display')=>{\n    setVideoMode(videoMode!=mode?mode:null)\n  }\n  const contentMutation = useMessengerContentMutation()\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      headerRight: ()=> <HeaderRight extra={[\n        {title:'invite', onPress:()=>{navigate(\"InviteScreen\", {id:channel_id})}},\n        {title:'leave', onPress:()=>{member_id && messengerMemberMutation.leave(member_id);back()}}\n      ]}/>,\n      title: channel?.name\n    });\n  }, [navigation, route, member_id]);\n\n  const renderItem = useCallback(({item, index}:{item:MessengerContentPage, index:number})=>{\n    let nextPage = item.next;\n    while(nextPage?.next && nextPage.current.length==0){\n      nextPage = nextPage.next\n    }\n    const nextContent = nextPage?.current[0]\n    return <View style={{flexDirection: 'column-reverse'}}>\n      \n      {item.current.map((content, index2)=>{\n        const next = index2 + 1 < item.current.length?item.current[index2+1]:nextContent\n        const created:string = content.created.slice(0, 16)\n        const date = created.slice(0, 10)\n        const isSystem = content.user == null\n        const isFirst = next==undefined || (content.user != next.user || created != next.created.slice(0, 16))\n        const isSelf = auth.user?.id == content.user\n        const dayChanged = next==undefined || date != next.created.slice(0, 10)\n        if (isSystem)\n          return <View key={content.id} style={{flexDirection:'row', justifyContent:'center', width:'100%', marginVertical:5}}>\n            <Text>{content.message_set[0].content}</Text>\n          </View>\n        return <View key={content.id}>\n          {dayChanged?<View style={{flexDirection:'row', justifyContent:'center', width:'100%'}}><Text>{date}</Text></View>:undefined}\n          <View key={content.id} style={{flexDirection:'row', justifyContent:isSelf?'space-between':'flex-start', width:'100%'}}>\n            {isFirst && !isSelf?<MaterialIcons size={38} style={{marginBottom: -3, marginRight:10 }} name='account-circle'/>:<View style={{width:48}}/>}\n            <CommonSection outerContainerStyle={{width:undefined, maxWidth:'90%'}} title={isFirst?content.name:undefined} titleStyle={{flex:undefined}} bodyStyle={{padding:10}} subtitle={`${created.slice(11)}`}>\n              {/* @ts-ignore */}\n              <Hyperlink linkDefault={ true } style={{wordBreak:\"break-word\"}} linkStyle={{color: '#12b886'}}>\n                <Text>{content.message_set[0].content}</Text>\n              </Hyperlink>\n              {content.link_set.map((link, linkIndex)=><LinkPreview key={linkIndex} link={link} isMobile={isMobile}/>)}\n            </CommonSection>\n          </View>\n        </View>\n      })}\n    </View>\n  }, [navigation, contentMutation])\n  \n  const back = ()=>{\n    if(navigation.canGoBack())\n        navigation.goBack()\n      else{\n        navigation.navigate('HomeScreen', {tab:2})\n      }\n  }\n  useEffect(()=>{\n    if (!(channel_id))\n      back()\n  }, [])\n  useEffect(()=>{\n    if(autoFocus){\n      (inputRef.current as any).focus()\n      setAutoFocus(false)\n    }\n  }, [autoFocus])\n\n  return <View style={{flex:1, alignItems:'center'}}>\n        <FlatList\n          style={{width:'100%', flexDirection: 'column-reverse'}}\n          contentContainerStyle={{padding:10, flexGrow:1, flexDirection: 'column-reverse'}}\n          data={data?.pages}\n          renderItem={renderItem}\n          onScroll={(e)=>{\n            if (e.nativeEvent.contentOffset.y + e.nativeEvent.contentSize.height - height.current < 1)\n              fetchNextPage()\n          }}\n          onLayout={(p)=>{height.current = p.nativeEvent.layout.height}}\n        />\n      <View style={{width:'100%'}}>\n        <VideoCallSection channel_id={channel_id} videoMode={videoMode}/>\n        <View style={{bottom:0, width:'100%', backgroundColor:'white', alignItems:'center'}}>\n          <View style={{width:'100%',flexDirection:'row', paddingTop:15, paddingBottom:10, paddingHorizontal:19}}>\n            <TextInput ref={inputRef} value={value} onChangeText={setValue} style={{flex:1, borderWidth:1, height:40, borderRadius:6, borderColor:Colors.borderColor}} onSubmitEditing={postValue} blurOnSubmit={true}/>\n            <CommonButton title={'💬'} onPress={postValue}/>\n            <CommonButton title={'📹'} onPress={()=>toggleVideoMode('camera')}/>\n            <CommonButton title={'🖥️'} onPress={()=>toggleVideoMode('display')}/>\n          </View>\n        </View>\n      </View>\n  </View>\n}\n// outerContainerStyle={{alignContent:'flex-end'}} containerStyle={{width:'50%'}}\n","import React, {useCallback, useRef} from 'react';\nimport { StackScreenProps } from '@react-navigation/stack';\nimport { StyleSheet, Text, Button, View} from 'react-native';\n\n\nexport default function TabOneScreen({\n  navigation\n}: StackScreenProps<any, 'TabOne'>) {\n  return <View style={{padding:10}}>\n    \n  </View>\n}\n\nconst styles = StyleSheet.create({\n  Panel_Button_Text: {\n    textAlign: 'center',\n    color: '#fff',\n    fontSize: 21\n  },\n  Panel_Holder: {\n    borderWidth: 1,\n    borderColor: '#888',\n    marginVertical: 5\n  }\n})","import React, { useMemo } from 'react';\n\nimport { View, Text, TextProps, StyleProp } from 'react-native';\nimport useResizeWindow from '../hooks/useResizeWindow';\n\ntype Props = {\n  name: string,\n  width?:number,\n  children: React.ReactNode\n  textStyle?: StyleProp<TextProps>\n}\n\nexport default function RowField(props:Props) {\n  const windowType = useResizeWindow()\n  const rowStyle = useMemo(()=>windowType=='landscape'?\n    {flexDirection:'row', alignItems: 'center', justifyContent:'space-between'}:\n    {flexDirection:'column', alignItems:'flex-start'} as any\n  , [windowType])\n  return (\n    <View style={[{paddingVertical:5, width:'100%'}, rowStyle]}>\n        <Text style={[windowType=='landscape'?{flex:1}:{width:'100%'},{paddingHorizontal: 15, fontSize:16}, props.textStyle]}>{props.name}</Text>\n        <View style={[windowType=='landscape'?{flex:6}:{width:'100%'},{paddingHorizontal: 15}]}>\n          <View style={{width:props.width}}>\n            {props.children}\n          </View>\n        </View>\n    </View>\n  )\n}","import React, { useEffect, useState } from 'react';\n\nimport { View, Text, StyleProp, ViewStyle, TextStyle } from 'react-native';\n\nimport { TextInput } from 'react-native-gesture-handler';\nimport RowField from './RowField';\n\ntype Props = {\n  name: string,\n  value: any,\n  setValue?: (value:any)=>void\n  width?:any\n  disabled?:boolean\n  multiline?:boolean\n  minHeight?:number\n  textStyle?:StyleProp<TextStyle>\n  style?:StyleProp<ViewStyle>\n}\n\nexport default function TextField(props:Props) {\n  const [contentHeight, setContentHeight] = useState<number>()\n  const minHeight = props.minHeight || 30\n  return (\n    <RowField name={props.name} width={props.width} textStyle={props.textStyle}>\n      <TextInput style={[{\n          borderColor:'#d0d7de', \n          fontSize:16, \n          borderWidth:1, \n          borderRadius:6, \n          paddingHorizontal:10, \n          paddingVertical:3, \n          backgroundColor:props.disabled?'#EEE':undefined,\n          height:props.multiline?contentHeight:minHeight,\n        }, props.style]} editable={!props.disabled} value={props.value} onChangeText={props.setValue}\n        onContentSizeChange={props.multiline?(e) => setContentHeight(Math.max(e.nativeEvent.contentSize.height, minHeight) + 2):undefined} \n        multiline={props.multiline}\n      ></TextInput>\n   </RowField>\n  )\n}","import React, {useState, useEffect } from 'react';\nimport { StackScreenProps } from '@react-navigation/stack';\nimport { StyleSheet } from 'react-native';\nimport CommonSection from '../components/CommonSection';\nimport { View, Text } from '../components/Themed';\nimport CommonButton from '../components/CommonButton';\n// import useBoardChannelList, { useBoardChannelMutation } from '../hooks/lists/useBoardChannelList';\nimport useAuthContext from '../hooks/useAuthContext';\nimport { navigate } from '../navigation';\nimport { Channel } from '../types';\nimport useMessengerChannelList, { useMessengerChannelMutation } from '../hooks/lists/useMessengerChannelList';\nimport TextField from '../components/TextField';\n\n\nexport default function ChannelEditScreen({navigation, route}: StackScreenProps<any, 'ChannelEdit'>) {\n  const id = route?.params?.id\n  const type = route?.params?.type\n  const {auth} = useAuthContext()\n  const channelList = useMessengerChannelList(auth)\n  const channelMutation = useMessengerChannelMutation()\n  const channel = channelList?.find(v=>v.id==id)\n  const [name, setName] = useState('')\n  const [description, setDescription] = useState('')\n  const back = ()=>{\n    if(navigation.canGoBack())\n        navigation.goBack()\n      else{\n        navigation.replace('Main')\n      }\n  }\n  useEffect(()=>{\n    if (channel){\n      setName(channel.name)\n      setDescription(channel?.description || '')\n    }\n  }, [channel])\n  return <CommonSection outerContainerStyle={{alignSelf:'center'}}>\n    <View style={{justifyContent:'space-around'}}>\n    <Text style={{fontSize:20}}>Edit Channel - {type}</Text>\n    </View>\n    <View style={styles.separator} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />\n    <View style={{width:'100%'}}>\n      <TextField name='Channel Name' value={name} setValue={setName} width={'60%'}/>\n      <TextField name='Description' value={description} setValue={setDescription} multiline width={'60%'}/>\n    </View>\n    <View style={{width:'100%', flexDirection:'row', justifyContent:'flex-end'}}>\n      <CommonButton title={'save'} onPress={()=>{\n        if(auth?.user?.id && auth.groupId){\n          const newChannel:Channel = {id, name, description, type, owner:auth?.user?.id, group:auth.groupId};\n          (id?channelMutation.update(newChannel):channelMutation.create(newChannel)).then(v=>navigate(\"Main\", {\n            screen:v.type == 'messenger'?'MessengerScreen':'BoardScreen',\n            params:{id:v.id}\n          }))\n        }\n      }}/>\n      <CommonButton title={'cancel'} style={{marginHorizontal:5}} onPress={back}/>\n    </View>\n  </CommonSection>\n}\n\nconst styles = StyleSheet.create({\n  field:{\n    width:'50%',\n    flexDirection:'row',\n    padding:10,\n  },\n  separator: {\n    marginBottom: 20,\n    height: 1,\n    width: '100%',\n  },\n})","import React, {useRef,MutableRefObject, useMemo, useState } from 'react';\nimport { StackScreenProps } from '@react-navigation/stack';\nimport { View, Text } from '../components/Themed';\nimport CommonSection from '../components/CommonSection';\nimport useAuthContext from '../hooks/useAuthContext';\nimport useUserMembershipList from '../hooks/lists/useUserMembershipList';\nimport { UserMembership } from '../types';\nimport CommonButton from '../components/CommonButton';\nimport useMessengerMemberList, { useMessengerMemberMutation } from '../hooks/lists/useMessengerMemberList';\nimport { renderMemberItem } from '../tabs/MemberTab';\nimport { navigate } from '../navigation';\n\n\nconst InviteItem = (props:{item:UserMembership, selectedRef:MutableRefObject<Set<number>>})=>{\n  const [selected, setSelected] = useState(props.selectedRef.current.has(props.item.id))\n  return <View style={selected?{borderWidth:1, borderColor:'blue'}:{}}>\n    {renderMemberItem(props.item, (item)=>{\n      if (selected){\n        setSelected(false)\n        props.selectedRef.current.delete(item.id)\n      }\n      else{\n        setSelected(true)\n        props.selectedRef.current.add(item.id)\n      }\n    })}\n  </View>\n\n}\n\nexport default function InviteScreen({navigation, route}: StackScreenProps<any, 'Invite'>) {\n  const id = route?.params?.id\n  const {auth} = useAuthContext()\n  const userList = useUserMembershipList(auth)\n  const memberList = useMessengerMemberList(id)\n  const messengerMemberMutation = useMessengerMemberMutation()\n  const selectedRef = useRef<Set<number>>(new Set())\n  const data = useMemo(()=>{\n    const memberSet = new Set(memberList?.map(v=>v.user))\n    return userList?.filter(v=>!memberSet.has(v.id))\n  }, [userList, memberList])\n\n\n  const back = ()=>{\n    if(navigation.canGoBack())\n      navigation.goBack()\n    else if (id)\n      navigate(\"ChatScreen\", {id})\n    else\n      navigation.replace('Main')\n  }\n\n  return <CommonSection outerContainerStyle={{alignSelf:'center'}}>\n    {data?.map((item, index)=><InviteItem key={index} item={item} selectedRef={selectedRef}/>)}\n    <View style={[{width:'50%', flexDirection:'row', padding:10,}, {justifyContent:'flex-end'}]}>\n      <CommonButton title={'save'} onPress={()=>{\n        messengerMemberMutation.invite({\n          channel_id:id,\n          user_ids:[...selectedRef.current]\n        })\n        back()\n      }}/>\n      <CommonButton title={'cancel'} onPress={back}/>\n    </View>\n  </CommonSection>\n}\n\n","import LoginScreen from \"./main/LoginScreen\";\nimport ChatScreen from \"./main/ChatScreen\";\nimport HomeScreen from \"./main/HomeScreen\";\nimport TabOneScreen from \"./main/TabOneScreen\";\n// import BoardScreen from \"../lib/blacktokki-board/BoardScreen\";\n// import BoardEditScreen from \"../lib/blacktokki-board/BoardEditScreen\";\nimport ChannelEditScreen from \"./ChannelEditScreen\"\nimport { Screens } from \"../types\";\nimport InviteScreen from \"./InviteScreen\";\nimport ProfileScreen from \"./ProfileScreen\";\n\nexport const main = {\n    HomeScreen:{\n        title:'home',\n        component:HomeScreen,\n        path:'home',\n    },\n    ChatScreen:{\n        title:'chat',\n        component:ChatScreen,\n        path:'chat'\n    },\n    // BoardScreen:{\n    //     title:'board',\n    //     component:BoardScreen,\n    //     path:'board'\n    // },\n    TabOneScreen:{\n        title:'tab one',\n        component:TabOneScreen,\n        path:'one'\n    },\n} as Screens\n\nexport const login = {\n    LoginScreen:{\n        path: 'login',\n        title: '로그인',\n        component:LoginScreen\n    },\n} as Screens\n\nexport const modal = {\n    // BoardEditScreen:{\n    //     title:'board',\n    //     component:BoardEditScreen,\n    //     path:'modal/board'\n    // },\n    ChannelEditScreen:{\n        title:'channel',\n        component:ChannelEditScreen,\n        path:'modal/channel'\n    },\n    InviteScreen:{\n        title:'invite',\n        component:InviteScreen,\n        path:'modal/invite'\n    },\n    ProfileScreen:{\n        title:'profile',\n        component:ProfileScreen,\n        path:'modal/profile'\n    }\n} as Screens","import React, {useLayoutEffect} from 'react';\nimport { StackScreenProps } from '@react-navigation/stack';\nimport { StyleSheet, Text, Button, View} from 'react-native';\nimport { Text as StyledText } from 'react-native-paper';\nimport {TabViewNavigator} from '../../navigation/DrawerNavigator';\nimport useResizeWindow from '../../hooks/useResizeWindow';\nimport { bottomTabs } from '../../tabs';\nimport { navigate } from '../../navigation';\nimport HeaderRight from '../../components/HeaderRight';\nimport TextButton from '../../components/TextButton';\nimport Colors from '../../constants/Colors';\n\n// navigate(\"BoardEditScreen\", {channel_id:item.channel, id:item.id})\n// deleteBoardContent(item.id).then(()=>navigate('BoardScreen', {id:item.channel}))\n\nexport default function HomeScreen({navigation, route}: StackScreenProps<any, 'Home'>) {\n  const windowType = useResizeWindow();\n\n  const options = [\n    {title:'member', headerRight:()=><HeaderRight/>},\n    {title:'messenger', headerRight:()=><HeaderRight extra={[{title:'create', onPress:()=>navigate(\"ChannelEditScreen\", {type:\"messenger\"})}]}/>},\n    // {title:'board', headerRight:()=><HeaderRight extra={[{title:'create', onPress:()=>navigate(\"ChannelEditScreen\", {type:\"board\"})}]}/>},\n    {title:'config', headerRight:()=><HeaderRight/>}\n  ]\n  \n  useLayoutEffect(() => {\n    const index = route?.params?.tab | 0\n    navigation.setOptions(windowType == 'portrait'?options[index]:{\n      title: 'home',\n      headerRight: ()=><HeaderRight/>\n    });\n  }, [navigation, route, windowType]);\n  return windowType == 'landscape'?\n    <View style={{flex:1, justifyContent:'center', alignItems:'center'}}>\n      <View style={{width:'80%', height:'80%'}}>\n        <StyledText style={{fontSize:32}}>Tokki Tok</StyledText>\n        <View style={{backgroundColor:Colors.borderColor, height:1, width:'100%'}}/>\n        <View style={{flex:1, alignItems:'flex-start'}}>\n          <Text style={{fontSize:20, color:'gray'}}>Welcome! This is a messenger for teams.</Text>\n          <Text style={{fontSize:24}}> </Text>\n          <Text style={{fontSize:24, fontWeight:'500'}}>Quick Start</Text>\n          <TextButton title='+ New Messenger' textStyle={{fontSize:20}} style={{paddingLeft:0, borderRadius:20}} onPress={()=>navigate(\"ChannelEditScreen\", {type:\"messenger\"})}/>\n          {/* <TextButton title='+ New Board' textStyle={{fontSize:20}} style={{paddingLeft:0, borderRadius:20}} onPress={()=>navigate(\"ChannelEditScreen\", {type:\"board\"})}/> */}\n        </View>\n      </View>\n    </View>:\n    <TabViewNavigator tabs={bottomTabs} tabBarPosition=\"bottom\" index={parseInt(route.params?.['tab'] || 0)} onTab={(index)=>{navigation.setParams({tab:index})}}/>\n}\n\n","import React, {useCallback, useEffect, useRef} from 'react';\nimport { StackScreenProps } from '@react-navigation/stack';\nimport { StyleSheet, Text, Button, View} from 'react-native';\nimport Profile from '../components/Profile';\nimport useAuthContext from '../hooks/useAuthContext';\nimport useUserMembershipList from '../hooks/lists/useUserMembershipList';\nimport { useMessengerChannelMutation } from '../hooks/lists/useMessengerChannelList';\nimport CommonButton from '../components/CommonButton';\nimport { Channel } from '../types';\nimport { navigate } from '../navigation';\n\n\nexport default function ProfileScreen({\n  navigation, route\n}: StackScreenProps<any, 'Profile'>) {\n  const id = route?.params?.id\n  const {auth} = useAuthContext()\n  const userList = useUserMembershipList(auth)\n  const user = userList?.find(v=>v.id==id)\n  const channelMutation = useMessengerChannelMutation()\n  const back = ()=>{\n    if(navigation.canGoBack())\n        navigation.goBack()\n      else{\n        navigation.replace('Main')\n      }\n  }\n  useEffect(()=>{\n    if (!(id && user) && userList)\n      back()\n  }, [userList])\n  return user?<View style={{padding:10}}>\n    \n    <Profile username={user?.username} name={user?.name} />\n    <CommonButton title={'create messenger'} onPress={()=>{\n      if(auth?.user?.id && auth.groupId){\n        const newChannel:Channel = {name:`${auth.user.name}, ${user.name}`, type:'messenger', owner:auth?.user?.id, group:auth.groupId};\n        channelMutation.create(newChannel).then(v=>navigate(\"Main\", {screen:\"MessengerScreen\", params: {id:v.id}}))\n      }\n    }}/>\n  </View>:<></>\n}\n","import React, { Context, createContext,  useContext, useEffect, useState } from \"react\"\nimport useWebSocket from \"react-use-websocket\"\nimport { SendJsonMessage } from \"react-use-websocket/dist/lib/types\"\n// @ts-ignore\nimport {API_URL} from \"@env\"\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { AppState, AppStateStatus } from \"react-native\";\n\ntype WebsocketContextType = {lastJsonMessage:any, sendJsonMessage:SendJsonMessage }\nconst WebSocketContext = createContext<WebsocketContextType>({lastJsonMessage:undefined, sendJsonMessage:()=>{}});\nconst [SCHEMA, DOMAIN] = `${API_URL}`.split('://')\n\nexport const WebSocketInternalProvider = ({children, path, Context, useBackground}:{children:React.ReactNode, path:string, Context:Context<WebsocketContextType>, useBackground?:boolean})=>{\n  const [token, setToken] = useState<string|null>(null)\n  const [isActive, setIsActive] = useState<boolean>(useBackground || AppState.currentState == 'active')\n  const { lastJsonMessage, sendJsonMessage } = useWebSocket(`${SCHEMA=='https'?'wss':'ws'}://${DOMAIN}/${path}`,{\n    shouldReconnect: (closeEvent) => true,\n    protocols: token?['Authorization',  token]:undefined,\n    onOpen: (e)=>{console.log(`success websocket connection(${path})`)},\n    onClose: (e)=> {console.log(`closed websocket connection(${path})`)},\n  }, isActive && token!=null)\n  useEffect(()=>{\n    AsyncStorage.getItem('Authorization').then(setToken)\n    const onChange = (nextState:AppStateStatus)=>setIsActive(useBackground || nextState == 'active')\n    AppState.addEventListener(\"change\", onChange)\n    return ()=>AppState.removeEventListener(\"change\", onChange)\n  }, [])\n  return (token==null)?<>{children}</>:<Context.Provider value={{lastJsonMessage, sendJsonMessage}}>\n      {children}\n    </Context.Provider>\n}\n\nexport const WebSocketProvider = React.memo(({disable, children}:{disable?:boolean, children:React.ReactNode})=>{\n  return disable?<>{children}</>:<WebSocketInternalProvider path={'messenger/ws/'} Context={WebSocketContext}>\n    {children}\n  </WebSocketInternalProvider>\n})\n\nexport default ()=>{\n  const webSocketContext = useContext(WebSocketContext)\n  return webSocketContext\n}\n\n","import React, { useState } from 'react';\nimport { StyleSheet} from 'react-native';\nimport { CustomButtonProps } from '../types';\nimport CommonButton from './CommonButton';\n\nexport default (props:CustomButtonProps)=>{\n    return <CommonButton {...props} style={[styles.style, props.style]}/>\n}\n\nconst styles = StyleSheet.create({\n    style:{\n        borderRadius:6, \n        backgroundColor: 'transparent',\n        borderWidth:0\n    },\n});\n","import { Platform } from 'react-native';\n//@ts-ignore\nimport useMobileDetect from 'use-mobile-detect-hook';\n\nexport default ()=>{\n    const detectMobile = useMobileDetect();\n    return (detectMobile.isMobile() || Platform.OS == 'android' || Platform.OS == 'ios') as boolean\n}","import * as React from 'react';\nimport { View } from './Themed';\nimport { StyleSheet, StyleProp, ViewStyle, TextStyle, Pressable } from 'react-native';\nimport Colors from '../constants/Colors';\n\nexport type ItemParamList = {\n    outerContainerStyle?:StyleProp<TextStyle>\n    containerStyle?:StyleProp<ViewStyle>\n    bodyStyle?:StyleProp<ViewStyle>\n    children?: React.ReactNode\n    onPress?: ()=>void\n}\n\nexport default function CommonItem(props:ItemParamList){\n  const [hover, setHover] = React.useState(false)\n  const [press, setPress] = React.useState(false)\n  return (\n    <Pressable\n      style={[styles.outerContainer ,props.outerContainerStyle, (press)?{backgroundColor:'rgb(242,242,242)'}:{}]}\n      onPressIn={()=>{setPress(true)}}\n      onPressOut={()=>{setPress(false);props.onPress?.()}}\n       //@ts-ignore\n       onHoverIn={()=>setHover(true)}\n       onHoverOut={()=>setHover(false)}\n    >\n        <View style={[styles.container ,props.containerStyle]}>\n            <View style={[styles.bodyView, props.bodyStyle]}>\n                <>{props.children}</>\n            </View>\n      </View>\n    </Pressable>\n    )\n}\n\nconst styles = StyleSheet.create({\n  outerContainer:{\n    width:'100%',\n    maxWidth:1080,\n    alignItems:'stretch',\n  },  \n  container: {\n      marginHorizontal:20,\n      backgroundColor:'transparent'\n    },\n    bodyView:{\n      width: '100%',\n      padding: 10,\n      minHeight: 40,\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderBottomWidth:1,\n      borderColor:Colors.borderColor,\n      backgroundColor:'transparent'\n    }\n  });\n  ","import { useQuery } from \"react-query\";\nimport { getUserMembershipList } from \"../../apis\";\nimport { Auth } from \"../useAuthContext\";\n\nexport default function useUserMembershipList(auth?:Auth){\n  const { data } = useQuery([\"UserMembershipList\", auth?.groupId] , async()=>auth?.groupId?(await getUserMembershipList(auth?.groupId)):[])\n  return data\n}","import React from \"react\"\nimport { View, Text } from \"react-native\"\nimport CommonItem from \"../components/CommonItem\"\n// import useBoardChannelList from \"../lib/blacktokki-board/useBoardChannelList\"\nimport useMessengerChannelList from \"../hooks/lists/useMessengerChannelList\"\nimport useAuthContext from \"../hooks/useAuthContext\"\nimport { navigate } from \"../navigation\"\n\nconst DrawerTab = (props:{data:{name:string, onPress?:()=>void}[]})=><View style={{flex:1, backgroundColor:'white'}}>\n    {props.data.map((item, index)=><CommonItem key={index} containerStyle={{marginHorizontal:0}} bodyStyle={{alignItems:'flex-start'}} onPress={item.onPress}>\n        <Text style={{marginLeft:20}}>{item.name}</Text>\n    </CommonItem>\n    )}\n</View>\n\nexport default {\n    Messenger:()=>{\n        const {auth} = useAuthContext()\n        const channelList = useMessengerChannelList(auth);\n        return <DrawerTab data={(channelList || []).map(item=>({...item, onPress:()=>navigate(\"ChatScreen\", {id:item.id})}))}/>\n    },\n    // Board:()=>{\n    //     const {auth} = useAuthContext()\n    //     const channelList = useBoardChannelList(auth);\n    //     return <DrawerTab data={(channelList || []).map(item=>({...item, onPress:()=>navigate(\"BoardScreen\", {id:item.id})}))}/>\n    // },\n}","import { Ionicons, FontAwesome } from \"@expo/vector-icons\"\nimport React from \"react\"\nimport { Text, View } from \"react-native\"\nimport CommonItem from \"../components/CommonItem\"\nimport useAuthContext from \"../hooks/useAuthContext\"\nimport useMessengerChannelList from \"../hooks/lists/useMessengerChannelList\"\nimport { navigate } from \"../navigation\"\n\nexport default ()=>{\n    const {auth} = useAuthContext()\n    const channelList = useMessengerChannelList(auth)\n    const today = (new Date()).toISOString().slice(0, 10)\n    return <View style={{flex:1, backgroundColor:'white'}}>\n        {channelList?.map((item, index)=>{\n            const date = item.last_message?.created.slice(0,10)\n            return <CommonItem key={index} bodyStyle={{flexDirection:'row', justifyContent:'space-between'}} onPress={()=>navigate(\"ChatScreen\", {id:item.id})}>\n                <View style={{flexDirection:'row'}}>\n                    <FontAwesome size={36} style={{ marginBottom: -3, marginRight:20 }} name='users'/>\n                    <View>\n                        <View style={{flexDirection:'row'}}>\n                            <Text style={{fontSize:18}}>{item.name}</Text>\n                            <Text style={{fontSize:18, opacity: 0.4, paddingLeft:5}}>{item.member_count}</Text>\n                        </View>\n                        <Text style={{fontSize:16, opacity: 0.4}}>{item.last_message?.content}</Text>\n                    </View>\n                </View>\n                <View>\n                    <Text style={{fontSize:14, opacity: 0.4, textAlign:'right'}}>{date==today?item.last_message?.created.slice(11,16):date}</Text>\n                    <Text style={{fontSize:14, textAlign:'right'}}>{item.unread_count?item.unread_count:' '}</Text>\n                </View>\n            </CommonItem>\n        })}\n    </View>\n}\n\nexport const MessengerIcon = <Ionicons size={30} style={{ marginBottom: -3 }} name='chatbox'/>","import React from \"react\";\nimport MemberTab, {MemberIcon} from \"./MemberTab\";\nimport OneTab, {ConfigIcon} from \"./OneTab\";\nimport DrawerTab  from './DrawerTab';\nimport MessengerTab, {MessengerIcon} from \"./MessengerTab\";\n// import BoardTab, {BoardIcon}  from \"../lib/blacktokki-board/BoardTab\";\n\nexport const bottomTabs = {\n    OneTab:{\n        title:'member',\n        component:MemberTab,\n        icon:MemberIcon,\n    },\n    TwoTab:{\n        title:'messenger',\n        component:MessengerTab,\n        icon:MessengerIcon\n    },\n    // ThreeTab:{\n    //     title:'board',\n    //     component:BoardTab,\n    //     icon:BoardIcon\n    // },\n    // FourTab:{\n    //     title:'config',\n    //     component:OneTab,\n    //     icon:ConfigIcon\n    // }\n} as Record<string, {title:string, component:React.ComponentType<any>, icon:JSX.Element}>\n\nexport const drawerTabs = {\n    TwoTab:{\n        title:'messenger',\n        component:DrawerTab.Messenger,\n        icon:MessengerIcon\n    },\n    // ThreeTab:{\n    //     title:'board',\n    //     component:DrawerTab.Board,\n    //     icon:BoardIcon\n    // }\n} as Record<string, {title:string, component:React.ComponentType<any>, icon:JSX.Element}>","import { MaterialCommunityIcons, MaterialIcons } from \"@expo/vector-icons\"\nimport React from \"react\"\nimport { Text, View } from \"react-native\"\nimport CommonItem from \"../components/CommonItem\"\nimport useAuthContext from \"../hooks/useAuthContext\"\nimport useUserMembershipList from \"../hooks/lists/useUserMembershipList\"\nimport { UserMembership } from \"../types\"\nimport { navigate } from \"../navigation\"\n\nexport const renderMemberItem = (item:UserMembership, onPress?:(item:UserMembership)=>void)=> (\n    <CommonItem key={item.id} bodyStyle={{flexDirection:'row', justifyContent:'flex-start'}} onPress={onPress?()=>onPress(item):undefined}>\n        <MaterialIcons size={38} style={{ marginBottom: -3, marginRight:10 }} name='account-circle'/>\n        <Text style={{fontSize:20, fontWeight:'400'}}>{item.name}</Text>\n    </CommonItem>\n)\n\nexport default ()=>{\n    const {auth} = useAuthContext()\n    const userList = useUserMembershipList(auth)\n    return <View style={{flex:1, backgroundColor:'white'}}>\n        {userList && userList.map(item=>renderMemberItem(item, (item)=>navigate(\"ProfileScreen\", {id:item.id})))}\n    </View>\n}\n\nexport const MemberIcon = <MaterialCommunityIcons size={32} style={{ marginBottom: -3 }} name='account'/>","import { ColorSchemeName, useColorScheme as _useColorScheme } from 'react-native';\n\n// The useColorScheme value is always either light or dark, but the built-in\n// type suggests that it can be null. This will not happen in practice, so this\n// makes it a bit easier to work with.\nexport default function useColorScheme(): NonNullable<ColorSchemeName> {\n  return _useColorScheme() as NonNullable<ColorSchemeName>;\n}\n","import { useTheme } from '@react-navigation/native';\nimport React, { useState } from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { TabView, SceneMap,NavigationState, SceneRendererProps, TabBar } from 'react-native-tab-view';\nimport { navigate } from '.';\nimport Profile from '../components/Profile';\nimport TextButton from '../components/TextButton';\nimport Colors from '../constants/Colors';\nimport useResizeWindow from '../hooks/useResizeWindow';\nimport { drawerTabs } from '../tabs';\nimport { UserMembership } from '../types';\n\nexport const TabViewNavigator = (props:{tabs:typeof drawerTabs, tabBarPosition:\"top\"|\"bottom\", index?:number, onTab?:(index:number)=>void})=>{\n  const [index, setIndex] = React.useState(props.index || 0);\n  const entries = Object.entries(props.tabs)\n  const onTab = props.onTab\n  const icons = Object.assign({}, ...entries.map(([k, v])=>({[k]:v.icon})))\n  return <TabView\n    renderTabBar={(props:SceneRendererProps & {navigationState: NavigationState<any>})=>{\n      return <TabBar\n        {...props}\n        indicatorStyle={{ backgroundColor: \"#2196F3\" }}\n        style={{ backgroundColor:'white' }}\n        activeColor={'black'}\n        inactiveColor={'black'}\n        renderIcon={(scene)=>icons[scene.route.key]}\n        onTabPress={(scene)=>onTab?.(entries.findIndex(([k, v])=>k == scene.route.key))}\n      />\n    }}\n    navigationState={{ index, routes: entries.map(([k, v])=>({key:k, title:v.title}))}}\n    onIndexChange={setIndex}\n    renderScene={SceneMap(Object.assign({}, ...entries.map(([k, v])=>({[k]:v.component}))))}\n    tabBarPosition={props.tabBarPosition}\n  />\n}\n\nconst onAddList = [\n  ()=>navigate(\"ChannelEditScreen\", {type:\"messenger\"}),\n  ()=>navigate(\"ChannelEditScreen\", {type:\"board\"})\n]\n\nexport default ({user}:{user:UserMembership})=> {\n  const { colors } = useTheme();\n  const windowType = useResizeWindow();\n  const [index, setIndex] = useState(0);\n  return windowType=='landscape'?<View\n      style={[\n        styles.tabBar,\n        {\n          backgroundColor: colors.card,\n          borderTopColor: colors.border,\n        },\n        // tabBarStyle,\n      ]}\n      pointerEvents={false ? 'none' : 'auto'}\n    >\n      <Profile username={user.username} name={user.name}/>\n      <View style={{flexDirection:'row-reverse'}}>\n          <TextButton title='+' textStyle={{fontSize:20}} style={{borderRadius:20}} onPress={onAddList[index]}/>\n      </View>\n      <View accessibilityRole=\"tablist\" style={styles.content}>\n        {Object.keys(drawerTabs).length>1 ? \n          <TabViewNavigator tabs={drawerTabs} tabBarPosition={\"top\"} onTab={setIndex}/>: \n          <View style={{borderTopWidth:1, flex:1, borderColor:colors.border}}>            \n            {Object.values(drawerTabs).map(drawerTab=>{const Tab = drawerTab.component; return <Tab key={drawerTab.title}/>})}\n          </View>\n        }\n      </View>\n    </View>:<View style={{width:0}}></View>\n}\n\n{/*<Text style={[styles.label, { color: d.isFocused ? colors.primary : '#222' }]}></Text> */}\n\nconst styles = StyleSheet.create({\n    tabBar: {\n      width:240,\n      elevation: 8,\n      borderRightWidth:1,\n      borderColor:Colors.borderColor\n    },\n    content: {\n      flex: 1,\n      flexDirection: 'row',\n    },\n    tab: {\n        flex: 1,\n        alignItems: 'center',\n    },\n    label: {\n        textAlign: 'center',\n        backgroundColor: 'transparent',\n      },\n  });","import * as React from 'react';\nimport {View, Text} from 'react-native';\nimport { Avatar } from 'react-native-paper';\nimport Colors from '../../constants/Colors';\nimport { ProfileProps } from '../../types';\n\nexport default (props:ProfileProps) => (\n    <View style={{width:'100%', height:135, justifyContent:'space-evenly', alignItems:'center'}}>\n        <Avatar.Text style={{backgroundColor:Colors.header}} size={75} label={props.name.split(' ').map(v=>v[0]).join().toUpperCase()} />\n        <Text style={{fontWeight:'bold', fontSize:15}}>{props.name}</Text>\n        <Text style={{fontWeight:'normal', fontSize:14}}>{props.username}</Text>\n    </View>\n);","import React from 'react';\nimport {View} from 'react-native'\nimport Profile from '../lib/react-native-paper/Profile';\nimport { ProfileProps } from '../types';\n\nexport default (props:ProfileProps)=>{\n    return <View style={{width:'100%', height:135}}>\n        <Profile {...props}/>\n    </View>\n}\n\n","/**\n * Learn more about deep linking with React Navigation\n * https://reactnavigation.org/docs/deep-linking\n * https://reactnavigation.org/docs/configuring-links\n */\n\nimport { LinkingOptions } from '@react-navigation/native';\nimport * as Linking from 'expo-linking';\nimport {main, login, modal} from '../screens';\n\nconst ROOTPATH = 'tokki-tok'  // github repository name\n\nObject.values(modal).forEach(v=>v.path = ROOTPATH + '/' + v.path)\n\nexport default  {\n  prefixes: [Linking.makeUrl('/')],\n  config: {\n    screens: {\n      Main: {\n        screens:{\n          ...main,\n          ...login,\n          NotFound: '*',\n        },\n        path: ROOTPATH\n      },\n      ...modal\n    },\n  },\n} as LinkingOptions;\n","import { StackScreenProps } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\n\nexport default function NotFoundScreen({\n  navigation,\n}: StackScreenProps<any, 'NotFound'>) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>This screen doesn't exist.</Text>\n      <TouchableOpacity onPress={() => navigation.replace('HomeScreen')} style={styles.link}>\n        <Text style={styles.linkText}>Go to home screen!</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  link: {\n    marginTop: 15,\n    paddingVertical: 15,\n  },\n  linkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n});\n","import { Notification } from '../types';\nimport axios from './axios';\n\nexport const getNotification = async (user_id:number)=>{\n    const data = (await axios.get(`/api/v1/notifications/?type=WEB&user=${user_id}`) ).data as Notification[]\n    return data.length?data[0]:undefined\n}\n\nexport const postNotification = async(notification:Notification)=>{\n    return (await axios.post(`/api/v1/notifications/`, notification)).data as Notification\n}\n\nexport const putNotification = async(notification:Notification)=>{\n    return (await axios.put(`/api/v1/notifications/${notification.id}/`, notification)).data as Notification\n}","import React, { createContext, useContext, useEffect, useMemo, useRef, useState } from \"react\"\nimport firebase from \"firebase/app\";\nimport \"firebase/messaging\";\n//@ts-ignore\nimport {FCM_PUBLIC_VAPID_KEY, FCM_API_KEY} from \"@env\"\nimport { Notification as NotificationType, UserMembership } from \"../types\";\nimport { getNotification, postNotification, putNotification } from \"../apis/notification\";\nconst firebaseConfig = require(\"../../web/firebase-config.js\")\n// Initialize Firebase\nconst key = firebaseConfig.messagingSenderId\nconst apiKeyEncrypted = (FCM_API_KEY as string).split('').map((v, i)=> (v.charCodeAt(0) ^ key.charCodeAt(i)).toString(16).padStart(2, '0')).join('')\nconst app = firebase.initializeApp({...firebaseConfig, apiKey:FCM_API_KEY});\n// const analytics = getAnalytics(app);\nconst messaging = firebase.messaging(app);\n\nmessaging.onMessage((payload) => {\n  if (!(\"Notification\" in window)) {\n    alert(\"This browser does not support desktop notification\");\n  }\n  else if (Notification.permission === \"granted\") {\n    const message_set = JSON.parse(payload.data['message_set'])[0]\n    new Notification(payload.data.channel_name, { body: `${payload.data.name}: ${message_set.content}` });\n  }\n});\n\nconst FirebaseContext = createContext<{enable:boolean, setEnable:(enable:boolean)=>void}>({enable:false, setEnable:()=>{}});\n\nconst requestToken = async()=>{\n  const permission = await Notification.requestPermission();\n  if (permission === 'granted') {\n    const serviceWorkerRegistration = await navigator.serviceWorker.register(`${process.env.PUBLIC_URL}/firebase-messaging-sw.js?${apiKeyEncrypted}`)\n    console.log('[SW]: SCOPE: ', serviceWorkerRegistration.scope);\n    const currentToken = await messaging.getToken({serviceWorkerRegistration, vapidKey: FCM_PUBLIC_VAPID_KEY })\n    if (currentToken)\n      return currentToken\n  }\n  return undefined\n}\n\nexport const FirebaseProvider = ({children, user}:{user?:UserMembership|null, children:React.ReactNode})=>{\n  const tokenRef = useRef<string>()\n  const [notification, setNotification] = useState<NotificationType>()\n  const enable = useMemo(()=>!(notification?.token), [notification])\n  const setEnable = (enable:boolean)=>{\n    if(user && notification){\n      putNotification({...notification, token:enable||tokenRef.current==undefined?null:tokenRef.current}).then((noti)=>{\n        setNotification(noti)\n      })\n    }\n  }\n  \n  useEffect(()=>{\n    let isMount = true;\n    if(user){\n      requestToken().then((t)=>{\n        tokenRef.current = t\n        getNotification(user.id).then(noti=>{\n          const setNotificationInternal = (n:NotificationType)=>{\n            if (isMount)setNotification(n)\n          }\n          const token = t==undefined?null:t\n          if (noti == undefined)\n            postNotification({user:user.id, type:'WEB', token}).then(setNotificationInternal)\n          else\n            putNotification({...noti, token}).then(setNotificationInternal)\n        })\n      })\n    }\n    return ()=>{isMount=false}\n  },[])\n  return !user?<>{children}</>:<FirebaseContext.Provider value={{enable, setEnable}}>\n    {children}\n  </FirebaseContext.Provider>\n}\n\nexport default ()=>{\n  const firebaseContext = useContext(FirebaseContext)\n  return firebaseContext\n}\n","import React, { useEffect, useState } from 'react'\nimport { Dimensions, Platform, View } from 'react-native'\nimport useIsMobile from '../hooks/useIsMobile'\n\ntype ViewProps = {windowType:'landscape'|'portrait', children:React.ReactNode}\n\nexport default (props:ViewProps)=>{\n    const isMobile = useIsMobile()\n    const [height, setHeight] = useState(window.innerHeight + 1)\n    useEffect(()=>{\n        if(isMobile && Platform.OS == 'web'){\n            const onChange = (e:any)=>{\n                setHeight(window.innerHeight + 1)\n            }\n            Dimensions.addEventListener(\"change\",onChange)\n            return () => Dimensions.removeEventListener(\"change\", onChange)\n            \n        }\n    },[ isMobile])\n    return <View style={{height:isMobile&&Platform.OS == 'web'?height:'100%'}}>\n        {props.children}\n    </View>\n\n}\n  ","import { CardStyleInterpolators, createStackNavigator } from '@react-navigation/stack';\nimport React, {useMemo} from 'react';\nimport { View } from 'react-native';\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { Ionicons } from '@expo/vector-icons';\nimport useResizeWindow from '../hooks/useResizeWindow';\nimport NotFoundScreen from '../screens/NotFoundScreen';\nimport {main, login, modal} from '../screens';\nimport DrawerNavigator from './DrawerNavigator';\nimport useAuthContext, {AuthProvider} from '../hooks/useAuthContext';\nimport { WebSocketProvider } from '../hooks/useWebsocketContext';\nimport HeaderRight from '../components/HeaderRight'\nimport Colors from '../constants/Colors';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { FirebaseProvider } from '../hooks/useFirebaseContext';\nimport useIsMobile from '../hooks/useIsMobile';\nimport MobileSafeAreaView from '../components/MobileSafeAreaView';\n\nconst Root = createStackNavigator();\n\nconst queryClient = new QueryClient();\n\nexport default function RootNavigator() {\n    const windowType = useResizeWindow();\n    return (\n        <MobileSafeAreaView windowType={windowType}>\n            <AuthProvider>\n                <QueryClientProvider client={queryClient}>\n                    {/* devtools */}\n                    {/* <ReactQueryDevtools initialIsOpen={true} /> */}\n                        <Root.Navigator\n                            mode= 'modal'\n                            headerMode= 'screen'\n                            screenOptions={{\n                                cardStyle:{backgroundColor:\"white\"},\n                                animationEnabled: true,\n                                cardStyleInterpolator: CardStyleInterpolators.forVerticalIOS,\n                            }}\n                        >\n                            <Root.Screen name=\"Main\" component={MainNavigator} options={{headerShown:false}}/>\n                            {Object.entries(modal).map(([key, screen])=><Root.Screen key={key} name={key} component={screen.component} options={{\n                                title: screen.title,\n                                gestureDirection: windowType == 'landscape'?'vertical-inverted':'vertical'\n                            }} />)}\n                        </Root.Navigator>\n                </QueryClientProvider>\n            </AuthProvider>\n        </MobileSafeAreaView>\n    );\n}\n\nconst Main = createStackNavigator();\n\nfunction headerLeft(navigation:any, route:any, windowType:string, isMobile:boolean){\n    const canGOBackScreen = ['HomeScreen', 'LoginScreen'].findIndex(v=>v == route.name) == -1\n    const goBack = ()=>{\n        if (navigation.canGoBack())\n            navigation.goBack()\n        else if (canGOBackScreen)\n            navigation.replace('HomeScreen')\n    }\n    if (windowType=='portrait' && canGOBackScreen)\n        return <TouchableOpacity onPress={goBack}><Ionicons size={isMobile?20:24} style={{marginHorizontal:isMobile?16:20 }} name=\"arrow-back\"/></TouchableOpacity>\n    return null\n}\n\nfunction MainNavigator(){\n    const windowType = useResizeWindow();\n    const isMobile = useIsMobile()\n    const {auth} = useAuthContext()\n    const entries = useMemo(()=>{\n        if (auth.user === undefined)\n            return []\n        console.log('current user: ', auth.user)\n        return Object.entries(auth.user === null?login:main)\n    }, [auth])\n    return (auth.user!==undefined?<View style={{flexDirection:'row', flex:1}}>\n        {auth.user?<DrawerNavigator user={auth.user}/>:undefined}\n        <View style={{flex:1}}>\n            <FirebaseProvider user={auth.user}>\n                <WebSocketProvider disable={auth.user === null || auth.user === undefined}>\n                    <Main.Navigator\n                        screenOptions={({navigation, route})=>({\n                            headerStyle:{backgroundColor:Colors.header, height:isMobile?50:undefined},\n                            headerTitleStyle:{color:'white'},\n                            headerLeft:()=>headerLeft(navigation, route, windowType, isMobile),\n                            headerRight:()=><HeaderRight/>,\n                            headerLeftContainerStyle:{backgroundColor:'white', borderBottomWidth:1, borderColor:Colors.borderColor},\n                            cardStyle:{flexShrink:1},\n                            animationEnabled:windowType=='portrait',\n                            cardStyleInterpolator: CardStyleInterpolators.forHorizontalIOS\n                        })}\n                    >\n                        {entries.map(([key, screen])=><Main.Screen key={key} name={key} component={screen.component} options={{ title: screen.title }} />)}\n                        <Main.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n                    </Main.Navigator>\n                </WebSocketProvider>\n            </FirebaseProvider>\n        </View>\n    </View>:<></>);\n}","import React from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport Navigation from './src/navigation';\nimport useColorScheme from './src/hooks/useColorScheme';\nimport useCachedResources from './src/hooks/useCachedResources';\n\nexport default function App() {\n  const isLoadingComplete = useCachedResources();\n  const colorScheme = useColorScheme();\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return (\n      <SafeAreaProvider>\n        <Navigation colorScheme={colorScheme} />\n        <StatusBar />\n      </SafeAreaProvider>\n    );\n  }\n}\n","import { Ionicons } from '@expo/vector-icons';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as React from 'react';\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...Ionicons.font,\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete;\n}\n","import axios, { AxiosRequestConfig } from 'axios';\n// @ts-ignore\nimport {API_URL} from \"@env\"\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nconst baseURL =  `${API_URL}/messenger/`\nconst defaultOption:AxiosRequestConfig = {\n    baseURL,\n    withCredentials: true,\n    headers: {}\n};\nconst _axios = axios.create(defaultOption);\n\n_axios.interceptors.request.use(\n    config => {\n        return config;\n    },\n    error => {\n        return Promise.reject(error);\n    }\n)\n\n_axios.interceptors.response.use(\n    response => {\n        // if((response.request.responseURL as string).indexOf('/task/login')>=0 && response.data.length != 0){\n        //     // redirect login\n        // }\n        return response;\n    },\n    error => {\n        if (error.response.status === 401) {\n            getToken().then(async(token)=>{\n                const r = await _axios.post(\"/api-token-refresh/\", {token}, {headers:{'Authorization':''}})\n                if (r.status == 200 && r.data !== ''){\n                    setToken(r.data)\n                }\n            })\n        }\n        return Promise.reject(error)\n    }\n)\n\nexport const setToken = async (token:string|null)=>{\n    _axios.defaults.headers['Authorization'] = `JWT ${token}`\n    if (token)\n        await AsyncStorage.setItem(\"Authorization\", token)\n    else\n        AsyncStorage.removeItem(\"Authorization\")\n}\nexport const getToken = async ()=>{\n    const token = await AsyncStorage.getItem(\"Authorization\")\n    _axios.defaults.headers['Authorization'] = `JWT ${token}`\n    return token\n}\n\nexport default _axios\n","/**\n * Learn more about Light and Dark modes:\n * https://docs.expo.io/guides/color-schemes/\n */\n\nimport * as React from 'react';\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\n\nimport Colors from '../constants/Colors'\nimport useColorScheme from '../hooks/useColorScheme';\n\nexport function useThemeColor(\n  props: { light?: string; dark?: string },\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\n) {\n  const theme = useColorScheme();\n  const colorFromProps = props[theme];\n\n  if (colorFromProps) {\n    return colorFromProps;\n  } else {\n    return Colors[theme][colorName];\n  }\n}\n\ntype ThemeProps = {\n  lightColor?: string;\n  darkColor?: string;\n};\n\nexport type TextProps = ThemeProps & DefaultText['props'];\nexport type ViewProps = ThemeProps & DefaultView['props'];\n\nexport function Text(props: TextProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\n\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\n}\n\nexport function View(props: ViewProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\n\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\n}\n","import React, { createContext, useContext, useEffect, useReducer, useMemo, Dispatch } from \"react\"\nimport { checkLogin, login, logout } from \"../apis\"\nimport { UserMembership } from \"../types\"\n\ntype AuthAction = {type:string, username?:string, password?:string, user?:UserMembership|null}\n\nexport type Auth = {user?:UserMembership|null, groupId?:number}\n\ntype AuthState ={user?:UserMembership|null, request?:{username:string, password:string}|null}\n\nconst AuthContext = createContext<{auth:Auth, dispatch:Dispatch<AuthAction>}>({auth:{}, dispatch:()=>{}});\n\nconst authReducer =(initialState:AuthState, action:AuthAction)=>{\n  switch (action.type){\n      case 'LOGIN_REQUEST':\n        return {\n          ...initialState,\n          request:{username:action.username, password:action.password},\n        } as AuthState\n      case 'LOGIN_GUEST':\n        return {\n          ...initialState,\n          request:{username:'guest', password:'guest'},\n        } as AuthState\n      case 'LOGIN_SUCCESS':\n          return{\n              ...initialState,\n              user:action.user,\n              request:undefined\n          }\n      case 'LOGIN_FAILED':\n          return{\n              ...initialState,\n              request:undefined\n          }\n      case 'LOGOUT_REQUEST':\n          return{\n              ...initialState,\n              request:null\n          }\n      case 'LOGOUT_SUCCESS':\n          return {\n            ...initialState,\n            user:null,\n            request:undefined\n          }\n      default:\n          throw new Error( `Unhandled action type: ${action.type}`)\n  }\n}\n\n\nexport const AuthProvider = ({children}:{children:React.ReactNode})=>{\n  const [authState, dispatch] = useReducer(authReducer, {} as Auth)\n  const auth = useMemo(()=>({\n    user:authState.user,\n    groupId: authState.user?.membership_set.find(g=>g.root_group_id==null)?.group\n  }), [authState])\n  useEffect(()=>{\n    if(authState.user===undefined){\n      checkLogin().then((user)=>{\n        dispatch({type:\"LOGIN_SUCCESS\", user})\n      }).catch((e)=>{\n        console.log(e)\n        dispatch({type:\"LOGOUT_SUCCESS\"})\n      })\n    }\n    else if(authState.user===null && authState.request){\n      login(authState.request.username, authState.request.password).then(user=>{\n        dispatch({type:\"LOGIN_SUCCESS\", user})\n      }).catch(()=>{\n        dispatch({type:\"LOGIN_FAILED\"})\n      })\n    }\n    else if(authState.user && authState.request===null){\n      logout().then(()=>dispatch({type:\"LOGOUT_SUCCESS\"}))\n    }\n  }, [authState])\n  return <AuthContext.Provider value={{auth, dispatch}}>\n    {children}\n  </AuthContext.Provider>\n}\n\nexport default ()=>{\n  const authContext = useContext(AuthContext)\n  return authContext\n}\n","/**\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\n * https://reactnavigation.org/docs/getting-started\n *\n */\nimport _ from 'lodash';\nimport { NavigationContainer, DefaultTheme, DarkTheme, NavigationContainerRef } from '@react-navigation/native';\nimport * as React from 'react';\nimport { ColorSchemeName } from 'react-native';\n\nimport LinkingConfiguration from './LinkingConfiguration';\nimport RootNavigator from './RootNavigator';\n\nconst navigationRef = React.createRef<NavigationContainerRef>();\n\nexport function navigate(name:string, params?:any) {\n  if (params)\n    navigationRef.current?.navigate(name, params);\n  navigationRef.current?.navigate(name);\n}\n\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\n  return (\n    <NavigationContainer\n      ref={navigationRef}\n      documentTitle={{formatter: (options, route) => {return `TOKKI TOK`}}}\n      linking={(process.versions && process.versions['electron'])?undefined:LinkingConfiguration}\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n\n(function(l) {  // for github-page\n    if (l !== undefined && l.search[1] === '/' ) {\n        var decoded = l.search.slice(1).split('&').map(function(s) { \n        return s.replace(/~and~/g, '&')\n        }).join('?');\n        window.history.replaceState(null, '',\n            l.pathname.slice(0, -1) + decoded + l.hash\n        );\n    }\n}(window.location))\n    \nconst ignoreWarnings = ['ReactNativeFiberHostComponent'];\nconst _console = _.clone(console);\nconsole.warn = (message: string|Object) => {\n    var warn = true;\n    if (message instanceof Object)\n    warn = false;\n    else{\n    ignoreWarnings.forEach((value)=>{\n        if (message.indexOf && message.indexOf(value) <= -1) {\n            warn = false;\n        }\n    })\n    };\n    if (warn){\n        _console.warn(message);\n    }\n    else{\n        // console.log(message)\n    }\n};\n","firebaseConfig = {\n    \"authDomain\": \"virtual-metrics-355712.firebaseapp.com\",\n    \"projectId\": \"virtual-metrics-355712\",\n    \"storageBucket\": \"virtual-metrics-355712.appspot.com\",\n    \"messagingSenderId\": \"76003576924\",\n    \"appId\": \"1:76003576924:web:c8c8a006d07918bbc02a99\",\n    \"measurementId\": \"G-SEL35L4N5R\"\n}\nif (typeof module !== 'undefined') {\n    module.exports = firebaseConfig\n}\n","const tintColorLight = '#2f95dc';\nconst tintColorDark = '#fff';\n\nexport default {\n  light: {\n    text: '#000',\n    background: '#fff',\n    tint: tintColorLight,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorLight,\n  },\n  dark: {\n    text: '#fff',\n    background: '#000',\n    tint: tintColorDark,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorDark,\n  },\n  button:{\n    color:'rgb(242,242,242)',\n    borderColor:'rgba(27,31,36,0.15)',\n    backgroundColor:'#f6f8fa', //'rgba(9,30,66,0.08)',//rgb(242,242,242)\n  },\n  borderColor:'#d0d7de',\n  header:'#24292f',\n  focus:'#0065A4',\n};\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","\nimport { User, UserMembership } from '../types';\nimport axios, { getToken, setToken } from './axios';\n\nexport const login = async(username:string, password:string) => {\n    if(username.endsWith('.guest') && password.length == 0)\n        password = 'guest'\n    const r = await axios.post(\"/api-token-auth/\", {username, password});\n    if(r.status == 200){\n        await setToken(r.data)\n        return await checkLogin()\n    }\n}\n\nexport const logout = async() => {\n    await setToken(null)\n    return await axios.get(\"/api-auth/logout/\")\n}\n\nexport const guestLogin =  async() => {\n    return await login('guest', 'guest')\n}\n\nconst checkLoginToken = async ()=>{\n    const value = (await axios.get(\"/api/v1/users/memberships/?_self=true\"))?.data\n    if (value && value.length){\n        return value[0] as UserMembership\n    }\n    return null\n}\n\nexport const checkLogin = async() => {\n    const token = await getToken()\n    if (token === null)\n        return null\n    try{\n       return await checkLoginToken()\n    }\n    catch(e:any){\n        let error = e\n        if(e.response !== undefined && e.response.status==401){\n            try{\n                return await checkLoginToken()\n            }\n            catch(e2){\n                error = e2\n            }\n        }\n        const isOffline = ((error as any).code == \"ERR_NETWORK\" || (error as any).message && ((error as any).message as string).startsWith(\"Cannot read\"))\n        throw {error, isOffline}\n    }\n}\n\nexport const getUserList = async (group_id:number)=>{\n    return (await axios.get(`/api/v1/users/?group_id=${group_id}`) ).data as User[]\n}\n\nexport const getUserMembershipList = async (group_id:number)=>{\n    return (await axios.get(`/api/v1/users/memberships/?group_id=${group_id}`) ).data as UserMembership[]\n}\n\n// export const getGroup = async (user:User)=>{\n//     return (await) axios.get(``)\n// }\n\n","import { Channel, MessengerMember, MessengerContent, EditMessage, MessengerChannel } from '../types';\nimport axios from './axios';\n\nexport const getMessengerChannelList = async (user_id:number)=>{\n    return (await axios.get(`/api/v1/channels/messenger/?type=messenger&messenger_user_id=${user_id}`) ).data as MessengerChannel[]\n}\n\nexport const postChannel = async(channel:Channel)=>{\n    return (await axios.post(`/api/v1/channels/`, channel)).data as Channel\n}\n\nexport const putChannel = async(channel:Channel)=>{\n    return (await axios.put(`/api/v1/channels/${channel.id}/`, channel)).data as Channel\n}\n\nexport const deleteChannel = async(channel_id:number)=>{\n    await axios.delete(`/api/v1/channels/${channel_id}/`)\n}\n\nexport const getMessengerMemberList = async(channel_id:number)=>{\n    return (await axios.get(`/api/v1/messengermembers/?channel=${channel_id}`) ).data as MessengerMember[]\n}\n\nexport const postBulkMessengerMember = async(data:{channel_id:number, user_ids:number[]})=>{\n    await axios.post(`/api/v1/messengermembers/bulk/`, {channel:data.channel_id, user_ids:data.user_ids})\n}\n\nexport const deleteMessengerMember = async(member_id:number)=>{\n    await axios.delete(`/api/v1/messengermembers/${member_id}/`)\n}\n\nexport const getMessengerContentList = async (channel_id:number, id_lt?:number)=>{\n    const id_lt_param = id_lt?`&id_lt=${id_lt}`:''\n    return (await axios.get(`/api/v1/messengercontents/?limit=30&channel=${channel_id}${id_lt_param}`)).data.results as MessengerContent[]\n}\n\nexport const postMessage = async (message:EditMessage)=>{\n    await axios.post(`/api/v1/messengercontents/messages/`, message)\n}\n\nexport const deleteMessengerContent = async (content_id:number)=>{\n    await axios.delete(`/api/v1/messengercontents/${content_id}/`)\n}","import React, { useState } from 'react';\nimport { Text, StyleSheet, Pressable, StyleProp, ViewStyle} from 'react-native';\nimport Colors from '../constants/Colors';\nimport { CustomButtonProps } from '../types';\n\nconst DefaultButton = (props:CustomButtonProps)=>{\n    const [hover, setHover] = useState(false)\n    return <Pressable\n        onPress={()=>props.onPress()}\n        //@ts-ignore\n        onHoverIn={()=>setHover(true)}\n        onHoverOut={()=>setHover(false)}\n        style={[\n            {\n                paddingVertical:5, \n                paddingHorizontal:16\n            },\n            props.style,\n            hover?{backgroundColor:props.color}:{}\n        ]}>\n            <Text selectable={false} style={[{fontSize:14}, props.textStyle]}>{props.title}</Text>\n        </Pressable>\n}\n\nexport default (props:CustomButtonProps)=>{\n    const _props = {\n        color:Colors.button.color,\n        ...props,\n        style:[\n            styles.style,\n            props.style,\n        ] as StyleProp<ViewStyle>,\n        textStyle:[\n            styles.text, props.textStyle\n        ]\n    }\n    return <DefaultButton {..._props}/>\n}\n\nconst styles = StyleSheet.create({\n    style:{\n        borderRadius:6, \n        borderColor:Colors.button.borderColor, \n        borderWidth:1, \n        backgroundColor:Colors.button.backgroundColor\n    },\n    text:{\n        color:'black', \n        textAlign:'center', \n        fontWeight:'600'\n    }\n});\n","import { useState, useEffect } from 'react';\nimport { Dimensions, Keyboard } from 'react-native';\n//@ts-ignore\nimport useMobileDetect from 'use-mobile-detect-hook';\n\ntype WindowType = 'portrait' | 'landscape'\n\nexport default function useResizeWindow() {\n  const detectMobile = useMobileDetect();\n  const [window, setWindow] = useState(Dimensions.get('window'));\n  const onChange = () => setWindow(Dimensions.get('window'))\n\n  useEffect(() => {\n    Dimensions.addEventListener(\"change\", onChange);\n    return () => {\n      Dimensions.removeEventListener(\"change\", onChange);\n    };\n  });\n  if (detectMobile.isMobile())\n    return 'portrait'\n  return window.height >= window.width?'portrait':'landscape' as WindowType;\n}","import { useEffect } from \"react\";\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport { getMessengerChannelList, postChannel, putChannel } from \"../../apis\";\nimport { MessengerChannel } from \"../../types\";\nimport { Auth } from \"../useAuthContext\";\nimport useWebsocketContext from \"../useWebsocketContext\";\n\nexport default function useMessengerChannelList(auth?:Auth){\n  const queryClient = useQueryClient()\n  const {lastJsonMessage} = useWebsocketContext()\n  const { data } = useQuery(\"MessengerChannelList\" , async()=>auth?.user?.id?(await getMessengerChannelList(auth.user.id)):[])\n\n  useEffect(()=>{\n    if(lastJsonMessage !=null){\n      if(lastJsonMessage['type']=='enter'){\n        queryClient.setQueryData<MessengerChannel[]>(\"MessengerChannelList\", (_data)=>{\n          return (_data?.find(v=>v.id==lastJsonMessage['data']['id'])?_data:[lastJsonMessage['data'] , ...(_data|| [])]).sort((a, b)=>a.id - b.id)\n        })\n      }\n      // if(lastJsonMessage['type']=='leave'){\n      //   queryClient.setQueryData<Channel[]>(\"MessengerChannelList\", (_data)=>_data?.filter(v=>v.id!=lastJsonMessage['data']['channel_id']) || [])\n      // }\n    }\n  }, [lastJsonMessage])\n  return data\n}\n\nexport function useMessengerChannelMutation(){\n  const queryClient = useQueryClient()\n\n  const create = useMutation(postChannel, {\n    onSuccess: ()=>queryClient.invalidateQueries(\"MessengerChannelList\")\n  });\n\n  const update = useMutation(putChannel, {\n    onSuccess: () => queryClient.invalidateQueries(\"MessengerChannelList\")\n  })\n\n\n  return { create:create.mutateAsync, update:update.mutateAsync}\n}"],"sourceRoot":""}