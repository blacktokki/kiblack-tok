{"version":3,"sources":["src/apis/notification.ts","src/lang/index.ts","src/hooks/useAuthContext.tsx","src/hooks/useLangContext.tsx","src/hooks/useColorScheme.ts","src/lib/@expo/vector-icons.tsx","src/hooks/useIsMobile.ts","src/components/MobileSafeAreaView.tsx","App.tsx","src/hooks/useCachedResources.ts","src/assets/fonts/SpaceMono-Regular.ttf","src/constants/Envs.ts","src/apis/account.ts","src/apis/messenger.ts","src/apis/axios.ts"],"names":["getNotification","user_id","data","_regeneratorRuntime","async","_context","prev","next","awrap","axios","get","sent","abrupt","length","undefined","stop","Promise","postNotification","notification","_context2","post","putNotification","_context3","put","id","translations","ko","require","_ref","_RNLocalize$findBestL","RNLocalize","Object","keys","languageTag","isRTL","I18nManager","forceRTL","intl","createIntl","defaultLocale","locale","messages","createIntlCache","AuthContext","createContext","auth","dispatch","authReducer","initialState","action","type","_objectSpread","request","username","password","user","Error","AuthProvider","children","_useReducer","useReducer","_useReducer2","_slicedToArray","authState","_useState","useState","_useState2","error","setError","useMemo","_authState$user","_authState$user$membe","groupId","membership_set","find","g","root_group_id","group","useEffect","checkLogin","then","catch","e","console","log","login","_data$response","_data$response$data","response","message","noti","token","logout","React","createElement","Provider","value","useContext","IntlContext","setLocale","IntlProvider","complete","setComplete","_useState3","_useState4","AsyncStorage","getItem","v","Fragment","_useContext","lang","key","params","formatMessage","defaultMessage","toString","setItem","useInitColorScheme","Appearance","set","colorScheme","setColorScheme","useColorScheme","dark","useTheme","lazyIcon","Icon","lazy","module","default","props","Suspense","fallback","AntDesign","Ionicons","FontAwesome","MaterialIcons","FontAwesome5","Entypo","SimpleLineIcons","MaterialCommunityIcons","useMobileDetect","isMobile","Platform","OS","useIsMobile","window","innerHeight","height","setHeight","onChange","Dimensions","addEventListener","removeEventListener","View","style","queryClient","QueryClient","App","isLoadingComplete","_React$useState","_React$useState2","setLoadingComplete","SplashScreen","Font","font","t0","warn","finish","useCachedResources","isAppearenceComplete","Navigation","SafeAreaProvider","MobileSafeAreaView","QueryClientProvider","client","StatusBar","exports","accountURL","baseURL","_split","split","_split2","websockerURL","FCM_PUBLIC_VAPID_KEY","FCM_API_KEY","TURN_SERVER","r","endsWith","status","setToken","guestLogin","checkLoginToken","_await$axios$get","_context4","t1","isOffline","_context5","getToken","code","startsWith","getUserList","group_id","_context6","patchUser","_context7","patch","ids","updated","name","getUserMembershipList","_context8","getExternalMembershipList","_context9","getMessengerChannelList","postChannel","channel","postDirectChannel","putChannel","deleteChannel","channel_id","delete","getMessengerMemberList","resolve","postBulkMessengerMember","user_ids","deleteMessengerMember","member_id","getMessengerContentList","id_lt","id_lt_param","results","getTimerMessageContentList","timer_gt","_context10","postMessage","formData","_context11","file","FormData","append","entries","forEach","headers","defaults","patchMessengerContent","content","_context12","deleteMessengerContent","content_id","_context13","defaultOption","withCredentials","_axios","create","interceptors","use","config","reject","finally","removeItem"],"mappings":"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","file":"static/js/app.8e2ece27.chunk.js","sourcesContent":["import { Notification } from '../types';\r\nimport axios from './axios';\r\n\r\nexport const getNotification = async (user_id:number)=>{\r\n    const data = (await axios.get(`/api/v1/notifications/?type=WEB&user=${user_id}`) ).data as Notification[]\r\n    return data.length?data[0]:undefined\r\n}\r\n\r\nexport const postNotification = async(notification:Notification)=>{\r\n    return (await axios.post(`/api/v1/notifications/`, notification)).data as Notification\r\n}\r\n\r\nexport const putNotification = async(notification:Notification)=>{\r\n    return (await axios.put(`/api/v1/notifications/${notification.id}/`, notification)).data as Notification\r\n}","import { createIntl, createIntlCache } from \"@formatjs/intl\";\r\nimport {I18nManager} from \"react-native\";\r\nimport * as RNLocalize from \"react-native-localize\";\r\n\r\nexport const translations = {\r\n  ko: require(\"./ko.json\"),\r\n} as const;\r\n\r\ntype Translation = keyof typeof translations;\r\n\r\n// fallback if no available language fits\r\nconst fallback = { languageTag: \"en\", isRTL: false };\r\n\r\nconst { languageTag, isRTL } =\r\n  RNLocalize.findBestLanguageTag(Object.keys(translations)) ?? fallback;\r\n\r\n// update layout direction\r\nI18nManager.forceRTL(isRTL);\r\n\r\n// console.log(languageTag)\r\nconst intl = createIntl(\r\n  {\r\n    defaultLocale: \"en\",\r\n    locale: languageTag,\r\n    messages: translations[languageTag as Translation],\r\n  },\r\n  createIntlCache(),\r\n);\r\n\r\nexport default intl","import React, { createContext, useContext, useEffect, useReducer, useMemo, Dispatch, useState } from \"react\"\r\nimport { checkLogin, login, logout } from \"../apis\"\r\nimport { getNotification, putNotification } from \"../apis/notification\"\r\nimport { UserMembership } from \"../types\"\r\n\r\ntype AuthAction = {type:string, username?:string, password?:string, user?:UserMembership|null}\r\n\r\nexport type Auth = {user?:UserMembership|null, groupId?:number}\r\n\r\ntype AuthState ={user?:UserMembership|null, request?:{username:string, password:string}|null}\r\n\r\nconst AuthContext = createContext<{auth:Auth, error?:string, dispatch:Dispatch<AuthAction>}>({auth:{}, dispatch:()=>{}});\r\n\r\nconst authReducer =(initialState:AuthState, action:AuthAction)=>{\r\n  switch (action.type){\r\n      case 'LOGIN_REQUEST':\r\n        return {\r\n          ...initialState,\r\n          request:{username:action.username, password:action.password},\r\n        } as AuthState\r\n      case 'LOGIN_GUEST':\r\n        return {\r\n          ...initialState,\r\n          request:{username:'guest', password:'guest'},\r\n        } as AuthState\r\n      case 'LOGIN_SUCCESS':\r\n          return{\r\n              ...initialState,\r\n              user:action.user,\r\n              request:undefined\r\n          }\r\n      case 'LOGIN_FAILED':\r\n          return{\r\n              ...initialState,\r\n              request:undefined\r\n          }\r\n      case 'LOGOUT_REQUEST':\r\n          return{\r\n              ...initialState,\r\n              request:null\r\n          }\r\n      case 'LOGOUT_SUCCESS':\r\n          return {\r\n            ...initialState,\r\n            user:null,\r\n            request:undefined\r\n          }\r\n      case 'REFRESH':\r\n        return {\r\n          ...initialState,\r\n          user:undefined\r\n        }\r\n      default:\r\n          throw new Error( `Unhandled action type: ${action.type}`)\r\n  }\r\n}\r\n\r\n\r\nexport const AuthProvider = ({children}:{children:React.ReactNode})=>{\r\n  const [authState, dispatch] = useReducer(authReducer, {} as Auth)\r\n  const [error, setError] = useState<string>()\r\n  const auth = useMemo(()=>({\r\n    user:authState.user,\r\n    groupId: authState.user?.membership_set.find(g=>g.root_group_id==null)?.group\r\n  }), [authState])\r\n  useEffect(()=>{\r\n    if(authState.user===undefined){\r\n      checkLogin().then((user)=>{\r\n        dispatch({type:\"LOGIN_SUCCESS\", user})\r\n      }).catch((e)=>{\r\n        console.log(e)\r\n        dispatch({type:\"LOGOUT_SUCCESS\"})\r\n      })\r\n    }\r\n    else if(authState.user===null && authState.request){\r\n      login(authState.request.username, authState.request.password).then(user=>{\r\n        dispatch({type:\"LOGIN_SUCCESS\", user})\r\n      }).catch((data)=>{\r\n        dispatch({type:\"LOGIN_FAILED\"})\r\n        setError(data.response?.data?.message)\r\n      })\r\n    }\r\n    else if(authState.user && authState.request===null){\r\n      getNotification(authState.user.id).then(noti=>{\r\n        noti && putNotification({...noti, token:''}).then(()=>{\r\n          logout().then(()=>dispatch({type:\"LOGOUT_SUCCESS\"}))\r\n        })\r\n      })\r\n    }\r\n  }, [authState])\r\n  return <AuthContext.Provider value={{auth, error, dispatch}}>\r\n    {children}\r\n  </AuthContext.Provider>\r\n}\r\n\r\nexport default ()=>{\r\n  const authContext = useContext(AuthContext)\r\n  return authContext\r\n}\r\n","import React, { createContext, useContext, useState, useEffect } from \"react\";\r\nimport { IntlShape } from \"@formatjs/intl\";\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport intl, { translations } from \"../lang\";\r\n\r\nconst IntlContext = createContext<{locale?:string, setLocale:(locale:string|undefined)=>void}>({locale:'auto', setLocale:()=>{}});\r\n\r\nexport const IntlProvider = ({children}:{children:React.ReactNode})=>{\r\n  const [complete, setComplete] = useState(false)\r\n  const [locale, setLocale] = useState<string>()\r\n  useEffect(()=>{\r\n    AsyncStorage.getItem(\"locale\").then(v=>{\r\n      setLocale(v || 'auto')\r\n      setComplete(true)\r\n    })\r\n  }, [])\r\n  return complete?<IntlContext.Provider value={{locale, setLocale}}>\r\n      {children}\r\n    </IntlContext.Provider>:<></>\r\n}\r\n\r\n\r\n\r\ntype TranslationParams = Parameters<IntlShape<string>[\"formatMessage\"]>[1];\r\n\r\nexport default ()=>{\r\n  const { locale, setLocale } = useContext(IntlContext)\r\n  return {\r\n    lang:(key: string, params?: TranslationParams) => {\r\n      if (locale == 'en' || key.length==0)\r\n        return key\r\n      if (locale != undefined && locale !='auto')\r\n        return translations[locale as 'ko'][key]\r\n      return intl\r\n        .formatMessage({ id: key, defaultMessage: key }, params)\r\n        .toString()\r\n    },\r\n    locale,\r\n    setLocale: (locale:string)=>{AsyncStorage.setItem('locale', locale).then(()=>setLocale(locale))}\r\n  }\r\n}\r\n","import AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { useTheme } from '@react-navigation/native';\r\nimport { useMemo, useEffect, useState } from 'react';\r\nimport { ColorSchemeName } from 'react-native';\r\nimport { Appearance, ColorSchemeName as UserColorSchemeName } from 'react-native-appearance';\r\n\r\n// The useColorScheme value is always either light or dark, but the built-in\r\n// type suggests that it can be null. This will not happen in practice, so this\r\n// makes it a bit easier to work with.\r\n\r\nexport function useInitColorScheme(){\r\n  const [complete, setComplete] = useState(false)\r\n  useEffect(()=>{\r\n    if (!complete){\r\n      AsyncStorage.getItem(\"color\").then(v=>{\r\n        Appearance.set({colorScheme:(v==null)?'no-preference':(v as any)})\r\n        setComplete(true)\r\n      })\r\n    }\r\n  }, [complete])\r\n  return complete\r\n}\r\n\r\nexport function setColorScheme(colorScheme:UserColorSchemeName){\r\n  AsyncStorage.setItem('color',colorScheme as string).then(()=>Appearance.set({colorScheme}))\r\n}\r\n\r\nexport default function useColorScheme(): NonNullable<ColorSchemeName> {\r\n  const { dark } = useTheme()\r\n  const colorScheme = useMemo(()=> dark?'dark':'light', [dark]) as NonNullable<ColorSchemeName>;\r\n  return colorScheme\r\n}\r\n","\r\n\r\n\r\n\r\nimport React, { Suspense } from \"react\";\r\n\r\nconst lazyIcon = <T extends keyof typeof import(\"@expo/vector-icons\"),>(key:T)=>{\r\n    const Icon = React.lazy(\r\n        () => import(\"@expo/vector-icons\").then(module => {\r\n            return { default: module[key] }\r\n        })\r\n    ) as typeof import(\"@expo/vector-icons\")[T]\r\n    return (props:React.ComponentProps<typeof Icon>)=>{\r\n        return <Suspense fallback={<></>}>\r\n            <Icon {...props}/>\r\n        </Suspense>\r\n    }\r\n}\r\n\r\nexport const AntDesign = lazyIcon('AntDesign');\r\nexport const Ionicons = lazyIcon('Ionicons');\r\nexport const FontAwesome = lazyIcon('FontAwesome');\r\nexport const MaterialIcons = lazyIcon('MaterialIcons');\r\nexport const FontAwesome5 = lazyIcon('FontAwesome5');\r\nexport const Entypo = lazyIcon('Entypo');\r\nexport const SimpleLineIcons = lazyIcon('SimpleLineIcons');\r\nexport const MaterialCommunityIcons = lazyIcon('MaterialCommunityIcons');","import { Platform } from 'react-native';\r\n//@ts-ignore\r\nimport useMobileDetect from 'use-mobile-detect-hook';\r\n\r\nexport default ()=>{\r\n    const detectMobile = useMobileDetect();\r\n    return (detectMobile.isMobile() || Platform.OS == 'android' || Platform.OS == 'ios') as boolean\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Dimensions, Platform, View } from 'react-native'\r\nimport useIsMobile from '../hooks/useIsMobile'\r\n\r\n\r\nexport default (props:{children:React.ReactNode})=>{\r\n    const isMobile = useIsMobile()\r\n    const [height, setHeight] = useState(window.innerHeight + 1)\r\n    useEffect(()=>{\r\n        if(isMobile && Platform.OS == 'web'){\r\n            const onChange = (e:any)=>{\r\n                setHeight(window.innerHeight + 1)\r\n            }\r\n            Dimensions.addEventListener(\"change\",onChange)\r\n            return () => Dimensions.removeEventListener(\"change\", onChange)\r\n            \r\n        }\r\n    },[ isMobile])\r\n    return <View style={{height:isMobile&&Platform.OS == 'web'?height:'100%'}}>\r\n        {props.children}\r\n    </View>\r\n\r\n}\r\n  ","import React, { Suspense } from 'react';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\r\nimport useCachedResources from './src/hooks/useCachedResources';\r\nimport { useInitColorScheme } from './src/hooks/useColorScheme';\r\nimport MobileSafeAreaView from './src/components/MobileSafeAreaView';\r\nimport { AuthProvider } from './src/hooks/useAuthContext';\r\nimport { QueryClient, QueryClientProvider } from 'react-query';\r\nimport { IntlProvider } from './src/hooks/useLangContext';\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nexport default function App() {\r\n  const isLoadingComplete = useCachedResources();\r\n  const isAppearenceComplete = useInitColorScheme()\r\n  const Navigation = React.lazy(()=> import('./src/navigation'))\r\n  if (!isLoadingComplete || !isAppearenceComplete) {\r\n    return null;\r\n  } else {\r\n    return (\r\n      <SafeAreaProvider>\r\n        <MobileSafeAreaView>\r\n          <AuthProvider>\r\n            <QueryClientProvider client={queryClient}>\r\n              <IntlProvider>\r\n                {/* devtools */}\r\n                {/* <ReactQueryDevtools initialIsOpen={true} /> */}\r\n                <Suspense fallback={<></>}>\r\n                  <Navigation/>\r\n                </Suspense>\r\n                <StatusBar />\r\n              </IntlProvider>\r\n            </QueryClientProvider>\r\n          </AuthProvider>\r\n        </MobileSafeAreaView>\r\n      </SafeAreaProvider>\r\n    );\r\n  }\r\n}\r\n","import { Ionicons } from '../lib/@expo/vector-icons';\r\nimport * as Font from 'expo-font';\r\nimport * as SplashScreen from 'expo-splash-screen';\r\nimport * as React from 'react';\r\n\r\nexport default function useCachedResources() {\r\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\r\n\r\n  // Load any resources or data that we need prior to rendering the app\r\n  React.useEffect(() => {\r\n    async function loadResourcesAndDataAsync() {\r\n      try {\r\n        SplashScreen.preventAutoHideAsync();\r\n\r\n        // Load fonts\r\n        await Font.loadAsync({\r\n          ...Ionicons.font,\r\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\r\n        });\r\n      } catch (e) {\r\n        // We might want to provide this error information to an error reporting service\r\n        console.warn(e);\r\n      } finally {\r\n        setLoadingComplete(true);\r\n        SplashScreen.hideAsync();\r\n      }\r\n    }\r\n\r\n    loadResourcesAndDataAsync();\r\n  }, []);\r\n\r\n  return isLoadingComplete;\r\n}\r\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","// @ts-ignore\r\nimport {API_URL, FCM_PUBLIC_VAPID_KEY as fcm1, FCM_API_KEY as fcm2, TURN_SERVER as turn1 } from \"@env\"\r\nexport const accountURL =  `${API_URL}/account/`\r\nexport const baseURL =  `${API_URL}/messenger/`\r\nconst [SCHEMA, DOMAIN] = `${API_URL}`.split('://')\r\nexport const websockerURL = `${SCHEMA=='https'?'wss':'ws'}://${DOMAIN}`\r\nexport const FCM_PUBLIC_VAPID_KEY = fcm1\r\nexport const FCM_API_KEY = fcm2\r\nexport const TURN_SERVER = turn1","\r\nimport { User, UserMembership } from '../types';\r\nimport axios, { getToken, setToken } from './axios';\r\nimport {accountURL as baseURL} from '../constants/Envs'\r\n\r\nexport const login = async(username:string, password:string) => {\r\n    if(username.endsWith('.guest') && password.length == 0)\r\n        password = 'guest'\r\n    const r = await axios.post(\"/api-token-auth/\", {username, password});\r\n    if(r.status == 200){\r\n        await setToken(r.data)\r\n        return await checkLogin()\r\n    }\r\n}\r\n\r\nexport const logout = async() => {\r\n    await setToken(null)\r\n    return await axios.get(\"/api-auth/logout/\")\r\n}\r\n\r\nexport const guestLogin =  async() => {\r\n    return await login('guest', 'guest')\r\n}\r\n\r\nconst checkLoginToken = async ()=>{\r\n    const value = (await axios.get(\"/api/v1/users/memberships/?_self=true\"))?.data\r\n    if (value && value.length){\r\n        return value[0] as UserMembership\r\n    }\r\n    return null\r\n}\r\n\r\nexport const checkLogin = async() => {\r\n    const token = await getToken()\r\n    if (token === null)\r\n        return null\r\n    try{\r\n       return await checkLoginToken()\r\n    }\r\n    catch(e:any){\r\n        let error = e\r\n        if(e.response !== undefined && e.response.status==401){\r\n            try{\r\n                return await checkLoginToken()\r\n            }\r\n            catch(e2){\r\n                error = e2\r\n            }\r\n        }\r\n        const isOffline = ((error as any).code == \"ERR_NETWORK\" || (error as any).message && ((error as any).message as string).startsWith(\"Cannot read\"))\r\n        throw {error, isOffline}\r\n    }\r\n}\r\n\r\nexport const getUserList = async (group_id:number)=>{\r\n    return (await axios.get(`/api/v1/users/?group_id=${group_id}`) ).data as User[]\r\n}\r\n\r\nexport const patchUser = async (user:{id:number, name:string})=>{\r\n    await axios.patch(`/api/v1/user/`, {ids:[user.id], updated: {name:user.name}}, {baseURL})\r\n}\r\n\r\nexport const getUserMembershipList = async (group_id:number)=>{\r\n    return (await axios.get(`/api/v1/users/memberships/?group_id=${group_id}`) ).data as UserMembership[]\r\n}\r\n\r\nexport const getExternalMembershipList = async (username:string)=>{\r\n    return (await axios.get(`/api/v1/users/memberships/?username=${username}`) ).data as UserMembership[]\r\n}","import { Channel, MessengerMember, MessengerContent, EditMessage, MessengerChannel, EditMessengerContent } from '../types';\r\nimport axios from './axios';\r\n\r\nexport const getMessengerChannelList = async (user_id:number)=>{\r\n    return (await axios.get(`/api/v1/channels/messenger/?type=messenger&messenger_user_id=${user_id}`) ).data as MessengerChannel[]\r\n}\r\n\r\nexport const postChannel = async(channel:Channel)=>{\r\n    return (await axios.post(`/api/v1/channels/`, channel)).data as Channel\r\n}\r\n\r\nexport const postDirectChannel = async(channel:Channel)=>{\r\n    return (await axios.post(`/api/v1/channels/direct/`, channel)).data as Channel\r\n}\r\n\r\nexport const putChannel = async(channel:Channel)=>{\r\n    return (await axios.put(`/api/v1/channels/${channel.id}/`, channel)).data as Channel\r\n}\r\n\r\nexport const deleteChannel = async(channel_id:number)=>{\r\n    await axios.delete(`/api/v1/channels/${channel_id}/`)\r\n}\r\n\r\nexport const getMessengerMemberList = async(channel_id:number)=>{\r\n    try{\r\n        return (await axios.get(`/api/v1/messengermembers/?channel=${channel_id}`) ).data as MessengerMember[]\r\n    }\r\n    catch(e){\r\n        if (e.response.status==400)\r\n            return Promise.resolve(null)\r\n        throw e\r\n    }\r\n}\r\n\r\nexport const postBulkMessengerMember = async(data:{channel_id:number, user_ids:number[]})=>{\r\n    await axios.post(`/api/v1/messengermembers/bulk/`, {channel:data.channel_id, user_ids:data.user_ids})\r\n}\r\n\r\nexport const deleteMessengerMember = async(member_id:number)=>{\r\n    await axios.delete(`/api/v1/messengermembers/${member_id}/`)\r\n}\r\n\r\nexport const getMessengerContentList = async (channel_id:number, id_lt?:number)=>{\r\n    const id_lt_param = id_lt?`&id_lt=${id_lt}`:''\r\n    return (await axios.get(`/api/v1/messengercontents/?limit=30&channel=${channel_id}${id_lt_param}`)).data.results as MessengerContent[]\r\n}\r\n\r\nexport const getTimerMessageContentList = async (channel_id:number, timer_gt:string)=>{\r\n    return (await axios.get(`/api/v1/messengercontents/?channel=${channel_id}&timer_gt=${timer_gt}`)).data as MessengerContent[]\r\n}\r\n\r\nexport const postMessage = async (message:EditMessage)=>{\r\n    if (message.file){\r\n        const formData = new FormData(); // formData 객체를 생성한다.\r\n        formData.append(\"file\", message.file)\r\n        Object.entries(message).forEach(value=>{\r\n            formData.append(value[0], `${value[1]}`)\r\n        })\r\n        await axios.post(`/api/v1/messengercontents/messages/`, formData, {headers:{\r\n            ...(axios.defaults.headers as any), \"Content-Type\": \"multipart/form-data\",\r\n        }})\r\n    }\r\n    else{\r\n        await axios.post(`/api/v1/messengercontents/messages/`, message)\r\n    }\r\n}\r\n\r\nexport const patchMessengerContent = async (content:EditMessengerContent)=>{\r\n    return (await axios.patch(`/api/v1/messengercontents/${content.id}/`, content)).data as MessengerContent\r\n}\r\nexport const deleteMessengerContent = async (content_id:number)=>{\r\n    await axios.delete(`/api/v1/messengercontents/${content_id}/`)\r\n}","import axios, { AxiosRequestConfig } from 'axios';\r\nimport {accountURL, baseURL} from \"../constants/Envs\"\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nconst defaultOption:AxiosRequestConfig = {\r\n    baseURL,\r\n    withCredentials: true,\r\n    headers: {}\r\n};\r\nconst _axios = axios.create(defaultOption);\r\n\r\n_axios.interceptors.request.use(\r\n    config => {\r\n        return config;\r\n    },\r\n    error => {\r\n        return Promise.reject(error);\r\n    }\r\n)\r\n\r\n_axios.interceptors.response.use(\r\n    response => {\r\n        // if((response.request.responseURL as string).indexOf('/task/login')>=0 && response.data.length != 0){\r\n        //     // redirect login\r\n        // }\r\n        return response;\r\n    },\r\n    error => {\r\n        if (error.response.status === 401) {\r\n            return getToken().then(async(token)=>{\r\n                if (token){\r\n                    const r = await _axios.post(\"/api/v1/user/sso/refresh/\", {token}, {headers:{'Authorization':''}, baseURL: accountURL})\r\n                    if (r.status == 200 && r.data !== ''){\r\n                        setToken(r.data)\r\n                    }\r\n                }\r\n            }).finally(()=>{\r\n                return Promise.reject(error)\r\n            })\r\n        }\r\n        return Promise.reject(error)\r\n    }\r\n)\r\n\r\nexport const setToken = async (token:string|null)=>{\r\n    _axios.defaults.headers['Authorization'] = `JWT ${token}`\r\n    if (token)\r\n        await AsyncStorage.setItem(\"Authorization\", token)\r\n    else\r\n        AsyncStorage.removeItem(\"Authorization\")\r\n}\r\nexport const getToken = async ()=>{\r\n    const token = await AsyncStorage.getItem(\"Authorization\")\r\n    _axios.defaults.headers['Authorization'] = token?`JWT ${token}`:null\r\n    return token\r\n}\r\n\r\nexport default _axios\r\n"],"sourceRoot":""}