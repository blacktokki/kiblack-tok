{"version":3,"sources":["src/components/Themed.tsx","src/constants/Colors.ts","src/hooks/useModalsContext.tsx","src/components/CommonButton.tsx","src/hooks/useResizeContext.tsx","src/lib/react-native-paper/Avatar.tsx","src/components/Avatar.tsx","src/components/CommonSection.tsx","src/components/ModalSection.tsx","src/hooks/useModalEffect.ts","src/hooks/lists/useMessengerChannelList.ts","src/hooks/useWebsocketContext.tsx","src/components/TextButton.tsx","src/navigation/index.tsx","src/hooks/lists/useMessengerMemberList.ts","src/modals/ChannelEditModal.tsx","src/components/HeaderRight.tsx","src/hooks/lists/useUserMembershipList.ts","src/components/TabView.tsx","src/components/CommonItem.tsx","src/hooks/lists/useMessengerContentList.ts","src/modals/GuestLogoutModal.tsx","src/components/CommonTextInput.tsx","src/components/MemberItem.tsx","src/modals/DateTimePickerModal.tsx","src/modals/MessageModal.tsx","src/modals/ProfileModal.tsx","src/components/Profile.tsx","src/hooks/useFirebaseContext.tsx","src/components/ContractFooter.tsx","src/screens/main/LoginScreen.tsx","src/components/LinkPreview.tsx","src/lib/react-native-webrtc/useWebsocketContext.tsx","src/lib/react-native-webrtc/webrtc/p2p.tsx","src/lib/react-native-webrtc/webrtc/index.ts","src/lib/react-native-webrtc/LocalCam.tsx","src/lib/react-native-webrtc/RemoteCam.tsx","src/screens/main/ChatScreen/VideoCallSection.tsx","src/components/FilePreview.tsx","src/screens/main/ChatScreen/TimerTags.tsx","src/hooks/lists/useTimerMessageContent.ts","src/screens/main/ChatScreen/index.tsx","src/screens/main/HomeScreen/ConfigSections.tsx","src/screens/main/HomeScreen/index.tsx","src/screens/main/InviteeScreen.tsx","src/screens/index.ts","src/hooks/useLocalSearch.ts","src/modals/InviteModal.tsx","src/hooks/lists/useExternalMembershipList.ts","src/components/RowField.tsx","src/components/TextField.tsx","src/navigation/LinkingConfiguration.ts","web/firebase-config.js","src/screens/NotFoundScreen.tsx","src/navigation/DrawerNavigator.tsx","src/modals/index.ts","src/navigation/RootNavigator.tsx"],"names":["useThemeColor","props","colorName","theme","useColorScheme","colorFromProps","Colors","Text","style","lightColor","darkColor","otherProps","color","light","dark","View","backgroundColor","text","background","tint","tabIconDefault","tabIconSelected","hoverColor","buttonBackgroundColor","header","headerBottomColor","buttonBorderColor","iconColor","borderColor","focus","ModalsContext","createContext","setModal","ModalsProvider","children","allModals","modals","useState","setModals","windowType","useResizeContext","animationType","setAnimationType","useEffect","filter","v","visible","length","map","Component","Provider","value","newModals","m","modal","index","key","transparent","useContext","DefaultButton","hover","setHover","onPress","onHoverIn","onHoverOut","disabled","paddingVertical","paddingHorizontal","selectable","fontSize","textStyle","title","_props","styles","StyleSheet","create","borderRadius","borderWidth","textAlign","fontWeight","getWindowType","window","height","width","ResizeContextContext","Dimensions","get","ResizeContextProvider","detectMobile","useMobileDetect","useWindowDimensions","setWindowType","isMobile","normalizeHash","hash","min","max","Math","floor","str","initHash","i","charCodeAt","abs","stringToHSL","name","userId","size","label","split","join","toUpperCase","avatarFromChannel","item","user","avatar","member_count","id","subowner","owner","Avatar","CommonSection","outerContainer","outerContainerStyle","container","containerStyle","withSeparator","separator","undefined","titleView","titleStyle","subtitle","bodyView","bodyStyle","maxWidth","alignItems","marginHorizontal","marginVertical","flexDirection","marginBottom","flex","marginTop","padding","justifyContent","alignSelf","flexShrink","margin","BottomSheet","callback","deps","navigation","useNavigation","event","e","preventDefault","addListener","removeListener","useMessengerChannelList","auth","queryClient","useQueryClient","lastJsonMessage","useWebsocketContext","data","useQuery","a","async","getMessengerChannelList","setQueryData","_data","find","sort","b","channel","last_message","content","message_set","created","useMessengerChannelSorted","channelList","useMessengerChannelMutation","useMutation","postChannel","onSuccess","invalidateQueries","update","putChannel","direct","postDirectChannel","mutateAsync","defaultContext","sendJsonMessage","WebSocketContext","WebSocketInternalProvider","path","Context","useBackground","token","setToken","AppState","currentState","isActive","setIsActive","useWebSocket","websockerURL","shouldReconnect","closeEvent","protocols","onOpen","console","log","onClose","AsyncStorage","getItem","then","onChange","nextState","addEventListener","removeEventListener","WebSocketProvider","disable","enableScreens","navigationRef","React","navigate","params","current","Navigation","defaultColorScheme","useDefaultColorScheme","userColorScheme","colorScheme","ref","documentTitle","formatter","options","route","linking","process","versions","LinkingConfiguration","DarkTheme","DefaultTheme","l","search","decoded","slice","s","replace","history","replaceState","pathname","location","ignoreWarnings","_console","_","clone","warn","message","Object","forEach","indexOf","useMessengerMemberList","channel_id","getMessengerMemberList","useMessengerMemberMutation","invite","postBulkMessengerMember","leave","deleteMessengerMember","ChannelEditModal","member_id","type","lang","useLangContext","useAuthContext","useModalsContext","channelMutation","messengerMemberMutation","setName","description","setDescription","back","_name","useModalEffect","setValue","multiline","groupId","newChannel","group","screen","field","dispatch","defaultButtonProps","username","endsWith","GuestLogoutModal","buttonProps","extra","k","useUserMembershipList","getUserMembershipList","setIndex","entries","tabs","onTab","icons","assign","icon","renderTabBar","indicatorStyle","activeColor","inactiveColor","renderIcon","scene","onTabPress","findIndex","navigationState","routes","onIndexChange","renderScene","SceneMap","component","tabBarPosition","CommonItem","press","setPress","onPressIn","onPressOut","minHeight","borderBottomWidth","updateContnetPage","pages","updateMessages","update_i","page","timer","is_archive","useMessengerContentList","useInfiniteQuery","pageParam","getMessengerContentList","select","next","getNextPageParam","lastPage","refetchOnReconnect","refetchOnWindowFocus","query","updated_gte","Date","state","dataUpdatedAt","toISOString","newData","getNewMessengerContentList","contents","lastMessageId","nextMessages","fetchNextPage","pageParams","useMessengerContentMutation","channelId","postMessage","_patch","patchMessengerContent","mutate","patch","contentHeight","setContentHeight","placeholder","editable","onChangeText","onContentSizeChange","nativeEvent","contentSize","onBlur","onEndEditing","member","marginRight","dayTypes","hours","Array","keys","toString","padStart","minutes","getDisableDays","date","startDate","startOf","add","endDate","endOf","today","dayjs","result","push","format","Calendar","lazy","CommonPicker","DateTimePickerModal","datetime","_dayjs","restMinute","parseInt","defaultDayjs","locale","setDate","dayType","setDayType","hour","setHour","minute","setMinute","disableDays","setDisableDays","fallback","disableAllTouchEventsForDisabledDays","onMonthChange","dateString","markedDates","reduce","p","c","selected","values","MessageModal","isOwner","isTimer","contentMutation","Clipboard","setString","ProfileModal","userList","isSelf","patchUser","finally","firebaseConfig","require","messagingSenderId","apiKeyEncrypted","FCM_API_KEY","app","firebase","initializeApp","apiKey","messaging","onMessage","payload","Notification","permission","JSON","parse","channel_name","body","alert","FirebaseContext","setEnable","FirebaseProvider","tokenRef","useRef","notification","setNotification","enable","useMemo","isMount","requestPermission","navigator","serviceWorker","register","serviceWorkerRegistration","scope","getToken","vapidKey","FCM_PUBLIC_VAPID_KEY","catch","currentToken","unregister","requestToken","t","putNotification","noti","getNotification","postNotification","openURL","Platform","OS","url","href","Linking","Styles","footer_buttons","footer_button","paddingBottom","paddingRight","login_container","login_header","paddingTop","login_header_logo","resizeMode","login_header_text","login_header_text_bold","login_wrapper","borderTopRightRadius","borderTopLeftRadius","form","form_error","form_error_text","textAlignVertical","form_input","button","button_label","login_social","login_social_separator","login_social_separator_line","login_social_separator_text","login_social_buttons","login_social_button","login_social_icon","login_social_facebook","login_footer_text","guest_footer_text","login_footer_link","link","onLongPress","image","Image","source","uri","maxHeight","TURN_SERVER","peerConstraints","iceServers","urls","sessionConstraints","mandatory","OfferToReceiveAudio","OfferToReceiveVideo","VoiceActivityDetection","mediaConstraints","audio","video","framerate","onICEcandidate","pc","_message","rtcMessage","candidate","RTCIceCandidate","addIceCandidate","sendICEcandidate","sendMessage","receiver","target","optimizeSdp","offerDescription","arr","sdp","test","RTCSessionDescription","createOffer","pcRefCurrent","stream","addStream","setLocalDescription","camStyle","cam","bottonContainer","position","bottom","buttonBar","pcRef","sender","setSender","_stream","setStream","isPlay","CustomRTCView","useCallback","memo","videoProps","start","mode","mediaDevices","getUserMedia","newStream","getDisplayMedia","error","stop","getTracks","track","websocketOnMessage","response","peerConnection","RTCPeerConnection","answerDescription","setRemoteDescription","useLocalCam","Button","setReceiver","setUser","close","clearInterval","statsInterval","iceConnectionState","activeStream","setInterval","getStats","stats","statsOutput","framePerSecond","report","kind","statName","framesPerSecond","toTimeString","addTransceiver","direction","streams","getRemoteStreams","createAnswer","localDescription","useRemoteCam","TextInput","VideoView","scale","flexGrow","focusGuest","setFocusGuest","VideoCallContainer","setDisable","useIsMobile","videoMode","setVideoMode","guests","setGuests","useRtcContext","ceil","sqrt","toggleVideoMode","Themed","aspectRatio","borderLeftWidth","flexWrap","RemoteCam","LocalCam","CommonButton","file","showBorder","filename","pow","toFixed","humanFileSize","filesize","_timerFormat","now","year","month","day","timerToString","TimerTag","end","ratio","diff","TouchableOpacity","setExpand","isExpand","overflow","linkDefault","wordBreak","linkStyle","timerMessages","getTimerMessageContentList","sorted","ms","Number","MAX_VALUE","timeout","setTimeout","clearTimeout","useTimerMessageContentList","setNow","expand","MessengerContentPageItem","nextPage","nextContent","index2","isSystem","isFirst","ownerId","dayChanged","marginLeft","file_set","fileIndex","FilePreview","link_set","linkIndex","LinkPreview","ConfigSection","setLocale","configTheme","useConfigColorScheme","useFirebaseContext","setNoti","n","TextButton","textDecorationLine","setColorScheme","MemberTabView","memberItem","MemberItem","ScrollView","MessengerTabView","opacity","paddingLeft","unread_count","ConfigTabView","ConfigSections","getBottomTabs","OneTab","TwoTab","FourTab","InviteeScreen","enterGuest","setEnterGuest","useLayoutEffect","setOptions","headerRight","user_ids","main","HomeScreen","home","setHome","HeaderRight","tab","ContractFooter","TabView","setParams","ChatScreen","inputRef","channelAvatar","memberList","setTimer","autoFocus","setAutoFocus","bottomTab","setBottomTab","postValue","InviteModal","renderItem","canGoBack","goBack","minWidth","VideoCallSection","d","contentContainerStyle","onScroll","contentOffset","y","onLayout","layout","TimerTags","borderBottomRightRadius","top","onSubmitEditing","blurOnSubmit","onFocus","borderBottomLeftRadius","Promise","resolve","reject","input","document","createElement","onchange","files","onabort","onerror","click","f","login","LoginScreen","setUsername","password","setPassword","_login","autoCapitalize","keyboardType","secureTextEntry","localSearchReducer","initialState","action","keyword","active","Error","InviteItem","selectedRef","has","setSelected","delete","GroupTabView","compare","useReducer","searchState","useLocalSearch","memberSet","Set","includes","dispatchKeyword","TextField","ExternalMembershipTabView","setKeyword","copied","setCopied","timeoutRef","externalMemberList","getExternalMembershipList","useExternalMembershipList","inviteLink","drawerTabs","external","ModalSection","RowField","rowStyle","CommonTextInput","ROOTPATH","prefixes","config","screens","Main","NotFound","module","exports","NotFoundScreen","linkText","DrawerTabView","MessengerTab","colors","useTheme","onAddList","tabBar","card","borderTopColor","border","pointerEvents","Profile","accessibilityRole","borderTopWidth","drawerTab","Tab","elevation","borderRightWidth","Root","createStackNavigator","RootNavigator","Navigator","headerMode","screenOptions","cardStyle","animationEnabled","cardStyleInterpolator","CardStyleInterpolators","forVerticalIOS","Screen","MainNavigator","headerShown","gestureDirection","modalValues","DrawerNavigator","headerStyle","headerTitleStyle","headerLeft","canGOBackScreen","headerLeftContainerStyle","forHorizontalIOS"],"mappings":"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","file":"static/js/6.3f0ed5a2.chunk.js","sourcesContent":["/**\n * Learn more about Light and Dark modes:\n * https://docs.expo.io/guides/color-schemes/\n */\n\nimport * as React from 'react';\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\n\nimport Colors from '../constants/Colors'\nimport useColorScheme from '../hooks/useColorScheme';\n\nexport function useThemeColor(\n  props: { light?: string; dark?: string },\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\n) {\n  const theme = useColorScheme();\n  const colorFromProps = props[theme];\n\n  if (colorFromProps) {\n    return colorFromProps;\n  } else {\n    return Colors[theme][colorName];\n  }\n}\n\ntype ThemeProps = {\n  lightColor?: string;\n  darkColor?: string;\n};\n\nexport type TextProps = ThemeProps & DefaultText['props'];\nexport type ViewProps = ThemeProps & DefaultView['props'];\n\nexport function Text(props: TextProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\n\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\n}\n\nexport function View(props: ViewProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\n\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\n}\n","const tintColorLight = '#2f95dc';\nconst tintColorDark = '#fff';\n\nexport default {\n  light: {\n    text: '#000',\n    background: '#fff',\n    tint: tintColorLight,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorLight,\n    hoverColor:'rgb(242,242,242)',\n    buttonBackgroundColor: '#f6f8fa', //'rgba(9,30,66,0.08)',//rgb(242,242,242)\\\n    header:'#f6f8fa',\n    headerBottomColor:'rgb(216, 216, 216)',\n    buttonBorderColor:'rgba(27,31,36,0.15)',\n    iconColor: 'black'\n  },\n  dark: {\n    text: '#fff',\n    background: '#000',\n    tint: tintColorDark,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorDark,\n    hoverColor: '#010409',//'rgb(1,4,9)',\n    buttonBackgroundColor: '#010409',//'#282624',\n    header:'#010409',\n    headerBottomColor:'rgb(40, 40, 40)',\n    buttonBorderColor:'rgba(229,225,220,0.15)',\n    iconColor: 'white'\n  },\n  borderColor:'#d0d7de',\n  \n  focus:'#0065A4',\n};\n","import React, { useState, createContext, useContext, useEffect } from \"react\";\nimport { Modal } from \"react-native\";\nimport useResizeContext from \"./useResizeContext\";\n\ntype ModalProps = any\n\ntype ModalState = {\n  Component:React.ComponentType<ModalProps>,\n  props:any\n  visible:boolean\n}\ntype SetModal = (Component:ModalState[\"Component\"]|null, props:ModalProps|null)=>void\n\nconst ModalsContext = createContext<{setModal: SetModal}>({\n    setModal: () => {}\n});\n\nexport const ModalsProvider = ({children, modals:allModals}:{children:React.ReactNode, modals:React.ComponentType<ModalProps>[]}) => {\n    const [modals, setModals] = useState<ModalState[]>([]);\n    const windowType = useResizeContext();\n    const [animationType, setAnimationType] = useState('none')\n    const setModal:SetModal = (Component, props) => {\n        const newModals = modals.map(m=>{\n            if(Component==null){\n                return {\n                    ...m,\n                    visible:false\n                }\n            }\n            else if(m.Component == Component){\n                return {\n                    Component, \n                    props:props!==null?props:m.props,\n                    visible:props!==null\n                }\n            }\n            return m        \n        })\n        setModals(newModals);\n    }\n    useEffect(()=>{\n        if (modals.filter(v=>v.visible).length == 0)\n            setAnimationType(windowType == 'landscape'?'fade':'slide')\n    }, [windowType])\n    useEffect(()=>{\n        setModals(allModals.map((Component)=>({Component, props:null, visible:false})))\n    }, [allModals])\n    return <ModalsContext.Provider value={{setModal}}>\n        {children}\n        {modals.map((modal, index)=>{\n            const { Component, props, visible } = modal;\n            return <Modal key={index} animationType={animationType as any} visible={visible} transparent>\n                <Component {...props}/>\n            </Modal>\n        })}\n    </ModalsContext.Provider>\n}\n\nexport default ()=>{\n    const modalsContext = useContext(ModalsContext)\n    return modalsContext\n}\n\n","import React, { useState } from 'react';\nimport { Text, StyleSheet, Pressable, StyleProp, ViewStyle} from 'react-native';\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport { CustomButtonProps } from '../types';\n\nconst DefaultButton = (props:CustomButtonProps & {borderColor:string})=>{\n    const [hover, setHover] = useState(false)\n    return <Pressable\n        onPress={()=>props.onPress()}\n        //@ts-ignore\n        onHoverIn={()=>setHover(true)}\n        onHoverOut={()=>setHover(false)}\n        disabled={props.disabled}\n        style={[\n            {\n                paddingVertical:5, \n                paddingHorizontal:16\n            },\n            props.style,\n            (hover || props.disabled)?{backgroundColor:props.color, borderColor:props.borderColor}:{}\n        ]}>\n            {props.children?props.children:\n            <Text selectable={false} style={[{fontSize:14}, props.textStyle]}>{props.title}</Text>}\n        </Pressable>\n}\n\nexport default (props:CustomButtonProps)=>{\n    const theme = useColorScheme()\n    const _props = {\n        color:Colors[theme].hoverColor,\n        borderColor:theme=='light'?Colors[theme].buttonBorderColor:'#7d8590',\n        ...props,\n        style:[\n            styles.style,\n            {\n                backgroundColor:Colors[theme].buttonBackgroundColor,\n                borderColor:Colors[theme].buttonBorderColor\n            },\n            props.style,\n        ] as StyleProp<ViewStyle>,\n        textStyle:[\n            styles.text, \n            {color:Colors[theme].text},\n            props.textStyle\n        ]\n    }\n    return <DefaultButton {..._props}/>\n}\n\nconst styles = StyleSheet.create({\n    style:{\n        borderRadius:6, \n        borderWidth:1, \n    },\n    text:{\n        textAlign:'center', \n        fontWeight:'600'\n    }\n});\n","import React, { useState, useEffect, createContext, useContext, useMemo } from 'react';\nimport { Dimensions, ScaledSize, useWindowDimensions } from 'react-native';\n//@ts-ignore\nimport useMobileDetect from 'use-mobile-detect-hook';\n\ntype WindowType = 'portrait' | 'landscape'\n\nconst getWindowType = (window:{width:number, height:number})=> window.height >= window.width?'portrait':'landscape' as WindowType;\n\nconst ResizeContextContext = createContext<WindowType>(getWindowType(Dimensions.get('window')));\n\nexport const ResizeContextProvider = ({children}:{children:React.ReactNode})=>{\n  const detectMobile = useMobileDetect();\n  const {width, height} = useWindowDimensions()\n  const [windowType, setWindowType] = useState(getWindowType({width, height}))\n  useEffect(()=>{\n    setWindowType(getWindowType({width, height}))\n  }, [width, height])\n  return <ResizeContextContext.Provider value={detectMobile.isMobile()?'portrait':windowType}>\n    {children}\n  </ResizeContextContext.Provider>\n}\n\nexport default function useResizeContext() {\n  const windowType = useContext(ResizeContextContext)\n  return windowType\n}","import * as React from 'react';\nimport { Avatar } from 'react-native-paper';\nimport { AvatarProps } from '../../types';\n\nconst normalizeHash = (hash: number, min: number, max: number) => {\n    return Math.floor((hash % (max - min)) + min);\n};\n\nconst stringToHSL = (str: string, initHash?:number) => {\n    let hash = initHash || 0;\n    for (let i = 0; i < str.length; i++) {\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    hash = Math.abs(hash);\n    return `hsl(${normalizeHash(hash, 0, 360)}, ${normalizeHash(hash, 0, 100)}%, ${normalizeHash(hash, 25, 75)}%)`;\n};\n\nexport default (props:AvatarProps) => {\n    const backgroundColor = stringToHSL(props.name, props.userId)\n    return <Avatar.Text style={{backgroundColor}} size={props.size} label={props.name.split(' ').map(v=>v[0]).join().toUpperCase()} />\n};","import React from 'react';\nimport Avatar from '../lib/react-native-paper/Avatar';\nimport { AvatarProps, MessengerChannel, User } from '../types';\n\nexport function avatarFromChannel(item:MessengerChannel, user?:User|null){\n    let avatar;\n    let name = item.name\n    if (item.member_count<3){\n        avatar = (item.member_count==1 || user?.id == item.subowner.id)?item.owner:item.subowner\n        name = name.length>0?name:avatar.name \n    }\n    return {avatar, name}\n}\n\nexport default (props:AvatarProps)=>{\n    return <Avatar {...props}/>\n}\n\n","import * as React from 'react';\nimport { View, Text } from './Themed';\nimport { StyleSheet, StyleProp, ViewStyle, TextStyle } from 'react-native';\nimport Colors from '../constants/Colors';\n\nexport type SectionParamList = {\n    title?: string,\n    titleStyle?:StyleProp<TextStyle>\n    outerContainerStyle?:StyleProp<TextStyle>\n    containerStyle?:StyleProp<ViewStyle>\n    bodyStyle?:StyleProp<ViewStyle>\n    subtitle?: string\n    withSeparator?: boolean\n    children?: React.ReactNode\n}\n\nexport default function CommonSection(props:SectionParamList){\n  return (\n    <View style={[styles.outerContainer, props.outerContainerStyle]}>\n        <View style={[styles.container, props.containerStyle]}>\n            {props.withSeparator?<View style={styles.separator} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />:undefined}\n            {props.title?<View style={styles.titleView}>\n              <Text style={[styles.title, props.titleStyle]}>{props.title}</Text>\n              <Text style={styles.subtitle}>{props.subtitle}</Text>\n            </View>:undefined}\n            <View style={[styles.bodyView, props.bodyStyle]}>\n            {props.children}\n            </View>\n          </View>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n  outerContainer:{\n    width:'100%',\n    maxWidth:1080,\n    alignItems:'stretch',\n    backgroundColor:'transparent'\n  },  \n  container: {\n      marginHorizontal:20,\n      marginVertical: 10,\n      backgroundColor:'transparent',\n    },\n    titleView:{\n      width: '100%',\n      flexDirection:'row',\n      backgroundColor:'transparent',\n      marginBottom:5,\n    },\n    title: {\n      flex:1,\n      fontSize: 16,\n    },\n    subtitle: {\n      flex:1,\n      fontSize: 12,\n      textAlign: 'right',\n      marginTop:4\n    },\n    separator: {\n      marginBottom: 20,\n      height: 1,\n      width: '100%',\n    },\n    bodyView:{\n      width: '100%',\n      padding: 20,\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderWidth:1,\n      borderColor:Colors.borderColor,\n      borderRadius:6\n    }\n  });\n  ","import React from 'react'\nimport CommonSection from \"./CommonSection\";\nimport useResizeContext from '../hooks/useResizeContext';\n\nexport default (props:{children?: React.ReactNode})=>{\n    const windowType = useResizeContext();\n    return <CommonSection\n        outerContainerStyle={{flex:1, alignSelf:'center', backgroundColor:'#8888', maxWidth:undefined, flexShrink:1}}\n        containerStyle={{flex:1, margin:0, justifyContent:'center', alignItems:'center'}}\n        bodyStyle={windowType=='landscape'?{width:'90%', height:'90%', padding:'5%'}:{width:'100%', height:'100%', maxWidth:1080}}\n    >\n        {props.children}\n    </CommonSection>\n}\n\nexport const BottomSheet = (props:{children?: React.ReactNode})=><CommonSection\n    outerContainerStyle={{flex:1, alignSelf:'center', backgroundColor:'#8888', maxWidth:undefined}}\n    containerStyle={{flex:1, margin:0, justifyContent:'flex-end'}}\n>\n    {props.children}\n</CommonSection>","import { DependencyList, useEffect } from \"react\";\nimport { EventArg, useNavigation } from \"@react-navigation/core\";\n\n\nexport default (callback:()=>void, deps?:DependencyList)=>{\n    const navigation = useNavigation()\n    useEffect(()=>{\n        const event = (e:EventArg<any, true, any>)=> {\n            e.preventDefault();\n            callback()\n        }\n        navigation.addListener('beforeRemove', event)\n        return () => {\n            navigation.removeListener('beforeRemove', event)\n        }\n  }, deps)\n}","import { useEffect } from \"react\";\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport { getMessengerChannelList, postChannel, postDirectChannel, putChannel } from \"../../apis\";\nimport { MessengerChannel, MessengerContent } from \"../../types\";\nimport { Auth } from \"../useAuthContext\";\nimport useWebsocketContext from \"../useWebsocketContext\";\n\nexport default function useMessengerChannelList(auth?:Auth){\n  const queryClient = useQueryClient()\n  const {lastJsonMessage} = useWebsocketContext()\n  const { data } = useQuery(\"MessengerChannelList\" , async()=>auth?.user?.id?(await getMessengerChannelList(auth.user.id)):[])\n\n  useEffect(()=>{\n    if(lastJsonMessage !=null){\n      if(lastJsonMessage['type']=='enter'){\n        queryClient.setQueryData<MessengerChannel[]>(\"MessengerChannelList\", (_data)=>{\n          return (_data?.find(v=>v.id==lastJsonMessage['data']['id'])?_data:[lastJsonMessage['data'] , ...(_data|| [])]).sort((a, b)=>a.id - b.id)\n        })\n      }\n      if (lastJsonMessage['type']=='next_message'){\n        const data:MessengerContent = lastJsonMessage['data']\n        queryClient.setQueryData<MessengerChannel[]>(\"MessengerChannelList\", (_data)=>(_data || []).map(v=>{\n          if (v.id == data.channel){\n            return {...v, last_message:{content:data.message_set[0]?.content, created:data.created}}\n          }\n          return v\n        }))\n      }\n      // if(lastJsonMessage['type']=='leave'){\n      //   queryClient.setQueryData<Channel[]>(\"MessengerChannelList\", (_data)=>_data?.filter(v=>v.id!=lastJsonMessage['data']['channel_id']) || [])\n      // }\n    }\n  }, [lastJsonMessage])\n  return data\n}\n\nexport function useMessengerChannelSorted(auth?:Auth){\n  const channelList = useMessengerChannelList(auth);\n  return channelList?.sort((a, b)=>(a.last_message?.created || '') < (b.last_message?.created || '')?1:-1)\n}\nexport function useMessengerChannelMutation(){\n  const queryClient = useQueryClient()\n\n  const create = useMutation(postChannel, {\n    onSuccess: ()=>queryClient.invalidateQueries(\"MessengerChannelList\")\n  });\n\n  const update = useMutation(putChannel, {\n    onSuccess: () => queryClient.invalidateQueries(\"MessengerChannelList\")\n  })\n\n  const direct = useMutation(postDirectChannel, {\n    onSuccess: () => queryClient.invalidateQueries(\"MessengerChannelList\")\n  })\n\n  return { create:create.mutateAsync, update:update.mutateAsync, direct:direct.mutateAsync}\n}","import React, { Context, createContext,  useContext, useEffect, useState } from \"react\"\nimport useWebSocket from \"react-use-websocket\"\nimport { SendJsonMessage } from \"react-use-websocket/dist/lib/types\"\nimport {websockerURL } from \"../constants/Envs\"\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { AppState, AppStateStatus } from \"react-native\";\n\ntype WebsocketContextType = {lastJsonMessage:any, sendJsonMessage:SendJsonMessage }\nconst defaultContext = {lastJsonMessage:undefined, sendJsonMessage:()=>{}}\nconst WebSocketContext = createContext<WebsocketContextType>(defaultContext);\n\nexport const WebSocketInternalProvider = ({children, path, Context, useBackground}:{children:React.ReactNode, path:string, Context:Context<WebsocketContextType>, useBackground?:boolean})=>{\n  const [token, setToken] = useState<string|null>(null)\n  const [isActive, setIsActive] = useState<boolean>(useBackground || AppState.currentState == 'active')\n  const { lastJsonMessage, sendJsonMessage } = useWebSocket(`${websockerURL}/${path}`,{\n    shouldReconnect: (closeEvent) => true,\n    protocols: token?['Authorization',  token]:undefined,\n    onOpen: (e)=>{console.log(`success websocket connection(${path})`)},\n    onClose: (e)=> {console.log(`closed websocket connection(${path})`)},\n  }, isActive && token!=null)\n  useEffect(()=>{\n    AsyncStorage.getItem('Authorization').then(setToken)\n    const onChange = (nextState:AppStateStatus)=>setIsActive(useBackground || nextState == 'active')\n    AppState.addEventListener(\"change\", onChange)\n    return ()=>AppState.removeEventListener(\"change\", onChange)\n  }, [])\n  return <Context.Provider value={token!=null?{lastJsonMessage, sendJsonMessage}:defaultContext}>\n      {children}\n    </Context.Provider>\n}\n\nexport const WebSocketProvider = ({disable, children}:{disable?:boolean, children:React.ReactNode})=>{\n  return disable?<>{children}</>:<WebSocketInternalProvider path={'messenger/ws/'} Context={WebSocketContext}>\n    {children}\n  </WebSocketInternalProvider>\n}\n\nexport default ()=>{\n  const webSocketContext = useContext(WebSocketContext)\n  return webSocketContext\n}\n\n","import React, { useState } from 'react';\nimport { StyleSheet} from 'react-native';\nimport { CustomButtonProps } from '../types';\nimport CommonButton from './CommonButton';\n\nexport default (props:CustomButtonProps)=>{\n    return <CommonButton {...props} style={[styles.style, props.style]}/>\n}\n\nconst styles = StyleSheet.create({\n    style:{\n        borderRadius:6, \n        backgroundColor: 'transparent',\n        borderWidth:0\n    },\n});\n","/**\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\n * https://reactnavigation.org/docs/getting-started\n *\n */\nimport { NavigationContainer, DefaultTheme, DarkTheme, NavigationContainerRef } from '@react-navigation/native';\nimport * as React from 'react';\n\nimport LinkingConfiguration from './LinkingConfiguration';\nimport RootNavigator from './RootNavigator';\n\nimport { useColorScheme as useDefaultColorScheme } from 'react-native';\nimport { useColorScheme as useColorScheme } from 'react-native-appearance';\nimport { ResizeContextProvider } from '../hooks/useResizeContext';\nimport { enableScreens } from 'react-native-screens';\n\nenableScreens();\nconst navigationRef = React.createRef<NavigationContainerRef>();\n\nexport function navigate(name:string, params?:any) {\n  if (params)\n    navigationRef.current?.navigate(name, params);\n  navigationRef.current?.navigate(name);\n}\n\nexport default function Navigation() {\n  const defaultColorScheme = useDefaultColorScheme()\n  const userColorScheme = useColorScheme()\n  const colorScheme = userColorScheme =='no-preference'?defaultColorScheme:userColorScheme\n  return <NavigationContainer\n    ref={navigationRef}\n    documentTitle={{formatter: (options, route) => {return `TOKKI TOK`}}}\n    linking={(process.versions && process.versions['electron'])?undefined:LinkingConfiguration}\n    theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n        <ResizeContextProvider>\n          <RootNavigator />\n        </ResizeContextProvider>\n  </NavigationContainer>\n}\n\n(function(l) {  // for github-page\n    if (l !== undefined && l.search[1] === '/' ) {\n        var decoded = l.search.slice(1).split('&').map(function(s) { \n        return s.replace(/~and~/g, '&')\n        }).join('?');\n        window.history.replaceState(null, '',\n            l.pathname.slice(0, -1) + decoded + l.hash\n        );\n    }\n}(window.location))\n    \nconst ignoreWarnings = ['ReactNativeFiberHostComponent'];\nlet _console:any = ()=>{}\nimport('lodash').then(_=>{\n  _console = _.clone(console);\n})\nconsole.warn = (message: string|Object) => {\n    var warn = true;\n    if (message instanceof Object)\n    warn = false;\n    else{\n    ignoreWarnings.forEach((value)=>{\n        if (message.indexOf && message.indexOf(value) <= -1) {\n            warn = false;\n        }\n    })\n    };\n    if (warn){\n        _console.warn(message);\n    }\n    else{\n        // console.log(message)\n    }\n};\n","import { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport { postBulkMessengerMember, deleteMessengerMember, getMessengerMemberList } from \"../../apis\";\n\nexport default function useMessengerMemberList(channel_id:number){\n  const { data } = useQuery([\"MessengerMemberList\", channel_id] , async()=>await getMessengerMemberList(channel_id))\n  return data\n}\n\n\nexport function useMessengerMemberMutation(){\n  const queryClient = useQueryClient()\n  const invite = useMutation(postBulkMessengerMember, {\n    onSuccess: ()=>{\n      queryClient.invalidateQueries(\"MessengerMemberList\")\n    }\n  })\n\n  const leave = useMutation(deleteMessengerMember, {\n    onSuccess: () => {\n      queryClient.invalidateQueries(\"MessengerChannelList\")\n      queryClient.invalidateQueries(\"MessengerMemberList\")\n    }\n  })\n  return {invite:invite.mutateAsync, leave:leave.mutateAsync}\n}","import React, {useState, useEffect } from 'react';\nimport { StyleSheet } from 'react-native';\nimport { View, Text } from '../components/Themed';\nimport CommonButton from '../components/CommonButton';\n// import useBoardChannelList, { useBoardChannelMutation } from '../hooks/lists/useBoardChannelList';\nimport useAuthContext from '../hooks/useAuthContext';\nimport { navigate } from '../navigation';\nimport { Channel } from '../types';\nimport useMessengerChannelList, { useMessengerChannelMutation } from '../hooks/lists/useMessengerChannelList';\nimport TextField from '../components/TextField';\nimport useModalsContext from '../hooks/useModalsContext';\nimport useLangContext from '../hooks/useLangContext';\nimport ModalSection from '../components/ModalSection';\nimport { useMessengerMemberMutation } from '../hooks/lists/useMessengerMemberList';\nimport { avatarFromChannel } from '../components/Avatar';\nimport useModalEffect from '../hooks/useModalEffect';\n\nexport default function ChannelEditModal({id, member_id, type}: {id?:number, member_id?:number, type:string}) {\n  const { lang } = useLangContext()\n  const {auth} = useAuthContext()\n  const { setModal } = useModalsContext()\n  const channelList = useMessengerChannelList(auth)\n  const channelMutation = useMessengerChannelMutation()\n  const messengerMemberMutation = useMessengerMemberMutation()\n  const channel = channelList?.find(v=>v.id==id)\n  const [name, setName] = useState('')\n  const [description, setDescription] = useState('')\n  const back = ()=>{\n    setModal(ChannelEditModal, null)\n  }\n\n  useEffect(()=>{\n    if (channel){\n      const {name:_name} = avatarFromChannel(channel, auth.user)\n      setName(_name)\n      setDescription(channel?.description || '')\n    }\n  }, [channel])\n  useModalEffect(back, [])\n  return <ModalSection>\n    <View style={{justifyContent:'space-between', flex:1, width:'100%'}}>\n      <View style={{width:'100%'}}>\n        <Text style={{fontSize:20}}>{id?lang('Chat Setting'):lang('New chat')}</Text>\n        <View style={styles.separator} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />\n        <TextField name={lang('Channel Name')} value={name} setValue={setName} width={'60%'}/>\n        <TextField name={lang('Description')} value={description} setValue={setDescription} multiline width={'60%'}/>\n      </View>\n      <View style={{width:'100%', flexDirection:'row'}}>\n        {member_id &&<View style={{flexDirection:'row', justifyContent:'flex-start'}}>\n          <CommonButton title={lang('leave')} style={{marginHorizontal:5}} textStyle={{color:'red'}} onPress={()=>messengerMemberMutation.leave(member_id).then(back)}/>\n        </View>}\n        <View style={{flex:1, flexDirection:'row', justifyContent:'flex-end'}}>\n          <CommonButton title={lang('save')} onPress={()=>{\n            if(auth?.user?.id && auth.groupId){\n              const newChannel:Channel = {id, name, description, type, owner:auth?.user?.id, group:auth.groupId};\n              (id?channelMutation.update(newChannel):channelMutation.create(newChannel)).then(v=>navigate(\"Main\", {\n                screen:v.type == 'messenger'?'ChatScreen':'BoardScreen',\n                params:{id:v.id}\n              }))\n            }\n          }}/>\n          <CommonButton title={lang('cancel')} style={{marginHorizontal:5}} onPress={back}/>\n        </View>\n      </View>\n    </View>\n  </ModalSection>\n}\n\nconst styles = StyleSheet.create({\n  field:{\n    width:'50%',\n    flexDirection:'row',\n    padding:10,\n  },\n  separator: {\n    marginBottom: 20,\n    height: 1,\n    width: '100%',\n  },\n})","import React from 'react'\nimport TextButton from \"./TextButton\"\nimport useAuthContext from \"../hooks/useAuthContext\"\nimport useResizeContext from '../hooks/useResizeContext'\nimport { View } from 'react-native'\nimport useModalsContext from '../hooks/useModalsContext'\nimport GuestLogoutModal from '../modals/GuestLogoutModal'\nimport useLangContext from '../hooks/useLangContext'\nimport useColorScheme from '../hooks/useColorScheme'\nimport Colors from '../constants/Colors'\n\ntype ButtonProps = {title:string, onPress:()=>void, windowType?:'landscape'|'portrait'}\n\nexport default (props:{extra?:ButtonProps[]})=>{\n    const { lang } = useLangContext()\n    const theme = useColorScheme()\n    const {auth, dispatch} = useAuthContext()\n    const { setModal } = useModalsContext()\n    const windowType = useResizeContext()\n    const defaultButtonProps:ButtonProps[] = [{title:lang('sign out'), onPress:()=>{\n        if (auth?.user?.username.endsWith(\".guest\")){\n            setModal(GuestLogoutModal, {})\n        }\n        else{\n            dispatch({type:\"LOGOUT_REQUEST\"})\n        }\n    }}]\n    const buttonProps = (props.extra?[...props.extra, ...defaultButtonProps]:defaultButtonProps).filter(v=>v.windowType==windowType || v.windowType == undefined)\n    return<View style={{flexDirection:'row'}}>\n        {buttonProps.map((v,k)=><TextButton key={k} {...v} textStyle={{color:Colors[theme].text}} color='#gray'/>)}\n    </View>\n}\n  ","import { useQuery } from \"react-query\";\nimport { getUserMembershipList } from \"../../apis\";\nimport { Auth } from \"../useAuthContext\";\n\nexport default function useUserMembershipList(auth?:Auth){\n  const { data } = useQuery([\"UserMembershipList\", auth?.groupId] , async()=>auth?.groupId?(await getUserMembershipList(auth?.groupId)):[])\n  return data\n}","import React from 'react';\nimport { TabView, SceneMap,NavigationState, SceneRendererProps, TabBar } from 'react-native-tab-view';\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport useLangContext from '../hooks/useLangContext';\nimport { TabViewRecord } from '../types';\n\n\nexport default (props:{tabs:TabViewRecord, tabBarPosition:\"top\"|\"bottom\", index?:number, onTab?:(index:number)=>void})=>{\n  const { lang } = useLangContext()\n  const [index, setIndex] = React.useState(props.index || 0);\n  const theme = useColorScheme()\n  const entries = Object.entries(props.tabs)\n  const onTab = props.onTab\n  const icons = Object.assign({}, ...entries.map(([k, v])=>({[k]:v.icon})))\n  return <TabView\n    renderTabBar={(props:SceneRendererProps & {navigationState: NavigationState<any>})=>{\n      return <TabBar\n        {...props}\n        indicatorStyle={{ backgroundColor: \"#2196F3\" }}\n        style={{ backgroundColor:Colors[theme].background }}\n        activeColor={Colors[theme].text}\n        inactiveColor={Colors[theme].text}\n        renderIcon={(scene)=>icons[scene.route.key]}\n        onTabPress={(scene)=>onTab?.(entries.findIndex(([k, v])=>k == scene.route.key))}\n      />\n    }}\n    navigationState={{ index, routes: entries.map(([k, v])=>({key:k, title:lang(v.title)}))}}\n    onIndexChange={setIndex}\n    renderScene={SceneMap(Object.assign({}, ...entries.map(([k, v])=>({[k]:v.component}))))}\n    tabBarPosition={props.tabBarPosition}\n  />\n}\n\n","import * as React from 'react';\nimport { View } from './Themed';\nimport { StyleSheet, StyleProp, ViewStyle, TextStyle, Pressable } from 'react-native';\nimport Colors from '../constants/Colors';\n\nexport type ItemParamList = {\n    outerContainerStyle?:StyleProp<TextStyle>\n    containerStyle?:StyleProp<ViewStyle>\n    bodyStyle?:StyleProp<ViewStyle>\n    children?: React.ReactNode\n    onPress?: ()=>void\n}\n\nexport default function CommonItem(props:ItemParamList){\n  // const [hover, setHover] = React.useState(false)\n  const [press, setPress] = React.useState(false)\n  return (\n    <Pressable\n      style={[styles.outerContainer ,props.outerContainerStyle, (press)?{backgroundColor:'rgb(242,242,242)'}:{}]}\n      onPressIn={()=>setPress(true)}\n      onPress={()=>props.onPress?.()}\n      onPressOut={()=>setPress(false)}\n      //  //@ts-ignore\n      //  onHoverIn={()=>setHover(true)}\n      //  onHoverOut={()=>setHover(false)}\n    >\n        <View style={[styles.container ,props.containerStyle]}>\n            <View style={[styles.bodyView, props.bodyStyle]}>\n                <>{props.children}</>\n            </View>\n      </View>\n    </Pressable>\n    )\n}\n\nconst styles = StyleSheet.create({\n  outerContainer:{\n    width:'100%',\n    maxWidth:1080,\n    alignItems:'stretch',\n  },  \n  container: {\n      marginHorizontal:20,\n      backgroundColor:'transparent'\n    },\n    bodyView:{\n      width: '100%',\n      padding: 10,\n      minHeight: 40,\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderBottomWidth:1,\n      borderColor:Colors.borderColor,\n      backgroundColor:'transparent'\n    }\n  });\n  ","import { useEffect } from \"react\"\nimport { InfiniteData, Query, QueryKey, useInfiniteQuery, useMutation, useQueryClient } from \"react-query\"\nimport { getMessengerContentList, postMessage, patchMessengerContent, getNewMessengerContentList } from \"../../apis\"\nimport { MessengerContent } from \"../../types\"\nimport useWebsocketContext from \"../useWebsocketContext\"\n\nexport type MessengerContentPage = {\n  next?:MessengerContentPage\n  current:MessengerContent[]\n}\n\nconst updateContnetPage = (pages:MessengerContentPage[], updateMessages:MessengerContent[])=>{\n  let update_i = 0\n  pages.forEach(page=>{\n    if (update_i == updateMessages.length)\n      return\n    page.current.forEach(v=>{\n      if (update_i == updateMessages.length)\n        return\n      if (v.id==updateMessages[update_i].id){\n        v.timer = updateMessages[update_i].timer\n        v.is_archive = updateMessages[update_i].is_archive\n        update_i += 1\n      }\n    })\n    page.current = page.current.filter(v=>!v.is_archive)\n  })\n}\n\nexport default function useMessengerContentList(channel_id:number){  \n  const queryClient = useQueryClient()\n  const refetch = (query:Query<MessengerContentPage, unknown, InfiniteData<MessengerContentPage>, QueryKey>)=>{\n    const updated_gte = new Date(query.state.dataUpdatedAt).toISOString()\n    const newData = {...query.state.data}\n    getNewMessengerContentList(channel_id, updated_gte).then(contents=>{\n      if(newData.pages){\n        const lastMessageId = newData.pages[0].current[0].id || 0\n        const nextMessages = contents.filter(v=>v.id>lastMessageId && v.is_archive==false)\n        const updateMessages = contents.filter(v=>v.id<=lastMessageId)\n        newData.pages[0].current = [...nextMessages, ...newData.pages[0].current]\n        updateContnetPage(newData.pages, updateMessages)\n      }\n    })\n    return false\n  }\n  const { data, fetchNextPage } = useInfiniteQuery<MessengerContentPage>(\n    [\"MessengerContentList\", channel_id], \n    async({pageParam})=>getMessengerContentList(channel_id, pageParam).then(current=>({current})), \n    {\n      select:data=>{\n        if(data.pages.length > 1)\n          data.pages[data.pages.length - 2].next = data.pages[data.pages.length - 1]\n        return data;\n      },\n      getNextPageParam:(lastPage)=>lastPage?.current.length?lastPage.current[lastPage.current.length - 1].id:undefined,\n      refetchOnReconnect:false,\n      refetchOnWindowFocus:refetch\n    }\n  )\n  const { lastJsonMessage } = useWebsocketContext()\n  useEffect(()=>{\n    if(lastJsonMessage !=null && lastJsonMessage['data']['channel'] == channel_id){\n      if(lastJsonMessage['type']=='next_message'){\n        queryClient.setQueryData<InfiniteData<MessengerContentPage>>([\"MessengerContentList\", channel_id], (_data)=>{\n          if(_data?.pages[0].current && _data?.pages[0].current[0].id != lastJsonMessage['data'].id)\n            _data.pages[0].current = [lastJsonMessage['data'], ..._data?.pages[0].current]\n          return {...(_data || {pages:[], pageParams:[]})}\n        })\n      }\n      if(lastJsonMessage['type']=='update_message'){\n        queryClient.setQueryData<InfiniteData<MessengerContentPage>>([\"MessengerContentList\", channel_id], (_data)=>{\n          _data?.pages && updateContnetPage(_data.pages, [lastJsonMessage['data']])\n          return {...(_data || {pages:[], pageParams:[]})}\n        })\n      }\n    }\n  }, [lastJsonMessage])\n  return { data, fetchNextPage }\n}\n\nexport function useMessengerContentMutation(channelId?:number){\n  // const queryClient = useQueryClient()\n  const create = useMutation(postMessage, {\n    onSuccess: () => {\n      // queryClient.setQueryData(['MessengerContentList'], (data:any) => ({\n      //   pages: data.pages.slice(0, 1),\n      //   pageParams: data.pageParams.slice(0, 1),\n      // }))\n      // queryClient.invalidateQueries(\"MessengerContentList\")\n    }\n  });\n  const _patch = useMutation(patchMessengerContent);\n  return { create:create.mutate, patch:_patch.mutate }\n}","import React from 'react';\nimport useAuthContext from '../hooks/useAuthContext';\nimport CommonButton from '../components/CommonButton';\nimport useModalsContext from '../hooks/useModalsContext';\nimport { Text, View } from '../components/Themed';\nimport useLangContext from '../hooks/useLangContext';\nimport { BottomSheet } from '../components/ModalSection';\nimport useModalEffect from '../hooks/useModalEffect';\n\nexport default function GuestLogoutModal({id}:{id:number}) {\n  const { lang } = useLangContext()\n  const { setModal } = useModalsContext()\n  const {dispatch} = useAuthContext()\n  const back = ()=>{\n    setModal(GuestLogoutModal, null)\n  }\n  useModalEffect(back, [])\n  return <BottomSheet>\n    <Text>{lang('Guest users cannot reconnect after logging out. Please create an account or log in.')}</Text>\n    <View style={{width:'100%', flexDirection:'row', justifyContent:'flex-end'}}>\n      <CommonButton title={lang('sign out')} onPress={()=>dispatch({type:\"LOGOUT_REQUEST\"})}/>\n      <CommonButton title={lang('cancel')} onPress={()=>back()}/>\n    </View>\n  </BottomSheet>\n}\n","import React, { useState } from 'react';\nimport { TextInput } from 'react-native';\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport { CustomTextInputProps } from '../types';\n\nexport default (props:CustomTextInputProps)=>{\n    const [contentHeight, setContentHeight] = useState<number>()\n    const minHeight = props.minHeight || 30\n    const theme = useColorScheme()\n    return <TextInput style={[{\n            borderColor:'#d0d7de', \n            fontSize:16, \n            borderWidth:1, \n            borderRadius:6, \n            paddingHorizontal:10, \n            paddingVertical:3, \n            backgroundColor:Colors[theme].background,\n            color:Colors[theme].text,\n            height:props.multiline?contentHeight:minHeight,\n        }, props.style]}\n        placeholder={props.placeholder}\n        editable={!props.disabled} \n        value={props.value} \n        onChangeText={props.setValue}\n        onContentSizeChange={props.multiline?(e) => setContentHeight(Math.max(e.nativeEvent.contentSize.height, minHeight) + 2):undefined}\n        onBlur={()=>props.onBlur?.(props.value)}\n        onEndEditing={()=>props.onEndEditing?.(props.value)}\n        multiline={props.multiline}\n    />\n}","import React from \"react\"\nimport CommonItem from \"./CommonItem\"\nimport { UserMembership } from \"../types\"\nimport Avatar from \"./Avatar\"\nimport { Text, View } from \"./Themed\"\n\nexport default ({member:item, onPress}:{member:UserMembership, onPress?:()=>void})=> {\n    return <CommonItem key={item.id} bodyStyle={{flexDirection:'row', justifyContent:'flex-start'}} onPress={onPress}>\n        <View style={{marginTop:4, marginRight:12}}><Avatar name={item.name} userId={item.id} size={44}/></View>\n        <Text style={{fontSize:20, fontWeight:'400'}}>{item.name}</Text>\n    </CommonItem>\n}","import React, { Suspense, useState } from 'react';\nimport CommonButton from '../components/CommonButton';\nimport useModalsContext from '../hooks/useModalsContext';\nimport { Text, View } from '../components/Themed';\nimport useLangContext from '../hooks/useLangContext';\nimport { Ionicons } from '../lib/@expo/vector-icons';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport { BottomSheet } from '../components/ModalSection';\nimport dayjs from 'dayjs';\nimport useModalEffect from '../hooks/useModalEffect';\n\nconst dayTypes = ['AM', 'PM'].map(value=>({label:value, value}))\nconst hours = [...Array(12).keys()].map((value, index)=>(index + 1).toString().padStart(2, '0')).map(value=>({label:value, value}))\nconst minutes = [...Array(12).keys()].map((value, index)=>(index * 5).toString().padStart(2, '0')).map(value=>({label:value, value}))\n\n\nconst getDisableDays=(date:dayjs.Dayjs)=>{\n  let startDate = date.clone().startOf('month').add(-1, 'month')\n  const endDate = date.clone().endOf('month').add(1, 'month')\n  const today = dayjs().startOf('day')\n  const result = []\n  while(startDate<=endDate && startDate<today){\n    result.push(startDate.format('YYYY-MM-DD'))\n    startDate = startDate.add(1, 'day')\n  }\n  return result\n}\n\nconst defaultDayjs = ()=>{\n  const m = dayjs()\n  const restMinute = parseInt(m.format('mm')) % 5\n  return m.add(5-restMinute, 'minute')\n}\n\nconst Calendar = React.lazy(()=> import('../components/Calendar'))\nconst CommonPicker = React.lazy(()=>import('../components/CommonPicker'))\n\nexport default function DateTimePickerModal({datetime, callback}:{datetime?:string, callback:(datetime?:string)=>void}) {\n  const _dayjs = datetime?dayjs(datetime):defaultDayjs()\n  const { lang, locale } = useLangContext()\n  const theme = useColorScheme()\n  const [date, setDate] = useState(_dayjs.format('YYYY-MM-DD'));\n  const [dayType, setDayType] = useState(_dayjs.locale('en').format('A'))\n  const [hour, setHour] = useState(_dayjs.format('hh'))\n  const [minute, setMinute] = useState(_dayjs.format('mm'))\n  const [disableDays, setDisableDays] = useState<string[]>(getDisableDays(_dayjs))\n  const { setModal } = useModalsContext()\n  const back = ()=>{\n    setModal(DateTimePickerModal, null)\n  }\n  useModalEffect(back, [])\n  return <BottomSheet>\n    <View style={{flexDirection:'row', width:'100%'}}>\n      <View style={{flex:1, flexDirection:'row'}}>\n        <TouchableOpacity onPress={back}>\n          <Ionicons size={20} name=\"arrow-back\" color={Colors[theme].text}/>\n        </TouchableOpacity>\n      </View>\n      <View style={{flex:1}}>\n        <Text style={{fontSize:20, textAlign:'center'}}>{lang('Date & Time')}</Text>\n      </View>\n      <View style={{flex:1}}/>\n    </View>\n    <View style={{marginBottom: 20, height: 1, width: '100%'}} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />\n    <Suspense fallback={<></>}>\n      <Calendar\n        locale={locale}\n        style={undefined} \n        setDate={setDate}\n        disableAllTouchEventsForDisabledDays={true}\n        onMonthChange={(v)=>setDisableDays(getDisableDays(dayjs(v.dateString)))}\n        markedDates={{\n          ...disableDays.reduce((p, c)=>{p[c]={disabled:true};return p}, {} as Record<string, any>),\n          ...(date?[date]:[]).reduce((p, c)=>{p[c]={selected:true};return p}, {} as Record<string, any>)\n        }}\n      />\n      <View style={{flexDirection:'row', paddingVertical:10, width:400, height:50}}>\n        <CommonPicker value={dayType} setValue={setDayType} values={dayTypes}/>\n        <Text style={{fontSize:20}}> </Text>\n        <CommonPicker value={hour} setValue={setHour} values={hours}/>\n        <Text style={{fontSize:20}}> : </Text>\n        <CommonPicker value={minute} setValue={setMinute} values={minutes}/>\n      </View>\n    </Suspense>\n    <View style={{flexDirection:'row'}}>\n      <CommonButton title={lang('save')} onPress={()=>{\n        callback?.(dayjs(`${date} ${hour}:${minute} ${dayType}`).toISOString())\n        back()\n      }}/>\n      <CommonButton title={lang('cancel')} onPress={()=>{\n        callback?.(undefined)\n        back()\n      }}/>\n      \n    </View>\n  </BottomSheet>\n}\n","import React from 'react';\nimport Clipboard from '@react-native-clipboard/clipboard/dist';\nimport CommonButton from '../components/CommonButton';\nimport useModalsContext from '../hooks/useModalsContext';\nimport { Text, View } from '../components/Themed';\nimport useLangContext from '../hooks/useLangContext';\nimport { BottomSheet } from '../components/ModalSection';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport Colors from '../constants/Colors';\nimport { Ionicons } from '../lib/@expo/vector-icons';\nimport useColorScheme from '../hooks/useColorScheme';\nimport { useMessengerContentMutation } from '../hooks/lists/useMessengerContentList';\nimport useModalEffect from '../hooks/useModalEffect';\n\nexport default function MessageModal({id,  content, isOwner, isTimer}:{id:number, content:string, isOwner:boolean, isTimer:boolean}) {\n  const { lang } = useLangContext()\n  const { setModal } = useModalsContext()\n  const theme = useColorScheme()\n  const contentMutation = useMessengerContentMutation()\n  const back = ()=>{\n    setModal(MessageModal, null)\n  }\n  useModalEffect(back, [])\n  return <BottomSheet>\n    <View style={{flexDirection:'row', width:'100%'}}>\n      <View style={{flex:1, flexDirection:'row'}}>\n        <TouchableOpacity onPress={back}>\n          <Ionicons size={20} name=\"arrow-back\" color={Colors[theme].text}/>\n        </TouchableOpacity>\n      </View>\n      <View style={{flex:1}}>\n        <Text style={{fontSize:20, textAlign:'center'}}>{lang('Message')}</Text>\n      </View>\n      <View style={{flex:1}}/>\n    </View>\n    <View style={{marginBottom: 20, height: 1, width: '100%'}} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />\n      <CommonButton style={{height:40, width:'100%', maxWidth:320, justifyContent:'center'}} title={lang('copy')} onPress={()=>{Clipboard.setString(content);back()}}/>\n      {isOwner && isTimer && <CommonButton style={{height:40, width:'100%', maxWidth:320, justifyContent:'center'}} textStyle={{color:'red'}} title={lang('delete timer')} onPress={()=>{contentMutation.patch({id, timer:null});back()}}/>}\n      {isOwner && <CommonButton style={{height:40, width:'100%', maxWidth:320, justifyContent:'center'}} textStyle={{color:'red'}} title={lang('delete')} onPress={()=>{contentMutation.patch({id, is_archive:true});back()}}/>}\n  </BottomSheet>\n}\n","import React, { useEffect } from 'react';\nimport Profile from '../components/Profile';\nimport useAuthContext from '../hooks/useAuthContext';\nimport useUserMembershipList from '../hooks/lists/useUserMembershipList';\nimport { useMessengerChannelMutation } from '../hooks/lists/useMessengerChannelList';\nimport CommonButton from '../components/CommonButton';\nimport { Channel } from '../types';\nimport { navigate } from '../navigation';\nimport useModalsContext from '../hooks/useModalsContext';\nimport { Text, View } from '../components/Themed';\nimport useLangContext from '../hooks/useLangContext';\nimport { Ionicons } from '../lib/@expo/vector-icons';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport { BottomSheet } from '../components/ModalSection';\nimport useModalEffect from '../hooks/useModalEffect';\n\nexport default function ProfileModal({id}:{id:number}) {\n  const { lang } = useLangContext()\n  const theme = useColorScheme()\n  const {auth} = useAuthContext()\n  const { setModal } = useModalsContext()\n  const userList = useUserMembershipList(auth)\n  const user = userList?.find(v=>v.id==id)\n  const isSelf = auth.user && user && (auth.user?.id==user?.id)\n  const channelMutation = useMessengerChannelMutation()\n  const back = ()=>{\n    setModal(ProfileModal, null)\n  }\n  useEffect(()=>{\n    if (!(id && user) && userList)\n      back()\n  }, [userList])\n  useModalEffect(back, [])\n  return user?<BottomSheet>\n    <View style={{flexDirection:'row', width:'100%'}}>\n      <View style={{flex:1, flexDirection:'row'}}>\n        <TouchableOpacity onPress={back}>\n          <Ionicons size={20} name=\"arrow-back\" color={Colors[theme].text}/>\n        </TouchableOpacity>\n      </View>\n      <View style={{flex:1}}>\n        <Text style={{fontSize:20, textAlign:'center'}}>{lang('profile')}</Text>\n      </View>\n      <View style={{flex:1}}/>\n    </View>\n    <View style={{marginBottom: 20, height: 1, width: '100%'}} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />\n    \n    <Profile username={user.username} name={user.name} userId={user.id} />\n    <CommonButton title={lang(isSelf?'Chat with me':'1:1 Chat')} onPress={()=>{\n      if(auth?.user?.id && auth.groupId){\n        const newChannel:Channel = {name:\"\", type:'messenger', owner:auth?.user?.id, group:auth.groupId, subowner:isSelf?undefined:user.id};\n        channelMutation.direct(newChannel).then(v=>navigate(\"Main\", {screen:\"ChatScreen\", params: {id:v.id}}))\n      }\n    }}/>\n  </BottomSheet>:<></>\n}\n","import React from 'react';\nimport {View} from 'react-native'\nimport {Text} from './Themed';\nimport { ProfileProps } from '../types';\nimport Avatar from './Avatar';\nimport TextButton from './TextButton';\nimport CommonTextInput from './CommonTextInput';\nimport { patchUser } from '../apis';\nimport useAuthContext from '../hooks/useAuthContext';\n\nexport default (props:ProfileProps)=>{\n    const [name, setName] = React.useState<string>()\n    const { auth, dispatch } = useAuthContext()\n    const isSelf = auth.user?.id == props.userId\n    const onChange = ()=>{\n        isSelf && patchUser({id:props.userId, name:name || ''}).finally(()=>{\n            setName(undefined)\n            dispatch({type:\"REFRESH\"})\n        })\n    }\n    return <View style={{width:'100%', height:135, justifyContent:'space-evenly', alignItems:'center'}}>\n        <Avatar {...props} size={75}/>\n        {isSelf?\n        (name===undefined?\n            <TextButton textStyle={{fontWeight:'bold', fontSize:15}} onPress={()=>setName(props.name)} title={props.name}/>:\n            <CommonTextInput value={name} style={{textAlign:'center'}} setValue={setName} onBlur={onChange} onEndEditing={onChange} />\n        ):<Text style={{fontWeight:'bold', fontSize:15}}>{props.name}</Text>}\n        <Text style={{fontWeight:'normal', fontSize:14}}>{props.username}</Text>\n    </View>\n}","import React, { useState,  useEffect, createContext, useMemo, useRef, useContext } from \"react\"\nimport firebase from \"firebase/app\";\nimport \"firebase/messaging\";\nimport {FCM_PUBLIC_VAPID_KEY, FCM_API_KEY} from \"../constants/Envs\"\nimport { Notification as NotificationType, UserMembership } from \"../types\";\nimport { getNotification, postNotification, putNotification } from \"../apis/notification\";\n\nconst firebaseConfig = require(\"../../web/firebase-config.js\")\n// Initialize Firebase\nconst key = firebaseConfig.messagingSenderId\nconst apiKeyEncrypted = (FCM_API_KEY as string).split('').map((v, i)=> (v.charCodeAt(0) ^ key.charCodeAt(i)).toString(16).padStart(2, '0')).join('')\nconst app = firebase.initializeApp({...firebaseConfig, apiKey:FCM_API_KEY});\n// const analytics = getAnalytics(app);\nconst messaging = firebase.messaging(app);\n\nmessaging.onMessage((payload) => {\n  if (!(\"Notification\" in window)) {\n    alert(\"This browser does not support desktop notification\");\n  }\n  else if (Notification.permission === \"granted\") {\n    const message_set = JSON.parse(payload.data['message_set'])[0]\n    new Notification(payload.data.channel_name, { body: `${payload.data.name}: ${message_set.content}` });\n  }\n});\n\nconst requestToken = async()=>{\n  const permission = await Notification.requestPermission();\n  if (permission === 'granted') {\n    const serviceWorkerRegistration = await navigator.serviceWorker.register(`${process.env.PUBLIC_URL}/firebase-messaging-sw.js?${apiKeyEncrypted}`)\n    console.log('[SW]: SCOPE: ', serviceWorkerRegistration.scope);\n    const currentToken = await messaging.getToken({serviceWorkerRegistration, vapidKey: FCM_PUBLIC_VAPID_KEY }).catch(\n      async()=>await messaging.getToken({serviceWorkerRegistration, vapidKey: FCM_PUBLIC_VAPID_KEY })\n    )\n    window.addEventListener('beforeunload', (event:any) => {\n      event.preventDefault();\n      serviceWorkerRegistration.unregister()\n    });\n    if (currentToken)\n      return currentToken\n  }\n  return null\n}\n\nconst FirebaseContext = createContext<{enable?:boolean, setEnable:(enable:boolean)=>void}>({setEnable:()=>{}});\n\nexport const FirebaseProvider = ({user, children}:{user?:UserMembership|null, children:React.ReactNode})=>{\n  const tokenRef = useRef<string|null>()\n  const [notification, setNotification] = useState<NotificationType|null>()\n  const enable = useMemo(()=>notification===undefined?undefined:(notification?.token?true:false), [notification])\n  const setEnable = (enable:boolean)=>{\n    if(user && notification){\n      putNotification({...notification, token:enable?(tokenRef.current==undefined?null:tokenRef.current):null}).then((noti)=>{\n        setNotification(noti)\n      })\n    }\n  }\n  useEffect(()=>{\n    let isMount = true;\n    if(user){\n      requestToken().then((t)=>{\n        tokenRef.current = t\n        if (notification){\n          putNotification({...notification, token:tokenRef.current}).then((noti)=>{\n            if(isMount)setNotification(noti)\n          })\n        }\n      });\n      getNotification(user.id).then((noti)=>{\n        if(isMount)setNotification(noti || null)\n      })\n    }\n    return ()=>{isMount=false}\n  }, [user])\n  useEffect(()=>{\n    let isMount = true;\n    if(user && notification !== undefined){\n      if(notification===null){\n        postNotification({user:user.id, type:'WEB', token:null}).then((noti)=>{\n          if(isMount)setNotification(noti)\n        })\n      }\n      else if (notification.token && tokenRef.current && tokenRef.current != notification.token){\n        putNotification({...notification, token:tokenRef.current}).then((noti)=>{\n          if(isMount)setNotification(noti)\n        })\n      }\n    }\n    return ()=>{isMount=false}\n  })\n  return <FirebaseContext.Provider value={{enable, setEnable}}>\n    {(enable!=undefined || user===null) && children}\n  </FirebaseContext.Provider>\n}\n\nexport default ()=>{\n  const {enable, setEnable} = useContext(FirebaseContext)\n  return {enable, setEnable}\n}\n","import React from 'react'\nimport { View, StyleSheet, Linking, Platform } from 'react-native'\nimport { TouchableOpacity } from 'react-native-gesture-handler'\nimport { AntDesign } from '../lib/@expo/vector-icons'; \nimport useColorScheme from '../hooks/useColorScheme';\nimport Colors from '../constants/Colors';\n\nconst openURL = Platform.OS=='web'?(url:string)=>{location.href=url}:Linking.openURL\n\nexport default (props:{theme:'light'|'dark'})=>{\n    return<View style={Styles.footer_buttons}>\n        <TouchableOpacity style={Styles.footer_button} onPress={()=>openURL(\"https://github.com/blacktokki/tokki-tok\")}>\n            <AntDesign name=\"github\" size={24} color={Colors[props.theme].iconColor} />\n        </TouchableOpacity>\n        <TouchableOpacity style={Styles.footer_button} onPress={()=>Linking.openURL(\"mailto:ydh051541@naver.com\")}>\n            <AntDesign name=\"mail\" size={24} color={Colors[props.theme].iconColor} />\n        </TouchableOpacity>\n    </View>\n}\n\nconst Styles = StyleSheet.create({\n      footer_buttons: {\n        width: '100%',\n        flexDirection: 'row',\n        justifyContent: 'flex-end',\n        paddingBottom: 20,\n        paddingRight: 20,\n      },\n      footer_button: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: 38,\n        height: 38,\n        marginHorizontal: 12,\n        borderWidth: 1,\n        borderColor: '#E7E7E7',\n        borderRadius: 60,\n      },\n})","import React, {useLayoutEffect, useState} from 'react';\nimport {\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n  StyleSheet,\n} from 'react-native';\nimport { StackScreenProps } from '@react-navigation/stack';\nimport useAuthContext from '../../hooks/useAuthContext';\nimport useLangContext from '../../hooks/useLangContext';\nimport ContractFooter from '../../components/ContractFooter';\n\nexport default function LoginScreen({\n  navigation, route\n}: StackScreenProps<any, 'Login'>) {\n  const { lang } = useLangContext()\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const {error, dispatch} = useAuthContext()\n  const _login = ()=>dispatch({type:'LOGIN_REQUEST', username, password})\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      headerRight: undefined\n    });\n  }, [navigation, route]);\n\n  return (<View style={Styles.login_container}>\n    <View style={Styles.login_wrapper}>\n      <View style={Styles.form}>\n        {error && <View style={Styles.form_error}>\n          <Text style={Styles.form_error_text}>{lang(error)}</Text>\n        </View>}\n        <TextInput\n          style={Styles.form_input}\n          value={username}\n          placeholder={lang('Username')}\n          onChangeText={(text) => setUsername(text)}\n          autoCapitalize={'none'}\n          keyboardType={'email-address'}\n          onSubmitEditing={_login}\n        />\n        <TextInput\n          style={Styles.form_input}\n          value={password}\n          placeholder={lang('Password')}\n          secureTextEntry\n          onChangeText={(text) => setPassword(text)}\n          onSubmitEditing={_login}\n        />\n        <TouchableOpacity onPress={_login}>\n          <View style={Styles.button}>\n            <Text style={Styles.button_label}>{lang('Sign in')}</Text>\n          </View>\n        </TouchableOpacity>\n        <TouchableOpacity onPress={() => dispatch({type:\"LOGIN_GUEST\"})}>\n          <Text style={Styles.guest_footer_text}>\n            {lang(\"Sign in as guest\")}\n          </Text>\n        </TouchableOpacity>\n      </View>\n      <View style={Styles.login_social}>\n        <View style={Styles.login_social_separator}>\n          <View style={Styles.login_social_separator_line} />\n          <Text style={Styles.login_social_separator_text}>{'*'}</Text>\n          <View style={Styles.login_social_separator_line} />\n        </View>\n        <View style={Styles.login_social_buttons}>\n        </View>\n      </View>\n      {/* <>\n        <TouchableOpacity onPress={() => navigate(\"RegistrationScreen\")}>\n          <Text style={Styles.login_footer_text}>\n            {\"Don't have an account? \"}\n            <Text style={Styles.login_footer_link}>{'Sign up'}</Text>\n          </Text>\n        </TouchableOpacity>\n      </> */}\n    </View>\n    <ContractFooter theme='light'/>\n  </View>);\n};\n\nconst Styles = StyleSheet.create({\n    login_container: {\n      flex: 1,\n      backgroundColor: '#FFF',\n    },\n    login_header: {\n      alignItems: 'center',\n      paddingTop: 30,\n      paddingBottom: 50,\n      backgroundColor: '#208AEC',\n    },\n    login_header_logo: {\n      width: 220,\n      resizeMode: 'contain',\n    },\n    login_header_text: {\n      marginTop: 15,\n      color: '#f0f0f0',\n      fontSize: 16,\n    },\n    login_header_text_bold: {\n      color: '#fff',\n      fontWeight: 'bold',\n    },\n    login_wrapper: {\n      flex: 1,\n      justifyContent: 'space-between',\n      paddingTop: 40,\n      borderTopRightRadius: 12,\n      borderTopLeftRadius: 12,\n      backgroundColor: '#fff',\n      alignItems: 'center',\n    },\n    form: {\n      width: '100%',\n      maxWidth: 320,\n    },\n    form_error: {\n      height: 22,\n      width:'100%',\n    },\n    form_error_text:{\n      textAlignVertical:'center',\n      color:'red',\n      fontSize:13,\n    },\n    form_input: {\n      height: 44,\n      paddingHorizontal: 20,\n      marginBottom: 20,\n      backgroundColor: '#EDF0F7',\n      borderRadius: 50,\n    },\n    button: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: 44,\n      backgroundColor: '#0065A4',\n      borderRadius: 50,\n    },\n    button_label: {\n      color: '#fff',\n      fontSize: 16,\n    },\n    login_social: {\n      width: '100%',\n      maxWidth: 280,\n      marginTop: 20,\n    },\n    login_social_separator: {\n      flexDirection: 'row',\n      alignItems: 'center',\n    },\n    login_social_separator_line: {\n      flex: 1,\n      width: '100%',\n      height: 1,\n      backgroundColor: '#E0E0E0',\n    },\n    login_social_separator_text: {\n      marginHorizontal: 10,\n      color: '#808080',\n      fontSize: 16,\n    },\n    login_social_buttons: {\n      flexDirection: 'row',\n      justifyContent: 'center',\n      marginTop: 20,\n    },\n    login_social_button: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: 60,\n      height: 60,\n      marginHorizontal: 12,\n      borderWidth: 1,\n      borderColor: '#E7E7E7',\n      borderRadius: 60,\n    },\n    login_social_icon: {\n      width: 38,\n      height: 38,\n      resizeMode: 'contain',\n    },\n    login_social_facebook: {\n      backgroundColor: '#4267B2',\n      borderColor: '#4267B2',\n    },\n    login_footer_text: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      color: '#808080',\n      fontSize: 14,\n    },\n    guest_footer_text: {\n      flexDirection: 'row',\n      alignSelf: 'center',\n      color: '#808080',\n      fontSize: 15,\n      margin: 15\n    },\n    login_footer_link: {\n      color: '#208AEC',\n      fontSize: 15,\n      fontWeight: 'bold',\n    },\n  });\n  ","import React from 'react'\nimport { Image, Linking } from \"react-native\"\nimport { TouchableOpacity } from \"react-native-gesture-handler\"\nimport CommonSection from \"./CommonSection\"\nimport { View, Text } from \"./Themed\"\nimport { Link } from \"../types\"\n\n\n\nexport default ({link, isMobile}:{link:Link, isMobile:boolean})=>{\n    return <CommonSection containerStyle={{marginHorizontal:0}} bodyStyle={{padding:0}}>\n    <TouchableOpacity \n        onPress={()=>Linking.openURL(link.url)}\n        onLongPress={()=>{}}\n        style={{width:'100%', flexDirection:'row'}}\n    >\n        {link.image?<Image source={{uri:link.image}} resizeMode=\"cover\" style={{ width:'100%', maxWidth:isMobile?120:150, maxHeight:isMobile?120:150, borderWidth:1}}/>:undefined}\n        <View style={{flex:1, marginHorizontal:20}}>\n            <Text style={{fontSize:18}}>{link.title}</Text>\n            <Text style={{fontSize:14}}>{link.description}</Text>\n            <Text style={{fontSize:12}}>{link.url}</Text>\n        </View>\n    </TouchableOpacity>\n    </CommonSection>\n}","import React, { createContext, useContext } from \"react\"\nimport { SendJsonMessage } from \"react-use-websocket/dist/lib/types\";\nimport { WebSocketInternalProvider } from \"../../hooks/useWebsocketContext\";\n\nconst WebSocketContext = createContext<{lastJsonMessage:any, sendJsonMessage:SendJsonMessage }>({lastJsonMessage:undefined, sendJsonMessage:()=>{}});\n\nexport const WebSocketProvider = ({disable, children}:{disable?:boolean, children:React.ReactNode})=>{\n  return disable?<></>:<WebSocketInternalProvider path={'messenger/ws/rtc/'} Context={WebSocketContext} useBackground>\n    {children}\n  </WebSocketInternalProvider>\n}\n\nexport default ()=>{\n  const webSocketContext = useContext(WebSocketContext)\n  return webSocketContext\n}\n\n","import React, { useCallback, useRef, useState, useMemo } from \"react\";\n//@ts-ignore\nimport { RTCView, mediaDevices, RTCPeerConnection, MediaStream, RTCSessionDescription, RTCIceCandidate } from \"react-native-webrtc-web-shim\";\nimport {TURN_SERVER} from \"../../../constants/Envs\"\n\n\nconsole.log(TURN_SERVER?\"use turn server\": \"use stun server\")\n\nexport const peerConstraints = {\n\ticeServers: [TURN_SERVER?JSON.parse(TURN_SERVER):{urls: 'stun:stun.l.google.com:19302'}]\n};\n\nexport const sessionConstraints = {\n\tmandatory: {\n\t\tOfferToReceiveAudio: true,\n\t\tOfferToReceiveVideo: true,\n\t\tVoiceActivityDetection: true\n\t}\n};\n\nconst mediaConstraints = {audio:true, video:{framerate:30}}\n\n//@ts-ignore\nexport {MediaStream, RTCPeerConnection, RTCSessionDescription} from \"react-native-webrtc-web-shim\";\n\nconst onICEcandidate = (pc:typeof RTCPeerConnection, message:any)=>{\n\tconst _message = message.data.rtcMessage\n\t\tconst candidate = new RTCIceCandidate(_message);\n\t\tif (pc) {\n\t\t\tconsole.log(\"ICE candidate Added\");\n\t\t\tpc.addIceCandidate(candidate);\n\t\t}\n}\n\nconst sendICEcandidate = (event:any, sendMessage:(data:any)=>void, receiver:string, target:string) => {\n\t// When you find a null candidate then there are no more candidates.\n\t// Gathering of candidates has finished.\n\tif ( !event.candidate ) { return; };\n\t// Send the event.candidate onto the person you're calling.\n\t// Keeping to Trickle ICE Standards, you should send the candidates immediately.\n\tsendMessage({type:'ICEcandidate', receiver, data:{target, rtcMessage:event.candidate}})\n  }\n\nconst BAND_WIDTH = 8000\n\nconst optimizeSdp = (offerDescription:RTCSessionDescription)=>{\n\tvar arr = offerDescription.sdp.split('\\r\\n');\n\tarr.forEach((str:string, i:number) => {\n\t\tif (/^a=fmtp:\\d*/.test(str)) {\n\t\t\tarr[i] = str + `;x-google-max-bitrate=${BAND_WIDTH};x-google-min-bitrate=${BAND_WIDTH};x-google-start-bitrate=${BAND_WIDTH}`;\n\t\t} else if (/^a=mid:(0|video)/.test(str)) { // if with audio then 0=>1\n\t\t\tarr[i] += `\\r\\nb=AS:${BAND_WIDTH}`;\n\t\t}\n\t});\n  \treturn new RTCSessionDescription({\n    \ttype: offerDescription.type,\n    \tsdp: arr.join('\\r\\n'),\n  \t})\n}\n\nconst createOffer = async(pcRefCurrent:{pc?:typeof RTCPeerConnection, receiver:string}, sendMessage:(data:any)=>void, stream:typeof MediaStream, target:string, user?:{name:string})=>{\n\tstream && pcRefCurrent.pc.addStream( stream );\n\tconst offerDescription = optimizeSdp((await pcRefCurrent.pc.createOffer( sessionConstraints )));\n\tawait pcRefCurrent.pc.setLocalDescription( offerDescription );\n\tsendMessage({type:'call', receiver:pcRefCurrent.receiver, data:{target, name:user?.name, rtcMessage:offerDescription}})\n}\n\nexport const useLocalCam = (sendMessage:(data:any)=>void)=>{\n\tconst pcRef = useRef<Record<number,{pc:typeof RTCPeerConnection, receiver:string}>>({})\n\tconst [sender, setSender] = useState<string>()\n\tconst [_stream, setStream] = useState<MediaStream>()\n\tconst isPlay = useMemo(()=>_stream?true:false, [_stream])\n\tconst CustomRTCView = useCallback(React.memo(({style}:{style:any})=>(_stream?<RTCView stream={_stream} style={style} videoProps={{height:'100%'}} />:<></>)) , [_stream])\n\tconst start = useCallback(async(user:{name:string}, stream?:typeof MediaStream, mode?:'camera'|'display')=>{\n\t\tconsole.log(\"start\");\n\t\tif (!_stream || mode!==undefined) {\n\t\t\ttry {\n\t\t\t\tlet newStream:typeof MediaStream;\n\t\t\t\tif(mode == 'camera'){\n\t\t\t\t\tnewStream = await mediaDevices.getUserMedia(mediaConstraints)\n\t\t\t\t}\n\t\t\t\telse if (mode == 'display'){\n\t\t\t\t\tnewStream = await mediaDevices.getDisplayMedia(mediaConstraints)\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tnewStream = stream || await mediaDevices.getUserMedia(mediaConstraints).catch((e:any)=>mediaDevices.getDisplayMedia(mediaConstraints));\n\t\t\t\t}\n\t\t\t\tsetStream(newStream)\n\t\t\t\tObject.entries(pcRef.current).map(([k, v])=>{\n\t\t\t\t\tcreateOffer(v, sendMessage, newStream, 'guest', user)\n\t\t\t\t})\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e);\n\t\t\t}\n\t\t}\n\t}, [_stream])\n\tconst stop = useCallback(()=>{\n\t\tconsole.log(\"stop\");\n\t\tif(_stream){\n\t\t\t_stream.getTracks().map((track:any) => track.stop());\n\t\t\tsetStream(undefined)\n\t\t}\n\t}, [_stream])\n\treturn {\n\t\tstart,\n\t\tstop,\n\t\twebsocketOnMessage: async(response:any, user:{name:string})=>{\n\t\t\tlet type = response.type;\n\t\t\tif (type == 'connection'){\n\t\t\t\tsetSender(response.data.channel_name)\n\t\t\t}\n\t\t\tif (type == 'start' && response.data.target=='host'){\n\t\t\t  console.log('1 start')\n\t\t\t  const peerConnection = new RTCPeerConnection( peerConstraints );\n\t\t\t  peerConnection.addEventListener( 'icecandidate', (event:any) => sendICEcandidate(event, sendMessage, response.sender, 'guest'));\n\t\t\t  pcRef.current[response.sender] = {pc:peerConnection, receiver: response.sender}\n\t\t\t  createOffer(pcRef.current[response.sender], sendMessage, _stream, 'guest', user)\n\t\t\t}\n\t\t\t\n\t\t\tif (type == \"answer\" && response.data.target == 'host'){\n\t\t\t  console.log('3 answer')\n\t\t\t  const peerConnection = pcRef.current[response.sender].pc\n\t\t\t  const answerDescription = new RTCSessionDescription(response.data.rtcMessage);\n\t\t\t  await peerConnection.setRemoteDescription( answerDescription );\n\t\t\t  // const streams = pcRef.current.pc.getRemoteStreams()\n\t\t\t  // setMirrorStream(streams[streams.length - 1])\n\t\t\t}\n\t\t\tif (type == \"ICEcandidate\" && response.data.target=='host'){\n\t\t\t\tconst peerConnection = pcRef.current[response.sender].pc\n\t\t\t\tonICEcandidate(peerConnection, response)\n\t\t\t}\n\t\t},\n\t\tCustomRTCView,\n\t\tisPlay,\n\t\tsender,\n\t\t// renderMirrorView,\n\t}\n}\n\nexport const useRemoteCam = (sendMessage:(data:any)=>void)=>{\n\tconst pcRef = useRef<{pc?:RTCPeerConnection, receiver?:string, statsInterval?:any}>({})\n\tconst [user, setUser] = useState<{name:string}>()\n\tconst [_stream, setStream] = useState<MediaStream>()\n\tconst CustomRTCView = useCallback(React.memo((style:any)=>_stream?<RTCView stream={_stream} style={style} videoProps={{height:'100%'}} />:<></>), [_stream])\n\tconst isPlay = useMemo(()=>_stream?true:false, [_stream])\n\tconst start = useCallback((receiver:string)=>{\n\t\tconsole.log(\"start\");\n\t\tif (!pcRef.current.pc) {\n\t\t  pcRef.current.pc = new RTCPeerConnection( peerConstraints );\n\t\t  pcRef.current.receiver = receiver\n\t\t}\n\t\tif (!_stream){\n\t\t\tsendMessage({type:'start', receiver, data:{'target': 'host'}})\n\t\t}\n\t}, [_stream])\n\tconst stop = () => {\n\t\tconsole.log(\"stop\");\n\t\tif (pcRef.current.pc) {\n\t\t  // peerConnection._unregisterEvents();\n\t\t  setStream(undefined)\n\t\t  pcRef.current.pc.close();\n\t\t  pcRef.current.pc = undefined\n\t\t  pcRef.current.receiver = undefined\n\t\t  clearInterval(pcRef.current.statsInterval)\n\t\t}\n\t}\n\treturn {\n\t\tstart,\n\t\tstop,\n\t\twebsocketOnMessage: async(response:any)=>{\n\t\t\tlet type = response.type;\n\t\t\tif (type == 'start' && response.data.target=='guest' && response.sender == pcRef.current?.receiver){\n\t\t\t\tconsole.log('(remote)1 start')\n\t\t\t\tconst peerConnection = pcRef.current.pc\n\t\t\t\tsetUser({name: response.data.name})\n\t\t\t\tpeerConnection.addEventListener('icecandidate', (event:any) => sendICEcandidate(event, sendMessage, response.sender, 'host'));\n\t\t\t\tpeerConnection.addEventListener('iceconnectionstatechange', (e:any)=>{\n\t\t\t\t\tif (pcRef.current.pc.iceConnectionState == 'connected'){\n\t\t\t\t\t\tlet activeStream = false\n\t\t\t\t\t\tpcRef.current.statsInterval = setInterval(async()=>{\n\t\t\t\t\t\t\tconst stats = await pcRef.current.pc.getStats(null)\n\t\t\t\t\t\t\tlet statsOutput = \"\";\n\t\t\t\t\t\t\tlet framePerSecond = undefined\n\t\t\t\t\t\t\tstats.forEach((report:any) => {\n\t\t\t\t\t\t\t\tif (report.type === \"inbound-rtp\" && report.kind === \"video\") {\n\t\t\t\t\t\t\t\t\tObject.keys(report).forEach((statName) => {\n\t\t\t\t\t\t\t\t\t\tstatsOutput += `${statName}: ${report[statName]}\\n`;\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tframePerSecond = report.framesPerSecond\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tconsole.log(activeStream, framePerSecond)\n\t\t\t\t\t\t\tif (framePerSecond != undefined){\n\t\t\t\t\t\t\t\tactiveStream = true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (activeStream){\n\t\t\t\t\t\t\t\tstop()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconsole.log(new Date().toTimeString().split(' ')[0], statsOutput)\n\t\t\t\t\t\t}, 1000);\n\t\t\t\t\t}\n\t\t\t\t\telse if (pcRef.current.pc.iceConnectionState == 'failed'){\n\t\t\t\t\t\tstop()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t// peerConnection.addTransceiver('audio', {\n\t\t\t\t// \tdirection: 'recvonly'\n\t\t\t\t// });\n\t\t\t\tpeerConnection.addTransceiver('video', {\n\t\t\t\t\tdirection: 'recvonly'\n\t\t\t\t});\n\t\t\t\tawait createOffer({pc:pcRef.current.pc, receiver:response.sender}, sendMessage, _stream, 'host', user)\n\t\t\t}  \n\t\t\tif (type == \"answer\" && response.data.target=='guest' && response.sender == pcRef.current?.receiver){\n\t\t\t\tconsole.log('(remote)3 answer')\n\t\t\t\tconst answerDescription = new RTCSessionDescription(response.data.rtcMessage);\n\t\t\t\tawait pcRef.current.pc.setRemoteDescription( answerDescription );\n\t\t\t\tconst streams = pcRef.current.pc.getRemoteStreams()\n\t\t\t\tsetStream(streams[streams.length - 1])\n\t\t\t\tsendMessage({type:'end', receiver:pcRef.current.receiver, data:{}})\n\t\t\t}\n\t\t\tif (type == \"call\" && response.sender == pcRef.current?.receiver){\n\t\t\t  console.log('2 call')\n\t\t\t  const peerConnection = pcRef.current.pc\n\t\t\t  setUser({name:response.data.name})\n\t\t\t  if (!peerConnection)\n\t\t\t\treturn\n\t\t\t  peerConnection.addEventListener( 'icecandidate', (event:any) => sendICEcandidate(event, sendMessage, response.sender, 'host'));\n\t\t\t  const offerDescription = new RTCSessionDescription(response.data.rtcMessage);\n\t\t\t  await peerConnection.setRemoteDescription( offerDescription );\n\t\t\t  const answerDescription = await peerConnection.createAnswer( sessionConstraints );\n\t\t\t  await peerConnection.setLocalDescription( answerDescription );\n\t\t\t  sendMessage({type:'answer', receiver:pcRef.current.receiver, data:{target:'host', rtcMessage:peerConnection.localDescription}})\n\t\t\t  // Here is a good place to process candidates.\n\t\t\t  const streams = pcRef.current.pc.getRemoteStreams()\n\t\t\t  setStream(streams[streams.length - 1])\n\t\t\t}\n\t\t\tif (type == \"ICEcandidate\" && response.data.target=='guest' && response.sender == pcRef.current?.receiver)\n\t\t\t  onICEcandidate(pcRef.current.pc, response)\n\t\t},\n\t\tCustomRTCView,\n\t\tuser,\n\t\tisPlay\n\t}\n}","import {StyleSheet} from \"react-native\";\nexport {useLocalCam, useRemoteCam} from \"./p2p\"\n\nexport const camStyle = StyleSheet.create({\n\tcontainer:{ flex: 1},\n\tcam:{ flex: 1, height:'100%'},\n\tbottonContainer: {position:\"absolute\", bottom:0, justifyContent:'flex-end'},\n\tbuttonBar: { flexDirection: \"row\", justifyContent: \"space-around\" },\n\tlabel: {backgroundColor:'#0008', color:'white', paddingHorizontal:5},\n})","import React, { useEffect } from \"react\";\nimport {Button, View, Text} from \"react-native\";\nimport useWebsocketContext from \"./useWebsocketContext\";\nimport { useLocalCam, camStyle} from \"./webrtc\";\n\n\nexport default (props:{user?:{name:string}|null, mode?:'camera'|'display'|null})=>{\n  const {lastJsonMessage, sendJsonMessage} = useWebsocketContext()\n  const {start, stop, websocketOnMessage, CustomRTCView, isPlay} = useLocalCam(sendJsonMessage)\n  useEffect(()=>{\n    props.user && lastJsonMessage && websocketOnMessage(lastJsonMessage, props.user)\n  }, [lastJsonMessage, props.user])\n  useEffect(()=>{\n    if(props.mode && !isPlay){\n      props.user && start(props.user, undefined, props.mode)\n    }\n    else if(props.mode===null && isPlay){\n      stop()\n    }\n    return ()=>{isPlay && stop()}\n  }, [isPlay, props.user, props.mode])\n  return (\n    <View style={camStyle.container}>\n      <CustomRTCView style={camStyle.cam}/>\n      <View style={camStyle.bottonContainer}>\n        <View style={camStyle.buttonBar}>  \n        </View>\n        <View style={{flexDirection:'row'}}><Text style={camStyle.label}>{props.user?.name}</Text></View>\n        <View style={camStyle.buttonBar}>\n          {props.mode === undefined && !isPlay && <Button title=\"Start\" onPress={()=>props.user && start(props.user)} />}\n          {props.mode === undefined && isPlay && <Button title=\"Stop\" onPress={stop} />}\n        </View>\n      </View>\n    </View>\n  );\n}\n","import React, { useState, useEffect, } from \"react\";\nimport {Button,Text, TextInput, View} from \"react-native\";\nimport useWebsocketContext from \"./useWebsocketContext\";\nimport { useRemoteCam, camStyle} from \"./webrtc\";\n\nexport default (props:{receiver?:string})=>{\n  const [receiver, setReceiver] = useState('')\n  const {lastJsonMessage, sendJsonMessage} = useWebsocketContext()\n  const {start, stop, websocketOnMessage, CustomRTCView, isPlay, user} = useRemoteCam(sendJsonMessage)\n  useEffect(()=>{\n    lastJsonMessage && websocketOnMessage(lastJsonMessage)\n  }, [lastJsonMessage])\n  useEffect(()=>{\n    if(props.receiver){\n      start(props.receiver)\n    }\n    return ()=>stop()\n  }, [props.receiver])\n  return (\n    <View style={camStyle.container}>\n      <CustomRTCView style={camStyle.cam}/>\n      <View style={camStyle.bottonContainer}>\n        <View style={camStyle.buttonBar}>\n        </View>\n        <View style={{flexDirection:'row'}}>{\n          (props.receiver || isPlay)?\n          <Text style={camStyle.label}>{user?.name || 'loading...'}</Text>:\n          <>\n            <Text style={{borderWidth:1}}>Receiver:&nbsp;</Text>\n            <TextInput style={{borderWidth:1, flex:1}} value={receiver} onChangeText={setReceiver}/>\n          </> \n        }</View>\n        <View style={camStyle.buttonBar}>\n          {props.receiver === undefined && !isPlay && <Button title=\"Start\" onPress={()=>start(receiver)} />}\n          {props.receiver === undefined && isPlay && <Button title=\"Stop\" onPress={stop} />}\n        </View>\n      </View>\n    </View>\n  );\n}\n\n","import React, {useEffect, useState} from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { View as ThemedView } from '../../../components/Themed' \nimport Colors from '../../../constants/Colors';\nimport {default as useRtcContext, WebSocketProvider as RtcProvider} from \"../../../lib/react-native-webrtc/useWebsocketContext\";\nimport LocalCam from '../../../lib/react-native-webrtc/LocalCam';\nimport RemoteCam from '../../../lib/react-native-webrtc/RemoteCam';\nimport useResizeContext from '../../../hooks/useResizeContext';\nimport useAuthContext from '../../../hooks/useAuthContext';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport CommonButton from '../../../components/CommonButton';\nimport { Ionicons } from '../../../lib/@expo/vector-icons';\nimport useIsMobile from '../../../hooks/useIsMobile';\n\ntype VideoType = 'camera'|'display'|null\ntype VideoCallProps = {channel_id:number, setDisable:(disable:boolean)=>void, disable?:boolean}\n\n\nconst VideoView = (props:{\n  scale:string,\n  focusGuest?:string,\n  setFocusGuest:(focusGuest?:string)=>void\n  receiver?:string\n  children:React.ReactNode\n})=>{\n  return <View style={[{maxWidth:props.scale, maxHeight:props.scale, borderWidth:1, borderColor:Colors.borderColor, backgroundColor:'gray', flexDirection:'row', flexGrow:1}, (props.focusGuest == undefined || props.focusGuest == props.receiver)?{height:'100%'}:{maxWidth:0, height:0}]}>\n    <TouchableOpacity style={{flex:1}} containerStyle={{flex:1, justifyContent:'center'}} onPress={()=>props.setFocusGuest(props.focusGuest?undefined:props.receiver)}>\n    {props.children}\n    </TouchableOpacity>\n  </View>\n    \n  \n}\n\nconst VideoCallContainer = ({channel_id, disable, setDisable}:VideoCallProps)=>{\n  const {auth} = useAuthContext()\n  const isMobile = useIsMobile()\n  const [videoMode, setVideoMode] = useState<VideoType>(null)\n  const [guests, setGuests] = useState<string[]>([])\n  const [focusGuest, setFocusGuest] = useState<string>()\n  const windowType = useResizeContext()\n  const { lastJsonMessage, sendJsonMessage } = useRtcContext()\n  useEffect(()=>{\n    if(lastJsonMessage !=null){\n      if(lastJsonMessage['type']=='connection'){\n        sendJsonMessage({'type':'broadcast', 'data':{'channel_id':channel_id}})\n      }\n      if(lastJsonMessage['type']=='broadcast_guest' || lastJsonMessage['type']=='broadcast_host'){\n        setGuests([...guests, lastJsonMessage['sender']])\n      }\n      if(lastJsonMessage['type']=='broadcast_disconnect'){\n        const channel_name = lastJsonMessage['sender']\n        const exist = guests.find(v=>v == channel_name)\n        exist && setGuests(guests.filter(v=>v != channel_name))\n      }\n    }\n  }, [lastJsonMessage])\n  const scale = focusGuest?'100%':`${100 / Math.max(2, Math.ceil(Math.sqrt(guests.length + 1)))}%`\n  const toggleVideoMode = (mode:VideoType)=>{\n    setVideoMode(videoMode!=mode?mode:null)\n  }\n  return lastJsonMessage !==undefined ?\n    <ThemedView style={[\n      {aspectRatio:!disable?16/9:0, borderColor:Colors.borderColor, borderRadius:10},\n      windowType=='landscape'?{flexShrink:1, flexGrow:0, height:'100%', borderLeftWidth:1, paddingBottom:65}:{maxHeight:'36%', width:'100%', borderBottomWidth:1}\n    ]}>\n      <View style={{aspectRatio:focusGuest?undefined:16/9, backgroundColor:'white', flexWrap:'wrap', flexDirection:'row', width:'100%', height:'100%'}}>\n        {guests.map((receiver, i)=><VideoView scale={scale} focusGuest={focusGuest} setFocusGuest={setFocusGuest} receiver={receiver}>\n          <RemoteCam receiver={receiver}/>\n        </VideoView>\n        )}\n        <VideoView scale={scale} focusGuest={focusGuest} setFocusGuest={setFocusGuest} receiver={auth.user?.name}>\n          <LocalCam user={auth.user} mode={videoMode}/>\n        </VideoView>\n      </View>\n      <ThemedView style={[\n          {position:'absolute', alignItems:'center', justifyContent:'flex-end', width:'100%',flexDirection:'row'},\n          windowType=='landscape'?{bottom:0, paddingTop:15, paddingBottom:10, paddingHorizontal:19}:{backgroundColor:'transparent'}\n        ]}>\n        <CommonButton title={'⏺️'} style={{height:40, paddingTop:8}} onPress={()=>toggleVideoMode('camera')}/>\n        {!isMobile && <CommonButton title={'🖥️'} style={{height:40, paddingTop:8}} onPress={()=>toggleVideoMode('display')}/>}\n        <CommonButton title={''} style={{height:40, paddingTop:8}} onPress={()=>setDisable(true)}>\n          <Ionicons size={20} name=\"arrow-back\" color={'deepskyblue'}/>\n        </CommonButton>\n      </ThemedView>\n    </ThemedView>:\n  <></>\n  }\n  \nexport default React.memo(({channel_id, disable, setDisable}:VideoCallProps)=>{\n  return <RtcProvider disable={disable}>\n    <VideoCallContainer channel_id={channel_id} disable={disable} setDisable={setDisable}/>\n  </RtcProvider>\n})\n","import React from 'react'\nimport { Linking, TextStyle } from \"react-native\"\nimport {TouchableOpacity} from \"react-native-gesture-handler\"\nimport CommonSection from \"./CommonSection\"\nimport { FontAwesome } from '../lib/@expo/vector-icons'; \nimport { View, Text } from \"./Themed\"\nimport { File } from \"../types\"\nimport useColorScheme from '../hooks/useColorScheme';\nimport Colors from '../constants/Colors';\n\nfunction humanFileSize(size:number) {\n    var i = size == 0 ? 0 : Math.floor(Math.log(size) / Math.log(1024));\n    return (size / Math.pow(1024, i)).toFixed(2) + ' ' + ['B', 'kB', 'MB', 'GB', 'TB'][i];\n  }\n  \n\nexport default ({file, isMobile, showBorder}:{file:File, isMobile:boolean, showBorder:ConstrainBoolean})=>{\n    const theme = useColorScheme()\n    return <CommonSection containerStyle={{marginHorizontal:0}} bodyStyle={showBorder?{padding:10}:{borderWidth:0, padding:0}}>\n    <TouchableOpacity \n        onPress={()=>Linking.openURL(file.file)} \n        onLongPress={()=>{}}\n        style={{flexDirection:'row', alignItems:'flex-start', width:'100%'}} \n    >\n        <FontAwesome name=\"file-o\" size={20} color={Colors[theme].iconColor} />\n        <View style={{flex:1, marginHorizontal:10}}>\n            <Text style={{fontSize:18}}>{file.filename}</Text>\n            <Text style={{fontSize:14}}>{humanFileSize(file.filesize)}</Text>\n        </View>\n    </TouchableOpacity>\n    </CommonSection>\n}","import React, {useState, useEffect} from \"react\"\nimport dayjs from \"dayjs\";\nimport {View, TouchableOpacity} from 'react-native'\nimport { Text } from \"../../../components/Themed\";\nimport useTimerMessageContentList from \"../../../hooks/lists/useTimerMessageContent\";\nimport { MessengerContent } from \"../../../types\";\nimport Avatar from \"../../../components/Avatar\";\nimport Hyperlink from \"react-native-hyperlink\";\n\nexport function timerFormat(datetime:string){\n    return _timerFormat(dayjs(datetime), dayjs())\n}\n\nfunction _timerFormat(m:dayjs.Dayjs, now:dayjs.Dayjs){\n    if (m.year() != now.year()){\n        return m.format('YYYY.MM')\n    }\n    if(m.month()!= now.month() || m.day() != now.day()){\n        return m.format('MM.DD')\n    }\n    return m.format('HH:mm')\n  }\n\nexport function timerToString(timer:string){\n    return dayjs(timer).format('YYYY.MM.DD HH:mm')\n}\n\nconst TimerTag = (props:{data:MessengerContent, now:dayjs.Dayjs, isExpand:boolean, setExpand:(id?:number)=>void})=>{\n    const start = dayjs(props.data.created)\n    const end = dayjs(props.data.timer)\n    const ratio = (start.diff(props.now)/start.diff(end))\n    return <TouchableOpacity onPress={()=>props.setExpand(props.isExpand?undefined:props.data.id)}>\n        <View style={{backgroundColor:'lightgray', borderRadius:20, overflow:'hidden', margin:5}}>\n            <View style={{backgroundColor:'darkgray', position:'absolute', width:`${ratio*100}%`, height:'100%'}}/>\n            {props.isExpand?\n            <View style={{paddingVertical:5, paddingHorizontal:5, maxWidth:270}}>\n                <View style={{flexDirection:'row'}}>\n                    <Avatar name={props.data.name} userId={props.data.user} size={20}/>\n                    <View style={{paddingHorizontal:5}}><Text>{props.data.name}</Text></View>\n                </View>\n                <View style={{flexDirection:'row', alignItems:'stretch'}}>\n                    <Text>⌚</Text>\n                    <Text selectable>{timerToString(props.data.timer)}</Text>\n                </View>\n                {/* @ts-ignore */}\n                <Hyperlink linkDefault={ true } style={{wordBreak:\"break-word\"}} linkStyle={{color: '#12b886'}}>\n                    <Text selectable>{props.data.message_set[0].content}</Text>\n                </Hyperlink>\n            </View>:    \n            <View style={{paddingVertical:5, paddingHorizontal:5, flexDirection:'row'}}>\n                <Avatar name={props.data.name} userId={props.data.user} size={20}/>\n                <View style={{paddingHorizontal:5}}><Text>{_timerFormat(end, props.now)}</Text></View>\n            </View>}\n        </View>\n    </TouchableOpacity>\n}\n\n\nexport default (props:{channel_id:number})=>{\n    const timerMessages = useTimerMessageContentList(props.channel_id)\n    const [now, setNow] = useState(dayjs())\n    const [expand, setExpand] = useState<number>()\n    useEffect(()=>{\n        const timeout = setTimeout(()=>{\n            setNow(dayjs())\n        }, 2000)\n        return ()=>clearTimeout(timeout)\n    }, [now])\n    return <View style={{flexDirection:'row', paddingTop:5, paddingHorizontal:20}}>\n        {timerMessages?.map((v,i)=><TimerTag key={i} data={v} now={now} isExpand={v.id==expand} setExpand={setExpand}/>)}\n    </View>\n}","import { useEffect, useMemo } from \"react\"\nimport { useQuery, useQueryClient } from \"react-query\"\nimport { getTimerMessageContentList } from \"../../apis\"\nimport { MessengerContent } from \"../../types\"\nimport useWebsocketContext from \"../useWebsocketContext\"\nimport dayjs from \"dayjs\"\n\nexport default function useTimerMessageContentList(channel_id:number){  \n  const queryClient = useQueryClient()\n  const { data } = useQuery<MessengerContent[]>(\n    [\"TimerMessageContentList\", channel_id], \n    async()=>await getTimerMessageContentList(channel_id, dayjs().toISOString()), \n  )\n  const { lastJsonMessage } = useWebsocketContext()\n  useEffect(()=>{\n    if(lastJsonMessage !=null && lastJsonMessage['data']['channel'] == channel_id){\n      if(lastJsonMessage['type']=='next_message'){\n        if(lastJsonMessage['data']['timer'] && dayjs() < dayjs(lastJsonMessage['data']['timer']))\n          queryClient.setQueryData<MessengerContent[]>([\"TimerMessageContentList\", channel_id], (_data)=>{\n            return [...(_data || []), lastJsonMessage['data']]\n          })\n      }\n      if(lastJsonMessage['type']=='update_message'){\n        queryClient.setQueryData<MessengerContent[]>([\"TimerMessageContentList\", channel_id], (_data)=>{\n          return [...(_data?.filter(v=>v.id!=lastJsonMessage['data'].id || (lastJsonMessage['data']['timer']!=null && !lastJsonMessage['data']['is_archive'])) || [])]\n        })\n      }\n    }\n  }, [lastJsonMessage])\n  const sorted = useMemo(()=>data?.sort((a, b)=>(a.timer || '') > (b.timer || '')?1:-1), [data])\n  useEffect(()=>{\n    if (sorted?.[0]?.timer){\n      const id = sorted[0].id\n      const ms = Math.min(dayjs(sorted[0].timer).diff(dayjs()), Number.MAX_VALUE)\n      let timeout = setTimeout(()=>{\n        queryClient.setQueryData<MessengerContent[]>([\"TimerMessageContentList\", channel_id], (_data)=>{\n          return (_data || []).filter(v=>v.id!=id || dayjs(v.timer).diff(dayjs()) > 0)\n        })\n      }, ms)\n      return ()=>clearTimeout(timeout)\n    }\n  },[sorted])\n  return sorted\n}\n","import React, {useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState} from 'react';\nimport { StackScreenProps } from '@react-navigation/stack';\nimport { Platform, StyleSheet, View, TouchableOpacity } from 'react-native';\nimport CommonSection from '../../../components/CommonSection';\nimport { FlatList, TextInput } from 'react-native-gesture-handler';\nimport CommonButton from '../../../components/CommonButton';\nimport useMessengerContentList, { MessengerContentPage, useMessengerContentMutation } from '../../../hooks/lists/useMessengerContentList';\nimport useAuthContext from '../../../hooks/useAuthContext';\nimport HeaderRight from '../../../components/HeaderRight';\nimport useMessengerMemberList from '../../../hooks/lists/useMessengerMemberList';\nimport Colors from '../../../constants/Colors';\nimport useColorScheme from '../../../hooks/useColorScheme';\nimport { Text, View as ThemedView } from '../../../components/Themed' \nimport Hyperlink from 'react-native-hyperlink'\nimport useMessengerChannelList from '../../../hooks/lists/useMessengerChannelList';\nimport useIsMobile from '../../../hooks/useIsMobile';\nimport LinkPreview from '../../../components/LinkPreview';\nimport Avatar, { avatarFromChannel } from '../../../components/Avatar';\nimport VideoCallSection from './VideoCallSection';\nimport useResizeContext from '../../../hooks/useResizeContext';\nimport FilePreview from '../../../components/FilePreview';\nimport useModalsContext from '../../../hooks/useModalsContext';\nimport InviteModal from '../../../modals/InviteModal';\nimport DateTimePickerModal from '../../../modals/DateTimePickerModal'\nimport useLangContext from '../../../hooks/useLangContext';\nimport { Entypo } from '../../../lib/@expo/vector-icons';\nimport TimerTags, { timerFormat, timerToString } from './TimerTags';\nimport MessageModal from '../../../modals/MessageModal';\nimport ChannelEditModal from '../../../modals/ChannelEditModal';\n\n\nfunction uploadFile(){\n  return new Promise<Blob|undefined>((resolve, reject)=>{\n    if (Platform.OS == 'web'){\n      var input = document.createElement('input');\n      input.type = 'file';\n      input.onchange = e => { \n        resolve((e.target as any).files[0])\n      }\n      input.onabort = reject\n      input.onerror = reject\n      input.click();\n    }\n    else\n      resolve(undefined)\n  })\n}\n\nconst MessengerContentPageItem = React.memo((props:MessengerContentPage & {ownerId?:number})=>{\n  const isMobile = useIsMobile()\n  const { setModal } = useModalsContext()\n  let nextPage = props.next;\n    while(nextPage?.next && nextPage.current.length==0){\n      nextPage = nextPage.next\n    }\n    const nextContent = nextPage?.current[0]\n    return <View style={{flexDirection: 'column-reverse'}}>\n      \n      {props.current.map((content, index2)=>{\n        const next = index2 + 1 < props.current.length?props.current[index2+1]:nextContent\n        const created:string = content.created.slice(0, 16)\n        const date = created.slice(0, 10)\n        const isSystem = content.user == null\n        const isFirst = next==undefined || (content.user != next.user || created != next.created.slice(0, 16))\n        const isSelf = props.ownerId == content.user\n        const dayChanged = next==undefined || date != next.created.slice(0, 10)\n        const message = content.message_set[0]\n        const openModal = ()=>setModal(MessageModal, {id:content.id, content:message.content, isOwner:isSelf, isTimer:content.timer?true:false})\n        if (isSystem)\n          return <View key={content.id} style={{flexDirection:'row', justifyContent:'center', width:'100%', marginVertical:5}}>\n            <Text>{message.content}</Text>\n          </View>\n        return <View key={content.id}>\n          {dayChanged?<View style={{flexDirection:'row', justifyContent:'center', width:'100%'}}><Text>{date}</Text></View>:undefined}\n          <View key={content.id} style={{flexDirection:'row', justifyContent:isSelf?'space-between':'flex-start', width:'100%'}}>\n            {isFirst && !isSelf? <View style={{marginTop:3, marginLeft:12}}><Avatar name={content.name} userId={content.user} size={36}/></View>:<View style={{width:48}}/>}\n            <CommonSection outerContainerStyle={{width:undefined, maxWidth:'90%'}} title={isFirst?content.name:undefined} titleStyle={{flex:undefined}} bodyStyle={{padding:10}} subtitle={`${created.slice(11)}`}>\n              <TouchableOpacity onLongPress={openModal}>\n                {content.timer && <View style={{flexDirection:'row', alignItems:'stretch'}}>\n                  <Text style={{fontSize:12}}>⌚</Text>\n                  <Text style={{fontSize:12}} selectable={!isMobile}>{timerToString(content.timer)}</Text>\n                </View>}\n                <View style={{width:\"100%\"}}>\n                  {/* @ts-ignore */}\n                  <Hyperlink linkDefault={ true } style={{wordBreak:\"break-word\"}} linkStyle={{color: '#12b886'}}>\n                    <Text selectable={!isMobile} style={{textAlign:isSelf?'right':'left'}}>{message.content}</Text>\n                  </Hyperlink>\n                </View>\n              {content.file_set.map((file, fileIndex)=><FilePreview key={fileIndex} file={file} isMobile={isMobile} showBorder={content.file_set.length>1 || message.content.length>0}/>)}\n              {content.link_set.map((link, linkIndex)=><LinkPreview key={linkIndex} link={link} isMobile={isMobile}/>)}\n              </TouchableOpacity>        \n            </CommonSection>\n          </View>\n        </View>\n      })}\n    </View>\n\n})\n\nexport default function ChatScreen({navigation, route}: StackScreenProps<any, 'Chat'>) {\n  const { lang, locale } = useLangContext()\n  const isMobile = useIsMobile()\n  const channel_id = route?.params?.id\n  const height = useRef(0)\n  const inputRef = useRef<TextInput>(null)\n  const {auth} = useAuthContext()\n  const { setModal } = useModalsContext()\n  const channel = useMessengerChannelList(auth)?.find(v=>v.id==parseInt(channel_id))\n  const channelAvatar = channel?avatarFromChannel(channel, auth.user):undefined\n  const {data, fetchNextPage } = useMessengerContentList(channel_id)\n  const memberList = useMessengerMemberList(channel_id)\n  const member_id = useMemo(()=>memberList?.find(v=>v.user == auth.user?.id)?.id, [auth, memberList])\n  const windowType = useResizeContext()\n  const [value, setValue] = useState('')\n  const [timer, setTimer] = useState<string>()\n  const [autoFocus, setAutoFocus] = useState<boolean|null>(null)\n  const [videoMode, setVideoMode] = useState<boolean>(false)\n  const [bottomTab, setBottomTab] = useState<boolean>(false)\n\n  const theme = useColorScheme()\n  const postValue = ()=>{\n    if (value.length>0){\n      contentMutation.create({channel:channel_id, user:auth.user?.id, content:value, timer})\n      setValue('')\n      setTimer(undefined)\n      setBottomTab(false)\n      setAutoFocus(true)\n    }\n  }\n  const contentMutation = useMessengerContentMutation()\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      headerRight: ()=> <HeaderRight extra={[\n        {title:lang('invite'), onPress:()=>setModal(InviteModal, {id:channel_id})},\n        {title:lang('setting'), onPress:()=>setModal(ChannelEditModal, {id:channel_id, type:'messenger', member_id})}\n      ]}/>,\n      title: channelAvatar?.name\n    });\n  }, [navigation, route, member_id, locale]);\n\n  const renderItem = useCallback(({item, index}:{item:MessengerContentPage, index:number})=><MessengerContentPageItem {...item} ownerId={auth.user?.id}/>, [auth])\n  \n  const back = ()=>{\n    if(navigation.canGoBack())\n        navigation.goBack()\n      else{\n        navigation.navigate('HomeScreen', {tab:2})\n      }\n  }\n  useEffect(()=>{\n    setModal(null, null)\n    if (!channel_id)\n      back()\n  }, [route])\n  useEffect(()=>{\n    if (memberList===null || (memberList!=undefined && memberList.find(v=>v.user==auth.user?.id)==undefined))\n      back()\n  }, [memberList])\n  useEffect(()=>{\n    if(autoFocus){\n      (inputRef.current as any).focus()\n      setAutoFocus(false)\n    }\n  }, [autoFocus])\n  useEffect(()=>{\n    if (autoFocus==null && !isMobile){\n      const timeout = setTimeout(()=>setAutoFocus(true), 500)\n      return ()=>clearTimeout(timeout)\n    }\n  })\n  return <View style={[\n    {flex:1, alignItems:'center'},\n    windowType=='landscape'?{flexDirection:'row-reverse', minWidth:480}:{flexDirection:'column'}\n  ]}>\n    <VideoCallSection channel_id={channel_id} setDisable={(d)=>setVideoMode(!d)} disable={!videoMode}/>\n    <View style={[{flex:videoMode?undefined:1, flexShrink:1}, windowType=='landscape'?{minWidth:320, height:'100%'}:{width:'100%'}]}>\n      <FlatList\n        style={{flexDirection: 'column-reverse'}}\n        contentContainerStyle={{padding:10, flexGrow:1, flexDirection: 'column-reverse'}}\n        data={data?.pages}\n        renderItem={renderItem}\n        onScroll={(e)=>{\n          if (e.nativeEvent.contentOffset.y + e.nativeEvent.contentSize.height - height.current < 1)\n            fetchNextPage()\n        }}\n        onLayout={(p)=>{height.current = p.nativeEvent.layout.height}}\n      />\n      <View style={{position:'absolute'}}>\n        <TimerTags channel_id={channel_id}/>\n      </View>\n      <ThemedView style={{bottom:0, width:'100%', paddingTop:15, paddingBottom:10, paddingHorizontal:19}}>\n        <View style={{alignItems:'center', width:'100%',flexDirection:'row'}}>\n          <CommonButton title={''} style={{height:40, paddingTop:8, borderTopRightRadius:0, borderBottomRightRadius:0}} onPress={()=>setBottomTab(!bottomTab)}>\n            <View style={{top:-2}}>\n              <Entypo name={bottomTab?\"cross\":\"plus\"} size={24} color={Colors[theme].text}/>\n            </View>\n          </CommonButton>\n          {timer && <CommonButton style={{height:40, paddingTop:8, borderRadius:0}} title={`⌚${timerFormat(timer)}`} onPress={()=>{setModal(DateTimePickerModal, {datetime:timer, callback:(datetime:string)=>setTimer(datetime)});setBottomTab(false)}}/>}\n          <TextInput ref={inputRef} value={value} onChangeText={setValue} style={{\n            flex:1, borderWidth:1, height:40, borderColor:Colors.borderColor, backgroundColor:Colors[theme].background, color:Colors[theme].text\n          }} onSubmitEditing={postValue} blurOnSubmit={true} onFocus={()=>setBottomTab(false)}/>\n          <CommonButton style={{height:40, paddingTop:8, borderTopLeftRadius:0, borderBottomLeftRadius:0}} title={'💬'} onPress={postValue}/>\n        </View>\n\n        {bottomTab && <View style={{alignItems:'center', width:'100%', flexDirection:'row', paddingTop:15, paddingBottom:5}}>\n          <CommonButton style={{height:80, flex:1, justifyContent:'center', marginRight:15}} title={`📤\\n ${lang('File')}`} onPress={()=>uploadFile().then(f=>{contentMutation.create({channel:channel_id, user:auth.user?.id, content:'', file:f});setBottomTab(false)})}/>\n          <CommonButton style={{height:80, flex:1, justifyContent:'center', marginRight:15}} title={`⌚\\n ${lang('Timer')}`} onPress={()=>{setModal(DateTimePickerModal, {datetime:timer, callback:(datetime:string)=>setTimer(datetime)});setBottomTab(false)}}/>\n          <CommonButton style={{height:80, flex:1, justifyContent:'center'}} title={`📹\\n ${lang('Video Call')}`} onPress={()=>{setVideoMode(!videoMode);setBottomTab(false)}} disabled={videoMode}/>\n        </View>}\n      </ThemedView>\n    </View>\n  </View>\n}","import React from \"react\"\nimport CommonSection from \"../../../components/CommonSection\"\nimport Colors from \"../../../constants/Colors\"\nimport useColorScheme, { setColorScheme } from \"../../../hooks/useColorScheme\"\nimport { StyleSheet, Text, View} from 'react-native';\nimport useLangContext from \"../../../hooks/useLangContext\";\nimport { useColorScheme as useConfigColorScheme} from 'react-native-appearance';\nimport useFirebaseContext from \"../../../hooks/useFirebaseContext\";\nimport TextButton from \"../../../components/TextButton\";\n\n\nconst ConfigSection = ({title, children}:{title:string, children?: React.ReactNode})=>{\n  const theme = useColorScheme()\n  const color = Colors[theme].text\n  return <CommonSection bodyStyle={{alignItems:'flex-start', backgroundColor:theme=='light'?'transparent':\"black\"}}>\n    <Text style={{fontSize:20, color, fontWeight:'600'}}>{title}</Text>\n    {children}\n  </CommonSection>\n}\n\nexport default ()=>{\n  const { lang, locale, setLocale } = useLangContext()\n  const theme = useColorScheme()\n  const configTheme = useConfigColorScheme()\n  const {enable:noti, setEnable:setNoti} = useFirebaseContext()\n  const color = Colors[theme].text\n  return <>\n    <ConfigSection title={lang('* Notification Settings')}>\n      <View style={{flexDirection:'row'}}>\n        {[[lang('On'), true], [lang('Off'), false]].map(([title, n])=><TextButton\n          key={title} title={title || ''} textStyle={{fontSize:16, color, textDecorationLine:noti==n?'underline':'none'}} style={{borderRadius:20}} onPress={()=>{setNoti(n)}}/>)}\n      </View>\n    </ConfigSection>\n    <ConfigSection title={lang('* Language Settings')}>\n    <View style={{flexDirection:'row'}}>\n        {[[lang('Auto'), 'auto'], ['한국어', 'ko'], ['English', 'en']].map(([title, l])=><TextButton \n          key={title} title={title || ''} textStyle={{fontSize:16, color, textDecorationLine:locale==l?'underline':'none'}} style={{borderRadius:20}} onPress={()=>setLocale(l)}/>)}\n      </View>\n    </ConfigSection>\n    <ConfigSection title={lang('* Skin Settings')}>\n      <View style={{flexDirection:'row'}}>\n        {[[lang('Auto'), 'no-preference'], [lang('Light'), 'light'], [lang('Dark'), 'dark']].map(([title, colorScheme])=><TextButton \n          key={title} title={title} textStyle={{fontSize:16, color, textDecorationLine:configTheme==colorScheme?'underline':'none'}} style={{borderRadius:20}} onPress={(\n            )=>setColorScheme(colorScheme)}/>)}\n      </View>\n    </ConfigSection>\n  </>\n}","import React, {useState, useEffect, useLayoutEffect, useMemo} from 'react';\nimport { StackScreenProps } from '@react-navigation/stack';\nimport { StyleSheet, View, ScrollView} from 'react-native';\nimport { Text as StyledText } from 'react-native-paper';\nimport { Text } from '../../../components/Themed'\nimport useResizeContext from '../../../hooks/useResizeContext';\nimport TabView from '../../../components/TabView';\nimport HeaderRight from '../../../components/HeaderRight';\nimport TextButton from '../../../components/TextButton';\nimport Colors from '../../../constants/Colors';\nimport useColorScheme  from '../../../hooks/useColorScheme';\nimport useModalsContext from '../../../hooks/useModalsContext';\nimport ChannelEditModal from '../../../modals/ChannelEditModal';\nimport useLangContext from '../../../hooks/useLangContext';\nimport ContractFooter from '../../../components/ContractFooter';\nimport { TabViewRecord } from '../../../types';\nimport useAuthContext from '../../../hooks/useAuthContext';\nimport useUserMembershipList from '../../../hooks/lists/useUserMembershipList';\nimport { FontAwesome, Ionicons, MaterialCommunityIcons, SimpleLineIcons } from '../../../lib/@expo/vector-icons';\nimport { useMessengerChannelSorted } from '../../../hooks/lists/useMessengerChannelList';\nimport CommonItem from '../../../components/CommonItem';\nimport MemberItem from '../../../components/MemberItem';\nimport ProfileModal from '../../../modals/ProfileModal';\nimport { navigate } from '../../../navigation';\nimport CommonSection from '../../../components/CommonSection';\nimport ConfigSections from './ConfigSections';\nimport Avatar, { avatarFromChannel } from '../../../components/Avatar';\n\nconst MemberTabView = ()=>{\n  const {auth} = useAuthContext()\n  const theme = useColorScheme()\n  const { setModal } = useModalsContext()\n  const userList = useUserMembershipList(auth)\n  const memberItem = React.useMemo(\n      ()=>userList && userList.map((item, index)=><MemberItem key={index} member={item} onPress={()=>setModal(ProfileModal, {id:item.id})}/>), [userList])\n  return <ScrollView style={{flex:1, backgroundColor:Colors[theme].background}}>\n      {memberItem}\n  </ScrollView>\n}\n\nconst MessengerTabView = ()=>{\n  const {auth} = useAuthContext()\n  const channelList = useMessengerChannelSorted(auth)\n  const theme = useColorScheme()\n\n  const today = (new Date()).toISOString().slice(0, 10)\n  return <ScrollView style={{flex:1, backgroundColor:Colors[theme].background}}>\n      {channelList?.map((item, index)=>{\n          const {avatar, name} = avatarFromChannel(item, auth.user)\n          const date = item.last_message?.created.slice(0,10)\n          return <CommonItem key={index} bodyStyle={{flexDirection:'row', justifyContent:'space-between'}} onPress={()=>navigate(\"ChatScreen\", {id:item.id})}>\n              <View style={{flexDirection:'row', flexShrink:1}}>\n                  {avatar?\n                    <View style={{ marginRight:20}}>\n                      <Avatar name={avatar.name} size={44} userId={avatar.id}/>\n                    </View>:\n                    <FontAwesome size={40} color={Colors[theme].iconColor} style={{ marginBottom: -3, marginRight:20 }} name='users'/>}\n                  <View>\n                      <View style={{flexDirection:'row'}}>\n                          <Text style={{fontSize:18}}>{name}</Text>\n                          <Text style={{fontSize:18, opacity: 0.4, paddingLeft:5}}>{item.member_count}</Text>\n                      </View>\n                      <Text style={{fontSize:16, opacity: 0.4}}>{item.last_message?.content}</Text>\n                  </View>\n              </View>\n              <View>\n                  <Text style={{fontSize:14, opacity: 0.4, textAlign:'right'}}>{date==today?item.last_message?.created.slice(11,16):date}</Text>\n                  <Text style={{fontSize:14, textAlign:'right'}}>{item.unread_count?item.unread_count:' '}</Text>\n              </View>\n          </CommonItem>\n      })}\n  </ScrollView>\n}\n\n\nconst ConfigTabView = ()=>{\n  const theme = useColorScheme()\n  return <View style={{flex:1, backgroundColor:Colors[theme].background}}>\n    <ConfigSections/>\n  </View>\n}\n\nconst getBottomTabs = (theme:'light'|'dark')=>{\n  const color = Colors[theme].iconColor\n  return {\n    OneTab:{\n        title:'member',\n        component:MemberTabView,\n        icon:<MaterialCommunityIcons size={32} color={color} style={{ marginBottom: -3 }} name='account'/>,\n    },\n    TwoTab:{\n        title:'chat',\n        component:MessengerTabView,\n        icon:<Ionicons size={30} color={color} style={{ marginBottom: -3 }} name='chatbox'/>\n    },\n    // ThreeTab:{\n    //     title:'board',\n    //     component:()=><></>,\n    //     icon:<></>\n    // },\n    FourTab:{\n        title:'config',\n        component:ConfigTabView,\n        icon:<SimpleLineIcons size={30} color={color} style={{ marginBottom: -3 }} name='options'/>\n    }\n  } as TabViewRecord\n}\n\n\nexport default function HomeScreen({navigation, route}: StackScreenProps<any, 'Home'>) {\n  const { lang, locale } = useLangContext()\n  const windowType = useResizeContext();\n  const theme = useColorScheme()\n  const { setModal } = useModalsContext()\n  const [ home, setHome ] = useState(windowType == 'landscape')\n  const color = Colors[theme].text\n  const options = [\n    {title:lang('member'), headerRight:()=><HeaderRight/>},\n    {title:lang('chat'), headerRight:()=><HeaderRight extra={[{title:lang('create'), onPress:()=>setModal(ChannelEditModal, {type:'messenger'})}]}/>},\n    // {title:'board', headerRight:()=><HeaderRight extra={[{title:'create', onPress:()=>setModal(ChannelEditModal, props:{type:'board'}}) }]}/>},\n    {title:lang('config'), headerRight:()=><HeaderRight/>}\n  ]\n  \n  useLayoutEffect(() => {\n    const index = route?.params?.tab | 0\n    navigation.setOptions(windowType == 'portrait'?options[index]:{\n      title: lang('home'),\n      headerRight: ()=><HeaderRight/>\n    });\n  }, [navigation, route, windowType, locale]);\n  useEffect(()=>{\n    setHome(windowType == 'landscape')\n  }, [windowType])\n  return home?\n    <View style={{flex:1, justifyContent:'center', alignItems:'center'}}>\n      <View style={{width:'80%', flex:1, marginTop:72}}>\n        <StyledText style={{fontSize:32, color}}>Tokki Tok</StyledText>\n        <View style={{backgroundColor:Colors.borderColor, height:1, width:'100%'}}/>\n        {/* <Text style={{fontSize:20, color:'gray'}}>Welcome! This is a messenger for teams.</Text>*/}\n        <View style={{height:24}}/>\n        <CommonSection bodyStyle={{alignItems:'flex-start', backgroundColor:theme=='light'?'transparent':\"black\"}}>\n          <TextButton title={lang('+ New chat')} textStyle={{fontSize:20, color}} style={{paddingLeft:0, borderRadius:20}} onPress={()=>setModal(ChannelEditModal, {type:'messenger'})}/>\n        </CommonSection>\n        <ConfigSections/>\n      </View>\n      <ContractFooter theme={theme}/>\n    </View>:\n    <TabView tabs={getBottomTabs(theme)} tabBarPosition=\"bottom\" index={parseInt(route.params?.['tab'] || 0)} onTab={(index)=>{navigation.setParams({tab:index})}}/>\n}\n\n","import React, {useEffect, useLayoutEffect, useState} from 'react';\n\nimport { StackScreenProps } from '@react-navigation/stack';\nimport useAuthContext from '../../hooks/useAuthContext';\nimport useMessengerChannelList from '../../hooks/lists/useMessengerChannelList';\nimport { Text } from '../../components/Themed';\nimport { useMessengerMemberMutation } from '../../hooks/lists/useMessengerMemberList';\n\nexport default function InviteeScreen({navigation, route}: StackScreenProps<any, 'Invitee'>) {\n    const id = route?.params?.id\n    const {auth, dispatch} = useAuthContext()\n    const [enterGuest, setEnterGuest] = useState(false)\n    const channelList = useMessengerChannelList(auth)\n    const messengerMemberMutation = useMessengerMemberMutation()\n    useLayoutEffect(() => {\n        navigation.setOptions({headerRight: undefined});\n    }, []);\n    useEffect(()=>{\n        if(auth.user==null && enterGuest==false){\n            dispatch({type:\"LOGIN_GUEST\"})\n            setEnterGuest(true)\n        }\n        else if(auth.user && channelList!==undefined){\n            if(channelList.find(v=>v.id==id) === undefined){\n                console.log(`invite processing (channel:${id})`)\n                messengerMemberMutation.invite({\n                    channel_id:id,\n                    user_ids:[auth.user.id]\n                }).then(()=>navigation.replace(\"ChatScreen\", {id}))\n            }\n            else{\n                console.log('already invite')\n                navigation.replace(\"ChatScreen\", {id})\n            }\n        }\n    }, [auth, channelList, enterGuest])\n  return <Text>{'초대중'}</Text>\n};\n","import LoginScreen from \"./main/LoginScreen\";\nimport ChatScreen from \"./main/ChatScreen\";\nimport HomeScreen from \"./main/HomeScreen\";\nimport TabOneScreen from \"./main/TabOneScreen\";\nimport InviteeScreen from \"./main/InviteeScreen\";\n// import BoardScreen from \"../lib/blacktokki-board/BoardScreen\";\n// import BoardEditScreen from \"../lib/blacktokki-board/BoardEditScreen\";\nimport { Screens } from \"../types\";\n\nexport const main = {\n    HomeScreen:{\n        title:'home',\n        component:HomeScreen,\n        path:'home',\n    },\n    ChatScreen:{\n        title:'chat',\n        component:ChatScreen,\n        path:'chat'\n    },\n    // BoardScreen:{\n    //     title:'board',\n    //     component:BoardScreen,\n    //     path:'board'\n    // },\n    // TabOneScreen:{\n    //     title:'tab one',\n    //     component:TabOneScreen,\n    //     path:'one'\n    // },\n    InviteeScreen:{\n        title: '',        \n        component:InviteeScreen,\n        path:'invitee'\n    }\n} as Screens\n\nexport const login = {\n    LoginScreen:{\n        path: 'login',\n        title: 'Sign in',\n        component:LoginScreen\n    },\n    InviteeScreen:{\n        path:'invitee',\n        title: '',\n        component:InviteeScreen\n    }\n} as Screens\n\nexport const modal = {\n    // BoardEditScreen:{\n    //     title:'board',\n    //     component:BoardEditScreen,\n    //     path:'modal/board'\n    // },\n} as Screens","import { useMemo, useReducer } from \"react\"\n\ntype LocalSearchAction = {type:string, keyword?:string}\n\ntype LocalSearchState ={active:boolean, keyword:string}\n\n\n\nconst localSearchReducer =(initialState:LocalSearchState, action:LocalSearchAction)=>{\n    switch (action.type){\n        case 'SEARCH':\n          return {\n            ...initialState,\n            keyword: action.keyword\n          } as LocalSearchState\n        case 'ENABLE_SEARCH':\n          return {\n            ...initialState,\n            active:true,\n          }\n        case 'DISABLE_SEARCH':\n            return{\n                ...initialState,\n                active:false,\n                keyword: ''\n            }\n        default:\n            throw new Error( `Unhandled action type: ${action.type}`)\n    }\n  }\n\n\nexport default function useLocalSearch<T>(target:T[], compare:(value:T, keyword:string)=>boolean) {\n  const [searchState, dispatch] = useReducer(localSearchReducer, {active:false, keyword:''})\n  const data = useMemo(()=>searchState.active?target.filter(v=>compare(v, searchState.keyword)):target, [searchState, target])\n  return {searchState, dispatch, data}\n}","import React, {useRef,MutableRefObject, useMemo, useState, useEffect } from 'react';\nimport Clipboard from '@react-native-clipboard/clipboard/dist';\nimport { View, Text } from '../components/Themed';\nimport useAuthContext from '../hooks/useAuthContext';\nimport useUserMembershipList from '../hooks/lists/useUserMembershipList';\nimport { TabViewRecord, UserMembership } from '../types';\nimport CommonButton from '../components/CommonButton';\nimport useMessengerMemberList, { useMessengerMemberMutation } from '../hooks/lists/useMessengerMemberList';\nimport useModalsContext from '../hooks/useModalsContext';\nimport useExternalMembershipList from '../hooks/lists/useExternalMembershipList';\nimport TextField from '../components/TextField';\nimport useLocalSearch from '../hooks/useLocalSearch';\nimport TabView from '../components/TabView';\nimport { FlatList, TouchableOpacity } from 'react-native-gesture-handler';\nimport useLangContext from '../hooks/useLangContext';\nimport MemberItem from '../components/MemberItem';\nimport ModalSection from '../components/ModalSection';\nimport useModalEffect from '../hooks/useModalEffect';\n\nconst InviteItem = (props:{item:UserMembership, selectedRef:MutableRefObject<Set<number>>})=>{\n  const [selected, setSelected] = useState(props.selectedRef.current.has(props.item.id))\n  return <View style={selected?{borderWidth:1, borderColor:'blue'}:{}}>\n    <MemberItem member={props.item} onPress={()=>{\n      if (selected){\n        setSelected(false)\n        props.selectedRef.current.delete(props.item.id)\n      }\n      else{\n        setSelected(true)\n        props.selectedRef.current.add(props.item.id)\n      }\n    }}/>\n  </View>\n\n}\ntype InviteTabViewProps = {\n  id:number,\n  selectedRef:MutableRefObject<Set<number>>\n}\n\nconst GroupTabView = ({id, selectedRef}:InviteTabViewProps)=>{\n  const { lang } = useLangContext()\n  const {auth} = useAuthContext()\n  const { setModal } = useModalsContext()\n  const userList = useUserMembershipList(auth)\n  const memberList = useMessengerMemberList(id)\n  const messengerMemberMutation = useMessengerMemberMutation()\n  const rawData = useMemo(()=>{\n    const memberSet = new Set(memberList?.map(v=>v.user))\n    return userList?.filter(v=>!memberSet.has(v.id)) || []\n  }, [userList, memberList])\n  const {data, dispatch:dispatchKeyword, searchState} = useLocalSearch(rawData, (v, keyword)=>(v.username.includes(keyword) || v.name.includes(keyword)))\n  const search = (k:string)=>{\n    if (k?.length>0){\n      dispatchKeyword({type:'ENABLE_SEARCH'})\n      dispatchKeyword({type:'SEARCH', keyword:k})\n    }\n    else{\n      dispatchKeyword({type:'DISABLE_SEARCH'})\n    }\n  }\n  const back = ()=>{\n    setModal(InviteModal, null)\n  }\n  useModalEffect(back, [])\n  return <View style={{alignItems:'center', flex:1}}>\n    <View style={{'width': '100%', flex:1}}>\n      <TextField name={`${lang('Username')} & ${lang('Name')}`} placeholder={auth.user?.name} value={searchState.keyword} setValue={search} width={'80%'}/>\n      {id && data && <FlatList contentContainerStyle={{flexGrow:1}} data={data} renderItem={({item})=><InviteItem item={item} selectedRef={selectedRef}/>}/>}\n    </View>\n    <View style={[{width:'100%', flexDirection:'row', padding:10,}, {justifyContent:'flex-end'}]}>\n      <CommonButton title={lang('invite')} onPress={()=>{\n        messengerMemberMutation.invite({\n          channel_id:id,\n          user_ids:[...selectedRef.current]\n        }).then(back)\n      }}/>\n      <CommonButton title={lang('cancel')} onPress={back}/>\n    </View>\n  </View>\n}\n\nconst DELAY = 500\n\nconst ExternalMembershipTabView = ({id, selectedRef}:InviteTabViewProps)=>{\n  const { lang } = useLangContext()\n  const [value, setValue] = useState('')\n  const [keyword, setKeyword] = useState('')\n  const [copied, setCopied] = useState(false)\n  const timeoutRef = useRef<NodeJS.Timeout>()\n  const {auth} = useAuthContext()\n  const { setModal } = useModalsContext()\n  const memberList = useMessengerMemberList(id)\n  const externalMemberList = useExternalMembershipList(keyword)\n  const data = useMemo(()=>{\n    const memberSet = new Set(memberList?.map(v=>v.user))\n    return externalMemberList?.filter(v=>!memberSet.has(v.id)) || []\n  }, [externalMemberList, memberList])\n  const messengerMemberMutation = useMessengerMemberMutation()\n  useEffect(()=>{\n    timeoutRef.current = setTimeout(()=>{\n      setKeyword(value)\n    }, DELAY)\n    return ()=>{timeoutRef.current && clearTimeout(timeoutRef.current)}\n  }, [value])\n  const back = ()=>{\n    setModal(InviteModal, null)\n  }\n  const inviteLink = location.href.replace('chat', 'invitee')\n  return <View style={{alignItems:'center', flex:1}}>\n  <TouchableOpacity style={{paddingVertical:10, flexDirection:\"row\"}} onPress={()=>{Clipboard.setString(inviteLink);setCopied(true)}}>\n    <Text style={{fontSize:14}}>{lang('invite link')}{\": \"}</Text>\n    <Text style={{fontSize:14, color:'#12b886'}}>{inviteLink}{\" \"}</Text>\n    {copied && <Text style={{fontSize:12, color:'red'}}>{lang(\"copied\")}</Text>}\n  </TouchableOpacity>\n  <View style={{'width': '100%', flex:1}}>\n    <TextField name={lang('Username')} placeholder={auth.user?.username} value={value} setValue={setValue} width={'80%'}/>\n    {id && data && <FlatList contentContainerStyle={{flexGrow:1}} data={data} renderItem={({item})=><InviteItem item={item} selectedRef={selectedRef}/>}/>}\n  </View>\n  <View style={[{width:'100%', flexDirection:'row', padding:10,}, {justifyContent:'flex-end'}]}>\n    <CommonButton title={lang('invite')} onPress={()=>{\n      messengerMemberMutation.invite({\n        channel_id:id,\n        user_ids:[...selectedRef.current]\n      }).then(back)\n    }}/>\n    <CommonButton title={lang('cancel')} onPress={back}/>\n  </View>\n</View>\n}\n\nexport default function InviteModal({id}:{id:number}) {\n  const { lang } = useLangContext()\n  const selectedRef = useRef<Set<number>>(new Set())\n  const drawerTabs:TabViewRecord = {\n    group:{\n      title: 'Group',\n      component: ()=><GroupTabView id={id} selectedRef={selectedRef}/>,\n      icon: <></>\n    },\n    external:{\n      title: 'External members',\n      component: ()=><ExternalMembershipTabView id={id} selectedRef={selectedRef}/>,\n      icon: <></>\n    }\n  }\n  return <ModalSection>\n    <View style={{flex:1, width:'100%'}}>\n      <View style={{width:'100%'}}>\n        <Text style={{fontSize:20}}>{lang('invite')}</Text>\n        <View style={{marginBottom: 20, height: 1, width: '100%'}} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />\n      </View>\n      <TabView tabs={drawerTabs} tabBarPosition={\"top\"}/>\n    </View>\n  </ModalSection>\n}\n\n","import { useQuery } from \"react-query\";\nimport { getExternalMembershipList } from \"../../apis\";\n\nexport default function useExternalMembershipList(keyword?:string){\n  const { data } = useQuery([\"UserMembershipList\", keyword] , async()=>keyword?(await getExternalMembershipList(keyword)):[])\n  return data\n}","import React, { useMemo } from 'react';\n\nimport { TextProps, StyleProp } from 'react-native';\nimport {View, Text } from './Themed'\nimport useResizeContext from '../hooks/useResizeContext';\n\ntype Props = {\n  name: string,\n  width?:number,\n  children: React.ReactNode\n  textStyle?: StyleProp<TextProps>\n}\n\nexport default function RowField(props:Props) {\n  const windowType = useResizeContext()\n  const rowStyle = useMemo(()=>windowType=='landscape'?\n    {flexDirection:'row', alignItems: 'center', justifyContent:'space-between'}:\n    {flexDirection:'column', alignItems:'flex-start'} as any\n  , [windowType])\n  return (\n    <View style={[{paddingVertical:5, width:'100%'}, rowStyle]}>\n        <Text style={[windowType=='landscape'?{flex:1}:{width:'100%'},{paddingHorizontal: 15, fontSize:16}, props.textStyle]}>{props.name}</Text>\n        <View style={[windowType=='landscape'?{flex:6}:{width:'100%'},{paddingHorizontal: 15}]}>\n          <View style={{width:props.width}}>\n            {props.children}\n          </View>\n        </View>\n    </View>\n  )\n}","import React from 'react';\nimport { StyleProp, TextStyle } from 'react-native';\nimport { CustomTextInputProps } from '../types';\nimport CommonTextInput from './CommonTextInput';\nimport RowField from './RowField';\n\nexport default function TextField(props:CustomTextInputProps & {name: string, width?:any, textStyle?:StyleProp<TextStyle>}) {\n  return (\n    <RowField name={props.name} width={props.width} textStyle={props.textStyle}>\n      <CommonTextInput {...props} />\n   </RowField>\n  )\n}","/**\n * Learn more about deep linking with React Navigation\n * https://reactnavigation.org/docs/deep-linking\n * https://reactnavigation.org/docs/configuring-links\n */\n\nimport { LinkingOptions } from '@react-navigation/native';\nimport * as Linking from 'expo-linking';\nimport {main, login, modal} from '../screens';\n\nconst ROOTPATH = 'tokki-tok'  // github repository name\n\nObject.values(modal).forEach(v=>v.path = ROOTPATH + '/' + v.path)\n\nexport default  {\n  prefixes: [Linking.makeUrl('/')],\n  config: {\n    screens: {\n      Main: {\n        screens:{\n          ...main,\n          ...login,\n          NotFound: '*',\n        },\n        path: ROOTPATH\n      },\n      ...modal\n    },\n  },\n} as LinkingOptions;\n","firebaseConfig = {\n    \"authDomain\": \"virtual-metrics-355712.firebaseapp.com\",\n    \"projectId\": \"virtual-metrics-355712\",\n    \"storageBucket\": \"virtual-metrics-355712.appspot.com\",\n    \"messagingSenderId\": \"76003576924\",\n    \"appId\": \"1:76003576924:web:c8c8a006d07918bbc02a99\",\n    \"measurementId\": \"G-SEL35L4N5R\"\n}\nif (typeof module !== 'undefined') {\n    module.exports = firebaseConfig\n}\n","import { StackScreenProps } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport useLangContext from '../hooks/useLangContext';\n\nexport default function NotFoundScreen({\n  navigation,\n}: StackScreenProps<any, 'NotFound'>) {\n  const { lang } = useLangContext()\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>{lang(\"This screen doesn't exist.\")}</Text>\n      <TouchableOpacity onPress={() => navigation.replace('HomeScreen')} style={styles.link}>\n        <Text style={styles.linkText}>{lang(\"Go to home screen!\")}</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  link: {\n    marginTop: 15,\n    paddingVertical: 15,\n  },\n  linkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n});\n","import { useTheme } from '@react-navigation/native';\nimport React, { useState } from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport Profile from '../components/Profile';\nimport TextButton from '../components/TextButton';\nimport Colors from '../constants/Colors';\nimport useResizeContext from '../hooks/useResizeContext';\nimport TabView from '../components/TabView';\nimport { MessengerChannel, TabViewRecord, User, UserMembership } from '../types';\nimport useModalsContext from '../hooks/useModalsContext';\nimport ChannelEditModal from '../modals/ChannelEditModal';\nimport CommonItem from '../components/CommonItem';\nimport { Text } from '../components/Themed';\nimport useAuthContext, { Auth } from '../hooks/useAuthContext';\nimport { useMessengerChannelSorted } from '../hooks/lists/useMessengerChannelList';\nimport { navigate } from '.'\nimport { avatarFromChannel } from '../components/Avatar';\n\nconst DrawerTabView = (props:{auth:Auth, data:(MessengerChannel & {onPress?:()=>void})[]})=><View style={{flex:1}}>\n    {props.data.map((item, index)=>{\n      const {name} = avatarFromChannel(item, props.auth.user)\n      return <CommonItem key={index} containerStyle={{marginHorizontal:0}} bodyStyle={{alignItems:'flex-start'}} onPress={item.onPress}>\n        <Text style={{marginLeft:20}}>{name}</Text>\n      </CommonItem>\n    })}\n</View>\n\nconst MessengerTabView = ()=>{\n  const {auth} = useAuthContext()\n  const channelList = useMessengerChannelSorted(auth);\n  return <DrawerTabView auth={auth} data={(channelList || []).map(item=>({...item, onPress:()=>navigate(\"ChatScreen\", {id:item.id})}))}/>\n}\n\nconst drawerTabs:TabViewRecord = {\n  MessengerTab:{\n      title:'messenger',\n      component:MessengerTabView,\n      icon:<></>\n  },\n}\n\nexport default ({user}:{user:UserMembership})=> {\n  const { colors } = useTheme();\n  const windowType = useResizeContext();\n  const [index, setIndex] = useState(0);\n  const { setModal } = useModalsContext()\n  const onAddList = [\n    ()=>setModal(ChannelEditModal, {type:'messenger'}),\n    ()=>setModal(ChannelEditModal, {type:'board'})\n  ]\n  return <View style={windowType=='landscape'?[\n      styles.tabBar,\n      {\n        backgroundColor: colors.card,\n        borderTopColor: colors.border,\n      },\n      // tabBarStyle,\n    ]:{width:0}}\n    pointerEvents={false ? 'none' : 'auto'}\n  >\n    <Profile userId={user.id} username={user.username} name={user.name}/>\n    {windowType=='landscape' && <>\n      <View style={{flexDirection:'row-reverse'}}>\n          <TextButton title='+' textStyle={{fontSize:20}} style={{borderRadius:20}} onPress={onAddList[index]}/>\n      </View>\n      <View accessibilityRole=\"tablist\" style={styles.content}>\n        {Object.keys(drawerTabs).length>1 ? \n          <TabView tabs={drawerTabs} tabBarPosition={\"top\"} onTab={setIndex}/>: \n          <View style={{borderTopWidth:1, flex:1, borderColor:colors.border}}>            \n            {Object.values(drawerTabs).map(drawerTab=>{const Tab = drawerTab.component; return <Tab key={drawerTab.title}/>})}\n          </View>\n        }\n      </View>\n    </>}\n  </View>\n}\n\n{/*<Text style={[styles.label, { color: d.isFocused ? colors.primary : '#222' }]}></Text> */}\n\nconst styles = StyleSheet.create({\n    tabBar: {\n      width:240,\n      elevation: 8,\n      borderRightWidth:1,\n      borderColor:Colors.borderColor\n    },\n    content: {\n      flex: 1,\n      flexDirection: 'row',\n    },\n    tab: {\n        flex: 1,\n        alignItems: 'center',\n    },\n    label: {\n        textAlign: 'center',\n        backgroundColor: 'transparent',\n      },\n  });","import InviteModal from \"./InviteModal\";\nimport ProfileModal from \"./ProfileModal\";\nimport ChannelEditModal from \"./ChannelEditModal\"\nimport GuestLogoutModal from \"./GuestLogoutModal\";\nimport DateTimePickerModal from \"./DateTimePickerModal\"\nimport MessageModal from \"./MessageModal\";\n\nexport default [\n    InviteModal,\n    ProfileModal,\n    ChannelEditModal,\n    GuestLogoutModal,\n    DateTimePickerModal,\n    MessageModal\n]","import { CardStyleInterpolators, createStackNavigator } from '@react-navigation/stack';\nimport React, {useMemo} from 'react';\nimport { View } from 'react-native';\nimport { Ionicons } from '../lib/@expo/vector-icons';\nimport useResizeContext from '../hooks/useResizeContext';\nimport NotFoundScreen from '../screens/NotFoundScreen';\nimport {main, login, modal} from '../screens';\nimport DrawerNavigator from './DrawerNavigator';\nimport useAuthContext from '../hooks/useAuthContext';\nimport { WebSocketProvider } from '../hooks/useWebsocketContext';\nimport HeaderRight from '../components/HeaderRight'\nimport Colors from '../constants/Colors';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport useFirebaseContext, { FirebaseProvider } from '../hooks/useFirebaseContext';\nimport useIsMobile from '../hooks/useIsMobile';\nimport useColorScheme from '../hooks/useColorScheme';\nimport { ModalsProvider } from '../hooks/useModalsContext';\nimport modals from '../modals';\nimport useLangContext from '../hooks/useLangContext';\nimport CommonButton from '../components/CommonButton';\n\nconst Root = createStackNavigator();\n\nexport default function RootNavigator() {\n    const windowType = useResizeContext();\n    return <Root.Navigator\n        mode= 'modal'\n        headerMode= 'screen'\n        screenOptions={{\n            cardStyle:{backgroundColor:\"white\"},\n            animationEnabled: true,\n            cardStyleInterpolator: CardStyleInterpolators.forVerticalIOS,\n        }}\n    >\n        <Root.Screen name=\"Main\" component={MainNavigator} options={{headerShown:false}}/>\n        {Object.entries(modal).map(([key, screen])=><Root.Screen key={key} name={key} component={screen.component} options={{\n            title: screen.title,\n            gestureDirection: windowType == 'landscape'?'vertical-inverted':'vertical'\n        }} />)}\n    </Root.Navigator>\n}\n\nconst Main = createStackNavigator();\n\nfunction headerLeft(navigation:any, route:any, windowType:string, theme:'light'|'dark', isMobile:boolean){\n    const canGOBackScreen = ['HomeScreen', 'LoginScreen'].findIndex(v=>v == route.name) == -1\n    const goBack = ()=>{\n        if (navigation.canGoBack())\n            navigation.goBack()\n        else if (canGOBackScreen)\n            navigation.replace('HomeScreen')\n    }\n    if (windowType=='portrait' && canGOBackScreen)\n        return <TouchableOpacity onPress={goBack} disabled={!isMobile}>\n            <CommonButton title={''} color={isMobile?Colors[theme].buttonBackgroundColor:Colors[theme].hoverColor} onPress={goBack} disabled={isMobile} style={{width:32, height:32, margin:16, paddingVertical:1, paddingHorizontal:4}}>\n                <Ionicons size={24} color={Colors[theme].iconColor} name=\"arrow-back\"/>\n            </CommonButton>\n        </TouchableOpacity>\n    return null\n}\n\nconst MainNavigator = ()=>{\n    const windowType = useResizeContext();\n    const isMobile = useIsMobile()\n    const {auth} = useAuthContext()\n    const theme = useColorScheme()\n    const {lang, locale} = useLangContext()\n    const entries = useMemo(()=>{\n        if (auth.user === undefined)\n            return []\n        console.log('current user: ', auth.user)\n        return Object.entries(auth.user === null?login:main)\n    }, [auth, locale])\n    const modalValues = useMemo(()=>{\n        if (auth.user === undefined)\n            return []\n        return auth.user === null?[]:modals\n    }, [auth])\n    return (auth.user!==undefined?<View style={{flexDirection:'row', flex:1}}>\n        <ModalsProvider modals={modalValues}>\n            {auth.user?<DrawerNavigator user={auth.user}/>:undefined}\n            <View style={{flex:1}}>\n                <WebSocketProvider disable={auth.user === null || auth.user === undefined}>\n                    <FirebaseProvider user={auth.user}>\n                        <Main.Navigator\n                            screenOptions={({navigation, route})=>({\n                                headerStyle:{backgroundColor:Colors[theme].header, height:isMobile?50:undefined},\n                                headerTitleStyle:{color:Colors[theme].text},\n                                headerLeft:()=>headerLeft(navigation, route, windowType, theme, isMobile),\n                                headerRight:()=><HeaderRight/>,\n                                headerLeftContainerStyle:{backgroundColor:Colors[theme].header, borderBottomWidth:1, borderColor:Colors[theme].headerBottomColor},\n                                cardStyle:[{flexShrink:1}, theme=='light'?{}:{backgroundColor:'#010409'}],\n                                animationEnabled:windowType=='portrait',\n                                cardStyleInterpolator: CardStyleInterpolators.forHorizontalIOS\n                            })}\n                        >\n                            {entries.map(([key, screen])=><Main.Screen key={key} name={key} component={screen.component} options={{ title: lang(screen.title) }} />)}\n                            <Main.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n                        </Main.Navigator>\n                    </FirebaseProvider>\n                </WebSocketProvider>\n            </View>\n        </ModalsProvider>\n    </View>:<></>);\n}"],"sourceRoot":""}