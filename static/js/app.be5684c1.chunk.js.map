{"version":3,"sources":["src/navigation/index.tsx","src/hooks/lists/useMessengerMemberList.ts","src/components/TextButton.tsx","src/components/HeaderRight.tsx","src/screens/main/LoginScreen.tsx","src/hooks/lists/useMessengerContent.List.ts","src/components/LinkPreview.tsx","src/lib/react-native-webrtc/useWebsocketContext.tsx","src/lib/react-native-webrtc/webrtc/p2p.tsx","src/lib/react-native-webrtc/webrtc/index.ts","src/lib/react-native-webrtc/LocalCam.tsx","src/lib/react-native-webrtc/RemoteCam.tsx","src/screens/main/ChatScreen/VideoCallSection.tsx","src/components/FilePreview.tsx","src/screens/main/ChatScreen/index.tsx","src/screens/main/TabOneScreen.tsx","src/screens/main/InviteeScreen.tsx","src/screens/index.ts","src/screens/main/HomeScreen.tsx","src/hooks/useWebsocketContext.tsx","src/modals/ChannelEditModal.tsx","src/apis/notification.ts","src/hooks/useIsMobile.ts","src/hooks/lists/useUserMembershipList.ts","src/components/CommonItem.tsx","src/navigation/DrawerNavigator.tsx","src/lib/react-native-paper/Avatar.tsx","src/components/Avatar.tsx","src/tabs/DrawerTab.tsx","src/tabs/MessengerTab.tsx","src/tabs/index.ts","src/components/RowField.tsx","src/components/TextField.tsx","src/tabs/MemberTab.tsx","src/components/Themed.tsx","src/modals/GuestLogoutModal.tsx","src/modals/ProfileModal.tsx","src/lang/index.ts","src/components/Profile.tsx","src/components/CommonTextInput.tsx","src/hooks/useLocalSearch.ts","src/modals/InviteModal.tsx","src/hooks/lists/useExternalMembershipList.ts","src/apis/axios.ts","src/navigation/LinkingConfiguration.ts","src/hooks/useAuthContext.tsx","src/constants/Colors.ts","src/screens/NotFoundScreen.tsx","src/hooks/useFirebaseContext.tsx","src/modals/index.ts","src/navigation/RootNavigator.tsx","src/components/MobileSafeAreaView.tsx","App.tsx","src/hooks/useCachedResources.ts","src/components/CommonButton.tsx","web/firebase-config.js","src/apis/account.ts","src/apis/messenger.ts","src/assets/fonts/SpaceMono-Regular.ttf","src/hooks/useModalsContext.tsx","src/hooks/useResizeWindow.tsx","src/hooks/useColorScheme.ts","src/components/CommonSection.tsx","src/hooks/lists/useMessengerChannelList.ts"],"names":["navigationRef","React","navigate","name","params","current","Navigation","defaultColorScheme","useDefaultColorScheme","userColorScheme","useColorScheme","colorScheme","ref","documentTitle","formatter","options","route","linking","process","versions","undefined","LinkingConfiguration","theme","DarkTheme","DefaultTheme","l","search","decoded","slice","split","map","s","replace","join","window","history","replaceState","pathname","hash","location","ignoreWarnings","_console","_","clone","console","warn","message","Object","forEach","value","indexOf","useMessengerMemberList","channel_id","useQuery","a","async","getMessengerMemberList","data","useMessengerMemberMutation","queryClient","useQueryClient","invite","useMutation","postBulkMessengerMember","onSuccess","invalidateQueries","leave","deleteMessengerMember","mutateAsync","props","style","styles","StyleSheet","create","borderRadius","backgroundColor","borderWidth","useAuthContext","auth","dispatch","setModal","useModalsContext","windowType","useResizeWindow","defaultButtonProps","title","lang","onPress","user","username","endsWith","GuestLogoutModal","type","buttonProps","extra","filter","v","flexDirection","k","key","textStyle","color","Styles","login_container","flex","login_header","alignItems","paddingTop","paddingBottom","login_header_logo","width","resizeMode","login_header_text","marginTop","fontSize","login_header_text_bold","fontWeight","login_wrapper","justifyContent","paddingVertical","borderTopRightRadius","borderTopLeftRadius","form","maxWidth","form_error","height","form_error_text","textAlignVertical","form_input","paddingHorizontal","marginBottom","button","button_label","login_social","login_social_separator","login_social_separator_line","login_social_separator_text","marginHorizontal","login_social_buttons","login_social_button","borderColor","login_social_icon","login_social_facebook","login_footer_text","guest_footer_text","alignSelf","margin","login_footer_link","useMessengerContentList","useInfiniteQuery","pageParam","getMessengerContentList","then","select","pages","length","next","getNextPageParam","lastPage","id","refetchOnReconnect","refetchOnWindowFocus","fetchNextPage","lastJsonMessage","useWebsocketContext","useEffect","setQueryData","_data","pageParams","link","isMobile","CommonSection","containerStyle","bodyStyle","padding","Linking","openURL","url","image","Image","source","uri","maxHeight","description","WebSocketContext","createContext","sendJsonMessage","WebSocketProvider","disable","children","path","Context","useBackground","useContext","log","peerConstraints","iceServers","JSON","parse","sessionConstraints","mandatory","OfferToReceiveAudio","OfferToReceiveVideo","VoiceActivityDetection","mediaConstraints","audio","video","framerate","onICEcandidate","pc","_message","rtcMessage","candidate","RTCIceCandidate","addIceCandidate","sendICEcandidate","event","sendMessage","receiver","target","optimizeSdp","offerDescription","arr","sdp","str","i","test","RTCSessionDescription","createOffer","pcRefCurrent","stream","addStream","setLocalDescription","camStyle","container","cam","bottonContainer","position","bottom","buttonBar","label","pcRef","useRef","useState","sender","setSender","_stream","setStream","isPlay","useMemo","CustomRTCView","useCallback","memo","videoProps","start","mode","mediaDevices","getUserMedia","newStream","getDisplayMedia","catch","e","entries","error","stop","getTracks","track","websocketOnMessage","response","channel_name","peerConnection","RTCPeerConnection","addEventListener","answerDescription","setRemoteDescription","useLocalCam","View","Text","Button","setReceiver","setUser","close","clearInterval","statsInterval","iceConnectionState","activeStream","setInterval","getStats","stats","statsOutput","framePerSecond","report","kind","keys","statName","framesPerSecond","Date","toTimeString","addTransceiver","direction","streams","getRemoteStreams","createAnswer","localDescription","useRemoteCam","TextInput","onChangeText","VideoView","scale","Colors","flexGrow","focusGuest","setFocusGuest","VideoCallContainer","setDisable","videoMode","setVideoMode","guests","setGuests","useRtcContext","find","Math","max","ceil","sqrt","toggleVideoMode","Themed","aspectRatio","flexShrink","borderLeftWidth","borderBottomWidth","flexWrap","RemoteCam","LocalCam","CommonButton","file","showBorder","FontAwesome","size","filename","floor","pow","toFixed","humanFileSize","filesize","MessengerContentPageItem","useIsMobile","nextPage","nextContent","content","index2","created","date","isSystem","isFirst","isSelf","ownerId","dayChanged","message_set","marginVertical","marginLeft","Avatar","userId","outerContainerStyle","titleStyle","subtitle","linkDefault","wordBreak","linkStyle","selectable","file_set","fileIndex","FilePreview","link_set","linkIndex","LinkPreview","Panel_Button_Text","textAlign","Panel_Holder","InviteeScreen","navigation","enterGuest","setEnterGuest","channelList","useMessengerChannelList","messengerMemberMutation","useLayoutEffect","setOptions","headerRight","user_ids","main","HomeScreen","component","configTheme","useConfigColorScheme","home","setHome","text","HeaderRight","ChannelEditModal","index","tab","TextButton","paddingLeft","textDecorationLine","AsyncStorage","setItem","Appearance","set","tabs","bottomTabs","tabBarPosition","parseInt","onTab","setParams","ChatScreen","inputRef","channel","memberList","member_id","setValue","autoFocus","setAutoFocus","postValue","contentMutation","postMessage","_delete","deleteMessengerContent","d","variables","mutate","delete","useMessengerContentMutation","InviteModal","back","renderItem","item","canGoBack","goBack","focus","VideoCallSection","minWidth","contentContainerStyle","onScroll","nativeEvent","contentOffset","y","contentSize","onLayout","p","layout","background","onSubmitEditing","blurOnSubmit","Promise","resolve","reject","Platform","OS","input","document","createElement","onchange","files","onabort","onerror","click","f","TabOneScreen","login","LoginScreen","setUsername","password","setPassword","_login","placeholder","autoCapitalize","keyboardType","secureTextEntry","TouchableOpacity","modal","defaultContext","SCHEMA","DOMAIN","WebSocketInternalProvider","token","setToken","AppState","currentState","isActive","setIsActive","useWebSocket","shouldReconnect","closeEvent","protocols","onOpen","onClose","getItem","onChange","nextState","removeEventListener","Provider","channelMutation","useMessengerChannelMutation","setName","setDescription","separator","lightColor","darkColor","multiline","groupId","newChannel","owner","group","update","screen","field","getNotification","user_id","axios","get","postNotification","notification","post","putNotification","put","useMobileDetect","useUserMembershipList","getUserMembershipList","CommonItem","setHover","press","setPress","outerContainer","onPressIn","onPressOut","onHoverIn","onHoverOut","bodyView","minHeight","TabViewNavigator","setIndex","icons","assign","icon","renderTabBar","indicatorStyle","activeColor","inactiveColor","renderIcon","scene","onTabPress","findIndex","navigationState","routes","onIndexChange","renderScene","SceneMap","colors","useTheme","onAddList","tabBar","card","borderTopColor","border","pointerEvents","accessibilityRole","drawerTabs","borderTopWidth","values","drawerTab","Tab","elevation","borderRightWidth","normalizeHash","min","initHash","charCodeAt","abs","stringToHSL","toUpperCase","DrawerTab","Messenger","useMessengerChannelSorted","MessengerIcon","Ionicons","OneTab","MemberTab","MemberIcon","TwoTab","today","toISOString","last_message","marginRight","opacity","member_count","unread_count","RowField","rowStyle","TextField","CommonTextInput","renderMemberItem","userList","memberItem","ProfileModal","useThemeColor","colorName","colorFromProps","otherProps","light","dark","counterpart","direct","translations","ko","require","RNLocalize","languageTag","isRTL","I18nManager","forceRTL","intl","createIntl","defaultLocale","locale","messages","createIntlCache","formatMessage","defaultMessage","toString","patchUser","finally","disabled","onBlur","onEndEditing","contentHeight","setContentHeight","editable","onContentSizeChange","localSearchReducer","initialState","action","keyword","active","Error","InviteItem","selectedRef","has","selected","setSelected","add","GroupTabView","compare","useReducer","searchState","useLocalSearch","memberSet","Set","includes","dispatchKeyword","ExternalMembershipTabView","setKeyword","copied","setCopied","timeoutRef","externalMemberList","getExternalMembershipList","useExternalMembershipList","setTimeout","clearTimeout","inviteLink","href","Clipboard","setString","external","accountURL","defaultOption","baseURL","withCredentials","headers","_axios","interceptors","request","use","config","status","getToken","r","defaults","removeItem","ROOTPATH","prefixes","screens","Main","NotFound","AuthContext","authReducer","AuthProvider","authState","setError","membership_set","g","root_group_id","checkLogin","noti","logout","tint","tabIconDefault","tabIconSelected","header","buttonColor","buttonBackgroundColor","NotFoundScreen","linkText","firebaseConfig","messagingSenderId","apiKeyEncrypted","padStart","app","firebase","initializeApp","apiKey","messaging","onMessage","payload","Notification","permission","body","alert","requestToken","requestPermission","navigator","serviceWorker","register","serviceWorkerRegistration","scope","vapidKey","currentToken","preventDefault","unregister","setEnable","enable","context","FirebaseContext","Root","createStackNavigator","RootNavigator","Navigator","headerMode","screenOptions","cardStyle","animationEnabled","cardStyleInterpolator","CardStyleInterpolators","forVerticalIOS","Screen","MainNavigator","headerShown","gestureDirection","modalValues","modals","useFirebaseContext","DrawerNavigator","headerStyle","headerTitleStyle","headerLeft","canGOBackScreen","headerLeftContainerStyle","forHorizontalIOS","innerHeight","setHeight","Dimensions","QueryClient","App","isLoadingComplete","setLoadingComplete","SplashScreen","Font","font","useCachedResources","isAppearenceComplete","useInitColorScheme","MobileSafeAreaView","client","StatusBar","DefaultButton","hover","_props","module","exports","guestLogin","checkLoginToken","isOffline","code","startsWith","getUserList","group_id","patch","ids","updated","getMessengerChannelList","postChannel","postDirectChannel","putChannel","deleteChannel","id_lt","id_lt_param","results","formData","FormData","append","content_id","ModalsContext","ModalsProvider","allModals","Component","setModals","animationType","setAnimationType","ExactComponent","newModals","m","visible","getWindowType","ResizeWindowContext","ResizeWindowProvider","detectMobile","useWindowDimensions","setWindowType","complete","setComplete","withSeparator","titleView","sort","b"],"mappings":"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","file":"static/js/app.be5684c1.chunk.js","sourcesContent":["/**\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\n * https://reactnavigation.org/docs/getting-started\n *\n */\nimport _ from 'lodash';\nimport { NavigationContainer, DefaultTheme, DarkTheme, NavigationContainerRef } from '@react-navigation/native';\nimport * as React from 'react';\n\nimport LinkingConfiguration from './LinkingConfiguration';\nimport RootNavigator from './RootNavigator';\n\nimport { ColorSchemeName, useColorScheme as useDefaultColorScheme } from 'react-native';\nimport { Appearance, useColorScheme as useColorScheme } from 'react-native-appearance';\nimport { ResizeWindowProvider } from '../hooks/useResizeWindow';\n\n\nconst navigationRef = React.createRef<NavigationContainerRef>();\n\nexport function navigate(name:string, params?:any) {\n  if (params)\n    navigationRef.current?.navigate(name, params);\n  navigationRef.current?.navigate(name);\n}\n\nexport default function Navigation() {\n  const defaultColorScheme = useDefaultColorScheme()\n  const userColorScheme = useColorScheme()\n  const colorScheme = userColorScheme =='no-preference'?defaultColorScheme:userColorScheme\n  return <NavigationContainer\n    ref={navigationRef}\n    documentTitle={{formatter: (options, route) => {return `TOKKI TOK`}}}\n    linking={(process.versions && process.versions['electron'])?undefined:LinkingConfiguration}\n    theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n        <ResizeWindowProvider>\n          <RootNavigator />\n        </ResizeWindowProvider>\n  </NavigationContainer>\n}\n\n(function(l) {  // for github-page\n    if (l !== undefined && l.search[1] === '/' ) {\n        var decoded = l.search.slice(1).split('&').map(function(s) { \n        return s.replace(/~and~/g, '&')\n        }).join('?');\n        window.history.replaceState(null, '',\n            l.pathname.slice(0, -1) + decoded + l.hash\n        );\n    }\n}(window.location))\n    \nconst ignoreWarnings = ['ReactNativeFiberHostComponent'];\nconst _console = _.clone(console);\nconsole.warn = (message: string|Object) => {\n    var warn = true;\n    if (message instanceof Object)\n    warn = false;\n    else{\n    ignoreWarnings.forEach((value)=>{\n        if (message.indexOf && message.indexOf(value) <= -1) {\n            warn = false;\n        }\n    })\n    };\n    if (warn){\n        _console.warn(message);\n    }\n    else{\n        // console.log(message)\n    }\n};\n","import { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport { postBulkMessengerMember, deleteMessengerMember, getMessengerMemberList } from \"../../apis\";\n\nexport default function useMessengerMemberList(channel_id:number){\n  const { data } = useQuery([\"MessengerMemberList\", channel_id] , async()=>await getMessengerMemberList(channel_id))\n  return data\n}\n\n\nexport function useMessengerMemberMutation(){\n  const queryClient = useQueryClient()\n  const invite = useMutation(postBulkMessengerMember, {\n    onSuccess: ()=>{\n      queryClient.invalidateQueries(\"MessengerMemberList\")\n    }\n  })\n\n  const leave = useMutation(deleteMessengerMember, {\n    onSuccess: () => {\n      queryClient.invalidateQueries(\"MessengerChannelList\")\n      queryClient.invalidateQueries(\"MessengerMemberList\")\n    }\n  })\n  return {invite:invite.mutateAsync, leave:leave.mutateAsync}\n}","import React, { useState } from 'react';\nimport { StyleSheet} from 'react-native';\nimport { CustomButtonProps } from '../types';\nimport CommonButton from './CommonButton';\n\nexport default (props:CustomButtonProps)=>{\n    return <CommonButton {...props} style={[styles.style, props.style]}/>\n}\n\nconst styles = StyleSheet.create({\n    style:{\n        borderRadius:6, \n        backgroundColor: 'transparent',\n        borderWidth:0\n    },\n});\n","import React from 'react'\nimport TextButton from \"./TextButton\"\nimport useAuthContext from \"../hooks/useAuthContext\"\nimport useResizeWindow from '../hooks/useResizeWindow'\nimport { View } from 'react-native'\nimport lang from '../lang'\nimport useModalsContext from '../hooks/useModalsContext'\nimport GuestLogoutModal from '../modals/GuestLogoutModal'\n\ntype ButtonProps = {title:string, onPress:()=>void, windowType?:'landscape'|'portrait'}\n\nexport default (props:{extra?:ButtonProps[]})=>{\n    const {auth, dispatch} = useAuthContext()\n    const { setModal } = useModalsContext()\n    const windowType = useResizeWindow()\n    const defaultButtonProps:ButtonProps[] = [{title:lang('sign out'), onPress:()=>{\n        if (auth?.user?.username.endsWith(\".guest\")){\n            setModal(GuestLogoutModal, {})\n        }\n        else{\n            dispatch({type:\"LOGOUT_REQUEST\"})\n        }\n    }}]\n    const buttonProps = (props.extra?[...props.extra, ...defaultButtonProps]:defaultButtonProps).filter(v=>v.windowType==windowType || v.windowType == undefined)\n    return<View style={{flexDirection:'row'}}>\n        {buttonProps.map((v,k)=><TextButton key={k} {...v} textStyle={{color:'white'}} color='#gray'/>)}\n    </View>\n}\n  ","import React, {useLayoutEffect, useState} from 'react';\nimport {\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n  StyleSheet,\n} from 'react-native';\nimport { StackScreenProps } from '@react-navigation/stack';\nimport useAuthContext from '../../hooks/useAuthContext';\nimport lang from '../../lang'\n\nexport default function LoginScreen({\n  navigation, route\n}: StackScreenProps<any, 'Login'>) {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const {error, dispatch} = useAuthContext()\n  const _login = ()=>dispatch({type:'LOGIN_REQUEST', username, password})\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      headerRight: undefined\n    });\n  }, [navigation, route]);\n\n  return (\n    <View style={Styles.login_wrapper}>\n      <View style={Styles.form}>\n        {error && <View style={Styles.form_error}>\n          <Text style={Styles.form_error_text}>{lang(error)}</Text>\n        </View>}\n        <TextInput\n          style={Styles.form_input}\n          value={username}\n          placeholder={lang('Username')}\n          onChangeText={(text) => setUsername(text)}\n          autoCapitalize={'none'}\n          keyboardType={'email-address'}\n          onSubmitEditing={_login}\n        />\n        <TextInput\n          style={Styles.form_input}\n          value={password}\n          placeholder={lang('Password')}\n          secureTextEntry\n          onChangeText={(text) => setPassword(text)}\n          onSubmitEditing={_login}\n        />\n        <TouchableOpacity onPress={_login}>\n          <View style={Styles.button}>\n            <Text style={Styles.button_label}>{lang('Sign in')}</Text>\n          </View>\n        </TouchableOpacity>\n        <TouchableOpacity onPress={() => dispatch({type:\"LOGIN_GUEST\"})}>\n          <Text style={Styles.guest_footer_text}>\n            {lang(\"Sign in as guest\")}\n          </Text>\n        </TouchableOpacity>\n      </View>\n      <View style={Styles.login_social}>\n        <View style={Styles.login_social_separator}>\n          <View style={Styles.login_social_separator_line} />\n          <Text style={Styles.login_social_separator_text}>{'*'}</Text>\n          <View style={Styles.login_social_separator_line} />\n        </View>\n        <View style={Styles.login_social_buttons}>\n        </View>\n      </View>\n      {/* <>\n        <TouchableOpacity onPress={() => navigate(\"RegistrationScreen\")}>\n          <Text style={Styles.login_footer_text}>\n            {\"Don't have an account? \"}\n            <Text style={Styles.login_footer_link}>{'Sign up'}</Text>\n          </Text>\n        </TouchableOpacity>\n      </> */}\n    </View>\n  );\n};\n\nconst Styles = StyleSheet.create({\n    login_container: {\n      flex: 1,\n      backgroundColor: '#FFF',\n    },\n    login_header: {\n      alignItems: 'center',\n      paddingTop: 30,\n      paddingBottom: 50,\n      backgroundColor: '#208AEC',\n    },\n    login_header_logo: {\n      width: 220,\n      resizeMode: 'contain',\n    },\n    login_header_text: {\n      marginTop: 15,\n      color: '#f0f0f0',\n      fontSize: 16,\n    },\n    login_header_text_bold: {\n      color: '#fff',\n      fontWeight: 'bold',\n    },\n    login_wrapper: {\n      flex: 1,\n      justifyContent: 'space-between',\n      paddingVertical: 40,\n      borderTopRightRadius: 12,\n      borderTopLeftRadius: 12,\n      marginTop: -10,\n      backgroundColor: '#fff',\n      alignItems: 'center',\n    },\n    form: {\n      width: '100%',\n      maxWidth: 320,\n    },\n    form_error: {\n      height: 22,\n      width:'100%',\n    },\n    form_error_text:{\n      textAlignVertical:'center',\n      color:'red',\n      fontSize:13,\n    },\n    form_input: {\n      height: 44,\n      paddingHorizontal: 20,\n      marginBottom: 20,\n      backgroundColor: '#EDF0F7',\n      borderRadius: 50,\n    },\n    button: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: 44,\n      backgroundColor: '#0065A4',\n      borderRadius: 50,\n    },\n    button_label: {\n      color: '#fff',\n      fontSize: 16,\n    },\n    login_social: {\n      width: '100%',\n      maxWidth: 280,\n      marginTop: 20,\n    },\n    login_social_separator: {\n      flexDirection: 'row',\n      alignItems: 'center',\n    },\n    login_social_separator_line: {\n      flex: 1,\n      width: '100%',\n      height: 1,\n      backgroundColor: '#E0E0E0',\n    },\n    login_social_separator_text: {\n      marginHorizontal: 10,\n      color: '#808080',\n      fontSize: 16,\n    },\n    login_social_buttons: {\n      flexDirection: 'row',\n      justifyContent: 'center',\n      marginTop: 20,\n    },\n    login_social_button: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: 60,\n      height: 60,\n      marginHorizontal: 12,\n      borderWidth: 1,\n      borderColor: '#E7E7E7',\n      borderRadius: 60,\n    },\n    login_social_icon: {\n      width: 38,\n      height: 38,\n      resizeMode: 'contain',\n    },\n    login_social_facebook: {\n      backgroundColor: '#4267B2',\n      borderColor: '#4267B2',\n    },\n    login_footer_text: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      color: '#808080',\n      fontSize: 14,\n    },\n    guest_footer_text: {\n      flexDirection: 'row',\n      alignSelf: 'center',\n      color: '#808080',\n      fontSize: 15,\n      margin: 15\n    },\n    login_footer_link: {\n      color: '#208AEC',\n      fontSize: 15,\n      fontWeight: 'bold',\n    },\n  });\n  ","import { useCallback, useEffect, useState } from \"react\"\nimport { InfiniteData, useInfiniteQuery, useMutation, useQueryClient } from \"react-query\"\nimport { getMessengerContentList, postMessage, deleteMessengerContent } from \"../../apis\"\nimport { MessengerContent } from \"../../types\"\nimport useWebsocketContext from \"../useWebsocketContext\"\n\nexport type MessengerContentPage = {\n  next?:MessengerContentPage\n  current:MessengerContent[]\n}\n\nexport default function useMessengerContentList(channel_id:number){  \n  const queryClient = useQueryClient()\n  const { data, fetchNextPage } = useInfiniteQuery<MessengerContentPage>(\n    [\"MessengerContentList\", channel_id], \n    async({pageParam})=>getMessengerContentList(channel_id, pageParam).then(current=>({current})), \n    {\n      select:data=>{\n        if(data.pages.length > 1)\n          data.pages[data.pages.length - 2].next = data.pages[data.pages.length - 1]\n        return data;\n      },\n      getNextPageParam:(lastPage)=>lastPage?.current.length?lastPage.current[lastPage.current.length - 1].id:undefined,\n      refetchOnReconnect:false,\n      refetchOnWindowFocus:false\n    }\n  )\n  const { lastJsonMessage } = useWebsocketContext()\n  useEffect(()=>{\n    if(lastJsonMessage !=null && lastJsonMessage['type']=='next_message' && lastJsonMessage['data']['channel'] == channel_id){\n      queryClient.setQueryData<InfiniteData<MessengerContentPage>>([\"MessengerContentList\", channel_id], (_data)=>{\n        if(_data?.pages[0].current && _data?.pages[0].current[0].id != lastJsonMessage['data'].id)\n          _data.pages[0].current = [lastJsonMessage['data'], ..._data?.pages[0].current]\n        return {...(_data || {pages:[], pageParams:[]})}\n      })\n    }\n  }, [lastJsonMessage])\n  return { data, fetchNextPage }\n}\n\nexport function useMessengerContentMutation(){\n  // const queryClient = useQueryClient()\n  const create = useMutation(postMessage, {\n    onSuccess: () => {\n      // queryClient.setQueryData(['MessengerContentList'], (data:any) => ({\n      //   pages: data.pages.slice(0, 1),\n      //   pageParams: data.pageParams.slice(0, 1),\n      // }))\n      // queryClient.invalidateQueries(\"MessengerContentList\")\n    }\n  });\n  const _delete = useMutation(deleteMessengerContent, {\n    onSuccess: (d, variables) => {\n      // queryClient.setQueryData(['MessengerContentList'], (data:any) => ({\n      //   pages: (data.pages as MessengerContent[][]).map(v=>v.filter(v2=>v2.id != variables)),\n      //   pageParams: data.pageParams,\n      // }))\n    }\n  })\n  return { create:create.mutate, delete:_delete.mutate }\n}","import React from 'react'\nimport { TouchableOpacity } from \"react-native-gesture-handler\"\nimport CommonSection from \"./CommonSection\"\nimport { Image, Linking, TextStyle } from \"react-native\"\nimport { View, Text } from \"./Themed\"\nimport { Link } from \"../types\"\n\n\n\nexport default ({link, isMobile}:{link:Link, isMobile:boolean})=>{\n    return <CommonSection containerStyle={{marginHorizontal:0}} bodyStyle={{padding:0}}>\n    <TouchableOpacity onPress={()=>Linking.openURL(link.url)} style={{flexDirection:'row'}} containerStyle={{width:'100%'}}>\n        {link.image && <Image source={{uri:link.image}} resizeMode=\"cover\" style={{ width:'100%', maxWidth:isMobile?120:150, maxHeight:isMobile?120:150, borderWidth:1}}/>}\n        <View style={{flex:1, marginHorizontal:20}}>\n        <Text style={{fontSize:18}}>{link.title}</Text>\n        <Text style={{fontSize:14}}>{link.description}</Text>\n        <Text style={{fontSize:12}}>{link.url}</Text>\n        </View>\n    </TouchableOpacity>\n    </CommonSection>\n}","import React, { createContext, useContext } from \"react\"\nimport { SendJsonMessage } from \"react-use-websocket/dist/lib/types\";\nimport { WebSocketInternalProvider } from \"../../hooks/useWebsocketContext\";\n\nconst WebSocketContext = createContext<{lastJsonMessage:any, sendJsonMessage:SendJsonMessage }>({lastJsonMessage:undefined, sendJsonMessage:()=>{}});\n\nexport const WebSocketProvider = ({disable, children}:{disable?:boolean, children:React.ReactNode})=>{\n  return disable?<></>:<WebSocketInternalProvider path={'messenger/ws/rtc/'} Context={WebSocketContext} useBackground>\n    {children}\n  </WebSocketInternalProvider>\n}\n\nexport default ()=>{\n  const webSocketContext = useContext(WebSocketContext)\n  return webSocketContext\n}\n\n","import React, { useCallback, useRef, useState, useMemo } from \"react\";\n//@ts-ignore\nimport { RTCView, mediaDevices, RTCPeerConnection, MediaStream, RTCSessionDescription, RTCIceCandidate } from \"react-native-webrtc-web-shim\";\n// @ts-ignore\nimport {TURN_SERVER} from \"@env\"\n\n\nconsole.log(TURN_SERVER?\"use turn server\": \"use stun server\")\n\nexport const peerConstraints = {\n\ticeServers: [TURN_SERVER?JSON.parse(TURN_SERVER):{urls: 'stun:stun.l.google.com:19302'}]\n};\n\nexport const sessionConstraints = {\n\tmandatory: {\n\t\tOfferToReceiveAudio: true,\n\t\tOfferToReceiveVideo: true,\n\t\tVoiceActivityDetection: true\n\t}\n};\n\nconst mediaConstraints = {audio:true, video:{framerate:30}}\n\n//@ts-ignore\nexport {MediaStream, RTCPeerConnection, RTCSessionDescription} from \"react-native-webrtc-web-shim\";\n\nconst onICEcandidate = (pc:typeof RTCPeerConnection, message:any)=>{\n\tconst _message = message.data.rtcMessage\n\t\tconst candidate = new RTCIceCandidate(_message);\n\t\tif (pc) {\n\t\t\tconsole.log(\"ICE candidate Added\");\n\t\t\tpc.addIceCandidate(candidate);\n\t\t}\n}\n\nconst sendICEcandidate = (event:any, sendMessage:(data:any)=>void, receiver:string, target:string) => {\n\t// When you find a null candidate then there are no more candidates.\n\t// Gathering of candidates has finished.\n\tif ( !event.candidate ) { return; };\n\t// Send the event.candidate onto the person you're calling.\n\t// Keeping to Trickle ICE Standards, you should send the candidates immediately.\n\tsendMessage({type:'ICEcandidate', receiver, data:{target, rtcMessage:event.candidate}})\n  }\n\nconst BAND_WIDTH = 8000\n\nconst optimizeSdp = (offerDescription:RTCSessionDescription)=>{\n\tvar arr = offerDescription.sdp.split('\\r\\n');\n\tarr.forEach((str:string, i:number) => {\n\t\tif (/^a=fmtp:\\d*/.test(str)) {\n\t\t\tarr[i] = str + `;x-google-max-bitrate=${BAND_WIDTH};x-google-min-bitrate=${BAND_WIDTH};x-google-start-bitrate=${BAND_WIDTH}`;\n\t\t} else if (/^a=mid:(0|video)/.test(str)) { // if with audio then 0=>1\n\t\t\tarr[i] += `\\r\\nb=AS:${BAND_WIDTH}`;\n\t\t}\n\t});\n  \treturn new RTCSessionDescription({\n    \ttype: offerDescription.type,\n    \tsdp: arr.join('\\r\\n'),\n  \t})\n}\n\nconst createOffer = async(pcRefCurrent:{pc?:typeof RTCPeerConnection, receiver:string}, sendMessage:(data:any)=>void, stream:typeof MediaStream, target:string, user?:{name:string})=>{\n\tstream && pcRefCurrent.pc.addStream( stream );\n\tconst offerDescription = optimizeSdp((await pcRefCurrent.pc.createOffer( sessionConstraints )));\n\tawait pcRefCurrent.pc.setLocalDescription( offerDescription );\n\tsendMessage({type:'call', receiver:pcRefCurrent.receiver, data:{target, name:user?.name, rtcMessage:offerDescription}})\n}\n\nexport const useLocalCam = (sendMessage:(data:any)=>void)=>{\n\tconst pcRef = useRef<Record<number,{pc:typeof RTCPeerConnection, receiver:string}>>({})\n\tconst [sender, setSender] = useState<string>()\n\tconst [_stream, setStream] = useState<MediaStream>()\n\tconst isPlay = useMemo(()=>_stream?true:false, [_stream])\n\tconst CustomRTCView = useCallback(React.memo(({style}:{style:any})=>(_stream?<RTCView stream={_stream} style={style} videoProps={{height:'100%'}} />:<></>)) , [_stream])\n\tconst start = useCallback(async(user:{name:string}, stream?:typeof MediaStream, mode?:'camera'|'display')=>{\n\t\tconsole.log(\"start\");\n\t\tif (!_stream || mode!==undefined) {\n\t\t\ttry {\n\t\t\t\tlet newStream:typeof MediaStream;\n\t\t\t\tif(mode == 'camera'){\n\t\t\t\t\tnewStream = await mediaDevices.getUserMedia(mediaConstraints)\n\t\t\t\t}\n\t\t\t\telse if (mode == 'display'){\n\t\t\t\t\tnewStream = await mediaDevices.getDisplayMedia(mediaConstraints)\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tnewStream = stream || await mediaDevices.getUserMedia(mediaConstraints).catch((e:any)=>mediaDevices.getDisplayMedia(mediaConstraints));\n\t\t\t\t}\n\t\t\t\tsetStream(newStream)\n\t\t\t\tObject.entries(pcRef.current).map(([k, v])=>{\n\t\t\t\t\tcreateOffer(v, sendMessage, newStream, 'guest', user)\n\t\t\t\t})\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e);\n\t\t\t}\n\t\t}\n\t}, [_stream])\n\tconst stop = useCallback(()=>{\n\t\tconsole.log(\"stop\");\n\t\tif(_stream){\n\t\t\t_stream.getTracks().map((track:any) => track.stop());\n\t\t\tsetStream(undefined)\n\t\t}\n\t}, [_stream])\n\treturn {\n\t\tstart,\n\t\tstop,\n\t\twebsocketOnMessage: async(response:any, user:{name:string})=>{\n\t\t\tlet type = response.type;\n\t\t\tif (type == 'connection'){\n\t\t\t\tsetSender(response.data.channel_name)\n\t\t\t}\n\t\t\tif (type == 'start' && response.data.target=='host'){\n\t\t\t  console.log('1 start')\n\t\t\t  const peerConnection = new RTCPeerConnection( peerConstraints );\n\t\t\t  peerConnection.addEventListener( 'icecandidate', (event:any) => sendICEcandidate(event, sendMessage, response.sender, 'guest'));\n\t\t\t  pcRef.current[response.sender] = {pc:peerConnection, receiver: response.sender}\n\t\t\t  createOffer(pcRef.current[response.sender], sendMessage, _stream, 'guest', user)\n\t\t\t}\n\t\t\t\n\t\t\tif (type == \"answer\" && response.data.target == 'host'){\n\t\t\t  console.log('3 answer')\n\t\t\t  const peerConnection = pcRef.current[response.sender].pc\n\t\t\t  const answerDescription = new RTCSessionDescription(response.data.rtcMessage);\n\t\t\t  await peerConnection.setRemoteDescription( answerDescription );\n\t\t\t  // const streams = pcRef.current.pc.getRemoteStreams()\n\t\t\t  // setMirrorStream(streams[streams.length - 1])\n\t\t\t}\n\t\t\tif (type == \"ICEcandidate\" && response.data.target=='host'){\n\t\t\t\tconst peerConnection = pcRef.current[response.sender].pc\n\t\t\t\tonICEcandidate(peerConnection, response)\n\t\t\t}\n\t\t},\n\t\tCustomRTCView,\n\t\tisPlay,\n\t\tsender,\n\t\t// renderMirrorView,\n\t}\n}\n\nexport const useRemoteCam = (sendMessage:(data:any)=>void)=>{\n\tconst pcRef = useRef<{pc?:RTCPeerConnection, receiver?:string, statsInterval?:any}>({})\n\tconst [user, setUser] = useState<{name:string}>()\n\tconst [_stream, setStream] = useState<MediaStream>()\n\tconst CustomRTCView = useCallback(React.memo((style:any)=>_stream?<RTCView stream={_stream} style={style} videoProps={{height:'100%'}} />:<></>), [_stream])\n\tconst isPlay = useMemo(()=>_stream?true:false, [_stream])\n\tconst start = useCallback((receiver:string)=>{\n\t\tconsole.log(\"start\");\n\t\tif (!pcRef.current.pc) {\n\t\t  pcRef.current.pc = new RTCPeerConnection( peerConstraints );\n\t\t  pcRef.current.receiver = receiver\n\t\t}\n\t\tif (!_stream){\n\t\t\tsendMessage({type:'start', receiver, data:{'target': 'host'}})\n\t\t}\n\t}, [_stream])\n\tconst stop = () => {\n\t\tconsole.log(\"stop\");\n\t\tif (pcRef.current.pc) {\n\t\t  // peerConnection._unregisterEvents();\n\t\t  setStream(undefined)\n\t\t  pcRef.current.pc.close();\n\t\t  pcRef.current.pc = undefined\n\t\t  pcRef.current.receiver = undefined\n\t\t  clearInterval(pcRef.current.statsInterval)\n\t\t}\n\t}\n\treturn {\n\t\tstart,\n\t\tstop,\n\t\twebsocketOnMessage: async(response:any)=>{\n\t\t\tlet type = response.type;\n\t\t\tif (type == 'start' && response.data.target=='guest' && response.sender == pcRef.current?.receiver){\n\t\t\t\tconsole.log('(remote)1 start')\n\t\t\t\tconst peerConnection = pcRef.current.pc\n\t\t\t\tsetUser({name: response.data.name})\n\t\t\t\tpeerConnection.addEventListener('icecandidate', (event:any) => sendICEcandidate(event, sendMessage, response.sender, 'host'));\n\t\t\t\tpeerConnection.addEventListener('iceconnectionstatechange', (e:any)=>{\n\t\t\t\t\tif (pcRef.current.pc.iceConnectionState == 'connected'){\n\t\t\t\t\t\tlet activeStream = false\n\t\t\t\t\t\tpcRef.current.statsInterval = setInterval(async()=>{\n\t\t\t\t\t\t\tconst stats = await pcRef.current.pc.getStats(null)\n\t\t\t\t\t\t\tlet statsOutput = \"\";\n\t\t\t\t\t\t\tlet framePerSecond = undefined\n\t\t\t\t\t\t\tstats.forEach((report:any) => {\n\t\t\t\t\t\t\t\tif (report.type === \"inbound-rtp\" && report.kind === \"video\") {\n\t\t\t\t\t\t\t\t\tObject.keys(report).forEach((statName) => {\n\t\t\t\t\t\t\t\t\t\tstatsOutput += `${statName}: ${report[statName]}\\n`;\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tframePerSecond = report.framesPerSecond\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tconsole.log(activeStream, framePerSecond)\n\t\t\t\t\t\t\tif (framePerSecond != undefined){\n\t\t\t\t\t\t\t\tactiveStream = true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (activeStream){\n\t\t\t\t\t\t\t\tstop()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconsole.log(new Date().toTimeString().split(' ')[0], statsOutput)\n\t\t\t\t\t\t}, 1000);\n\t\t\t\t\t}\n\t\t\t\t\telse if (pcRef.current.pc.iceConnectionState == 'failed'){\n\t\t\t\t\t\tstop()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t// peerConnection.addTransceiver('audio', {\n\t\t\t\t// \tdirection: 'recvonly'\n\t\t\t\t// });\n\t\t\t\tpeerConnection.addTransceiver('video', {\n\t\t\t\t\tdirection: 'recvonly'\n\t\t\t\t});\n\t\t\t\tawait createOffer({pc:pcRef.current.pc, receiver:response.sender}, sendMessage, _stream, 'host', user)\n\t\t\t}  \n\t\t\tif (type == \"answer\" && response.data.target=='guest' && response.sender == pcRef.current?.receiver){\n\t\t\t\tconsole.log('(remote)3 answer')\n\t\t\t\tconst answerDescription = new RTCSessionDescription(response.data.rtcMessage);\n\t\t\t\tawait pcRef.current.pc.setRemoteDescription( answerDescription );\n\t\t\t\tconst streams = pcRef.current.pc.getRemoteStreams()\n\t\t\t\tsetStream(streams[streams.length - 1])\n\t\t\t\tsendMessage({type:'end', receiver:pcRef.current.receiver, data:{}})\n\t\t\t}\n\t\t\tif (type == \"call\" && response.sender == pcRef.current?.receiver){\n\t\t\t  console.log('2 call')\n\t\t\t  const peerConnection = pcRef.current.pc\n\t\t\t  setUser({name:response.data.name})\n\t\t\t  if (!peerConnection)\n\t\t\t\treturn\n\t\t\t  peerConnection.addEventListener( 'icecandidate', (event:any) => sendICEcandidate(event, sendMessage, response.sender, 'host'));\n\t\t\t  const offerDescription = new RTCSessionDescription(response.data.rtcMessage);\n\t\t\t  await peerConnection.setRemoteDescription( offerDescription );\n\t\t\t  const answerDescription = await peerConnection.createAnswer( sessionConstraints );\n\t\t\t  await peerConnection.setLocalDescription( answerDescription );\n\t\t\t  sendMessage({type:'answer', receiver:pcRef.current.receiver, data:{target:'host', rtcMessage:peerConnection.localDescription}})\n\t\t\t  // Here is a good place to process candidates.\n\t\t\t  const streams = pcRef.current.pc.getRemoteStreams()\n\t\t\t  setStream(streams[streams.length - 1])\n\t\t\t}\n\t\t\tif (type == \"ICEcandidate\" && response.data.target=='guest' && response.sender == pcRef.current?.receiver)\n\t\t\t  onICEcandidate(pcRef.current.pc, response)\n\t\t},\n\t\tCustomRTCView,\n\t\tuser,\n\t\tisPlay\n\t}\n}","import {StyleSheet} from \"react-native\";\nexport {useLocalCam, useRemoteCam} from \"./p2p\"\n\nexport const camStyle = StyleSheet.create({\n\tcontainer:{ flex: 1},\n\tcam:{ flex: 1, height:'100%'},\n\tbottonContainer: {position:\"absolute\", bottom:0, justifyContent:'flex-end'},\n\tbuttonBar: { flexDirection: \"row\", justifyContent: \"space-around\" },\n\tlabel: {backgroundColor:'#0008', color:'white', paddingHorizontal:5},\n})","import React, { useEffect } from \"react\";\nimport {Button, View, Text} from \"react-native\";\nimport useWebsocketContext from \"./useWebsocketContext\";\nimport { useLocalCam, camStyle} from \"./webrtc\";\n\n\nexport default (props:{user?:{name:string}|null, mode?:'camera'|'display'|null})=>{\n  const {lastJsonMessage, sendJsonMessage} = useWebsocketContext()\n  const {start, stop, websocketOnMessage, CustomRTCView, isPlay} = useLocalCam(sendJsonMessage)\n  useEffect(()=>{\n    props.user && lastJsonMessage && websocketOnMessage(lastJsonMessage, props.user)\n  }, [lastJsonMessage, props.user])\n  useEffect(()=>{\n    if(props.mode && !isPlay){\n      props.user && start(props.user, undefined, props.mode)\n    }\n    else if(props.mode===null && isPlay){\n      stop()\n    }\n    return ()=>{isPlay && stop()}\n  }, [isPlay, props.user, props.mode])\n  return (\n    <View style={camStyle.container}>\n      <CustomRTCView style={camStyle.cam}/>\n      <View style={camStyle.bottonContainer}>\n        <View style={camStyle.buttonBar}>  \n        </View>\n        <View style={{flexDirection:'row'}}><Text style={camStyle.label}>{props.user?.name}</Text></View>\n        <View style={camStyle.buttonBar}>\n          {props.mode === undefined && !isPlay && <Button title=\"Start\" onPress={()=>props.user && start(props.user)} />}\n          {props.mode === undefined && isPlay && <Button title=\"Stop\" onPress={stop} />}\n        </View>\n      </View>\n    </View>\n  );\n}\n","import React, { useState, useEffect, } from \"react\";\nimport {Button,Text, TextInput, View} from \"react-native\";\nimport useWebsocketContext from \"./useWebsocketContext\";\nimport { useRemoteCam, camStyle} from \"./webrtc\";\n\nexport default (props:{receiver?:string})=>{\n  const [receiver, setReceiver] = useState('')\n  const {lastJsonMessage, sendJsonMessage} = useWebsocketContext()\n  const {start, stop, websocketOnMessage, CustomRTCView, isPlay, user} = useRemoteCam(sendJsonMessage)\n  useEffect(()=>{\n    lastJsonMessage && websocketOnMessage(lastJsonMessage)\n  }, [lastJsonMessage])\n  useEffect(()=>{\n    if(props.receiver){\n      start(props.receiver)\n    }\n    return ()=>stop()\n  }, [props.receiver])\n  return (\n    <View style={camStyle.container}>\n      <CustomRTCView style={camStyle.cam}/>\n      <View style={camStyle.bottonContainer}>\n        <View style={camStyle.buttonBar}>\n        </View>\n        <View style={{flexDirection:'row'}}>{\n          (props.receiver || isPlay)?\n          <Text style={camStyle.label}>{user?.name || 'loading...'}</Text>:\n          <>\n            <Text style={{borderWidth:1}}>Receiver:&nbsp;</Text>\n            <TextInput style={{borderWidth:1, flex:1}} value={receiver} onChangeText={setReceiver}/>\n          </> \n        }</View>\n        <View style={camStyle.buttonBar}>\n          {props.receiver === undefined && !isPlay && <Button title=\"Start\" onPress={()=>start(receiver)} />}\n          {props.receiver === undefined && isPlay && <Button title=\"Stop\" onPress={stop} />}\n        </View>\n      </View>\n    </View>\n  );\n}\n\n","import React, {useEffect, useState} from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { View as ThemedView } from '../../../components/Themed' \nimport Colors from '../../../constants/Colors';\nimport {default as useRtcContext, WebSocketProvider as RtcProvider} from \"../../../lib/react-native-webrtc/useWebsocketContext\";\nimport LocalCam from '../../../lib/react-native-webrtc/LocalCam';\nimport RemoteCam from '../../../lib/react-native-webrtc/RemoteCam';\nimport useResizeWindow from '../../../hooks/useResizeWindow';\nimport useAuthContext from '../../../hooks/useAuthContext';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport CommonButton from '../../../components/CommonButton';\n\ntype VideoType = 'camera'|'display'|null\ntype VideoCallProps = {channel_id:number, setDisable:(disable:boolean)=>void, disable?:boolean}\n\n\nconst VideoView = (props:{\n  scale:string,\n  focusGuest?:string,\n  setFocusGuest:(focusGuest?:string)=>void\n  receiver?:string\n  children:React.ReactNode\n})=>{\n  return <View style={[{maxWidth:props.scale, maxHeight:props.scale, borderWidth:1, borderColor:Colors.borderColor, backgroundColor:'gray', flexDirection:'row', flexGrow:1}, (props.focusGuest == undefined || props.focusGuest == props.receiver)?{}:{width:0, height:0}]}>\n    <TouchableOpacity style={{flex:1}} containerStyle={{flex:1, justifyContent:'center'}} onPress={()=>props.setFocusGuest(props.focusGuest?undefined:props.receiver)}>\n    {props.children}\n    </TouchableOpacity>\n  </View>\n    \n  \n}\n\nconst VideoCallContainer = ({channel_id, disable, setDisable}:VideoCallProps)=>{\n  const {auth} = useAuthContext()\n  const [videoMode, setVideoMode] = useState<VideoType>(null)\n  const [guests, setGuests] = useState<string[]>([])\n  const [focusGuest, setFocusGuest] = useState<string>()\n  const windowType = useResizeWindow()\n  const { lastJsonMessage, sendJsonMessage } = useRtcContext()\n  useEffect(()=>{\n    if(lastJsonMessage !=null){\n      if(lastJsonMessage['type']=='connection'){\n        sendJsonMessage({'type':'broadcast', 'data':{'channel_id':channel_id}})\n      }\n      if(lastJsonMessage['type']=='broadcast_guest' || lastJsonMessage['type']=='broadcast_host'){\n        setGuests([...guests, lastJsonMessage['sender']])\n      }\n      if(lastJsonMessage['type']=='broadcast_disconnect'){\n        const channel_name = lastJsonMessage['sender']\n        const exist = guests.find(v=>v == channel_name)\n        exist && setGuests(guests.filter(v=>v != channel_name))\n      }\n    }\n  }, [lastJsonMessage])\n  const scale = focusGuest?'100%':`${100 / Math.max(2, Math.ceil(Math.sqrt(guests.length + 1)))}%`\n  const toggleVideoMode = (mode:VideoType)=>{\n    setVideoMode(videoMode!=mode?mode:null)\n  }\n  return lastJsonMessage !==undefined ?\n    <ThemedView style={[\n      {aspectRatio:!disable?16/9:0, borderColor:Colors.borderColor, borderRadius:10},\n      windowType=='landscape'?{flexShrink:0.5, height:'100%', borderLeftWidth:1, paddingBottom:65}:{maxHeight:'36%', width:'100%', borderBottomWidth:1}\n    ]}>\n      <View style={{aspectRatio:16/9, backgroundColor:'white', flexWrap:'wrap', flexDirection:'row', width:'100%', height:'100%'}}>\n        {guests.map((receiver, i)=><VideoView scale={scale} focusGuest={focusGuest} setFocusGuest={setFocusGuest} receiver={receiver}>\n          <RemoteCam receiver={receiver}/>\n        </VideoView>\n        )}\n        <VideoView scale={scale} focusGuest={focusGuest} setFocusGuest={setFocusGuest} receiver={auth.user?.name}>\n          <LocalCam user={auth.user} mode={videoMode}/>\n        </VideoView>\n      </View>\n      <ThemedView style={[\n          {position:'absolute', alignItems:'center', justifyContent:'flex-end', width:'100%',flexDirection:'row'},\n          windowType=='landscape'?{bottom:0, paddingVertical:15, paddingHorizontal:19}:{backgroundColor:'transparent'}\n        ]}>\n        <CommonButton title={'⏺️'} onPress={()=>toggleVideoMode('camera')}/>\n        <CommonButton title={'🖥️'} onPress={()=>toggleVideoMode('display')}/>\n        <CommonButton title={'📹'} onPress={()=>setDisable(true)}/>\n      </ThemedView>\n    </ThemedView>:\n  <></>\n  }\n  \nexport default React.memo(({channel_id, disable, setDisable}:VideoCallProps)=>{\n  return <RtcProvider disable={disable}>\n    <VideoCallContainer channel_id={channel_id} disable={disable} setDisable={setDisable}/>\n  </RtcProvider>\n})\n","import React from 'react'\nimport { TouchableOpacity } from \"react-native-gesture-handler\"\nimport CommonSection from \"./CommonSection\"\nimport { Linking, TextStyle } from \"react-native\"\nimport { FontAwesome } from '@expo/vector-icons'; \nimport { View, Text } from \"./Themed\"\nimport { File } from \"../types\"\nimport useColorScheme from '../hooks/useColorScheme';\n\nfunction humanFileSize(size:number) {\n    var i = size == 0 ? 0 : Math.floor(Math.log(size) / Math.log(1024));\n    return (size / Math.pow(1024, i)).toFixed(2) + ' ' + ['B', 'kB', 'MB', 'GB', 'TB'][i];\n  }\n  \n\nexport default ({file, isMobile, showBorder}:{file:File, isMobile:boolean, showBorder:boolean})=>{\n    const theme = useColorScheme()\n    return <CommonSection containerStyle={{marginHorizontal:0}} bodyStyle={showBorder?{padding:10}:{borderWidth:0, padding:0}}>\n    <TouchableOpacity onPress={()=>Linking.openURL(file.file)} style={{flexDirection:'row', alignItems:'flex-start'}} containerStyle={{width:'100%'}}>\n        <FontAwesome name=\"file-o\" size={20} color={theme=='light'?'black':'white'} />\n        <View style={{flex:1, marginHorizontal:10}}>\n            <Text style={{fontSize:18}}>{file.filename}</Text>\n            <Text style={{fontSize:14}}>{humanFileSize(file.filesize)}</Text>\n        </View>\n    </TouchableOpacity>\n    </CommonSection>\n}","import React, {useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState} from 'react';\nimport { StackScreenProps } from '@react-navigation/stack';\nimport { Platform, StyleSheet, View } from 'react-native';\nimport CommonSection from '../../../components/CommonSection';\nimport { FlatList, TextInput } from 'react-native-gesture-handler';\nimport CommonButton from '../../../components/CommonButton';\nimport useMessengerContentList, { MessengerContentPage, useMessengerContentMutation } from '../../../hooks/lists/useMessengerContent.List';\nimport useAuthContext from '../../../hooks/useAuthContext';\nimport HeaderRight from '../../../components/HeaderRight';\nimport useMessengerMemberList, { useMessengerMemberMutation } from '../../../hooks/lists/useMessengerMemberList';\nimport { navigate } from '../../../navigation';\nimport Colors from '../../../constants/Colors';\nimport useColorScheme from '../../../hooks/useColorScheme';\nimport { Text, View as ThemedView } from '../../../components/Themed' \nimport Hyperlink from 'react-native-hyperlink'\nimport useMessengerChannelList from '../../../hooks/lists/useMessengerChannelList';\nimport useIsMobile from '../../../hooks/useIsMobile';\nimport LinkPreview from '../../../components/LinkPreview';\nimport lang from '../../../lang'\nimport Avatar from '../../../components/Avatar';\nimport VideoCallSection from './VideoCallSection';\nimport useResizeWindow from '../../../hooks/useResizeWindow';\nimport FilePreview from '../../../components/FilePreview';\nimport useModalsContext from '../../../hooks/useModalsContext';\nimport InviteModal from '../../../modals/InviteModal';\n\n\nfunction uploadFile(){\n  return new Promise<Blob|undefined>((resolve, reject)=>{\n    if (Platform.OS == 'web'){\n      var input = document.createElement('input');\n      input.type = 'file';\n      input.onchange = e => { \n        resolve((e.target as any).files[0])\n      }\n      input.onabort = reject\n      input.onerror = reject\n      input.click();\n    }\n    else\n      resolve(undefined)\n  })\n}\n\nconst MessengerContentPageItem = React.memo((props:MessengerContentPage & {ownerId?:number})=>{\n  const isMobile = useIsMobile()\n  let nextPage = props.next;\n    while(nextPage?.next && nextPage.current.length==0){\n      nextPage = nextPage.next\n    }\n    const nextContent = nextPage?.current[0]\n    return <View style={{flexDirection: 'column-reverse'}}>\n      \n      {props.current.map((content, index2)=>{\n        const next = index2 + 1 < props.current.length?props.current[index2+1]:nextContent\n        const created:string = content.created.slice(0, 16)\n        const date = created.slice(0, 10)\n        const isSystem = content.user == null\n        const isFirst = next==undefined || (content.user != next.user || created != next.created.slice(0, 16))\n        const isSelf = props.ownerId == content.user\n        const dayChanged = next==undefined || date != next.created.slice(0, 10)\n        const message = content.message_set[0]\n        if (isSystem)\n          return <View key={content.id} style={{flexDirection:'row', justifyContent:'center', width:'100%', marginVertical:5}}>\n            <Text>{message.content}</Text>\n          </View>\n        return <View key={content.id}>\n          {dayChanged?<View style={{flexDirection:'row', justifyContent:'center', width:'100%'}}><Text>{date}</Text></View>:undefined}\n          <View key={content.id} style={{flexDirection:'row', justifyContent:isSelf?'space-between':'flex-start', width:'100%'}}>\n            {isFirst && !isSelf? <View style={{marginTop:3, marginLeft:12}}><Avatar name={content.name} userId={content.user} size={36}/></View>:<View style={{width:48}}/>}\n            <CommonSection outerContainerStyle={{width:undefined, maxWidth:'90%'}} title={isFirst?content.name:undefined} titleStyle={{flex:undefined}} bodyStyle={{padding:10}} subtitle={`${created.slice(11)}`}>\n              {/* @ts-ignore */}\n              <Hyperlink linkDefault={ true } style={{wordBreak:\"break-word\"}} linkStyle={{color: '#12b886'}}>\n                <Text selectable>{message.content}</Text>\n              </Hyperlink>\n              {content.file_set.map((file, fileIndex)=><FilePreview key={fileIndex} file={file} isMobile={isMobile} showBorder={content.file_set.length>1 || message.content.length>0}/>)}\n              {content.link_set.map((link, linkIndex)=><LinkPreview key={linkIndex} link={link} isMobile={isMobile}/>)}              \n            </CommonSection>\n          </View>\n        </View>\n      })}\n    </View>\n\n})\n\nexport default function ChatScreen({navigation, route}: StackScreenProps<any, 'Chat'>) {\n  const channel_id = route?.params?.id\n  const height = useRef(0)\n  const inputRef = useRef<TextInput>(null)\n  const {auth} = useAuthContext()\n  const { setModal } = useModalsContext()\n  const channel = useMessengerChannelList(auth)?.find(v=>v.id==parseInt(channel_id))\n  const {data, fetchNextPage } = useMessengerContentList(channel_id)\n  const memberList = useMessengerMemberList(channel_id)\n  const member_id = useMemo(()=>memberList?.find(v=>v.user == auth.user?.id)?.id, [auth, memberList])\n  const windowType = useResizeWindow()\n  const messengerMemberMutation = useMessengerMemberMutation()\n  const [value, setValue] = useState('')\n  const [autoFocus, setAutoFocus] = useState(true)\n  const [videoMode, setVideoMode] = useState<boolean>(false)\n  const theme = useColorScheme()\n  const postValue = ()=>{\n    if (value.length>0){\n      contentMutation.create({channel:channel_id, user:auth.user?.id, content:value})\n      setValue('')\n      setAutoFocus(true)\n    }\n  }\n  const contentMutation = useMessengerContentMutation()\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      headerRight: ()=> <HeaderRight extra={[\n        {title:lang('invite'), onPress:()=>setModal(InviteModal, {id:channel_id})},\n        {title:lang('leave'), onPress:()=>{member_id && messengerMemberMutation.leave(member_id).then(back)}}\n      ]}/>,\n      title: channel?.name\n    });\n  }, [navigation, route, member_id]);\n\n  const renderItem = useCallback(({item, index}:{item:MessengerContentPage, index:number})=><MessengerContentPageItem {...item} ownerId={auth.user?.id}/>, [auth])\n  \n  const back = ()=>{\n    if(navigation.canGoBack())\n        navigation.goBack()\n      else{\n        navigation.navigate('HomeScreen', {tab:2})\n      }\n  }\n  useEffect(()=>{\n    if (!(channel_id))\n      back()\n  }, [])\n  useEffect(()=>{\n    if(autoFocus){\n      (inputRef.current as any).focus()\n      setAutoFocus(false)\n    }\n  }, [autoFocus])\n\n  return <View style={{flex:1, alignItems:'center', flexDirection:windowType=='landscape'?'row-reverse':'column'}}>\n    <VideoCallSection channel_id={channel_id} setDisable={(d)=>setVideoMode(!d)} disable={!videoMode}/>\n    <View style={[{flex:videoMode?undefined:1, flexShrink:1}, windowType=='landscape'?{minWidth:320, height:'100%'}:{width:'100%'}]}>\n      <FlatList\n        style={{flexDirection: 'column-reverse'}}\n        contentContainerStyle={{padding:10, flexGrow:1, flexDirection: 'column-reverse'}}\n        data={data?.pages}\n        renderItem={renderItem}\n        onScroll={(e)=>{\n          if (e.nativeEvent.contentOffset.y + e.nativeEvent.contentSize.height - height.current < 1)\n            fetchNextPage()\n        }}\n        onLayout={(p)=>{height.current = p.nativeEvent.layout.height}}\n      />\n      <ThemedView style={{bottom:0, alignItems:'center', width:'100%',flexDirection:'row', paddingTop:15, paddingBottom:10, paddingHorizontal:19}}>\n        <TextInput ref={inputRef} value={value} onChangeText={setValue} style={{\n          flex:1, borderWidth:1, height:40, borderRadius:6, borderColor:Colors.borderColor, backgroundColor:Colors[theme].background, color:Colors[theme].text\n        }} onSubmitEditing={postValue} blurOnSubmit={true}/>\n        <CommonButton title={'💬'} onPress={postValue}/>\n        <CommonButton title={'📤'} onPress={()=>uploadFile().then(f=>{\n          contentMutation.create({channel:channel_id, user:auth.user?.id, content:'', file:f})\n        })}/>\n        {!videoMode && <CommonButton title={'📹'} onPress={()=>setVideoMode(!videoMode)}/>}\n      </ThemedView>\n    </View>\n  </View>\n}","import React, {useCallback, useRef} from 'react';\nimport { StackScreenProps } from '@react-navigation/stack';\nimport { StyleSheet, Text, Button, View} from 'react-native';\n\n\nexport default function TabOneScreen({\n  navigation\n}: StackScreenProps<any, 'TabOne'>) {\n  return <View style={{padding:10}}>\n    \n  </View>\n}\n\nconst styles = StyleSheet.create({\n  Panel_Button_Text: {\n    textAlign: 'center',\n    color: '#fff',\n    fontSize: 21\n  },\n  Panel_Holder: {\n    borderWidth: 1,\n    borderColor: '#888',\n    marginVertical: 5\n  }\n})","import React, {useEffect, useLayoutEffect, useState} from 'react';\n\nimport { StackScreenProps } from '@react-navigation/stack';\nimport useAuthContext from '../../hooks/useAuthContext';\nimport useMessengerChannelList from '../../hooks/lists/useMessengerChannelList';\nimport { Text } from '../../components/Themed';\nimport { useMessengerMemberMutation } from '../../hooks/lists/useMessengerMemberList';\n\nexport default function InviteeScreen({navigation, route}: StackScreenProps<any, 'Invitee'>) {\n    const id = route?.params?.id\n    const {auth, dispatch} = useAuthContext()\n    const [enterGuest, setEnterGuest] = useState(false)\n    const channelList = useMessengerChannelList(auth)\n    const messengerMemberMutation = useMessengerMemberMutation()\n    useLayoutEffect(() => {\n        navigation.setOptions({headerRight: undefined});\n    }, []);\n    useEffect(()=>{\n        if(auth.user==null && enterGuest==false){\n            dispatch({type:\"LOGIN_GUEST\"})\n            setEnterGuest(true)\n        }\n        else if(auth.user && channelList!==undefined){\n            if(channelList.find(v=>v.id==id) === undefined){\n                console.log(`invite processing (channel:${id})`)\n                messengerMemberMutation.invite({\n                    channel_id:id,\n                    user_ids:[auth.user.id]\n                }).then(()=>navigation.replace(\"ChatScreen\", {id}))\n            }\n            else{\n                console.log('already invite')\n                navigation.replace(\"ChatScreen\", {id})\n            }\n        }\n    }, [auth, channelList, enterGuest])\n  return <Text>{'초대중'}</Text>\n};\n","import LoginScreen from \"./main/LoginScreen\";\nimport ChatScreen from \"./main/ChatScreen\";\nimport HomeScreen from \"./main/HomeScreen\";\nimport TabOneScreen from \"./main/TabOneScreen\";\nimport InviteeScreen from \"./main/InviteeScreen\";\n// import BoardScreen from \"../lib/blacktokki-board/BoardScreen\";\n// import BoardEditScreen from \"../lib/blacktokki-board/BoardEditScreen\";\nimport { Screens } from \"../types\";\nimport lang from \"../lang\"\n\nexport const main = {\n    HomeScreen:{\n        title:lang('home'),\n        component:HomeScreen,\n        path:'home',\n    },\n    ChatScreen:{\n        title:lang('chat'),\n        component:ChatScreen,\n        path:'chat'\n    },\n    // BoardScreen:{\n    //     title:'board',\n    //     component:BoardScreen,\n    //     path:'board'\n    // },\n    TabOneScreen:{\n        title:'tab one',\n        component:TabOneScreen,\n        path:'one'\n    },\n    InviteeScreen:{\n        title: '',        \n        component:InviteeScreen,\n        path:'invitee'\n    }\n} as Screens\n\nexport const login = {\n    LoginScreen:{\n        path: 'login',\n        title: lang('Sign in'),\n        component:LoginScreen\n    },\n    InviteeScreen:{\n        path:'invitee',\n        title: '',\n        component:InviteeScreen\n    }\n} as Screens\n\nexport const modal = {\n    // BoardEditScreen:{\n    //     title:'board',\n    //     component:BoardEditScreen,\n    //     path:'modal/board'\n    // },\n} as Screens","import React, {useState, useEffect, useLayoutEffect} from 'react';\nimport { StackScreenProps } from '@react-navigation/stack';\nimport { StyleSheet, Text, View} from 'react-native';\nimport { Text as StyledText } from 'react-native-paper';\nimport { Appearance, useColorScheme as useConfigColorScheme} from 'react-native-appearance';\nimport {TabViewNavigator} from '../../navigation/DrawerNavigator';\nimport useResizeWindow from '../../hooks/useResizeWindow';\nimport { bottomTabs } from '../../tabs';\nimport HeaderRight from '../../components/HeaderRight';\nimport TextButton from '../../components/TextButton';\nimport Colors from '../../constants/Colors';\nimport useColorScheme from '../../hooks/useColorScheme';\nimport lang from '../../lang'\nimport useModalsContext from '../../hooks/useModalsContext';\nimport ChannelEditModal from '../../modals/ChannelEditModal';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\n// navigate(\"BoardEditScreen\", {channel_id:item.channel, id:item.id})\n// deleteBoardContent(item.id).then(()=>navigate('BoardScreen', {id:item.channel}))\n\nexport default function HomeScreen({navigation, route}: StackScreenProps<any, 'Home'>) {\n  const windowType = useResizeWindow();\n  const theme = useColorScheme()\n  const configTheme = useConfigColorScheme()\n  const { setModal } = useModalsContext()\n  const [ home, setHome ] = useState(windowType == 'landscape')\n  const color = Colors[theme].text\n  const options = [\n    {title:lang('member'), headerRight:()=><HeaderRight/>},\n    {title:lang('messenger'), headerRight:()=><HeaderRight extra={[{title:lang('create'), onPress:()=>setModal(ChannelEditModal, {type:'messenger'})}]}/>},\n    // {title:'board', headerRight:()=><HeaderRight extra={[{title:'create', onPress:()=>setModal(ChannelEditModal, props:{type:'board'}}) }]}/>},\n    {title:'config', headerRight:()=><HeaderRight/>}\n  ]\n  \n  useLayoutEffect(() => {\n    const index = route?.params?.tab | 0\n    navigation.setOptions(windowType == 'portrait'?options[index]:{\n      title: lang('home'),\n      headerRight: ()=><HeaderRight/>\n    });\n  }, [navigation, route, windowType]);\n  useEffect(()=>{\n    setHome(windowType == 'landscape')\n  }, [windowType])\n  return home?\n    <View style={{flex:1, justifyContent:'center', alignItems:'center'}}>\n      <View style={{width:'80%', height:'80%'}}>\n        <StyledText style={{fontSize:32, color}}>Tokki Tok</StyledText>\n        <View style={{backgroundColor:Colors.borderColor, height:1, width:'100%'}}/>\n        <View style={{flex:1, alignItems:'flex-start'}}>\n          {/* <Text style={{fontSize:20, color:'gray'}}>Welcome! This is a messenger for teams.</Text>*/}\n          <Text style={{fontSize:24}}> </Text>\n          <Text style={{fontSize:24, fontWeight:'500', color}}>{lang('Quick Start')}</Text>\n          <TextButton title={lang('+ New Messenger')} textStyle={{fontSize:20, color}} style={{paddingLeft:0, borderRadius:20}} onPress={()=>setModal(ChannelEditModal, {type:'messenger'})}/>\n          <Text style={{fontSize:20, fontWeight:'500', color}}>{lang('* Skin Settings')}</Text>\n          <View style={{flexDirection:'row'}}>\n            {[[lang('Auto'), 'no-preference'], [lang('Light'), 'light'], [lang('Dark'), 'dark']].map(([title, colorScheme])=><TextButton \n              key={title} title={title} textStyle={{fontSize:16, color, textDecorationLine:configTheme==colorScheme?'underline':'none'}} style={{borderRadius:20}} onPress={(\n                )=>AsyncStorage.setItem('color',colorScheme).then(()=>Appearance.set({colorScheme:(colorScheme as any)}))}/>)}\n          </View>\n        </View>\n      </View>\n    </View>:\n    <TabViewNavigator tabs={bottomTabs} tabBarPosition=\"bottom\" index={parseInt(route.params?.['tab'] || 0)} onTab={(index)=>{navigation.setParams({tab:index})}}/>\n}\n\n","import React, { Context, createContext,  useContext, useEffect, useState } from \"react\"\nimport useWebSocket from \"react-use-websocket\"\nimport { SendJsonMessage } from \"react-use-websocket/dist/lib/types\"\n// @ts-ignore\nimport {API_URL} from \"@env\"\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { AppState, AppStateStatus } from \"react-native\";\n\ntype WebsocketContextType = {lastJsonMessage:any, sendJsonMessage:SendJsonMessage }\nconst defaultContext = {lastJsonMessage:undefined, sendJsonMessage:()=>{}}\nconst WebSocketContext = createContext<WebsocketContextType>(defaultContext);\nconst [SCHEMA, DOMAIN] = `${API_URL}`.split('://')\n\nexport const WebSocketInternalProvider = ({children, path, Context, useBackground}:{children:React.ReactNode, path:string, Context:Context<WebsocketContextType>, useBackground?:boolean})=>{\n  const [token, setToken] = useState<string|null>(null)\n  const [isActive, setIsActive] = useState<boolean>(useBackground || AppState.currentState == 'active')\n  const { lastJsonMessage, sendJsonMessage } = useWebSocket(`${SCHEMA=='https'?'wss':'ws'}://${DOMAIN}/${path}`,{\n    shouldReconnect: (closeEvent) => true,\n    protocols: token?['Authorization',  token]:undefined,\n    onOpen: (e)=>{console.log(`success websocket connection(${path})`)},\n    onClose: (e)=> {console.log(`closed websocket connection(${path})`)},\n  }, isActive && token!=null)\n  useEffect(()=>{\n    AsyncStorage.getItem('Authorization').then(setToken)\n    const onChange = (nextState:AppStateStatus)=>setIsActive(useBackground || nextState == 'active')\n    AppState.addEventListener(\"change\", onChange)\n    return ()=>AppState.removeEventListener(\"change\", onChange)\n  }, [])\n  return <Context.Provider value={token!=null?{lastJsonMessage, sendJsonMessage}:defaultContext}>\n      {children}\n    </Context.Provider>\n}\n\nexport const WebSocketProvider = ({disable, children}:{disable?:boolean, children:React.ReactNode})=>{\n  return disable?<>{children}</>:<WebSocketInternalProvider path={'messenger/ws/'} Context={WebSocketContext}>\n    {children}\n  </WebSocketInternalProvider>\n}\n\nexport default ()=>{\n  const webSocketContext = useContext(WebSocketContext)\n  return webSocketContext\n}\n\n","import React, {useState, useEffect } from 'react';\nimport { StyleSheet } from 'react-native';\nimport CommonSection from '../components/CommonSection';\nimport { View, Text } from '../components/Themed';\nimport CommonButton from '../components/CommonButton';\n// import useBoardChannelList, { useBoardChannelMutation } from '../hooks/lists/useBoardChannelList';\nimport useAuthContext from '../hooks/useAuthContext';\nimport { navigate } from '../navigation';\nimport { Channel } from '../types';\nimport useMessengerChannelList, { useMessengerChannelMutation } from '../hooks/lists/useMessengerChannelList';\nimport TextField from '../components/TextField';\nimport lang from '../lang'\nimport useModalsContext from '../hooks/useModalsContext';\n\nexport default function ChannelEditModal({id, type}: {id?:number, type:string}) {\n  const {auth} = useAuthContext()\n  const { setModal } = useModalsContext()\n  const channelList = useMessengerChannelList(auth)\n  const channelMutation = useMessengerChannelMutation()\n  const channel = channelList?.find(v=>v.id==id)\n  const [name, setName] = useState('')\n  const [description, setDescription] = useState('')\n  const back = ()=>{\n    setModal(ChannelEditModal, null)\n  }\n  useEffect(()=>{\n    if (channel){\n      setName(channel.name)\n      setDescription(channel?.description || '')\n    }\n  }, [channel])\n  return <CommonSection outerContainerStyle={{alignSelf:'center'}}>\n    <View style={{justifyContent:'space-around'}}>\n    <Text style={{fontSize:20}}>{lang('Channel')}</Text>\n    </View>\n    <View style={styles.separator} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />\n    <View style={{width:'100%'}}>\n      <TextField name={lang('Channel Name')} value={name} setValue={setName} width={'60%'}/>\n      <TextField name={lang('Description')} value={description} setValue={setDescription} multiline width={'60%'}/>\n    </View>\n    <View style={{width:'100%', flexDirection:'row', justifyContent:'flex-end'}}>\n      <CommonButton title={lang('save')} onPress={()=>{\n        if(auth?.user?.id && auth.groupId){\n          const newChannel:Channel = {id, name, description, type, owner:auth?.user?.id, group:auth.groupId};\n          (id?channelMutation.update(newChannel):channelMutation.create(newChannel)).then(v=>navigate(\"Main\", {\n            screen:v.type == 'messenger'?'MessengerScreen':'BoardScreen',\n            params:{id:v.id}\n          }))\n        }\n      }}/>\n      <CommonButton title={lang('cancel')} style={{marginHorizontal:5}} onPress={back}/>\n    </View>\n  </CommonSection>\n}\n\nconst styles = StyleSheet.create({\n  field:{\n    width:'50%',\n    flexDirection:'row',\n    padding:10,\n  },\n  separator: {\n    marginBottom: 20,\n    height: 1,\n    width: '100%',\n  },\n})","import { Notification } from '../types';\nimport axios from './axios';\n\nexport const getNotification = async (user_id:number)=>{\n    const data = (await axios.get(`/api/v1/notifications/?type=WEB&user=${user_id}`) ).data as Notification[]\n    return data.length?data[0]:undefined\n}\n\nexport const postNotification = async(notification:Notification)=>{\n    return (await axios.post(`/api/v1/notifications/`, notification)).data as Notification\n}\n\nexport const putNotification = async(notification:Notification)=>{\n    return (await axios.put(`/api/v1/notifications/${notification.id}/`, notification)).data as Notification\n}","import { Platform } from 'react-native';\n//@ts-ignore\nimport useMobileDetect from 'use-mobile-detect-hook';\n\nexport default ()=>{\n    const detectMobile = useMobileDetect();\n    return (detectMobile.isMobile() || Platform.OS == 'android' || Platform.OS == 'ios') as boolean\n}","import { useQuery } from \"react-query\";\nimport { getUserMembershipList } from \"../../apis\";\nimport { Auth } from \"../useAuthContext\";\n\nexport default function useUserMembershipList(auth?:Auth){\n  const { data } = useQuery([\"UserMembershipList\", auth?.groupId] , async()=>auth?.groupId?(await getUserMembershipList(auth?.groupId)):[])\n  return data\n}","import * as React from 'react';\nimport { View } from './Themed';\nimport { StyleSheet, StyleProp, ViewStyle, TextStyle, Pressable } from 'react-native';\nimport Colors from '../constants/Colors';\n\nexport type ItemParamList = {\n    outerContainerStyle?:StyleProp<TextStyle>\n    containerStyle?:StyleProp<ViewStyle>\n    bodyStyle?:StyleProp<ViewStyle>\n    children?: React.ReactNode\n    onPress?: ()=>void\n}\n\nexport default function CommonItem(props:ItemParamList){\n  const [hover, setHover] = React.useState(false)\n  const [press, setPress] = React.useState(false)\n  return (\n    <Pressable\n      style={[styles.outerContainer ,props.outerContainerStyle, (press)?{backgroundColor:'rgb(242,242,242)'}:{}]}\n      onPressIn={()=>{setPress(true)}}\n      onPressOut={()=>{setPress(false);props.onPress?.()}}\n       //@ts-ignore\n       onHoverIn={()=>setHover(true)}\n       onHoverOut={()=>setHover(false)}\n    >\n        <View style={[styles.container ,props.containerStyle]}>\n            <View style={[styles.bodyView, props.bodyStyle]}>\n                <>{props.children}</>\n            </View>\n      </View>\n    </Pressable>\n    )\n}\n\nconst styles = StyleSheet.create({\n  outerContainer:{\n    width:'100%',\n    maxWidth:1080,\n    alignItems:'stretch',\n  },  \n  container: {\n      marginHorizontal:20,\n      backgroundColor:'transparent'\n    },\n    bodyView:{\n      width: '100%',\n      padding: 10,\n      minHeight: 40,\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderBottomWidth:1,\n      borderColor:Colors.borderColor,\n      backgroundColor:'transparent'\n    }\n  });\n  ","import { useTheme } from '@react-navigation/native';\nimport React, { useState } from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { TabView, SceneMap,NavigationState, SceneRendererProps, TabBar } from 'react-native-tab-view';\nimport Profile from '../components/Profile';\nimport TextButton from '../components/TextButton';\nimport Colors from '../constants/Colors';\nimport useResizeWindow from '../hooks/useResizeWindow';\nimport { drawerTabs } from '../tabs';\nimport { UserMembership } from '../types';\nimport useModalsContext from '../hooks/useModalsContext';\nimport ChannelEditModal from '../modals/ChannelEditModal';\nimport useColorScheme from '../hooks/useColorScheme';\n\nexport const TabViewNavigator = (props:{tabs:typeof drawerTabs, tabBarPosition:\"top\"|\"bottom\", index?:number, onTab?:(index:number)=>void})=>{\n  const [index, setIndex] = React.useState(props.index || 0);\n  const entries = Object.entries(props.tabs)\n  const onTab = props.onTab\n  const icons = Object.assign({}, ...entries.map(([k, v])=>({[k]:v.icon})))\n  return <TabView\n    renderTabBar={(props:SceneRendererProps & {navigationState: NavigationState<any>})=>{\n      return <TabBar\n        {...props}\n        indicatorStyle={{ backgroundColor: \"#2196F3\" }}\n        style={{ backgroundColor:'white' }}\n        activeColor={'black'}\n        inactiveColor={'black'}\n        renderIcon={(scene)=>icons[scene.route.key]}\n        onTabPress={(scene)=>onTab?.(entries.findIndex(([k, v])=>k == scene.route.key))}\n      />\n    }}\n    navigationState={{ index, routes: entries.map(([k, v])=>({key:k, title:v.title}))}}\n    onIndexChange={setIndex}\n    renderScene={SceneMap(Object.assign({}, ...entries.map(([k, v])=>({[k]:v.component}))))}\n    tabBarPosition={props.tabBarPosition}\n  />\n}\n\n\nexport default ({user}:{user:UserMembership})=> {\n  const { colors } = useTheme();\n  const windowType = useResizeWindow();\n  const [index, setIndex] = useState(0);\n  const { setModal } = useModalsContext()\n  const onAddList = [\n    ()=>setModal(ChannelEditModal, {type:'messenger'}),\n    ()=>setModal(ChannelEditModal, {type:'board'})\n  ]\n  return <View style={windowType=='landscape'?[\n      styles.tabBar,\n      {\n        backgroundColor: colors.card,\n        borderTopColor: colors.border,\n      },\n      // tabBarStyle,\n    ]:{width:0}}\n    pointerEvents={false ? 'none' : 'auto'}\n  >\n    <Profile userId={user.id} username={user.username} name={user.name}/>\n    {windowType=='landscape' && <>\n      <View style={{flexDirection:'row-reverse'}}>\n          <TextButton title='+' textStyle={{fontSize:20}} style={{borderRadius:20}} onPress={onAddList[index]}/>\n      </View>\n      <View accessibilityRole=\"tablist\" style={styles.content}>\n        {Object.keys(drawerTabs).length>1 ? \n          <TabViewNavigator tabs={drawerTabs} tabBarPosition={\"top\"} onTab={setIndex}/>: \n          <View style={{borderTopWidth:1, flex:1, borderColor:colors.border}}>            \n            {Object.values(drawerTabs).map(drawerTab=>{const Tab = drawerTab.component; return <Tab key={drawerTab.title}/>})}\n          </View>\n        }\n      </View>\n    </>}\n  </View>\n}\n\n{/*<Text style={[styles.label, { color: d.isFocused ? colors.primary : '#222' }]}></Text> */}\n\nconst styles = StyleSheet.create({\n    tabBar: {\n      width:240,\n      elevation: 8,\n      borderRightWidth:1,\n      borderColor:Colors.borderColor\n    },\n    content: {\n      flex: 1,\n      flexDirection: 'row',\n    },\n    tab: {\n        flex: 1,\n        alignItems: 'center',\n    },\n    label: {\n        textAlign: 'center',\n        backgroundColor: 'transparent',\n      },\n  });","import * as React from 'react';\nimport { Avatar } from 'react-native-paper';\nimport { AvatarProps } from '../../types';\n\nconst normalizeHash = (hash: number, min: number, max: number) => {\n    return Math.floor((hash % (max - min)) + min);\n};\n\nconst stringToHSL = (str: string, initHash?:number) => {\n    let hash = initHash || 0;\n    for (let i = 0; i < str.length; i++) {\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    hash = Math.abs(hash);\n    return `hsl(${normalizeHash(hash, 0, 360)}, ${normalizeHash(hash, 0, 100)}%, ${normalizeHash(hash, 25, 75)}%)`;\n};\n\nexport default (props:AvatarProps) => {\n    const backgroundColor = stringToHSL(props.name, props.userId)\n    return <Avatar.Text style={{backgroundColor}} size={props.size} label={props.name.split(' ').map(v=>v[0]).join().toUpperCase()} />\n};","import React from 'react';\n// import { MaterialIcons } from \"@expo/vector-icons\"\nimport Avatar from '../lib/react-native-paper/Avatar';\nimport { AvatarProps } from '../types';\n\nexport default (props:AvatarProps)=>{\n    // return <MaterialIcons size={38} style={{ marginBottom: -3, marginRight:10 }} name='account-circle'/>\n    return <Avatar {...props}/>\n}\n\n","import React from \"react\"\nimport { View, Text } from \"../components/Themed\"\nimport CommonItem from \"../components/CommonItem\"\n// import useBoardChannelList from \"../lib/blacktokki-board/useBoardChannelList\"\nimport { useMessengerChannelSorted } from \"../hooks/lists/useMessengerChannelList\"\nimport useAuthContext from \"../hooks/useAuthContext\"\nimport { navigate } from \"../navigation\"\n\nconst DrawerTab = (props:{data:{name:string, onPress?:()=>void}[]})=><View style={{flex:1}}>\n    {props.data.map((item, index)=><CommonItem key={index} containerStyle={{marginHorizontal:0}} bodyStyle={{alignItems:'flex-start'}} onPress={item.onPress}>\n        <Text style={{marginLeft:20}}>{item.name}</Text>\n    </CommonItem>\n    )}\n</View>\n\nexport default {\n    Messenger:()=>{\n        const {auth} = useAuthContext()\n        const channelList = useMessengerChannelSorted(auth);\n        return <DrawerTab data={(channelList || []).map(item=>({...item, onPress:()=>navigate(\"ChatScreen\", {id:item.id})}))}/>\n    },\n    // Board:()=>{\n    //     const {auth} = useAuthContext()\n    //     const channelList = useBoardChannelList(auth);\n    //     return <DrawerTab data={(channelList || []).map(item=>({...item, onPress:()=>navigate(\"BoardScreen\", {id:item.id})}))}/>\n    // },\n}","import { Ionicons, FontAwesome } from \"@expo/vector-icons\"\nimport React from \"react\"\nimport { Text, View } from \"react-native\"\nimport CommonItem from \"../components/CommonItem\"\nimport useAuthContext from \"../hooks/useAuthContext\"\nimport { useMessengerChannelSorted } from \"../hooks/lists/useMessengerChannelList\"\nimport { navigate } from \"../navigation\"\n\nexport default ()=>{\n    const {auth} = useAuthContext()\n    const channelList = useMessengerChannelSorted(auth)\n    const today = (new Date()).toISOString().slice(0, 10)\n    return <View style={{flex:1, backgroundColor:'white'}}>\n        {channelList?.map((item, index)=>{\n            const date = item.last_message?.created.slice(0,10)\n            return <CommonItem key={index} bodyStyle={{flexDirection:'row', justifyContent:'space-between'}} onPress={()=>navigate(\"ChatScreen\", {id:item.id})}>\n                <View style={{flexDirection:'row'}}>\n                    <FontAwesome size={36} style={{ marginBottom: -3, marginRight:20 }} name='users'/>\n                    <View>\n                        <View style={{flexDirection:'row'}}>\n                            <Text style={{fontSize:18}}>{item.name}</Text>\n                            <Text style={{fontSize:18, opacity: 0.4, paddingLeft:5}}>{item.member_count}</Text>\n                        </View>\n                        <Text style={{fontSize:16, opacity: 0.4}}>{item.last_message?.content}</Text>\n                    </View>\n                </View>\n                <View>\n                    <Text style={{fontSize:14, opacity: 0.4, textAlign:'right'}}>{date==today?item.last_message?.created.slice(11,16):date}</Text>\n                    <Text style={{fontSize:14, textAlign:'right'}}>{item.unread_count?item.unread_count:' '}</Text>\n                </View>\n            </CommonItem>\n        })}\n    </View>\n}\n\nexport const MessengerIcon = <Ionicons size={30} style={{ marginBottom: -3 }} name='chatbox'/>","import React from \"react\";\nimport MemberTab, {MemberIcon} from \"./MemberTab\";\nimport OneTab, {ConfigIcon} from \"./OneTab\";\nimport DrawerTab  from './DrawerTab';\nimport MessengerTab, {MessengerIcon} from \"./MessengerTab\";\nimport lang from \"../lang\"\n// import BoardTab, {BoardIcon}  from \"../lib/blacktokki-board/BoardTab\";\n\nexport const bottomTabs = {\n    OneTab:{\n        title:lang('member'),\n        component:MemberTab,\n        icon:MemberIcon,\n    },\n    TwoTab:{\n        title:lang('messenger'),\n        component:MessengerTab,\n        icon:MessengerIcon\n    },\n    // ThreeTab:{\n    //     title:'board',\n    //     component:BoardTab,\n    //     icon:BoardIcon\n    // },\n    // FourTab:{\n    //     title:'config',\n    //     component:OneTab,\n    //     icon:ConfigIcon\n    // }\n} as Record<string, {title:string, component:React.ComponentType<any>, icon:JSX.Element}>\n\nexport const drawerTabs = {\n    TwoTab:{\n        title:lang('messenger'),\n        component:DrawerTab.Messenger,\n        icon:MessengerIcon\n    },\n    // ThreeTab:{\n    //     title:'board',\n    //     component:DrawerTab.Board,\n    //     icon:BoardIcon\n    // }\n} as Record<string, {title:string, component:React.ComponentType<any>, icon:JSX.Element}>","import React, { useMemo } from 'react';\n\nimport { TextProps, StyleProp } from 'react-native';\nimport {View, Text } from './Themed'\nimport useResizeWindow from '../hooks/useResizeWindow';\n\ntype Props = {\n  name: string,\n  width?:number,\n  children: React.ReactNode\n  textStyle?: StyleProp<TextProps>\n}\n\nexport default function RowField(props:Props) {\n  const windowType = useResizeWindow()\n  const rowStyle = useMemo(()=>windowType=='landscape'?\n    {flexDirection:'row', alignItems: 'center', justifyContent:'space-between'}:\n    {flexDirection:'column', alignItems:'flex-start'} as any\n  , [windowType])\n  return (\n    <View style={[{paddingVertical:5, width:'100%'}, rowStyle]}>\n        <Text style={[windowType=='landscape'?{flex:1}:{width:'100%'},{paddingHorizontal: 15, fontSize:16}, props.textStyle]}>{props.name}</Text>\n        <View style={[windowType=='landscape'?{flex:6}:{width:'100%'},{paddingHorizontal: 15}]}>\n          <View style={{width:props.width}}>\n            {props.children}\n          </View>\n        </View>\n    </View>\n  )\n}","import React from 'react';\nimport { StyleProp, TextStyle } from 'react-native';\nimport { CustomTextInputProps } from '../types';\nimport CommonTextInput from './CommonTextInput';\nimport RowField from './RowField';\n\nexport default function TextField(props:CustomTextInputProps & {name: string, width?:any, textStyle?:StyleProp<TextStyle>}) {\n  return (\n    <RowField name={props.name} width={props.width} textStyle={props.textStyle}>\n      <CommonTextInput {...props} />\n   </RowField>\n  )\n}","import { MaterialCommunityIcons } from \"@expo/vector-icons\"\nimport React from \"react\"\nimport { Text, View } from \"react-native\"\nimport CommonItem from \"../components/CommonItem\"\nimport useAuthContext from \"../hooks/useAuthContext\"\nimport useUserMembershipList from \"../hooks/lists/useUserMembershipList\"\nimport { UserMembership } from \"../types\"\nimport Avatar from \"../components/Avatar\"\nimport useModalsContext from \"../hooks/useModalsContext\"\nimport ProfileModal from \"../modals/ProfileModal\"\n\nexport const renderMemberItem = (item:UserMembership, onPress?:()=>void)=> {\n    return <CommonItem key={item.id} bodyStyle={{backgroundColor:'white', flexDirection:'row', justifyContent:'flex-start'}} onPress={onPress}>\n        <View style={{marginTop:4, marginRight:12}}><Avatar name={item.name} userId={item.id} size={44}/></View>\n        <Text style={{fontSize:20, fontWeight:'400'}}>{item.name}</Text>\n    </CommonItem>\n}\n\nexport default ()=>{\n    const {auth} = useAuthContext()\n    const { setModal } = useModalsContext()\n    const userList = useUserMembershipList(auth)\n    const memberItem = React.useMemo(\n        ()=>userList && userList.map(item=>renderMemberItem(item, ()=>setModal(ProfileModal, {id:item.id}))), [userList])\n    return <View style={{flex:1, backgroundColor:'white'}}>\n        {memberItem}\n    </View>\n}\n\nexport const MemberIcon = <MaterialCommunityIcons size={32} style={{ marginBottom: -3 }} name='account'/>","/**\n * Learn more about Light and Dark modes:\n * https://docs.expo.io/guides/color-schemes/\n */\n\nimport * as React from 'react';\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\n\nimport Colors from '../constants/Colors'\nimport useColorScheme from '../hooks/useColorScheme';\n\nexport function useThemeColor(\n  props: { light?: string; dark?: string },\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\n) {\n  const theme = useColorScheme();\n  const colorFromProps = props[theme];\n\n  if (colorFromProps) {\n    return colorFromProps;\n  } else {\n    return Colors[theme][colorName];\n  }\n}\n\ntype ThemeProps = {\n  lightColor?: string;\n  darkColor?: string;\n};\n\nexport type TextProps = ThemeProps & DefaultText['props'];\nexport type ViewProps = ThemeProps & DefaultView['props'];\n\nexport function Text(props: TextProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\n\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\n}\n\nexport function View(props: ViewProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\n\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\n}\n","import React, { useEffect } from 'react';\nimport Profile from '../components/Profile';\nimport useAuthContext from '../hooks/useAuthContext';\nimport useUserMembershipList from '../hooks/lists/useUserMembershipList';\nimport { useMessengerChannelMutation } from '../hooks/lists/useMessengerChannelList';\nimport CommonButton from '../components/CommonButton';\nimport lang from '../lang'\nimport useModalsContext from '../hooks/useModalsContext';\nimport CommonSection from '../components/CommonSection';\nimport { Text, View } from '../components/Themed';\n\nexport default function GuestLogoutModal({id}:{id:number}) {\n  const { setModal } = useModalsContext()\n  const {dispatch} = useAuthContext()\n  const back = ()=>{\n    setModal(GuestLogoutModal, null)\n  }\n  return <CommonSection outerContainerStyle={{alignSelf:'center'}}>\n    <Text>{lang('Guest users cannot reconnect after logging out. Please create an account or log in.')}</Text>\n    <View style={{width:'100%', flexDirection:'row', justifyContent:'flex-end'}}>\n      <CommonButton title={lang('sign out')} onPress={()=>dispatch({type:\"LOGOUT_REQUEST\"})}/>\n      <CommonButton title={lang('cancel')} onPress={()=>back()}/>\n    </View>\n  </CommonSection>\n}\n","import React, { useEffect } from 'react';\nimport Profile from '../components/Profile';\nimport useAuthContext from '../hooks/useAuthContext';\nimport useUserMembershipList from '../hooks/lists/useUserMembershipList';\nimport { useMessengerChannelMutation } from '../hooks/lists/useMessengerChannelList';\nimport CommonButton from '../components/CommonButton';\nimport { DirectChannel } from '../types';\nimport { navigate } from '../navigation';\nimport lang from '../lang'\nimport useModalsContext from '../hooks/useModalsContext';\nimport CommonSection from '../components/CommonSection';\nimport { Text, View } from '../components/Themed';\n\nexport default function ProfileModal({id}:{id:number}) {\n  const {auth} = useAuthContext()\n  const { setModal } = useModalsContext()\n  const userList = useUserMembershipList(auth)\n  const user = userList?.find(v=>v.id==id)\n  const channelMutation = useMessengerChannelMutation()\n  const back = ()=>{\n    setModal(ProfileModal, null)\n  }\n  useEffect(()=>{\n    if (!(id && user) && userList)\n      back()\n  }, [userList])\n  return user?<CommonSection outerContainerStyle={{alignSelf:'center'}}>\n    <View style={{flexDirection:'row', width:'100%'}}>\n      <View style={{flex:1}}>\n        <CommonButton style={{width:60}} title={'❌'} onPress={back}/>\n      </View>\n      <View style={{flex:1}}>\n        <Text style={{fontSize:20, textAlign:'center'}}>{lang('profile')}</Text>\n      </View>\n      <View style={{flex:1}}/>\n    </View>\n    <View style={{marginBottom: 20, height: 1, width: '100%'}} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />\n    \n    <Profile username={user.username} name={user.name} userId={user.id} />\n    <CommonButton title={lang('create messenger')} onPress={()=>{\n      if(auth?.user?.id && auth.groupId){\n        const newChannel:DirectChannel = {name:auth.user.id!=user.id?`${auth.user.name}, ${user.name}`:auth.user.name, type:'messenger', owner:auth?.user?.id, group:auth.groupId, counterpart:user.id};\n        channelMutation.direct(newChannel).then(v=>navigate(\"Main\", {screen:\"ChatScreen\", params: {id:v.id}}))\n      }\n    }}/>\n  </CommonSection>:<></>\n}\n","import { createIntl, createIntlCache } from \"@formatjs/intl\";\nimport {I18nManager} from \"react-native\";\nimport * as RNLocalize from \"react-native-localize\";\n\nconst translations = {\n  ko: require(\"./ko.json\"),\n} as const;\n\ntype Translation = keyof typeof translations;\n\n// fallback if no available language fits\nconst fallback = { languageTag: \"en\", isRTL: false };\n\nconst { languageTag, isRTL } =\n  RNLocalize.findBestLanguageTag(Object.keys(translations)) ?? fallback;\n\n// update layout direction\nI18nManager.forceRTL(isRTL);\n\n// console.log(languageTag)\nconst intl = createIntl(\n  {\n    defaultLocale: \"en\",\n    locale: languageTag,\n    messages: translations[languageTag as Translation],\n  },\n  createIntlCache(),\n);\n\ntype TranslationParams = Parameters<(typeof intl)[\"formatMessage\"]>[1];\n\nexport default (key: string, params?: TranslationParams) => \n  intl\n    .formatMessage({ id: key, defaultMessage: key }, params)\n    .toString();","import React from 'react';\nimport {View} from 'react-native'\nimport {Text} from './Themed';\nimport { ProfileProps } from '../types';\nimport Avatar from './Avatar';\nimport TextButton from './TextButton';\nimport CommonTextInput from './CommonTextInput';\nimport { patchUser } from '../apis';\nimport useAuthContext from '../hooks/useAuthContext';\n\nexport default (props:ProfileProps)=>{\n    const [name, setName] = React.useState<string>()\n    const { auth, dispatch } = useAuthContext()\n    const isSelf = auth.user?.id == props.userId\n    const onChange = ()=>{\n        isSelf && patchUser({id:props.userId, name:name || ''}).finally(()=>{\n            setName(undefined)\n            dispatch({type:\"REFRESH\"})\n        })\n    }\n    return <View style={{width:'100%', height:135, justifyContent:'space-evenly', alignItems:'center'}}>\n        <Avatar {...props} size={75}/>\n        {name===undefined?\n            <TextButton textStyle={{fontWeight:'bold', fontSize:15}} onPress={()=>isSelf && setName(props.name)} title={props.name} disabled={!isSelf}/>:\n            <CommonTextInput value={name} style={{textAlign:'center'}} setValue={setName} onBlur={onChange} onEndEditing={onChange} />}\n        <Text style={{fontWeight:'normal', fontSize:14}}>{props.username}</Text>\n    </View>\n}","import React, { useState } from 'react';\nimport { TextInput } from 'react-native';\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport { CustomTextInputProps } from '../types';\n\nexport default (props:CustomTextInputProps)=>{\n    const [contentHeight, setContentHeight] = useState<number>()\n    const minHeight = props.minHeight || 30\n    const theme = useColorScheme()\n    return <TextInput style={[{\n            borderColor:'#d0d7de', \n            fontSize:16, \n            borderWidth:1, \n            borderRadius:6, \n            paddingHorizontal:10, \n            paddingVertical:3, \n            backgroundColor:Colors[theme].background,\n            color:Colors[theme].text,\n            height:props.multiline?contentHeight:minHeight,\n        }, props.style]} \n        editable={!props.disabled} \n        value={props.value} \n        onChangeText={props.setValue}\n        onContentSizeChange={props.multiline?(e) => setContentHeight(Math.max(e.nativeEvent.contentSize.height, minHeight) + 2):undefined}\n        onBlur={()=>props.onBlur?.(props.value)}\n        onEndEditing={()=>props.onEndEditing?.(props.value)}\n        multiline={props.multiline}\n    />\n}","import { useMemo, useReducer } from \"react\"\n\ntype LocalSearchAction = {type:string, keyword?:string}\n\ntype LocalSearchState ={active:boolean, keyword:string}\n\n\n\nconst localSearchReducer =(initialState:LocalSearchState, action:LocalSearchAction)=>{\n    switch (action.type){\n        case 'SEARCH':\n          return {\n            ...initialState,\n            keyword: action.keyword\n          } as LocalSearchState\n        case 'ENABLE_SEARCH':\n          return {\n            ...initialState,\n            active:true,\n          }\n        case 'DISABLE_SEARCH':\n            return{\n                ...initialState,\n                active:false,\n                keyword: ''\n            }\n        default:\n            throw new Error( `Unhandled action type: ${action.type}`)\n    }\n  }\n\n\nexport default function useLocalSearch<T>(target:T[], compare:(value:T, keyword:string)=>boolean) {\n  const [searchState, dispatch] = useReducer(localSearchReducer, {active:false, keyword:''})\n  const data = useMemo(()=>searchState.active?target.filter(v=>compare(v, searchState.keyword)):target, [searchState, target])\n  return {searchState, dispatch, data}\n}","import React, {useRef,MutableRefObject, useMemo, useState, useEffect } from 'react';\nimport Clipboard from '@react-native-clipboard/clipboard/dist';\nimport { View, Text } from '../components/Themed';\nimport CommonSection from '../components/CommonSection';\nimport useAuthContext from '../hooks/useAuthContext';\nimport useUserMembershipList from '../hooks/lists/useUserMembershipList';\nimport { UserMembership } from '../types';\nimport CommonButton from '../components/CommonButton';\nimport useMessengerMemberList, { useMessengerMemberMutation } from '../hooks/lists/useMessengerMemberList';\nimport { renderMemberItem } from '../tabs/MemberTab';\nimport lang from  '../lang'\nimport useModalsContext from '../hooks/useModalsContext';\nimport useExternalMembershipList from '../hooks/lists/useExternalMembershipList';\nimport TextField from '../components/TextField';\nimport useLocalSearch from '../hooks/useLocalSearch';\nimport { TabViewNavigator } from '../navigation/DrawerNavigator';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\n\nconst InviteItem = (props:{item:UserMembership, selectedRef:MutableRefObject<Set<number>>})=>{\n  const [selected, setSelected] = useState(props.selectedRef.current.has(props.item.id))\n  return <View style={selected?{borderWidth:1, borderColor:'blue'}:{}}>\n    {renderMemberItem(props.item, ()=>{\n      if (selected){\n        setSelected(false)\n        props.selectedRef.current.delete(props.item.id)\n      }\n      else{\n        setSelected(true)\n        props.selectedRef.current.add(props.item.id)\n      }\n    })}\n  </View>\n\n}\ntype InviteTabViewProps = {\n  id:number,\n  selectedRef:MutableRefObject<Set<number>>\n}\n\nconst GroupTabView = ({id, selectedRef}:InviteTabViewProps)=>{\n  const {auth} = useAuthContext()\n  const { setModal } = useModalsContext()\n  const userList = useUserMembershipList(auth)\n  const memberList = useMessengerMemberList(id)\n  const messengerMemberMutation = useMessengerMemberMutation()\n  const rawData = useMemo(()=>{\n    const memberSet = new Set(memberList?.map(v=>v.user))\n    return userList?.filter(v=>!memberSet.has(v.id)) || []\n  }, [userList, memberList])\n  const {data, dispatch:dispatchKeyword, searchState} = useLocalSearch(rawData, (v, keyword)=>(v.username.includes(keyword) || v.name.includes(keyword)))\n  const search = (k:string)=>{\n    if (k?.length>0){\n      dispatchKeyword({type:'ENABLE_SEARCH'})\n      dispatchKeyword({type:'SEARCH', keyword:k})\n    }\n    else{\n      dispatchKeyword({type:'DISABLE_SEARCH'})\n    }\n  }\n  const back = ()=>{\n    setModal(InviteModal, null)\n  }\n  return <View style={{alignItems:'center'}}>\n    <View style={{backgroundColor:'white', 'width': '50%'}}>\n      <TextField name={`${lang('Username')} & ${lang('Name')}`} value={searchState.keyword} setValue={search} width={'80%'}/>\n      {id && data?.map((item, index)=><InviteItem key={index} item={item} selectedRef={selectedRef}/>)}\n    </View>\n    <View style={[{width:'50%', flexDirection:'row', padding:10,}, {justifyContent:'flex-end'}]}>\n      <CommonButton title={lang('invite')} onPress={()=>{\n        messengerMemberMutation.invite({\n          channel_id:id,\n          user_ids:[...selectedRef.current]\n        }).then(back)\n      }}/>\n      <CommonButton title={lang('cancel')} onPress={back}/>\n    </View>\n  </View>\n}\n\nconst DELAY = 500\n\nconst ExternalMembershipTabView = ({id, selectedRef}:InviteTabViewProps)=>{\n  const [value, setValue] = useState('')\n  const [keyword, setKeyword] = useState('')\n  const [copied, setCopied] = useState(false)\n  const timeoutRef = useRef<NodeJS.Timeout>()\n  const { setModal } = useModalsContext()\n  const memberList = useMessengerMemberList(id)\n  const externalMemberList = useExternalMembershipList(keyword)\n  const data = useMemo(()=>{\n    const memberSet = new Set(memberList?.map(v=>v.user))\n    return externalMemberList?.filter(v=>!memberSet.has(v.id)) || []\n  }, [externalMemberList, memberList])\n  const messengerMemberMutation = useMessengerMemberMutation()\n  useEffect(()=>{\n    timeoutRef.current = setTimeout(()=>{\n      setKeyword(value)\n    }, DELAY)\n    return ()=>{timeoutRef.current && clearTimeout(timeoutRef.current)}\n  }, [value])\n  const back = ()=>{\n    setModal(InviteModal, null)\n  }\n  const inviteLink = location.href.replace('chat', 'invitee')\n  return <View style={{alignItems:'center'}}>\n  <TouchableOpacity style={{paddingVertical:10, flexDirection:\"row\"}} onPress={()=>{Clipboard.setString(inviteLink);setCopied(true)}}>\n    <Text style={{fontSize:14}}>{lang('invite link')}{\": \"}</Text>\n    <Text style={{fontSize:14, color:'#12b886'}}>{inviteLink}{\" \"}</Text>\n    {copied && <Text style={{fontSize:12, color:'red'}}>{lang(\"copied\")}</Text>}\n  </TouchableOpacity>\n  <View style={{backgroundColor:'white', 'width': '50%'}}>\n    <TextField name={lang('Username')} value={value} setValue={setValue} width={'80%'}/>\n    {id && data?.map((item, index)=><InviteItem key={index} item={item} selectedRef={selectedRef}/>)}\n  </View>\n  <View style={[{width:'50%', flexDirection:'row', padding:10,}, {justifyContent:'flex-end'}]}>\n    <CommonButton title={lang('invite')} onPress={()=>{\n      messengerMemberMutation.invite({\n        channel_id:id,\n        user_ids:[...selectedRef.current]\n      }).then(back)\n    }}/>\n    <CommonButton title={lang('cancel')} onPress={back}/>\n  </View>\n</View>\n}\n\nexport default function InviteModal({id}:{id:number}) {\n  const selectedRef = useRef<Set<number>>(new Set())\n  const drawerTabs:Record<string, {title:string, component:React.ComponentType<any>, icon:JSX.Element}> = {\n    group:{\n      title: lang('Group'),\n      component: ()=><GroupTabView id={id} selectedRef={selectedRef}/>,\n      icon: <></>\n    },\n    external:{\n      title: lang('External members'),\n      component: ()=><ExternalMembershipTabView id={id} selectedRef={selectedRef}/>,\n      icon: <></>\n    }\n  }\n  return <CommonSection outerContainerStyle={{alignSelf:'center'}}>\n    <View style={{justifyContent:'space-around'}}>\n      <Text style={{fontSize:20}}>{lang('invite')}</Text>\n    </View>\n    <View style={{marginBottom: 20, height: 1, width: '100%'}} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />\n    <View style={{width:'100%'}}>\n      <TabViewNavigator tabs={drawerTabs} tabBarPosition={\"top\"}/>\n    </View>\n  </CommonSection>\n}\n\n","import { useQuery } from \"react-query\";\nimport { getExternalMembershipList } from \"../../apis\";\n\nexport default function useExternalMembershipList(keyword?:string){\n  const { data } = useQuery([\"UserMembershipList\", keyword] , async()=>keyword?(await getExternalMembershipList(keyword)):[])\n  return data\n}","import axios, { AxiosRequestConfig } from 'axios';\n// @ts-ignore\nimport {API_URL} from \"@env\"\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nexport const accountURL =  `${API_URL}/account/`\nconst baseURL =  `${API_URL}/messenger/`\nconst defaultOption:AxiosRequestConfig = {\n    baseURL,\n    withCredentials: true,\n    headers: {}\n};\nconst _axios = axios.create(defaultOption);\n\n_axios.interceptors.request.use(\n    config => {\n        return config;\n    },\n    error => {\n        return Promise.reject(error);\n    }\n)\n\n_axios.interceptors.response.use(\n    response => {\n        // if((response.request.responseURL as string).indexOf('/task/login')>=0 && response.data.length != 0){\n        //     // redirect login\n        // }\n        return response;\n    },\n    error => {\n        if (error.response.status === 401) {\n            return getToken().then(async(token)=>{\n                if (token){\n                    const r = await _axios.post(\"/api/v1/user/sso/refresh/\", {token}, {headers:{'Authorization':''}, baseURL: accountURL})\n                    if (r.status == 200 && r.data !== ''){\n                        setToken(r.data)\n                    }\n                }\n            }).finally(()=>{\n                return Promise.reject(error)\n            })\n        }\n        return Promise.reject(error)\n    }\n)\n\nexport const setToken = async (token:string|null)=>{\n    _axios.defaults.headers['Authorization'] = `JWT ${token}`\n    if (token)\n        await AsyncStorage.setItem(\"Authorization\", token)\n    else\n        AsyncStorage.removeItem(\"Authorization\")\n}\nexport const getToken = async ()=>{\n    const token = await AsyncStorage.getItem(\"Authorization\")\n    _axios.defaults.headers['Authorization'] = token?`JWT ${token}`:null\n    return token\n}\n\nexport default _axios\n","/**\n * Learn more about deep linking with React Navigation\n * https://reactnavigation.org/docs/deep-linking\n * https://reactnavigation.org/docs/configuring-links\n */\n\nimport { LinkingOptions } from '@react-navigation/native';\nimport * as Linking from 'expo-linking';\nimport {main, login, modal} from '../screens';\n\nconst ROOTPATH = 'tokki-tok'  // github repository name\n\nObject.values(modal).forEach(v=>v.path = ROOTPATH + '/' + v.path)\n\nexport default  {\n  prefixes: [Linking.makeUrl('/')],\n  config: {\n    screens: {\n      Main: {\n        screens:{\n          ...main,\n          ...login,\n          NotFound: '*',\n        },\n        path: ROOTPATH\n      },\n      ...modal\n    },\n  },\n} as LinkingOptions;\n","import React, { createContext, useContext, useEffect, useReducer, useMemo, Dispatch, useState } from \"react\"\nimport { checkLogin, login, logout } from \"../apis\"\nimport { getNotification, putNotification } from \"../apis/notification\"\nimport { UserMembership } from \"../types\"\n\ntype AuthAction = {type:string, username?:string, password?:string, user?:UserMembership|null}\n\nexport type Auth = {user?:UserMembership|null, groupId?:number}\n\ntype AuthState ={user?:UserMembership|null, request?:{username:string, password:string}|null}\n\nconst AuthContext = createContext<{auth:Auth, error?:string, dispatch:Dispatch<AuthAction>}>({auth:{}, dispatch:()=>{}});\n\nconst authReducer =(initialState:AuthState, action:AuthAction)=>{\n  switch (action.type){\n      case 'LOGIN_REQUEST':\n        return {\n          ...initialState,\n          request:{username:action.username, password:action.password},\n        } as AuthState\n      case 'LOGIN_GUEST':\n        return {\n          ...initialState,\n          request:{username:'guest', password:'guest'},\n        } as AuthState\n      case 'LOGIN_SUCCESS':\n          return{\n              ...initialState,\n              user:action.user,\n              request:undefined\n          }\n      case 'LOGIN_FAILED':\n          return{\n              ...initialState,\n              request:undefined\n          }\n      case 'LOGOUT_REQUEST':\n          return{\n              ...initialState,\n              request:null\n          }\n      case 'LOGOUT_SUCCESS':\n          return {\n            ...initialState,\n            user:null,\n            request:undefined\n          }\n      case 'REFRESH':\n        return {\n          ...initialState,\n          user:undefined\n        }\n      default:\n          throw new Error( `Unhandled action type: ${action.type}`)\n  }\n}\n\n\nexport const AuthProvider = ({children}:{children:React.ReactNode})=>{\n  const [authState, dispatch] = useReducer(authReducer, {} as Auth)\n  const [error, setError] = useState<string>()\n  const auth = useMemo(()=>({\n    user:authState.user,\n    groupId: authState.user?.membership_set.find(g=>g.root_group_id==null)?.group\n  }), [authState])\n  useEffect(()=>{\n    if(authState.user===undefined){\n      checkLogin().then((user)=>{\n        dispatch({type:\"LOGIN_SUCCESS\", user})\n      }).catch((e)=>{\n        console.log(e)\n        dispatch({type:\"LOGOUT_SUCCESS\"})\n      })\n    }\n    else if(authState.user===null && authState.request){\n      login(authState.request.username, authState.request.password).then(user=>{\n        dispatch({type:\"LOGIN_SUCCESS\", user})\n      }).catch((data)=>{\n        dispatch({type:\"LOGIN_FAILED\"})\n        setError(data.response?.data?.message)\n      })\n    }\n    else if(authState.user && authState.request===null){\n      getNotification(authState.user.id).then(noti=>{\n        noti && putNotification({...noti, token:''}).then(()=>{\n          logout().then(()=>dispatch({type:\"LOGOUT_SUCCESS\"}))\n        })\n      })\n    }\n  }, [authState])\n  return <AuthContext.Provider value={{auth, error, dispatch}}>\n    {children}\n  </AuthContext.Provider>\n}\n\nexport default ()=>{\n  const authContext = useContext(AuthContext)\n  return authContext\n}\n","const tintColorLight = '#2f95dc';\nconst tintColorDark = '#fff';\n\nexport default {\n  light: {\n    text: '#000',\n    background: '#fff',\n    tint: tintColorLight,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorLight,\n    header:'#24292f',\n    buttonColor:'rgb(242,242,242)',\n    buttonBackgroundColor: '#f6f8fa', //'rgba(9,30,66,0.08)',//rgb(242,242,242)\n  },\n  dark: {\n    text: '#fff',\n    background: '#000',\n    tint: tintColorDark,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorDark,\n    header:'#dbd6d1',\n    buttonColor:'rgb(14,14,14)',\n    buttonBackgroundColor: '#080604',\n  },\n  button:{\n    borderColor:'rgba(27,31,36,0.15)',\n  },\n  borderColor:'#d0d7de',\n  \n  focus:'#0065A4',\n};\n","import { StackScreenProps } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport lang from '../lang'\n\nexport default function NotFoundScreen({\n  navigation,\n}: StackScreenProps<any, 'NotFound'>) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>{lang(\"This screen doesn't exist.\")}</Text>\n      <TouchableOpacity onPress={() => navigation.replace('HomeScreen')} style={styles.link}>\n        <Text style={styles.linkText}>{lang(\"Go to home screen!\")}</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  link: {\n    marginTop: 15,\n    paddingVertical: 15,\n  },\n  linkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n});\n","import React, { createContext, useContext, useEffect } from \"react\"\nimport firebase from \"firebase/app\";\nimport \"firebase/messaging\";\n//@ts-ignore\nimport {FCM_PUBLIC_VAPID_KEY, FCM_API_KEY} from \"@env\"\nimport { Notification as NotificationType, UserMembership } from \"../types\";\nimport { getNotification, postNotification, putNotification } from \"../apis/notification\";\nimport { Auth } from \"./useAuthContext\";\nconst firebaseConfig = require(\"../../web/firebase-config.js\")\n// Initialize Firebase\nconst key = firebaseConfig.messagingSenderId\nconst apiKeyEncrypted = (FCM_API_KEY as string).split('').map((v, i)=> (v.charCodeAt(0) ^ key.charCodeAt(i)).toString(16).padStart(2, '0')).join('')\nconst app = firebase.initializeApp({...firebaseConfig, apiKey:FCM_API_KEY});\n// const analytics = getAnalytics(app);\nconst messaging = firebase.messaging(app);\n\nmessaging.onMessage((payload) => {\n  if (!(\"Notification\" in window)) {\n    alert(\"This browser does not support desktop notification\");\n  }\n  else if (Notification.permission === \"granted\") {\n    const message_set = JSON.parse(payload.data['message_set'])[0]\n    new Notification(payload.data.channel_name, { body: `${payload.data.name}: ${message_set.content}` });\n  }\n});\n\nconst requestToken = async()=>{\n  const permission = await Notification.requestPermission();\n  if (permission === 'granted') {\n    const serviceWorkerRegistration = await navigator.serviceWorker.register(`${process.env.PUBLIC_URL}/firebase-messaging-sw.js?${apiKeyEncrypted}`)\n    console.log('[SW]: SCOPE: ', serviceWorkerRegistration.scope);\n    const currentToken = await messaging.getToken({serviceWorkerRegistration, vapidKey: FCM_PUBLIC_VAPID_KEY })\n    window.addEventListener('beforeunload', (event:any) => {\n      event.preventDefault();\n      serviceWorkerRegistration.unregister()\n    });\n    if (currentToken)\n      return currentToken\n  }\n  return undefined\n}\n\n\nlet noti:NotificationType|undefined\n\nconst setEnable = async(enable:boolean, user?:UserMembership|null)=>{\n  context.enable = enable\n  if(user && enable){\n    const token = await requestToken() || null\n    noti = await getNotification(user.id)\n    if (noti == undefined)\n      noti = await postNotification({user:user.id, type:'WEB', token})\n    else\n      noti = await putNotification({...noti, token})\n  }\n  else if (noti){\n    await putNotification({...noti, token:null})\n  }\n}\n\nconst context:{enable:boolean, setEnable:(enable:boolean, user?:UserMembership|null)=>void} = {enable:false, setEnable}\nconst FirebaseContext = createContext(context);\n\nexport default (auth:Auth)=>{\n  useEffect(()=>{\n    setEnable(true, auth.user)\n  }, [auth.user])\n  const firebaseContext = useContext(FirebaseContext)\n  return firebaseContext\n}\n","import InviteModal from \"./InviteModal\";\nimport ProfileModal from \"./ProfileModal\";\nimport ChannelEditModal from \"./ChannelEditModal\"\nimport GuestLogoutModal from \"./GuestLogoutModal\";\n\nexport default [\n    InviteModal,\n    ProfileModal,\n    ChannelEditModal,\n    GuestLogoutModal\n]","import { CardStyleInterpolators, createStackNavigator } from '@react-navigation/stack';\nimport React, {useMemo} from 'react';\nimport { View } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport useResizeWindow from '../hooks/useResizeWindow';\nimport NotFoundScreen from '../screens/NotFoundScreen';\nimport {main, login, modal} from '../screens';\nimport DrawerNavigator from './DrawerNavigator';\nimport useAuthContext from '../hooks/useAuthContext';\nimport { WebSocketProvider } from '../hooks/useWebsocketContext';\nimport HeaderRight from '../components/HeaderRight'\nimport Colors from '../constants/Colors';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport useFirebaseContext from '../hooks/useFirebaseContext';\nimport useIsMobile from '../hooks/useIsMobile';\nimport useColorScheme from '../hooks/useColorScheme';\nimport { ModalsProvider } from '../hooks/useModalsContext';\nimport modals from '../modals';\n\nconst Root = createStackNavigator();\n\nexport default function RootNavigator() {\n    const windowType = useResizeWindow();\n    return <Root.Navigator\n        mode= 'modal'\n        headerMode= 'screen'\n        screenOptions={{\n            cardStyle:{backgroundColor:\"white\"},\n            animationEnabled: true,\n            cardStyleInterpolator: CardStyleInterpolators.forVerticalIOS,\n        }}\n    >\n        <Root.Screen name=\"Main\" component={MainNavigator} options={{headerShown:false}}/>\n        {Object.entries(modal).map(([key, screen])=><Root.Screen key={key} name={key} component={screen.component} options={{\n            title: screen.title,\n            gestureDirection: windowType == 'landscape'?'vertical-inverted':'vertical'\n        }} />)}\n    </Root.Navigator>\n}\n\nconst Main = createStackNavigator();\n\nfunction headerLeft(navigation:any, route:any, windowType:string, isMobile:boolean){\n    const canGOBackScreen = ['HomeScreen', 'LoginScreen'].findIndex(v=>v == route.name) == -1\n    const goBack = ()=>{\n        if (navigation.canGoBack())\n            navigation.goBack()\n        else if (canGOBackScreen)\n            navigation.replace('HomeScreen')\n    }\n    if (windowType=='portrait' && canGOBackScreen)\n        return <TouchableOpacity onPress={goBack}><Ionicons size={isMobile?20:24} style={{marginHorizontal:isMobile?16:20 }} name=\"arrow-back\"/></TouchableOpacity>\n    return null\n}\n\nconst MainNavigator = ()=>{\n    const windowType = useResizeWindow();\n    const isMobile = useIsMobile()\n    const {auth} = useAuthContext()\n    const theme = useColorScheme()\n    const entries = useMemo(()=>{\n        if (auth.user === undefined)\n            return []\n        console.log('current user: ', auth.user)\n        return Object.entries(auth.user === null?login:main)\n    }, [auth])\n    const modalValues = useMemo(()=>{\n        if (auth.user === undefined)\n            return []\n        return auth.user === null?[]:modals\n    }, [auth])\n\n    useFirebaseContext(auth)\n    return (auth.user!==undefined?<View style={{flexDirection:'row', flex:1}}>\n        {auth.user?<DrawerNavigator user={auth.user}/>:undefined}\n        <View style={{flex:1}}>\n            <WebSocketProvider disable={auth.user === null || auth.user === undefined}>\n                <ModalsProvider modals={modalValues}>\n                    <Main.Navigator\n                        screenOptions={({navigation, route})=>({\n                            headerStyle:{backgroundColor:Colors[theme].header, height:isMobile?50:undefined},\n                            headerTitleStyle:{color:'white'},\n                            headerLeft:()=>headerLeft(navigation, route, windowType, isMobile),\n                            headerRight:()=><HeaderRight/>,\n                            headerLeftContainerStyle:{backgroundColor:'white', borderBottomWidth:1, borderColor:Colors.borderColor},\n                            cardStyle:{flexShrink:1},\n                            animationEnabled:windowType=='portrait',\n                            cardStyleInterpolator: CardStyleInterpolators.forHorizontalIOS\n                        })}\n                    >\n                        {entries.map(([key, screen])=><Main.Screen key={key} name={key} component={screen.component} options={{ title: screen.title }} />)}\n                        <Main.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n                    </Main.Navigator>\n                </ModalsProvider>\n            </WebSocketProvider>\n        </View>\n    </View>:<></>);\n}","import React, { useEffect, useState } from 'react'\nimport { Dimensions, Platform, View } from 'react-native'\nimport useIsMobile from '../hooks/useIsMobile'\n\n\nexport default (props:{children:React.ReactNode})=>{\n    const isMobile = useIsMobile()\n    const [height, setHeight] = useState(window.innerHeight + 1)\n    useEffect(()=>{\n        if(isMobile && Platform.OS == 'web'){\n            const onChange = (e:any)=>{\n                setHeight(window.innerHeight + 1)\n            }\n            Dimensions.addEventListener(\"change\",onChange)\n            return () => Dimensions.removeEventListener(\"change\", onChange)\n            \n        }\n    },[ isMobile])\n    return <View style={{height:isMobile&&Platform.OS == 'web'?height:'100%'}}>\n        {props.children}\n    </View>\n\n}\n  ","import React from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport Navigation from './src/navigation';\nimport useCachedResources from './src/hooks/useCachedResources';\nimport { AppearanceProvider } from 'react-native-appearance';\nimport { useInitColorScheme } from './src/hooks/useColorScheme';\nimport MobileSafeAreaView from './src/components/MobileSafeAreaView';\nimport { AuthProvider } from './src/hooks/useAuthContext';\nimport { QueryClient, QueryClientProvider } from 'react-query';\n\nconst queryClient = new QueryClient();\n\nexport default function App() {\n  const isLoadingComplete = useCachedResources();\n  const isAppearenceComplete = useInitColorScheme()\n  if (!isLoadingComplete || !isAppearenceComplete) {\n    return null;\n  } else {\n    return (\n      <SafeAreaProvider>\n        <MobileSafeAreaView>\n          <AuthProvider>\n            <QueryClientProvider client={queryClient}>\n              {/* devtools */}\n              {/* <ReactQueryDevtools initialIsOpen={true} /> */}\n              <Navigation/>\n              <StatusBar />\n            </QueryClientProvider>\n          </AuthProvider>\n        </MobileSafeAreaView>\n      </SafeAreaProvider>\n    );\n  }\n}\n","import { Ionicons } from '@expo/vector-icons';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as React from 'react';\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...Ionicons.font,\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete;\n}\n","import React, { useState } from 'react';\nimport { Text, StyleSheet, Pressable, StyleProp, ViewStyle} from 'react-native';\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport { CustomButtonProps } from '../types';\n\nconst DefaultButton = (props:CustomButtonProps)=>{\n    const [hover, setHover] = useState(false)\n    return <Pressable\n        onPress={()=>props.onPress()}\n        //@ts-ignore\n        onHoverIn={()=>setHover(true)}\n        onHoverOut={()=>setHover(false)}\n        style={[\n            {\n                paddingVertical:5, \n                paddingHorizontal:16\n            },\n            props.style,\n            hover?{backgroundColor:props.color}:{}\n        ]}>\n            <Text selectable={false} style={[{fontSize:14}, props.textStyle]}>{props.title}</Text>\n        </Pressable>\n}\n\nexport default (props:CustomButtonProps)=>{\n    const theme = useColorScheme()\n    const _props = {\n        color:Colors[theme].buttonColor,\n        ...props,\n        style:[\n            styles.style,\n            {\n                backgroundColor:Colors[theme].buttonBackgroundColor\n            },\n            props.style,\n        ] as StyleProp<ViewStyle>,\n        textStyle:[\n            styles.text, \n            {color:Colors[theme].text},\n            props.textStyle\n        ]\n    }\n    return <DefaultButton {..._props}/>\n}\n\nconst styles = StyleSheet.create({\n    style:{\n        borderRadius:6, \n        borderColor:Colors.button.borderColor, \n        borderWidth:1, \n    },\n    text:{\n        textAlign:'center', \n        fontWeight:'600'\n    }\n});\n","firebaseConfig = {\n    \"authDomain\": \"virtual-metrics-355712.firebaseapp.com\",\n    \"projectId\": \"virtual-metrics-355712\",\n    \"storageBucket\": \"virtual-metrics-355712.appspot.com\",\n    \"messagingSenderId\": \"76003576924\",\n    \"appId\": \"1:76003576924:web:c8c8a006d07918bbc02a99\",\n    \"measurementId\": \"G-SEL35L4N5R\"\n}\nif (typeof module !== 'undefined') {\n    module.exports = firebaseConfig\n}\n","\nimport { User, UserMembership } from '../types';\nimport axios, { getToken, setToken, accountURL as baseURL } from './axios';\n\nexport const login = async(username:string, password:string) => {\n    if(username.endsWith('.guest') && password.length == 0)\n        password = 'guest'\n    const r = await axios.post(\"/api-token-auth/\", {username, password});\n    if(r.status == 200){\n        await setToken(r.data)\n        return await checkLogin()\n    }\n}\n\nexport const logout = async() => {\n    await setToken(null)\n    return await axios.get(\"/api-auth/logout/\")\n}\n\nexport const guestLogin =  async() => {\n    return await login('guest', 'guest')\n}\n\nconst checkLoginToken = async ()=>{\n    const value = (await axios.get(\"/api/v1/users/memberships/?_self=true\"))?.data\n    if (value && value.length){\n        return value[0] as UserMembership\n    }\n    return null\n}\n\nexport const checkLogin = async() => {\n    const token = await getToken()\n    if (token === null)\n        return null\n    try{\n       return await checkLoginToken()\n    }\n    catch(e:any){\n        let error = e\n        if(e.response !== undefined && e.response.status==401){\n            try{\n                return await checkLoginToken()\n            }\n            catch(e2){\n                error = e2\n            }\n        }\n        const isOffline = ((error as any).code == \"ERR_NETWORK\" || (error as any).message && ((error as any).message as string).startsWith(\"Cannot read\"))\n        throw {error, isOffline}\n    }\n}\n\nexport const getUserList = async (group_id:number)=>{\n    return (await axios.get(`/api/v1/users/?group_id=${group_id}`) ).data as User[]\n}\n\nexport const patchUser = async (user:{id:number, name:string})=>{\n    await axios.patch(`/api/v1/user/`, {ids:[user.id], updated: {name:user.name}}, {baseURL})\n}\n\nexport const getUserMembershipList = async (group_id:number)=>{\n    return (await axios.get(`/api/v1/users/memberships/?group_id=${group_id}`) ).data as UserMembership[]\n}\n\nexport const getExternalMembershipList = async (username:string)=>{\n    return (await axios.get(`/api/v1/users/memberships/?username=${username}`) ).data as UserMembership[]\n}","import { Channel, MessengerMember, MessengerContent, EditMessage, MessengerChannel, DirectChannel } from '../types';\nimport axios from './axios';\n\nexport const getMessengerChannelList = async (user_id:number)=>{\n    return (await axios.get(`/api/v1/channels/messenger/?type=messenger&messenger_user_id=${user_id}`) ).data as MessengerChannel[]\n}\n\nexport const postChannel = async(channel:Channel)=>{\n    return (await axios.post(`/api/v1/channels/`, channel)).data as Channel\n}\n\nexport const postDirectChannel = async(channel:DirectChannel)=>{\n    return (await axios.post(`/api/v1/channels/direct/`, channel)).data as Channel\n}\n\nexport const putChannel = async(channel:Channel)=>{\n    return (await axios.put(`/api/v1/channels/${channel.id}/`, channel)).data as Channel\n}\n\nexport const deleteChannel = async(channel_id:number)=>{\n    await axios.delete(`/api/v1/channels/${channel_id}/`)\n}\n\nexport const getMessengerMemberList = async(channel_id:number)=>{\n    return (await axios.get(`/api/v1/messengermembers/?channel=${channel_id}`) ).data as MessengerMember[]\n}\n\nexport const postBulkMessengerMember = async(data:{channel_id:number, user_ids:number[]})=>{\n    await axios.post(`/api/v1/messengermembers/bulk/`, {channel:data.channel_id, user_ids:data.user_ids})\n}\n\nexport const deleteMessengerMember = async(member_id:number)=>{\n    await axios.delete(`/api/v1/messengermembers/${member_id}/`)\n}\n\nexport const getMessengerContentList = async (channel_id:number, id_lt?:number)=>{\n    const id_lt_param = id_lt?`&id_lt=${id_lt}`:''\n    return (await axios.get(`/api/v1/messengercontents/?limit=30&channel=${channel_id}${id_lt_param}`)).data.results as MessengerContent[]\n}\n\nexport const postMessage = async (message:EditMessage)=>{\n    if (message.file){\n        const formData = new FormData(); // formData 객체를 생성한다.\n        formData.append(\"file\", message.file)\n        Object.entries(message).forEach(value=>{\n            formData.append(value[0], `${value[1]}`)\n        })\n        await axios.post(`/api/v1/messengercontents/messages/`, formData, {headers:{\n            ...(axios.defaults.headers as any), \"Content-Type\": \"multipart/form-data\",\n        }})\n    }\n    else{\n        await axios.post(`/api/v1/messengercontents/messages/`, message)\n    }\n}\n\nexport const deleteMessengerContent = async (content_id:number)=>{\n    await axios.delete(`/api/v1/messengercontents/${content_id}/`)\n}","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","import React, { useState, createContext, useContext, useEffect } from \"react\";\nimport { Modal } from \"react-native\";\nimport useResizeWindow from \"./useResizeWindow\";\n\ntype ModalProps = any\n\ntype ModalState = {\n  Component:React.ComponentType<ModalProps>,\n  ExactComponent?:React.ComponentType<ModalProps>\n}\ntype SetModal = (Component:ModalState[\"Component\"], props:ModalProps|null)=>void\n\nconst ModalsContext = createContext<{setModal: SetModal}>({\n    setModal: () => {}\n});\n\nexport const ModalsProvider = ({children, modals:allModals}:{children:React.ReactNode, modals:React.ComponentType<ModalProps>[]}) => {\n    const [modals, setModals] = useState<ModalState[]>(allModals.map((Component)=>({Component})));\n    const windowType = useResizeWindow();\n    const [animationType, setAnimationType] = useState('none')\n    const setModal:SetModal = (Component, props) => {\n        const newModals = modals.map(m=>{\n            if(m.Component == Component){\n                return {\n                    Component, \n                    ExactComponent:props != null?React.memo(()=><Component {...props}/>):undefined\n                }\n            }\n            return m        \n        })\n        setModals(newModals);\n    }\n    useEffect(()=>{\n        modals.filter(v=>v.ExactComponent!==undefined).length == 0 && setAnimationType(windowType == 'landscape'?'fade':'slide')\n    }, [windowType, modals])\n    return <ModalsContext.Provider value={{setModal}}>\n        {children}\n        {modals.map((modal, index)=>{\n            const { ExactComponent } = modal;\n            return <Modal key={index} animationType={animationType as any} visible={ExactComponent!==undefined}>\n                {ExactComponent?<ExactComponent/>:<></>}\n            </Modal>\n        })}\n    </ModalsContext.Provider>\n}\n\nexport default ()=>{\n    const modalsContext = useContext(ModalsContext)\n    return modalsContext\n}\n\n","import React, { useState, useEffect, createContext, useContext, useMemo } from 'react';\nimport { Dimensions, ScaledSize, useWindowDimensions } from 'react-native';\n//@ts-ignore\nimport useMobileDetect from 'use-mobile-detect-hook';\n\ntype WindowType = 'portrait' | 'landscape'\n\nconst getWindowType = (window:{width:number, height:number})=> window.height >= window.width?'portrait':'landscape' as WindowType;\n\nconst ResizeWindowContext = createContext<WindowType>(getWindowType(Dimensions.get('window')));\n\nexport const ResizeWindowProvider = ({children}:{children:React.ReactNode})=>{\n  const detectMobile = useMobileDetect();\n  const {width, height} = useWindowDimensions()\n  const [windowType, setWindowType] = useState(getWindowType({width, height}))\n  useEffect(()=>{\n    setWindowType(getWindowType({width, height}))\n  }, [width, height])\n  return <ResizeWindowContext.Provider value={detectMobile.isMobile()?'portrait':windowType}>\n    {children}\n  </ResizeWindowContext.Provider>\n}\n\nexport default function useResizeWindow() {\n  const windowType = useContext(ResizeWindowContext)\n  return windowType\n}","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useTheme } from '@react-navigation/native';\nimport { useMemo, useEffect, useState } from 'react';\nimport { ColorSchemeName } from 'react-native';\nimport { Appearance } from 'react-native-appearance';\n\n// The useColorScheme value is always either light or dark, but the built-in\n// type suggests that it can be null. This will not happen in practice, so this\n// makes it a bit easier to work with.\n\nexport function useInitColorScheme(){\n  const [complete, setComplete] = useState(false)\n  useEffect(()=>{\n    if (!complete){\n      AsyncStorage.getItem(\"color\").then(v=>{\n        Appearance.set({colorScheme:(v==null)?'no-preference':(v as any)})\n        setComplete(true)\n      })\n    }\n  }, [complete])\n  return complete\n}\n\nexport default function useColorScheme(): NonNullable<ColorSchemeName> {\n  const { dark } = useTheme()\n  const colorScheme = useMemo(()=> dark?'dark':'light', [dark]) as NonNullable<ColorSchemeName>;\n  return colorScheme\n}\n","import * as React from 'react';\nimport { View, Text } from './Themed';\nimport { StyleSheet, StyleProp, ViewStyle, TextStyle } from 'react-native';\nimport Colors from '../constants/Colors';\n\nexport type SectionParamList = {\n    title?: string,\n    titleStyle?:StyleProp<TextStyle>\n    outerContainerStyle?:StyleProp<TextStyle>\n    containerStyle?:StyleProp<ViewStyle>\n    bodyStyle?:StyleProp<ViewStyle>\n    subtitle?: string\n    withSeparator?: boolean\n    children?: React.ReactNode\n}\n\nexport default function CommonSection(props:SectionParamList){\n  return (\n    <View style={[styles.outerContainer, props.outerContainerStyle]}>\n        <View style={[styles.container, props.containerStyle]}>\n            {props.withSeparator?<View style={styles.separator} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />:undefined}\n            {props.title?<View style={styles.titleView}>\n              <Text style={[styles.title, props.titleStyle]}>{props.title}</Text>\n              <Text style={styles.subtitle}>{props.subtitle}</Text>\n            </View>:undefined}\n            <View style={[styles.bodyView, props.bodyStyle]}>\n            {props.children}\n            </View>\n          </View>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n  outerContainer:{\n    width:'100%',\n    maxWidth:1080,\n    alignItems:'stretch',\n    backgroundColor:'transparent'\n  },  \n  container: {\n      marginHorizontal:20,\n      marginVertical: 10,\n      backgroundColor:'transparent',\n    },\n    titleView:{\n      width: '100%',\n      flexDirection:'row',\n      backgroundColor:'transparent',\n      marginBottom:5,\n    },\n    title: {\n      flex:1,\n      fontSize: 16,\n    },\n    subtitle: {\n      flex:1,\n      fontSize: 12,\n      textAlign: 'right',\n      marginTop:4\n    },\n    separator: {\n      marginBottom: 20,\n      height: 1,\n      width: '100%',\n    },\n    bodyView:{\n      width: '100%',\n      padding: 20,\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderWidth:1,\n      borderColor:Colors.borderColor,\n      borderRadius:6\n    }\n  });\n  ","import { useEffect } from \"react\";\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport { getMessengerChannelList, postChannel, postDirectChannel, putChannel } from \"../../apis\";\nimport { MessengerChannel, MessengerContent } from \"../../types\";\nimport { Auth } from \"../useAuthContext\";\nimport useWebsocketContext from \"../useWebsocketContext\";\n\nexport default function useMessengerChannelList(auth?:Auth){\n  const queryClient = useQueryClient()\n  const {lastJsonMessage} = useWebsocketContext()\n  const { data } = useQuery(\"MessengerChannelList\" , async()=>auth?.user?.id?(await getMessengerChannelList(auth.user.id)):[])\n\n  useEffect(()=>{\n    if(lastJsonMessage !=null){\n      if(lastJsonMessage['type']=='enter'){\n        queryClient.setQueryData<MessengerChannel[]>(\"MessengerChannelList\", (_data)=>{\n          return (_data?.find(v=>v.id==lastJsonMessage['data']['id'])?_data:[lastJsonMessage['data'] , ...(_data|| [])]).sort((a, b)=>a.id - b.id)\n        })\n      }\n      if (lastJsonMessage['type']=='next_message'){\n        const data:MessengerContent = lastJsonMessage['data']\n        queryClient.setQueryData<MessengerChannel[]>(\"MessengerChannelList\", (_data)=>(_data || []).map(v=>{\n          if (v.id == data.channel){\n            return {...v, last_message:{content:data.message_set[0]?.content, created:data.created}}\n          }\n          return v\n        }))\n      }\n      // if(lastJsonMessage['type']=='leave'){\n      //   queryClient.setQueryData<Channel[]>(\"MessengerChannelList\", (_data)=>_data?.filter(v=>v.id!=lastJsonMessage['data']['channel_id']) || [])\n      // }\n    }\n  }, [lastJsonMessage])\n  return data\n}\n\nexport function useMessengerChannelSorted(auth?:Auth){\n  const channelList = useMessengerChannelList(auth);\n  return channelList?.sort((a, b)=>(a.last_message?.created || '') < (b.last_message?.created || '')?1:-1)\n}\nexport function useMessengerChannelMutation(){\n  const queryClient = useQueryClient()\n\n  const create = useMutation(postChannel, {\n    onSuccess: ()=>queryClient.invalidateQueries(\"MessengerChannelList\")\n  });\n\n  const update = useMutation(putChannel, {\n    onSuccess: () => queryClient.invalidateQueries(\"MessengerChannelList\")\n  })\n\n  const direct = useMutation(postDirectChannel, {\n    onSuccess: () => queryClient.invalidateQueries(\"MessengerChannelList\")\n  })\n\n  return { create:create.mutateAsync, update:update.mutateAsync, direct:direct.mutateAsync}\n}"],"sourceRoot":""}