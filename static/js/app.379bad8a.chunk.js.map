{"version":3,"sources":["src/components/HeaderRight.tsx","src/screens/main/LoginScreen.tsx","src/components/CommonSection.tsx","src/hooks/lists/useMessengerContent.List.ts","src/hooks/lists/useMessengerMemberList.ts","src/lib/react-native-webrtc/useWebsocketContext.tsx","src/lib/react-native-webrtc/webrtc/p2p.tsx","src/lib/react-native-webrtc/webrtc/index.ts","src/lib/react-native-webrtc/LocalCam.tsx","src/components/LinkPreview.tsx","src/lib/react-native-webrtc/RemoteCam.tsx","src/screens/main/ChatScreen.tsx","src/screens/main/TabOneScreen.tsx","src/components/RowField.tsx","src/components/TextField.tsx","src/screens/ChannelEditScreen.tsx","src/screens/InviteScreen.tsx","src/screens/index.ts","src/screens/main/HomeScreen.tsx","src/screens/ProfileScreen.tsx","src/hooks/useWebsocketContext.tsx","src/components/TextButton.tsx","src/apis/notification.ts","src/hooks/useIsMobile.ts","src/components/CommonItem.tsx","src/hooks/lists/useUserMembershipList.ts","src/lib/react-native-paper/Avatar.tsx","src/components/Avatar.tsx","src/tabs/DrawerTab.tsx","src/tabs/MessengerTab.tsx","src/tabs/index.ts","src/tabs/MemberTab.tsx","src/navigation/DrawerNavigator.tsx","src/components/Profile.tsx","src/components/CommonTextInput.tsx","src/components/Themed.tsx","src/lang/index.ts","src/navigation/LinkingConfiguration.ts","src/screens/NotFoundScreen.tsx","src/hooks/useFirebaseContext.tsx","src/components/MobileSafeAreaView.tsx","src/navigation/RootNavigator.tsx","App.tsx","src/hooks/useCachedResources.ts","src/apis/axios.ts","src/constants/Colors.ts","src/hooks/useAuthContext.tsx","web/firebase-config.js","src/assets/fonts/SpaceMono-Regular.ttf","src/navigation/index.tsx","src/apis/account.ts","src/apis/messenger.ts","src/hooks/useColorScheme.ts","src/components/CommonButton.tsx","src/hooks/useResizeWindow.ts","src/hooks/lists/useMessengerChannelList.ts"],"names":["props","dispatch","useAuthContext","windowType","useResizeWindow","defaultButtonProps","title","lang","onPress","type","buttonProps","extra","filter","v","undefined","style","flexDirection","map","k","key","textStyle","color","Styles","StyleSheet","create","login_container","flex","backgroundColor","login_header","alignItems","paddingTop","paddingBottom","login_header_logo","width","resizeMode","login_header_text","marginTop","fontSize","login_header_text_bold","fontWeight","login_wrapper","justifyContent","paddingVertical","borderTopRightRadius","borderTopLeftRadius","form","maxWidth","form_input","height","paddingHorizontal","marginBottom","borderRadius","button","button_label","login_social","login_social_separator","login_social_separator_line","login_social_separator_text","marginHorizontal","login_social_buttons","login_social_button","borderWidth","borderColor","login_social_icon","login_social_facebook","login_footer_text","guest_footer_text","alignSelf","margin","login_footer_link","CommonSection","styles","outerContainer","outerContainerStyle","container","containerStyle","withSeparator","separator","lightColor","darkColor","titleView","titleStyle","subtitle","bodyView","bodyStyle","children","marginVertical","textAlign","padding","Colors","useMessengerContentList","channel_id","queryClient","useQueryClient","useInfiniteQuery","a","async","pageParam","getMessengerContentList","then","current","select","data","pages","length","next","getNextPageParam","lastPage","id","refetchOnReconnect","refetchOnWindowFocus","fetchNextPage","lastJsonMessage","useWebsocketContext","useEffect","setQueryData","_data","pageParams","useMessengerMemberList","useQuery","getMessengerMemberList","useMessengerMemberMutation","invite","useMutation","postBulkMessengerMember","onSuccess","invalidateQueries","leave","deleteMessengerMember","mutate","WebSocketContext","createContext","sendJsonMessage","WebSocketProvider","disable","path","Context","useBackground","useContext","peerConstraints","iceServers","urls","sessionConstraints","mandatory","OfferToReceiveAudio","OfferToReceiveVideo","VoiceActivityDetection","mediaConstraints","audio","video","framerate","onICEcandidate","pc","message","_message","rtcMessage","candidate","RTCIceCandidate","console","log","addIceCandidate","sendICEcandidate","event","sendMessage","receiver","target","optimizeSdp","offerDescription","arr","sdp","split","forEach","str","i","test","RTCSessionDescription","join","createOffer","pcRefCurrent","stream","user","addStream","setLocalDescription","name","camStyle","cam","bottonContainer","position","buttonBar","label","auth","pcRef","useRef","useState","sender","setSender","_stream","setStream","isPlay","useMemo","CustomRTCView","useCallback","React","memo","videoProps","start","mode","mediaDevices","getUserMedia","newStream","getDisplayMedia","catch","e","Object","entries","error","stop","getTracks","track","websocketOnMessage","response","channel_name","peerConnection","RTCPeerConnection","addEventListener","answerDescription","setRemoteDescription","useLocalCam","View","Text","Button","link","isMobile","Linking","openURL","url","image","Image","source","uri","maxHeight","description","setReceiver","setUser","close","clearInterval","statsInterval","iceConnectionState","activeStream","setInterval","getStats","stats","statsOutput","framePerSecond","report","kind","keys","statName","framesPerSecond","Date","toTimeString","addTransceiver","direction","streams","getRemoteStreams","createAnswer","localDescription","useRemoteCam","TextInput","value","onChangeText","VideoCallContainer","videoMode","guests","setGuests","useRtcContext","find","borderTopWidth","RemoteCam","LocalCam","VideoCallSection","MessengerContentPageItem","useIsMobile","nextPage","nextContent","content","index2","created","slice","date","isSystem","isFirst","isSelf","ownerId","dayChanged","message_set","marginLeft","Avatar","userId","size","linkDefault","wordBreak","linkStyle","link_set","linkIndex","LinkPreview","Panel_Button_Text","Panel_Holder","RowField","rowStyle","TextField","CommonTextInput","field","InviteItem","selectedRef","has","item","selected","setSelected","renderMemberItem","delete","add","main","HomeScreen","component","navigation","route","theme","useColorScheme","text","options","headerRight","HeaderRight","navigate","useLayoutEffect","index","params","tab","setOptions","TextButton","paddingLeft","tabs","bottomTabs","tabBarPosition","parseInt","onTab","setParams","ChatScreen","inputRef","channel","useMessengerChannelList","memberList","member_id","messengerMemberMutation","setValue","autoFocus","setAutoFocus","setVideoMode","postValue","contentMutation","toggleVideoMode","postMessage","_delete","deleteMessengerContent","d","variables","useMessengerContentMutation","back","renderItem","canGoBack","goBack","focus","contentContainerStyle","flexGrow","onScroll","nativeEvent","contentOffset","y","contentSize","onLayout","p","layout","Themed","bottom","ref","background","onSubmitEditing","blurOnSubmit","CommonButton","TabOneScreen","login","LoginScreen","username","setUsername","password","setPassword","_login","placeholder","autoCapitalize","keyboardType","secureTextEntry","TouchableOpacity","modal","ChannelEditScreen","channelList","channelMutation","useMessengerChannelMutation","setName","setDescription","multiline","groupId","newChannel","owner","group","update","screen","replace","InviteScreen","userList","useUserMembershipList","Set","memberSet","user_ids","ProfileScreen","Profile","SCHEMA","DOMAIN","WebSocketInternalProvider","token","setToken","AppState","currentState","isActive","setIsActive","useWebSocket","shouldReconnect","closeEvent","protocols","onOpen","onClose","AsyncStorage","getItem","onChange","nextState","removeEventListener","Provider","getNotification","user_id","axios","get","postNotification","notification","post","putNotification","put","useMobileDetect","Platform","OS","CommonItem","setHover","press","setPress","onPressIn","onPressOut","onHoverIn","onHoverOut","minHeight","borderBottomWidth","getUserMembershipList","normalizeHash","hash","min","max","Math","floor","initHash","charCodeAt","abs","stringToHSL","toUpperCase","DrawerTab","Messenger","MessengerIcon","Ionicons","OneTab","MemberTab","icon","MemberIcon","TwoTab","today","toISOString","last_message","FontAwesome","marginRight","opacity","member_count","unread_count","drawerTabs","TabViewNavigator","setIndex","icons","assign","renderTabBar","indicatorStyle","activeColor","inactiveColor","renderIcon","scene","onTabPress","findIndex","navigationState","routes","onIndexChange","renderScene","SceneMap","onAddList","colors","useTheme","tabBar","card","borderTopColor","border","pointerEvents","accessibilityRole","values","drawerTab","Tab","elevation","borderRightWidth","patchUser","finally","disabled","onBlur","onEndEditing","contentHeight","setContentHeight","editable","onContentSizeChange","useThemeColor","colorName","colorFromProps","otherProps","light","dark","translations","ko","require","RNLocalize","languageTag","isRTL","I18nManager","forceRTL","intl","createIntl","defaultLocale","locale","messages","createIntlCache","formatMessage","defaultMessage","toString","ROOTPATH","prefixes","config","screens","Main","NotFound","NotFoundScreen","linkText","firebaseConfig","messagingSenderId","apiKeyEncrypted","padStart","app","firebase","initializeApp","apiKey","messaging","onMessage","payload","window","Notification","permission","JSON","parse","body","alert","FirebaseContext","enable","setEnable","FirebaseProvider","tokenRef","setNotification","isMount","setNotificationInternal","n","requestPermission","navigator","serviceWorker","register","process","serviceWorkerRegistration","scope","getToken","vapidKey","currentToken","preventDefault","unregister","requestToken","t","noti","innerHeight","setHeight","Dimensions","Root","createStackNavigator","QueryClient","RootNavigator","MobileSafeAreaView","client","Navigator","headerMode","screenOptions","cardStyle","animationEnabled","cardStyleInterpolator","CardStyleInterpolators","forVerticalIOS","Screen","MainNavigator","headerShown","gestureDirection","DrawerNavigator","headerStyle","header","headerTitleStyle","headerLeft","canGOBackScreen","headerLeftContainerStyle","flexShrink","forHorizontalIOS","App","isLoadingComplete","setLoadingComplete","SplashScreen","Font","font","warn","useCachedResources","colorScheme","StatusBar","accountURL","defaultOption","baseURL","withCredentials","headers","_axios","interceptors","request","use","Promise","reject","status","r","defaults","setItem","removeItem","tint","tabIconDefault","tabIconSelected","buttonColor","buttonBackgroundColor","AuthContext","authReducer","initialState","action","Error","AuthProvider","useReducer","authState","membership_set","g","root_group_id","checkLogin","logout","module","exports","navigationRef","Navigation","documentTitle","formatter","linking","versions","LinkingConfiguration","DarkTheme","DefaultTheme","l","search","decoded","s","history","replaceState","pathname","location","ignoreWarnings","_console","_","clone","indexOf","endsWith","guestLogin","checkLoginToken","isOffline","code","startsWith","getUserList","group_id","patch","ids","updated","getMessengerChannelList","postChannel","putChannel","deleteChannel","id_lt","id_lt_param","results","content_id","_useColorScheme","DefaultButton","hover","selectable","_props","getWindowType","detectMobile","setWindowType","sort","b","mutateAsync"],"mappings":"2LASe,mBAACA,GACZ,IAAOC,EAAYC,oBAAZD,SACDE,EAAaC,oBACbC,EAAmC,CAAC,CAACC,MAAMC,kBAAK,YAAaC,QAAQ,kBAAIP,EAAS,CAACQ,KAAK,sBACxFC,GAAeV,EAAMW,MAAM,GAAD,WAAKX,EAAMW,OAAUN,GAAoBA,GAAoBO,QAAO,SAAAC,GAAC,OAAEA,EAAEV,YAAYA,QAA8BW,GAAhBD,EAAEV,cACrI,OAAM,kBAAC,UAAI,CAACY,MAAO,CAACC,cAAc,QAC7BN,EAAYO,KAAI,SAACJ,EAAEK,GAAC,OAAG,kBAAC,UAAU,KAACC,IAAKD,GAAOL,EAAC,CAAEO,UAAW,CAACC,MAAM,SAAUA,MAAM,iB,uPC8D7F,IAAMC,EAASC,UAAWC,OAAO,CAC7BC,gBAAiB,CACfC,KAAM,EACNC,gBAAiB,QAEnBC,aAAc,CACZC,WAAY,SACZC,WAAY,GACZC,cAAe,GACfJ,gBAAiB,WAEnBK,kBAAmB,CACjBC,MAAO,IACPC,WAAY,WAEdC,kBAAmB,CACjBC,UAAW,GACXf,MAAO,UACPgB,SAAU,IAEZC,uBAAwB,CACtBjB,MAAO,OACPkB,WAAY,QAEdC,cAAe,CACbd,KAAM,EACNe,eAAgB,gBAChBC,gBAAiB,GACjBC,qBAAsB,GACtBC,oBAAqB,GACrBR,WAAY,GACZT,gBAAiB,OACjBE,WAAY,UAEdgB,KAAM,CACJZ,MAAO,OACPa,SAAU,KAEZC,WAAY,CACVC,OAAQ,GACRC,kBAAmB,GACnBC,aAAc,GACdvB,gBAAiB,UACjBwB,aAAc,IAEhBC,OAAQ,CACNvB,WAAY,SACZY,eAAgB,SAChBO,OAAQ,GACRrB,gBAAiB,UACjBwB,aAAc,IAEhBE,aAAc,CACZhC,MAAO,OACPgB,SAAU,IAEZiB,aAAc,CACZrB,MAAO,OACPa,SAAU,IACVV,UAAW,IAEbmB,uBAAwB,CACtBvC,cAAe,MACfa,WAAY,UAEd2B,4BAA6B,CAC3B9B,KAAM,EACNO,MAAO,OACPe,OAAQ,EACRrB,gBAAiB,WAEnB8B,4BAA6B,CAC3BC,iBAAkB,GAClBrC,MAAO,UACPgB,SAAU,IAEZsB,qBAAsB,CACpB3C,cAAe,MACfyB,eAAgB,SAChBL,UAAW,IAEbwB,oBAAqB,CACnB/B,WAAY,SACZY,eAAgB,SAChBR,MAAO,GACPe,OAAQ,GACRU,iBAAkB,GAClBG,YAAa,EACbC,YAAa,UACbX,aAAc,IAEhBY,kBAAmB,CACjB9B,MAAO,GACPe,OAAQ,GACRd,WAAY,WAEd8B,sBAAuB,CACrBrC,gBAAiB,UACjBmC,YAAa,WAEfG,kBAAmB,CACjBjD,cAAe,MACfa,WAAY,SACZR,MAAO,UACPgB,SAAU,IAEZ6B,kBAAmB,CACjBlD,cAAe,MACfmD,UAAW,SACX9C,MAAO,UACPgB,SAAU,GACV+B,OAAQ,IAEVC,kBAAmB,CACjBhD,MAAO,UACPgB,SAAU,GACVE,WAAY,U,kDCjLH,SAAS+B,EAActE,GACpC,OACE,gBAAC,OAAI,CAACe,MAAO,CAACwD,EAAOC,eAAgBxE,EAAMyE,sBACvC,gBAAC,OAAI,CAAC1D,MAAO,CAACwD,EAAOG,UAAW1E,EAAM2E,iBACjC3E,EAAM4E,cAAc,gBAAC,OAAI,CAAC7D,MAAOwD,EAAOM,UAAWC,WAAW,OAAOC,UAAU,gCAA4BjE,EAC3Gd,EAAMM,MAAM,gBAAC,OAAI,CAACS,MAAOwD,EAAOS,WAC/B,gBAAC,OAAI,CAACjE,MAAO,CAACwD,EAAOjE,MAAON,EAAMiF,aAAcjF,EAAMM,OACtD,gBAAC,OAAI,CAACS,MAAOwD,EAAOW,UAAWlF,EAAMkF,gBAC/BpE,EACR,gBAAC,OAAI,CAACC,MAAO,CAACwD,EAAOY,SAAUnF,EAAMoF,YACpCpF,EAAMqF,YAOnB,IAAMd,EAAShD,UAAWC,OAAO,CAC/BgD,eAAe,CACbvC,MAAM,OACNa,SAAS,KACTjB,WAAW,UACXF,gBAAgB,eAElB+C,UAAW,CACPhB,iBAAiB,GACjB4B,eAAgB,GAChB3D,gBAAgB,eAElBqD,UAAU,CACR/C,MAAO,OACPjB,cAAc,MACdW,gBAAgB,cAChBuB,aAAa,GAEf5C,MAAO,CACLoB,KAAK,EACLW,SAAU,IAEZ6C,SAAU,CACRxD,KAAK,EACLW,SAAU,GACVkD,UAAW,QACXnD,UAAU,GAEZyC,UAAW,CACT3B,aAAc,GACdF,OAAQ,EACRf,MAAO,QAETkD,SAAS,CACPlD,MAAO,OACPuD,QAAS,GACT3D,WAAY,SACZY,eAAgB,SAChBoB,YAAY,EACZC,YAAY2B,UAAO3B,YACnBX,aAAa,K,wSC9DJ,SAASuC,EAAwBC,GAC9C,IAAMC,EAAcC,2BACpB,EAAgCC,2BAC9B,CAAC,uBAAwBH,IACzB,2BAAAI,EAAAC,OAAA,gDAAgB,OAATC,EAAS,EAATA,UAAS,kBAAIC,kCAAwBP,EAAYM,GAAWE,MAAK,SAAAC,GAAO,MAAG,CAACA,eAAU,8DAC7F,CACEC,OAAO,SAAAC,GAGL,OAFGA,EAAKC,MAAMC,OAAS,IACrBF,EAAKC,MAAMD,EAAKC,MAAMC,OAAS,GAAGC,KAAOH,EAAKC,MAAMD,EAAKC,MAAMC,OAAS,IACnEF,GAETI,iBAAiB,SAACC,GAAQ,OAAW,MAARA,KAAUP,QAAQI,OAAOG,EAASP,QAAQO,EAASP,QAAQI,OAAS,GAAGI,QAAG9F,GACvG+F,oBAAmB,EACnBC,sBAAqB,IAXjBR,EAAI,EAAJA,KAAMS,EAAa,EAAbA,cAcNC,EAAoBC,oBAApBD,gBAUR,OATAE,qBAAU,WACa,MAAlBF,GAAmD,gBAAzBA,EAAsB,MAAqBA,EAAsB,KAAW,SAAKrB,GAC5GC,EAAYuB,aAAiD,CAAC,uBAAwBxB,IAAa,SAACyB,GAGlG,OAFQ,MAALA,KAAOb,MAAM,GAAGH,UAAgB,MAALgB,OAAK,EAALA,EAAOb,MAAM,GAAGH,QAAQ,GAAGQ,KAAMI,EAAsB,KAAEJ,KACrFQ,EAAMb,MAAM,GAAGH,QAAO,CAAIY,EAAsB,MAAC,WAAU,MAALI,OAAK,EAALA,EAAOb,MAAM,GAAGH,W,iWACjE,CAAP,GAAYgB,GAAS,CAACb,MAAM,GAAIc,WAAW,UAG9C,CAACL,IACG,CAAEV,OAAMS,iB,aClCF,SAASO,EAAuB3B,GAE7C,OADiB4B,mBAAS,CAAC,sBAAuB5B,IAAc,oBAAAI,EAAAC,OAAA,kEAAAD,EAAA,MAAeyB,iCAAuB7B,IAAW,uGAAzGW,KAKH,SAASmB,IACd,IAAM7B,EAAcC,2BACd6B,EAASC,sBAAYC,0BAAyB,CAClDC,UAAW,WACTjC,EAAYkC,kBAAkB,0BAI5BC,EAAQJ,sBAAYK,wBAAuB,CAC/CH,UAAW,WACTjC,EAAYkC,kBAAkB,wBAC9BlC,EAAYkC,kBAAkB,0BAGlC,MAAO,CAACJ,OAAOA,EAAOO,OAAQF,MAAMA,EAAME,Q,8CCnBtCC,EAAmBC,wBAAuE,CAACnB,qBAAgBlG,EAAWsH,gBAAgB,eAE/HC,EAAoB,SAAH,GAAwE,IAAnEC,EAAO,EAAPA,QAASjD,EAAQ,EAARA,SAC1C,OAAOiD,EAAQ,qCAAM,kBAAC,4BAAyB,CAACC,KAAM,oBAAqBC,QAASN,EAAkBO,eAAa,GAChHpD,IAIU,aAEb,OADyBqD,qBAAWR,I,QCVzBS,EAAkB,CAC9BC,WAAY,CACX,CACCC,KAAM,kCAKIC,EAAqB,CACjCC,UAAW,CACVC,qBAAqB,EACrBC,qBAAqB,EACrBC,wBAAwB,IAIpBC,EAAmB,CAACC,OAAM,EAAMC,MAAM,CAACC,UAAU,KAKjDC,EAAiB,SAACC,EAA6BC,GACpD,IAAMC,EAAWD,EAAQnD,KAAKqD,WACvBC,EAAY,IAAIC,kBAAgBH,GAClCF,IACHM,QAAQC,IAAI,uBACZP,EAAGQ,gBAAgBJ,KAIhBK,EAAmB,SAACC,EAAWC,EAA8BC,EAAiBC,GAG7EH,EAAMN,WAGZO,EAAY,CAAC1J,KAAK,eAAgB2J,WAAU9D,KAAK,CAAC+D,SAAQV,WAAWO,EAAMN,cAKtEU,EAAc,SAACC,GACpB,IAAIC,EAAMD,EAAiBE,IAAIC,MAAM,QAQnC,OAPFF,EAAIG,SAAQ,SAACC,EAAYC,GACpB,cAAcC,KAAKF,GACtBJ,EAAIK,GAAKD,EAAG,mFACF,mBAAmBE,KAAKF,KAClCJ,EAAIK,IAAE,oBAGC,IAAIE,wBAAsB,CAC/BtK,KAAM8J,EAAiB9J,KACvBgK,IAAKD,EAAIQ,KAAK,WAIbC,EAAc,SAAMC,EAA8Df,EAA8BgB,EAA2Bd,EAAee,GAAmB,wEAE9I,OADpCD,GAAUD,EAAa1B,GAAG6B,UAAWF,GAAS,KACrBb,EAAW,mBAAQY,EAAa1B,GAAGyB,YAAanC,IAAoB,OAAvE,OAAuE,YAAvFyB,GAAgB,iCAChBW,EAAa1B,GAAG8B,oBAAqBf,IAAkB,OAC7DJ,EAAY,CAAC1J,KAAK,OAAQ2J,SAASc,EAAad,SAAU9D,KAAK,CAAC+D,SAAQkB,KAAS,MAAJH,OAAI,EAAJA,EAAMG,KAAM5B,WAAWY,KAAmB,6DC5D3GiB,EAAWjK,UAAWC,OAAO,CACzCkD,UAAU,CAAEhD,KAAM,GAClB+J,IAAI,CAAE/J,KAAM,EAAGsB,OAAO,QACtB0I,gBAAiB,CAACC,SAAS,WAAY1J,MAAM,OAAQe,OAAO,OAAQP,eAAe,YACnFmJ,UAAW,CAAE5K,cAAe,MAAOyB,eAAgB,gBACnDoJ,MAAO,CAAClK,gBAAgB,QAASN,MAAM,QAAS4B,kBAAkB,KCApD,YAACjD,GAAyC,IAAD,EAC/C8L,EAAQ5L,oBAAR4L,KACP,EAA2C7E,IAApCD,EAAe,EAAfA,gBACP,EFuDyB,SAACmD,GAC3B,IAAM4B,EAAQC,iBAAsE,IACpF,EAA4BC,qBAAkB,WAAvCC,EAAM,KAAEC,EAAS,KACxB,EAA6BF,qBAAuB,WAA7CG,EAAO,KAAEC,EAAS,KACnBC,EAASC,mBAAQ,mBAAIH,IAAoB,CAACA,IAC1CI,EAAgBC,sBAAYC,IAAMC,MAAK,gBAAE5L,EAAK,EAALA,MAAK,OAAiBqL,EAAQ,kBAAC,UAAO,CAACjB,OAAQiB,EAASrL,MAAOA,EAAO6L,WAAY,CAAC5J,OAAO,UAAY,wCAAU,CAACoJ,IA+BhK,MAAO,CACNS,MA/BaJ,uBAAY,SAAMrB,EAAoBD,EAA4B2B,GAAwB,wEAClF,GAArBhD,QAAQC,IAAI,SACPqC,QAAkBtL,IAAPgM,EAAgB,6BAGnB,UAARA,EAAgB,0CACAC,eAAaC,aAAa7D,IAAiB,OAA7D8D,EAAS,iCAEO,WAARH,EAAiB,4CACPC,eAAaG,gBAAgB/D,IAAiB,QAAhE8D,EAAS,+BAGS,GAHT,KAGG9B,EAAM,iDAAU4B,eAAaC,aAAa7D,GAAkBgE,OAAM,SAACC,GAAK,OAAGL,eAAaG,gBAAgB/D,OAAkB,4BAAtI8D,EAAS,aAEVZ,EAAUY,GACVI,OAAOC,QAAQvB,EAAM3F,SAASnF,KAAI,YAAW,IAAD,WAALJ,GAAF,KAAG,MACvCoK,EAAYpK,EAAGsJ,EAAa8C,EAAW,QAAS7B,MAC/C,kDAEFtB,QAAQyD,MAAM,EAAD,IAAI,mEAGjB,CAACnB,IAUHoB,KATYf,uBAAY,WACxB3C,QAAQC,IAAI,QACTqC,IACFA,EAAQqB,YAAYxM,KAAI,SAACyM,GAAS,OAAKA,EAAMF,UAC7CnB,OAAUvL,MAET,CAACsL,IAIHuB,mBAAoB,SAAMC,EAAcxC,GAAkB,gFAWxD,GATW,eADR3K,EAAOmN,EAASnN,OAEnB0L,EAAUyB,EAAStH,KAAKuH,cAEb,SAARpN,GAAyC,QAAtBmN,EAAStH,KAAK+D,SACnCP,QAAQC,IAAI,YACN+D,EAAiB,IAAIC,oBAAmBpF,IAC/BqF,iBAAkB,gBAAgB,SAAC9D,GAAS,OAAKD,EAAiBC,EAAOC,EAAayD,EAAS1B,OAAQ,YACtHH,EAAM3F,QAAQwH,EAAS1B,QAAU,CAAC1C,GAAGsE,EAAgB1D,SAAUwD,EAAS1B,QACxEjB,EAAYc,EAAM3F,QAAQwH,EAAS1B,QAAS/B,EAAaiC,EAAS,QAAShB,IAGjE,UAAR3K,GAA4C,QAAxBmN,EAAStH,KAAK+D,OAAgB,gBAGyB,OAF7EP,QAAQC,IAAI,YACN+D,EAAiB/B,EAAM3F,QAAQwH,EAAS1B,QAAQ1C,GAChDyE,EAAoB,IAAIlD,wBAAsB6C,EAAStH,KAAKqD,YAAY,EAAD,iBACvEmE,EAAeI,qBAAsBD,IAAmB,OAIpD,gBAARxN,GAAgD,QAAtBmN,EAAStH,KAAK+D,SACrCyD,EAAiB/B,EAAM3F,QAAQwH,EAAS1B,QAAQ1C,GACtDD,EAAeuE,EAAgBF,IAC/B,8DAEFpB,gBACAF,SACAJ,UE1HiEiC,CAD1B,EAAf/F,iBACjByE,EAAK,EAALA,MAAOW,EAAI,EAAJA,KAAMG,EAAkB,EAAlBA,mBAAoBnB,EAAa,EAAbA,cAAeF,EAAM,EAANA,OAevD,OAdApF,qBAAU,WACR4E,EAAKV,MAAQpE,GAAmB2G,EAAmB3G,EAAiB8E,EAAKV,QACxE,CAACpE,EAAiB8E,IACrB5E,qBAAU,WACLlH,EAAM8M,KACPhB,EAAKV,MAAQyB,EAAMf,EAAKV,UAAMtK,EAAWd,EAAM8M,MAE5B,OAAb9M,EAAM8M,MACZR,GAAUkB,MAEX,CAAC1B,EAAM9L,EAAM8M,OAChB5F,qBAAU,WACR,OAAO,WAAKoF,GAAUkB,QAGtB,kBAACY,EAAA,QAAI,CAACrN,MAAOyK,EAAS9G,WACpB,kBAAC8H,EAAa,CAACzL,MAAOyK,EAASC,MAC/B,kBAAC2C,EAAA,QAAI,CAACrN,MAAOyK,EAASE,iBACpB,kBAAC0C,EAAA,QAAI,CAACrN,MAAOyK,EAASI,kBAEL9K,IAAfd,EAAM8M,MAAsBR,IAAU,kBAAC8B,EAAA,QAAI,CAACrN,MAAO,CAACC,cAAc,QAAQ,kBAACqN,EAAA,QAAI,CAACtN,MAAOyK,EAASK,OAAiB,OAAX,EAAEC,EAAKV,WAAI,EAAT,EAAWG,OACrH,kBAAC6C,EAAA,QAAI,CAACrN,MAAOyK,EAASI,gBACJ9K,IAAfd,EAAM8M,OAAuBR,GAAU,kBAACgC,EAAA,QAAM,CAAChO,MAAM,QAAQE,QAAS,kBAAIsL,EAAKV,MAAQyB,EAAMf,EAAKV,cACnFtK,IAAfd,EAAM8M,MAAsBR,GAAU,kBAACgC,EAAA,QAAM,CAAChO,MAAM,OAAOE,QAASgN,Q,6BC1BhE,eAAmD,IAAjDe,EAAI,EAAJA,KAAMC,EAAQ,EAARA,SACnB,OAAO,kBAAClK,EAAa,CAACK,eAAgB,CAACjB,iBAAiB,GAAI0B,UAAW,CAACI,QAAQ,IAChF,kBAAC,mBAAgB,CAAChF,QAAS,kBAAIiO,WAAQC,QAAQH,EAAKI,MAAM5N,MAAO,CAACC,cAAc,OAAQ2D,eAAgB,CAAC1C,MAAM,SAC1GsM,EAAKK,OAAS,kBAACC,GAAA,QAAK,CAACC,OAAQ,CAACC,IAAIR,EAAKK,OAAQ1M,WAAW,QAAQnB,MAAO,CAAEkB,MAAM,OAAQa,SAAS0L,EAAS,IAAI,IAAKQ,UAAUR,EAAS,IAAI,IAAK3K,YAAY,KAC7J,kBAAC,OAAI,CAAC9C,MAAO,CAACW,KAAK,EAAGgC,iBAAiB,KACvC,kBAAC,OAAI,CAAC3C,MAAO,CAACsB,SAAS,KAAMkM,EAAKjO,OAClC,kBAAC,OAAI,CAACS,MAAO,CAACsB,SAAS,KAAMkM,EAAKU,aAClC,kBAAC,OAAI,CAAClO,MAAO,CAACsB,SAAS,KAAMkM,EAAKI,SCX3B,YAAC3O,GACd,MAAgCiM,mBAAS,IAAG,WAArC7B,EAAQ,KAAE8E,EAAW,KAC5B,EAA2CjI,IAApCD,EAAe,EAAfA,gBACP,EJkI0B,SAACmD,GAC5B,IAAM4B,EAAQC,iBAAsE,IACpF,EAAwBC,qBAAyB,WAA1Cb,EAAI,KAAE+D,EAAO,KACpB,EAA6BlD,qBAAuB,WAA7CG,EAAO,KAAEC,EAAS,KACnBG,EAAgBC,sBAAYC,IAAMC,MAAK,SAAC5L,GAAS,OAAGqL,EAAQ,kBAAC,UAAO,CAACjB,OAAQiB,EAASrL,MAAOA,EAAO6L,WAAY,CAAC5J,OAAO,UAAY,wCAAQ,CAACoJ,IAC7IE,EAASC,mBAAQ,mBAAIH,IAAoB,CAACA,IAC1CS,EAAQJ,uBAAY,SAACrC,GAC1BN,QAAQC,IAAI,SACPgC,EAAM3F,QAAQoD,KACjBuC,EAAM3F,QAAQoD,GAAK,IAAIuE,oBAAmBpF,GAC1CoD,EAAM3F,QAAQgE,SAAWA,GAEtBgC,GACJjC,EAAY,CAAC1J,KAAK,QAAS2J,WAAU9D,KAAK,CAAC,OAAU,YAEpD,CAAC8F,IACEoB,EAAO,WACZ1D,QAAQC,IAAI,QACRgC,EAAM3F,QAAQoD,KAEhB6C,OAAUvL,GACViL,EAAM3F,QAAQoD,GAAG4F,QACjBrD,EAAM3F,QAAQoD,QAAK1I,EACnBiL,EAAM3F,QAAQgE,cAAWtJ,EACzBuO,cAActD,EAAM3F,QAAQkJ,iBAG/B,MAAO,CACNzC,QACAW,OACAG,mBAAoB,SAAMC,GAAY,8FACZ,GACb,UADRnN,EAAOmN,EAASnN,OACyB,SAAtBmN,EAAStH,KAAK+D,QAAmBuD,EAAS1B,SAAuB,OAAjB,EAAIH,EAAM3F,cAAO,EAAb,EAAegE,UAAQ,iBAuC9F,OAtCHN,QAAQC,IAAI,mBACN+D,EAAiB/B,EAAM3F,QAAQoD,GACrC2F,EAAQ,CAAC5D,KAAMqC,EAAStH,KAAKiF,OAC7BuC,EAAeE,iBAAiB,gBAAgB,SAAC9D,GAAS,OAAKD,EAAiBC,EAAOC,EAAayD,EAAS1B,OAAQ,WACrH4B,EAAeE,iBAAiB,4BAA4B,SAACZ,GAC5D,GAA2C,aAAvCrB,EAAM3F,QAAQoD,GAAG+F,mBAAkC,CACtD,IAAIC,GAAe,EACnBzD,EAAM3F,QAAQkJ,cAAgBG,aAAY,8BAAA1J,EAAAC,OAAA,kEAAAD,EAAA,MACrBgG,EAAM3F,QAAQoD,GAAGkG,SAAS,OAAK,OAA7CC,EAAK,OACPC,EAAc,GACdC,OAAiB/O,EACrB6O,EAAMhF,SAAQ,SAACmF,GACM,gBAAhBA,EAAOrP,MAA0C,UAAhBqP,EAAOC,OAC3C1C,OAAO2C,KAAKF,GAAQnF,SAAQ,SAACsF,GAC5BL,GAAkBK,EAAQ,KAAKH,EAAOG,GAAS,QAEhDJ,EAAiBC,EAAOI,oBAG1BpG,QAAQC,IAAIyF,EAAcK,QACJ/O,GAAlB+O,EACHL,GAAe,EAEPA,GACRhC,IAED1D,QAAQC,KAAI,IAAIoG,MAAOC,eAAe1F,MAAM,KAAK,GAAIkF,GAAY,8DAC/D,SAE4C,UAAvC7D,EAAM3F,QAAQoD,GAAG+F,oBACzB/B,OAMFM,EAAeuC,eAAe,QAAS,CACtCC,UAAW,aACT,oBACGrF,EAAY,CAACzB,GAAGuC,EAAM3F,QAAQoD,GAAIY,SAASwD,EAAS1B,QAAS/B,EAAaiC,EAAS,OAAQhB,IAAK,WAE3F,UAAR3K,GAA0C,SAAtBmN,EAAStH,KAAK+D,QAAmBuD,EAAS1B,SAAuB,OAAjB,EAAIH,EAAM3F,cAAO,EAAb,EAAegE,UAAQ,iBAErB,OAD7EN,QAAQC,IAAI,oBACNkE,EAAoB,IAAIlD,wBAAsB6C,EAAStH,KAAKqD,YAAY,EAAD,kBACvEoC,EAAM3F,QAAQoD,GAAG0E,qBAAsBD,IAAmB,QAC1DsC,EAAUxE,EAAM3F,QAAQoD,GAAGgH,mBACjCnE,EAAUkE,EAAQA,EAAQ/J,OAAS,IACnC2D,EAAY,CAAC1J,KAAK,MAAO2J,SAAS2B,EAAM3F,QAAQgE,SAAU9D,KAAK,KAAI,WAExD,QAAR7F,GAAkBmN,EAAS1B,SAAuB,OAAjB,EAAIH,EAAM3F,cAAO,EAAb,EAAegE,UAAQ,iBAG5B,GAFlCN,QAAQC,IAAI,UACN+D,EAAiB/B,EAAM3F,QAAQoD,GACrC2F,EAAQ,CAAC5D,KAAKqC,EAAStH,KAAKiF,OACvBuC,EAAe,CAAD,kDAGyD,OAD5EA,EAAeE,iBAAkB,gBAAgB,SAAC9D,GAAS,OAAKD,EAAiBC,EAAOC,EAAayD,EAAS1B,OAAQ,WAChH3B,EAAmB,IAAIQ,wBAAsB6C,EAAStH,KAAKqD,YAAY,EAAD,kBACtEmE,EAAeI,qBAAsB3D,IAAkB,mCAC7BuD,EAAe2C,aAAc3H,IAAoB,QAA1D,OAAjBmF,EAAiB,2BACjBH,EAAexC,oBAAqB2C,IAAmB,QAC7D9D,EAAY,CAAC1J,KAAK,SAAU2J,SAAS2B,EAAM3F,QAAQgE,SAAU9D,KAAK,CAAC+D,OAAO,OAAQV,WAAWmE,EAAe4C,oBAEtGH,EAAUxE,EAAM3F,QAAQoD,GAAGgH,mBACjCnE,EAAUkE,EAAQA,EAAQ/J,OAAS,IAAG,QAE5B,gBAAR/F,GAAgD,SAAtBmN,EAAStH,KAAK+D,QAAmBuD,EAAS1B,SAAuB,OAAjB,EAAIH,EAAM3F,cAAO,EAAb,EAAegE,WAC/Fb,EAAewC,EAAM3F,QAAQoD,GAAIoE,GAAS,8DAE7CpB,gBACApB,OACAkB,UIzOuEqE,CADhC,EAAfvI,iBACjByE,EAAK,EAALA,MAAOW,EAAI,EAAJA,KAAMG,EAAkB,EAAlBA,mBAAoBnB,EAAa,EAAbA,cAAeF,EAAM,EAANA,OAAQlB,EAAI,EAAJA,KAU/D,OATAlE,qBAAU,WACRF,GAAmB2G,EAAmB3G,KACrC,CAACA,IACJE,qBAAU,WAIR,OAHGlH,EAAMoK,UACPyC,EAAM7M,EAAMoK,UAEP,kBAAIoD,OACV,CAACxN,EAAMoK,WAER,kBAACgE,EAAA,QAAI,CAACrN,MAAOyK,EAAS9G,WACpB,kBAAC8H,EAAa,CAACzL,MAAOyK,EAASC,MAC/B,kBAAC2C,EAAA,QAAI,CAACrN,MAAOyK,EAASE,iBACpB,kBAAC0C,EAAA,QAAI,CAACrN,MAAOyK,EAASI,kBAEF9K,IAAlBd,EAAMoK,UAAyBkC,IAC/B,kBAAC8B,EAAA,QAAI,CAACrN,MAAO,CAACC,cAAc,QACzBhB,EAAMoK,UAAYkC,EACnB,kBAAC+B,EAAA,QAAI,CAACtN,MAAOyK,EAASK,OAAY,MAAJT,OAAI,EAAJA,EAAMG,MACpC,oCACE,kBAAC8C,EAAA,QAAI,CAACtN,MAAO,CAAC8C,YAAY,IAAI,iBAC9B,kBAAC+M,EAAA,QAAS,CAAC7P,MAAO,CAAC8C,YAAY,EAAGnC,KAAK,GAAImP,MAAOzG,EAAU0G,aAAc5B,MAGhF,kBAACd,EAAA,QAAI,CAACrN,MAAOyK,EAASI,gBACA9K,IAAnBd,EAAMoK,WAA2BkC,GAAU,kBAACgC,EAAA,QAAM,CAAChO,MAAM,QAAQE,QAAS,kBAAIqM,EAAMzC,WACjEtJ,IAAnBd,EAAMoK,UAA0BkC,GAAU,kBAACgC,EAAA,QAAM,CAAChO,MAAM,OAAOE,QAASgN,Q,UCR7EuD,GAAqB,SAAH,GAA8C,IAAzCpL,EAAU,EAAVA,WAAYqL,EAAS,EAATA,UACvC,EAA4B/E,mBAAmB,IAAG,WAA3CgF,EAAM,KAAEC,EAAS,KACxB,EAA6CC,IAArCnK,EAAe,EAAfA,gBAAiBoB,EAAe,EAAfA,gBAgBzB,OAfAlB,qBAAU,WACR,GAAqB,MAAlBF,IAC2B,cAAzBA,EAAsB,MACvBoB,EAAgB,CAAC,KAAO,YAAa,KAAO,CAAC,WAAazC,KAEhC,mBAAzBqB,EAAsB,MAAiD,kBAAzBA,EAAsB,MACrEkK,EAAU,GAAD,WAAKD,GAAM,CAAEjK,EAAwB,UAEpB,wBAAzBA,EAAsB,MAA0B,CACjD,IAAM6G,EAAe7G,EAAwB,OAC/BiK,EAAOG,MAAK,SAAAvQ,GAAC,OAAEA,GAAKgN,MACzBqD,EAAUD,EAAOrQ,QAAO,SAAAC,GAAC,OAAEA,GAAKgN,SAG5C,CAAC7G,SACsBlG,IAAnBkG,EAA8B,kBAACoH,EAAA,QAAI,CAACrN,MAAO,CAC9C,CAACC,cAAe,MAAOyB,eAAe,SAAUqB,YAAY2B,UAAO3B,YAAaX,aAAa,GAAIrB,WAAW,GAAIH,gBAAgB,SACpH,OAAZqP,EAAiB,CAACK,eAAe,GAAG,KACnCJ,EAAOhQ,KAAI,SAACmJ,EAAUS,GAAC,OAAG,kBAACuD,EAAA,QAAI,CAACjN,IAAK0J,EAAG9J,MAAO,CAAC+B,SAAS,MAAO9B,cAAe,MAAO0C,iBAAiB,GAAIhC,KAAK,IAC/G,kBAAC4P,GAAS,CAAClH,SAAUA,QAEvB,kBAACgE,EAAA,QAAI,CAACrN,MAAO,CAAC+B,SAAS,MAAO9B,cAAe,MAAO0C,iBAAiB,GAAIhC,KAAK,IAC5E,kBAAC6P,GAAQ,CAACzE,KAAMkE,MAEZ,sCAGNQ,GAAmB9E,IAAMC,MAAK,YAA2C,IAAzChH,EAAU,EAAVA,WAAYqL,EAAS,EAATA,UAChD,OAAO,kBAAC,EAAW,CAAC1I,QAAoB,MAAX0I,GAC3B,kBAAC,GAAkB,CAACrL,WAAYA,EAAYqL,UAAWA,QAKrDS,GAA2B/E,IAAMC,MAAK,SAAC3M,GAGzC,IAH2F,IAAD,EACtFwO,EAAWkD,qBACbC,EAAW3R,EAAMyG,KACL,OAAR,EAAAkL,IAAA,EAAUlL,MAAiC,GAAzBkL,EAASvL,QAAQI,QAAU,CAAC,IAAD,EACjDmL,EAAWA,EAASlL,KAEtB,IAAMmL,EAAsB,OAAX,EAAGD,QAAQ,EAAR,EAAUvL,QAAQ,GACtC,OAAO,kBAACgI,EAAA,QAAI,CAACrN,MAAO,CAACC,cAAe,mBAEjChB,EAAMoG,QAAQnF,KAAI,SAAC4Q,EAASC,GAC3B,IAAMrL,EAAOqL,EAAS,EAAI9R,EAAMoG,QAAQI,OAAOxG,EAAMoG,QAAQ0L,EAAO,GAAGF,EACjEG,EAAiBF,EAAQE,QAAQC,MAAM,EAAG,IAC1CC,EAAOF,EAAQC,MAAM,EAAG,IACxBE,EAA2B,MAAhBL,EAAQzG,KACnB+G,OAAgBrR,GAAN2F,GAAoBoL,EAAQzG,MAAQ3E,EAAK2E,MAAQ2G,GAAWtL,EAAKsL,QAAQC,MAAM,EAAG,IAC5FI,EAASpS,EAAMqS,SAAWR,EAAQzG,KAClCkH,OAAmBxR,GAAN2F,GAAmBwL,GAAQxL,EAAKsL,QAAQC,MAAM,EAAG,IACpE,OAAIE,EACK,kBAAC9D,EAAA,QAAI,CAACjN,IAAK0Q,EAAQjL,GAAI7F,MAAO,CAACC,cAAc,MAAOyB,eAAe,SAAUR,MAAM,OAAQqD,eAAe,IAC/G,kBAAC,OAAI,KAAEuM,EAAQU,YAAY,GAAGV,UAE3B,kBAACzD,EAAA,QAAI,CAACjN,IAAK0Q,EAAQjL,IACvB0L,EAAW,kBAAClE,EAAA,QAAI,CAACrN,MAAO,CAACC,cAAc,MAAOyB,eAAe,SAAUR,MAAM,SAAS,kBAAC,OAAI,KAAEgQ,SAAoBnR,EAClH,kBAACsN,EAAA,QAAI,CAACjN,IAAK0Q,EAAQjL,GAAI7F,MAAO,CAACC,cAAc,MAAOyB,eAAe2P,EAAO,gBAAgB,aAAcnQ,MAAM,SAC3GkQ,IAAYC,EAAQ,kBAAChE,EAAA,QAAI,CAACrN,MAAO,CAACqB,UAAU,EAAGoQ,WAAW,KAAK,kBAACC,GAAA,QAAM,CAAClH,KAAMsG,EAAQtG,KAAMmH,OAAQb,EAAQzG,KAAMuH,KAAM,MAAa,kBAACvE,EAAA,QAAI,CAACrN,MAAO,CAACkB,MAAM,MACzJ,kBAACqC,EAAa,CAACG,oBAAqB,CAACxC,WAAMnB,EAAWgC,SAAS,OAAQxC,MAAO6R,EAAQN,EAAQtG,UAAKzK,EAAWmE,WAAY,CAACvD,UAAKZ,GAAYsE,UAAW,CAACI,QAAQ,IAAKN,SAAQ,GAAK6M,EAAQC,MAAM,KAE9L,kBAAC,UAAS,CAACY,aAAc,EAAO7R,MAAO,CAAC8R,UAAU,cAAeC,UAAW,CAACzR,MAAO,YAClF,kBAAC,OAAI,KAAEwQ,EAAQU,YAAY,GAAGV,UAE/BA,EAAQkB,SAAS9R,KAAI,SAACsN,EAAMyE,GAAS,OAAG,kBAACC,GAAW,CAAC9R,IAAK6R,EAAWzE,KAAMA,EAAMC,SAAUA,iB,oDCjF3FjN,UAAWC,OAAO,CAC/B0R,kBAAmB,CACjB3N,UAAW,SACXlE,MAAO,OACPgB,SAAU,IAEZ8Q,aAAc,CACZtP,YAAa,EACbC,YAAa,OACbwB,eAAgB,KATpB,I,UCAe,SAAS8N,GAASpT,GAC/B,IAAMG,EAAaC,qBACbiT,EAAW9G,mBAAQ,iBAAgB,aAAZpM,EAC3B,CAACa,cAAc,MAAOa,WAAY,SAAUY,eAAe,iBAC3D,CAACzB,cAAc,SAAUa,WAAW,gBACpC,CAAC1B,IACH,OACE,kBAAC,OAAI,CAACY,MAAO,CAAC,CAAC2B,gBAAgB,EAAGT,MAAM,QAASoR,IAC7C,kBAAC,OAAI,CAACtS,MAAO,CAAa,aAAZZ,EAAwB,CAACuB,KAAK,GAAG,CAACO,MAAM,QAAQ,CAACgB,kBAAmB,GAAIZ,SAAS,IAAKrC,EAAMoB,YAAapB,EAAMuL,MAC7H,kBAAC,OAAI,CAACxK,MAAO,CAAa,aAAZZ,EAAwB,CAACuB,KAAK,GAAG,CAACO,MAAM,QAAQ,CAACgB,kBAAmB,MAChF,kBAAC,OAAI,CAAClC,MAAO,CAACkB,MAAMjC,EAAMiC,QACvBjC,EAAMqF,YClBJ,SAASiO,GAAUtT,GAChC,OACE,kBAACoT,GAAQ,CAAC7H,KAAMvL,EAAMuL,KAAMtJ,MAAOjC,EAAMiC,MAAOb,UAAWpB,EAAMoB,WAC/D,kBAACmS,GAAA,QAAoBvT,ICmD3B,IAAMuE,GAAShD,UAAWC,OAAO,CAC/BgS,MAAM,CACJvR,MAAM,MACNjB,cAAc,MACdwE,QAAQ,IAEVX,UAAW,CACT3B,aAAc,GACdF,OAAQ,EACRf,MAAO,U,oBCxDLwR,GAAa,SAACzT,GAClB,MAAgCiM,mBAASjM,EAAM0T,YAAYtN,QAAQuN,IAAI3T,EAAM4T,KAAKhN,KAAI,WAA/EiN,EAAQ,KAAEC,EAAW,KAC5B,OAAO,kBAAC,OAAI,CAAC/S,MAAO8S,EAAS,CAAChQ,YAAY,EAAGC,YAAY,QAAQ,IAC9DiQ,4BAAiB/T,EAAM4T,MAAM,SAACA,GACzBC,GACFC,GAAY,GACZ9T,EAAM0T,YAAYtN,QAAQ4N,OAAOJ,EAAKhN,MAGtCkN,GAAY,GACZ9T,EAAM0T,YAAYtN,QAAQ6N,IAAIL,EAAKhN,U,cCXpC,IAAMsN,GAAO,CAChBC,WAAW,CACP7T,MAAMC,kBAAK,QACX6T,UCEO,SAAoB,GAAqD,IAAD,EAAnDC,EAAU,EAAVA,WAAYC,EAAK,EAALA,MACxCnU,EAAaC,qBACbmU,EAAQC,oBACRnT,EAAQoE,UAAO8O,GAAOE,KACtBC,EAAU,CACd,CAACpU,MAAM,SAAUqU,YAAY,kBAAI,kBAACC,EAAA,QAAW,QAC7C,CAACtU,MAAM,YAAaqU,YAAY,kBAAI,kBAACC,EAAA,QAAW,CAACjU,MAAO,CAAC,CAACL,MAAM,SAAUE,QAAQ,kBAAIqU,mBAAS,oBAAqB,CAACpU,KAAK,qBAE1H,CAACH,MAAM,SAAUqU,YAAY,kBAAI,kBAACC,EAAA,QAAW,SAU/C,OAPAE,2BAAgB,WAAO,IAAD,EACdC,EAA6B,GAAhB,MAALT,GAAa,OAAR,EAALA,EAAOU,aAAF,EAAL,EAAeC,KAC7BZ,EAAWa,WAAyB,YAAd/U,EAAyBuU,EAAQK,GAAO,CAC5DzU,MAAOC,kBAAK,QACZoU,YAAa,kBAAI,kBAACC,EAAA,QAAW,WAE9B,CAACP,EAAYC,EAAOnU,IACF,aAAdA,EACL,kBAACiO,EAAA,QAAI,CAACrN,MAAO,CAACW,KAAK,EAAGe,eAAe,SAAUZ,WAAW,WACxD,kBAACuM,EAAA,QAAI,CAACrN,MAAO,CAACkB,MAAM,MAAOe,OAAO,QAChC,kBAAC,WAAU,CAACjC,MAAO,CAACsB,SAAS,GAAIhB,UAAQ,aACzC,kBAAC+M,EAAA,QAAI,CAACrN,MAAO,CAACY,gBAAgB8D,UAAO3B,YAAad,OAAO,EAAGf,MAAM,UAClE,kBAACmM,EAAA,QAAI,CAACrN,MAAO,CAACW,KAAK,EAAGG,WAAW,eAE/B,kBAACwM,EAAA,QAAI,CAACtN,MAAO,CAACsB,SAAS,KAAK,KAC5B,kBAACgM,EAAA,QAAI,CAACtN,MAAO,CAACsB,SAAS,GAAIE,WAAW,MAAOlB,UAASd,kBAAK,gBAC3D,kBAAC4U,GAAA,QAAU,CAAC7U,MAAOC,kBAAK,mBAAoBa,UAAW,CAACiB,SAAS,GAAIhB,SAAQN,MAAO,CAACqU,YAAY,EAAGjS,aAAa,IAAK3C,QAAS,kBAAIqU,mBAAS,oBAAqB,CAACpU,KAAK,oBAK7K,kBAAC,oBAAgB,CAAC4U,KAAMC,cAAYC,eAAe,SAASR,MAAOS,UAAqB,OAAZ,EAAAlB,EAAMU,aAAM,EAAZ,EAAoB,MAAK,GAAIS,MAAO,SAACV,GAASV,EAAWqB,UAAU,CAACT,IAAIF,QDjChJxM,KAAK,QAEToN,WAAW,CACPrV,MAAMC,kBAAK,QACX6T,UNmFO,SAAoB,GAAqD,IAAD,IAAnDC,EAAU,EAAVA,WAAYC,EAAK,EAALA,MACxC3O,EAAkB,MAAL2O,GAAa,OAAR,EAALA,EAAOU,aAAF,EAAL,EAAepO,GAC5B5D,EAASgJ,iBAAO,GAChB4J,EAAW5J,iBAAkB,MAC5BF,EAAQ5L,oBAAR4L,KACD+J,EAAuC,OAAhC,EAAGC,kBAAwBhK,SAAK,EAA7B,EAA+BsF,MAAK,SAAAvQ,GAAC,OAAEA,EAAE+F,IAAI4O,SAAS7P,MACtE,EAA+BD,EAAwBC,GAAhDW,EAAI,EAAJA,KAAMS,EAAa,EAAbA,cACPgP,EAAazO,EAAuB3B,GACpCqQ,EAAYzJ,mBAAQ,wBAAc,MAAVwJ,GAA4C,OAAlC,EAAVA,EAAY3E,MAAK,SAAAvQ,GAAC,aAAEA,EAAEuK,OAAiB,OAAb,EAAIU,EAAKV,WAAI,EAAT,EAAWxE,aAA/B,EAAV,EAA8CA,KAAI,CAACkF,EAAMiK,IACjFE,EAA0BxO,IAChC,EAA0BwE,mBAAS,IAAG,WAA/B4E,EAAK,KAAEqF,EAAQ,KACtB,EAAkCjK,oBAAS,GAAK,WAAzCkK,EAAS,KAAEC,EAAY,KAC9B,EAAkCnK,mBAAkC,MAAK,WAAlE+E,EAAS,KAAEqF,EAAY,KACxB9B,EAAQC,oBACR8B,EAAY,WACI,IAAD,EAAfzF,EAAMrK,OAAO,IACf+P,EAAgB/U,OAAO,CAACqU,QAAQlQ,EAAYyF,KAAc,OAAV,EAACU,EAAKV,WAAI,EAAT,EAAWxE,GAAIiL,QAAQhB,IACxEqF,EAAS,IACTE,GAAa,KAGXI,EAAkB,SAAC1J,GACvBuJ,EAAarF,GAAWlE,EAAKA,EAAK,OAE9ByJ,ERvFD,WAEL,IAAM/U,EAASmG,sBAAY8O,cAAa,CACtC5O,UAAW,eAQP6O,EAAU/O,sBAAYgP,yBAAwB,CAClD9O,UAAW,SAAC+O,EAAGC,OAOjB,MAAO,CAAErV,OAAOA,EAAOyG,OAAQ+L,OAAO0C,EAAQzO,QQoEtB6O,GAExBhC,2BAAgB,WACdT,EAAWa,WAAW,CACpBP,YAAa,kBAAK,kBAACC,EAAA,QAAW,CAACjU,MAAO,CACpC,CAACL,MAAMC,kBAAK,UAAWC,QAAQ,WAAKqU,mBAAS,eAAgB,CAACjO,GAAGjB,MACjE,CAACrF,MAAMC,kBAAK,SAAUC,QAAQ,WAAKwV,GAAaC,EAAwBlO,MAAMiO,GAAWe,UAE3FzW,MAAc,MAAPuV,OAAO,EAAPA,EAAStK,SAEjB,CAAC8I,EAAYC,EAAO0B,IAEvB,IAAMgB,EAAavK,uBAAY,kBAAEmH,EAAI,EAAJA,KAAW,EAALmB,MAAK,OAA8C,kBAACtD,GAAwB,OAAKmC,EAAI,CAAEvB,QAAkB,OAAX,EAAEvG,EAAKV,WAAI,EAAT,EAAWxE,QAAO,CAACkF,IAEpJiL,EAAO,WACR1C,EAAW4C,YACV5C,EAAW6C,SAEX7C,EAAWQ,SAAS,aAAc,CAACI,IAAI,KAc7C,OAXA/N,qBAAU,WACFvB,GACJoR,MACD,IACH7P,qBAAU,WACLiP,IACAP,EAASxP,QAAgB+Q,QAC1Bf,GAAa,MAEd,CAACD,IAEG,kBAAC/H,EAAA,QAAI,CAACrN,MAAO,CAACW,KAAK,EAAGG,WAAW,WACpC,kBAACuM,EAAA,QAAI,CAACrN,MAAO,CAACkB,MAAM,OAAQP,KAAK,IAC/B,kBAAC,WAAQ,CACPX,MAAO,CAACkB,MAAM,OAAQjB,cAAe,kBACrCoW,sBAAuB,CAAC5R,QAAQ,GAAI6R,SAAS,EAAGrW,cAAe,kBAC/DsF,KAAU,MAAJA,OAAI,EAAJA,EAAMC,MACZyQ,WAAYA,EACZM,SAAU,SAAClK,GACLA,EAAEmK,YAAYC,cAAcC,EAAIrK,EAAEmK,YAAYG,YAAY1U,OAASA,EAAOoD,QAAU,GACtFW,KAEJ4Q,SAAU,SAACC,GAAK5U,EAAOoD,QAAUwR,EAAEL,YAAYM,OAAO7U,WAI1D,kBAAC8U,EAAA,KAAU,CAAC/W,MAAO,CAACkB,MAAM,SACxB,kBAACuP,GAAgB,CAAC7L,WAAYA,EAAYqL,UAAWA,IACrD,kBAAC5C,EAAA,QAAI,CAACrN,MAAO,CAACgX,OAAO,EAAG9V,MAAM,OAAQJ,WAAW,WAC/C,kBAACuM,EAAA,QAAI,CAACrN,MAAO,CAACkB,MAAM,OAAOjB,cAAc,MAAOc,WAAW,GAAIC,cAAc,GAAIkB,kBAAkB,KACjG,kBAAC,YAAS,CAAC+U,IAAKpC,EAAU/E,MAAOA,EAAOC,aAAcoF,EAAUnV,MAAO,CACrEW,KAAK,EAAGmC,YAAY,EAAGb,OAAO,GAAIG,aAAa,EAAGW,YAAY2B,UAAO3B,YAAanC,gBAAgB8D,UAAO8O,GAAO0D,WAAY5W,MAAMoE,UAAO8O,GAAOE,MAC/IyD,gBAAiB5B,EAAW6B,cAAc,IAC7C,kBAACC,EAAA,QAAY,CAAC9X,MAAO,eAAME,QAAS8V,IACpC,kBAAC8B,EAAA,QAAY,CAAC9X,MAAO,eAAME,QAAS,kBAAIgW,EAAgB,aACxD,kBAAC4B,EAAA,QAAY,CAAC9X,MAAO,qBAAOE,QAAS,kBAAIgW,EAAgB,mBMlK7DjO,KAAK,QAOT8P,aAAa,CACT/X,MAAM,UACN8T,ULzBO,SAAsB,GAGnC,OAFU,EAAVC,WAEO,kBAACjG,EAAA,QAAI,CAACrN,MAAO,CAACyE,QAAQ,OKuBvB+C,KAAK,QAIA+P,GAAQ,CACjBC,YAAY,CACRhQ,KAAM,QACNjI,MAAOC,kBAAK,WACZ6T,UhB3BO,SAAqB,GAEA,IADlCC,EAAU,EAAVA,WAAYC,EAAK,EAALA,MAEZ,EAAgCrI,mBAAS,IAAG,WAArCuM,EAAQ,KAAEC,EAAW,KAC5B,EAAgCxM,mBAAS,IAAG,WAArCyM,EAAQ,KAAEC,EAAW,KACrB1Y,EAAYC,oBAAZD,SACD2Y,EAAS,WAAH,OAAO3Y,EAAS,CAACQ,KAAK,gBAAiB+X,WAAUE,cAO7D,OANA5D,2BAAgB,WACdT,EAAWa,WAAW,CACpBP,iBAAa7T,MAEd,CAACuT,EAAYC,IAGd,kBAAClG,EAAA,QAAI,CAACrN,MAAOO,EAAOkB,eAClB,kBAAC4L,EAAA,QAAI,CAACrN,MAAOO,EAAOuB,MAClB,kBAAC+N,EAAA,QAAS,CACR7P,MAAOO,EAAOyB,WACd8N,MAAO2H,EACPK,YAAatY,kBAAK,YAClBuQ,aAAc,SAAC2D,GAAI,OAAKgE,EAAYhE,IACpCqE,eAAgB,OAChBC,aAAc,gBACdb,gBAAiBU,IAEnB,kBAAChI,EAAA,QAAS,CACR7P,MAAOO,EAAOyB,WACd8N,MAAO6H,EACPG,YAAatY,kBAAK,YAClByY,iBAAe,EACflI,aAAc,SAAC2D,GAAI,OAAKkE,EAAYlE,IACpCyD,gBAAiBU,IAEnB,kBAACK,EAAA,QAAgB,CAACzY,QAASoY,GACzB,kBAACxK,EAAA,QAAI,CAACrN,MAAOO,EAAO8B,QAClB,kBAACiL,EAAA,QAAI,CAACtN,MAAOO,EAAO+B,cAAe9C,kBAAK,cAG5C,kBAAC0Y,EAAA,QAAgB,CAACzY,QAAS,kBAAMP,EAAS,CAACQ,KAAK,kBAC9C,kBAAC4N,EAAA,QAAI,CAACtN,MAAOO,EAAO4C,mBACjB3D,kBAAK,uBAIZ,kBAAC6N,EAAA,QAAI,CAACrN,MAAOO,EAAOgC,cAClB,kBAAC8K,EAAA,QAAI,CAACrN,MAAOO,EAAOiC,wBAClB,kBAAC6K,EAAA,QAAI,CAACrN,MAAOO,EAAOkC,8BACpB,kBAAC6K,EAAA,QAAI,CAACtN,MAAOO,EAAOmC,6BAA8B,KAClD,kBAAC2K,EAAA,QAAI,CAACrN,MAAOO,EAAOkC,+BAEtB,kBAAC4K,EAAA,QAAI,CAACrN,MAAOO,EAAOqC,4BgBnBfuV,GAAQ,CAMjBC,kBAAkB,CACd7Y,MAAMC,kBAAK,WACX6T,UFrCO,SAA2B,GAA4D,IAAD,IAA1DC,EAAU,EAAVA,WAAYC,EAAK,EAALA,MAC/C1N,EAAU,MAAL0N,GAAa,OAAR,EAALA,EAAOU,aAAF,EAAL,EAAepO,GACpBnG,EAAY,MAAL6T,GAAa,OAAR,EAALA,EAAOU,aAAF,EAAL,EAAevU,KACrBqL,EAAQ5L,oBAAR4L,KACDsN,EAActD,kBAAwBhK,GACtCuN,EAAkBC,wCAClBzD,EAAqB,MAAXuD,OAAW,EAAXA,EAAahI,MAAK,SAAAvQ,GAAC,OAAEA,EAAE+F,IAAIA,KAC3C,EAAwBqF,mBAAS,IAAG,WAA7BV,EAAI,KAAEgO,EAAO,KACpB,EAAsCtN,mBAAS,IAAG,WAA3CgD,EAAW,KAAEuK,EAAc,KAclC,OANAtS,qBAAU,WACJ2O,IACF0D,EAAQ1D,EAAQtK,MAChBiO,GAAsB,MAAP3D,OAAO,EAAPA,EAAS5G,cAAe,OAExC,CAAC4G,IACG,kBAACvR,EAAa,CAACG,oBAAqB,CAACN,UAAU,WACpD,kBAAC,OAAI,CAACpD,MAAO,CAAC0B,eAAe,iBAC7B,kBAAC,OAAI,CAAC1B,MAAO,CAACsB,SAAS,KAAM9B,kBAAK,aAElC,kBAAC,OAAI,CAACQ,MAAOwD,GAAOM,UAAWC,WAAW,OAAOC,UAAU,2BAC3D,kBAAC,OAAI,CAAChE,MAAO,CAACkB,MAAM,SAClB,kBAACqR,GAAS,CAAC/H,KAAMhL,kBAAK,gBAAiBsQ,MAAOtF,EAAM2K,SAAUqD,EAAStX,MAAO,QAC9E,kBAACqR,GAAS,CAAC/H,KAAMhL,kBAAK,eAAgBsQ,MAAO5B,EAAaiH,SAAUsD,EAAgBC,WAAS,EAACxX,MAAO,SAEvG,kBAAC,OAAI,CAAClB,MAAO,CAACkB,MAAM,OAAQjB,cAAc,MAAOyB,eAAe,aAC9D,kBAAC2V,EAAA,QAAY,CAAC9X,MAAOC,kBAAK,QAASC,QAAS,WAAK,IAAD,EAC9C,GAAO,MAAJsL,GAAU,OAAN,EAAJA,EAAMV,OAAN,EAAYxE,IAAMkF,EAAK4N,QAAQ,CAAC,IAAD,EAC1BC,EAAqB,CAAC/S,KAAI2E,OAAM0D,cAAaxO,OAAMmZ,MAAU,MAAJ9N,GAAU,OAAN,EAAJA,EAAMV,WAAF,EAAJ,EAAYxE,GAAIiT,MAAM/N,EAAK4N,UACzF9S,EAAGyS,EAAgBS,OAAOH,GAAYN,EAAgB7X,OAAOmY,IAAaxT,MAAK,SAAAtF,GAAC,OAAEgU,mBAAS,OAAQ,CAClGkF,OAAiB,aAAVlZ,EAAEJ,KAAoB,kBAAkB,cAC/CuU,OAAO,CAACpO,GAAG/F,EAAE+F,aAInB,kBAACwR,EAAA,QAAY,CAAC9X,MAAOC,kBAAK,UAAWQ,MAAO,CAAC2C,iBAAiB,GAAIlD,QAhCzD,WACR6T,EAAW4C,YACV5C,EAAW6C,SAEX7C,EAAW2F,QAAQ,cEyBnBzR,KAAK,iBAET0R,aAAa,CACT3Z,MAAMC,kBAAK,UACX6T,UD1BO,SAAsB,GAAuD,IAAD,EAArDC,EAAU,EAAVA,WAAYC,EAAK,EAALA,MAC1C1N,EAAU,MAAL0N,GAAa,OAAR,EAALA,EAAOU,aAAF,EAAL,EAAepO,GACnBkF,EAAQ5L,oBAAR4L,KACDoO,EAAWC,mBAAsBrO,GACjCiK,EAAazO,EAAuBV,GACpCqP,EAA0BxO,IAC1BiM,EAAc1H,iBAAoB,IAAIoO,KACtC9T,EAAOiG,mBAAQ,WACnB,IAAM8N,EAAY,IAAID,IAAc,MAAVrE,OAAU,EAAVA,EAAY9U,KAAI,SAAAJ,GAAC,OAAEA,EAAEuK,SAC/C,OAAe,MAAR8O,OAAQ,EAARA,EAAUtZ,QAAO,SAAAC,GAAC,OAAGwZ,EAAU1G,IAAI9S,EAAE+F,SAC3C,CAACsT,EAAUnE,IAGRgB,EAAO,WACR1C,EAAW4C,YACZ5C,EAAW6C,SACJtQ,EACPiO,mBAAS,aAAc,CAACjO,OAExByN,EAAW2F,QAAQ,SAGvB,OAAO,kBAAC1V,EAAa,CAACG,oBAAqB,CAACN,UAAU,WACpD,kBAAC,OAAI,CAACpD,MAAO,CAACY,gBAAgB,QAAS,MAAS,QAC3C,MAAJ2E,OAAI,EAAJA,EAAMrF,KAAI,SAAC2S,EAAMmB,GAAK,OAAG,kBAAC,GAAU,CAAC5T,IAAK4T,EAAOnB,KAAMA,EAAMF,YAAaA,QAE3E,kBAAC,OAAI,CAAC3S,MAAO,CAAC,CAACkB,MAAM,MAAOjB,cAAc,MAAOwE,QAAQ,IAAM,CAAC/C,eAAe,cAC7E,kBAAC2V,EAAA,QAAY,CAAC9X,MAAOC,kBAAK,UAAWC,QAAS,WAC5CyV,EAAwBvO,OAAO,CAC7B/B,WAAWiB,EACX0T,SAAS,IAAI5G,EAAYtN,WAE3B2Q,OAEF,kBAACqB,EAAA,QAAY,CAAC9X,MAAOC,kBAAK,UAAWC,QAASuW,OCP5CxO,KAAK,gBAETgS,cAAc,CACVja,MAAMC,kBAAK,WACX6T,UEjDO,SAAuB,GAEA,IAAD,EADnCC,EAAU,EAAVA,WAAYC,EAAK,EAALA,MAEN1N,EAAU,MAAL0N,GAAa,OAAR,EAALA,EAAOU,aAAF,EAAL,EAAepO,GACnBkF,EAAQ5L,oBAAR4L,KACDoO,EAAWC,mBAAsBrO,GACjCV,EAAe,MAAR8O,OAAQ,EAARA,EAAU9I,MAAK,SAAAvQ,GAAC,OAAEA,EAAE+F,IAAIA,KAC/ByS,EAAkBC,wCAYxB,OAJApS,qBAAU,WACFN,GAAMwE,IAAS8O,IAPlB7F,EAAW4C,YACV5C,EAAW6C,SAEX7C,EAAW2F,QAAQ,WAMtB,CAACE,IACG9O,EAAK,kBAAC,OAAI,CAACrK,MAAO,CAACyE,QAAQ,KAEhC,kBAACgV,GAAA,QAAO,CAAChC,SAAUpN,EAAKoN,SAAUjN,KAAMH,EAAKG,KAAMmH,OAAQtH,EAAKxE,KAChE,kBAACwR,EAAA,QAAY,CAAC9X,MAAOC,kBAAK,oBAAqBC,QAAS,WAAK,IAAD,EAC1D,GAAO,MAAJsL,GAAU,OAAN,EAAJA,EAAMV,OAAN,EAAYxE,IAAMkF,EAAK4N,QAAQ,CAAC,IAAD,EAC1BC,EAAqB,CAACpO,KAAQO,EAAKV,KAAKG,KAAI,KAAKH,EAAKG,KAAQ9K,KAAK,YAAamZ,MAAU,MAAJ9N,GAAU,OAAN,EAAJA,EAAMV,WAAF,EAAJ,EAAYxE,GAAIiT,MAAM/N,EAAK4N,SACvHL,EAAgB7X,OAAOmY,GAAYxT,MAAK,SAAAtF,GAAC,OAAEgU,mBAAS,OAAQ,CAACkF,OAAO,kBAAmB/E,OAAQ,CAACpO,GAAG/F,EAAE+F,cAGnG,sCFsBF2B,KAAK,mB,4NGrDPL,EAAmBC,wBAAoC,CAACnB,qBAAgBlG,EAAWsH,gBAAgB,eACzG,EAAyB,yBAAasC,MAAM,OAAM,WAA3C+P,EAAM,KAAEC,EAAM,KAERC,EAA4B,SAAH,GAAuJ,IAAlJtV,EAAQ,EAARA,SAAUkD,EAAI,EAAJA,KAAMC,EAAO,EAAPA,QAASC,EAAa,EAAbA,cAClE,EAA0BwD,mBAAsB,MAAK,WAA9C2O,EAAK,KAAEC,EAAQ,KACtB,EAAgC5O,mBAAkBxD,GAA0C,UAAzBqS,UAASC,cAAyB,WAA9FC,EAAQ,KAAEC,EAAW,KAC5B,EAA6CC,KAAwB,SAART,EAAgB,MAAM,MAAI,MAAMC,EAAM,IAAInS,EAAO,CAC5G4S,gBAAiB,SAACC,GAAU,OAAK,GACjCC,UAAWT,EAAM,CAAC,gBAAkBA,QAAO9Z,EAC3Cwa,OAAQ,SAAClO,GAAKtD,QAAQC,IAAI,gCAAgCxB,EAAI,MAC9DgT,QAAS,SAACnO,GAAMtD,QAAQC,IAAI,+BAA+BxB,EAAI,OAC9DyS,GAAmB,MAAPJ,GALP5T,EAAe,EAAfA,gBAAiBoB,EAAe,EAAfA,gBAYzB,OANAlB,qBAAU,WACRsU,UAAaC,QAAQ,iBAAiBtV,KAAK0U,GAC3C,IAAMa,EAAW,SAACC,GAAwB,OAAGV,EAAYxS,GAA8B,UAAbkT,IAE1E,OADAb,UAAS9M,iBAAiB,SAAU0N,GAC7B,kBAAIZ,UAASc,oBAAoB,SAAUF,MACjD,IACY,MAAPd,EAAa,oCAAGvV,GAAa,kBAACmD,EAAQqT,SAAQ,CAAChL,MAAO,CAAC7J,kBAAiBoB,oBAC3E/C,IAIMgD,EAAoBqE,IAAMC,MAAK,YAAqE,IAAnErE,EAAO,EAAPA,QAASjD,EAAQ,EAARA,SACrD,OAAOiD,EAAQ,oCAAGjD,GAAa,kBAACsV,EAAyB,CAACpS,KAAM,gBAAiBC,QAASN,GACvF7C,MAIU,qBAEb,OADyBqD,qBAAWR,K,4FClCvB,mBAAClI,GACZ,OAAO,kBAAC,UAAY,OAAKA,EAAK,CAAEe,MAAO,CAACwD,EAAOxD,MAAOf,EAAMe,WAGhE,IAAMwD,EAAShD,UAAWC,OAAO,CAC7BT,MAAM,CACFoC,aAAa,EACbxB,gBAAiB,cACjBkC,YAAY,M,qNCVPiY,EAAkB,SAAOC,GAAc,kGAC5BC,UAAMC,IAAI,wCAAwCF,IAAU,OAAO,OAAjFzV,EAAI,OAAyEA,KAAI,kBAChFA,EAAKE,OAAOF,EAAK,QAAGxF,GAAS,6DAG3Bob,EAAmB,SAAMC,GAAyB,4FAC7CH,UAAMI,KAAK,yBAA0BD,IAAa,uCAAE7V,MAAI,6DAG7D+V,EAAkB,SAAMF,GAAyB,4FAC5CH,UAAMM,IAAI,yBAAyBH,EAAavV,GAAE,IAAKuV,IAAa,uCAAE7V,MAAI,8D,qECT7E,qBAEX,OADqBiW,MACA/N,YAA6B,WAAfgO,UAASC,IAAkC,OAAfD,UAASC,K,2ICO7D,SAASC,EAAW1c,GACjC,MAA0B0M,YAAe,GAAM,WAAjCiQ,GAAF,KAAU,MACtB,EAA0BjQ,YAAe,GAAM,WAAxCkQ,EAAK,KAAEC,EAAQ,KACtB,OACE,gBAAC,UAAS,CACR9b,MAAO,CAACwD,EAAOC,eAAgBxE,EAAMyE,oBAAsBmY,EAAO,CAACjb,gBAAgB,oBAAoB,IACvGmb,UAAW,WAAKD,GAAS,IACzBE,WAAY,WAAKF,GAAS,GAAoB,MAAb7c,EAAMQ,SAANR,EAAMQ,WAEtCwc,UAAW,kBAAIL,GAAS,IACxBM,WAAY,kBAAIN,GAAS,KAExB,gBAAC,OAAI,CAAC5b,MAAO,CAACwD,EAAOG,UAAW1E,EAAM2E,iBAClC,gBAAC,OAAI,CAAC5D,MAAO,CAACwD,EAAOY,SAAUnF,EAAMoF,YACjC,gCAAGpF,EAAMqF,aAOzB,IAAMd,EAAShD,UAAWC,OAAO,CAC/BgD,eAAe,CACbvC,MAAM,OACNa,SAAS,KACTjB,WAAW,WAEb6C,UAAW,CACPhB,iBAAiB,GACjB/B,gBAAgB,eAElBwD,SAAS,CACPlD,MAAO,OACPuD,QAAS,GACT0X,UAAW,GACXrb,WAAY,SACZY,eAAgB,SAChB0a,kBAAkB,EAClBrZ,YAAY2B,UAAO3B,YACnBnC,gBAAgB,kB,oHChDP,SAASwY,EAAsBrO,GAE5C,OADiBvE,mBAAS,CAAC,qBAA0B,MAAJuE,OAAI,EAAJA,EAAM4N,UAAW,oBAAA3T,EAAAC,OAAA,mDAAa,MAAJ8F,MAAM4N,QAAO,0CAAQ0D,gCAA0B,MAAJtR,OAAI,EAAJA,EAAM4N,UAAQ,8CAAE,GAAE,qGAAhIpT,O,qECDJ+W,EAAgB,SAACC,EAAcC,EAAaC,GAC9C,OAAOC,KAAKC,MAAOJ,GAAQE,EAAMD,GAAQA,IAY9B,WAACvd,GACZ,IAAM2B,EAVU,SAACiJ,EAAa+S,GAE9B,IADA,IAAIL,EAAOK,GAAY,EACd9S,EAAI,EAAGA,EAAID,EAAIpE,OAAQqE,IAC9ByS,EAAO1S,EAAIgT,WAAW/S,KAAOyS,GAAQ,GAAKA,GAG5C,OADAA,EAAOG,KAAKI,IAAIP,GACV,OAAQD,EAAcC,EAAM,EAAG,KAAI,KAAKD,EAAcC,EAAM,EAAG,KAAI,MAAMD,EAAcC,EAAM,GAAI,IAAG,KAIlFQ,CAAY9d,EAAMuL,KAAMvL,EAAM0S,QACtD,OAAO,gBAAC,SAAOrE,KAAI,CAACtN,MAAO,CAACY,mBAAkBgR,KAAM3S,EAAM2S,KAAM9G,MAAO7L,EAAMuL,KAAKb,MAAM,KAAKzJ,KAAI,SAAAJ,GAAC,OAAEA,EAAE,MAAImK,OAAO+S,iBCdtG,mBAAC/d,GAEZ,OAAO,kBAACyS,EAAWzS,K,qxBCCvB,IAAMge,EAAY,SAAChe,GAA+C,OAAG,kBAAC,OAAI,CAACe,MAAO,CAACW,KAAK,IACnF1B,EAAMsG,KAAKrF,KAAI,SAAC2S,EAAMmB,GAAK,OAAG,kBAAC2H,EAAA,QAAU,CAACvb,IAAK4T,EAAOpQ,eAAgB,CAACjB,iBAAiB,GAAI0B,UAAW,CAACvD,WAAW,cAAerB,QAASoT,EAAKpT,SAC7I,kBAAC,OAAI,CAACO,MAAO,CAACyR,WAAW,KAAMoB,EAAKrI,YAK7B,GACX0S,UAAU,WACN,IAAOnS,EAAQ5L,oBAAR4L,KACDsN,EAActD,kBAAwBhK,GAC5C,OAAO,kBAAC,EAAS,CAACxF,MAAO8S,GAAe,IAAInY,KAAI,SAAA2S,GAAI,cAAOA,GAAI,IAAEpT,QAAQ,kBAAIqU,mBAAS,aAAc,CAACjO,GAAGgN,EAAKhN,e,iCCgBxGsX,EAAgB,kBAACC,EAAA,QAAQ,CAACxL,KAAM,GAAI5R,MAAO,CAAEmC,cAAe,GAAKqI,KAAK,Y,QC3BtE+J,EAAa,CACtB8I,OAAO,CACH9d,MAAMC,kBAAK,UACX6T,UAAUiK,UACVC,KAAKC,cAETC,OAAO,CACHle,MAAMC,kBAAK,aACX6T,UDRO,WACX,IAAOtI,EAAQ5L,oBAAR4L,KACDsN,EAActD,kBAAwBhK,GACtC2S,GAAS,IAAItO,MAAQuO,cAAc1M,MAAM,EAAG,IAClD,OAAO,kBAAC5D,EAAA,QAAI,CAACrN,MAAO,CAACW,KAAK,EAAGC,gBAAgB,UAC7B,MAAXyX,OAAW,EAAXA,EAAanY,KAAI,SAAC2S,EAAMmB,GAAS,IAAD,MACvB9C,EAAwB,OAApB,EAAG2B,EAAK+K,mBAAY,EAAjB,EAAmB5M,QAAQC,MAAM,EAAE,IAChD,OAAO,kBAAC0K,EAAA,QAAU,CAACvb,IAAK4T,EAAO3P,UAAW,CAACpE,cAAc,MAAOyB,eAAe,iBAAkBjC,QAAS,kBAAIqU,mBAAS,aAAc,CAACjO,GAAGgN,EAAKhN,OAC1I,kBAACwH,EAAA,QAAI,CAACrN,MAAO,CAACC,cAAc,QACxB,kBAAC4d,EAAA,QAAW,CAACjM,KAAM,GAAI5R,MAAO,CAAEmC,cAAe,EAAG2b,YAAY,IAAMtT,KAAK,UACzE,kBAAC6C,EAAA,QAAI,KACD,kBAACA,EAAA,QAAI,CAACrN,MAAO,CAACC,cAAc,QACxB,kBAACqN,EAAA,QAAI,CAACtN,MAAO,CAACsB,SAAS,KAAMuR,EAAKrI,MAClC,kBAAC8C,EAAA,QAAI,CAACtN,MAAO,CAACsB,SAAS,GAAIyc,QAAS,GAAK1J,YAAY,IAAKxB,EAAKmL,eAEnE,kBAAC1Q,EAAA,QAAI,CAACtN,MAAO,CAACsB,SAAS,GAAIyc,QAAS,KAAwB,OAAnB,EAAElL,EAAK+K,mBAAY,EAAjB,EAAmB9M,WAGtE,kBAACzD,EAAA,QAAI,KACD,kBAACC,EAAA,QAAI,CAACtN,MAAO,CAACsB,SAAS,GAAIyc,QAAS,GAAKvZ,UAAU,UAAW0M,GAAMwM,EAAuB,OAAlB,EAAC7K,EAAK+K,mBAAY,EAAjB,EAAmB5M,QAAQC,MAAM,GAAG,IAAIC,GAClH,kBAAC5D,EAAA,QAAI,CAACtN,MAAO,CAACsB,SAAS,GAAIkD,UAAU,UAAWqO,EAAKoL,aAAapL,EAAKoL,aAAa,YCXhGV,KAAKJ,IAcAe,EAAa,CACtBT,OAAO,CACHle,MAAMC,kBAAK,aACX6T,UAAU4J,EAAUC,UACpBK,KAAKJ,K,iCCnCb,0LAUanK,EAAmB,SAACH,EAAqBpT,GAAoC,OACtF,kBAAC,UAAU,CAACW,IAAKyS,EAAKhN,GAAIxB,UAAW,CAACzD,gBAAgB,QAASX,cAAc,MAAOyB,eAAe,cAAejC,QAASA,EAAQ,kBAAIA,EAAQoT,SAAM9S,GACjJ,kBAAC,UAAI,CAACC,MAAO,CAACqB,UAAU,EAAGyc,YAAY,KAAK,kBAAC,UAAM,CAACtT,KAAMqI,EAAKrI,KAAMmH,OAAQkB,EAAKhN,GAAI+L,KAAM,MAC5F,kBAAC,UAAI,CAAC5R,MAAO,CAACsB,SAAS,GAAIE,WAAW,QAASqR,EAAKrI,QAI7C,qBACX,IAAOO,EAAQ5L,oBAAR4L,KACDoO,EAAWC,kBAAsBrO,GACvC,OAAO,kBAAC,UAAI,CAAC/K,MAAO,CAACW,KAAK,EAAGC,gBAAgB,UACxCuY,GAAYA,EAASjZ,KAAI,SAAA2S,GAAI,OAAEG,EAAiBH,GAAM,SAACA,GAAI,OAAGiB,mBAAS,gBAAiB,CAACjO,GAAGgN,EAAKhN,aAInG,IAAM2X,EAAa,kBAAC,UAAsB,CAAC5L,KAAM,GAAI5R,MAAO,CAAEmC,cAAe,GAAKqI,KAAK,a,kQCbjF2T,EAAmB,SAAClf,GAC/B,MAA0B0M,IAAMT,SAASjM,EAAM+U,OAAS,GAAE,WAAnDA,EAAK,KAAEoK,EAAQ,KAChB7R,EAAUD,OAAOC,QAAQtN,EAAMqV,MAC/BI,EAAQzV,EAAMyV,MACd2J,EAAQ/R,OAAOgS,OAAM,MAAbhS,OAAM,CAAQ,IAAE,WAAKC,EAAQrM,KAAI,2BAAEC,EAAC,KAAEL,EAAC,mBAAOK,EAAGL,EAAEyd,YACjE,OAAO,kBAAC,UAAO,CACbgB,aAAc,SAACtf,GACb,OAAO,kBAAC,SAAM,OACRA,EAAK,CACTuf,eAAgB,CAAE5d,gBAAiB,WACnCZ,MAAO,CAAEY,gBAAgB,SACzB6d,YAAa,QACbC,cAAe,QACfC,WAAY,SAACC,GAAK,OAAGP,EAAMO,EAAMrL,MAAMnT,MACvCye,WAAY,SAACD,GAAK,OAAQ,MAALlK,OAAK,EAALA,EAAQnI,EAAQuS,WAAU,2BAAE3e,EAAC,KAAG,YAAIA,GAAKye,EAAMrL,MAAMnT,aAG9E2e,gBAAiB,CAAE/K,QAAOgL,OAAQzS,EAAQrM,KAAI,2BAAM,MAAK,CAACE,IAAT,KAAgBb,MAAb,KAAqBA,WACzE0f,cAAeb,EACfc,YAAaC,mBAAS7S,OAAOgS,OAAM,MAAbhS,OAAM,CAAQ,IAAE,WAAKC,EAAQrM,KAAI,2BAAEC,EAAC,KAAEL,EAAC,mBAAOK,EAAGL,EAAEuT,kBACzEmB,eAAgBvV,EAAMuV,kBAIpB4K,EAAY,CAChB,kBAAItL,mBAAS,oBAAqB,CAACpU,KAAK,eACxC,kBAAIoU,mBAAS,oBAAqB,CAACpU,KAAK,YAG3B,sBAAkC,IAAhC2K,EAAI,EAAJA,KACPgV,EAAWC,oBAAXD,OACFjgB,EAAaC,oBACnB,EAA0B6L,mBAAS,GAAE,WAA9B8I,EAAK,KAAEoK,EAAQ,KACtB,MAAmB,aAAZhf,EAAwB,kBAAC,UAAI,CAChCY,MAAO,CACLwD,EAAO+b,OACP,CACE3e,gBAAiBye,EAAOG,KACxBC,eAAgBJ,EAAOK,SAI3BC,cAAgC,QAEhC,kBAAC,UAAO,CAAChO,OAAQtH,EAAKxE,GAAI4R,SAAUpN,EAAKoN,SAAUjN,KAAMH,EAAKG,OAC9D,kBAAC,UAAI,CAACxK,MAAO,CAACC,cAAc,gBACxB,kBAAC,UAAU,CAACV,MAAM,IAAIc,UAAW,CAACiB,SAAS,IAAKtB,MAAO,CAACoC,aAAa,IAAK3C,QAAS2f,EAAUpL,MAEjG,kBAAC,UAAI,CAAC4L,kBAAkB,UAAU5f,MAAOwD,EAAOsN,SAC7CxE,OAAO2C,KAAKiP,cAAYzY,OAAO,EAC9B,kBAAC0Y,EAAgB,CAAC7J,KAAM4J,aAAY1J,eAAgB,MAAOE,MAAO0J,IAClE,kBAAC,UAAI,CAACpe,MAAO,CAACsQ,eAAe,EAAG3P,KAAK,EAAGoC,YAAYsc,EAAOK,SACxDpT,OAAOuT,OAAO3B,cAAYhe,KAAI,SAAA4f,GAAY,IAAMC,EAAMD,EAAUzM,UAAW,OAAO,kBAAC0M,EAAG,CAAC3f,IAAK0f,EAAUvgB,cAIvG,kBAAC,UAAI,CAACS,MAAO,CAACkB,MAAM,MAKhC,IAAMsC,EAAShD,UAAWC,OAAO,CAC7B8e,OAAQ,CACNre,MAAM,IACN8e,UAAW,EACXC,iBAAiB,EACjBld,YAAY2B,UAAO3B,aAErB+N,QAAS,CACPnQ,KAAM,EACNV,cAAe,OAEjBiU,IAAK,CACDvT,KAAM,EACNG,WAAY,UAEhBgK,MAAO,CACHtG,UAAW,SACX5D,gBAAiB,kB,uJChFV,mBAAC3B,GAAsB,IAAD,EACjC,EAAwB0M,IAAMT,WAAkB,WAAzCV,EAAI,KAAEgO,EAAO,KACpB,EAA2BrZ,oBAAnB4L,EAAI,EAAJA,KAAM7L,EAAQ,EAARA,SACRmS,GAAkB,OAAT,EAAAtG,EAAKV,WAAI,EAAT,EAAWxE,KAAM5G,EAAM0S,OAChCgJ,EAAW,WACbtJ,GAAU6O,oBAAU,CAACra,GAAG5G,EAAM0S,OAAQnH,KAAKA,GAAQ,KAAK2V,SAAQ,WAC5D3H,OAAQzY,GACRb,EAAS,CAACQ,KAAK,gBAIvB,OADAqJ,QAAQC,IAAI/J,GACL,kBAAC,UAAI,CAACe,MAAO,CAACkB,MAAM,OAAQe,OAAO,IAAKP,eAAe,eAAgBZ,WAAW,WACrF,kBAAC,UAAM,OAAK7B,EAAK,CAAE2S,KAAM,WACjB7R,IAAPyK,EACG,kBAAC,UAAU,CAACnK,UAAW,CAACmB,WAAW,OAAQF,SAAS,IAAK7B,QAAS,kBAAI4R,GAAUmH,EAAQvZ,EAAMuL,OAAOjL,MAAON,EAAMuL,KAAM4V,UAAW/O,IACnI,kBAAC,UAAe,CAACvB,MAAOtF,EAAMxK,MAAO,CAACwE,UAAU,UAAW2Q,SAAUqD,EAAS6H,OAAQ1F,EAAU2F,aAAc3F,IAClH,kBAAC,OAAI,CAAC3a,MAAO,CAACwB,WAAW,SAAUF,SAAS,KAAMrC,EAAMwY,a,oGCpBjD,mBAACxY,GACZ,MAA0CiM,qBAAkB,WAArDqV,EAAa,KAAEC,EAAgB,KAChCrE,EAAYld,EAAMkd,WAAa,GAC/B3I,EAAQC,oBACd,OAAO,kBAAC,UAAS,CAACzT,MAAO,CAAC,CAClB+C,YAAY,UACZzB,SAAS,GACTwB,YAAY,EACZV,aAAa,EACbF,kBAAkB,GAClBP,gBAAgB,EAChBf,gBAAgB8D,UAAO8O,GAAO0D,WAC9B5W,MAAMoE,UAAO8O,GAAOE,KACpBzR,OAAOhD,EAAMyZ,UAAU6H,EAAcpE,GACtCld,EAAMe,OACTygB,UAAWxhB,EAAMmhB,SACjBtQ,MAAO7Q,EAAM6Q,MACbC,aAAc9Q,EAAMkW,SACpBuL,oBAAqBzhB,EAAMyZ,UAAU,SAACrM,GAAC,OAAKmU,EAAiB9D,KAAKD,IAAIpQ,EAAEmK,YAAYG,YAAY1U,OAAQka,GAAa,SAAGpc,EACxHsgB,OAAQ,kBAAgB,MAAZphB,EAAMohB,YAAM,EAAZphB,EAAMohB,OAASphB,EAAM6Q,QACjCwQ,aAAc,kBAAsB,MAAlBrhB,EAAMqhB,kBAAY,EAAlBrhB,EAAMqhB,aAAerhB,EAAM6Q,QAC7C4I,UAAWzZ,EAAMyZ,c,oTChBlB,SAASiI,EACd1hB,EACA2hB,GAEA,IAAMpN,EAAQC,oBACRoN,EAAiB5hB,EAAMuU,GAE7B,OAAIqN,GAGKnc,UAAO8O,GAAOoN,GAYlB,SAAStT,EAAKrO,GACnB,IAAQe,EAAgDf,EAAhDe,MAAO+D,EAAyC9E,EAAzC8E,WAAYC,EAA6B/E,EAA7B+E,UAAc8c,EAAU,IAAK7hB,EAAK,GACvDqB,EAAQqgB,EAAc,CAAEI,MAAOhd,EAAYid,KAAMhd,GAAa,QAEpE,OAAO,gBAAC,UAAW,KAAChE,MAAO,CAAC,CAAEM,SAASN,IAAY8gB,IAG9C,SAASzT,EAAKpO,GACnB,IAAQe,EAAgDf,EAAhDe,MAAO+D,EAAyC9E,EAAzC8E,WAAYC,EAA6B/E,EAA7B+E,UAAc8c,EAAU,IAAK7hB,EAAK,GACvD2B,EAAkB+f,EAAc,CAAEI,MAAOhd,EAAYid,KAAMhd,GAAa,cAE9E,OAAO,gBAAC,UAAW,KAAChE,MAAO,CAAC,CAAEY,mBAAmBZ,IAAY8gB,M,+ECxCzDG,EAAe,CACnBC,GAAIC,EAAQ,MAQd,EAC2D,OAD3D,EACEC,sBAA+B9U,OAAO2C,KAAKgS,KAAc,EAH1C,CAAEI,YAAa,KAAMC,OAAO,GAErCD,EAAW,EAAXA,YAAaC,EAAK,EAALA,MAIrBC,UAAYC,SAASF,GAGrB,IAAMG,EAAOC,qBACX,CACEC,cAAe,KACfC,OAAQP,EACRQ,SAAUZ,EAAaI,IAEzBS,6BAKa,mBAAC1hB,EAAa6T,GAA0B,OACrDwN,EACGM,cAAc,CAAElc,GAAIzF,EAAK4hB,eAAgB5hB,GAAO6T,GAChDgO,a,+oBCtBL3V,OAAOuT,OAAO1H,SAAOvO,SAAQ,SAAA9J,GAAC,OAAEA,EAAE0H,KAAO0a,aAAiBpiB,EAAE0H,QAE5C,WACd2a,SAAU,CAACzU,UAAgB,MAC3B0U,OAAQ,CACNC,QAAQ,EAAD,CACLC,KAAM,CACJD,QAAQ,EAAD,OACFlP,QACAoE,SAAK,IACRgL,SAAU,MAEZ/a,KAdS,cAgBR2Q,Y,sMCrBM,SAASqK,EAAe,GAEA,IADrClP,EAAU,EAAVA,WAEA,OACE,gBAACjG,EAAA,QAAI,CAACrN,MAAOwD,EAAOG,WAClB,gBAAC2J,EAAA,QAAI,CAACtN,MAAOwD,EAAOjE,OAAQC,kBAAK,+BACjC,gBAAC0Y,EAAA,QAAgB,CAACzY,QAAS,kBAAM6T,EAAW2F,QAAQ,eAAejZ,MAAOwD,EAAOgK,MAC/E,gBAACF,EAAA,QAAI,CAACtN,MAAOwD,EAAOif,UAAWjjB,kBAAK,yBAM5C,IAAMgE,EAAShD,UAAWC,OAAO,CAC/BkD,UAAW,CACThD,KAAM,EACNC,gBAAiB,OACjBE,WAAY,SACZY,eAAgB,SAChB+C,QAAS,IAEXlF,MAAO,CACL+B,SAAU,GACVE,WAAY,QAEdgM,KAAM,CACJnM,UAAW,GACXM,gBAAiB,IAEnB8gB,SAAU,CACRnhB,SAAU,GACVhB,MAAO,a,yrBC7BX,IAAMoiB,EAAiBvB,EAAQ,KAEzB/gB,EAAMsiB,EAAeC,kBACrBC,EAAkB,0CAAwBjZ,MAAM,IAAIzJ,KAAI,SAACJ,EAAGgK,GAAC,OAAKhK,EAAE+c,WAAW,GAAKzc,EAAIyc,WAAW/S,IAAImY,SAAS,IAAIY,SAAS,EAAG,QAAM5Y,KAAK,IAC3I6Y,EAAMC,UAASC,cAAc,EAAD,KAAKN,GAAc,IAAEO,OAAO,6CAExDC,EAAYH,UAASG,UAAUJ,GAErCI,EAAUC,WAAU,SAACC,GACnB,GAAM,iBAAkBC,QAGnB,GAAgC,YAA5BC,aAAaC,WAA0B,CAC9C,IAAM/R,EAAcgS,KAAKC,MAAML,EAAQ7d,KAAkB,aAAG,GAC5D,IAAI+d,aAAaF,EAAQ7d,KAAKuH,aAAc,CAAE4W,KAASN,EAAQ7d,KAAKiF,KAAI,KAAKgH,EAAYV,gBAJzF6S,MAAM,yDAQV,IAAMC,EAAkBxc,wBAAkE,CAACyc,QAAO,EAAOC,UAAU,eAkBtGC,EAAmB,SAAH,GAA8E,IAAzEzf,EAAQ,EAARA,SAAU+F,EAAI,EAAJA,KACpC2Z,EAAW/Y,mBACjB,EAAwCC,qBAA4B,WAA7DkQ,EAAY,KAAE6I,EAAe,KAC9BJ,EAASrY,mBAAQ,mBAAkB,MAAZ4P,KAAcvB,SAAQ,CAACuB,IA+BpD,OAtBAjV,qBAAU,WACR,IAAI+d,GAAU,EACRC,EAA0B,SAACC,GAC3BF,GAAQD,EAAgBG,IAiB9B,OAfG/Z,EAjCc,WAAH,oGACSiZ,aAAae,qBAAmB,OAAzC,GACG,YADH,OACY,2CACcC,UAAUC,cAAcC,SAAYC,uCAAmD7B,IAAkB,OACnF,OADxD8B,EAAyB,OAC/B3b,QAAQC,IAAI,gBAAiB0b,EAA0BC,OAAO,oBACnCzB,EAAU0B,SAAS,CAACF,4BAA2BG,SAAS,6FAAwB,QAIxG,GAJGC,EAAY,OAClBzB,OAAOpW,iBAAiB,gBAAgB,SAAC9D,GACvCA,EAAM4b,iBACNL,EAA0BM,iBAExBF,EAAa,CAAD,yCACPA,GAAY,sCAEhB/kB,GAAS,6DAqBZklB,GAAe7f,MAAK,SAAC8f,GACnBlB,EAAS3e,QAAU6f,EACnBnK,0BAAgB1Q,EAAKxE,IAAIT,MAAK,SAAA+f,GAC5B,IAAMtL,OAAW9Z,GAAHmlB,EAAa,KAAKA,OACpBnlB,GAARolB,EACFhK,2BAAiB,CAAC9Q,KAAKA,EAAKxE,GAAInG,KAAK,MAAOma,UAAQzU,KAAK+e,GAEzD7I,0BAAgB,EAAD,KAAK6J,GAAI,IAAEtL,WAAQzU,KAAK+e,SAK7CA,OAAwBpkB,GAEnB,WAAKmkB,GAAQ,KACnB,CAAC7Z,IACIA,EAAqB,kBAACuZ,EAAgB9I,SAAQ,CAAChL,MAAO,CAAC+T,SAAQC,UA9BrD,SAACD,GACdxZ,GAAQ+Q,GACTE,0BAAgB,EAAD,KAAKF,GAAY,IAAEvB,MAAMgK,QAA0B9jB,GAAlBikB,EAAS3e,QAAmB,KAAK2e,EAAS3e,WAAUD,MAAK,SAAC+f,GACxGlB,EAAgBkB,SA4BnB7gB,GADU,oCAAGA,I,wBCvEH,WAACrF,GACZ,IAAMwO,EAAWkD,oBACjB,EAA4BzF,mBAASmY,OAAO+B,YAAc,GAAE,WAArDnjB,EAAM,KAAEojB,EAAS,KAWxB,OAVAlf,qBAAU,WACN,GAAGsH,GAA2B,OAAfgO,UAASC,GAAY,CAChC,IAAMf,EAAW,SAACtO,GACdgZ,EAAUhC,OAAO+B,YAAc,IAGnC,OADAE,UAAWrY,iBAAiB,SAAS0N,GAC9B,kBAAM2K,UAAWzK,oBAAoB,SAAUF,OAG5D,CAAElN,IACG,kBAACJ,EAAA,QAAI,CAACrN,MAAO,CAACiC,OAAOwL,GAAyB,OAAfgO,UAASC,GAAYzZ,EAAO,SAC7DhD,EAAMqF,W,QCDTihB,EAAOC,oBAEP3gB,EAAc,IAAI4gB,cAET,SAASC,IACpB,IAAMtmB,EAAaC,oBACnB,OACI,kBAACsmB,EAAkB,CAACvmB,WAAYA,GAC5B,kBAAC,eAAY,KACT,kBAAC,sBAAmB,CAACwmB,OAAQ/gB,GAGrB,kBAAC0gB,EAAKM,UAAS,CACX9Z,KAAM,QACN+Z,WAAY,SACZC,cAAe,CACXC,UAAU,CAACplB,gBAAgB,SAC3BqlB,kBAAkB,EAClBC,sBAAuBC,yBAAuBC,iBAGlD,kBAACb,EAAKc,OAAM,CAAC7b,KAAK,OAAO6I,UAAWiT,EAAe3S,QAAS,CAAC4S,aAAY,KACxEja,OAAOC,QAAQ4L,SAAOjY,KAAI,2BAAEE,EAAG,KAAE4Y,EAAM,YAAI,kBAACuM,EAAKc,OAAM,CAACjmB,IAAKA,EAAKoK,KAAMpK,EAAKiT,UAAW2F,EAAO3F,UAAWM,QAAS,CAChHpU,MAAOyZ,EAAOzZ,MACdinB,iBAAgC,aAAdpnB,EAA0B,oBAAoB,qBAShG,IAAMkjB,EAAOkD,oBAeb,SAASc,IACL,IAAMlnB,EAAaC,oBACboO,EAAWkD,oBACV5F,EAAQ5L,oBAAR4L,KACDyI,EAAQC,oBACRlH,EAAUf,mBAAQ,WACpB,YAAkBzL,IAAdgL,EAAKV,KACE,IACXtB,QAAQC,IAAI,iBAAkB+B,EAAKV,MAC5BiC,OAAOC,QAAsB,OAAdxB,EAAKV,KAAckN,QAAMpE,WAChD,CAACpI,IACJ,YAAoBhL,IAAZgL,EAAKV,KAAiB,kBAACgD,EAAA,QAAI,CAACrN,MAAO,CAACC,cAAc,MAAOU,KAAK,IACjEoK,EAAKV,KAAK,kBAACoc,EAAA,QAAe,CAACpc,KAAMU,EAAKV,YAAQtK,EAC/C,kBAACsN,EAAA,QAAI,CAACrN,MAAO,CAACW,KAAK,IACf,kBAAC,EAAgB,CAAC0J,KAAMU,EAAKV,MACzB,kBAAC,oBAAiB,CAAC9C,QAAuB,OAAdwD,EAAKV,WAA+BtK,IAAdgL,EAAKV,MACnD,kBAACiY,EAAKuD,UAAS,CACXE,cAAe,gBAAEzS,EAAU,EAAVA,WAAYC,EAAK,EAALA,MAAK,MAAK,CACnCmT,YAAY,CAAC9lB,gBAAgB8D,UAAO8O,GAAOmT,OAAQ1kB,OAAOwL,EAAS,QAAG1N,GACtE6mB,iBAAiB,CAACtmB,MAAM,SACxBumB,WAAW,kBAjCvC,SAAoBvT,EAAgBC,EAAWnU,EAAmBqO,GAC9D,IAAMqZ,GAAkF,GAAhE,CAAC,aAAc,eAAehI,WAAU,SAAAhf,GAAC,OAAEA,GAAKyT,EAAM/I,QAO9E,MAAgB,YAAZpL,GAA0B0nB,EACnB,kBAAC,mBAAgB,CAACrnB,QAPd,WACP6T,EAAW4C,YACX5C,EAAW6C,SACN2Q,GACLxT,EAAW2F,QAAQ,gBAGmB,kBAACmE,EAAA,QAAQ,CAACxL,KAAMnE,EAAS,GAAG,GAAIzN,MAAO,CAAC2C,iBAAiB8K,EAAS,GAAG,IAAMjD,KAAK,gBACvH,KAuBgCqc,CAAWvT,EAAYC,EAAOnU,EAAYqO,IACzDmG,YAAY,kBAAI,kBAACC,EAAA,QAAW,OAC5BkT,yBAAyB,CAACnmB,gBAAgB,QAASwb,kBAAkB,EAAGrZ,YAAY2B,UAAO3B,aAC3FijB,UAAU,CAACgB,WAAW,GACtBf,iBAA6B,YAAZ7mB,EACjB8mB,sBAAuBC,yBAAuBc,oBAGjD1a,EAAQrM,KAAI,2BAAEE,EAAG,KAAE4Y,EAAM,YAAI,kBAACsJ,EAAK+D,OAAM,CAACjmB,IAAKA,EAAKoK,KAAMpK,EAAKiT,UAAW2F,EAAO3F,UAAWM,QAAS,CAAEpU,MAAOyZ,EAAOzZ,YACtH,kBAAC+iB,EAAK+D,OAAM,CAAC7b,KAAK,WAAW6I,UAAWmP,EAAgB7O,QAAS,CAAEpU,MAAO,gBAKtF,uC,kxBC9FG,SAAS2nB,IACtB,IAAMC,ECHO,WACb,MAAgDxb,YAAe,GAAM,WAA9Dwb,EAAiB,KAAEC,EAAkB,KAyB5C,OAtBAzb,aAAgB,WAC0B,2DAEA,OAFA,SAEpC0b,yBAAoC,mBAG9BC,YAAe,EAAD,KACflK,UAASmK,MAAI,IAChB,aAAcpG,EAAQ,SACtB,sDAGFpY,QAAQye,KAAK,EAAD,IAAI,OAGS,OAHT,SAEhBJ,GAAmB,GACnBC,cAAyB,mFAK5B,IAEIF,EDvBmBM,GACpBC,EAAcjU,oBACpB,OAAK0T,EAID,kBAAC,mBAAgB,KACf,kBAAC,UAAU,CAACO,YAAaA,IACzB,kBAACC,EAAA,UAAS,OALP,O,gPEPEC,EAAU,kCAEjBC,EAAmC,CACrCC,QAFS,oCAGTC,iBAAiB,EACjBC,QAAS,IAEPC,EAAShN,UAAMxa,OAAOonB,GAE5BI,EAAOC,aAAaC,QAAQC,KACxB,SAAAhG,GACI,OAAOA,KAEX,SAAA5V,GACI,OAAO6b,QAAQC,OAAO9b,MAI9Byb,EAAOC,aAAarb,SAASub,KACzB,SAAAvb,GAII,OAAOA,KAEX,SAAAL,GASI,OAR8B,MAA1BA,EAAMK,SAAS0b,QACf3D,IAAWxf,MAAK,SAAMyU,GAAK,kGACPoO,EAAO5M,KAAK,4BAA6B,CAACxB,SAAQ,CAACmO,QAAQ,CAAC,cAAgB,IAAKF,QAASF,KAAY,OACtG,MADVY,EAAC,QACDD,QAA4B,KAAXC,EAAEjjB,MACrBuU,EAAS0O,EAAEjjB,MACd,+DAGF8iB,QAAQC,OAAO9b,MAIvB,IAAMsN,EAAW,SAAOD,GAAiB,kEACa,GAAzDoO,EAAOQ,SAAST,QAAuB,cAAC,OAAUnO,GAC9CA,EAAM,CAAD,yCACCY,UAAaiO,QAAQ,gBAAiB7O,IAAM,6BAElDY,UAAakO,WAAW,iBAAgB,6DAEnC/D,EAAW,WAAH,kGACGnK,UAAaC,QAAQ,kBAAgB,OACW,OAD9Db,EAAK,OACXoO,EAAOQ,SAAST,QAAuB,cAAInO,EAAM,OAAOA,EAAQ,KAAI,kBAC7DA,GAAK,6DAGDoO,a,oDCvDf,OAGe,WACblH,MAAO,CACLrN,KAAM,OACNwD,WAAY,OACZ0R,KAPmB,UAQnBC,eAAgB,OAChBC,gBATmB,UAUnBnC,OAAO,UACPoC,YAAY,mBACZC,sBAAuB,WAEzBhI,KAAM,CACJtN,KAAM,OACNwD,WAAY,OACZ0R,KAhBkB,OAiBlBC,eAAgB,OAChBC,gBAlBkB,OAmBlBnC,OAAO,UACPoC,YAAY,gBACZC,sBAAuB,WAEzB3mB,OAAO,CACLU,YAAY,uBAEdA,YAAY,UAEZqT,MAAM,Y,2kDClBR,IAAM6S,EAAc7hB,wBAA0D,CAAC2D,KAAK,GAAI7L,SAAS,eAE3FgqB,EAAa,SAACC,EAAwBC,GAC1C,OAAQA,EAAO1pB,MACX,IAAK,gBACH,OAAO,EAAP,KACKypB,GAAY,IACfhB,QAAQ,CAAC1Q,SAAS2R,EAAO3R,SAAUE,SAASyR,EAAOzR,YAEvD,IAAK,cACH,OAAO,EAAP,KACKwR,GAAY,IACfhB,QAAQ,CAAC1Q,SAAS,QAASE,SAAS,WAExC,IAAK,gBACD,cACOwR,GAAY,IACf9e,KAAK+e,EAAO/e,KACZ8d,aAAQpoB,IAEhB,IAAK,eACD,cACOopB,GAAY,IACfhB,aAAQpoB,IAEhB,IAAK,iBACD,cACOopB,GAAY,IACfhB,QAAQ,OAEhB,IAAK,iBACD,OAAO,EAAP,KACKgB,GAAY,IACf9e,KAAK,KACL8d,aAAQpoB,IAEd,IAAK,UACH,OAAO,EAAP,KACKopB,GAAY,IACf9e,UAAKtK,IAET,QACI,MAAM,IAAIspB,MAAM,0BAA2BD,EAAO1pB,QAK/C4pB,EAAe,SAAH,GAA6C,IAAxChlB,EAAQ,EAARA,SAC5B,EAA8BilB,qBAAWL,EAAa,IAAW,WAA1DM,EAAS,KAAEtqB,EAAQ,KACpB6L,EAAOS,mBAAQ,yBAAK,CACxBnB,KAAKmf,EAAUnf,KACfsO,QAAuB,OAAhB,EAAE6Q,EAAUnf,OAAmD,OAA/C,EAAd,EAAgBof,eAAepZ,MAAK,SAAAqZ,GAAC,OAAmB,MAAjBA,EAAEC,uBAA3B,EAAd,EAA+D7Q,SACtE,CAAC0Q,IAyBL,OAxBArjB,qBAAU,gBACYpG,IAAjBypB,EAAUnf,KACXuf,uBAAaxkB,MAAK,SAACiF,GACjBnL,EAAS,CAACQ,KAAK,gBAAiB2K,YAC/B+B,OAAM,SAACC,GACRtD,QAAQC,IAAIqD,GACZnN,EAAS,CAACQ,KAAK,sBAGM,OAAjB8pB,EAAUnf,MAAemf,EAAUrB,QACzC5Q,gBAAMiS,EAAUrB,QAAQ1Q,SAAU+R,EAAUrB,QAAQxQ,UAAUvS,MAAK,SAAAiF,GACjEnL,EAAS,CAACQ,KAAK,gBAAiB2K,YAC/B+B,OAAM,WACPlN,EAAS,CAACQ,KAAK,oBAGX8pB,EAAUnf,MAA4B,OAApBmf,EAAUrB,SAClCpN,0BAAgByO,EAAUnf,KAAKxE,IAAIT,MAAK,SAAA+f,GACtCA,GAAQ7J,0BAAgB,EAAD,KAAK6J,GAAI,IAAEtL,MAAM,MAAKzU,MAAK,WAChDykB,mBAASzkB,MAAK,kBAAIlG,EAAS,CAACQ,KAAK,8BAItC,CAAC8pB,IACG,kBAACP,EAAYnO,SAAQ,CAAChL,MAAO,CAAC/E,OAAM7L,aACxCoF,IAIU,qBAEb,OADoBqD,qBAAWshB,K,oBC9FjCvG,eAAiB,CACb,WAAc,yCACd,UAAa,yBACb,cAAiB,qCACjB,kBAAqB,cACrB,MAAS,2CACT,cAAiB,gBAGjBoH,EAAOC,QAAUrH,gB,oBCTrBoH,EAAOC,QAAU,IAA0B,iC,gCCK3C,8KAQMC,EAAgBre,cAEf,SAASmI,EAAStJ,EAAayJ,GAAc,IAAD,IAC7CA,IACmB,OAArB,EAAA+V,EAAc3kB,UAAd,EAAuByO,SAAStJ,EAAMyJ,IACnB,OAArB,EAAA+V,EAAc3kB,UAAd,EAAuByO,SAAStJ,GAGnB,SAASyf,EAAW,GAAoD,IAAlDvC,EAAW,EAAXA,YACnC,OACE,gBAAC,UAAmB,CAClBzQ,IAAK+S,EACLE,cAAe,CAACC,UAAW,SAACxW,EAASJ,GAAW,MAAM,cACtD6W,QAAU3F,EAAQ4F,UAAY5F,EAAQ4F,SAAmB,cAAGtqB,EAAUuqB,UACtE9W,MAAuB,SAAhBkU,EAAyB6C,UAAYC,WAC5C,gBAAC,UAAa,QAKnB,SAASC,GACN,QAAU1qB,IAAN0qB,GAAmC,MAAhBA,EAAEC,OAAO,GAAa,CACzC,IAAIC,EAAUF,EAAEC,OAAOzZ,MAAM,GAAGtH,MAAM,KAAKzJ,KAAI,SAAS0qB,GACxD,OAAOA,EAAE3R,QAAQ,SAAU,QACxBhP,KAAK,KACRoZ,OAAOwH,QAAQC,aAAa,KAAM,GAC9BL,EAAEM,SAAS9Z,MAAM,GAAI,GAAK0Z,EAAUF,EAAElO,OANjD,CASC8G,OAAO2H,UAET,IAAMC,EAAiB,CAAC,iCAClBC,EAAWC,IAAEC,MAAMriB,SACzBA,QAAQye,KAAO,SAAC9e,GACZ,IAAI8e,GAAO,EACP9e,aAAmB4D,OACvBkb,GAAO,EAEPyD,EAAerhB,SAAQ,SAACkG,GAChBpH,EAAQ2iB,SAAW3iB,EAAQ2iB,QAAQvb,KAAW,IAC9C0X,GAAO,MAIXA,GACA0D,EAAS1D,KAAK9e,K,4hCCtDT6O,EAAQ,SAAME,EAAiBE,GAAe,wEAEjC,OADnBF,EAAS6T,SAAS,WAAgC,GAAnB3T,EAASlS,SACvCkS,EAAW,SAAO,mBACNsD,UAAMI,KAAK,mBAAoB,CAAC5D,WAAUE,cAAU,OAA7D,GACQ,MADT6Q,EAAC,QACFD,OAAa,2CACRzO,mBAAS0O,EAAEjjB,OAAK,iCACTqkB,KAAY,sGAIpBC,EAAS,WAAH,4FACT/P,mBAAS,OAAK,iCACPmB,UAAMC,IAAI,sBAAoB,qGAGlCqQ,EAAc,WAAJ,4FACNhU,EAAM,QAAS,UAAQ,qGAGlCiU,EAAkB,WAAH,oGACIvQ,UAAMC,IAAI,0CAAwC,0FAAzD,EAA4D3V,KAAI,OAAnE,KAALuK,EAAK,QACEA,EAAMrK,OAAM,0CACdqK,EAAM,IAAE,iCAEZ,MAAI,8DAGF8Z,EAAa,WAAH,oGACChF,sBAAU,OAAnB,GACG,OADH,OACO,yCACP,MAAI,0CAEC4G,KAAiB,gDAGpB,GAHoB,0BAGzBhf,EAAK,UACSzM,IAAf,KAAE8M,UAA6C,KAAnB,KAAEA,SAAS0b,OAAW,sDAEhCiD,KAAiB,4EAG9Bhf,EAAK,KAAK,QAG+H,MAA3Iif,EAAoC,eAAtBjf,EAAckf,MAA0Blf,EAAc9D,SAAa8D,EAAc9D,QAAmBijB,WAAW,eAC7H,CAACnf,QAAOif,aAAU,0EAInBG,EAAc,SAAOC,GAAe,4FAC/B5Q,UAAMC,IAAI,2BAA2B2Q,IAAW,uCAAGtmB,MAAI,6DAG5D2a,EAAY,SAAO7V,GAA6B,4FACnD4Q,UAAM6Q,MAAM,gBAAiB,CAACC,IAAI,CAAC1hB,EAAKxE,IAAKmmB,QAAS,CAACxhB,KAAKH,EAAKG,OAAQ,CAACsd,wBAAS,6DAGhFzL,EAAwB,SAAOwP,GAAe,4FACzC5Q,UAAMC,IAAI,uCAAuC2Q,IAAW,uCAAGtmB,MAAI,6DC3DxE0mB,EAA0B,SAAOjR,GAAc,4FAC1CC,UAAMC,IAAI,gEAAgEF,IAAU,uCAAGzV,MAAI,6DAGhG2mB,EAAc,SAAMpX,GAAe,4FAC9BmG,UAAMI,KAAK,oBAAqBvG,IAAQ,uCAAEvP,MAAI,6DAGnD4mB,EAAa,SAAMrX,GAAe,4FAC7BmG,UAAMM,IAAI,oBAAoBzG,EAAQjP,GAAE,IAAKiP,IAAQ,uCAAEvP,MAAI,6DAGhE6mB,EAAgB,SAAMxnB,GAAiB,4FAC1CqW,UAAMhI,OAAO,oBAAoBrO,EAAU,MAAI,6DAG5C6B,EAAyB,SAAM7B,GAAiB,4FAC3CqW,UAAMC,IAAI,qCAAqCtW,IAAa,uCAAGW,MAAI,6DAGxEsB,EAA0B,SAAMtB,GAA2C,4FAC9E0V,UAAMI,KAAK,iCAAkC,CAACvG,QAAQvP,EAAKX,WAAY2U,SAAShU,EAAKgU,YAAU,6DAG5FtS,EAAwB,SAAMgO,GAAgB,4FACjDgG,UAAMhI,OAAO,4BAA4BgC,EAAS,MAAI,6DAGnD9P,EAA0B,SAAOP,EAAmBynB,GAAa,wEAC5B,OAAxCC,EAAcD,EAAM,UAAUA,EAAQ,GAAE,mBAChCpR,UAAMC,IAAI,+CAA+CtW,EAAa0nB,IAAc,uCAAE/mB,KAAKgnB,SAAO,6DAGvG7W,EAAc,SAAOhN,GAAmB,4FAC3CuS,UAAMI,KAAK,sCAAuC3S,IAAQ,6DAGvDkN,EAAyB,SAAO4W,GAAiB,4FACpDvR,UAAMhI,OAAO,6BAA6BuZ,EAAU,MAAI,8D,4FCpCnD,SAAS/Y,IACtB,OAAOgZ,sB,osBCAT,IAAMC,EAAgB,SAACztB,GACnB,MAA0BiM,oBAAS,GAAM,WAAlCyhB,EAAK,KAAE/Q,EAAQ,KACtB,OAAO,kBAAC,UAAS,CACbnc,QAAS,kBAAIR,EAAMQ,WAEnBwc,UAAW,kBAAIL,GAAS,IACxBM,WAAY,kBAAIN,GAAS,IACzB5b,MAAO,CACH,CACI2B,gBAAgB,EAChBO,kBAAkB,IAEtBjD,EAAMe,MACN2sB,EAAM,CAAC/rB,gBAAgB3B,EAAMqB,OAAO,KAEpC,kBAAC,UAAI,CAACssB,YAAY,EAAO5sB,MAAO,CAAC,CAACsB,SAAS,IAAKrC,EAAMoB,YAAapB,EAAMM,SAItE,mBAACN,GACZ,IAAMuU,EAAQC,oBACRoZ,EAAM,KACRvsB,MAAMoE,UAAO8O,GAAOuV,aACjB9pB,GAAK,IACRe,MAAM,CACFwD,EAAOxD,MACP,CACIY,gBAAgB8D,UAAO8O,GAAOwV,uBAElC/pB,EAAMe,OAEVK,UAAU,CACNmD,EAAOkQ,KACP,CAACpT,MAAMoE,UAAO8O,GAAOE,MACrBzU,EAAMoB,aAGd,OAAO,kBAACqsB,EAAkBG,IAG9B,IAAMrpB,EAAShD,UAAWC,OAAO,CAC7BT,MAAM,CACFoC,aAAa,EACbW,YAAY2B,UAAOrC,OAAOU,YAC1BD,YAAY,GAEhB4Q,KAAK,CACDlP,UAAU,SACVhD,WAAW,U,oIC/CbsrB,EAAgB,SAACzJ,GAAiB,OAAIA,EAAOphB,QAAUohB,EAAOniB,MAAM,WAAW,aAEtE,SAAS7B,IACtB,IAAM0tB,EAAevR,MACrB,EAAoCtQ,mBAAS4hB,EAAcxH,UAAWpK,IAAI,YAAW,WAA9E9b,EAAU,KAAE4tB,EAAa,KAC1BrS,EAAW,WAAH,OAASqS,EAAcF,EAAcxH,UAAWpK,IAAI,aAQlE,OANA/U,qBAAU,WAER,OADAmf,UAAWrY,iBAAiB,SAAU0N,GAC/B,WACL2K,UAAWzK,oBAAoB,SAAUF,OAGzCoS,EAAatf,WACR,WACFrO,I,gNCfM,SAAS2V,EAAwBhK,GAC9C,IAAMlG,EAAcC,2BACbmB,EAAmBC,oBAAnBD,gBACCV,EAASiB,mBAAS,wBAAyB,0BAAAxB,EAAAC,OAAA,mDAAa,MAAJ8F,GAAU,OAAN,EAAJA,EAAMV,QAAN,EAAYxE,GAAE,0CAAQomB,kCAAwBlhB,EAAKV,KAAKxE,KAAG,8CAAE,GAAE,qGAAnHN,KAcR,OAZAY,qBAAU,WACa,MAAlBF,GAC2B,SAAzBA,EAAsB,MACvBpB,EAAYuB,aAAiC,wBAAwB,SAACC,GACpE,OAAa,MAALA,KAAOgK,MAAK,SAAAvQ,GAAC,OAAEA,EAAE+F,IAAII,EAAsB,KAAM,MAAGI,EAAM,CAACJ,EAAsB,MAAC,WAAOI,GAAQ,MAAM4mB,MAAK,SAACjoB,EAAGkoB,GAAC,OAAGloB,EAAEa,GAAKqnB,EAAErnB,WAO1I,CAACI,IACGV,EAGF,SAASgT,IACd,IAAM1T,EAAcC,2BAEdrE,EAASmG,sBAAYslB,cAAa,CACtCplB,UAAW,kBAAIjC,EAAYkC,kBAAkB,2BAGzCgS,EAASnS,sBAAYulB,aAAY,CACrCrlB,UAAW,kBAAMjC,EAAYkC,kBAAkB,2BAIjD,MAAO,CAAEtG,OAAOA,EAAO0sB,YAAapU,OAAOA,EAAOoU,gB","file":"static/js/app.379bad8a.chunk.js","sourcesContent":["import React from 'react'\nimport TextButton from \"./TextButton\"\nimport useAuthContext from \"../hooks/useAuthContext\"\nimport useResizeWindow from '../hooks/useResizeWindow'\nimport { View } from 'react-native'\nimport lang from '../lang'\n\ntype ButtonProps = {title:string, onPress:()=>void, windowType?:'landscape'|'portrait'}\n\nexport default (props:{extra?:ButtonProps[]})=>{\n    const {dispatch} = useAuthContext()\n    const windowType = useResizeWindow()\n    const defaultButtonProps:ButtonProps[] = [{title:lang('sign out'), onPress:()=>dispatch({type:\"LOGOUT_REQUEST\"})}]\n    const buttonProps = (props.extra?[...props.extra, ...defaultButtonProps]:defaultButtonProps).filter(v=>v.windowType==windowType || v.windowType == undefined)\n    return<View style={{flexDirection:'row'}}>\n        {buttonProps.map((v,k)=><TextButton key={k} {...v} textStyle={{color:'white'}} color='#gray'/>)}\n    </View>\n}\n  ","import React, {useLayoutEffect, useState} from 'react';\nimport {\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n  StyleSheet,\n} from 'react-native';\nimport { StackScreenProps } from '@react-navigation/stack';\nimport useAuthContext from '../../hooks/useAuthContext';\nimport lang from '../../lang'\n\nexport default function LoginScreen({\n  navigation, route\n}: StackScreenProps<any, 'Login'>) {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const {dispatch} = useAuthContext()\n  const _login = ()=>dispatch({type:'LOGIN_REQUEST', username, password})\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      headerRight: undefined\n    });\n  }, [navigation, route]);\n\n  return (\n    <View style={Styles.login_wrapper}>\n      <View style={Styles.form}>\n        <TextInput\n          style={Styles.form_input}\n          value={username}\n          placeholder={lang('Username')}\n          onChangeText={(text) => setUsername(text)}\n          autoCapitalize={'none'}\n          keyboardType={'email-address'}\n          onSubmitEditing={_login}\n        />\n        <TextInput\n          style={Styles.form_input}\n          value={password}\n          placeholder={lang('Password')}\n          secureTextEntry\n          onChangeText={(text) => setPassword(text)}\n          onSubmitEditing={_login}\n        />\n        <TouchableOpacity onPress={_login}>\n          <View style={Styles.button}>\n            <Text style={Styles.button_label}>{lang('Sign in')}</Text>\n          </View>\n        </TouchableOpacity>\n        <TouchableOpacity onPress={() => dispatch({type:\"LOGIN_GUEST\"})}>\n          <Text style={Styles.guest_footer_text}>\n            {lang(\"Sign in as guest\")}\n          </Text>\n        </TouchableOpacity>\n      </View>\n      <View style={Styles.login_social}>\n        <View style={Styles.login_social_separator}>\n          <View style={Styles.login_social_separator_line} />\n          <Text style={Styles.login_social_separator_text}>{'*'}</Text>\n          <View style={Styles.login_social_separator_line} />\n        </View>\n        <View style={Styles.login_social_buttons}>\n        </View>\n      </View>\n      {/* <>\n        <TouchableOpacity onPress={() => navigate(\"RegistrationScreen\")}>\n          <Text style={Styles.login_footer_text}>\n            {\"Don't have an account? \"}\n            <Text style={Styles.login_footer_link}>{'Sign up'}</Text>\n          </Text>\n        </TouchableOpacity>\n      </> */}\n    </View>\n  );\n};\n\nconst Styles = StyleSheet.create({\n    login_container: {\n      flex: 1,\n      backgroundColor: '#FFF',\n    },\n    login_header: {\n      alignItems: 'center',\n      paddingTop: 30,\n      paddingBottom: 50,\n      backgroundColor: '#208AEC',\n    },\n    login_header_logo: {\n      width: 220,\n      resizeMode: 'contain',\n    },\n    login_header_text: {\n      marginTop: 15,\n      color: '#f0f0f0',\n      fontSize: 16,\n    },\n    login_header_text_bold: {\n      color: '#fff',\n      fontWeight: 'bold',\n    },\n    login_wrapper: {\n      flex: 1,\n      justifyContent: 'space-between',\n      paddingVertical: 40,\n      borderTopRightRadius: 12,\n      borderTopLeftRadius: 12,\n      marginTop: -10,\n      backgroundColor: '#fff',\n      alignItems: 'center',\n    },\n    form: {\n      width: '100%',\n      maxWidth: 280,\n    },\n    form_input: {\n      height: 44,\n      paddingHorizontal: 20,\n      marginBottom: 20,\n      backgroundColor: '#EDF0F7',\n      borderRadius: 50,\n    },\n    button: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: 44,\n      backgroundColor: '#0065A4',\n      borderRadius: 50,\n    },\n    button_label: {\n      color: '#fff',\n      fontSize: 16,\n    },\n    login_social: {\n      width: '100%',\n      maxWidth: 280,\n      marginTop: 20,\n    },\n    login_social_separator: {\n      flexDirection: 'row',\n      alignItems: 'center',\n    },\n    login_social_separator_line: {\n      flex: 1,\n      width: '100%',\n      height: 1,\n      backgroundColor: '#E0E0E0',\n    },\n    login_social_separator_text: {\n      marginHorizontal: 10,\n      color: '#808080',\n      fontSize: 16,\n    },\n    login_social_buttons: {\n      flexDirection: 'row',\n      justifyContent: 'center',\n      marginTop: 20,\n    },\n    login_social_button: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: 60,\n      height: 60,\n      marginHorizontal: 12,\n      borderWidth: 1,\n      borderColor: '#E7E7E7',\n      borderRadius: 60,\n    },\n    login_social_icon: {\n      width: 38,\n      height: 38,\n      resizeMode: 'contain',\n    },\n    login_social_facebook: {\n      backgroundColor: '#4267B2',\n      borderColor: '#4267B2',\n    },\n    login_footer_text: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      color: '#808080',\n      fontSize: 14,\n    },\n    guest_footer_text: {\n      flexDirection: 'row',\n      alignSelf: 'center',\n      color: '#808080',\n      fontSize: 15,\n      margin: 15\n    },\n    login_footer_link: {\n      color: '#208AEC',\n      fontSize: 15,\n      fontWeight: 'bold',\n    },\n  });\n  ","import * as React from 'react';\nimport { View, Text } from './Themed';\nimport { StyleSheet, StyleProp, ViewStyle, TextStyle } from 'react-native';\nimport Colors from '../constants/Colors';\n\nexport type SectionParamList = {\n    title?: string,\n    titleStyle?:StyleProp<TextStyle>\n    outerContainerStyle?:StyleProp<TextStyle>\n    containerStyle?:StyleProp<ViewStyle>\n    bodyStyle?:StyleProp<ViewStyle>\n    subtitle?: string\n    withSeparator?: boolean\n    children?: React.ReactNode\n}\n\nexport default function CommonSection(props:SectionParamList){\n  return (\n    <View style={[styles.outerContainer, props.outerContainerStyle]}>\n        <View style={[styles.container, props.containerStyle]}>\n            {props.withSeparator?<View style={styles.separator} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />:undefined}\n            {props.title?<View style={styles.titleView}>\n              <Text style={[styles.title, props.titleStyle]}>{props.title}</Text>\n              <Text style={styles.subtitle}>{props.subtitle}</Text>\n            </View>:undefined}\n            <View style={[styles.bodyView, props.bodyStyle]}>\n            {props.children}\n            </View>\n          </View>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n  outerContainer:{\n    width:'100%',\n    maxWidth:1080,\n    alignItems:'stretch',\n    backgroundColor:'transparent'\n  },  \n  container: {\n      marginHorizontal:20,\n      marginVertical: 10,\n      backgroundColor:'transparent',\n    },\n    titleView:{\n      width: '100%',\n      flexDirection:'row',\n      backgroundColor:'transparent',\n      marginBottom:5,\n    },\n    title: {\n      flex:1,\n      fontSize: 16,\n    },\n    subtitle: {\n      flex:1,\n      fontSize: 12,\n      textAlign: 'right',\n      marginTop:4\n    },\n    separator: {\n      marginBottom: 20,\n      height: 1,\n      width: '100%',\n    },\n    bodyView:{\n      width: '100%',\n      padding: 20,\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderWidth:1,\n      borderColor:Colors.borderColor,\n      borderRadius:6\n    }\n  });\n  ","import { useCallback, useEffect, useState } from \"react\"\nimport { InfiniteData, useInfiniteQuery, useMutation, useQueryClient } from \"react-query\"\nimport { getMessengerContentList, postMessage, deleteMessengerContent } from \"../../apis\"\nimport { MessengerContent } from \"../../types\"\nimport useWebsocketContext from \"../useWebsocketContext\"\n\nexport type MessengerContentPage = {\n  next?:MessengerContentPage\n  current:MessengerContent[]\n}\n\nexport default function useMessengerContentList(channel_id:number){  \n  const queryClient = useQueryClient()\n  const { data, fetchNextPage } = useInfiniteQuery<MessengerContentPage>(\n    [\"MessengerContentList\", channel_id], \n    async({pageParam})=>getMessengerContentList(channel_id, pageParam).then(current=>({current})), \n    {\n      select:data=>{\n        if(data.pages.length > 1)\n          data.pages[data.pages.length - 2].next = data.pages[data.pages.length - 1]\n        return data;\n      },\n      getNextPageParam:(lastPage)=>lastPage?.current.length?lastPage.current[lastPage.current.length - 1].id:undefined,\n      refetchOnReconnect:false,\n      refetchOnWindowFocus:false\n    }\n  )\n  const { lastJsonMessage } = useWebsocketContext()\n  useEffect(()=>{\n    if(lastJsonMessage !=null && lastJsonMessage['type']=='next_message' && lastJsonMessage['data']['channel'] == channel_id){\n      queryClient.setQueryData<InfiniteData<MessengerContentPage>>([\"MessengerContentList\", channel_id], (_data)=>{\n        if(_data?.pages[0].current && _data?.pages[0].current[0].id != lastJsonMessage['data'].id)\n          _data.pages[0].current = [lastJsonMessage['data'], ..._data?.pages[0].current]\n        return {...(_data || {pages:[], pageParams:[]})}\n      })\n    }\n  }, [lastJsonMessage])\n  return { data, fetchNextPage }\n}\n\nexport function useMessengerContentMutation(){\n  // const queryClient = useQueryClient()\n  const create = useMutation(postMessage, {\n    onSuccess: () => {\n      // queryClient.setQueryData(['MessengerContentList'], (data:any) => ({\n      //   pages: data.pages.slice(0, 1),\n      //   pageParams: data.pageParams.slice(0, 1),\n      // }))\n      // queryClient.invalidateQueries(\"MessengerContentList\")\n    }\n  });\n  const _delete = useMutation(deleteMessengerContent, {\n    onSuccess: (d, variables) => {\n      // queryClient.setQueryData(['MessengerContentList'], (data:any) => ({\n      //   pages: (data.pages as MessengerContent[][]).map(v=>v.filter(v2=>v2.id != variables)),\n      //   pageParams: data.pageParams,\n      // }))\n    }\n  })\n  return { create:create.mutate, delete:_delete.mutate }\n}","import { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport { postBulkMessengerMember, deleteMessengerMember, getMessengerMemberList } from \"../../apis\";\n\nexport default function useMessengerMemberList(channel_id:number){\n  const { data } = useQuery([\"MessengerMemberList\", channel_id] , async()=>await getMessengerMemberList(channel_id))\n  return data\n}\n\n\nexport function useMessengerMemberMutation(){\n  const queryClient = useQueryClient()\n  const invite = useMutation(postBulkMessengerMember, {\n    onSuccess: ()=>{\n      queryClient.invalidateQueries(\"MessengerMemberList\")\n    }\n  })\n\n  const leave = useMutation(deleteMessengerMember, {\n    onSuccess: () => {\n      queryClient.invalidateQueries(\"MessengerChannelList\")\n      queryClient.invalidateQueries(\"MessengerMemberList\")\n    }\n  })\n  return {invite:invite.mutate, leave:leave.mutate}\n}","import React, { createContext, useContext } from \"react\"\nimport { SendJsonMessage } from \"react-use-websocket/dist/lib/types\";\nimport { WebSocketInternalProvider } from \"../../hooks/useWebsocketContext\";\n\nconst WebSocketContext = createContext<{lastJsonMessage:any, sendJsonMessage:SendJsonMessage }>({lastJsonMessage:undefined, sendJsonMessage:()=>{}});\n\nexport const WebSocketProvider = ({disable, children}:{disable?:boolean, children:React.ReactNode})=>{\n  return disable?<></>:<WebSocketInternalProvider path={'messenger/ws/rtc/'} Context={WebSocketContext} useBackground>\n    {children}\n  </WebSocketInternalProvider>\n}\n\nexport default ()=>{\n  const webSocketContext = useContext(WebSocketContext)\n  return webSocketContext\n}\n\n","import React, { useCallback, useRef, useState, useMemo } from \"react\";\n//@ts-ignore\nimport { RTCView, mediaDevices, RTCPeerConnection, MediaStream, RTCSessionDescription, RTCIceCandidate } from \"react-native-webrtc-web-shim\";\nexport const peerConstraints = {\n\ticeServers: [\n\t\t{\n\t\t\turls: 'stun:stun.l.google.com:19302'\n\t\t}\n\t]\n};\n\nexport const sessionConstraints = {\n\tmandatory: {\n\t\tOfferToReceiveAudio: true,\n\t\tOfferToReceiveVideo: true,\n\t\tVoiceActivityDetection: true\n\t}\n};\n\nconst mediaConstraints = {audio:true, video:{framerate:30}}\n\n//@ts-ignore\nexport {MediaStream, RTCPeerConnection, RTCSessionDescription} from \"react-native-webrtc-web-shim\";\n\nconst onICEcandidate = (pc:typeof RTCPeerConnection, message:any)=>{\n\tconst _message = message.data.rtcMessage\n\t\tconst candidate = new RTCIceCandidate(_message);\n\t\tif (pc) {\n\t\t\tconsole.log(\"ICE candidate Added\");\n\t\t\tpc.addIceCandidate(candidate);\n\t\t}\n}\n\nconst sendICEcandidate = (event:any, sendMessage:(data:any)=>void, receiver:string, target:string) => {\n\t// When you find a null candidate then there are no more candidates.\n\t// Gathering of candidates has finished.\n\tif ( !event.candidate ) { return; };\n\t// Send the event.candidate onto the person you're calling.\n\t// Keeping to Trickle ICE Standards, you should send the candidates immediately.\n\tsendMessage({type:'ICEcandidate', receiver, data:{target, rtcMessage:event.candidate}})\n  }\n\nconst BAND_WIDTH = 8000\n\nconst optimizeSdp = (offerDescription:RTCSessionDescription)=>{\n\tvar arr = offerDescription.sdp.split('\\r\\n');\n\tarr.forEach((str:string, i:number) => {\n\t\tif (/^a=fmtp:\\d*/.test(str)) {\n\t\t\tarr[i] = str + `;x-google-max-bitrate=${BAND_WIDTH};x-google-min-bitrate=${BAND_WIDTH};x-google-start-bitrate=${BAND_WIDTH}`;\n\t\t} else if (/^a=mid:(0|video)/.test(str)) { // if with audio then 0=>1\n\t\t\tarr[i] += `\\r\\nb=AS:${BAND_WIDTH}`;\n\t\t}\n\t});\n  \treturn new RTCSessionDescription({\n    \ttype: offerDescription.type,\n    \tsdp: arr.join('\\r\\n'),\n  \t})\n}\n\nconst createOffer = async(pcRefCurrent:{pc?:typeof RTCPeerConnection, receiver:string}, sendMessage:(data:any)=>void, stream:typeof MediaStream, target:string, user?:{name:string})=>{\n\tstream && pcRefCurrent.pc.addStream( stream );\n\tconst offerDescription = optimizeSdp((await pcRefCurrent.pc.createOffer( sessionConstraints )));\n\tawait pcRefCurrent.pc.setLocalDescription( offerDescription );\n\tsendMessage({type:'call', receiver:pcRefCurrent.receiver, data:{target, name:user?.name, rtcMessage:offerDescription}})\n}\n\nexport const useLocalCam = (sendMessage:(data:any)=>void)=>{\n\tconst pcRef = useRef<Record<number,{pc:typeof RTCPeerConnection, receiver:string}>>({})\n\tconst [sender, setSender] = useState<string>()\n\tconst [_stream, setStream] = useState<MediaStream>()\n\tconst isPlay = useMemo(()=>_stream?true:false, [_stream])\n\tconst CustomRTCView = useCallback(React.memo(({style}:{style:any})=>(_stream?<RTCView stream={_stream} style={style} videoProps={{height:'100%'}} />:<></>)) , [_stream])\n\tconst start = useCallback(async(user:{name:string}, stream?:typeof MediaStream, mode?:'camera'|'display')=>{\n\t\tconsole.log(\"start\");\n\t\tif (!_stream || mode!==undefined) {\n\t\t\ttry {\n\t\t\t\tlet newStream:typeof MediaStream;\n\t\t\t\tif(mode == 'camera'){\n\t\t\t\t\tnewStream = await mediaDevices.getUserMedia(mediaConstraints)\n\t\t\t\t}\n\t\t\t\telse if (mode == 'display'){\n\t\t\t\t\tnewStream = await mediaDevices.getDisplayMedia(mediaConstraints)\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tnewStream = stream || await mediaDevices.getUserMedia(mediaConstraints).catch((e:any)=>mediaDevices.getDisplayMedia(mediaConstraints));\n\t\t\t\t}\n\t\t\t\tsetStream(newStream)\n\t\t\t\tObject.entries(pcRef.current).map(([k, v])=>{\n\t\t\t\t\tcreateOffer(v, sendMessage, newStream, 'guest', user)\n\t\t\t\t})\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e);\n\t\t\t}\n\t\t}\n\t}, [_stream])\n\tconst stop = useCallback(()=>{\n\t\tconsole.log(\"stop\");\n\t\tif(_stream){\n\t\t\t_stream.getTracks().map((track:any) => track.stop());\n\t\t\tsetStream(undefined)\n\t\t}\n\t}, [_stream])\n\treturn {\n\t\tstart,\n\t\tstop,\n\t\twebsocketOnMessage: async(response:any, user:{name:string})=>{\n\t\t\tlet type = response.type;\n\t\t\tif (type == 'connection'){\n\t\t\t\tsetSender(response.data.channel_name)\n\t\t\t}\n\t\t\tif (type == 'start' && response.data.target=='host'){\n\t\t\t  console.log('1 start')\n\t\t\t  const peerConnection = new RTCPeerConnection( peerConstraints );\n\t\t\t  peerConnection.addEventListener( 'icecandidate', (event:any) => sendICEcandidate(event, sendMessage, response.sender, 'guest'));\n\t\t\t  pcRef.current[response.sender] = {pc:peerConnection, receiver: response.sender}\n\t\t\t  createOffer(pcRef.current[response.sender], sendMessage, _stream, 'guest', user)\n\t\t\t}\n\t\t\t\n\t\t\tif (type == \"answer\" && response.data.target == 'host'){\n\t\t\t  console.log('3 answer')\n\t\t\t  const peerConnection = pcRef.current[response.sender].pc\n\t\t\t  const answerDescription = new RTCSessionDescription(response.data.rtcMessage);\n\t\t\t  await peerConnection.setRemoteDescription( answerDescription );\n\t\t\t  // const streams = pcRef.current.pc.getRemoteStreams()\n\t\t\t  // setMirrorStream(streams[streams.length - 1])\n\t\t\t}\n\t\t\tif (type == \"ICEcandidate\" && response.data.target=='host'){\n\t\t\t\tconst peerConnection = pcRef.current[response.sender].pc\n\t\t\t\tonICEcandidate(peerConnection, response)\n\t\t\t}\n\t\t},\n\t\tCustomRTCView,\n\t\tisPlay,\n\t\tsender,\n\t\t// renderMirrorView,\n\t}\n}\n\nexport const useRemoteCam = (sendMessage:(data:any)=>void)=>{\n\tconst pcRef = useRef<{pc?:RTCPeerConnection, receiver?:string, statsInterval?:any}>({})\n\tconst [user, setUser] = useState<{name:string}>()\n\tconst [_stream, setStream] = useState<MediaStream>()\n\tconst CustomRTCView = useCallback(React.memo((style:any)=>_stream?<RTCView stream={_stream} style={style} videoProps={{height:'100%'}} />:<></>), [_stream])\n\tconst isPlay = useMemo(()=>_stream?true:false, [_stream])\n\tconst start = useCallback((receiver:string)=>{\n\t\tconsole.log(\"start\");\n\t\tif (!pcRef.current.pc) {\n\t\t  pcRef.current.pc = new RTCPeerConnection( peerConstraints );\n\t\t  pcRef.current.receiver = receiver\n\t\t}\n\t\tif (!_stream){\n\t\t\tsendMessage({type:'start', receiver, data:{'target': 'host'}})\n\t\t}\n\t}, [_stream])\n\tconst stop = () => {\n\t\tconsole.log(\"stop\");\n\t\tif (pcRef.current.pc) {\n\t\t  // peerConnection._unregisterEvents();\n\t\t  setStream(undefined)\n\t\t  pcRef.current.pc.close();\n\t\t  pcRef.current.pc = undefined\n\t\t  pcRef.current.receiver = undefined\n\t\t  clearInterval(pcRef.current.statsInterval)\n\t\t}\n\t}\n\treturn {\n\t\tstart,\n\t\tstop,\n\t\twebsocketOnMessage: async(response:any)=>{\n\t\t\tlet type = response.type;\n\t\t\tif (type == 'start' && response.data.target=='guest' && response.sender == pcRef.current?.receiver){\n\t\t\t\tconsole.log('(remote)1 start')\n\t\t\t\tconst peerConnection = pcRef.current.pc\n\t\t\t\tsetUser({name: response.data.name})\n\t\t\t\tpeerConnection.addEventListener('icecandidate', (event:any) => sendICEcandidate(event, sendMessage, response.sender, 'host'));\n\t\t\t\tpeerConnection.addEventListener('iceconnectionstatechange', (e:any)=>{\n\t\t\t\t\tif (pcRef.current.pc.iceConnectionState == 'connected'){\n\t\t\t\t\t\tlet activeStream = false\n\t\t\t\t\t\tpcRef.current.statsInterval = setInterval(async()=>{\n\t\t\t\t\t\t\tconst stats = await pcRef.current.pc.getStats(null)\n\t\t\t\t\t\t\tlet statsOutput = \"\";\n\t\t\t\t\t\t\tlet framePerSecond = undefined\n\t\t\t\t\t\t\tstats.forEach((report:any) => {\n\t\t\t\t\t\t\t\tif (report.type === \"inbound-rtp\" && report.kind === \"video\") {\n\t\t\t\t\t\t\t\t\tObject.keys(report).forEach((statName) => {\n\t\t\t\t\t\t\t\t\t\tstatsOutput += `${statName}: ${report[statName]}\\n`;\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tframePerSecond = report.framesPerSecond\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tconsole.log(activeStream, framePerSecond)\n\t\t\t\t\t\t\tif (framePerSecond != undefined){\n\t\t\t\t\t\t\t\tactiveStream = true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (activeStream){\n\t\t\t\t\t\t\t\tstop()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconsole.log(new Date().toTimeString().split(' ')[0], statsOutput)\n\t\t\t\t\t\t}, 1000);\n\t\t\t\t\t}\n\t\t\t\t\telse if (pcRef.current.pc.iceConnectionState == 'failed'){\n\t\t\t\t\t\tstop()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t// peerConnection.addTransceiver('audio', {\n\t\t\t\t// \tdirection: 'recvonly'\n\t\t\t\t// });\n\t\t\t\tpeerConnection.addTransceiver('video', {\n\t\t\t\t\tdirection: 'recvonly'\n\t\t\t\t});\n\t\t\t\tawait createOffer({pc:pcRef.current.pc, receiver:response.sender}, sendMessage, _stream, 'host', user)\n\t\t\t}  \n\t\t\tif (type == \"answer\" && response.data.target=='guest' && response.sender == pcRef.current?.receiver){\n\t\t\t\tconsole.log('(remote)3 answer')\n\t\t\t\tconst answerDescription = new RTCSessionDescription(response.data.rtcMessage);\n\t\t\t\tawait pcRef.current.pc.setRemoteDescription( answerDescription );\n\t\t\t\tconst streams = pcRef.current.pc.getRemoteStreams()\n\t\t\t\tsetStream(streams[streams.length - 1])\n\t\t\t\tsendMessage({type:'end', receiver:pcRef.current.receiver, data:{}})\n\t\t\t}\n\t\t\tif (type == \"call\" && response.sender == pcRef.current?.receiver){\n\t\t\t  console.log('2 call')\n\t\t\t  const peerConnection = pcRef.current.pc\n\t\t\t  setUser({name:response.data.name})\n\t\t\t  if (!peerConnection)\n\t\t\t\treturn\n\t\t\t  peerConnection.addEventListener( 'icecandidate', (event:any) => sendICEcandidate(event, sendMessage, response.sender, 'host'));\n\t\t\t  const offerDescription = new RTCSessionDescription(response.data.rtcMessage);\n\t\t\t  await peerConnection.setRemoteDescription( offerDescription );\n\t\t\t  const answerDescription = await peerConnection.createAnswer( sessionConstraints );\n\t\t\t  await peerConnection.setLocalDescription( answerDescription );\n\t\t\t  sendMessage({type:'answer', receiver:pcRef.current.receiver, data:{target:'host', rtcMessage:peerConnection.localDescription}})\n\t\t\t  // Here is a good place to process candidates.\n\t\t\t  const streams = pcRef.current.pc.getRemoteStreams()\n\t\t\t  setStream(streams[streams.length - 1])\n\t\t\t}\n\t\t\tif (type == \"ICEcandidate\" && response.data.target=='guest' && response.sender == pcRef.current?.receiver)\n\t\t\t  onICEcandidate(pcRef.current.pc, response)\n\t\t},\n\t\tCustomRTCView,\n\t\tuser,\n\t\tisPlay\n\t}\n}","import {StyleSheet} from \"react-native\";\nexport {useLocalCam, useRemoteCam} from \"./p2p\"\n\nexport const camStyle = StyleSheet.create({\n\tcontainer:{ flex: 1},\n\tcam:{ flex: 1, height:'100%'},\n\tbottonContainer: {position:\"absolute\", width:'100%', height:'100%', justifyContent:'flex-end'},\n\tbuttonBar: { flexDirection: \"row\", justifyContent: \"space-around\" },\n\tlabel: {backgroundColor:'#0008', color:'white', paddingHorizontal:5},\n})","import React, { useEffect } from \"react\";\nimport {Button, View, Text} from \"react-native\";\nimport useAuthContext from \"../../hooks/useAuthContext\";\n\nimport useWebsocketContext from \"./useWebsocketContext\";\nimport { useLocalCam, camStyle} from \"./webrtc\";\n\n\nexport default (props:{mode?:'camera'|'display'|null})=>{\n  const {auth} = useAuthContext()\n  const {lastJsonMessage, sendJsonMessage} = useWebsocketContext()\n  const {start, stop, websocketOnMessage, CustomRTCView, isPlay} = useLocalCam(sendJsonMessage)\n  useEffect(()=>{\n    auth.user && lastJsonMessage && websocketOnMessage(lastJsonMessage, auth.user)\n  }, [lastJsonMessage, auth])\n  useEffect(()=>{\n    if(props.mode){\n      auth.user && start(auth.user, undefined, props.mode)\n    }\n    else if(props.mode===null){\n      isPlay && stop()\n    }\n  }, [auth, props.mode])\n  useEffect(()=>{\n    return ()=>{isPlay && stop()}\n  })\n  return (\n    <View style={camStyle.container}>\n      <CustomRTCView style={camStyle.cam}/>\n      <View style={camStyle.bottonContainer}>\n        <View style={camStyle.buttonBar}>  \n        </View>\n        {(props.mode === undefined || isPlay) &&<View style={{flexDirection:'row'}}><Text style={camStyle.label}>{auth.user?.name}</Text></View>}\n        <View style={camStyle.buttonBar}>\n          {props.mode === undefined && !isPlay && <Button title=\"Start\" onPress={()=>auth.user && start(auth.user)} />}\n          {props.mode === undefined && isPlay && <Button title=\"Stop\" onPress={stop} />}\n        </View>\n      </View>\n    </View>\n  );\n}\n","import React from 'react'\nimport { TouchableOpacity } from \"react-native-gesture-handler\"\nimport CommonSection from \"./CommonSection\"\nimport { Image, Linking } from \"react-native\"\nimport { View, Text } from \"./Themed\"\nimport { Link } from \"../types\"\n\n\n\nexport default ({link, isMobile}:{link:Link, isMobile:boolean})=>{\n    return <CommonSection containerStyle={{marginHorizontal:0}} bodyStyle={{padding:0}}>\n    <TouchableOpacity onPress={()=>Linking.openURL(link.url)} style={{flexDirection:'row'}} containerStyle={{width:'100%'}}>\n        {link.image && <Image source={{uri:link.image}} resizeMode=\"cover\" style={{ width:'100%', maxWidth:isMobile?120:150, maxHeight:isMobile?120:150, borderWidth:1}}/>}\n        <View style={{flex:1, marginHorizontal:20}}>\n        <Text style={{fontSize:20}}>{link.title}</Text>\n        <Text style={{fontSize:14}}>{link.description}</Text>\n        <Text style={{fontSize:12}}>{link.url}</Text>\n        </View>\n    </TouchableOpacity>\n    </CommonSection>\n}","import React, { useState, useEffect, } from \"react\";\nimport {Button,Text, TextInput, View} from \"react-native\";\nimport useWebsocketContext from \"./useWebsocketContext\";\nimport { useRemoteCam, camStyle} from \"./webrtc\";\n\nexport default (props:{receiver?:string})=>{\n  const [receiver, setReceiver] = useState('')\n  const {lastJsonMessage, sendJsonMessage} = useWebsocketContext()\n  const {start, stop, websocketOnMessage, CustomRTCView, isPlay, user} = useRemoteCam(sendJsonMessage)\n  useEffect(()=>{\n    lastJsonMessage && websocketOnMessage(lastJsonMessage)\n  }, [lastJsonMessage])\n  useEffect(()=>{\n    if(props.receiver){\n      start(props.receiver)\n    }\n    return ()=>stop()\n  }, [props.receiver])\n  return (\n    <View style={camStyle.container}>\n      <CustomRTCView style={camStyle.cam}/>\n      <View style={camStyle.bottonContainer}>\n        <View style={camStyle.buttonBar}>\n        </View>\n        {(props.receiver ===undefined || isPlay) &&\n          <View style={{flexDirection:'row'}}>{\n            (props.receiver || isPlay)?\n            <Text style={camStyle.label}>{user?.name}</Text>:\n            <>\n              <Text style={{borderWidth:1}}>Receiver:&nbsp;</Text>\n              <TextInput style={{borderWidth:1, flex:1}} value={receiver} onChangeText={setReceiver}/>\n            </> \n          }</View>}\n        <View style={camStyle.buttonBar}>\n          {props.receiver === undefined && !isPlay && <Button title=\"Start\" onPress={()=>start(receiver)} />}\n          {props.receiver === undefined && isPlay && <Button title=\"Stop\" onPress={stop} />}\n        </View>\n      </View>\n    </View>\n  );\n}\n\n","import React, {useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState} from 'react';\nimport { StackScreenProps } from '@react-navigation/stack';\nimport { StyleSheet, View } from 'react-native';\nimport CommonSection from '../../components/CommonSection';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { FlatList, TextInput } from 'react-native-gesture-handler';\nimport CommonButton from '../../components/CommonButton';\nimport useMessengerContentList, { MessengerContentPage, useMessengerContentMutation } from '../../hooks/lists/useMessengerContent.List';\nimport useAuthContext from '../../hooks/useAuthContext';\nimport HeaderRight from '../../components/HeaderRight';\nimport useMessengerMemberList, { useMessengerMemberMutation } from '../../hooks/lists/useMessengerMemberList';\nimport { navigate } from '../../navigation';\nimport Colors from '../../constants/Colors';\nimport useColorScheme from '../../hooks/useColorScheme';\nimport { Text, View as ThemedView } from '../../components/Themed' \nimport Hyperlink from 'react-native-hyperlink'\nimport useMessengerChannelList from '../../hooks/lists/useMessengerChannelList';\nimport LocalCam from '../../lib/react-native-webrtc/LocalCam';\nimport useIsMobile from '../../hooks/useIsMobile';\nimport LinkPreview from '../../components/LinkPreview';\nimport {default as useRtcContext, WebSocketProvider as RtcProvider} from \"../../lib/react-native-webrtc/useWebsocketContext\";\nimport RemoteCam from '../../lib/react-native-webrtc/RemoteCam';\nimport lang from '../../lang'\nimport Avatar from '../../components/Avatar';\n\ntype VideoCallProps = {channel_id:number, videoMode:'camera'|'display'|null}\n\nconst VideoCallContainer = ({channel_id, videoMode}:VideoCallProps)=>{\n  const [guests, setGuests] = useState<string[]>([])\n  const { lastJsonMessage, sendJsonMessage } = useRtcContext()\n  useEffect(()=>{\n    if(lastJsonMessage !=null){\n      if(lastJsonMessage['type']=='connection'){\n        sendJsonMessage({'type':'broadcast', 'data':{'channel_id':channel_id}})\n      }\n      if(lastJsonMessage['type']=='broadcast_guest' || lastJsonMessage['type']=='broadcast_host'){\n        setGuests([...guests, lastJsonMessage['sender']])\n      }\n      if(lastJsonMessage['type']=='broadcast_disconnect'){\n        const channel_name = lastJsonMessage['sender']\n        const exist = guests.find(v=>v == channel_name)\n        exist && setGuests(guests.filter(v=>v != channel_name))\n      }\n    }\n  }, [lastJsonMessage])\n  return lastJsonMessage !==undefined ?<View style={[\n      {flexDirection: 'row', justifyContent:'center', borderColor:Colors.borderColor, borderRadius:10, paddingTop:10, backgroundColor:'white'},\n      videoMode!==null?{borderTopWidth:1}:{}]}>\n      {guests.map((receiver, i)=><View key={i} style={{maxWidth:'33%', flexDirection: 'row', marginHorizontal:10, flex:1}}>\n        <RemoteCam receiver={receiver}/>\n      </View>)}\n      <View style={{maxWidth:'33%', flexDirection: 'row', marginHorizontal:10, flex:1}}>\n        <LocalCam mode={videoMode}/>\n      </View>\n    </View>:<></>\n}\n\nconst VideoCallSection = React.memo(({channel_id, videoMode}:VideoCallProps)=>{\n  return <RtcProvider disable={videoMode==null}>\n    <VideoCallContainer channel_id={channel_id} videoMode={videoMode}/>\n  </RtcProvider>\n})\n\n\nconst MessengerContentPageItem = React.memo((props:MessengerContentPage & {ownerId?:number})=>{\n  const isMobile = useIsMobile()\n  let nextPage = props.next;\n    while(nextPage?.next && nextPage.current.length==0){\n      nextPage = nextPage.next\n    }\n    const nextContent = nextPage?.current[0]\n    return <View style={{flexDirection: 'column-reverse'}}>\n      \n      {props.current.map((content, index2)=>{\n        const next = index2 + 1 < props.current.length?props.current[index2+1]:nextContent\n        const created:string = content.created.slice(0, 16)\n        const date = created.slice(0, 10)\n        const isSystem = content.user == null\n        const isFirst = next==undefined || (content.user != next.user || created != next.created.slice(0, 16))\n        const isSelf = props.ownerId == content.user\n        const dayChanged = next==undefined || date != next.created.slice(0, 10)\n        if (isSystem)\n          return <View key={content.id} style={{flexDirection:'row', justifyContent:'center', width:'100%', marginVertical:5}}>\n            <Text>{content.message_set[0].content}</Text>\n          </View>\n        return <View key={content.id}>\n          {dayChanged?<View style={{flexDirection:'row', justifyContent:'center', width:'100%'}}><Text>{date}</Text></View>:undefined}\n          <View key={content.id} style={{flexDirection:'row', justifyContent:isSelf?'space-between':'flex-start', width:'100%'}}>\n            {isFirst && !isSelf? <View style={{marginTop:3, marginLeft:12}}><Avatar name={content.name} userId={content.user} size={36}/></View>:<View style={{width:48}}/>}\n            <CommonSection outerContainerStyle={{width:undefined, maxWidth:'90%'}} title={isFirst?content.name:undefined} titleStyle={{flex:undefined}} bodyStyle={{padding:10}} subtitle={`${created.slice(11)}`}>\n              {/* @ts-ignore */}\n              <Hyperlink linkDefault={ true } style={{wordBreak:\"break-word\"}} linkStyle={{color: '#12b886'}}>\n                <Text>{content.message_set[0].content}</Text>\n              </Hyperlink>\n              {content.link_set.map((link, linkIndex)=><LinkPreview key={linkIndex} link={link} isMobile={isMobile}/>)}\n            </CommonSection>\n          </View>\n        </View>\n      })}\n    </View>\n\n})\n\nexport default function ChatScreen({navigation, route}: StackScreenProps<any, 'Chat'>) {\n  const channel_id = route?.params?.id\n  const height = useRef(0)\n  const inputRef = useRef<TextInput>(null)\n  const {auth} = useAuthContext()\n  const channel = useMessengerChannelList(auth)?.find(v=>v.id==parseInt(channel_id))\n  const {data, fetchNextPage } = useMessengerContentList(channel_id)\n  const memberList = useMessengerMemberList(channel_id)\n  const member_id = useMemo(()=>memberList?.find(v=>v.user == auth.user?.id)?.id, [auth, memberList])\n  const messengerMemberMutation = useMessengerMemberMutation()\n  const [value, setValue] = useState('')\n  const [autoFocus, setAutoFocus] = useState(true)\n  const [videoMode, setVideoMode] = useState<'camera'|'display'|null>(null)\n  const theme = useColorScheme()\n  const postValue = ()=>{\n    if (value.length>0){\n      contentMutation.create({channel:channel_id, user:auth.user?.id, content:value})\n      setValue('')\n      setAutoFocus(true)\n    }\n  }\n  const toggleVideoMode = (mode:'camera'|'display')=>{\n    setVideoMode(videoMode!=mode?mode:null)\n  }\n  const contentMutation = useMessengerContentMutation()\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      headerRight: ()=> <HeaderRight extra={[\n        {title:lang('invite'), onPress:()=>{navigate(\"InviteScreen\", {id:channel_id})}},\n        {title:lang('leave'), onPress:()=>{member_id && messengerMemberMutation.leave(member_id);back()}}\n      ]}/>,\n      title: channel?.name\n    });\n  }, [navigation, route, member_id]);\n\n  const renderItem = useCallback(({item, index}:{item:MessengerContentPage, index:number})=><MessengerContentPageItem {...item} ownerId={auth.user?.id}/>, [auth])\n  \n  const back = ()=>{\n    if(navigation.canGoBack())\n        navigation.goBack()\n      else{\n        navigation.navigate('HomeScreen', {tab:2})\n      }\n  }\n  useEffect(()=>{\n    if (!(channel_id))\n      back()\n  }, [])\n  useEffect(()=>{\n    if(autoFocus){\n      (inputRef.current as any).focus()\n      setAutoFocus(false)\n    }\n  }, [autoFocus])\n\n  return <View style={{flex:1, alignItems:'center'}}>\n      <View style={{width:'100%', flex:1}}>\n        <FlatList\n          style={{width:'100%', flexDirection: 'column-reverse'}}\n          contentContainerStyle={{padding:10, flexGrow:1, flexDirection: 'column-reverse'}}\n          data={data?.pages}\n          renderItem={renderItem}\n          onScroll={(e)=>{\n            if (e.nativeEvent.contentOffset.y + e.nativeEvent.contentSize.height - height.current < 1)\n              fetchNextPage()\n          }}\n          onLayout={(p)=>{height.current = p.nativeEvent.layout.height}}\n        />\n        {/* <CommonButton/> */}\n      </View>\n      <ThemedView style={{width:'100%'}}>\n        <VideoCallSection channel_id={channel_id} videoMode={videoMode}/>\n        <View style={{bottom:0, width:'100%', alignItems:'center'}}>\n          <View style={{width:'100%',flexDirection:'row', paddingTop:15, paddingBottom:10, paddingHorizontal:19}}>\n            <TextInput ref={inputRef} value={value} onChangeText={setValue} style={{\n              flex:1, borderWidth:1, height:40, borderRadius:6, borderColor:Colors.borderColor, backgroundColor:Colors[theme].background, color:Colors[theme].text\n            }} onSubmitEditing={postValue} blurOnSubmit={true}/>\n            <CommonButton title={'💬'} onPress={postValue}/>\n            <CommonButton title={'📹'} onPress={()=>toggleVideoMode('camera')}/>\n            <CommonButton title={'🖥️'} onPress={()=>toggleVideoMode('display')}/>\n          </View>\n        </View>\n      </ThemedView>\n  </View>\n}\n","import React, {useCallback, useRef} from 'react';\nimport { StackScreenProps } from '@react-navigation/stack';\nimport { StyleSheet, Text, Button, View} from 'react-native';\n\n\nexport default function TabOneScreen({\n  navigation\n}: StackScreenProps<any, 'TabOne'>) {\n  return <View style={{padding:10}}>\n    \n  </View>\n}\n\nconst styles = StyleSheet.create({\n  Panel_Button_Text: {\n    textAlign: 'center',\n    color: '#fff',\n    fontSize: 21\n  },\n  Panel_Holder: {\n    borderWidth: 1,\n    borderColor: '#888',\n    marginVertical: 5\n  }\n})","import React, { useMemo } from 'react';\n\nimport { TextProps, StyleProp } from 'react-native';\nimport {View, Text } from './Themed'\nimport useResizeWindow from '../hooks/useResizeWindow';\n\ntype Props = {\n  name: string,\n  width?:number,\n  children: React.ReactNode\n  textStyle?: StyleProp<TextProps>\n}\n\nexport default function RowField(props:Props) {\n  const windowType = useResizeWindow()\n  const rowStyle = useMemo(()=>windowType=='landscape'?\n    {flexDirection:'row', alignItems: 'center', justifyContent:'space-between'}:\n    {flexDirection:'column', alignItems:'flex-start'} as any\n  , [windowType])\n  return (\n    <View style={[{paddingVertical:5, width:'100%'}, rowStyle]}>\n        <Text style={[windowType=='landscape'?{flex:1}:{width:'100%'},{paddingHorizontal: 15, fontSize:16}, props.textStyle]}>{props.name}</Text>\n        <View style={[windowType=='landscape'?{flex:6}:{width:'100%'},{paddingHorizontal: 15}]}>\n          <View style={{width:props.width}}>\n            {props.children}\n          </View>\n        </View>\n    </View>\n  )\n}","import React from 'react';\nimport { StyleProp, TextStyle } from 'react-native';\nimport { CustomTextInputProps } from '../types';\nimport CommonTextInput from './CommonTextInput';\nimport RowField from './RowField';\n\nexport default function TextField(props:CustomTextInputProps & {name: string, width?:any, textStyle?:StyleProp<TextStyle>}) {\n  return (\n    <RowField name={props.name} width={props.width} textStyle={props.textStyle}>\n      <CommonTextInput {...props} />\n   </RowField>\n  )\n}","import React, {useState, useEffect } from 'react';\nimport { StackScreenProps } from '@react-navigation/stack';\nimport { StyleSheet } from 'react-native';\nimport CommonSection from '../components/CommonSection';\nimport { View, Text } from '../components/Themed';\nimport CommonButton from '../components/CommonButton';\n// import useBoardChannelList, { useBoardChannelMutation } from '../hooks/lists/useBoardChannelList';\nimport useAuthContext from '../hooks/useAuthContext';\nimport { navigate } from '../navigation';\nimport { Channel } from '../types';\nimport useMessengerChannelList, { useMessengerChannelMutation } from '../hooks/lists/useMessengerChannelList';\nimport TextField from '../components/TextField';\nimport lang from '../lang'\n\nexport default function ChannelEditScreen({navigation, route}: StackScreenProps<any, 'ChannelEdit'>) {\n  const id = route?.params?.id\n  const type = route?.params?.type\n  const {auth} = useAuthContext()\n  const channelList = useMessengerChannelList(auth)\n  const channelMutation = useMessengerChannelMutation()\n  const channel = channelList?.find(v=>v.id==id)\n  const [name, setName] = useState('')\n  const [description, setDescription] = useState('')\n  const back = ()=>{\n    if(navigation.canGoBack())\n        navigation.goBack()\n      else{\n        navigation.replace('Main')\n      }\n  }\n  useEffect(()=>{\n    if (channel){\n      setName(channel.name)\n      setDescription(channel?.description || '')\n    }\n  }, [channel])\n  return <CommonSection outerContainerStyle={{alignSelf:'center'}}>\n    <View style={{justifyContent:'space-around'}}>\n    <Text style={{fontSize:20}}>{lang('Channel')}</Text>\n    </View>\n    <View style={styles.separator} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />\n    <View style={{width:'100%'}}>\n      <TextField name={lang('Channel Name')} value={name} setValue={setName} width={'60%'}/>\n      <TextField name={lang('Description')} value={description} setValue={setDescription} multiline width={'60%'}/>\n    </View>\n    <View style={{width:'100%', flexDirection:'row', justifyContent:'flex-end'}}>\n      <CommonButton title={lang('save')} onPress={()=>{\n        if(auth?.user?.id && auth.groupId){\n          const newChannel:Channel = {id, name, description, type, owner:auth?.user?.id, group:auth.groupId};\n          (id?channelMutation.update(newChannel):channelMutation.create(newChannel)).then(v=>navigate(\"Main\", {\n            screen:v.type == 'messenger'?'MessengerScreen':'BoardScreen',\n            params:{id:v.id}\n          }))\n        }\n      }}/>\n      <CommonButton title={lang('cancel')} style={{marginHorizontal:5}} onPress={back}/>\n    </View>\n  </CommonSection>\n}\n\nconst styles = StyleSheet.create({\n  field:{\n    width:'50%',\n    flexDirection:'row',\n    padding:10,\n  },\n  separator: {\n    marginBottom: 20,\n    height: 1,\n    width: '100%',\n  },\n})","import React, {useRef,MutableRefObject, useMemo, useState } from 'react';\nimport { StackScreenProps } from '@react-navigation/stack';\nimport { View, Text } from '../components/Themed';\nimport CommonSection from '../components/CommonSection';\nimport useAuthContext from '../hooks/useAuthContext';\nimport useUserMembershipList from '../hooks/lists/useUserMembershipList';\nimport { UserMembership } from '../types';\nimport CommonButton from '../components/CommonButton';\nimport useMessengerMemberList, { useMessengerMemberMutation } from '../hooks/lists/useMessengerMemberList';\nimport { renderMemberItem } from '../tabs/MemberTab';\nimport { navigate } from '../navigation';\nimport lang from  '../lang'\n\nconst InviteItem = (props:{item:UserMembership, selectedRef:MutableRefObject<Set<number>>})=>{\n  const [selected, setSelected] = useState(props.selectedRef.current.has(props.item.id))\n  return <View style={selected?{borderWidth:1, borderColor:'blue'}:{}}>\n    {renderMemberItem(props.item, (item)=>{\n      if (selected){\n        setSelected(false)\n        props.selectedRef.current.delete(item.id)\n      }\n      else{\n        setSelected(true)\n        props.selectedRef.current.add(item.id)\n      }\n    })}\n  </View>\n\n}\n\nexport default function InviteScreen({navigation, route}: StackScreenProps<any, 'Invite'>) {\n  const id = route?.params?.id\n  const {auth} = useAuthContext()\n  const userList = useUserMembershipList(auth)\n  const memberList = useMessengerMemberList(id)\n  const messengerMemberMutation = useMessengerMemberMutation()\n  const selectedRef = useRef<Set<number>>(new Set())\n  const data = useMemo(()=>{\n    const memberSet = new Set(memberList?.map(v=>v.user))\n    return userList?.filter(v=>!memberSet.has(v.id))\n  }, [userList, memberList])\n\n\n  const back = ()=>{\n    if(navigation.canGoBack())\n      navigation.goBack()\n    else if (id)\n      navigate(\"ChatScreen\", {id})\n    else\n      navigation.replace('Main')\n  }\n\n  return <CommonSection outerContainerStyle={{alignSelf:'center'}}>\n    <View style={{backgroundColor:'white', 'width': '50%'}}>\n    {data?.map((item, index)=><InviteItem key={index} item={item} selectedRef={selectedRef}/>)}\n    </View>\n    <View style={[{width:'50%', flexDirection:'row', padding:10,}, {justifyContent:'flex-end'}]}>\n      <CommonButton title={lang('invite')} onPress={()=>{\n        messengerMemberMutation.invite({\n          channel_id:id,\n          user_ids:[...selectedRef.current]\n        })\n        back()\n      }}/>\n      <CommonButton title={lang('cancel')} onPress={back}/>\n    </View>\n  </CommonSection>\n}\n\n","import LoginScreen from \"./main/LoginScreen\";\nimport ChatScreen from \"./main/ChatScreen\";\nimport HomeScreen from \"./main/HomeScreen\";\nimport TabOneScreen from \"./main/TabOneScreen\";\n// import BoardScreen from \"../lib/blacktokki-board/BoardScreen\";\n// import BoardEditScreen from \"../lib/blacktokki-board/BoardEditScreen\";\nimport ChannelEditScreen from \"./ChannelEditScreen\"\nimport { Screens } from \"../types\";\nimport InviteScreen from \"./InviteScreen\";\nimport ProfileScreen from \"./ProfileScreen\";\nimport lang from \"../lang\"\n\nexport const main = {\n    HomeScreen:{\n        title:lang('home'),\n        component:HomeScreen,\n        path:'home',\n    },\n    ChatScreen:{\n        title:lang('chat'),\n        component:ChatScreen,\n        path:'chat'\n    },\n    // BoardScreen:{\n    //     title:'board',\n    //     component:BoardScreen,\n    //     path:'board'\n    // },\n    TabOneScreen:{\n        title:'tab one',\n        component:TabOneScreen,\n        path:'one'\n    },\n} as Screens\n\nexport const login = {\n    LoginScreen:{\n        path: 'login',\n        title: lang('Sign in'),\n        component:LoginScreen\n    },\n} as Screens\n\nexport const modal = {\n    // BoardEditScreen:{\n    //     title:'board',\n    //     component:BoardEditScreen,\n    //     path:'modal/board'\n    // },\n    ChannelEditScreen:{\n        title:lang('channel'),\n        component:ChannelEditScreen,\n        path:'modal/channel'\n    },\n    InviteScreen:{\n        title:lang('invite'),\n        component:InviteScreen,\n        path:'modal/invite'\n    },\n    ProfileScreen:{\n        title:lang('profile'),\n        component:ProfileScreen,\n        path:'modal/profile'\n    }\n} as Screens","import React, {useLayoutEffect} from 'react';\nimport { StackScreenProps } from '@react-navigation/stack';\nimport { StyleSheet, Text, Button, View} from 'react-native';\nimport { Text as StyledText } from 'react-native-paper';\nimport {TabViewNavigator} from '../../navigation/DrawerNavigator';\nimport useResizeWindow from '../../hooks/useResizeWindow';\nimport { bottomTabs } from '../../tabs';\nimport { navigate } from '../../navigation';\nimport HeaderRight from '../../components/HeaderRight';\nimport TextButton from '../../components/TextButton';\nimport Colors from '../../constants/Colors';\nimport useColorScheme from '../../hooks/useColorScheme';\nimport lang from '../../lang'\n\n// navigate(\"BoardEditScreen\", {channel_id:item.channel, id:item.id})\n// deleteBoardContent(item.id).then(()=>navigate('BoardScreen', {id:item.channel}))\n\nexport default function HomeScreen({navigation, route}: StackScreenProps<any, 'Home'>) {\n  const windowType = useResizeWindow();\n  const theme = useColorScheme()\n  const color = Colors[theme].text\n  const options = [\n    {title:'member', headerRight:()=><HeaderRight/>},\n    {title:'messenger', headerRight:()=><HeaderRight extra={[{title:'create', onPress:()=>navigate(\"ChannelEditScreen\", {type:\"messenger\"})}]}/>},\n    // {title:'board', headerRight:()=><HeaderRight extra={[{title:'create', onPress:()=>navigate(\"ChannelEditScreen\", {type:\"board\"})}]}/>},\n    {title:'config', headerRight:()=><HeaderRight/>}\n  ]\n  \n  useLayoutEffect(() => {\n    const index = route?.params?.tab | 0\n    navigation.setOptions(windowType == 'portrait'?options[index]:{\n      title: lang('home'),\n      headerRight: ()=><HeaderRight/>\n    });\n  }, [navigation, route, windowType]);\n  return windowType == 'landscape'?\n    <View style={{flex:1, justifyContent:'center', alignItems:'center'}}>\n      <View style={{width:'80%', height:'80%'}}>\n        <StyledText style={{fontSize:32, color}}>Tokki Tok</StyledText>\n        <View style={{backgroundColor:Colors.borderColor, height:1, width:'100%'}}/>\n        <View style={{flex:1, alignItems:'flex-start'}}>\n          {/* <Text style={{fontSize:20, color:'gray'}}>Welcome! This is a messenger for teams.</Text>*/}\n          <Text style={{fontSize:24}}> </Text>\n          <Text style={{fontSize:24, fontWeight:'500', color}}>{lang('Quick Start')}</Text>\n          <TextButton title={lang('+ New Messenger')} textStyle={{fontSize:20, color}} style={{paddingLeft:0, borderRadius:20}} onPress={()=>navigate(\"ChannelEditScreen\", {type:\"messenger\"})}/>\n          {/* <TextButton title='+ New Board' textStyle={{fontSize:20}} style={{paddingLeft:0, borderRadius:20}} onPress={()=>navigate(\"ChannelEditScreen\", {type:\"board\"})}/> */}\n        </View>\n      </View>\n    </View>:\n    <TabViewNavigator tabs={bottomTabs} tabBarPosition=\"bottom\" index={parseInt(route.params?.['tab'] || 0)} onTab={(index)=>{navigation.setParams({tab:index})}}/>\n}\n\n","import React, {useCallback, useEffect, useRef} from 'react';\nimport { StackScreenProps } from '@react-navigation/stack';\nimport { View} from '../components/Themed';\nimport Profile from '../components/Profile';\nimport useAuthContext from '../hooks/useAuthContext';\nimport useUserMembershipList from '../hooks/lists/useUserMembershipList';\nimport { useMessengerChannelMutation } from '../hooks/lists/useMessengerChannelList';\nimport CommonButton from '../components/CommonButton';\nimport { Channel } from '../types';\nimport { navigate } from '../navigation';\nimport lang from '../lang'\n\nexport default function ProfileScreen({\n  navigation, route\n}: StackScreenProps<any, 'Profile'>) {\n  const id = route?.params?.id\n  const {auth} = useAuthContext()\n  const userList = useUserMembershipList(auth)\n  const user = userList?.find(v=>v.id==id)\n  const channelMutation = useMessengerChannelMutation()\n  const back = ()=>{\n    if(navigation.canGoBack())\n        navigation.goBack()\n      else{\n        navigation.replace('Main')\n      }\n  }\n  useEffect(()=>{\n    if (!(id && user) && userList)\n      back()\n  }, [userList])\n  return user?<View style={{padding:10}}>\n    \n    <Profile username={user.username} name={user.name} userId={user.id} />\n    <CommonButton title={lang('create messenger')} onPress={()=>{\n      if(auth?.user?.id && auth.groupId){\n        const newChannel:Channel = {name:`${auth.user.name}, ${user.name}`, type:'messenger', owner:auth?.user?.id, group:auth.groupId};\n        channelMutation.create(newChannel).then(v=>navigate(\"Main\", {screen:\"MessengerScreen\", params: {id:v.id}}))\n      }\n    }}/>\n  </View>:<></>\n}\n","import React, { Context, createContext,  useContext, useEffect, useState } from \"react\"\nimport useWebSocket from \"react-use-websocket\"\nimport { SendJsonMessage } from \"react-use-websocket/dist/lib/types\"\n// @ts-ignore\nimport {API_URL} from \"@env\"\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { AppState, AppStateStatus } from \"react-native\";\n\ntype WebsocketContextType = {lastJsonMessage:any, sendJsonMessage:SendJsonMessage }\nconst WebSocketContext = createContext<WebsocketContextType>({lastJsonMessage:undefined, sendJsonMessage:()=>{}});\nconst [SCHEMA, DOMAIN] = `${API_URL}`.split('://')\n\nexport const WebSocketInternalProvider = ({children, path, Context, useBackground}:{children:React.ReactNode, path:string, Context:Context<WebsocketContextType>, useBackground?:boolean})=>{\n  const [token, setToken] = useState<string|null>(null)\n  const [isActive, setIsActive] = useState<boolean>(useBackground || AppState.currentState == 'active')\n  const { lastJsonMessage, sendJsonMessage } = useWebSocket(`${SCHEMA=='https'?'wss':'ws'}://${DOMAIN}/${path}`,{\n    shouldReconnect: (closeEvent) => true,\n    protocols: token?['Authorization',  token]:undefined,\n    onOpen: (e)=>{console.log(`success websocket connection(${path})`)},\n    onClose: (e)=> {console.log(`closed websocket connection(${path})`)},\n  }, isActive && token!=null)\n  useEffect(()=>{\n    AsyncStorage.getItem('Authorization').then(setToken)\n    const onChange = (nextState:AppStateStatus)=>setIsActive(useBackground || nextState == 'active')\n    AppState.addEventListener(\"change\", onChange)\n    return ()=>AppState.removeEventListener(\"change\", onChange)\n  }, [])\n  return (token==null)?<>{children}</>:<Context.Provider value={{lastJsonMessage, sendJsonMessage}}>\n      {children}\n    </Context.Provider>\n}\n\nexport const WebSocketProvider = React.memo(({disable, children}:{disable?:boolean, children:React.ReactNode})=>{\n  return disable?<>{children}</>:<WebSocketInternalProvider path={'messenger/ws/'} Context={WebSocketContext}>\n    {children}\n  </WebSocketInternalProvider>\n})\n\nexport default ()=>{\n  const webSocketContext = useContext(WebSocketContext)\n  return webSocketContext\n}\n\n","import React, { useState } from 'react';\nimport { StyleSheet} from 'react-native';\nimport { CustomButtonProps } from '../types';\nimport CommonButton from './CommonButton';\n\nexport default (props:CustomButtonProps)=>{\n    return <CommonButton {...props} style={[styles.style, props.style]}/>\n}\n\nconst styles = StyleSheet.create({\n    style:{\n        borderRadius:6, \n        backgroundColor: 'transparent',\n        borderWidth:0\n    },\n});\n","import { Notification } from '../types';\nimport axios from './axios';\n\nexport const getNotification = async (user_id:number)=>{\n    const data = (await axios.get(`/api/v1/notifications/?type=WEB&user=${user_id}`) ).data as Notification[]\n    return data.length?data[0]:undefined\n}\n\nexport const postNotification = async(notification:Notification)=>{\n    return (await axios.post(`/api/v1/notifications/`, notification)).data as Notification\n}\n\nexport const putNotification = async(notification:Notification)=>{\n    return (await axios.put(`/api/v1/notifications/${notification.id}/`, notification)).data as Notification\n}","import { Platform } from 'react-native';\n//@ts-ignore\nimport useMobileDetect from 'use-mobile-detect-hook';\n\nexport default ()=>{\n    const detectMobile = useMobileDetect();\n    return (detectMobile.isMobile() || Platform.OS == 'android' || Platform.OS == 'ios') as boolean\n}","import * as React from 'react';\nimport { View } from './Themed';\nimport { StyleSheet, StyleProp, ViewStyle, TextStyle, Pressable } from 'react-native';\nimport Colors from '../constants/Colors';\n\nexport type ItemParamList = {\n    outerContainerStyle?:StyleProp<TextStyle>\n    containerStyle?:StyleProp<ViewStyle>\n    bodyStyle?:StyleProp<ViewStyle>\n    children?: React.ReactNode\n    onPress?: ()=>void\n}\n\nexport default function CommonItem(props:ItemParamList){\n  const [hover, setHover] = React.useState(false)\n  const [press, setPress] = React.useState(false)\n  return (\n    <Pressable\n      style={[styles.outerContainer ,props.outerContainerStyle, (press)?{backgroundColor:'rgb(242,242,242)'}:{}]}\n      onPressIn={()=>{setPress(true)}}\n      onPressOut={()=>{setPress(false);props.onPress?.()}}\n       //@ts-ignore\n       onHoverIn={()=>setHover(true)}\n       onHoverOut={()=>setHover(false)}\n    >\n        <View style={[styles.container ,props.containerStyle]}>\n            <View style={[styles.bodyView, props.bodyStyle]}>\n                <>{props.children}</>\n            </View>\n      </View>\n    </Pressable>\n    )\n}\n\nconst styles = StyleSheet.create({\n  outerContainer:{\n    width:'100%',\n    maxWidth:1080,\n    alignItems:'stretch',\n  },  \n  container: {\n      marginHorizontal:20,\n      backgroundColor:'transparent'\n    },\n    bodyView:{\n      width: '100%',\n      padding: 10,\n      minHeight: 40,\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderBottomWidth:1,\n      borderColor:Colors.borderColor,\n      backgroundColor:'transparent'\n    }\n  });\n  ","import { useQuery } from \"react-query\";\nimport { getUserMembershipList } from \"../../apis\";\nimport { Auth } from \"../useAuthContext\";\n\nexport default function useUserMembershipList(auth?:Auth){\n  const { data } = useQuery([\"UserMembershipList\", auth?.groupId] , async()=>auth?.groupId?(await getUserMembershipList(auth?.groupId)):[])\n  return data\n}","import * as React from 'react';\nimport { Avatar } from 'react-native-paper';\nimport { AvatarProps } from '../../types';\n\nconst normalizeHash = (hash: number, min: number, max: number) => {\n    return Math.floor((hash % (max - min)) + min);\n};\n\nconst stringToHSL = (str: string, initHash?:number) => {\n    let hash = initHash || 0;\n    for (let i = 0; i < str.length; i++) {\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    hash = Math.abs(hash);\n    return `hsl(${normalizeHash(hash, 0, 360)}, ${normalizeHash(hash, 0, 100)}%, ${normalizeHash(hash, 25, 75)}%)`;\n};\n\nexport default (props:AvatarProps) => {\n    const backgroundColor = stringToHSL(props.name, props.userId)\n    return <Avatar.Text style={{backgroundColor}} size={props.size} label={props.name.split(' ').map(v=>v[0]).join().toUpperCase()} />\n};","import React from 'react';\n// import { MaterialIcons } from \"@expo/vector-icons\"\nimport Avatar from '../lib/react-native-paper/Avatar';\nimport { AvatarProps } from '../types';\n\nexport default (props:AvatarProps)=>{\n    // return <MaterialIcons size={38} style={{ marginBottom: -3, marginRight:10 }} name='account-circle'/>\n    return <Avatar {...props}/>\n}\n\n","import React from \"react\"\nimport { View, Text } from \"../components/Themed\"\nimport CommonItem from \"../components/CommonItem\"\n// import useBoardChannelList from \"../lib/blacktokki-board/useBoardChannelList\"\nimport useMessengerChannelList from \"../hooks/lists/useMessengerChannelList\"\nimport useAuthContext from \"../hooks/useAuthContext\"\nimport { navigate } from \"../navigation\"\n\nconst DrawerTab = (props:{data:{name:string, onPress?:()=>void}[]})=><View style={{flex:1}}>\n    {props.data.map((item, index)=><CommonItem key={index} containerStyle={{marginHorizontal:0}} bodyStyle={{alignItems:'flex-start'}} onPress={item.onPress}>\n        <Text style={{marginLeft:20}}>{item.name}</Text>\n    </CommonItem>\n    )}\n</View>\n\nexport default {\n    Messenger:()=>{\n        const {auth} = useAuthContext()\n        const channelList = useMessengerChannelList(auth);\n        return <DrawerTab data={(channelList || []).map(item=>({...item, onPress:()=>navigate(\"ChatScreen\", {id:item.id})}))}/>\n    },\n    // Board:()=>{\n    //     const {auth} = useAuthContext()\n    //     const channelList = useBoardChannelList(auth);\n    //     return <DrawerTab data={(channelList || []).map(item=>({...item, onPress:()=>navigate(\"BoardScreen\", {id:item.id})}))}/>\n    // },\n}","import { Ionicons, FontAwesome } from \"@expo/vector-icons\"\nimport React from \"react\"\nimport { Text, View } from \"react-native\"\nimport CommonItem from \"../components/CommonItem\"\nimport useAuthContext from \"../hooks/useAuthContext\"\nimport useMessengerChannelList from \"../hooks/lists/useMessengerChannelList\"\nimport { navigate } from \"../navigation\"\n\nexport default ()=>{\n    const {auth} = useAuthContext()\n    const channelList = useMessengerChannelList(auth)\n    const today = (new Date()).toISOString().slice(0, 10)\n    return <View style={{flex:1, backgroundColor:'white'}}>\n        {channelList?.map((item, index)=>{\n            const date = item.last_message?.created.slice(0,10)\n            return <CommonItem key={index} bodyStyle={{flexDirection:'row', justifyContent:'space-between'}} onPress={()=>navigate(\"ChatScreen\", {id:item.id})}>\n                <View style={{flexDirection:'row'}}>\n                    <FontAwesome size={36} style={{ marginBottom: -3, marginRight:20 }} name='users'/>\n                    <View>\n                        <View style={{flexDirection:'row'}}>\n                            <Text style={{fontSize:18}}>{item.name}</Text>\n                            <Text style={{fontSize:18, opacity: 0.4, paddingLeft:5}}>{item.member_count}</Text>\n                        </View>\n                        <Text style={{fontSize:16, opacity: 0.4}}>{item.last_message?.content}</Text>\n                    </View>\n                </View>\n                <View>\n                    <Text style={{fontSize:14, opacity: 0.4, textAlign:'right'}}>{date==today?item.last_message?.created.slice(11,16):date}</Text>\n                    <Text style={{fontSize:14, textAlign:'right'}}>{item.unread_count?item.unread_count:' '}</Text>\n                </View>\n            </CommonItem>\n        })}\n    </View>\n}\n\nexport const MessengerIcon = <Ionicons size={30} style={{ marginBottom: -3 }} name='chatbox'/>","import React from \"react\";\nimport MemberTab, {MemberIcon} from \"./MemberTab\";\nimport OneTab, {ConfigIcon} from \"./OneTab\";\nimport DrawerTab  from './DrawerTab';\nimport MessengerTab, {MessengerIcon} from \"./MessengerTab\";\nimport lang from \"../lang\"\n// import BoardTab, {BoardIcon}  from \"../lib/blacktokki-board/BoardTab\";\n\nexport const bottomTabs = {\n    OneTab:{\n        title:lang('member'),\n        component:MemberTab,\n        icon:MemberIcon,\n    },\n    TwoTab:{\n        title:lang('messenger'),\n        component:MessengerTab,\n        icon:MessengerIcon\n    },\n    // ThreeTab:{\n    //     title:'board',\n    //     component:BoardTab,\n    //     icon:BoardIcon\n    // },\n    // FourTab:{\n    //     title:'config',\n    //     component:OneTab,\n    //     icon:ConfigIcon\n    // }\n} as Record<string, {title:string, component:React.ComponentType<any>, icon:JSX.Element}>\n\nexport const drawerTabs = {\n    TwoTab:{\n        title:lang('messenger'),\n        component:DrawerTab.Messenger,\n        icon:MessengerIcon\n    },\n    // ThreeTab:{\n    //     title:'board',\n    //     component:DrawerTab.Board,\n    //     icon:BoardIcon\n    // }\n} as Record<string, {title:string, component:React.ComponentType<any>, icon:JSX.Element}>","import { MaterialCommunityIcons } from \"@expo/vector-icons\"\nimport React from \"react\"\nimport { Text, View } from \"react-native\"\nimport CommonItem from \"../components/CommonItem\"\nimport useAuthContext from \"../hooks/useAuthContext\"\nimport useUserMembershipList from \"../hooks/lists/useUserMembershipList\"\nimport { UserMembership } from \"../types\"\nimport { navigate } from \"../navigation\"\nimport Avatar from \"../components/Avatar\"\n\nexport const renderMemberItem = (item:UserMembership, onPress?:(item:UserMembership)=>void)=> (\n    <CommonItem key={item.id} bodyStyle={{backgroundColor:'white', flexDirection:'row', justifyContent:'flex-start'}} onPress={onPress?()=>onPress(item):undefined}>\n        <View style={{marginTop:4, marginRight:12}}><Avatar name={item.name} userId={item.id} size={44}/></View>\n        <Text style={{fontSize:20, fontWeight:'400'}}>{item.name}</Text>\n    </CommonItem>\n)\n\nexport default ()=>{\n    const {auth} = useAuthContext()\n    const userList = useUserMembershipList(auth)\n    return <View style={{flex:1, backgroundColor:'white'}}>\n        {userList && userList.map(item=>renderMemberItem(item, (item)=>navigate(\"ProfileScreen\", {id:item.id})))}\n    </View>\n}\n\nexport const MemberIcon = <MaterialCommunityIcons size={32} style={{ marginBottom: -3 }} name='account'/>","import { useTheme } from '@react-navigation/native';\nimport React, { useState } from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { TabView, SceneMap,NavigationState, SceneRendererProps, TabBar } from 'react-native-tab-view';\nimport { navigate } from '.';\nimport Profile from '../components/Profile';\nimport TextButton from '../components/TextButton';\nimport Colors from '../constants/Colors';\nimport useResizeWindow from '../hooks/useResizeWindow';\nimport { drawerTabs } from '../tabs';\nimport { UserMembership } from '../types';\n\nexport const TabViewNavigator = (props:{tabs:typeof drawerTabs, tabBarPosition:\"top\"|\"bottom\", index?:number, onTab?:(index:number)=>void})=>{\n  const [index, setIndex] = React.useState(props.index || 0);\n  const entries = Object.entries(props.tabs)\n  const onTab = props.onTab\n  const icons = Object.assign({}, ...entries.map(([k, v])=>({[k]:v.icon})))\n  return <TabView\n    renderTabBar={(props:SceneRendererProps & {navigationState: NavigationState<any>})=>{\n      return <TabBar\n        {...props}\n        indicatorStyle={{ backgroundColor: \"#2196F3\" }}\n        style={{ backgroundColor:'white' }}\n        activeColor={'black'}\n        inactiveColor={'black'}\n        renderIcon={(scene)=>icons[scene.route.key]}\n        onTabPress={(scene)=>onTab?.(entries.findIndex(([k, v])=>k == scene.route.key))}\n      />\n    }}\n    navigationState={{ index, routes: entries.map(([k, v])=>({key:k, title:v.title}))}}\n    onIndexChange={setIndex}\n    renderScene={SceneMap(Object.assign({}, ...entries.map(([k, v])=>({[k]:v.component}))))}\n    tabBarPosition={props.tabBarPosition}\n  />\n}\n\nconst onAddList = [\n  ()=>navigate(\"ChannelEditScreen\", {type:\"messenger\"}),\n  ()=>navigate(\"ChannelEditScreen\", {type:\"board\"})\n]\n\nexport default ({user}:{user:UserMembership})=> {\n  const { colors } = useTheme();\n  const windowType = useResizeWindow();\n  const [index, setIndex] = useState(0);\n  return windowType=='landscape'?<View\n      style={[\n        styles.tabBar,\n        {\n          backgroundColor: colors.card,\n          borderTopColor: colors.border,\n        },\n        // tabBarStyle,\n      ]}\n      pointerEvents={false ? 'none' : 'auto'}\n    >\n      <Profile userId={user.id} username={user.username} name={user.name}/>\n      <View style={{flexDirection:'row-reverse'}}>\n          <TextButton title='+' textStyle={{fontSize:20}} style={{borderRadius:20}} onPress={onAddList[index]}/>\n      </View>\n      <View accessibilityRole=\"tablist\" style={styles.content}>\n        {Object.keys(drawerTabs).length>1 ? \n          <TabViewNavigator tabs={drawerTabs} tabBarPosition={\"top\"} onTab={setIndex}/>: \n          <View style={{borderTopWidth:1, flex:1, borderColor:colors.border}}>            \n            {Object.values(drawerTabs).map(drawerTab=>{const Tab = drawerTab.component; return <Tab key={drawerTab.title}/>})}\n          </View>\n        }\n      </View>\n    </View>:<View style={{width:0}}></View>\n}\n\n{/*<Text style={[styles.label, { color: d.isFocused ? colors.primary : '#222' }]}></Text> */}\n\nconst styles = StyleSheet.create({\n    tabBar: {\n      width:240,\n      elevation: 8,\n      borderRightWidth:1,\n      borderColor:Colors.borderColor\n    },\n    content: {\n      flex: 1,\n      flexDirection: 'row',\n    },\n    tab: {\n        flex: 1,\n        alignItems: 'center',\n    },\n    label: {\n        textAlign: 'center',\n        backgroundColor: 'transparent',\n      },\n  });","import React from 'react';\nimport {View} from 'react-native'\nimport {Text} from './Themed';\nimport { ProfileProps } from '../types';\nimport Avatar from './Avatar';\nimport TextButton from './TextButton';\nimport CommonTextInput from './CommonTextInput';\nimport { patchUser } from '../apis';\nimport useAuthContext from '../hooks/useAuthContext';\n\nexport default (props:ProfileProps)=>{\n    const [name, setName] = React.useState<string>()\n    const { auth, dispatch } = useAuthContext()\n    const isSelf = auth.user?.id == props.userId\n    const onChange = ()=>{\n        isSelf && patchUser({id:props.userId, name:name || ''}).finally(()=>{\n            setName(undefined)\n            dispatch({type:\"REFRESH\"})\n        })\n    }\n    console.log(props)\n    return <View style={{width:'100%', height:135, justifyContent:'space-evenly', alignItems:'center'}}>\n        <Avatar {...props} size={75}/>\n        {name===undefined?\n            <TextButton textStyle={{fontWeight:'bold', fontSize:15}} onPress={()=>isSelf && setName(props.name)} title={props.name} disabled={!isSelf}/>:\n            <CommonTextInput value={name} style={{textAlign:'center'}} setValue={setName} onBlur={onChange} onEndEditing={onChange} />}\n        <Text style={{fontWeight:'normal', fontSize:14}}>{props.username}</Text>\n    </View>\n}","import React, { useState } from 'react';\nimport { TextInput } from 'react-native';\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport { CustomTextInputProps } from '../types';\n\nexport default (props:CustomTextInputProps)=>{\n    const [contentHeight, setContentHeight] = useState<number>()\n    const minHeight = props.minHeight || 30\n    const theme = useColorScheme()\n    return <TextInput style={[{\n            borderColor:'#d0d7de', \n            fontSize:16, \n            borderWidth:1, \n            borderRadius:6, \n            paddingHorizontal:10, \n            paddingVertical:3, \n            backgroundColor:Colors[theme].background,\n            color:Colors[theme].text,\n            height:props.multiline?contentHeight:minHeight,\n        }, props.style]} \n        editable={!props.disabled} \n        value={props.value} \n        onChangeText={props.setValue}\n        onContentSizeChange={props.multiline?(e) => setContentHeight(Math.max(e.nativeEvent.contentSize.height, minHeight) + 2):undefined}\n        onBlur={()=>props.onBlur?.(props.value)}\n        onEndEditing={()=>props.onEndEditing?.(props.value)}\n        multiline={props.multiline}\n    />\n}","/**\n * Learn more about Light and Dark modes:\n * https://docs.expo.io/guides/color-schemes/\n */\n\nimport * as React from 'react';\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\n\nimport Colors from '../constants/Colors'\nimport useColorScheme from '../hooks/useColorScheme';\n\nexport function useThemeColor(\n  props: { light?: string; dark?: string },\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\n) {\n  const theme = useColorScheme();\n  const colorFromProps = props[theme];\n\n  if (colorFromProps) {\n    return colorFromProps;\n  } else {\n    return Colors[theme][colorName];\n  }\n}\n\ntype ThemeProps = {\n  lightColor?: string;\n  darkColor?: string;\n};\n\nexport type TextProps = ThemeProps & DefaultText['props'];\nexport type ViewProps = ThemeProps & DefaultView['props'];\n\nexport function Text(props: TextProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\n\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\n}\n\nexport function View(props: ViewProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\n\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\n}\n","import { createIntl, createIntlCache } from \"@formatjs/intl\";\nimport {I18nManager} from \"react-native\";\nimport * as RNLocalize from \"react-native-localize\";\n\nconst translations = {\n  ko: require(\"./ko.json\"),\n} as const;\n\ntype Translation = keyof typeof translations;\n\n// fallback if no available language fits\nconst fallback = { languageTag: \"en\", isRTL: false };\n\nconst { languageTag, isRTL } =\n  RNLocalize.findBestLanguageTag(Object.keys(translations)) ?? fallback;\n\n// update layout direction\nI18nManager.forceRTL(isRTL);\n\n// console.log(languageTag)\nconst intl = createIntl(\n  {\n    defaultLocale: \"en\",\n    locale: languageTag,\n    messages: translations[languageTag as Translation],\n  },\n  createIntlCache(),\n);\n\ntype TranslationParams = Parameters<(typeof intl)[\"formatMessage\"]>[1];\n\nexport default (key: string, params?: TranslationParams) => \n  intl\n    .formatMessage({ id: key, defaultMessage: key }, params)\n    .toString();","/**\n * Learn more about deep linking with React Navigation\n * https://reactnavigation.org/docs/deep-linking\n * https://reactnavigation.org/docs/configuring-links\n */\n\nimport { LinkingOptions } from '@react-navigation/native';\nimport * as Linking from 'expo-linking';\nimport {main, login, modal} from '../screens';\n\nconst ROOTPATH = 'tokki-tok'  // github repository name\n\nObject.values(modal).forEach(v=>v.path = ROOTPATH + '/' + v.path)\n\nexport default  {\n  prefixes: [Linking.makeUrl('/')],\n  config: {\n    screens: {\n      Main: {\n        screens:{\n          ...main,\n          ...login,\n          NotFound: '*',\n        },\n        path: ROOTPATH\n      },\n      ...modal\n    },\n  },\n} as LinkingOptions;\n","import { StackScreenProps } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport lang from '../lang'\n\nexport default function NotFoundScreen({\n  navigation,\n}: StackScreenProps<any, 'NotFound'>) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>{lang(\"This screen doesn't exist.\")}</Text>\n      <TouchableOpacity onPress={() => navigation.replace('HomeScreen')} style={styles.link}>\n        <Text style={styles.linkText}>{lang(\"Go to home screen!\")}</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  link: {\n    marginTop: 15,\n    paddingVertical: 15,\n  },\n  linkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n});\n","import React, { createContext, useContext, useEffect, useMemo, useRef, useState } from \"react\"\nimport firebase from \"firebase/app\";\nimport \"firebase/messaging\";\n//@ts-ignore\nimport {FCM_PUBLIC_VAPID_KEY, FCM_API_KEY} from \"@env\"\nimport { Notification as NotificationType, UserMembership } from \"../types\";\nimport { getNotification, postNotification, putNotification } from \"../apis/notification\";\nconst firebaseConfig = require(\"../../web/firebase-config.js\")\n// Initialize Firebase\nconst key = firebaseConfig.messagingSenderId\nconst apiKeyEncrypted = (FCM_API_KEY as string).split('').map((v, i)=> (v.charCodeAt(0) ^ key.charCodeAt(i)).toString(16).padStart(2, '0')).join('')\nconst app = firebase.initializeApp({...firebaseConfig, apiKey:FCM_API_KEY});\n// const analytics = getAnalytics(app);\nconst messaging = firebase.messaging(app);\n\nmessaging.onMessage((payload) => {\n  if (!(\"Notification\" in window)) {\n    alert(\"This browser does not support desktop notification\");\n  }\n  else if (Notification.permission === \"granted\") {\n    const message_set = JSON.parse(payload.data['message_set'])[0]\n    new Notification(payload.data.channel_name, { body: `${payload.data.name}: ${message_set.content}` });\n  }\n});\n\nconst FirebaseContext = createContext<{enable:boolean, setEnable:(enable:boolean)=>void}>({enable:false, setEnable:()=>{}});\n\nconst requestToken = async()=>{\n  const permission = await Notification.requestPermission();\n  if (permission === 'granted') {\n    const serviceWorkerRegistration = await navigator.serviceWorker.register(`${process.env.PUBLIC_URL}/firebase-messaging-sw.js?${apiKeyEncrypted}`)\n    console.log('[SW]: SCOPE: ', serviceWorkerRegistration.scope);\n    const currentToken = await messaging.getToken({serviceWorkerRegistration, vapidKey: FCM_PUBLIC_VAPID_KEY })\n    window.addEventListener('beforeunload', (event:any) => {\n      event.preventDefault();\n      serviceWorkerRegistration.unregister()\n    });\n    if (currentToken)\n      return currentToken\n  }\n  return undefined\n}\n\nexport const FirebaseProvider = ({children, user}:{user?:UserMembership|null, children:React.ReactNode})=>{\n  const tokenRef = useRef<string>()\n  const [notification, setNotification] = useState<NotificationType>()\n  const enable = useMemo(()=>!(notification?.token), [notification])\n  const setEnable = (enable:boolean)=>{\n    if(user && notification){\n      putNotification({...notification, token:enable||tokenRef.current==undefined?null:tokenRef.current}).then((noti)=>{\n        setNotification(noti)\n      })\n    }\n  }\n  \n  useEffect(()=>{\n    let isMount = true;\n    const setNotificationInternal = (n?:NotificationType)=>{\n      if (isMount)setNotification(n)\n    }\n    if(user){\n      requestToken().then((t)=>{\n        tokenRef.current = t\n        getNotification(user.id).then(noti=>{\n          const token = t==undefined?null:t\n          if (noti == undefined)\n            postNotification({user:user.id, type:'WEB', token}).then(setNotificationInternal)\n          else\n            putNotification({...noti, token}).then(setNotificationInternal)\n        })\n      })\n    }\n    else{\n      setNotificationInternal(undefined)\n    }\n    return ()=>{isMount=false}\n  }, [user])\n  return !user?<>{children}</>:<FirebaseContext.Provider value={{enable, setEnable}}>\n    {children}\n  </FirebaseContext.Provider>\n}\n\nexport default ()=>{\n  const firebaseContext = useContext(FirebaseContext)\n  return firebaseContext\n}\n","import React, { useEffect, useState } from 'react'\nimport { Dimensions, Platform, View } from 'react-native'\nimport useIsMobile from '../hooks/useIsMobile'\n\ntype ViewProps = {windowType:'landscape'|'portrait', children:React.ReactNode}\n\nexport default (props:ViewProps)=>{\n    const isMobile = useIsMobile()\n    const [height, setHeight] = useState(window.innerHeight + 1)\n    useEffect(()=>{\n        if(isMobile && Platform.OS == 'web'){\n            const onChange = (e:any)=>{\n                setHeight(window.innerHeight + 1)\n            }\n            Dimensions.addEventListener(\"change\",onChange)\n            return () => Dimensions.removeEventListener(\"change\", onChange)\n            \n        }\n    },[ isMobile])\n    return <View style={{height:isMobile&&Platform.OS == 'web'?height:'100%'}}>\n        {props.children}\n    </View>\n\n}\n  ","import { CardStyleInterpolators, createStackNavigator } from '@react-navigation/stack';\nimport React, {useMemo} from 'react';\nimport { View } from 'react-native';\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { Ionicons } from '@expo/vector-icons';\nimport useResizeWindow from '../hooks/useResizeWindow';\nimport NotFoundScreen from '../screens/NotFoundScreen';\nimport {main, login, modal} from '../screens';\nimport DrawerNavigator from './DrawerNavigator';\nimport useAuthContext, {AuthProvider} from '../hooks/useAuthContext';\nimport { WebSocketProvider } from '../hooks/useWebsocketContext';\nimport HeaderRight from '../components/HeaderRight'\nimport Colors from '../constants/Colors';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { FirebaseProvider } from '../hooks/useFirebaseContext';\nimport useIsMobile from '../hooks/useIsMobile';\nimport MobileSafeAreaView from '../components/MobileSafeAreaView';\nimport useColorScheme from '../hooks/useColorScheme';\n\nconst Root = createStackNavigator();\n\nconst queryClient = new QueryClient();\n\nexport default function RootNavigator() {\n    const windowType = useResizeWindow();\n    return (\n        <MobileSafeAreaView windowType={windowType}>\n            <AuthProvider>\n                <QueryClientProvider client={queryClient}>\n                    {/* devtools */}\n                    {/* <ReactQueryDevtools initialIsOpen={true} /> */}\n                        <Root.Navigator\n                            mode= 'modal'\n                            headerMode= 'screen'\n                            screenOptions={{\n                                cardStyle:{backgroundColor:\"white\"},\n                                animationEnabled: true,\n                                cardStyleInterpolator: CardStyleInterpolators.forVerticalIOS,\n                            }}\n                        >\n                            <Root.Screen name=\"Main\" component={MainNavigator} options={{headerShown:false}}/>\n                            {Object.entries(modal).map(([key, screen])=><Root.Screen key={key} name={key} component={screen.component} options={{\n                                title: screen.title,\n                                gestureDirection: windowType == 'landscape'?'vertical-inverted':'vertical'\n                            }} />)}\n                        </Root.Navigator>\n                </QueryClientProvider>\n            </AuthProvider>\n        </MobileSafeAreaView>\n    );\n}\n\nconst Main = createStackNavigator();\n\nfunction headerLeft(navigation:any, route:any, windowType:string, isMobile:boolean){\n    const canGOBackScreen = ['HomeScreen', 'LoginScreen'].findIndex(v=>v == route.name) == -1\n    const goBack = ()=>{\n        if (navigation.canGoBack())\n            navigation.goBack()\n        else if (canGOBackScreen)\n            navigation.replace('HomeScreen')\n    }\n    if (windowType=='portrait' && canGOBackScreen)\n        return <TouchableOpacity onPress={goBack}><Ionicons size={isMobile?20:24} style={{marginHorizontal:isMobile?16:20 }} name=\"arrow-back\"/></TouchableOpacity>\n    return null\n}\n\nfunction MainNavigator(){\n    const windowType = useResizeWindow();\n    const isMobile = useIsMobile()\n    const {auth} = useAuthContext()\n    const theme = useColorScheme()\n    const entries = useMemo(()=>{\n        if (auth.user === undefined)\n            return []\n        console.log('current user: ', auth.user)\n        return Object.entries(auth.user === null?login:main)\n    }, [auth])\n    return (auth.user!==undefined?<View style={{flexDirection:'row', flex:1}}>\n        {auth.user?<DrawerNavigator user={auth.user}/>:undefined}\n        <View style={{flex:1}}>\n            <FirebaseProvider user={auth.user}>\n                <WebSocketProvider disable={auth.user === null || auth.user === undefined}>\n                    <Main.Navigator\n                        screenOptions={({navigation, route})=>({\n                            headerStyle:{backgroundColor:Colors[theme].header, height:isMobile?50:undefined},\n                            headerTitleStyle:{color:'white'},\n                            headerLeft:()=>headerLeft(navigation, route, windowType, isMobile),\n                            headerRight:()=><HeaderRight/>,\n                            headerLeftContainerStyle:{backgroundColor:'white', borderBottomWidth:1, borderColor:Colors.borderColor},\n                            cardStyle:{flexShrink:1},\n                            animationEnabled:windowType=='portrait',\n                            cardStyleInterpolator: CardStyleInterpolators.forHorizontalIOS\n                        })}\n                    >\n                        {entries.map(([key, screen])=><Main.Screen key={key} name={key} component={screen.component} options={{ title: screen.title }} />)}\n                        <Main.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n                    </Main.Navigator>\n                </WebSocketProvider>\n            </FirebaseProvider>\n        </View>\n    </View>:<></>);\n}","import React from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport Navigation from './src/navigation';\nimport useColorScheme from './src/hooks/useColorScheme';\nimport useCachedResources from './src/hooks/useCachedResources';\n\nexport default function App() {\n  const isLoadingComplete = useCachedResources();\n  const colorScheme = useColorScheme();\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return (\n      <SafeAreaProvider>\n        <Navigation colorScheme={colorScheme} />\n        <StatusBar />\n      </SafeAreaProvider>\n    );\n  }\n}\n","import { Ionicons } from '@expo/vector-icons';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as React from 'react';\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...Ionicons.font,\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete;\n}\n","import axios, { AxiosRequestConfig } from 'axios';\n// @ts-ignore\nimport {API_URL} from \"@env\"\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nexport const accountURL =  `${API_URL}/account/`\nconst baseURL =  `${API_URL}/messenger/`\nconst defaultOption:AxiosRequestConfig = {\n    baseURL,\n    withCredentials: true,\n    headers: {}\n};\nconst _axios = axios.create(defaultOption);\n\n_axios.interceptors.request.use(\n    config => {\n        return config;\n    },\n    error => {\n        return Promise.reject(error);\n    }\n)\n\n_axios.interceptors.response.use(\n    response => {\n        // if((response.request.responseURL as string).indexOf('/task/login')>=0 && response.data.length != 0){\n        //     // redirect login\n        // }\n        return response;\n    },\n    error => {\n        if (error.response.status === 401) {\n            getToken().then(async(token)=>{\n                const r = await _axios.post(\"/api/v1/user/sso/refresh/\", {token}, {headers:{'Authorization':''}, baseURL: accountURL})\n                if (r.status == 200 && r.data !== ''){\n                    setToken(r.data)\n                }\n            })\n        }\n        return Promise.reject(error)\n    }\n)\n\nexport const setToken = async (token:string|null)=>{\n    _axios.defaults.headers['Authorization'] = `JWT ${token}`\n    if (token)\n        await AsyncStorage.setItem(\"Authorization\", token)\n    else\n        AsyncStorage.removeItem(\"Authorization\")\n}\nexport const getToken = async ()=>{\n    const token = await AsyncStorage.getItem(\"Authorization\")\n    _axios.defaults.headers['Authorization'] = token?`JWT ${token}`:null\n    return token\n}\n\nexport default _axios\n","const tintColorLight = '#2f95dc';\nconst tintColorDark = '#fff';\n\nexport default {\n  light: {\n    text: '#000',\n    background: '#fff',\n    tint: tintColorLight,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorLight,\n    header:'#24292f',\n    buttonColor:'rgb(242,242,242)',\n    buttonBackgroundColor: '#f6f8fa', //'rgba(9,30,66,0.08)',//rgb(242,242,242)\n  },\n  dark: {\n    text: '#fff',\n    background: '#000',\n    tint: tintColorDark,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorDark,\n    header:'#dbd6d1',\n    buttonColor:'rgb(14,14,14)',\n    buttonBackgroundColor: '#080604',\n  },\n  button:{\n    borderColor:'rgba(27,31,36,0.15)',\n  },\n  borderColor:'#d0d7de',\n  \n  focus:'#0065A4',\n};\n","import React, { createContext, useContext, useEffect, useReducer, useMemo, Dispatch } from \"react\"\nimport { checkLogin, login, logout } from \"../apis\"\nimport { getNotification, putNotification } from \"../apis/notification\"\nimport { UserMembership } from \"../types\"\n\ntype AuthAction = {type:string, username?:string, password?:string, user?:UserMembership|null}\n\nexport type Auth = {user?:UserMembership|null, groupId?:number}\n\ntype AuthState ={user?:UserMembership|null, request?:{username:string, password:string}|null}\n\nconst AuthContext = createContext<{auth:Auth, dispatch:Dispatch<AuthAction>}>({auth:{}, dispatch:()=>{}});\n\nconst authReducer =(initialState:AuthState, action:AuthAction)=>{\n  switch (action.type){\n      case 'LOGIN_REQUEST':\n        return {\n          ...initialState,\n          request:{username:action.username, password:action.password},\n        } as AuthState\n      case 'LOGIN_GUEST':\n        return {\n          ...initialState,\n          request:{username:'guest', password:'guest'},\n        } as AuthState\n      case 'LOGIN_SUCCESS':\n          return{\n              ...initialState,\n              user:action.user,\n              request:undefined\n          }\n      case 'LOGIN_FAILED':\n          return{\n              ...initialState,\n              request:undefined\n          }\n      case 'LOGOUT_REQUEST':\n          return{\n              ...initialState,\n              request:null\n          }\n      case 'LOGOUT_SUCCESS':\n          return {\n            ...initialState,\n            user:null,\n            request:undefined\n          }\n      case 'REFRESH':\n        return {\n          ...initialState,\n          user:undefined\n        }\n      default:\n          throw new Error( `Unhandled action type: ${action.type}`)\n  }\n}\n\n\nexport const AuthProvider = ({children}:{children:React.ReactNode})=>{\n  const [authState, dispatch] = useReducer(authReducer, {} as Auth)\n  const auth = useMemo(()=>({\n    user:authState.user,\n    groupId: authState.user?.membership_set.find(g=>g.root_group_id==null)?.group\n  }), [authState])\n  useEffect(()=>{\n    if(authState.user===undefined){\n      checkLogin().then((user)=>{\n        dispatch({type:\"LOGIN_SUCCESS\", user})\n      }).catch((e)=>{\n        console.log(e)\n        dispatch({type:\"LOGOUT_SUCCESS\"})\n      })\n    }\n    else if(authState.user===null && authState.request){\n      login(authState.request.username, authState.request.password).then(user=>{\n        dispatch({type:\"LOGIN_SUCCESS\", user})\n      }).catch(()=>{\n        dispatch({type:\"LOGIN_FAILED\"})\n      })\n    }\n    else if(authState.user && authState.request===null){\n      getNotification(authState.user.id).then(noti=>{\n        noti && putNotification({...noti, token:''}).then(()=>{\n          logout().then(()=>dispatch({type:\"LOGOUT_SUCCESS\"}))\n        })\n      })\n    }\n  }, [authState])\n  return <AuthContext.Provider value={{auth, dispatch}}>\n    {children}\n  </AuthContext.Provider>\n}\n\nexport default ()=>{\n  const authContext = useContext(AuthContext)\n  return authContext\n}\n","firebaseConfig = {\n    \"authDomain\": \"virtual-metrics-355712.firebaseapp.com\",\n    \"projectId\": \"virtual-metrics-355712\",\n    \"storageBucket\": \"virtual-metrics-355712.appspot.com\",\n    \"messagingSenderId\": \"76003576924\",\n    \"appId\": \"1:76003576924:web:c8c8a006d07918bbc02a99\",\n    \"measurementId\": \"G-SEL35L4N5R\"\n}\nif (typeof module !== 'undefined') {\n    module.exports = firebaseConfig\n}\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","/**\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\n * https://reactnavigation.org/docs/getting-started\n *\n */\nimport _ from 'lodash';\nimport { NavigationContainer, DefaultTheme, DarkTheme, NavigationContainerRef } from '@react-navigation/native';\nimport * as React from 'react';\nimport { ColorSchemeName } from 'react-native';\n\nimport LinkingConfiguration from './LinkingConfiguration';\nimport RootNavigator from './RootNavigator';\n\nconst navigationRef = React.createRef<NavigationContainerRef>();\n\nexport function navigate(name:string, params?:any) {\n  if (params)\n    navigationRef.current?.navigate(name, params);\n  navigationRef.current?.navigate(name);\n}\n\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\n  return (\n    <NavigationContainer\n      ref={navigationRef}\n      documentTitle={{formatter: (options, route) => {return `TOKKI TOK`}}}\n      linking={(process.versions && process.versions['electron'])?undefined:LinkingConfiguration}\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n\n(function(l) {  // for github-page\n    if (l !== undefined && l.search[1] === '/' ) {\n        var decoded = l.search.slice(1).split('&').map(function(s) { \n        return s.replace(/~and~/g, '&')\n        }).join('?');\n        window.history.replaceState(null, '',\n            l.pathname.slice(0, -1) + decoded + l.hash\n        );\n    }\n}(window.location))\n    \nconst ignoreWarnings = ['ReactNativeFiberHostComponent'];\nconst _console = _.clone(console);\nconsole.warn = (message: string|Object) => {\n    var warn = true;\n    if (message instanceof Object)\n    warn = false;\n    else{\n    ignoreWarnings.forEach((value)=>{\n        if (message.indexOf && message.indexOf(value) <= -1) {\n            warn = false;\n        }\n    })\n    };\n    if (warn){\n        _console.warn(message);\n    }\n    else{\n        // console.log(message)\n    }\n};\n","\nimport { User, UserMembership } from '../types';\nimport axios, { getToken, setToken, accountURL as baseURL } from './axios';\n\nexport const login = async(username:string, password:string) => {\n    if(username.endsWith('.guest') && password.length == 0)\n        password = 'guest'\n    const r = await axios.post(\"/api-token-auth/\", {username, password});\n    if(r.status == 200){\n        await setToken(r.data)\n        return await checkLogin()\n    }\n}\n\nexport const logout = async() => {\n    await setToken(null)\n    return await axios.get(\"/api-auth/logout/\")\n}\n\nexport const guestLogin =  async() => {\n    return await login('guest', 'guest')\n}\n\nconst checkLoginToken = async ()=>{\n    const value = (await axios.get(\"/api/v1/users/memberships/?_self=true\"))?.data\n    if (value && value.length){\n        return value[0] as UserMembership\n    }\n    return null\n}\n\nexport const checkLogin = async() => {\n    const token = await getToken()\n    if (token === null)\n        return null\n    try{\n       return await checkLoginToken()\n    }\n    catch(e:any){\n        let error = e\n        if(e.response !== undefined && e.response.status==401){\n            try{\n                return await checkLoginToken()\n            }\n            catch(e2){\n                error = e2\n            }\n        }\n        const isOffline = ((error as any).code == \"ERR_NETWORK\" || (error as any).message && ((error as any).message as string).startsWith(\"Cannot read\"))\n        throw {error, isOffline}\n    }\n}\n\nexport const getUserList = async (group_id:number)=>{\n    return (await axios.get(`/api/v1/users/?group_id=${group_id}`) ).data as User[]\n}\n\nexport const patchUser = async (user:{id:number, name:string})=>{\n    await axios.patch(`/api/v1/user/`, {ids:[user.id], updated: {name:user.name}}, {baseURL})\n}\n\nexport const getUserMembershipList = async (group_id:number)=>{\n    return (await axios.get(`/api/v1/users/memberships/?group_id=${group_id}`) ).data as UserMembership[]\n}\n","import { Channel, MessengerMember, MessengerContent, EditMessage, MessengerChannel } from '../types';\nimport axios from './axios';\n\nexport const getMessengerChannelList = async (user_id:number)=>{\n    return (await axios.get(`/api/v1/channels/messenger/?type=messenger&messenger_user_id=${user_id}`) ).data as MessengerChannel[]\n}\n\nexport const postChannel = async(channel:Channel)=>{\n    return (await axios.post(`/api/v1/channels/`, channel)).data as Channel\n}\n\nexport const putChannel = async(channel:Channel)=>{\n    return (await axios.put(`/api/v1/channels/${channel.id}/`, channel)).data as Channel\n}\n\nexport const deleteChannel = async(channel_id:number)=>{\n    await axios.delete(`/api/v1/channels/${channel_id}/`)\n}\n\nexport const getMessengerMemberList = async(channel_id:number)=>{\n    return (await axios.get(`/api/v1/messengermembers/?channel=${channel_id}`) ).data as MessengerMember[]\n}\n\nexport const postBulkMessengerMember = async(data:{channel_id:number, user_ids:number[]})=>{\n    await axios.post(`/api/v1/messengermembers/bulk/`, {channel:data.channel_id, user_ids:data.user_ids})\n}\n\nexport const deleteMessengerMember = async(member_id:number)=>{\n    await axios.delete(`/api/v1/messengermembers/${member_id}/`)\n}\n\nexport const getMessengerContentList = async (channel_id:number, id_lt?:number)=>{\n    const id_lt_param = id_lt?`&id_lt=${id_lt}`:''\n    return (await axios.get(`/api/v1/messengercontents/?limit=30&channel=${channel_id}${id_lt_param}`)).data.results as MessengerContent[]\n}\n\nexport const postMessage = async (message:EditMessage)=>{\n    await axios.post(`/api/v1/messengercontents/messages/`, message)\n}\n\nexport const deleteMessengerContent = async (content_id:number)=>{\n    await axios.delete(`/api/v1/messengercontents/${content_id}/`)\n}","import { ColorSchemeName, useColorScheme as _useColorScheme } from 'react-native';\n\n// The useColorScheme value is always either light or dark, but the built-in\n// type suggests that it can be null. This will not happen in practice, so this\n// makes it a bit easier to work with.\nexport default function useColorScheme(): NonNullable<ColorSchemeName> {\n  return _useColorScheme() as NonNullable<ColorSchemeName>;\n}\n","import React, { useState } from 'react';\nimport { Text, StyleSheet, Pressable, StyleProp, ViewStyle} from 'react-native';\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport { CustomButtonProps } from '../types';\n\nconst DefaultButton = (props:CustomButtonProps)=>{\n    const [hover, setHover] = useState(false)\n    return <Pressable\n        onPress={()=>props.onPress()}\n        //@ts-ignore\n        onHoverIn={()=>setHover(true)}\n        onHoverOut={()=>setHover(false)}\n        style={[\n            {\n                paddingVertical:5, \n                paddingHorizontal:16\n            },\n            props.style,\n            hover?{backgroundColor:props.color}:{}\n        ]}>\n            <Text selectable={false} style={[{fontSize:14}, props.textStyle]}>{props.title}</Text>\n        </Pressable>\n}\n\nexport default (props:CustomButtonProps)=>{\n    const theme = useColorScheme()\n    const _props = {\n        color:Colors[theme].buttonColor,\n        ...props,\n        style:[\n            styles.style,\n            {\n                backgroundColor:Colors[theme].buttonBackgroundColor\n            },\n            props.style,\n        ] as StyleProp<ViewStyle>,\n        textStyle:[\n            styles.text, \n            {color:Colors[theme].text},\n            props.textStyle\n        ]\n    }\n    return <DefaultButton {..._props}/>\n}\n\nconst styles = StyleSheet.create({\n    style:{\n        borderRadius:6, \n        borderColor:Colors.button.borderColor, \n        borderWidth:1, \n    },\n    text:{\n        textAlign:'center', \n        fontWeight:'600'\n    }\n});\n","import { useState, useEffect } from 'react';\nimport { Dimensions, ScaledSize } from 'react-native';\n//@ts-ignore\nimport useMobileDetect from 'use-mobile-detect-hook';\n\ntype WindowType = 'portrait' | 'landscape'\n\nconst getWindowType = (window:ScaledSize)=> window.height >= window.width?'portrait':'landscape' as WindowType;\n\nexport default function useResizeWindow() {\n  const detectMobile = useMobileDetect();\n  const [windowType, setWindowType] = useState(getWindowType(Dimensions.get('window')))\n  const onChange = () => setWindowType(getWindowType(Dimensions.get('window')))\n\n  useEffect(() => {\n    Dimensions.addEventListener(\"change\", onChange);\n    return () => {\n      Dimensions.removeEventListener(\"change\", onChange);\n    };\n  });\n  if (detectMobile.isMobile())\n    return 'portrait'\n  return windowType\n}","import { useEffect } from \"react\";\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport { getMessengerChannelList, postChannel, putChannel } from \"../../apis\";\nimport { MessengerChannel } from \"../../types\";\nimport { Auth } from \"../useAuthContext\";\nimport useWebsocketContext from \"../useWebsocketContext\";\n\nexport default function useMessengerChannelList(auth?:Auth){\n  const queryClient = useQueryClient()\n  const {lastJsonMessage} = useWebsocketContext()\n  const { data } = useQuery(\"MessengerChannelList\" , async()=>auth?.user?.id?(await getMessengerChannelList(auth.user.id)):[])\n\n  useEffect(()=>{\n    if(lastJsonMessage !=null){\n      if(lastJsonMessage['type']=='enter'){\n        queryClient.setQueryData<MessengerChannel[]>(\"MessengerChannelList\", (_data)=>{\n          return (_data?.find(v=>v.id==lastJsonMessage['data']['id'])?_data:[lastJsonMessage['data'] , ...(_data|| [])]).sort((a, b)=>a.id - b.id)\n        })\n      }\n      // if(lastJsonMessage['type']=='leave'){\n      //   queryClient.setQueryData<Channel[]>(\"MessengerChannelList\", (_data)=>_data?.filter(v=>v.id!=lastJsonMessage['data']['channel_id']) || [])\n      // }\n    }\n  }, [lastJsonMessage])\n  return data\n}\n\nexport function useMessengerChannelMutation(){\n  const queryClient = useQueryClient()\n\n  const create = useMutation(postChannel, {\n    onSuccess: ()=>queryClient.invalidateQueries(\"MessengerChannelList\")\n  });\n\n  const update = useMutation(putChannel, {\n    onSuccess: () => queryClient.invalidateQueries(\"MessengerChannelList\")\n  })\n\n\n  return { create:create.mutateAsync, update:update.mutateAsync}\n}"],"sourceRoot":""}