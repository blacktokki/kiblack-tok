{"version":3,"sources":["src/hooks/useResizeWindow.ts","src/components/CommonItem.tsx","src/screens/main/LoginScreen.tsx","src/components/CommonSection.tsx","src/hooks/lists/useMessengerContent.List.ts","src/hooks/lists/useMessengerMemberList.ts","src/screens/main/TabOneScreen.tsx","src/hooks/lists/useBoardContentList.ts","src/components/RowField.tsx","src/components/TextField.tsx","src/screens/BoardEditScreen.tsx","src/screens/ChannelEditScreen.tsx","src/screens/InviteScreen.tsx","src/screens/index.ts","src/screens/main/HomeScreen.tsx","src/screens/main/ChatScreen.tsx","src/screens/main/BoardScreen.tsx","src/screens/ProfileScreen.tsx","src/hooks/useWebsocketContext.tsx","src/hooks/lists/useUserMembershipList.ts","src/tabs/MemberTab.tsx","src/hooks/useColorScheme.ts","src/components/TextButton.tsx","src/navigation/DrawerNavigator.tsx","src/tabs/DrawerTab.tsx","src/tabs/MessengerTab.tsx","src/tabs/BoardTab.tsx","src/tabs/index.ts","src/lib/react-native-paper/Profile.tsx","src/components/Profile.tsx","src/components/Themed.tsx","src/navigation/LinkingConfiguration.ts","App.tsx","src/hooks/useCachedResources.ts","src/screens/NotFoundScreen.tsx","src/navigation/RootNavigator.tsx","src/apis/axios.ts","src/apis/account.ts","src/apis/messenger.ts","src/navigation/index.tsx","src/hooks/useAuthContext.tsx","src/assets/fonts/SpaceMono-Regular.ttf","src/constants/Colors.ts","src/components/CommonButton.tsx","src/components/HeaderRight.tsx","src/hooks/lists/useBoardChannelList.ts","src/hooks/lists/useMessengerChannelList.ts"],"names":["useResizeWindow","useState","Dimensions","get","window","setWindow","onChange","useEffect","addEventListener","removeEventListener","height","width","CommonItem","props","React","setHover","press","setPress","style","styles","outerContainer","outerContainerStyle","backgroundColor","onPressIn","onPressOut","onPress","onHoverIn","onHoverOut","container","containerStyle","bodyView","bodyStyle","children","StyleSheet","create","maxWidth","alignItems","marginHorizontal","padding","minHeight","justifyContent","borderBottomWidth","borderColor","Colors","Styles","login_container","flex","login_header","paddingTop","paddingBottom","login_header_logo","resizeMode","login_header_text","marginTop","color","fontSize","login_header_text_bold","fontWeight","login_wrapper","paddingVertical","borderTopRightRadius","borderTopLeftRadius","form","form_input","paddingHorizontal","marginBottom","borderRadius","button","button_label","login_social","login_social_separator","flexDirection","login_social_separator_line","login_social_separator_text","login_social_buttons","login_social_button","borderWidth","login_social_icon","login_social_facebook","login_footer_text","guest_footer_text","alignSelf","margin","login_footer_link","CommonSection","withSeparator","separator","lightColor","darkColor","undefined","title","titleView","titleStyle","subtitle","marginVertical","textAlign","useMessengerContentList","channel_id","queryClient","useQueryClient","useInfiniteQuery","a","async","pageParam","getMessengerContentList","then","current","select","data","pages","length","next","getNextPageParam","lastPage","id","refetchOnReconnect","refetchOnWindowFocus","fetchNextPage","lastJsonMessage","useWebsocketContext","setQueryData","_data","pageParams","useMessengerMemberList","useQuery","getMessengerMemberList","useMessengerMemberMutation","invite","useMutation","postBulkMessengerMember","onSuccess","invalidateQueries","leave","deleteMessengerMember","mutate","Panel_Button_Text","Panel_Holder","useBoardContentList","getBoardContentList","useBoardContentMutation","postBoard","update","patchBoard","_delete","deleteBoardContent","delete","RowField","View","Text","textStyle","name","TextField","contentHeight","setContentHeight","disabled","multiline","editable","value","onChangeText","setValue","onContentSizeChange","e","nativeEvent","contentSize","field","InviteItem","selectedRef","has","item","selected","setSelected","renderMemberItem","add","main","HomeScreen","component","navigation","route","windowType","options","headerRight","HeaderRight","extra","navigate","type","useLayoutEffect","index","params","tab","setOptions","tabs","bottomTabs","tabBarPosition","parseInt","onTab","setParams","path","ChatScreen","useRef","auth","useAuthContext","memberList","member_id","useMemo","find","v","user","messengerMemberMutation","postValue","contentMutation","channel","content","postMessage","deleteMessengerContent","d","variables","useMessengerContentMutation","back","renderItem","useCallback","nextPage","nextContent","map","index2","created","slice","date","isSystem","isFirst","isSelf","dayChanged","key","message_set","MaterialIcons","size","marginRight","canGoBack","goBack","contentContainerStyle","flexGrow","onScroll","contentOffset","y","onLayout","p","layout","position","top","onSubmitEditing","CommonButton","BoardScreen","contentList","boardChannelMutation","useBoardChannelMutation","opacity","split","replace","board_set","FlatList","ListFooterComponent","TabOneScreen","login","LoginScreen","username","setUsername","password","setPassword","dispatch","_login","TextInput","placeholder","text","autoCapitalize","keyboardType","secureTextEntry","TouchableOpacity","modal","BoardEditScreen","boardChannelList","useBoardChannelList","boardContentList","boardContentMutation","board","setTitle","setContent","newBoard","screen","ChannelEditScreen","channelList","useMessengerChannelList","channelMutation","useMessengerChannelMutation","setName","description","setDescription","groupId","newChannel","owner","group","InviteScreen","userList","useUserMembershipList","Set","memberSet","filter","user_ids","ProfileScreen","Profile","WebSocketContext","createContext","sendJsonMessage","WebSocketProviderInternal","useWebSocket","shouldReconnect","closeEvent","Provider","WebSocketProvider","disable","useContext","getUserMembershipList","MemberIcon","useColorScheme","_useColorScheme","TabViewNavigator","setIndex","entries","Object","icons","assign","k","icon","renderTabBar","indicatorStyle","activeColor","inactiveColor","renderIcon","scene","onTabPress","findIndex","navigationState","routes","onIndexChange","renderScene","SceneMap","onAddList","colors","useTheme","tabBar","card","borderTopColor","border","pointerEvents","accessibilityRole","drawerTabs","elevation","borderRightWidth","label","DrawerTab","marginLeft","Messenger","Board","MessengerIcon","Ionicons","BoardIcon","FontAwesome5","OneTab","MemberTab","TwoTab","today","Date","toISOString","last_message","FontAwesome","paddingLeft","member_count","unread_count","ThreeTab","header","join","toUpperCase","useThemeColor","colorName","theme","colorFromProps","otherProps","light","dark","prefixes","Linking","config","screens","Main","NotFound","App","isLoadingComplete","setLoadingComplete","SplashScreen","Font","font","require","console","warn","useCachedResources","colorScheme","StatusBar","NotFoundScreen","link","linkText","Root","createStackNavigator","QueryClient","RootNavigator","client","Navigator","mode","headerMode","screenOptions","cardStyle","animationEnabled","cardStyleInterpolator","CardStyleInterpolators","forVerticalIOS","Screen","MainNavigator","headerShown","gestureDirection","log","DrawerNavigator","headerStyle","headerTitleStyle","headerLeftContainerStyle","defaultOption","baseURL","PRODDOMAIN","withCredentials","_axios","axios","interceptors","request","use","error","Promise","reject","response","status","endsWith","r","bodyFormData","FormData","append","post","headers","checkLogin","logout","guestLogin","isOffline","code","message","startsWith","getUserList","group_id","getBoardChannelList","getMessengerChannelList","user_id","postChannel","putChannel","put","deleteChannel","patch","content_id","id_lt","id_lt_param","results","navigationRef","Navigation","ref","documentTitle","formatter","linking","process","versions","LinkingConfiguration","DarkTheme","DefaultTheme","l","search","decoded","s","history","replaceState","pathname","hash","location","ignoreWarnings","_console","_","clone","forEach","indexOf","AuthContext","authReducer","initialState","action","Error","AuthProvider","useReducer","authState","membership_set","g","root_group_id","catch","module","exports","background","tint","tabIconDefault","tabIconSelected","focus","DefaultButton","hover","selectable","_props","defaultButtonProps","buttonProps","mutateAsync","sort","b"],"mappings":"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","file":"static/js/app.31abcd46.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { Dimensions } from 'react-native';\r\n\r\ntype WindowType = 'portrait' | 'landscape'\r\n\r\nexport default function useResizeWindow() {\r\n  const [window, setWindow] = useState(Dimensions.get('window'));\r\n  const onChange = () => setWindow(Dimensions.get('window'))\r\n  useEffect(() => {\r\n    Dimensions.addEventListener(\"change\", onChange);\r\n    return () => {\r\n      Dimensions.removeEventListener(\"change\", onChange);\r\n    };\r\n  });\r\n  return window.height >= window.width?'portrait':'landscape' as WindowType;\r\n}","import * as React from 'react';\r\nimport { View } from './Themed';\r\nimport { StyleSheet, StyleProp, ViewStyle, TextStyle, Pressable } from 'react-native';\r\nimport Colors from '../constants/Colors';\r\n\r\nexport type ItemParamList = {\r\n    outerContainerStyle?:StyleProp<TextStyle>\r\n    containerStyle?:StyleProp<ViewStyle>\r\n    bodyStyle?:StyleProp<ViewStyle>\r\n    children?: React.ReactNode\r\n    onPress?: ()=>void\r\n}\r\n\r\nexport default function CommonItem(props:ItemParamList){\r\n  const [hover, setHover] = React.useState(false)\r\n  const [press, setPress] = React.useState(false)\r\n  return (\r\n    <Pressable\r\n      style={[styles.outerContainer ,props.outerContainerStyle, (press)?{backgroundColor:'rgb(242,242,242)'}:{}]}\r\n      onPressIn={()=>{setPress(true)}}\r\n      onPressOut={()=>{setPress(false);props.onPress?.()}}\r\n       //@ts-ignore\r\n       onHoverIn={()=>setHover(true)}\r\n       onHoverOut={()=>setHover(false)}\r\n    >\r\n        <View style={[styles.container ,props.containerStyle]}>\r\n            <View style={[styles.bodyView, props.bodyStyle]}>\r\n                <>{props.children}</>\r\n            </View>\r\n      </View>\r\n    </Pressable>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  outerContainer:{\r\n    width:'100%',\r\n    maxWidth:1080,\r\n    alignItems:'stretch',\r\n  },  \r\n  container: {\r\n      marginHorizontal:20,\r\n      backgroundColor:'transparent'\r\n    },\r\n    bodyView:{\r\n      width: '100%',\r\n      padding: 10,\r\n      minHeight: 40,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      borderBottomWidth:1,\r\n      borderColor:Colors.borderColor,\r\n      backgroundColor:'transparent'\r\n    }\r\n  });\r\n  ","import React, {useState} from 'react';\r\nimport {\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  View,\r\n  StyleSheet,\r\n} from 'react-native';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport useAuthContext from '../../hooks/useAuthContext';\r\n\r\nexport default function LoginScreen({\r\n  navigation\r\n}: StackScreenProps<any, 'Login'>) {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const {dispatch} = useAuthContext()\r\n  const _login = ()=>dispatch({type:'LOGIN_REQUEST', username, password})\r\n\r\n  return (\r\n    <View style={Styles.login_wrapper}>\r\n      <View style={Styles.form}>\r\n        <TextInput\r\n          style={Styles.form_input}\r\n          value={username}\r\n          placeholder={'Username'}\r\n          onChangeText={(text) => setUsername(text)}\r\n          autoCapitalize={'none'}\r\n          keyboardType={'email-address'}\r\n          onSubmitEditing={_login}\r\n        />\r\n        <TextInput\r\n          style={Styles.form_input}\r\n          value={password}\r\n          placeholder={'Password'}\r\n          secureTextEntry\r\n          onChangeText={(text) => setPassword(text)}\r\n          onSubmitEditing={_login}\r\n        />\r\n        <TouchableOpacity onPress={_login}>\r\n          <View style={Styles.button}>\r\n            <Text style={Styles.button_label}>{'Sign in'}</Text>\r\n          </View>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity onPress={() => dispatch({type:\"LOGIN_GUEST\"})}>\r\n          <Text style={Styles.guest_footer_text}>\r\n            {\"Sign in as guest\"}\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      <View style={Styles.login_social}>\r\n        <View style={Styles.login_social_separator}>\r\n          <View style={Styles.login_social_separator_line} />\r\n          <Text style={Styles.login_social_separator_text}>{'text'}</Text>\r\n          <View style={Styles.login_social_separator_line} />\r\n        </View>\r\n        <View style={Styles.login_social_buttons}>\r\n        </View>\r\n      </View>\r\n      {/* <>\r\n        <TouchableOpacity onPress={() => navigate(\"RegistrationScreen\")}>\r\n          <Text style={Styles.login_footer_text}>\r\n            {\"Don't have an account? \"}\r\n            <Text style={Styles.login_footer_link}>{'Sign up'}</Text>\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </> */}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst Styles = StyleSheet.create({\r\n    login_container: {\r\n      flex: 1,\r\n      backgroundColor: '#FFF',\r\n    },\r\n    login_header: {\r\n      alignItems: 'center',\r\n      paddingTop: 30,\r\n      paddingBottom: 50,\r\n      backgroundColor: '#208AEC',\r\n    },\r\n    login_header_logo: {\r\n      width: 220,\r\n      resizeMode: 'contain',\r\n    },\r\n    login_header_text: {\r\n      marginTop: 15,\r\n      color: '#f0f0f0',\r\n      fontSize: 16,\r\n    },\r\n    login_header_text_bold: {\r\n      color: '#fff',\r\n      fontWeight: 'bold',\r\n    },\r\n    login_wrapper: {\r\n      flex: 1,\r\n      justifyContent: 'space-between',\r\n      paddingVertical: 40,\r\n      borderTopRightRadius: 12,\r\n      borderTopLeftRadius: 12,\r\n      marginTop: -10,\r\n      backgroundColor: '#fff',\r\n      alignItems: 'center',\r\n    },\r\n    form: {\r\n      width: '100%',\r\n      maxWidth: 280,\r\n    },\r\n    form_input: {\r\n      height: 44,\r\n      paddingHorizontal: 20,\r\n      marginBottom: 20,\r\n      backgroundColor: '#EDF0F7',\r\n      borderRadius: 50,\r\n    },\r\n    button: {\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      height: 44,\r\n      backgroundColor: '#0065A4',\r\n      borderRadius: 50,\r\n    },\r\n    button_label: {\r\n      color: '#fff',\r\n      fontSize: 16,\r\n    },\r\n    login_social: {\r\n      width: '100%',\r\n      maxWidth: 280,\r\n      marginTop: 20,\r\n    },\r\n    login_social_separator: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n    },\r\n    login_social_separator_line: {\r\n      flex: 1,\r\n      width: '100%',\r\n      height: 1,\r\n      backgroundColor: '#E0E0E0',\r\n    },\r\n    login_social_separator_text: {\r\n      marginHorizontal: 10,\r\n      color: '#808080',\r\n      fontSize: 16,\r\n    },\r\n    login_social_buttons: {\r\n      flexDirection: 'row',\r\n      justifyContent: 'center',\r\n      marginTop: 20,\r\n    },\r\n    login_social_button: {\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      width: 60,\r\n      height: 60,\r\n      marginHorizontal: 12,\r\n      borderWidth: 1,\r\n      borderColor: '#E7E7E7',\r\n      borderRadius: 60,\r\n    },\r\n    login_social_icon: {\r\n      width: 38,\r\n      height: 38,\r\n      resizeMode: 'contain',\r\n    },\r\n    login_social_facebook: {\r\n      backgroundColor: '#4267B2',\r\n      borderColor: '#4267B2',\r\n    },\r\n    login_footer_text: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      color: '#808080',\r\n      fontSize: 14,\r\n    },\r\n    guest_footer_text: {\r\n      flexDirection: 'row',\r\n      alignSelf: 'center',\r\n      color: '#808080',\r\n      fontSize: 15,\r\n      margin: 15\r\n    },\r\n    login_footer_link: {\r\n      color: '#208AEC',\r\n      fontSize: 15,\r\n      fontWeight: 'bold',\r\n    },\r\n  });\r\n  ","import * as React from 'react';\r\nimport { View, Text } from './Themed';\r\nimport { StyleSheet, StyleProp, ViewStyle, TextStyle } from 'react-native';\r\nimport Colors from '../constants/Colors';\r\n\r\nexport type SectionParamList = {\r\n    title?: string,\r\n    titleStyle?:StyleProp<TextStyle>\r\n    outerContainerStyle?:StyleProp<TextStyle>\r\n    containerStyle?:StyleProp<ViewStyle>\r\n    bodyStyle?:StyleProp<ViewStyle>\r\n    subtitle?: string\r\n    withSeparator?: boolean\r\n    children?: React.ReactNode\r\n}\r\n\r\nexport default function CommonSection(props:SectionParamList){\r\n  return (\r\n    <View style={[styles.outerContainer, props.outerContainerStyle]}>\r\n        <View style={[styles.container, props.containerStyle]}>\r\n            {props.withSeparator?<View style={styles.separator} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />:undefined}\r\n            {props.title?<View style={styles.titleView}>\r\n              <Text style={[styles.title, props.titleStyle]}>{props.title}</Text>\r\n              <Text style={styles.subtitle}>{props.subtitle}</Text>\r\n            </View>:undefined}\r\n            <View style={[styles.bodyView, props.bodyStyle]}>\r\n            {props.children}\r\n            </View>\r\n          </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  outerContainer:{\r\n    width:'100%',\r\n    maxWidth:1080,\r\n    alignItems:'stretch',\r\n    backgroundColor:'transparent'\r\n  },  \r\n  container: {\r\n      marginHorizontal:20,\r\n      marginVertical: 10,\r\n      backgroundColor:'transparent',\r\n    },\r\n    titleView:{\r\n      width: '100%',\r\n      flexDirection:'row',\r\n      backgroundColor:'transparent',\r\n      marginBottom:5,\r\n    },\r\n    title: {\r\n      flex:1,\r\n      fontSize: 16,\r\n    },\r\n    subtitle: {\r\n      flex:1,\r\n      fontSize: 12,\r\n      textAlign: 'right',\r\n      marginTop:4\r\n    },\r\n    separator: {\r\n      marginBottom: 20,\r\n      height: 1,\r\n      width: '100%',\r\n    },\r\n    bodyView:{\r\n      width: '100%',\r\n      padding: 20,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      borderWidth:1,\r\n      borderColor:Colors.borderColor,\r\n      borderRadius:6\r\n    }\r\n  });\r\n  ","import { useCallback, useEffect, useState } from \"react\"\r\nimport { InfiniteData, useInfiniteQuery, useMutation, useQueryClient } from \"react-query\"\r\nimport { getMessengerContentList, postMessage, deleteMessengerContent } from \"../../apis\"\r\nimport { MessengerContent } from \"../../types\"\r\nimport useWebsocketContext from \"../useWebsocketContext\"\r\n\r\nexport type MessengerContentPage = {\r\n  next?:MessengerContentPage\r\n  current:MessengerContent[]\r\n}\r\n\r\nexport default function useMessengerContentList(channel_id:number){  \r\n  const queryClient = useQueryClient()\r\n  const { data, fetchNextPage } = useInfiniteQuery<MessengerContentPage>(\r\n    [\"MessengerContentList\", channel_id], \r\n    async({pageParam})=>getMessengerContentList(channel_id, pageParam).then(current=>({current})), \r\n    {\r\n      select:data=>{\r\n        if(data.pages.length > 1)\r\n          data.pages[data.pages.length - 2].next = data.pages[data.pages.length - 1]\r\n        return data;\r\n      },\r\n      getNextPageParam:(lastPage)=>lastPage.current.length?lastPage.current[lastPage.current.length - 1].id:undefined,\r\n      refetchOnReconnect:false,\r\n      refetchOnWindowFocus:false\r\n    }\r\n  )\r\n  const { lastJsonMessage } = useWebsocketContext()\r\n  useEffect(()=>{\r\n    if(lastJsonMessage !=null && lastJsonMessage['type']=='next_message' && lastJsonMessage['data']['channel'] == channel_id){\r\n      queryClient.setQueryData<InfiniteData<MessengerContentPage>>([\"MessengerContentList\", channel_id], (_data)=>{\r\n        if(_data?.pages[0].current)\r\n          _data.pages[0].current = [lastJsonMessage['data'], ..._data?.pages[0].current]\r\n        return {...(_data || {pages:[], pageParams:[]})}\r\n      })\r\n    }\r\n  }, [lastJsonMessage])\r\n  return { data, fetchNextPage }\r\n}\r\n\r\nexport function useMessengerContentMutation(){\r\n  // const queryClient = useQueryClient()\r\n  const create = useMutation(postMessage, {\r\n    onSuccess: () => {\r\n      // queryClient.setQueryData(['MessengerContentList'], (data:any) => ({\r\n      //   pages: data.pages.slice(0, 1),\r\n      //   pageParams: data.pageParams.slice(0, 1),\r\n      // }))\r\n      // queryClient.invalidateQueries(\"MessengerContentList\")\r\n    }\r\n  });\r\n  const _delete = useMutation(deleteMessengerContent, {\r\n    onSuccess: (d, variables) => {\r\n      // queryClient.setQueryData(['MessengerContentList'], (data:any) => ({\r\n      //   pages: (data.pages as MessengerContent[][]).map(v=>v.filter(v2=>v2.id != variables)),\r\n      //   pageParams: data.pageParams,\r\n      // }))\r\n    }\r\n  })\r\n  return { create:create.mutate, delete:_delete.mutate }\r\n}","import { useMutation, useQuery, useQueryClient } from \"react-query\";\r\nimport { postBulkMessengerMember, deleteMessengerMember, getMessengerMemberList } from \"../../apis\";\r\n\r\nexport default function useMessengerMemberList(channel_id:number){\r\n  const { data } = useQuery([\"MessengerMemberList\", channel_id] , async()=>await getMessengerMemberList(channel_id))\r\n  return data\r\n}\r\n\r\n\r\nexport function useMessengerMemberMutation(){\r\n  const queryClient = useQueryClient()\r\n  const invite = useMutation(postBulkMessengerMember, {\r\n    onSuccess: ()=>{\r\n      queryClient.invalidateQueries(\"MessengerMemberList\")\r\n    }\r\n  })\r\n\r\n  const leave = useMutation(deleteMessengerMember, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(\"MessengerChannelList\")\r\n      queryClient.invalidateQueries(\"MessengerMemberList\")\r\n    }\r\n  })\r\n  return {invite:invite.mutate, leave:leave.mutate}\r\n}","import React, {useCallback, useRef} from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { StyleSheet, Text, Button, View} from 'react-native';\r\n\r\n\r\nexport default function TabOneScreen({\r\n  navigation\r\n}: StackScreenProps<any, 'TabOne'>) {\r\n  return <View style={{padding:10}}>\r\n    \r\n  </View>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  Panel_Button_Text: {\r\n    textAlign: 'center',\r\n    color: '#fff',\r\n    fontSize: 21\r\n  },\r\n  Panel_Holder: {\r\n    borderWidth: 1,\r\n    borderColor: '#888',\r\n    marginVertical: 5\r\n  }\r\n})","import { useMutation, useQuery, useQueryClient } from \"react-query\"\r\nimport { deleteBoardContent, getBoardContentList, patchBoard, postBoard } from \"../../apis\"\r\n\r\n\r\nexport default function useBoardContentList(channel_id:number){\r\n  const { data } = useQuery([\"BoardContentList\", channel_id] , async()=>await getBoardContentList(channel_id))\r\n  return data\r\n}\r\n\r\nexport function useBoardContentMutation(){\r\n  const queryClient = useQueryClient()\r\n  const create = useMutation(postBoard, {\r\n    onSuccess: () => queryClient.invalidateQueries(\"BoardContentList\")\r\n  });\r\n  const update = useMutation(patchBoard, {\r\n    onSuccess: () => queryClient.invalidateQueries(\"BoardContentList\")\r\n  })\r\n  const _delete = useMutation(deleteBoardContent, {\r\n    onSuccess: () => queryClient.invalidateQueries(\"BoardContentList\")\r\n  })\r\n  return { create:create.mutate, update:update.mutate, delete:_delete.mutate }\r\n}","import React from 'react';\r\n\r\nimport { View, Text, TextProps, StyleProp } from 'react-native';\r\n\r\ntype Props = {\r\n  name: string,\r\n  width?:number,\r\n  children: React.ReactNode\r\n  textStyle?: StyleProp<TextProps>\r\n}\r\n\r\nexport default function RowField(props:Props) {\r\n  return (\r\n    <View style={{flexDirection:'row', alignItems: 'center', justifyContent:'space-between', paddingVertical:5}}>\r\n        <Text style={[{flex:1, paddingHorizontal: 15, fontSize:16}, props.textStyle]}>{props.name}</Text>\r\n        <View style={{\r\n        // backgroundColor: '#171717',\r\n        flex: 3,\r\n        justifyContent: 'center',\r\n        paddingHorizontal: 15,\r\n        }}>\r\n          <View style={{width:props.width}}>\r\n            {props.children}\r\n          </View>\r\n        </View>\r\n    </View>\r\n  )\r\n}","import React, { useEffect, useState } from 'react';\r\n\r\nimport { View, Text, StyleProp, ViewStyle, TextStyle } from 'react-native';\r\n\r\nimport { TextInput } from 'react-native-gesture-handler';\r\nimport RowField from './RowField';\r\n\r\ntype Props = {\r\n  name: string,\r\n  value: any,\r\n  setValue?: (value:any)=>void\r\n  width?:any\r\n  disabled?:boolean\r\n  multiline?:boolean\r\n  textStyle?:StyleProp<TextStyle>\r\n  style?:StyleProp<ViewStyle>\r\n}\r\n\r\nexport default function TextField(props:Props) {\r\n  const [contentHeight, setContentHeight] = useState<number>()\r\n  return (\r\n    <RowField name={props.name} width={props.width} textStyle={props.textStyle}>\r\n      <TextInput style={[{\r\n          borderColor:'#d0d7de', \r\n          fontSize:16, \r\n          borderWidth:1, \r\n          borderRadius:6, \r\n          paddingHorizontal:10, \r\n          paddingVertical:3, \r\n          backgroundColor:props.disabled?'#EEE':undefined,\r\n          height:props.multiline?contentHeight:30\r\n        }, props.style]} editable={!props.disabled} value={props.value} onChangeText={props.setValue}\r\n        onContentSizeChange={props.multiline?(e) => setContentHeight(e.nativeEvent.contentSize.height + 2):undefined} \r\n        multiline={props.multiline}\r\n      ></TextInput>\r\n   </RowField>\r\n  )\r\n}","import React, {useState, useEffect, useMemo} from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { StyleSheet } from 'react-native';\r\nimport CommonSection from '../components/CommonSection';\r\nimport { View, Text } from '../components/Themed';\r\nimport CommonButton from '../components/CommonButton';\r\nimport useBoardChannelList from '../hooks/lists/useBoardChannelList';\r\nimport useAuthContext from '../hooks/useAuthContext';\r\nimport { navigate } from '../navigation';\r\nimport useBoardContentList, { useBoardContentMutation } from '../hooks/lists/useBoardContentList';\r\nimport { Board } from '../types';\r\nimport TextField from '../components/TextField';\r\n\r\n\r\nexport default function BoardEditScreen({navigation, route}: StackScreenProps<any, 'BoardEdit'>) {\r\n  const id = route?.params?.id\r\n  const channel_id = route?.params?.channel_id\r\n  const {auth} = useAuthContext()\r\n  const boardChannelList = useBoardChannelList(auth)\r\n  const boardContentList = useBoardContentList(channel_id)\r\n  const boardContentMutation = useBoardContentMutation()\r\n  const channel = boardChannelList?.find(v=>v.id==channel_id)\r\n  const board = useMemo(()=>boardContentList?.find(v=>v.id==id)?.board_set[0], [boardContentList])\r\n  const [title, setTitle] = useState('')\r\n  const [content, setContent] = useState('')\r\n  const back = ()=>{\r\n    if(navigation.canGoBack())\r\n        navigation.goBack()\r\n      else{\r\n        navigation.replace('Main')\r\n      }\r\n  }\r\n  useEffect(()=>{\r\n    if (!(channel_id && channel) && boardChannelList)\r\n      back()\r\n  }, [boardChannelList])\r\n  useEffect(()=>{\r\n    if (board){\r\n      setTitle(board.title)\r\n      setContent(board.content)\r\n    }\r\n  }, [board])\r\n  return <CommonSection outerContainerStyle={{alignSelf:'center'}}>\r\n    <View style={{justifyContent:'space-around'}}>\r\n      <Text style={{fontSize:20}}>Edit Board</Text>\r\n    </View>\r\n    <View style={styles.separator} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />\r\n    <View style={{width:'50%'}}>\r\n      <TextField name='Channel' disabled={true} value={channel?.name || ''} width={'100%'}/>\r\n      <TextField name='Title' value={title} setValue={setTitle} width={'100%'}/>\r\n      <TextField name='Content'  value={content} setValue={setContent} multiline width={'100%'}/>\r\n    </View>\r\n    <View style={[styles.field, {justifyContent:'flex-end'}]}>\r\n      <CommonButton title={'save'} onPress={()=>{\r\n        const newBoard:Board = {id:board?.id, title, content};\r\n        id?boardContentMutation.update(newBoard):boardContentMutation.create({...newBoard, user:auth.user?.id, channel:channel_id})\r\n        navigate(\"Main\", {screen:\"BoardScreen\", params: {id:channel_id}})\r\n      }}/>\r\n      <CommonButton title={'cancel'} onPress={back}/>\r\n    </View>\r\n  </CommonSection>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  field:{\r\n    width:'50%',\r\n    flexDirection:'row',\r\n    padding:10,\r\n  },\r\n  separator: {\r\n    marginBottom: 20,\r\n    height: 1,\r\n    width: '100%',\r\n  },\r\n})","import React, {useState, useEffect } from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { StyleSheet } from 'react-native';\r\nimport CommonSection from '../components/CommonSection';\r\nimport { View, Text } from '../components/Themed';\r\nimport CommonButton from '../components/CommonButton';\r\nimport useBoardChannelList, { useBoardChannelMutation } from '../hooks/lists/useBoardChannelList';\r\nimport useAuthContext from '../hooks/useAuthContext';\r\nimport { navigate } from '../navigation';\r\nimport { Channel } from '../types';\r\nimport useMessengerChannelList, { useMessengerChannelMutation } from '../hooks/lists/useMessengerChannelList';\r\nimport TextField from '../components/TextField';\r\n\r\n\r\nexport default function ChannelEditScreen({navigation, route}: StackScreenProps<any, 'ChannelEdit'>) {\r\n  const id = route?.params?.id\r\n  const type = route?.params?.type\r\n  const {auth} = useAuthContext()\r\n  const channelList = type=='messenger'?useMessengerChannelList(auth):useBoardChannelList(auth)\r\n  const channelMutation = type=='messenger'?useMessengerChannelMutation():useBoardChannelMutation()\r\n  const channel = channelList?.find(v=>v.id==id)\r\n  const [name, setName] = useState('')\r\n  const [description, setDescription] = useState('')\r\n  const back = ()=>{\r\n    if(navigation.canGoBack())\r\n        navigation.goBack()\r\n      else{\r\n        navigation.replace('Main')\r\n      }\r\n  }\r\n  useEffect(()=>{\r\n    if (channel){\r\n      setName(channel.name)\r\n      setDescription(channel?.description || '')\r\n    }\r\n  }, [channel])\r\n  return <CommonSection outerContainerStyle={{alignSelf:'center'}}>\r\n    <View style={{justifyContent:'space-around'}}>\r\n    <Text style={{fontSize:20}}>Edit Channel - {type}</Text>\r\n    </View>\r\n    <View style={styles.separator} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />\r\n    <View style={{width:'50%'}}>\r\n      <TextField name='Name' value={name} setValue={setName} width={'100%'}/>\r\n      <TextField name='Description' value={description} setValue={setDescription} multiline width={'100%'}/>\r\n    </View>\r\n    <View style={[styles.field, {justifyContent:'flex-end'}]}>\r\n      <CommonButton title={'save'} onPress={()=>{\r\n        if(auth?.user?.id && auth.groupId){\r\n          const newChannel:Channel = {id, name, description, type, owner:auth?.user?.id, group:auth.groupId};\r\n          (id?channelMutation.update(newChannel):channelMutation.create(newChannel)).then(v=>navigate(\"Main\", {\r\n            screen:v.type == 'messenger'?'MessengerScreen':'BoardScreen',\r\n            params:{id:v.id}\r\n          }))\r\n        }\r\n      }}/>\r\n      <CommonButton title={'cancel'} onPress={back}/>\r\n    </View>\r\n  </CommonSection>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  field:{\r\n    width:'50%',\r\n    flexDirection:'row',\r\n    padding:10,\r\n  },\r\n  separator: {\r\n    marginBottom: 20,\r\n    height: 1,\r\n    width: '100%',\r\n  },\r\n})","import React, {useRef,MutableRefObject, useMemo, useState } from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { View, Text } from '../components/Themed';\r\nimport CommonSection from '../components/CommonSection';\r\nimport useAuthContext from '../hooks/useAuthContext';\r\nimport useUserMembershipList from '../hooks/lists/useUserMembershipList';\r\nimport { UserMembership } from '../types';\r\nimport CommonButton from '../components/CommonButton';\r\nimport useMessengerMemberList, { useMessengerMemberMutation } from '../hooks/lists/useMessengerMemberList';\r\nimport { renderMemberItem } from '../tabs/MemberTab';\r\nimport { navigate } from '../navigation';\r\n\r\n\r\nconst InviteItem = (props:{item:UserMembership, selectedRef:MutableRefObject<Set<number>>})=>{\r\n  const [selected, setSelected] = useState(props.selectedRef.current.has(props.item.id))\r\n  return <View style={selected?{borderWidth:1, borderColor:'blue'}:{}}>\r\n    {renderMemberItem(props.item, (item)=>{\r\n      if (selected){\r\n        setSelected(false)\r\n        props.selectedRef.current.delete(item.id)\r\n      }\r\n      else{\r\n        setSelected(true)\r\n        props.selectedRef.current.add(item.id)\r\n      }\r\n    })}\r\n  </View>\r\n\r\n}\r\n\r\nexport default function InviteScreen({navigation, route}: StackScreenProps<any, 'Invite'>) {\r\n  const id = route?.params?.id\r\n  const {auth} = useAuthContext()\r\n  const userList = useUserMembershipList(auth)\r\n  const memberList = useMessengerMemberList(id)\r\n  const messengerMemberMutation = useMessengerMemberMutation()\r\n  const selectedRef = useRef<Set<number>>(new Set())\r\n  const data = useMemo(()=>{\r\n    const memberSet = new Set(memberList?.map(v=>v.user))\r\n    return userList?.filter(v=>!memberSet.has(v.id))\r\n  }, [userList, memberList])\r\n\r\n\r\n  const back = ()=>{\r\n    if(navigation.canGoBack())\r\n      navigation.goBack()\r\n    else if (id)\r\n      navigate(\"ChatScreen\", {id})\r\n    else\r\n      navigation.replace('Main')\r\n  }\r\n\r\n  return <CommonSection outerContainerStyle={{alignSelf:'center'}}>\r\n    {data?.map((item, index)=><InviteItem key={index} item={item} selectedRef={selectedRef}/>)}\r\n    <View style={[{width:'50%', flexDirection:'row', padding:10,}, {justifyContent:'flex-end'}]}>\r\n      <CommonButton title={'save'} onPress={()=>{\r\n        messengerMemberMutation.invite({\r\n          channel_id:id,\r\n          user_ids:[...selectedRef.current]\r\n        })\r\n        back()\r\n      }}/>\r\n      <CommonButton title={'cancel'} onPress={back}/>\r\n    </View>\r\n  </CommonSection>\r\n}\r\n\r\n","import LoginScreen from \"./main/LoginScreen\";\r\nimport ChatScreen from \"./main/ChatScreen\";\r\nimport HomeScreen from \"./main/HomeScreen\";\r\nimport TabOneScreen from \"./main/TabOneScreen\";\r\nimport BoardScreen from \"./main/BoardScreen\";\r\nimport BoardEditScreen from \"./BoardEditScreen\";\r\nimport ChannelEditScreen from \"./ChannelEditScreen\"\r\nimport { Screens } from \"../types\";\r\nimport InviteScreen from \"./InviteScreen\";\r\nimport ProfileScreen from \"./ProfileScreen\";\r\n\r\nexport const main = {\r\n    HomeScreen:{\r\n        title:'home',\r\n        component:HomeScreen,\r\n        path:'home',\r\n    },\r\n    ChatScreen:{\r\n        title:'chat',\r\n        component:ChatScreen,\r\n        path:'chat'\r\n    },\r\n    BoardScreen:{\r\n        title:'board',\r\n        component:BoardScreen,\r\n        path:'board'\r\n    },\r\n    TabOneScreen:{\r\n        title:'tab one',\r\n        component:TabOneScreen,\r\n        path:'one'\r\n    },\r\n} as Screens\r\n\r\nexport const login = {\r\n    LoginScreen:{\r\n        path: 'login',\r\n        title: '로그인',\r\n        component:LoginScreen\r\n    },\r\n} as Screens\r\n\r\nexport const modal = {\r\n    BoardEditScreen:{\r\n        title:'board',\r\n        component:BoardEditScreen,\r\n        path:'modal/board'\r\n    },\r\n    ChannelEditScreen:{\r\n        title:'channel',\r\n        component:ChannelEditScreen,\r\n        path:'modal/channel'\r\n    },\r\n    InviteScreen:{\r\n        title:'invite',\r\n        component:InviteScreen,\r\n        path:'modal/invite'\r\n    },\r\n    ProfileScreen:{\r\n        title:'profile',\r\n        component:ProfileScreen,\r\n        path:'modal/profile'\r\n    }\r\n} as Screens","import React, {useLayoutEffect} from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { StyleSheet, Text, Button, View} from 'react-native';\r\nimport {TabViewNavigator} from '../../navigation/DrawerNavigator';\r\nimport useResizeWindow from '../../hooks/useResizeWindow';\r\nimport { bottomTabs } from '../../tabs';\r\nimport { navigate } from '../../navigation';\r\nimport HeaderRight from '../../components/HeaderRight';\r\n\r\n// navigate(\"BoardEditScreen\", {channel_id:item.channel, id:item.id})\r\n// deleteBoardContent(item.id).then(()=>navigate('BoardScreen', {id:item.channel}))\r\n\r\nexport default function HomeScreen({navigation, route}: StackScreenProps<any, 'Home'>) {\r\n  const windowType = useResizeWindow();\r\n\r\n  const options = [\r\n    {title:'member', headerRight:()=><HeaderRight/>},\r\n    {title:'messenger', headerRight:()=><HeaderRight extra={[{title:'create', onPress:()=>navigate(\"ChannelEditScreen\", {type:\"messenger\"})}]}/>},\r\n    {title:'board', headerRight:()=><HeaderRight extra={[{title:'create', onPress:()=>navigate(\"ChannelEditScreen\", {type:\"board\"})}]}/>},\r\n    {title:'config', headerRight:()=><HeaderRight/>}\r\n  ]\r\n  \r\n  useLayoutEffect(() => {\r\n    const index = route?.params?.tab | 0\r\n    navigation.setOptions(windowType == 'portrait'?options[index]:{\r\n      title: 'home',\r\n      headerRight: ()=><HeaderRight/>\r\n    });\r\n  }, [navigation, route, windowType]);\r\n  return windowType == 'landscape'?\r\n    <View style={{padding:10}}></View>:\r\n    <TabViewNavigator tabs={bottomTabs} tabBarPosition=\"bottom\" index={parseInt(route.params?.['tab'] || 0)} onTab={(index)=>{navigation.setParams({tab:index})}}/>\r\n}\r\n\r\n","import React, {useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState} from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { StyleSheet, Text, Button, View} from 'react-native';\r\nimport CommonSection from '../../components/CommonSection';\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\nimport { FlatList, TextInput } from 'react-native-gesture-handler';\r\nimport CommonButton from '../../components/CommonButton';\r\nimport useMessengerContentList, { MessengerContentPage, useMessengerContentMutation } from '../../hooks/lists/useMessengerContent.List';\r\nimport useAuthContext from '../../hooks/useAuthContext';\r\nimport HeaderRight from '../../components/HeaderRight';\r\nimport useMessengerMemberList, { useMessengerMemberMutation } from '../../hooks/lists/useMessengerMemberList';\r\nimport { navigate } from '../../navigation';\r\nimport Colors from '../../constants/Colors';\r\n\r\nconst marginBottom = 65\r\n\r\nexport default function ChatScreen({navigation, route}: StackScreenProps<any, 'Chat'>) {\r\n  const channel_id = route?.params?.id\r\n  const height = useRef(0)\r\n  const {auth} = useAuthContext()\r\n  const {data, fetchNextPage } = useMessengerContentList(channel_id)\r\n  const memberList = useMessengerMemberList(channel_id)\r\n  const member_id = useMemo(()=>memberList?.find(v=>v.user == auth.user?.id)?.id, [auth, memberList])\r\n  const messengerMemberMutation = useMessengerMemberMutation()\r\n  const [value, setValue] = useState('')\r\n  const postValue = ()=>{\r\n    contentMutation.create({channel:channel_id, user:auth.user?.id, content:value})\r\n    setValue('')\r\n  }\r\n  const contentMutation = useMessengerContentMutation()\r\n\r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      headerRight: ()=> <HeaderRight extra={[\r\n        {title:'invite', onPress:()=>{navigate(\"InviteScreen\", {id:channel_id})}},\r\n        {title:'leave', onPress:()=>{member_id && messengerMemberMutation.leave(member_id);back()}}\r\n      ]}/>\r\n    });\r\n  }, [navigation, route, member_id]);\r\n\r\n  const renderItem = useCallback(({item, index}:{item:MessengerContentPage, index:number})=>{\r\n    let nextPage = item.next;\r\n    while(nextPage?.next && nextPage.current.length==0){\r\n      nextPage = nextPage.next\r\n    }\r\n    const nextContent = nextPage?.current[0]\r\n    return <View style={{flexDirection: 'column-reverse'}}>\r\n      \r\n      {item.current.map((content, index2)=>{\r\n        const next = index2 + 1 < item.current.length?item.current[index2+1]:nextContent\r\n        const created:string = content.created.slice(0, 16)\r\n        const date = created.slice(0, 10)\r\n        const isSystem = content.user == null\r\n        const isFirst = next==undefined || (content.user != next.user || created != next.created.slice(0, 16))\r\n        const isSelf = auth.user?.id == content.user\r\n        const dayChanged = next==undefined || date != next.created.slice(0, 10)\r\n        if (isSystem)\r\n          return <View key={content.id} style={{flexDirection:'row', justifyContent:'center', width:'100%'}}>\r\n            <Text>{content.message_set[0].content}</Text>\r\n          </View>\r\n        return <View key={content.id}>\r\n          {dayChanged?<View style={{flexDirection:'row', justifyContent:'center', width:'100%'}}><Text>{date}</Text></View>:undefined}\r\n          <View key={content.id} style={{flexDirection:'row', justifyContent:isSelf?'space-between':'flex-start', width:'100%'}}>\r\n            {isFirst && !isSelf?<MaterialIcons size={38} style={{marginBottom: -3, marginRight:10 }} name='account-circle'/>:<View style={{width:48}}/>}\r\n            <CommonSection outerContainerStyle={{width:undefined, maxWidth:'90%'}} title={isFirst?content.name:undefined} titleStyle={{flex:undefined}} bodyStyle={{padding:10}} subtitle={`${created.slice(11)}`}>\r\n              <Text>{content.message_set[0].content}</Text>\r\n            </CommonSection>\r\n          </View>\r\n        </View>\r\n      })}\r\n    </View>\r\n  }, [navigation, contentMutation])\r\n  \r\n  const back = ()=>{\r\n    if(navigation.canGoBack())\r\n        navigation.goBack()\r\n      else{\r\n        navigation.navigate('HomeScreen', {tab:2})\r\n      }\r\n  }\r\n  useEffect(()=>{\r\n    if (!(channel_id))\r\n      back()\r\n  }, [])\r\n\r\n  return <View style={{flex:1, alignItems:'center'}}>\r\n    <FlatList\r\n        style={{width:'100%', flexDirection: 'column-reverse', marginBottom}}\r\n        contentContainerStyle={{padding:10, flexGrow:1, flexDirection: 'column-reverse'}}\r\n        data={data?.pages}\r\n        renderItem={renderItem}\r\n        onScroll={(e)=>{\r\n          if (e.nativeEvent.contentOffset.y + e.nativeEvent.contentSize.height - height.current == 0)\r\n            fetchNextPage()\r\n        }}\r\n        onLayout={(p)=>{height.current = p.nativeEvent.layout.height}}\r\n      />\r\n      <View style={{width:'100%'}}>\r\n        <View style={{position:'absolute', top:-marginBottom, width:'100%', backgroundColor:'white', alignItems:'center'}}>\r\n          <View style={{width:'100%',flexDirection:'row', paddingTop:15, paddingBottom:10, paddingHorizontal:19}}>\r\n            <TextInput value={value} onChangeText={setValue} style={{flex:1, borderWidth:1, height:40, borderRadius:6, borderColor:Colors.borderColor}} onSubmitEditing={postValue}/><CommonButton title={'write'} onPress={postValue}/>\r\n          </View>\r\n        </View>\r\n      </View>\r\n  </View>\r\n}\r\n// outerContainerStyle={{alignContent:'flex-end'}} containerStyle={{width:'50%'}}\r\n","import React, {useCallback, useEffect, useLayoutEffect} from 'react';\r\nimport {FlatList } from 'react-native';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { FontAwesome, MaterialIcons } from '@expo/vector-icons';\r\nimport useBoardContentList, { useBoardContentMutation } from '../../hooks/lists/useBoardContentList';\r\nimport CommonSection from '../../components/CommonSection';\r\nimport { View, Text } from '../../components/Themed';\r\nimport CommonButton from '../../components/CommonButton';\r\nimport { BoardContent } from '../../types';\r\nimport HeaderRight from '../../components/HeaderRight';\r\nimport { useBoardChannelMutation } from '../../hooks/lists/useBoardChannelList';\r\n\r\n\r\n\r\n\r\nexport default function BoardScreen({navigation, route}: StackScreenProps<any, 'Board'>) {\r\n  const channel_id = route?.params?.id\r\n  const contentList = useBoardContentList(channel_id)\r\n  const boardChannelMutation = useBoardChannelMutation()\r\n  const contentMutation = useBoardContentMutation()\r\n\r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      headerRight: ()=> <HeaderRight extra={[{title:'delete', onPress:()=>{boardChannelMutation.delete(channel_id);back()}}]}/>\r\n    });\r\n  }, [navigation, route]);\r\n  \r\n  const renderItem = useCallback(({item}:{item:BoardContent})=><CommonSection bodyStyle={{alignItems:'flex-start', paddingHorizontal:35}}>\r\n    <View style={{flexDirection:'row', width:'100%', justifyContent:'space-between'}}>\r\n      <View style={{flexDirection:'row'}}>\r\n        <MaterialIcons size={38} style={{marginBottom: -3, marginRight:10 }} name='account-circle'/>\r\n        <View>\r\n          <Text style={{fontSize:16}}>{item.name}</Text>\r\n          <Text style={{fontSize:14, opacity: 0.4}}>{item.created.split('.')[0].replace('T', ' ')}</Text>\r\n        </View>\r\n      </View>\r\n      <View style={{flexDirection:'row'}}>\r\n        <CommonButton title={'edit'} onPress={()=>navigation.navigate(\"BoardEditScreen\", {channel_id:item.channel, id:item.id})}/>\r\n        <CommonButton title={'delete'} onPress={()=> contentMutation.delete(item.id)}/>\r\n      </View>\r\n    </View>\r\n    <Text style={{fontSize:20}}>{item.board_set[0].title}</Text>\r\n    <Text style={{fontSize:14}}>{item.board_set[0].content}</Text>\r\n  </CommonSection>\r\n  , [navigation, contentMutation])\r\n  \r\n  const back = ()=>{\r\n    if(navigation.canGoBack())\r\n        navigation.goBack()\r\n      else{\r\n        navigation.navigate('HomeScreen', {tab:2})\r\n      }\r\n  }\r\n  useEffect(()=>{\r\n    if (!(channel_id))\r\n      back()\r\n  }, [])\r\n  return <View style={{flex:1, backgroundColor:'white'}}>\r\n      <FlatList\r\n        data={contentList}\r\n        renderItem={renderItem}\r\n        contentContainerStyle={{flexGrow:1}}\r\n        ListFooterComponent={()=><CommonSection bodyStyle={{flexDirection:'row', justifyContent:'flex-end', paddingVertical:0, borderWidth:0}}>\r\n            <CommonButton title={'write'} onPress={()=>navigation.navigate(\"BoardEditScreen\", {channel_id})}/>\r\n        </CommonSection>}\r\n      />\r\n  </View>\r\n}\r\n// outerContainerStyle={{alignContent:'flex-end'}} containerStyle={{width:'50%'}}\r\n","import React, {useCallback, useEffect, useRef} from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { StyleSheet, Text, Button, View} from 'react-native';\r\nimport Profile from '../components/Profile';\r\nimport useAuthContext from '../hooks/useAuthContext';\r\nimport useUserMembershipList from '../hooks/lists/useUserMembershipList';\r\nimport { useMessengerChannelMutation } from '../hooks/lists/useMessengerChannelList';\r\nimport CommonButton from '../components/CommonButton';\r\nimport { Channel } from '../types';\r\nimport { navigate } from '../navigation';\r\n\r\n\r\nexport default function ProfileScreen({\r\n  navigation, route\r\n}: StackScreenProps<any, 'Profile'>) {\r\n  const id = route?.params?.id\r\n  const {auth} = useAuthContext()\r\n  const userList = useUserMembershipList(auth)\r\n  const user = userList?.find(v=>v.id==id)\r\n  const channelMutation = useMessengerChannelMutation()\r\n  const back = ()=>{\r\n    if(navigation.canGoBack())\r\n        navigation.goBack()\r\n      else{\r\n        navigation.replace('Main')\r\n      }\r\n  }\r\n  useEffect(()=>{\r\n    if (!(id && user) && userList)\r\n      back()\r\n  }, [userList])\r\n  return user?<View style={{padding:10}}>\r\n    \r\n    <Profile username={user?.username} name={user?.name} />\r\n    <CommonButton title={'create messenger'} onPress={()=>{\r\n      if(auth?.user?.id && auth.groupId){\r\n        const newChannel:Channel = {name:`${auth.user.name}, ${user.name}`, type:'messenger', owner:auth?.user?.id, group:auth.groupId};\r\n        channelMutation.create(newChannel).then(v=>navigate(\"Main\", {screen:\"MessengerScreen\", params: {id:v.id}}))\r\n      }\r\n    }}/>\r\n  </View>:<></>\r\n}\r\n","import React, { createContext, useContext } from \"react\"\r\nimport useWebSocket from \"react-use-websocket\"\r\nimport { SendJsonMessage } from \"react-use-websocket/dist/lib/types\"\r\n\r\nconst WebSocketContext = createContext<{lastJsonMessage:any, sendJsonMessage:SendJsonMessage }>({lastJsonMessage:null, sendJsonMessage:()=>{}});\r\n\r\nconst WebSocketProviderInternal = ({children}:{children:React.ReactNode})=>{\r\n  const { lastJsonMessage, sendJsonMessage } = useWebSocket('ws://localhost:9000/messenger/ws/',{\r\n    shouldReconnect: (closeEvent) => true\r\n  })\r\n  return <WebSocketContext.Provider value={{lastJsonMessage, sendJsonMessage}}>\r\n  {children}\r\n</WebSocketContext.Provider>\r\n}\r\n\r\nexport const WebSocketProvider = ({disable, children}:{disable?:boolean, children:React.ReactNode})=>{\r\n  return disable?<>{children}</>:<WebSocketProviderInternal>\r\n    {children}\r\n  </WebSocketProviderInternal>\r\n}\r\n\r\nexport default ()=>{\r\n  const webSocketContext = useContext(WebSocketContext)\r\n  return webSocketContext\r\n}\r\n\r\n","import { useQuery } from \"react-query\";\r\nimport { getUserMembershipList } from \"../../apis\";\r\nimport { Auth } from \"../useAuthContext\";\r\n\r\nexport default function useUserMembershipList(auth?:Auth){\r\n  const { data } = useQuery([\"UserMembershipList\", auth?.groupId] , async()=>auth?.groupId?(await getUserMembershipList(auth?.groupId)):[])\r\n  return data\r\n}","import { MaterialCommunityIcons, MaterialIcons } from \"@expo/vector-icons\"\r\nimport React from \"react\"\r\nimport { Text, View } from \"react-native\"\r\nimport CommonItem from \"../components/CommonItem\"\r\nimport useAuthContext from \"../hooks/useAuthContext\"\r\nimport useUserMembershipList from \"../hooks/lists/useUserMembershipList\"\r\nimport { UserMembership } from \"../types\"\r\nimport { navigate } from \"../navigation\"\r\n\r\nexport const renderMemberItem = (item:UserMembership, onPress?:(item:UserMembership)=>void)=> (\r\n    <CommonItem key={item.id} bodyStyle={{flexDirection:'row', justifyContent:'flex-start'}} onPress={onPress?()=>onPress(item):undefined}>\r\n        <MaterialIcons size={38} style={{ marginBottom: -3, marginRight:10 }} name='account-circle'/>\r\n        <Text style={{fontSize:20, fontWeight:'400'}}>{item.name}</Text>\r\n    </CommonItem>\r\n)\r\n\r\nexport default ()=>{\r\n    const {auth} = useAuthContext()\r\n    const userList = useUserMembershipList(auth)\r\n    return <View style={{flex:1, backgroundColor:'white'}}>\r\n        {userList && userList.map(item=>renderMemberItem(item, (item)=>navigate(\"ProfileScreen\", {id:item.id})))}\r\n    </View>\r\n}\r\n\r\nexport const MemberIcon = <MaterialCommunityIcons size={32} style={{ marginBottom: -3 }} name='account'/>","import { ColorSchemeName, useColorScheme as _useColorScheme } from 'react-native';\r\n\r\n// The useColorScheme value is always either light or dark, but the built-in\r\n// type suggests that it can be null. This will not happen in practice, so this\r\n// makes it a bit easier to work with.\r\nexport default function useColorScheme(): NonNullable<ColorSchemeName> {\r\n  return _useColorScheme() as NonNullable<ColorSchemeName>;\r\n}\r\n","import React, { useState } from 'react';\r\nimport { StyleSheet} from 'react-native';\r\nimport { CustomButtonProps } from '../types';\r\nimport CommonButton from './CommonButton';\r\n\r\nexport default (props:CustomButtonProps)=>{\r\n    return <CommonButton {...props} style={[styles.style, props.style]}/>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    style:{\r\n        borderRadius:6, \r\n        backgroundColor: 'transparent',\r\n        borderWidth:0\r\n    },\r\n});\r\n","import { useTheme } from '@react-navigation/native';\r\nimport React, { useState } from 'react';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport { TabView, SceneMap,NavigationState, SceneRendererProps, TabBar } from 'react-native-tab-view';\r\nimport { navigate } from '.';\r\nimport Profile from '../components/Profile';\r\nimport TextButton from '../components/TextButton';\r\nimport Colors from '../constants/Colors';\r\nimport useResizeWindow from '../hooks/useResizeWindow';\r\nimport { drawerTabs } from '../tabs';\r\nimport { UserMembership } from '../types';\r\n\r\nexport const TabViewNavigator = (props:{tabs:typeof drawerTabs, tabBarPosition:\"top\"|\"bottom\", index?:number, onTab?:(index:number)=>void})=>{\r\n  const [index, setIndex] = React.useState(props.index || 0);\r\n  const entries = Object.entries(props.tabs)\r\n  const onTab = props.onTab\r\n  const icons = Object.assign({}, ...entries.map(([k, v])=>({[k]:v.icon})))\r\n  return <TabView\r\n    renderTabBar={(props:SceneRendererProps & {navigationState: NavigationState<any>})=>{\r\n      return <TabBar\r\n        {...props}\r\n        indicatorStyle={{ backgroundColor: \"#2196F3\" }}\r\n        style={{ backgroundColor:'white' }}\r\n        activeColor={'black'}\r\n        inactiveColor={'black'}\r\n        renderIcon={(scene)=>icons[scene.route.key]}\r\n        onTabPress={(scene)=>onTab?.(entries.findIndex(([k, v])=>k == scene.route.key))}\r\n      />\r\n    }}\r\n    navigationState={{ index, routes: entries.map(([k, v])=>({key:k, title:v.title}))}}\r\n    onIndexChange={setIndex}\r\n    renderScene={SceneMap(Object.assign({}, ...entries.map(([k, v])=>({[k]:v.component}))))}\r\n    tabBarPosition={props.tabBarPosition}\r\n  />\r\n}\r\n\r\nconst onAddList = [\r\n  ()=>navigate(\"ChannelEditScreen\", {type:\"messenger\"}),\r\n  ()=>navigate(\"ChannelEditScreen\", {type:\"board\"})\r\n]\r\n\r\nexport default ({user}:{user:UserMembership})=> {\r\n  const { colors } = useTheme();\r\n  const windowType = useResizeWindow();\r\n  const [index, setIndex] = useState(0);\r\n  return windowType=='landscape'?<View\r\n      style={[\r\n        styles.tabBar,\r\n        {\r\n          backgroundColor: colors.card,\r\n          borderTopColor: colors.border,\r\n        },\r\n        // tabBarStyle,\r\n      ]}\r\n      pointerEvents={false ? 'none' : 'auto'}\r\n    >\r\n      <Profile username={user.username} name={user.name}/>\r\n      <View style={{flexDirection:'row-reverse'}}>\r\n          <TextButton title='+' textStyle={{fontSize:20}} style={{borderRadius:20}} onPress={onAddList[index]}/>\r\n      </View>\r\n      <View accessibilityRole=\"tablist\" style={styles.content}>\r\n        <TabViewNavigator tabs={drawerTabs} tabBarPosition={\"top\"} onTab={setIndex}/>\r\n      </View>\r\n    </View>:<View style={{width:0}}></View>\r\n}\r\n\r\n{/*<Text style={[styles.label, { color: d.isFocused ? colors.primary : '#222' }]}></Text> */}\r\n\r\nconst styles = StyleSheet.create({\r\n    tabBar: {\r\n      width:240,\r\n      elevation: 8,\r\n      borderRightWidth:1,\r\n      borderColor:Colors.borderColor\r\n    },\r\n    content: {\r\n      flex: 1,\r\n      flexDirection: 'row',\r\n    },\r\n    tab: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n    },\r\n    label: {\r\n        textAlign: 'center',\r\n        backgroundColor: 'transparent',\r\n      },\r\n  });","import React from \"react\"\r\nimport { View, Text } from \"react-native\"\r\nimport CommonItem from \"../components/CommonItem\"\r\nimport useBoardChannelList from \"../hooks/lists/useBoardChannelList\"\r\nimport useMessengerChannelList from \"../hooks/lists/useMessengerChannelList\"\r\nimport useAuthContext from \"../hooks/useAuthContext\"\r\nimport { navigate } from \"../navigation\"\r\n\r\nconst DrawerTab = (props:{data:{name:string, onPress?:()=>void}[]})=><View style={{flex:1, backgroundColor:'white'}}>\r\n    {props.data.map((item, index)=><CommonItem key={index} containerStyle={{marginHorizontal:0}} bodyStyle={{alignItems:'flex-start'}} onPress={item.onPress}>\r\n        <Text style={{marginLeft:20}}>{item.name}</Text>\r\n    </CommonItem>\r\n    )}\r\n</View>\r\n\r\nexport default {\r\n    Messenger:()=>{\r\n        const {auth} = useAuthContext()\r\n        const channelList = useMessengerChannelList(auth);\r\n        return <DrawerTab data={(channelList || []).map(item=>({...item, onPress:()=>navigate(\"ChatScreen\", {id:item.id})}))}/>\r\n    },\r\n    Board:()=>{\r\n        const {auth} = useAuthContext()\r\n        const channelList = useBoardChannelList(auth);\r\n        return <DrawerTab data={(channelList || []).map(item=>({...item, onPress:()=>navigate(\"BoardScreen\", {id:item.id})}))}/>\r\n    },\r\n}","import { Ionicons, FontAwesome } from \"@expo/vector-icons\"\r\nimport React from \"react\"\r\nimport { Text, View } from \"react-native\"\r\nimport CommonItem from \"../components/CommonItem\"\r\nimport useAuthContext from \"../hooks/useAuthContext\"\r\nimport useMessengerChannelList from \"../hooks/lists/useMessengerChannelList\"\r\nimport { navigate } from \"../navigation\"\r\n\r\nexport default ()=>{\r\n    const {auth} = useAuthContext()\r\n    const channelList = useMessengerChannelList(auth)\r\n    const today = (new Date()).toISOString().slice(0, 10)\r\n    return <View style={{flex:1, backgroundColor:'white'}}>\r\n        {channelList?.map((item, index)=>{\r\n            const date = item.last_message?.created.slice(0,10)\r\n            return <CommonItem key={index} bodyStyle={{flexDirection:'row', justifyContent:'space-between'}} onPress={()=>navigate(\"ChatScreen\", {id:item.id})}>\r\n                <View style={{flexDirection:'row'}}>\r\n                    <FontAwesome size={36} style={{ marginBottom: -3, marginRight:20 }} name='users'/>\r\n                    <View>\r\n                        <View style={{flexDirection:'row'}}>\r\n                            <Text style={{fontSize:18}}>{item.name}</Text>\r\n                            <Text style={{fontSize:18, opacity: 0.4, paddingLeft:5}}>{item.member_count}</Text>\r\n                        </View>\r\n                        <Text style={{fontSize:16, opacity: 0.4}}>{item.last_message?.content}</Text>\r\n                    </View>\r\n                </View>\r\n                <View>\r\n                    <Text style={{fontSize:14, opacity: 0.4, textAlign:'right'}}>{date==today?item.last_message?.created.slice(11,16):date}</Text>\r\n                    <Text style={{fontSize:14, textAlign:'right'}}>{item.unread_count?item.unread_count:' '}</Text>\r\n                </View>\r\n            </CommonItem>\r\n        })}\r\n    </View>\r\n}\r\n\r\nexport const MessengerIcon = <Ionicons size={30} style={{ marginBottom: -3 }} name='chatbox'/>","import { FontAwesome, FontAwesome5 } from \"@expo/vector-icons\"\r\nimport React from \"react\"\r\nimport { Text, View } from \"react-native\"\r\nimport CommonItem from \"../components/CommonItem\"\r\nimport useBoardChannelList from \"../hooks/lists/useBoardChannelList\"\r\nimport useAuthContext from \"../hooks/useAuthContext\"\r\nimport { navigate } from \"../navigation\"\r\n\r\nexport default ()=>{\r\n    const {auth} = useAuthContext()\r\n    const channelList = useBoardChannelList(auth)\r\n    return <View style={{flex:1, backgroundColor:'white'}}>\r\n        {channelList?.map(item=><CommonItem key={item.id} bodyStyle={{flexDirection:'row', justifyContent:'flex-start'}} onPress={()=>navigate(\"BoardScreen\", {id:item.id})}>\r\n            <FontAwesome size={32} style={{ marginBottom: -3, marginRight:10 }} name='bars'/>\r\n            <Text style={{fontSize:20, fontWeight:'400'}}>{item.name}</Text>\r\n        </CommonItem>)}\r\n    </View>\r\n}\r\n\r\nexport const BoardIcon = <FontAwesome5 size={30} style={{ marginBottom: 3 }} name='clipboard-list'/>","import React from \"react\";\r\nimport MemberTab, {MemberIcon} from \"./MemberTab\";\r\nimport OneTab, {ConfigIcon} from \"./OneTab\";\r\nimport DrawerTab  from './DrawerTab';\r\nimport MessengerTab, {MessengerIcon} from \"./MessengerTab\";\r\nimport BoardTab, {BoardIcon}  from \"./BoardTab\";\r\n\r\nexport const bottomTabs = {\r\n    OneTab:{\r\n        title:'member',\r\n        component:MemberTab,\r\n        icon:MemberIcon,\r\n    },\r\n    TwoTab:{\r\n        title:'messenger',\r\n        component:MessengerTab,\r\n        icon:MessengerIcon\r\n    },\r\n    ThreeTab:{\r\n        title:'board',\r\n        component:BoardTab,\r\n        icon:BoardIcon\r\n    },\r\n    // FourTab:{\r\n    //     title:'config',\r\n    //     component:OneTab,\r\n    //     icon:ConfigIcon\r\n    // }\r\n} as Record<string, {title:string, component:React.ComponentType<any>, icon:JSX.Element}>\r\n\r\nexport const drawerTabs = {\r\n    TwoTab:{\r\n        title:'messenger',\r\n        component:DrawerTab.Messenger,\r\n        icon:MessengerIcon\r\n    },\r\n    ThreeTab:{\r\n        title:'board',\r\n        component:DrawerTab.Board,\r\n        icon:BoardIcon\r\n    }\r\n} as Record<string, {title:string, component:React.ComponentType<any>, icon:JSX.Element}>","import * as React from 'react';\r\nimport {View, Text} from 'react-native';\r\nimport { Avatar } from 'react-native-paper';\r\nimport Colors from '../../constants/Colors';\r\nimport { ProfileProps } from '../../types';\r\n\r\nexport default (props:ProfileProps) => (\r\n    <View style={{width:'100%', height:135, justifyContent:'space-evenly', alignItems:'center'}}>\r\n        <Avatar.Text style={{backgroundColor:Colors.header}} size={75} label={props.name.split(' ').map(v=>v[0]).join().toUpperCase()} />\r\n        <Text style={{fontWeight:'bold', fontSize:15}}>{props.name}</Text>\r\n        <Text style={{fontWeight:'normal', fontSize:14}}>{props.username}</Text>\r\n    </View>\r\n);","import React from 'react';\r\nimport {View} from 'react-native'\r\nimport Profile from '../lib/react-native-paper/Profile';\r\nimport { ProfileProps } from '../types';\r\n\r\nexport default (props:ProfileProps)=>{\r\n    return <View style={{width:'100%', height:135}}>\r\n        <Profile {...props}/>\r\n    </View>\r\n}\r\n\r\n","/**\r\n * Learn more about Light and Dark modes:\r\n * https://docs.expo.io/guides/color-schemes/\r\n */\r\n\r\nimport * as React from 'react';\r\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\r\n\r\nimport Colors from '../constants/Colors'\r\nimport useColorScheme from '../hooks/useColorScheme';\r\n\r\nexport function useThemeColor(\r\n  props: { light?: string; dark?: string },\r\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\r\n) {\r\n  const theme = useColorScheme();\r\n  const colorFromProps = props[theme];\r\n\r\n  if (colorFromProps) {\r\n    return colorFromProps;\r\n  } else {\r\n    return Colors[theme][colorName];\r\n  }\r\n}\r\n\r\ntype ThemeProps = {\r\n  lightColor?: string;\r\n  darkColor?: string;\r\n};\r\n\r\nexport type TextProps = ThemeProps & DefaultText['props'];\r\nexport type ViewProps = ThemeProps & DefaultView['props'];\r\n\r\nexport function Text(props: TextProps) {\r\n  const { style, lightColor, darkColor, ...otherProps } = props;\r\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\r\n\r\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\r\n}\r\n\r\nexport function View(props: ViewProps) {\r\n  const { style, lightColor, darkColor, ...otherProps } = props;\r\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\r\n\r\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\r\n}\r\n","/**\r\n * Learn more about deep linking with React Navigation\r\n * https://reactnavigation.org/docs/deep-linking\r\n * https://reactnavigation.org/docs/configuring-links\r\n */\r\n\r\nimport { LinkingOptions } from '@react-navigation/native';\r\nimport * as Linking from 'expo-linking';\r\nimport {main, login, modal} from '../screens';\r\n\r\nexport default  {\r\n  prefixes: [Linking.makeUrl('/')],\r\n  config: {\r\n    screens: {\r\n      Main: {\r\n        screens:{\r\n          ...main,\r\n          ...login,\r\n          NotFound: '*',\r\n        }\r\n      },\r\n      ...modal\r\n    },\r\n  },\r\n} as LinkingOptions;\r\n","import React from 'react';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\r\nimport Navigation from './src/navigation';\r\nimport useColorScheme from './src/hooks/useColorScheme';\r\nimport useCachedResources from './src/hooks/useCachedResources';\r\n\r\nexport default function App() {\r\n  const isLoadingComplete = useCachedResources();\r\n  const colorScheme = useColorScheme();\r\n  if (!isLoadingComplete) {\r\n    return null;\r\n  } else {\r\n    return (\r\n      <SafeAreaProvider>\r\n        <Navigation colorScheme={colorScheme} />\r\n        <StatusBar />\r\n      </SafeAreaProvider>\r\n    );\r\n  }\r\n}\r\n","import { Ionicons } from '@expo/vector-icons';\r\nimport * as Font from 'expo-font';\r\nimport * as SplashScreen from 'expo-splash-screen';\r\nimport * as React from 'react';\r\n\r\nexport default function useCachedResources() {\r\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\r\n\r\n  // Load any resources or data that we need prior to rendering the app\r\n  React.useEffect(() => {\r\n    async function loadResourcesAndDataAsync() {\r\n      try {\r\n        SplashScreen.preventAutoHideAsync();\r\n\r\n        // Load fonts\r\n        await Font.loadAsync({\r\n          ...Ionicons.font,\r\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\r\n        });\r\n      } catch (e) {\r\n        // We might want to provide this error information to an error reporting service\r\n        console.warn(e);\r\n      } finally {\r\n        setLoadingComplete(true);\r\n        SplashScreen.hideAsync();\r\n      }\r\n    }\r\n\r\n    loadResourcesAndDataAsync();\r\n  }, []);\r\n\r\n  return isLoadingComplete;\r\n}\r\n","import { StackScreenProps } from '@react-navigation/stack';\r\nimport * as React from 'react';\r\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\r\n\r\nexport default function NotFoundScreen({\r\n  navigation,\r\n}: StackScreenProps<any, 'NotFound'>) {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>This screen doesn't exist.</Text>\r\n      <TouchableOpacity onPress={() => navigation.replace('HomeScreen')} style={styles.link}>\r\n        <Text style={styles.linkText}>Go to home screen!</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n  link: {\r\n    marginTop: 15,\r\n    paddingVertical: 15,\r\n  },\r\n  linkText: {\r\n    fontSize: 14,\r\n    color: '#2e78b7',\r\n  },\r\n});\r\n","import { CardStyleInterpolators, createStackNavigator } from '@react-navigation/stack';\r\nimport React, {useMemo} from 'react';\r\nimport { View } from 'react-native';\r\nimport { QueryClient, QueryClientProvider } from \"react-query\";\r\n\r\nimport useResizeWindow from '../hooks/useResizeWindow';\r\nimport NotFoundScreen from '../screens/NotFoundScreen';\r\nimport {main, login, modal} from '../screens';\r\nimport DrawerNavigator from './DrawerNavigator';\r\nimport useAuthContext, {AuthProvider} from '../hooks/useAuthContext';\r\nimport { WebSocketProvider } from '../hooks/useWebsocketContext';\r\nimport HeaderRight from '../components/HeaderRight'\r\nimport Colors from '../constants/Colors';\r\n\r\nconst Root = createStackNavigator();\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nexport default function RootNavigator() {\r\n    const windowType = useResizeWindow();\r\n    return (\r\n            <AuthProvider>\r\n                <QueryClientProvider client={queryClient}>\r\n                    {/* devtools */}\r\n                    {/* <ReactQueryDevtools initialIsOpen={true} /> */}\r\n                        <Root.Navigator\r\n                            mode= 'modal'\r\n                            headerMode= 'screen'\r\n                            screenOptions={{\r\n                                cardStyle:{backgroundColor:\"white\"},\r\n                                animationEnabled: true,\r\n                                cardStyleInterpolator: CardStyleInterpolators.forVerticalIOS,\r\n                            }}\r\n                        >\r\n                            <Root.Screen name=\"Main\" component={MainNavigator} options={{headerShown:false}}/>\r\n                            {Object.entries(modal).map(([key, screen])=><Root.Screen key={key} name={key} component={screen.component} options={{\r\n                                title: screen.title,\r\n                                gestureDirection: windowType == 'landscape'?'vertical-inverted':'vertical'\r\n                            }} />)}\r\n                        </Root.Navigator>\r\n                </QueryClientProvider>\r\n            </AuthProvider>\r\n    );\r\n}\r\n\r\nconst Main = createStackNavigator();\r\n\r\nfunction MainNavigator(){\r\n    const {auth} = useAuthContext()\r\n    const entries = useMemo(()=>{\r\n        if (auth.user === undefined)\r\n            return []\r\n        console.log('current user: ', auth.user)\r\n        return Object.entries(auth.user === null?login:main)\r\n    }, [auth])\r\n    return (auth.user!==undefined?<View style={{flexDirection:'row', flex:1}}>\r\n        {auth.user?<DrawerNavigator user={auth.user}/>:undefined}\r\n        <View style={{flex:1}}>\r\n            <WebSocketProvider disable={auth.user === null || auth.user === undefined}>\r\n                <Main.Navigator\r\n                    screenOptions={{\r\n                        headerStyle:{backgroundColor:Colors.header},\r\n                        headerTitleStyle:{color:'white'},\r\n                        headerRight:()=><HeaderRight/>,\r\n                        headerLeftContainerStyle:{backgroundColor:'white', borderBottomWidth:1, borderColor:Colors.borderColor}\r\n                    }}\r\n                >\r\n                    {entries.map(([key, screen])=><Main.Screen key={key} name={key} component={screen.component} options={{ title: screen.title }} />)}\r\n                    <Main.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\r\n                </Main.Navigator>\r\n            </WebSocketProvider>\r\n        </View>\r\n    </View>:<></>);\r\n}","import axios, { AxiosRequestConfig } from 'axios';\r\n\r\n\r\nconst DEVDOMAIN = 'http://localhost:9000'\r\nconst PRODDOMAIN = 'https://blacktokki.com'\r\n\r\nexport const defaultOption:AxiosRequestConfig = {\r\n    baseURL: `${PRODDOMAIN}/messenger/`,\r\n    withCredentials: true\r\n};\r\n\r\nconst _axios = axios.create(defaultOption);\r\n\r\n_axios.interceptors.request.use(\r\n    config => {\r\n        return config;\r\n    },\r\n    error => {\r\n        return Promise.reject(error);\r\n    }\r\n)\r\n\r\n_axios.interceptors.response.use(\r\n    response => {\r\n        // if((response.request.responseURL as string).indexOf('/task/login')>=0 && response.data.length != 0){\r\n        //     // redirect login\r\n        // }\r\n        return response;\r\n    },\r\n    error => {\r\n        if (error.response.status === 401) {\r\n            // redirect login\r\n        }\r\n        return Promise.reject(error)\r\n    }\r\n)\r\n\r\nexport default _axios\r\n","\r\nimport { User, UserMembership } from '../types';\r\nimport axios from './axios';\r\n\r\nexport const login = async(username:string, password:string) => {\r\n    if(username.endsWith('.guest') && password.length == 0)\r\n        password = 'guest'\r\n    const r = await axios.get(\"/csrf/\")\r\n    var bodyFormData = new FormData();\r\n    bodyFormData.append('csrfmiddlewaretoken', r.data)\r\n    bodyFormData.append('username', username)\r\n    bodyFormData.append('password', password)\r\n    bodyFormData.append('submit', 'Log in')\r\n    const r2 = await axios.post(\"/api-auth/login/\", bodyFormData, {headers: {\"Content-Type\": \"multipart/form-data\"}})\r\n    if(r2.status == 200){\r\n        return await checkLogin()\r\n    }\r\n}\r\n\r\nexport const logout = async() => {\r\n    return await axios.get(\"/api-auth/logout/\")\r\n}\r\n\r\nexport const guestLogin =  async() => {\r\n    return await login('guest', 'guest')\r\n}\r\n\r\nexport const checkLogin = async() => {\r\n    try{\r\n        const value = (await axios.get(\"/api/v1/users/memberships/?_self=true\"))?.data\r\n        if (value && value.length){\r\n            return value[0] as UserMembership\r\n        }\r\n        return null\r\n    }\r\n    catch(e){\r\n        throw {\r\n            error:e,\r\n            isOffline:((e as any).code == \"ERR_NETWORK\" || (e as any).message && ((e as any).message as string).startsWith(\"Cannot read\"))\r\n        }\r\n    }\r\n}\r\n\r\nexport const getUserList = async (group_id:number)=>{\r\n    return (await axios.get(`/api/v1/users/?group_id=${group_id}`) ).data as User[]\r\n}\r\n\r\nexport const getUserMembershipList = async (group_id:number)=>{\r\n    return (await axios.get(`/api/v1/users/memberships/?group_id=${group_id}`) ).data as UserMembership[]\r\n}\r\n\r\n// export const getGroup = async (user:User)=>{\r\n//     return (await) axios.get(``)\r\n// }\r\n\r\n","import { Board, EditBoard, BoardContent, Channel, MessengerMember, MessengerContent, EditMessage, MessengerChannel } from '../types';\r\nimport axios from './axios';\r\n\r\nexport const getBoardChannelList = async (group_id:number)=>{\r\n    return (await axios.get(`/api/v1/channels/?type=board&group=${group_id}`) ).data as Channel[]\r\n}\r\n\r\nexport const getMessengerChannelList = async (user_id:number)=>{\r\n    return (await axios.get(`/api/v1/channels/messenger/?type=messenger&messenger_user_id=${user_id}`) ).data as MessengerChannel[]\r\n}\r\n\r\nexport const postChannel = async(channel:Channel)=>{\r\n    return (await axios.post(`/api/v1/channels/`, channel)).data as Channel\r\n}\r\n\r\nexport const putChannel = async(channel:Channel)=>{\r\n    return (await axios.put(`/api/v1/channels/${channel.id}/`, channel)).data as Channel\r\n}\r\n\r\nexport const deleteChannel = async(channel_id:number)=>{\r\n    await axios.delete(`/api/v1/channels/${channel_id}/`)\r\n}\r\n\r\nexport const getBoardContentList = async (channel_id:number)=>{\r\n    return (await axios.get(`/api/v1/boardcontents/?channel=${channel_id}`) ).data as BoardContent[]\r\n}\r\n\r\nexport const postBoard = async (board:EditBoard)=>{\r\n    await axios.post(`/api/v1/boardcontents/boards/`, board)\r\n}\r\n\r\nexport const patchBoard = async (board:Board)=>{\r\n    await axios.patch(`/api/v1/boardcontents/${board.id}/board/`, board)\r\n}\r\n\r\nexport const deleteBoardContent = async (content_id:number)=>{\r\n    await axios.delete(`/api/v1/boardcontents/${content_id}/`)\r\n}\r\n\r\nexport const getMessengerMemberList = async(channel_id:number)=>{\r\n    return (await axios.get(`/api/v1/messengermembers/?channel=${channel_id}`) ).data as MessengerMember[]\r\n}\r\n\r\nexport const postBulkMessengerMember = async(data:{channel_id:number, user_ids:number[]})=>{\r\n    await axios.post(`/api/v1/messengermembers/bulk/`, {channel:data.channel_id, user_ids:data.user_ids})\r\n}\r\n\r\nexport const deleteMessengerMember = async(member_id:number)=>{\r\n    await axios.delete(`/api/v1/messengermembers/${member_id}/`)\r\n}\r\n\r\nexport const getMessengerContentList = async (channel_id:number, id_lt?:number)=>{\r\n    const id_lt_param = id_lt?`&id_lt=${id_lt}`:''\r\n    return (await axios.get(`/api/v1/messengercontents/?limit=30&channel=${channel_id}${id_lt_param}`)).data.results as MessengerContent[]\r\n}\r\n\r\nexport const postMessage = async (message:EditMessage)=>{\r\n    await axios.post(`/api/v1/messengercontents/messages/`, message)\r\n}\r\n\r\nexport const deleteMessengerContent = async (content_id:number)=>{\r\n    await axios.delete(`/api/v1/messengercontents/${content_id}/`)\r\n}","/**\r\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\r\n * https://reactnavigation.org/docs/getting-started\r\n *\r\n */\r\nimport _ from 'lodash';\r\nimport { NavigationContainer, DefaultTheme, DarkTheme, NavigationContainerRef } from '@react-navigation/native';\r\nimport * as React from 'react';\r\nimport { ColorSchemeName } from 'react-native';\r\n\r\nimport LinkingConfiguration from './LinkingConfiguration';\r\nimport RootNavigator from './RootNavigator';\r\n\r\nconst navigationRef = React.createRef<NavigationContainerRef>();\r\n\r\nexport function navigate(name:string, params?:any) {\r\n  if (params)\r\n    navigationRef.current?.navigate(name, params);\r\n  navigationRef.current?.navigate(name);\r\n}\r\n\r\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\r\n  return (\r\n    <NavigationContainer\r\n      ref={navigationRef}\r\n      documentTitle={{formatter: (options, route) => {return `KIBLACK TOK`}}}\r\n      linking={(process.versions && process.versions['electron'])?undefined:LinkingConfiguration}\r\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\r\n      <RootNavigator />\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\n(function(l) {  // for github-page\r\n    if (l !== undefined && l.search[1] === '/' ) {\r\n        var decoded = l.search.slice(1).split('&').map(function(s) { \r\n        return s.replace(/~and~/g, '&')\r\n        }).join('?');\r\n        window.history.replaceState(null, '',\r\n            l.pathname.slice(0, -1) + decoded + l.hash\r\n        );\r\n    }\r\n}(window.location))\r\n    \r\nconst ignoreWarnings = ['ReactNativeFiberHostComponent'];\r\nconst _console = _.clone(console);\r\nconsole.warn = (message: string|Object) => {\r\n    var warn = true;\r\n    if (message instanceof Object)\r\n    warn = false;\r\n    else{\r\n    ignoreWarnings.forEach((value)=>{\r\n        if (message.indexOf && message.indexOf(value) <= -1) {\r\n            warn = false;\r\n        }\r\n    })\r\n    };\r\n    if (warn){\r\n        _console.warn(message);\r\n    }\r\n    else{\r\n        // console.log(message)\r\n    }\r\n};\r\n","import React, { createContext, useContext, useEffect, useReducer, useMemo, Dispatch } from \"react\"\r\nimport { checkLogin, login, logout } from \"../apis\"\r\nimport { UserMembership } from \"../types\"\r\n\r\ntype AuthAction = {type:string, username?:string, password?:string, user?:UserMembership|null}\r\n\r\nexport type Auth = {user?:UserMembership|null, groupId?:number}\r\n\r\ntype AuthState ={user?:UserMembership|null, request?:{username:string, password:string}|null}\r\n\r\nconst AuthContext = createContext<{auth:Auth, dispatch:Dispatch<AuthAction>}>({auth:{}, dispatch:()=>{}});\r\n\r\nconst authReducer =(initialState:AuthState, action:AuthAction)=>{\r\n  switch (action.type){\r\n      case 'LOGIN_REQUEST':\r\n        return {\r\n          ...initialState,\r\n          request:{username:action.username, password:action.password},\r\n        } as AuthState\r\n      case 'LOGIN_GUEST':\r\n        return {\r\n          ...initialState,\r\n          request:{username:'guest', password:'guest'},\r\n        } as AuthState\r\n      case 'LOGIN_SUCCESS':\r\n          return{\r\n              ...initialState,\r\n              user:action.user,\r\n              request:undefined\r\n          }\r\n      case 'LOGIN_FAILED':\r\n          return{\r\n              ...initialState,\r\n              request:undefined\r\n          }\r\n      case 'LOGOUT_REQUEST':\r\n          return{\r\n              ...initialState,\r\n              request:null\r\n          }\r\n      case 'LOGOUT_SUCCESS':\r\n          return {\r\n            ...initialState,\r\n            user:null,\r\n            request:undefined\r\n          }\r\n      default:\r\n          throw new Error( `Unhandled action type: ${action.type}`)\r\n  }\r\n}\r\n\r\n\r\nexport const AuthProvider = ({children}:{children:React.ReactNode})=>{\r\n  const [authState, dispatch] = useReducer(authReducer, {} as Auth)\r\n  const auth = useMemo(()=>({\r\n    user:authState.user,\r\n    groupId: authState.user?.membership_set.find(g=>g.root_group_id==null)?.group\r\n  }), [authState])\r\n  useEffect(()=>{\r\n    if(authState.user===undefined){\r\n      checkLogin().then((user)=>{\r\n        dispatch({type:\"LOGIN_SUCCESS\", user})\r\n      }).catch((e)=>{\r\n        console.log(e)\r\n        dispatch({type:\"LOGOUT_SUCCESS\"})\r\n      })\r\n    }\r\n    else if(authState.user===null && authState.request){\r\n      login(authState.request.username, authState.request.password).then(user=>{\r\n        dispatch({type:\"LOGIN_SUCCESS\", user})\r\n      }).catch(()=>{\r\n        dispatch({type:\"LOGIN_FAILED\"})\r\n      })\r\n    }\r\n    else if(authState.user && authState.request===null){\r\n      logout().then(()=>dispatch({type:\"LOGOUT_SUCCESS\"}))\r\n    }\r\n  }, [authState])\r\n  return <AuthContext.Provider value={{auth, dispatch}}>\r\n    {children}\r\n  </AuthContext.Provider>\r\n}\r\n\r\nexport default ()=>{\r\n  const authContext = useContext(AuthContext)\r\n  return authContext\r\n}\r\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","const tintColorLight = '#2f95dc';\r\nconst tintColorDark = '#fff';\r\n\r\nexport default {\r\n  light: {\r\n    text: '#000',\r\n    background: '#fff',\r\n    tint: tintColorLight,\r\n    tabIconDefault: '#ccc',\r\n    tabIconSelected: tintColorLight,\r\n  },\r\n  dark: {\r\n    text: '#fff',\r\n    background: '#000',\r\n    tint: tintColorDark,\r\n    tabIconDefault: '#ccc',\r\n    tabIconSelected: tintColorDark,\r\n  },\r\n  button:{\r\n    color:'rgb(242,242,242)',\r\n    borderColor:'rgba(27,31,36,0.15)',\r\n    backgroundColor:'#f6f8fa', //'rgba(9,30,66,0.08)',//rgb(242,242,242)\r\n  },\r\n  borderColor:'#d0d7de',\r\n  header:'#24292f',\r\n  focus:'#0065A4',\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Text, StyleSheet, Pressable, StyleProp, ViewStyle} from 'react-native';\r\nimport Colors from '../constants/Colors';\r\nimport { CustomButtonProps } from '../types';\r\n\r\nconst DefaultButton = (props:CustomButtonProps)=>{\r\n    const [hover, setHover] = useState(false)\r\n    return <Pressable\r\n        onPress={()=>props.onPress()}\r\n        //@ts-ignore\r\n        onHoverIn={()=>setHover(true)}\r\n        onHoverOut={()=>setHover(false)}\r\n        style={[\r\n            {\r\n                paddingVertical:5, \r\n                paddingHorizontal:16\r\n            },\r\n            props.style,\r\n            hover?{backgroundColor:props.color}:{}\r\n        ]}>\r\n            <Text selectable={false} style={[{fontSize:14}, props.textStyle]}>{props.title}</Text>\r\n        </Pressable>\r\n}\r\n\r\nexport default (props:CustomButtonProps)=>{\r\n    const _props = {\r\n        color:Colors.button.color,\r\n        ...props,\r\n        style:[\r\n            styles.style,\r\n            props.style,\r\n        ] as StyleProp<ViewStyle>,\r\n        textStyle:[\r\n            styles.text, props.textStyle\r\n        ]\r\n    }\r\n    return <DefaultButton {..._props}/>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    style:{\r\n        borderRadius:6, \r\n        borderColor:Colors.button.borderColor, \r\n        borderWidth:1, \r\n        backgroundColor:Colors.button.backgroundColor\r\n    },\r\n    text:{\r\n        color:'black', \r\n        textAlign:'center', \r\n        fontWeight:'600'\r\n    }\r\n});\r\n","import React from 'react'\r\nimport TextButton from \"./TextButton\"\r\nimport useAuthContext from \"../hooks/useAuthContext\"\r\nimport useResizeWindow from '../hooks/useResizeWindow'\r\nimport { View } from 'react-native'\r\n\r\ntype ButtonProps = {title:string, onPress:()=>void, windowType?:'landscape'|'portrait'}\r\n\r\nexport default (props:{extra?:ButtonProps[]})=>{\r\n    const {dispatch} = useAuthContext()\r\n    const windowType = useResizeWindow()\r\n    const defaultButtonProps:ButtonProps[] = [{title:'logout', onPress:()=>dispatch({type:\"LOGOUT_REQUEST\"})}]\r\n    const buttonProps = (props.extra?[...props.extra, ...defaultButtonProps]:defaultButtonProps).filter(v=>v.windowType==windowType || v.windowType == undefined)\r\n    return<View style={{flexDirection:'row'}}>\r\n        {buttonProps.map((v,k)=><TextButton key={k} {...v} textStyle={{color:'white'}} color='#gray'/>)}\r\n    </View>\r\n}\r\n  ","import { useMutation, useQuery, useQueryClient } from \"react-query\";\r\nimport { deleteChannel, getBoardChannelList, postChannel, putChannel } from \"../../apis\";\r\nimport { Auth } from \"../useAuthContext\";\r\n\r\nexport default function useBoardChannelList(auth?:Auth){\r\n  const { data } = useQuery([\"BoardChannelList\", auth?.groupId] , async()=>auth?.groupId?(await getBoardChannelList(auth?.groupId)):[])\r\n  return data\r\n}\r\n\r\nexport function useBoardChannelMutation(){\r\n  const queryClient = useQueryClient()\r\n  const create = useMutation(postChannel, {\r\n    onSuccess: () => queryClient.invalidateQueries(\"BoardChannelList\")    \r\n  });\r\n  const update = useMutation(putChannel, {\r\n    onSuccess: () => queryClient.invalidateQueries(\"BoardChannelList\")\r\n  })\r\n  const _delete = useMutation(deleteChannel, {\r\n    onSuccess: () => queryClient.invalidateQueries(\"BoardChannelList\")\r\n  })\r\n\r\n  return { create:create.mutateAsync, update:update.mutateAsync, delete:_delete.mutate}\r\n}","import { useEffect } from \"react\";\r\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\r\nimport { getMessengerChannelList, postChannel, putChannel } from \"../../apis\";\r\nimport { MessengerChannel } from \"../../types\";\r\nimport { Auth } from \"../useAuthContext\";\r\nimport useWebsocketContext from \"../useWebsocketContext\";\r\n\r\nexport default function useMessengerChannelList(auth?:Auth){\r\n  const queryClient = useQueryClient()\r\n  const {lastJsonMessage} = useWebsocketContext()\r\n  const { data } = useQuery(\"MessengerChannelList\" , async()=>auth?.user?.id?(await getMessengerChannelList(auth.user.id)):[])\r\n\r\n  useEffect(()=>{\r\n    if(lastJsonMessage !=null){\r\n      if(lastJsonMessage['type']=='enter'){\r\n        queryClient.setQueryData<MessengerChannel[]>(\"MessengerChannelList\", (_data)=>{\r\n          return (_data?.find(v=>v.id==lastJsonMessage['data']['id'])?_data:[lastJsonMessage['data'] , ...(_data|| [])]).sort((a, b)=>a.id - b.id)\r\n        })\r\n      }\r\n      // if(lastJsonMessage['type']=='leave'){\r\n      //   queryClient.setQueryData<Channel[]>(\"MessengerChannelList\", (_data)=>_data?.filter(v=>v.id!=lastJsonMessage['data']['channel_id']) || [])\r\n      // }\r\n    }\r\n  }, [lastJsonMessage])\r\n  return data\r\n}\r\n\r\nexport function useMessengerChannelMutation(){\r\n  const queryClient = useQueryClient()\r\n\r\n  const create = useMutation(postChannel, {\r\n    onSuccess: ()=>queryClient.invalidateQueries(\"MessengerChannelList\")\r\n  });\r\n\r\n  const update = useMutation(putChannel, {\r\n    onSuccess: () => queryClient.invalidateQueries(\"MessengerChannelList\")\r\n  })\r\n\r\n\r\n  return { create:create.mutateAsync, update:update.mutateAsync}\r\n}"],"sourceRoot":""}