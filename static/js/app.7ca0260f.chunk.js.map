{"version":3,"sources":["src/navigation/index.tsx","src/components/TextButton.tsx","src/hooks/lists/useMessengerMemberList.ts","src/navigation/tabview/DrawerTabView.tsx","src/navigation/tabview/MessengerTabView.tsx","src/navigation/tabview/index.tsx","src/components/HeaderRight.tsx","src/screens/main/LoginScreen.tsx","src/hooks/lists/useMessengerContent.List.ts","src/components/LinkPreview.tsx","src/lib/react-native-webrtc/useWebsocketContext.tsx","src/lib/react-native-webrtc/webrtc/p2p.tsx","src/lib/react-native-webrtc/webrtc/index.ts","src/lib/react-native-webrtc/LocalCam.tsx","src/lib/react-native-webrtc/RemoteCam.tsx","src/screens/main/ChatScreen/VideoCallSection.tsx","src/components/FilePreview.tsx","src/screens/main/ChatScreen/index.tsx","src/screens/main/InviteeScreen.tsx","src/screens/index.ts","src/screens/main/HomeScreen.tsx","src/hooks/useWebsocketContext.tsx","src/modals/ChannelEditModal.tsx","src/apis/notification.ts","src/hooks/useIsMobile.ts","src/hooks/lists/useUserMembershipList.ts","src/components/CommonItem.tsx","src/lib/react-native-paper/Avatar.tsx","src/components/Avatar.tsx","src/components/RowField.tsx","src/components/TextField.tsx","src/navigation/tabview/MemberTabView.tsx","src/components/Themed.tsx","src/modals/GuestLogoutModal.tsx","src/modals/ProfileModal.tsx","src/components/Profile.tsx","src/components/CommonTextInput.tsx","src/hooks/useLocalSearch.ts","src/modals/InviteModal.tsx","src/hooks/lists/useExternalMembershipList.ts","src/apis/axios.ts","src/hooks/useAuthContext.tsx","src/navigation/LinkingConfiguration.ts","src/constants/Colors.ts","src/screens/NotFoundScreen.tsx","src/navigation/DrawerNavigator.tsx","src/hooks/useFirebaseContext.tsx","src/modals/index.ts","src/navigation/RootNavigator.tsx","src/components/MobileSafeAreaView.tsx","App.tsx","src/hooks/useCachedResources.ts","src/lang/index.ts","src/hooks/useLangContext.tsx","src/components/CommonButton.tsx","web/firebase-config.js","src/apis/account.ts","src/apis/messenger.ts","src/assets/fonts/SpaceMono-Regular.ttf","src/hooks/useModalsContext.tsx","src/hooks/useResizeContext.tsx","src/hooks/useColorScheme.ts","src/components/CommonSection.tsx","src/hooks/lists/useMessengerChannelList.ts"],"names":["navigationRef","React","navigate","name","params","_navigationRef$curren","_navigationRef$curren2","current","Navigation","defaultColorScheme","useDefaultColorScheme","userColorScheme","useColorScheme","colorScheme","NavigationContainer","ref","documentTitle","formatter","options","route","linking","process","versions","undefined","LinkingConfiguration","theme","DarkTheme","DefaultTheme","ResizeContextProvider","RootNavigator","l","search","decoded","slice","split","map","s","replace","join","window","history","replaceState","pathname","hash","location","ignoreWarnings","_console","_","clone","console","warn","message","Object","forEach","value","indexOf","props","createElement","CommonButton","_extends","style","styles","StyleSheet","create","borderRadius","backgroundColor","borderWidth","useMessengerMemberList","channel_id","useQuery","_regeneratorRuntime","async","_context","prev","next","awrap","getMessengerMemberList","abrupt","sent","stop","Promise","data","useMessengerMemberMutation","queryClient","useQueryClient","invite","useMutation","postBulkMessengerMember","onSuccess","invalidateQueries","leave","deleteMessengerMember","mutateAsync","DrawerTabView","View","flex","item","index","CommonItem","key","containerStyle","marginHorizontal","bodyStyle","alignItems","onPress","Text","marginLeft","Messenger","auth","useAuthContext","channelList","useMessengerChannelSorted","_objectSpread","id","MessengerIcon","Ionicons","size","marginBottom","bottomTabs","OneTab","title","component","MemberTab","icon","MemberIcon","TwoTab","today","Date","toISOString","_item$last_message","_item$last_message2","_item$last_message3","date","last_message","created","flexDirection","justifyContent","FontAwesome","marginRight","fontSize","opacity","paddingLeft","member_count","content","textAlign","unread_count","drawerTabs","DrawerTab","lang","useLangContext","_React$useState","useState","_React$useState2","_slicedToArray","setIndex","entries","tabs","onTab","icons","assign","apply","concat","_toConsumableArray","_ref","_ref2","k","v","_defineProperty","TabView","renderTabBar","TabBar","indicatorStyle","activeColor","inactiveColor","renderIcon","scene","onTabPress","findIndex","_ref4","_ref5","navigationState","routes","_ref6","_ref7","onIndexChange","renderScene","SceneMap","_ref8","_ref9","tabBarPosition","_useAuthContext","dispatch","setModal","useModalsContext","windowType","useResizeContext","defaultButtonProps","_auth$user","user","username","endsWith","GuestLogoutModal","type","buttonProps","extra","filter","TextButton","textStyle","color","Styles","login_container","login_header","paddingTop","paddingBottom","login_header_logo","width","resizeMode","login_header_text","marginTop","login_header_text_bold","fontWeight","login_wrapper","paddingVertical","borderTopRightRadius","borderTopLeftRadius","form","maxWidth","form_error","height","form_error_text","textAlignVertical","form_input","paddingHorizontal","button","button_label","login_social","login_social_separator","login_social_separator_line","login_social_separator_text","login_social_buttons","login_social_button","borderColor","login_social_icon","login_social_facebook","login_footer_text","guest_footer_text","alignSelf","margin","login_footer_link","useMessengerContentList","_useInfiniteQuery","useInfiniteQuery","pageParam","getMessengerContentList","then","select","pages","length","getNextPageParam","lastPage","refetchOnReconnect","refetchOnWindowFocus","fetchNextPage","lastJsonMessage","useWebsocketContext","useEffect","setQueryData","_data","pageParams","link","isMobile","CommonSection","padding","TouchableOpacity","Linking","openURL","url","image","Image","source","uri","maxHeight","description","WebSocketContext","createContext","sendJsonMessage","WebSocketProvider","disable","children","Fragment","WebSocketInternalProvider","path","Context","useBackground","useContext","log","peerConstraints","iceServers","JSON","parse","sessionConstraints","mandatory","OfferToReceiveAudio","OfferToReceiveVideo","VoiceActivityDetection","mediaConstraints","audio","video","framerate","onICEcandidate","pc","_message","rtcMessage","candidate","RTCIceCandidate","addIceCandidate","sendICEcandidate","event","sendMessage","receiver","target","optimizeSdp","offerDescription","arr","sdp","str","i","test","RTCSessionDescription","createOffer","pcRefCurrent","stream","addStream","t0","t1","setLocalDescription","camStyle","container","cam","bottonContainer","position","bottom","buttonBar","label","_props$user","_useWebsocketContext","_useLocalCam","pcRef","useRef","_useState","_useState2","sender","setSender","_useState3","_useState4","_stream","setStream","isPlay","useMemo","CustomRTCView","useCallback","memo","RTCView","videoProps","start","mode","newStream","_context2","mediaDevices","getUserMedia","getDisplayMedia","catch","e","_ref3","error","getTracks","track","websocketOnMessage","response","peerConnection","_peerConnection","answerDescription","_peerConnection2","_context3","channel_name","RTCPeerConnection","addEventListener","setRemoteDescription","useLocalCam","Button","setReceiver","_useRemoteCam","_useState5","_useState6","setUser","_useState7","_useState8","close","clearInterval","statsInterval","_pcRef$current","_pcRef$current2","_pcRef$current3","_pcRef$current4","streams","_peerConnection3","_answerDescription","_streams","_context5","iceConnectionState","activeStream","setInterval","stats","statsOutput","framePerSecond","_context4","getStats","report","kind","keys","statName","framesPerSecond","toTimeString","addTransceiver","direction","getRemoteStreams","createAnswer","localDescription","useRemoteCam","TextInput","onChangeText","VideoView","scale","Colors","flexGrow","focusGuest","setFocusGuest","VideoCallContainer","setDisable","videoMode","setVideoMode","guests","setGuests","_useRtcContext","useRtcContext","find","Math","max","ceil","sqrt","toggleVideoMode","ThemedView","aspectRatio","flexShrink","borderLeftWidth","borderBottomWidth","flexWrap","RemoteCam","LocalCam","RtcProvider","file","showBorder","filename","floor","pow","toFixed","humanFileSize","filesize","MessengerContentPageItem","_nextPage2","useIsMobile","nextPage","_nextPage","nextContent","index2","isSystem","isFirst","isSelf","ownerId","dayChanged","message_set","marginVertical","Avatar","userId","outerContainerStyle","titleStyle","subtitle","Hyperlink","linkDefault","wordBreak","linkStyle","selectable","file_set","fileIndex","FilePreview","link_set","linkIndex","LinkPreview","InviteeScreen","_route$params","navigation","enterGuest","setEnterGuest","useMessengerChannelList","messengerMemberMutation","useLayoutEffect","setOptions","headerRight","user_ids","main","HomeScreen","_route$params2","_useLangContext","locale","setLocale","configTheme","useConfigColorScheme","home","setHome","text","HeaderRight","ChannelEditModal","tab","StyledText","textDecorationLine","setColorScheme","TabViewNavigator","parseInt","setParams","ChatScreen","_useMessengerChannelL","inputRef","channel","_useMessengerContentL","memberList","member_id","_memberList$find","setValue","autoFocus","setAutoFocus","postValue","_auth$user2","contentMutation","postMessage","_delete","deleteMessengerContent","d","variables","mutate","delete","useMessengerContentMutation","InviteModal","back","renderItem","_auth$user3","canGoBack","goBack","focus","VideoCallSection","minWidth","FlatList","contentContainerStyle","onScroll","nativeEvent","contentOffset","y","contentSize","onLayout","p","layout","background","onSubmitEditing","blurOnSubmit","resolve","reject","Platform","OS","input","document","onchange","files","onabort","onerror","click","f","_auth$user4","login","LoginScreen","setUsername","password","setPassword","_login","placeholder","autoCapitalize","keyboardType","secureTextEntry","modal","defaultContext","_split","_split2","SCHEMA","DOMAIN","token","setToken","AppState","currentState","isActive","setIsActive","_useWebSocket","useWebSocket","shouldReconnect","closeEvent","protocols","onOpen","onClose","AsyncStorage","getItem","onChange","nextState","removeEventListener","Provider","channelMutation","useMessengerChannelMutation","setName","setDescription","separator","lightColor","darkColor","TextField","multiline","groupId","newChannel","owner","group","update","screen","field","getNotification","user_id","axios","get","postNotification","notification","post","putNotification","put","useMobileDetect","useUserMembershipList","getUserMembershipList","setHover","_React$useState3","_React$useState4","press","setPress","Pressable","outerContainer","onPressIn","onPressOut","onHoverIn","onHoverOut","bodyView","minHeight","normalizeHash","min","initHash","charCodeAt","abs","stringToHSL","toUpperCase","RowField","rowStyle","CommonTextInput","renderMemberItem","userList","memberItem","ProfileModal","MaterialCommunityIcons","useThemeColor","colorName","colorFromProps","otherProps","_objectWithoutProperties","_excluded","light","dark","DefaultText","_excluded2","DefaultView","Profile","counterpart","direct","patchUser","finally","disabled","onBlur","onEndEditing","contentHeight","setContentHeight","editable","onContentSizeChange","localSearchReducer","initialState","action","keyword","active","Error","InviteItem","selectedRef","has","selected","setSelected","add","GroupTabView","_useLocalSearch","compare","_useReducer","useReducer","_useReducer2","searchState","useLocalSearch","memberSet","Set","includes","dispatchKeyword","ExternalMembershipTabView","setKeyword","copied","setCopied","timeoutRef","externalMemberList","getExternalMembershipList","useExternalMembershipList","setTimeout","clearTimeout","inviteLink","href","Clipboard","setString","external","accountURL","defaultOption","baseURL","withCredentials","headers","_axios","interceptors","request","use","config","status","getToken","r","defaults","setItem","removeItem","AuthContext","authReducer","AuthProvider","authState","setError","_authState$user","_authState$user$membe","membership_set","g","root_group_id","checkLogin","_data$response","_data$response$data","noti","logout","values","ROOTPATH","prefixes","screens","Main","NotFound","tint","tabIconDefault","tabIconSelected","header","buttonColor","buttonBackgroundColor","NotFoundScreen","linkText","colors","useTheme","onAddList","tabBar","card","borderTopColor","border","pointerEvents","accessibilityRole","borderTopWidth","drawerTab","Tab","elevation","borderRightWidth","firebaseConfig","require","messagingSenderId","apiKeyEncrypted","toString","padStart","app","firebase","initializeApp","apiKey","messaging","onMessage","payload","Notification","permission","body","alert","requestToken","serviceWorkerRegistration","currentToken","requestPermission","navigator","serviceWorker","register","scope","vapidKey","preventDefault","unregister","setEnable","enable","context","FirebaseContext","Root","createStackNavigator","Navigator","headerMode","screenOptions","cardStyle","animationEnabled","cardStyleInterpolator","CardStyleInterpolators","forVerticalIOS","Screen","MainNavigator","headerShown","gestureDirection","modalValues","modals","useFirebaseContext","ModalsProvider","DrawerNavigator","headerStyle","headerTitleStyle","headerLeft","canGOBackScreen","headerLeftContainerStyle","forHorizontalIOS","innerHeight","setHeight","Dimensions","QueryClient","App","isLoadingComplete","setLoadingComplete","SplashScreen","Font","font","finish","useCachedResources","isAppearenceComplete","useInitColorScheme","SafeAreaProvider","MobileSafeAreaView","QueryClientProvider","client","IntlProvider","StatusBar","translations","ko","_RNLocalize$findBestL","RNLocalize","languageTag","isRTL","I18nManager","forceRTL","intl","createIntl","defaultLocale","messages","createIntlCache","IntlContext","complete","setComplete","_useContext","formatMessage","defaultMessage","DefaultButton","hover","_props","module","exports","guestLogin","checkLoginToken","_await$axios$get","isOffline","code","startsWith","getUserList","group_id","_context6","_context7","patch","ids","updated","_context8","_context9","getMessengerChannelList","postChannel","postDirectChannel","putChannel","deleteChannel","id_lt","id_lt_param","results","formData","_context10","FormData","append","content_id","_context11","ModalsContext","allModals","Component","setModals","animationType","setAnimationType","ExactComponent","newModals","m","Modal","visible","getWindowType","ResizeContextContext","detectMobile","_useWindowDimensions","useWindowDimensions","setWindowType","Appearance","set","withSeparator","titleView","sort","a","b","_data2$message_set$","_a$last_message","_b$last_message"],"mappings":"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","file":"static/js/app.7ca0260f.chunk.js","sourcesContent":["/**\r\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\r\n * https://reactnavigation.org/docs/getting-started\r\n *\r\n */\r\nimport _ from 'lodash';\r\nimport { NavigationContainer, DefaultTheme, DarkTheme, NavigationContainerRef } from '@react-navigation/native';\r\nimport * as React from 'react';\r\n\r\nimport LinkingConfiguration from './LinkingConfiguration';\r\nimport RootNavigator from './RootNavigator';\r\n\r\nimport { useColorScheme as useDefaultColorScheme } from 'react-native';\r\nimport { useColorScheme as useColorScheme } from 'react-native-appearance';\r\nimport { ResizeContextProvider } from '../hooks/useResizeContext';\r\n\r\n\r\nconst navigationRef = React.createRef<NavigationContainerRef>();\r\n\r\nexport function navigate(name:string, params?:any) {\r\n  if (params)\r\n    navigationRef.current?.navigate(name, params);\r\n  navigationRef.current?.navigate(name);\r\n}\r\n\r\nexport default function Navigation() {\r\n  const defaultColorScheme = useDefaultColorScheme()\r\n  const userColorScheme = useColorScheme()\r\n  const colorScheme = userColorScheme =='no-preference'?defaultColorScheme:userColorScheme\r\n  return <NavigationContainer\r\n    ref={navigationRef}\r\n    documentTitle={{formatter: (options, route) => {return `TOKKI TOK`}}}\r\n    linking={(process.versions && process.versions['electron'])?undefined:LinkingConfiguration}\r\n    theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\r\n        <ResizeContextProvider>\r\n          <RootNavigator />\r\n        </ResizeContextProvider>\r\n  </NavigationContainer>\r\n}\r\n\r\n(function(l) {  // for github-page\r\n    if (l !== undefined && l.search[1] === '/' ) {\r\n        var decoded = l.search.slice(1).split('&').map(function(s) { \r\n        return s.replace(/~and~/g, '&')\r\n        }).join('?');\r\n        window.history.replaceState(null, '',\r\n            l.pathname.slice(0, -1) + decoded + l.hash\r\n        );\r\n    }\r\n}(window.location))\r\n    \r\nconst ignoreWarnings = ['ReactNativeFiberHostComponent'];\r\nconst _console = _.clone(console);\r\nconsole.warn = (message: string|Object) => {\r\n    var warn = true;\r\n    if (message instanceof Object)\r\n    warn = false;\r\n    else{\r\n    ignoreWarnings.forEach((value)=>{\r\n        if (message.indexOf && message.indexOf(value) <= -1) {\r\n            warn = false;\r\n        }\r\n    })\r\n    };\r\n    if (warn){\r\n        _console.warn(message);\r\n    }\r\n    else{\r\n        // console.log(message)\r\n    }\r\n};\r\n","import React, { useState } from 'react';\r\nimport { StyleSheet} from 'react-native';\r\nimport { CustomButtonProps } from '../types';\r\nimport CommonButton from './CommonButton';\r\n\r\nexport default (props:CustomButtonProps)=>{\r\n    return <CommonButton {...props} style={[styles.style, props.style]}/>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    style:{\r\n        borderRadius:6, \r\n        backgroundColor: 'transparent',\r\n        borderWidth:0\r\n    },\r\n});\r\n","import { useMutation, useQuery, useQueryClient } from \"react-query\";\r\nimport { postBulkMessengerMember, deleteMessengerMember, getMessengerMemberList } from \"../../apis\";\r\n\r\nexport default function useMessengerMemberList(channel_id:number){\r\n  const { data } = useQuery([\"MessengerMemberList\", channel_id] , async()=>await getMessengerMemberList(channel_id))\r\n  return data\r\n}\r\n\r\n\r\nexport function useMessengerMemberMutation(){\r\n  const queryClient = useQueryClient()\r\n  const invite = useMutation(postBulkMessengerMember, {\r\n    onSuccess: ()=>{\r\n      queryClient.invalidateQueries(\"MessengerMemberList\")\r\n    }\r\n  })\r\n\r\n  const leave = useMutation(deleteMessengerMember, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(\"MessengerChannelList\")\r\n      queryClient.invalidateQueries(\"MessengerMemberList\")\r\n    }\r\n  })\r\n  return {invite:invite.mutateAsync, leave:leave.mutateAsync}\r\n}","import React from \"react\"\r\nimport { View, Text } from \"../../components/Themed\"\r\nimport CommonItem from \"../../components/CommonItem\"\r\n// import useBoardChannelList from \"../lib/blacktokki-board/useBoardChannelList\"\r\nimport { useMessengerChannelSorted } from \"../../hooks/lists/useMessengerChannelList\"\r\nimport useAuthContext from \"../../hooks/useAuthContext\"\r\nimport { navigate } from \"..\"\r\n\r\nconst DrawerTabView = (props:{data:{name:string, onPress?:()=>void}[]})=><View style={{flex:1}}>\r\n    {props.data.map((item, index)=><CommonItem key={index} containerStyle={{marginHorizontal:0}} bodyStyle={{alignItems:'flex-start'}} onPress={item.onPress}>\r\n        <Text style={{marginLeft:20}}>{item.name}</Text>\r\n    </CommonItem>\r\n    )}\r\n</View>\r\n\r\nexport default {\r\n    Messenger:()=>{\r\n        const {auth} = useAuthContext()\r\n        const channelList = useMessengerChannelSorted(auth);\r\n        return <DrawerTabView data={(channelList || []).map(item=>({...item, onPress:()=>navigate(\"ChatScreen\", {id:item.id})}))}/>\r\n    },\r\n    // Board:()=>{\r\n    //     const {auth} = useAuthContext()\r\n    //     const channelList = useBoardChannelList(auth);\r\n    //     return <DrawerTab data={(channelList || []).map(item=>({...item, onPress:()=>navigate(\"BoardScreen\", {id:item.id})}))}/>\r\n    // },\r\n}","import { Ionicons, FontAwesome } from \"@expo/vector-icons\"\r\nimport React from \"react\"\r\nimport { Text, View } from \"react-native\"\r\nimport CommonItem from \"../../components/CommonItem\"\r\nimport useAuthContext from \"../../hooks/useAuthContext\"\r\nimport { useMessengerChannelSorted } from \"../../hooks/lists/useMessengerChannelList\"\r\nimport { navigate } from \"../../navigation\"\r\n\r\nexport default ()=>{\r\n    const {auth} = useAuthContext()\r\n    const channelList = useMessengerChannelSorted(auth)\r\n    const today = (new Date()).toISOString().slice(0, 10)\r\n    return <View style={{flex:1, backgroundColor:'white'}}>\r\n        {channelList?.map((item, index)=>{\r\n            const date = item.last_message?.created.slice(0,10)\r\n            return <CommonItem key={index} bodyStyle={{flexDirection:'row', justifyContent:'space-between'}} onPress={()=>navigate(\"ChatScreen\", {id:item.id})}>\r\n                <View style={{flexDirection:'row'}}>\r\n                    <FontAwesome size={36} style={{ marginBottom: -3, marginRight:20 }} name='users'/>\r\n                    <View>\r\n                        <View style={{flexDirection:'row'}}>\r\n                            <Text style={{fontSize:18}}>{item.name}</Text>\r\n                            <Text style={{fontSize:18, opacity: 0.4, paddingLeft:5}}>{item.member_count}</Text>\r\n                        </View>\r\n                        <Text style={{fontSize:16, opacity: 0.4}}>{item.last_message?.content}</Text>\r\n                    </View>\r\n                </View>\r\n                <View>\r\n                    <Text style={{fontSize:14, opacity: 0.4, textAlign:'right'}}>{date==today?item.last_message?.created.slice(11,16):date}</Text>\r\n                    <Text style={{fontSize:14, textAlign:'right'}}>{item.unread_count?item.unread_count:' '}</Text>\r\n                </View>\r\n            </CommonItem>\r\n        })}\r\n    </View>\r\n}\r\n\r\nexport const MessengerIcon = <Ionicons size={30} style={{ marginBottom: -3 }} name='chatbox'/>","import React from 'react';\r\nimport { TabView, SceneMap,NavigationState, SceneRendererProps, TabBar } from 'react-native-tab-view';\r\nimport MemberTab, {MemberIcon} from \"./MemberTabView\";\r\n// import OneTab, {ConfigIcon} from \"./OneTab\";\r\nimport DrawerTab  from './DrawerTabView';\r\nimport MessengerTab, {MessengerIcon} from \"./MessengerTabView\";\r\nimport useLangContext from '../../hooks/useLangContext';\r\n\r\nexport const bottomTabs = {\r\n    OneTab:{\r\n        title:'member',\r\n        component:MemberTab,\r\n        icon:MemberIcon,\r\n    },\r\n    TwoTab:{\r\n        title:'messenger',\r\n        component:MessengerTab,\r\n        icon:MessengerIcon\r\n    },\r\n    // ThreeTab:{\r\n    //     title:'board',\r\n    //     component:BoardTab,\r\n    //     icon:BoardIcon\r\n    // },\r\n    // FourTab:{\r\n    //     title:'config',\r\n    //     component:OneTab,\r\n    //     icon:ConfigIcon\r\n    // }\r\n} as Record<string, {title:string, component:React.ComponentType<any>, icon:JSX.Element}>\r\n\r\nexport const drawerTabs = {\r\n    TwoTab:{\r\n        title:'messenger',\r\n        component:DrawerTab.Messenger,\r\n        icon:MessengerIcon\r\n    },\r\n    // ThreeTab:{\r\n    //     title:'board',\r\n    //     component:DrawerTab.Board,\r\n    //     icon:BoardIcon\r\n    // }\r\n} as Record<string, {title:string, component:React.ComponentType<any>, icon:JSX.Element}>\r\n\r\n\r\nexport default (props:{tabs:typeof drawerTabs, tabBarPosition:\"top\"|\"bottom\", index?:number, onTab?:(index:number)=>void})=>{\r\n  const { lang } = useLangContext()\r\n  const [index, setIndex] = React.useState(props.index || 0);\r\n  const entries = Object.entries(props.tabs)\r\n  const onTab = props.onTab\r\n  const icons = Object.assign({}, ...entries.map(([k, v])=>({[k]:v.icon})))\r\n  return <TabView\r\n    renderTabBar={(props:SceneRendererProps & {navigationState: NavigationState<any>})=>{\r\n      return <TabBar\r\n        {...props}\r\n        indicatorStyle={{ backgroundColor: \"#2196F3\" }}\r\n        style={{ backgroundColor:'white' }}\r\n        activeColor={'black'}\r\n        inactiveColor={'black'}\r\n        renderIcon={(scene)=>icons[scene.route.key]}\r\n        onTabPress={(scene)=>onTab?.(entries.findIndex(([k, v])=>k == scene.route.key))}\r\n      />\r\n    }}\r\n    navigationState={{ index, routes: entries.map(([k, v])=>({key:k, title:lang(v.title)}))}}\r\n    onIndexChange={setIndex}\r\n    renderScene={SceneMap(Object.assign({}, ...entries.map(([k, v])=>({[k]:v.component}))))}\r\n    tabBarPosition={props.tabBarPosition}\r\n  />\r\n}\r\n\r\n","import React from 'react'\r\nimport TextButton from \"./TextButton\"\r\nimport useAuthContext from \"../hooks/useAuthContext\"\r\nimport useResizeContext from '../hooks/useResizeContext'\r\nimport { View } from 'react-native'\r\nimport useModalsContext from '../hooks/useModalsContext'\r\nimport GuestLogoutModal from '../modals/GuestLogoutModal'\r\nimport useLangContext from '../hooks/useLangContext'\r\n\r\ntype ButtonProps = {title:string, onPress:()=>void, windowType?:'landscape'|'portrait'}\r\n\r\nexport default (props:{extra?:ButtonProps[]})=>{\r\n    const { lang } = useLangContext()\r\n    const {auth, dispatch} = useAuthContext()\r\n    const { setModal } = useModalsContext()\r\n    const windowType = useResizeContext()\r\n    const defaultButtonProps:ButtonProps[] = [{title:lang('sign out'), onPress:()=>{\r\n        if (auth?.user?.username.endsWith(\".guest\")){\r\n            setModal(GuestLogoutModal, {})\r\n        }\r\n        else{\r\n            dispatch({type:\"LOGOUT_REQUEST\"})\r\n        }\r\n    }}]\r\n    const buttonProps = (props.extra?[...props.extra, ...defaultButtonProps]:defaultButtonProps).filter(v=>v.windowType==windowType || v.windowType == undefined)\r\n    return<View style={{flexDirection:'row'}}>\r\n        {buttonProps.map((v,k)=><TextButton key={k} {...v} textStyle={{color:'white'}} color='#gray'/>)}\r\n    </View>\r\n}\r\n  ","import React, {useLayoutEffect, useState} from 'react';\r\nimport {\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  View,\r\n  StyleSheet,\r\n} from 'react-native';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport useAuthContext from '../../hooks/useAuthContext';\r\nimport useLangContext from '../../hooks/useLangContext';\r\n\r\nexport default function LoginScreen({\r\n  navigation, route\r\n}: StackScreenProps<any, 'Login'>) {\r\n  const { lang } = useLangContext()\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const {error, dispatch} = useAuthContext()\r\n  const _login = ()=>dispatch({type:'LOGIN_REQUEST', username, password})\r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      headerRight: undefined\r\n    });\r\n  }, [navigation, route]);\r\n\r\n  return (\r\n    <View style={Styles.login_wrapper}>\r\n      <View style={Styles.form}>\r\n        {error && <View style={Styles.form_error}>\r\n          <Text style={Styles.form_error_text}>{lang(error)}</Text>\r\n        </View>}\r\n        <TextInput\r\n          style={Styles.form_input}\r\n          value={username}\r\n          placeholder={lang('Username')}\r\n          onChangeText={(text) => setUsername(text)}\r\n          autoCapitalize={'none'}\r\n          keyboardType={'email-address'}\r\n          onSubmitEditing={_login}\r\n        />\r\n        <TextInput\r\n          style={Styles.form_input}\r\n          value={password}\r\n          placeholder={lang('Password')}\r\n          secureTextEntry\r\n          onChangeText={(text) => setPassword(text)}\r\n          onSubmitEditing={_login}\r\n        />\r\n        <TouchableOpacity onPress={_login}>\r\n          <View style={Styles.button}>\r\n            <Text style={Styles.button_label}>{lang('Sign in')}</Text>\r\n          </View>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity onPress={() => dispatch({type:\"LOGIN_GUEST\"})}>\r\n          <Text style={Styles.guest_footer_text}>\r\n            {lang(\"Sign in as guest\")}\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      <View style={Styles.login_social}>\r\n        <View style={Styles.login_social_separator}>\r\n          <View style={Styles.login_social_separator_line} />\r\n          <Text style={Styles.login_social_separator_text}>{'*'}</Text>\r\n          <View style={Styles.login_social_separator_line} />\r\n        </View>\r\n        <View style={Styles.login_social_buttons}>\r\n        </View>\r\n      </View>\r\n      {/* <>\r\n        <TouchableOpacity onPress={() => navigate(\"RegistrationScreen\")}>\r\n          <Text style={Styles.login_footer_text}>\r\n            {\"Don't have an account? \"}\r\n            <Text style={Styles.login_footer_link}>{'Sign up'}</Text>\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </> */}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst Styles = StyleSheet.create({\r\n    login_container: {\r\n      flex: 1,\r\n      backgroundColor: '#FFF',\r\n    },\r\n    login_header: {\r\n      alignItems: 'center',\r\n      paddingTop: 30,\r\n      paddingBottom: 50,\r\n      backgroundColor: '#208AEC',\r\n    },\r\n    login_header_logo: {\r\n      width: 220,\r\n      resizeMode: 'contain',\r\n    },\r\n    login_header_text: {\r\n      marginTop: 15,\r\n      color: '#f0f0f0',\r\n      fontSize: 16,\r\n    },\r\n    login_header_text_bold: {\r\n      color: '#fff',\r\n      fontWeight: 'bold',\r\n    },\r\n    login_wrapper: {\r\n      flex: 1,\r\n      justifyContent: 'space-between',\r\n      paddingVertical: 40,\r\n      borderTopRightRadius: 12,\r\n      borderTopLeftRadius: 12,\r\n      marginTop: -10,\r\n      backgroundColor: '#fff',\r\n      alignItems: 'center',\r\n    },\r\n    form: {\r\n      width: '100%',\r\n      maxWidth: 320,\r\n    },\r\n    form_error: {\r\n      height: 22,\r\n      width:'100%',\r\n    },\r\n    form_error_text:{\r\n      textAlignVertical:'center',\r\n      color:'red',\r\n      fontSize:13,\r\n    },\r\n    form_input: {\r\n      height: 44,\r\n      paddingHorizontal: 20,\r\n      marginBottom: 20,\r\n      backgroundColor: '#EDF0F7',\r\n      borderRadius: 50,\r\n    },\r\n    button: {\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      height: 44,\r\n      backgroundColor: '#0065A4',\r\n      borderRadius: 50,\r\n    },\r\n    button_label: {\r\n      color: '#fff',\r\n      fontSize: 16,\r\n    },\r\n    login_social: {\r\n      width: '100%',\r\n      maxWidth: 280,\r\n      marginTop: 20,\r\n    },\r\n    login_social_separator: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n    },\r\n    login_social_separator_line: {\r\n      flex: 1,\r\n      width: '100%',\r\n      height: 1,\r\n      backgroundColor: '#E0E0E0',\r\n    },\r\n    login_social_separator_text: {\r\n      marginHorizontal: 10,\r\n      color: '#808080',\r\n      fontSize: 16,\r\n    },\r\n    login_social_buttons: {\r\n      flexDirection: 'row',\r\n      justifyContent: 'center',\r\n      marginTop: 20,\r\n    },\r\n    login_social_button: {\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      width: 60,\r\n      height: 60,\r\n      marginHorizontal: 12,\r\n      borderWidth: 1,\r\n      borderColor: '#E7E7E7',\r\n      borderRadius: 60,\r\n    },\r\n    login_social_icon: {\r\n      width: 38,\r\n      height: 38,\r\n      resizeMode: 'contain',\r\n    },\r\n    login_social_facebook: {\r\n      backgroundColor: '#4267B2',\r\n      borderColor: '#4267B2',\r\n    },\r\n    login_footer_text: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      color: '#808080',\r\n      fontSize: 14,\r\n    },\r\n    guest_footer_text: {\r\n      flexDirection: 'row',\r\n      alignSelf: 'center',\r\n      color: '#808080',\r\n      fontSize: 15,\r\n      margin: 15\r\n    },\r\n    login_footer_link: {\r\n      color: '#208AEC',\r\n      fontSize: 15,\r\n      fontWeight: 'bold',\r\n    },\r\n  });\r\n  ","import { useCallback, useEffect, useState } from \"react\"\r\nimport { InfiniteData, useInfiniteQuery, useMutation, useQueryClient } from \"react-query\"\r\nimport { getMessengerContentList, postMessage, deleteMessengerContent } from \"../../apis\"\r\nimport { MessengerContent } from \"../../types\"\r\nimport useWebsocketContext from \"../useWebsocketContext\"\r\n\r\nexport type MessengerContentPage = {\r\n  next?:MessengerContentPage\r\n  current:MessengerContent[]\r\n}\r\n\r\nexport default function useMessengerContentList(channel_id:number){  \r\n  const queryClient = useQueryClient()\r\n  const { data, fetchNextPage } = useInfiniteQuery<MessengerContentPage>(\r\n    [\"MessengerContentList\", channel_id], \r\n    async({pageParam})=>getMessengerContentList(channel_id, pageParam).then(current=>({current})), \r\n    {\r\n      select:data=>{\r\n        if(data.pages.length > 1)\r\n          data.pages[data.pages.length - 2].next = data.pages[data.pages.length - 1]\r\n        return data;\r\n      },\r\n      getNextPageParam:(lastPage)=>lastPage?.current.length?lastPage.current[lastPage.current.length - 1].id:undefined,\r\n      refetchOnReconnect:false,\r\n      refetchOnWindowFocus:false\r\n    }\r\n  )\r\n  const { lastJsonMessage } = useWebsocketContext()\r\n  useEffect(()=>{\r\n    if(lastJsonMessage !=null && lastJsonMessage['type']=='next_message' && lastJsonMessage['data']['channel'] == channel_id){\r\n      queryClient.setQueryData<InfiniteData<MessengerContentPage>>([\"MessengerContentList\", channel_id], (_data)=>{\r\n        if(_data?.pages[0].current && _data?.pages[0].current[0].id != lastJsonMessage['data'].id)\r\n          _data.pages[0].current = [lastJsonMessage['data'], ..._data?.pages[0].current]\r\n        return {...(_data || {pages:[], pageParams:[]})}\r\n      })\r\n    }\r\n  }, [lastJsonMessage])\r\n  return { data, fetchNextPage }\r\n}\r\n\r\nexport function useMessengerContentMutation(){\r\n  // const queryClient = useQueryClient()\r\n  const create = useMutation(postMessage, {\r\n    onSuccess: () => {\r\n      // queryClient.setQueryData(['MessengerContentList'], (data:any) => ({\r\n      //   pages: data.pages.slice(0, 1),\r\n      //   pageParams: data.pageParams.slice(0, 1),\r\n      // }))\r\n      // queryClient.invalidateQueries(\"MessengerContentList\")\r\n    }\r\n  });\r\n  const _delete = useMutation(deleteMessengerContent, {\r\n    onSuccess: (d, variables) => {\r\n      // queryClient.setQueryData(['MessengerContentList'], (data:any) => ({\r\n      //   pages: (data.pages as MessengerContent[][]).map(v=>v.filter(v2=>v2.id != variables)),\r\n      //   pageParams: data.pageParams,\r\n      // }))\r\n    }\r\n  })\r\n  return { create:create.mutate, delete:_delete.mutate }\r\n}","import React from 'react'\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport CommonSection from \"./CommonSection\"\r\nimport { Image, Linking, TextStyle } from \"react-native\"\r\nimport { View, Text } from \"./Themed\"\r\nimport { Link } from \"../types\"\r\n\r\n\r\n\r\nexport default ({link, isMobile}:{link:Link, isMobile:boolean})=>{\r\n    return <CommonSection containerStyle={{marginHorizontal:0}} bodyStyle={{padding:0}}>\r\n    <TouchableOpacity onPress={()=>Linking.openURL(link.url)} style={{flexDirection:'row'}} containerStyle={{width:'100%'}}>\r\n        {link.image && <Image source={{uri:link.image}} resizeMode=\"cover\" style={{ width:'100%', maxWidth:isMobile?120:150, maxHeight:isMobile?120:150, borderWidth:1}}/>}\r\n        <View style={{flex:1, marginHorizontal:20}}>\r\n        <Text style={{fontSize:18}}>{link.title}</Text>\r\n        <Text style={{fontSize:14}}>{link.description}</Text>\r\n        <Text style={{fontSize:12}}>{link.url}</Text>\r\n        </View>\r\n    </TouchableOpacity>\r\n    </CommonSection>\r\n}","import React, { createContext, useContext } from \"react\"\r\nimport { SendJsonMessage } from \"react-use-websocket/dist/lib/types\";\r\nimport { WebSocketInternalProvider } from \"../../hooks/useWebsocketContext\";\r\n\r\nconst WebSocketContext = createContext<{lastJsonMessage:any, sendJsonMessage:SendJsonMessage }>({lastJsonMessage:undefined, sendJsonMessage:()=>{}});\r\n\r\nexport const WebSocketProvider = ({disable, children}:{disable?:boolean, children:React.ReactNode})=>{\r\n  return disable?<></>:<WebSocketInternalProvider path={'messenger/ws/rtc/'} Context={WebSocketContext} useBackground>\r\n    {children}\r\n  </WebSocketInternalProvider>\r\n}\r\n\r\nexport default ()=>{\r\n  const webSocketContext = useContext(WebSocketContext)\r\n  return webSocketContext\r\n}\r\n\r\n","import React, { useCallback, useRef, useState, useMemo } from \"react\";\r\n//@ts-ignore\r\nimport { RTCView, mediaDevices, RTCPeerConnection, MediaStream, RTCSessionDescription, RTCIceCandidate } from \"react-native-webrtc-web-shim\";\r\n// @ts-ignore\r\nimport {TURN_SERVER} from \"@env\"\r\n\r\n\r\nconsole.log(TURN_SERVER?\"use turn server\": \"use stun server\")\r\n\r\nexport const peerConstraints = {\r\n\ticeServers: [TURN_SERVER?JSON.parse(TURN_SERVER):{urls: 'stun:stun.l.google.com:19302'}]\r\n};\r\n\r\nexport const sessionConstraints = {\r\n\tmandatory: {\r\n\t\tOfferToReceiveAudio: true,\r\n\t\tOfferToReceiveVideo: true,\r\n\t\tVoiceActivityDetection: true\r\n\t}\r\n};\r\n\r\nconst mediaConstraints = {audio:true, video:{framerate:30}}\r\n\r\n//@ts-ignore\r\nexport {MediaStream, RTCPeerConnection, RTCSessionDescription} from \"react-native-webrtc-web-shim\";\r\n\r\nconst onICEcandidate = (pc:typeof RTCPeerConnection, message:any)=>{\r\n\tconst _message = message.data.rtcMessage\r\n\t\tconst candidate = new RTCIceCandidate(_message);\r\n\t\tif (pc) {\r\n\t\t\tconsole.log(\"ICE candidate Added\");\r\n\t\t\tpc.addIceCandidate(candidate);\r\n\t\t}\r\n}\r\n\r\nconst sendICEcandidate = (event:any, sendMessage:(data:any)=>void, receiver:string, target:string) => {\r\n\t// When you find a null candidate then there are no more candidates.\r\n\t// Gathering of candidates has finished.\r\n\tif ( !event.candidate ) { return; };\r\n\t// Send the event.candidate onto the person you're calling.\r\n\t// Keeping to Trickle ICE Standards, you should send the candidates immediately.\r\n\tsendMessage({type:'ICEcandidate', receiver, data:{target, rtcMessage:event.candidate}})\r\n  }\r\n\r\nconst BAND_WIDTH = 8000\r\n\r\nconst optimizeSdp = (offerDescription:RTCSessionDescription)=>{\r\n\tvar arr = offerDescription.sdp.split('\\r\\n');\r\n\tarr.forEach((str:string, i:number) => {\r\n\t\tif (/^a=fmtp:\\d*/.test(str)) {\r\n\t\t\tarr[i] = str + `;x-google-max-bitrate=${BAND_WIDTH};x-google-min-bitrate=${BAND_WIDTH};x-google-start-bitrate=${BAND_WIDTH}`;\r\n\t\t} else if (/^a=mid:(0|video)/.test(str)) { // if with audio then 0=>1\r\n\t\t\tarr[i] += `\\r\\nb=AS:${BAND_WIDTH}`;\r\n\t\t}\r\n\t});\r\n  \treturn new RTCSessionDescription({\r\n    \ttype: offerDescription.type,\r\n    \tsdp: arr.join('\\r\\n'),\r\n  \t})\r\n}\r\n\r\nconst createOffer = async(pcRefCurrent:{pc?:typeof RTCPeerConnection, receiver:string}, sendMessage:(data:any)=>void, stream:typeof MediaStream, target:string, user?:{name:string})=>{\r\n\tstream && pcRefCurrent.pc.addStream( stream );\r\n\tconst offerDescription = optimizeSdp((await pcRefCurrent.pc.createOffer( sessionConstraints )));\r\n\tawait pcRefCurrent.pc.setLocalDescription( offerDescription );\r\n\tsendMessage({type:'call', receiver:pcRefCurrent.receiver, data:{target, name:user?.name, rtcMessage:offerDescription}})\r\n}\r\n\r\nexport const useLocalCam = (sendMessage:(data:any)=>void)=>{\r\n\tconst pcRef = useRef<Record<number,{pc:typeof RTCPeerConnection, receiver:string}>>({})\r\n\tconst [sender, setSender] = useState<string>()\r\n\tconst [_stream, setStream] = useState<MediaStream>()\r\n\tconst isPlay = useMemo(()=>_stream?true:false, [_stream])\r\n\tconst CustomRTCView = useCallback(React.memo(({style}:{style:any})=>(_stream?<RTCView stream={_stream} style={style} videoProps={{height:'100%'}} />:<></>)) , [_stream])\r\n\tconst start = useCallback(async(user:{name:string}, stream?:typeof MediaStream, mode?:'camera'|'display')=>{\r\n\t\tconsole.log(\"start\");\r\n\t\tif (!_stream || mode!==undefined) {\r\n\t\t\ttry {\r\n\t\t\t\tlet newStream:typeof MediaStream;\r\n\t\t\t\tif(mode == 'camera'){\r\n\t\t\t\t\tnewStream = await mediaDevices.getUserMedia(mediaConstraints)\r\n\t\t\t\t}\r\n\t\t\t\telse if (mode == 'display'){\r\n\t\t\t\t\tnewStream = await mediaDevices.getDisplayMedia(mediaConstraints)\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tnewStream = stream || await mediaDevices.getUserMedia(mediaConstraints).catch((e:any)=>mediaDevices.getDisplayMedia(mediaConstraints));\r\n\t\t\t\t}\r\n\t\t\t\tsetStream(newStream)\r\n\t\t\t\tObject.entries(pcRef.current).map(([k, v])=>{\r\n\t\t\t\t\tcreateOffer(v, sendMessage, newStream, 'guest', user)\r\n\t\t\t\t})\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.error(e);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [_stream])\r\n\tconst stop = useCallback(()=>{\r\n\t\tconsole.log(\"stop\");\r\n\t\tif(_stream){\r\n\t\t\t_stream.getTracks().map((track:any) => track.stop());\r\n\t\t\tsetStream(undefined)\r\n\t\t}\r\n\t}, [_stream])\r\n\treturn {\r\n\t\tstart,\r\n\t\tstop,\r\n\t\twebsocketOnMessage: async(response:any, user:{name:string})=>{\r\n\t\t\tlet type = response.type;\r\n\t\t\tif (type == 'connection'){\r\n\t\t\t\tsetSender(response.data.channel_name)\r\n\t\t\t}\r\n\t\t\tif (type == 'start' && response.data.target=='host'){\r\n\t\t\t  console.log('1 start')\r\n\t\t\t  const peerConnection = new RTCPeerConnection( peerConstraints );\r\n\t\t\t  peerConnection.addEventListener( 'icecandidate', (event:any) => sendICEcandidate(event, sendMessage, response.sender, 'guest'));\r\n\t\t\t  pcRef.current[response.sender] = {pc:peerConnection, receiver: response.sender}\r\n\t\t\t  createOffer(pcRef.current[response.sender], sendMessage, _stream, 'guest', user)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (type == \"answer\" && response.data.target == 'host'){\r\n\t\t\t  console.log('3 answer')\r\n\t\t\t  const peerConnection = pcRef.current[response.sender].pc\r\n\t\t\t  const answerDescription = new RTCSessionDescription(response.data.rtcMessage);\r\n\t\t\t  await peerConnection.setRemoteDescription( answerDescription );\r\n\t\t\t  // const streams = pcRef.current.pc.getRemoteStreams()\r\n\t\t\t  // setMirrorStream(streams[streams.length - 1])\r\n\t\t\t}\r\n\t\t\tif (type == \"ICEcandidate\" && response.data.target=='host'){\r\n\t\t\t\tconst peerConnection = pcRef.current[response.sender].pc\r\n\t\t\t\tonICEcandidate(peerConnection, response)\r\n\t\t\t}\r\n\t\t},\r\n\t\tCustomRTCView,\r\n\t\tisPlay,\r\n\t\tsender,\r\n\t\t// renderMirrorView,\r\n\t}\r\n}\r\n\r\nexport const useRemoteCam = (sendMessage:(data:any)=>void)=>{\r\n\tconst pcRef = useRef<{pc?:RTCPeerConnection, receiver?:string, statsInterval?:any}>({})\r\n\tconst [user, setUser] = useState<{name:string}>()\r\n\tconst [_stream, setStream] = useState<MediaStream>()\r\n\tconst CustomRTCView = useCallback(React.memo((style:any)=>_stream?<RTCView stream={_stream} style={style} videoProps={{height:'100%'}} />:<></>), [_stream])\r\n\tconst isPlay = useMemo(()=>_stream?true:false, [_stream])\r\n\tconst start = useCallback((receiver:string)=>{\r\n\t\tconsole.log(\"start\");\r\n\t\tif (!pcRef.current.pc) {\r\n\t\t  pcRef.current.pc = new RTCPeerConnection( peerConstraints );\r\n\t\t  pcRef.current.receiver = receiver\r\n\t\t}\r\n\t\tif (!_stream){\r\n\t\t\tsendMessage({type:'start', receiver, data:{'target': 'host'}})\r\n\t\t}\r\n\t}, [_stream])\r\n\tconst stop = () => {\r\n\t\tconsole.log(\"stop\");\r\n\t\tif (pcRef.current.pc) {\r\n\t\t  // peerConnection._unregisterEvents();\r\n\t\t  setStream(undefined)\r\n\t\t  pcRef.current.pc.close();\r\n\t\t  pcRef.current.pc = undefined\r\n\t\t  pcRef.current.receiver = undefined\r\n\t\t  clearInterval(pcRef.current.statsInterval)\r\n\t\t}\r\n\t}\r\n\treturn {\r\n\t\tstart,\r\n\t\tstop,\r\n\t\twebsocketOnMessage: async(response:any)=>{\r\n\t\t\tlet type = response.type;\r\n\t\t\tif (type == 'start' && response.data.target=='guest' && response.sender == pcRef.current?.receiver){\r\n\t\t\t\tconsole.log('(remote)1 start')\r\n\t\t\t\tconst peerConnection = pcRef.current.pc\r\n\t\t\t\tsetUser({name: response.data.name})\r\n\t\t\t\tpeerConnection.addEventListener('icecandidate', (event:any) => sendICEcandidate(event, sendMessage, response.sender, 'host'));\r\n\t\t\t\tpeerConnection.addEventListener('iceconnectionstatechange', (e:any)=>{\r\n\t\t\t\t\tif (pcRef.current.pc.iceConnectionState == 'connected'){\r\n\t\t\t\t\t\tlet activeStream = false\r\n\t\t\t\t\t\tpcRef.current.statsInterval = setInterval(async()=>{\r\n\t\t\t\t\t\t\tconst stats = await pcRef.current.pc.getStats(null)\r\n\t\t\t\t\t\t\tlet statsOutput = \"\";\r\n\t\t\t\t\t\t\tlet framePerSecond = undefined\r\n\t\t\t\t\t\t\tstats.forEach((report:any) => {\r\n\t\t\t\t\t\t\t\tif (report.type === \"inbound-rtp\" && report.kind === \"video\") {\r\n\t\t\t\t\t\t\t\t\tObject.keys(report).forEach((statName) => {\r\n\t\t\t\t\t\t\t\t\t\tstatsOutput += `${statName}: ${report[statName]}\\n`;\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tframePerSecond = report.framesPerSecond\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tconsole.log(activeStream, framePerSecond)\r\n\t\t\t\t\t\t\tif (framePerSecond != undefined){\r\n\t\t\t\t\t\t\t\tactiveStream = true\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (activeStream){\r\n\t\t\t\t\t\t\t\tstop()\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tconsole.log(new Date().toTimeString().split(' ')[0], statsOutput)\r\n\t\t\t\t\t\t}, 1000);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (pcRef.current.pc.iceConnectionState == 'failed'){\r\n\t\t\t\t\t\tstop()\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t// peerConnection.addTransceiver('audio', {\r\n\t\t\t\t// \tdirection: 'recvonly'\r\n\t\t\t\t// });\r\n\t\t\t\tpeerConnection.addTransceiver('video', {\r\n\t\t\t\t\tdirection: 'recvonly'\r\n\t\t\t\t});\r\n\t\t\t\tawait createOffer({pc:pcRef.current.pc, receiver:response.sender}, sendMessage, _stream, 'host', user)\r\n\t\t\t}  \r\n\t\t\tif (type == \"answer\" && response.data.target=='guest' && response.sender == pcRef.current?.receiver){\r\n\t\t\t\tconsole.log('(remote)3 answer')\r\n\t\t\t\tconst answerDescription = new RTCSessionDescription(response.data.rtcMessage);\r\n\t\t\t\tawait pcRef.current.pc.setRemoteDescription( answerDescription );\r\n\t\t\t\tconst streams = pcRef.current.pc.getRemoteStreams()\r\n\t\t\t\tsetStream(streams[streams.length - 1])\r\n\t\t\t\tsendMessage({type:'end', receiver:pcRef.current.receiver, data:{}})\r\n\t\t\t}\r\n\t\t\tif (type == \"call\" && response.sender == pcRef.current?.receiver){\r\n\t\t\t  console.log('2 call')\r\n\t\t\t  const peerConnection = pcRef.current.pc\r\n\t\t\t  setUser({name:response.data.name})\r\n\t\t\t  if (!peerConnection)\r\n\t\t\t\treturn\r\n\t\t\t  peerConnection.addEventListener( 'icecandidate', (event:any) => sendICEcandidate(event, sendMessage, response.sender, 'host'));\r\n\t\t\t  const offerDescription = new RTCSessionDescription(response.data.rtcMessage);\r\n\t\t\t  await peerConnection.setRemoteDescription( offerDescription );\r\n\t\t\t  const answerDescription = await peerConnection.createAnswer( sessionConstraints );\r\n\t\t\t  await peerConnection.setLocalDescription( answerDescription );\r\n\t\t\t  sendMessage({type:'answer', receiver:pcRef.current.receiver, data:{target:'host', rtcMessage:peerConnection.localDescription}})\r\n\t\t\t  // Here is a good place to process candidates.\r\n\t\t\t  const streams = pcRef.current.pc.getRemoteStreams()\r\n\t\t\t  setStream(streams[streams.length - 1])\r\n\t\t\t}\r\n\t\t\tif (type == \"ICEcandidate\" && response.data.target=='guest' && response.sender == pcRef.current?.receiver)\r\n\t\t\t  onICEcandidate(pcRef.current.pc, response)\r\n\t\t},\r\n\t\tCustomRTCView,\r\n\t\tuser,\r\n\t\tisPlay\r\n\t}\r\n}","import {StyleSheet} from \"react-native\";\r\nexport {useLocalCam, useRemoteCam} from \"./p2p\"\r\n\r\nexport const camStyle = StyleSheet.create({\r\n\tcontainer:{ flex: 1},\r\n\tcam:{ flex: 1, height:'100%'},\r\n\tbottonContainer: {position:\"absolute\", bottom:0, justifyContent:'flex-end'},\r\n\tbuttonBar: { flexDirection: \"row\", justifyContent: \"space-around\" },\r\n\tlabel: {backgroundColor:'#0008', color:'white', paddingHorizontal:5},\r\n})","import React, { useEffect } from \"react\";\r\nimport {Button, View, Text} from \"react-native\";\r\nimport useWebsocketContext from \"./useWebsocketContext\";\r\nimport { useLocalCam, camStyle} from \"./webrtc\";\r\n\r\n\r\nexport default (props:{user?:{name:string}|null, mode?:'camera'|'display'|null})=>{\r\n  const {lastJsonMessage, sendJsonMessage} = useWebsocketContext()\r\n  const {start, stop, websocketOnMessage, CustomRTCView, isPlay} = useLocalCam(sendJsonMessage)\r\n  useEffect(()=>{\r\n    props.user && lastJsonMessage && websocketOnMessage(lastJsonMessage, props.user)\r\n  }, [lastJsonMessage, props.user])\r\n  useEffect(()=>{\r\n    if(props.mode && !isPlay){\r\n      props.user && start(props.user, undefined, props.mode)\r\n    }\r\n    else if(props.mode===null && isPlay){\r\n      stop()\r\n    }\r\n    return ()=>{isPlay && stop()}\r\n  }, [isPlay, props.user, props.mode])\r\n  return (\r\n    <View style={camStyle.container}>\r\n      <CustomRTCView style={camStyle.cam}/>\r\n      <View style={camStyle.bottonContainer}>\r\n        <View style={camStyle.buttonBar}>  \r\n        </View>\r\n        <View style={{flexDirection:'row'}}><Text style={camStyle.label}>{props.user?.name}</Text></View>\r\n        <View style={camStyle.buttonBar}>\r\n          {props.mode === undefined && !isPlay && <Button title=\"Start\" onPress={()=>props.user && start(props.user)} />}\r\n          {props.mode === undefined && isPlay && <Button title=\"Stop\" onPress={stop} />}\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n","import React, { useState, useEffect, } from \"react\";\r\nimport {Button,Text, TextInput, View} from \"react-native\";\r\nimport useWebsocketContext from \"./useWebsocketContext\";\r\nimport { useRemoteCam, camStyle} from \"./webrtc\";\r\n\r\nexport default (props:{receiver?:string})=>{\r\n  const [receiver, setReceiver] = useState('')\r\n  const {lastJsonMessage, sendJsonMessage} = useWebsocketContext()\r\n  const {start, stop, websocketOnMessage, CustomRTCView, isPlay, user} = useRemoteCam(sendJsonMessage)\r\n  useEffect(()=>{\r\n    lastJsonMessage && websocketOnMessage(lastJsonMessage)\r\n  }, [lastJsonMessage])\r\n  useEffect(()=>{\r\n    if(props.receiver){\r\n      start(props.receiver)\r\n    }\r\n    return ()=>stop()\r\n  }, [props.receiver])\r\n  return (\r\n    <View style={camStyle.container}>\r\n      <CustomRTCView style={camStyle.cam}/>\r\n      <View style={camStyle.bottonContainer}>\r\n        <View style={camStyle.buttonBar}>\r\n        </View>\r\n        <View style={{flexDirection:'row'}}>{\r\n          (props.receiver || isPlay)?\r\n          <Text style={camStyle.label}>{user?.name || 'loading...'}</Text>:\r\n          <>\r\n            <Text style={{borderWidth:1}}>Receiver:&nbsp;</Text>\r\n            <TextInput style={{borderWidth:1, flex:1}} value={receiver} onChangeText={setReceiver}/>\r\n          </> \r\n        }</View>\r\n        <View style={camStyle.buttonBar}>\r\n          {props.receiver === undefined && !isPlay && <Button title=\"Start\" onPress={()=>start(receiver)} />}\r\n          {props.receiver === undefined && isPlay && <Button title=\"Stop\" onPress={stop} />}\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport { StyleSheet, View } from 'react-native';\r\nimport { View as ThemedView } from '../../../components/Themed' \r\nimport Colors from '../../../constants/Colors';\r\nimport {default as useRtcContext, WebSocketProvider as RtcProvider} from \"../../../lib/react-native-webrtc/useWebsocketContext\";\r\nimport LocalCam from '../../../lib/react-native-webrtc/LocalCam';\r\nimport RemoteCam from '../../../lib/react-native-webrtc/RemoteCam';\r\nimport useResizeContext from '../../../hooks/useResizeContext';\r\nimport useAuthContext from '../../../hooks/useAuthContext';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\nimport CommonButton from '../../../components/CommonButton';\r\n\r\ntype VideoType = 'camera'|'display'|null\r\ntype VideoCallProps = {channel_id:number, setDisable:(disable:boolean)=>void, disable?:boolean}\r\n\r\n\r\nconst VideoView = (props:{\r\n  scale:string,\r\n  focusGuest?:string,\r\n  setFocusGuest:(focusGuest?:string)=>void\r\n  receiver?:string\r\n  children:React.ReactNode\r\n})=>{\r\n  return <View style={[{maxWidth:props.scale, maxHeight:props.scale, borderWidth:1, borderColor:Colors.borderColor, backgroundColor:'gray', flexDirection:'row', flexGrow:1}, (props.focusGuest == undefined || props.focusGuest == props.receiver)?{}:{width:0, height:0}]}>\r\n    <TouchableOpacity style={{flex:1}} containerStyle={{flex:1, justifyContent:'center'}} onPress={()=>props.setFocusGuest(props.focusGuest?undefined:props.receiver)}>\r\n    {props.children}\r\n    </TouchableOpacity>\r\n  </View>\r\n    \r\n  \r\n}\r\n\r\nconst VideoCallContainer = ({channel_id, disable, setDisable}:VideoCallProps)=>{\r\n  const {auth} = useAuthContext()\r\n  const [videoMode, setVideoMode] = useState<VideoType>(null)\r\n  const [guests, setGuests] = useState<string[]>([])\r\n  const [focusGuest, setFocusGuest] = useState<string>()\r\n  const windowType = useResizeContext()\r\n  const { lastJsonMessage, sendJsonMessage } = useRtcContext()\r\n  useEffect(()=>{\r\n    if(lastJsonMessage !=null){\r\n      if(lastJsonMessage['type']=='connection'){\r\n        sendJsonMessage({'type':'broadcast', 'data':{'channel_id':channel_id}})\r\n      }\r\n      if(lastJsonMessage['type']=='broadcast_guest' || lastJsonMessage['type']=='broadcast_host'){\r\n        setGuests([...guests, lastJsonMessage['sender']])\r\n      }\r\n      if(lastJsonMessage['type']=='broadcast_disconnect'){\r\n        const channel_name = lastJsonMessage['sender']\r\n        const exist = guests.find(v=>v == channel_name)\r\n        exist && setGuests(guests.filter(v=>v != channel_name))\r\n      }\r\n    }\r\n  }, [lastJsonMessage])\r\n  const scale = focusGuest?'100%':`${100 / Math.max(2, Math.ceil(Math.sqrt(guests.length + 1)))}%`\r\n  const toggleVideoMode = (mode:VideoType)=>{\r\n    setVideoMode(videoMode!=mode?mode:null)\r\n  }\r\n  return lastJsonMessage !==undefined ?\r\n    <ThemedView style={[\r\n      {aspectRatio:!disable?16/9:0, borderColor:Colors.borderColor, borderRadius:10},\r\n      windowType=='landscape'?{flexShrink:0.5, height:'100%', borderLeftWidth:1, paddingBottom:65}:{maxHeight:'36%', width:'100%', borderBottomWidth:1}\r\n    ]}>\r\n      <View style={{aspectRatio:16/9, backgroundColor:'white', flexWrap:'wrap', flexDirection:'row', width:'100%', height:'100%'}}>\r\n        {guests.map((receiver, i)=><VideoView scale={scale} focusGuest={focusGuest} setFocusGuest={setFocusGuest} receiver={receiver}>\r\n          <RemoteCam receiver={receiver}/>\r\n        </VideoView>\r\n        )}\r\n        <VideoView scale={scale} focusGuest={focusGuest} setFocusGuest={setFocusGuest} receiver={auth.user?.name}>\r\n          <LocalCam user={auth.user} mode={videoMode}/>\r\n        </VideoView>\r\n      </View>\r\n      <ThemedView style={[\r\n          {position:'absolute', alignItems:'center', justifyContent:'flex-end', width:'100%',flexDirection:'row'},\r\n          windowType=='landscape'?{bottom:0, paddingVertical:15, paddingHorizontal:19}:{backgroundColor:'transparent'}\r\n        ]}>\r\n        <CommonButton title={'⏺️'} onPress={()=>toggleVideoMode('camera')}/>\r\n        <CommonButton title={'🖥️'} onPress={()=>toggleVideoMode('display')}/>\r\n        <CommonButton title={'📹'} onPress={()=>setDisable(true)}/>\r\n      </ThemedView>\r\n    </ThemedView>:\r\n  <></>\r\n  }\r\n  \r\nexport default React.memo(({channel_id, disable, setDisable}:VideoCallProps)=>{\r\n  return <RtcProvider disable={disable}>\r\n    <VideoCallContainer channel_id={channel_id} disable={disable} setDisable={setDisable}/>\r\n  </RtcProvider>\r\n})\r\n","import React from 'react'\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport CommonSection from \"./CommonSection\"\r\nimport { Linking, TextStyle } from \"react-native\"\r\nimport { FontAwesome } from '@expo/vector-icons'; \r\nimport { View, Text } from \"./Themed\"\r\nimport { File } from \"../types\"\r\nimport useColorScheme from '../hooks/useColorScheme';\r\n\r\nfunction humanFileSize(size:number) {\r\n    var i = size == 0 ? 0 : Math.floor(Math.log(size) / Math.log(1024));\r\n    return (size / Math.pow(1024, i)).toFixed(2) + ' ' + ['B', 'kB', 'MB', 'GB', 'TB'][i];\r\n  }\r\n  \r\n\r\nexport default ({file, isMobile, showBorder}:{file:File, isMobile:boolean, showBorder:boolean})=>{\r\n    const theme = useColorScheme()\r\n    return <CommonSection containerStyle={{marginHorizontal:0}} bodyStyle={showBorder?{padding:10}:{borderWidth:0, padding:0}}>\r\n    <TouchableOpacity onPress={()=>Linking.openURL(file.file)} style={{flexDirection:'row', alignItems:'flex-start'}} containerStyle={{width:'100%'}}>\r\n        <FontAwesome name=\"file-o\" size={20} color={theme=='light'?'black':'white'} />\r\n        <View style={{flex:1, marginHorizontal:10}}>\r\n            <Text style={{fontSize:18}}>{file.filename}</Text>\r\n            <Text style={{fontSize:14}}>{humanFileSize(file.filesize)}</Text>\r\n        </View>\r\n    </TouchableOpacity>\r\n    </CommonSection>\r\n}","import React, {useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState} from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { Platform, StyleSheet, View } from 'react-native';\r\nimport CommonSection from '../../../components/CommonSection';\r\nimport { FlatList, TextInput } from 'react-native-gesture-handler';\r\nimport CommonButton from '../../../components/CommonButton';\r\nimport useMessengerContentList, { MessengerContentPage, useMessengerContentMutation } from '../../../hooks/lists/useMessengerContent.List';\r\nimport useAuthContext from '../../../hooks/useAuthContext';\r\nimport HeaderRight from '../../../components/HeaderRight';\r\nimport useMessengerMemberList, { useMessengerMemberMutation } from '../../../hooks/lists/useMessengerMemberList';\r\nimport { navigate } from '../../../navigation';\r\nimport Colors from '../../../constants/Colors';\r\nimport useColorScheme from '../../../hooks/useColorScheme';\r\nimport { Text, View as ThemedView } from '../../../components/Themed' \r\nimport Hyperlink from 'react-native-hyperlink'\r\nimport useMessengerChannelList from '../../../hooks/lists/useMessengerChannelList';\r\nimport useIsMobile from '../../../hooks/useIsMobile';\r\nimport LinkPreview from '../../../components/LinkPreview';\r\nimport Avatar from '../../../components/Avatar';\r\nimport VideoCallSection from './VideoCallSection';\r\nimport useResizeContext from '../../../hooks/useResizeContext';\r\nimport FilePreview from '../../../components/FilePreview';\r\nimport useModalsContext from '../../../hooks/useModalsContext';\r\nimport InviteModal from '../../../modals/InviteModal';\r\nimport useLangContext from '../../../hooks/useLangContext';\r\n\r\n\r\nfunction uploadFile(){\r\n  return new Promise<Blob|undefined>((resolve, reject)=>{\r\n    if (Platform.OS == 'web'){\r\n      var input = document.createElement('input');\r\n      input.type = 'file';\r\n      input.onchange = e => { \r\n        resolve((e.target as any).files[0])\r\n      }\r\n      input.onabort = reject\r\n      input.onerror = reject\r\n      input.click();\r\n    }\r\n    else\r\n      resolve(undefined)\r\n  })\r\n}\r\n\r\nconst MessengerContentPageItem = React.memo((props:MessengerContentPage & {ownerId?:number})=>{\r\n  const isMobile = useIsMobile()\r\n  let nextPage = props.next;\r\n    while(nextPage?.next && nextPage.current.length==0){\r\n      nextPage = nextPage.next\r\n    }\r\n    const nextContent = nextPage?.current[0]\r\n    return <View style={{flexDirection: 'column-reverse'}}>\r\n      \r\n      {props.current.map((content, index2)=>{\r\n        const next = index2 + 1 < props.current.length?props.current[index2+1]:nextContent\r\n        const created:string = content.created.slice(0, 16)\r\n        const date = created.slice(0, 10)\r\n        const isSystem = content.user == null\r\n        const isFirst = next==undefined || (content.user != next.user || created != next.created.slice(0, 16))\r\n        const isSelf = props.ownerId == content.user\r\n        const dayChanged = next==undefined || date != next.created.slice(0, 10)\r\n        const message = content.message_set[0]\r\n        if (isSystem)\r\n          return <View key={content.id} style={{flexDirection:'row', justifyContent:'center', width:'100%', marginVertical:5}}>\r\n            <Text>{message.content}</Text>\r\n          </View>\r\n        return <View key={content.id}>\r\n          {dayChanged?<View style={{flexDirection:'row', justifyContent:'center', width:'100%'}}><Text>{date}</Text></View>:undefined}\r\n          <View key={content.id} style={{flexDirection:'row', justifyContent:isSelf?'space-between':'flex-start', width:'100%'}}>\r\n            {isFirst && !isSelf? <View style={{marginTop:3, marginLeft:12}}><Avatar name={content.name} userId={content.user} size={36}/></View>:<View style={{width:48}}/>}\r\n            <CommonSection outerContainerStyle={{width:undefined, maxWidth:'90%'}} title={isFirst?content.name:undefined} titleStyle={{flex:undefined}} bodyStyle={{padding:10}} subtitle={`${created.slice(11)}`}>\r\n              {/* @ts-ignore */}\r\n              <Hyperlink linkDefault={ true } style={{wordBreak:\"break-word\"}} linkStyle={{color: '#12b886'}}>\r\n                <Text selectable>{message.content}</Text>\r\n              </Hyperlink>\r\n              {content.file_set.map((file, fileIndex)=><FilePreview key={fileIndex} file={file} isMobile={isMobile} showBorder={content.file_set.length>1 || message.content.length>0}/>)}\r\n              {content.link_set.map((link, linkIndex)=><LinkPreview key={linkIndex} link={link} isMobile={isMobile}/>)}              \r\n            </CommonSection>\r\n          </View>\r\n        </View>\r\n      })}\r\n    </View>\r\n\r\n})\r\n\r\nexport default function ChatScreen({navigation, route}: StackScreenProps<any, 'Chat'>) {\r\n  const { lang, locale } = useLangContext()\r\n  const channel_id = route?.params?.id\r\n  const height = useRef(0)\r\n  const inputRef = useRef<TextInput>(null)\r\n  const {auth} = useAuthContext()\r\n  const { setModal } = useModalsContext()\r\n  const channel = useMessengerChannelList(auth)?.find(v=>v.id==parseInt(channel_id))\r\n  const {data, fetchNextPage } = useMessengerContentList(channel_id)\r\n  const memberList = useMessengerMemberList(channel_id)\r\n  const member_id = useMemo(()=>memberList?.find(v=>v.user == auth.user?.id)?.id, [auth, memberList])\r\n  const windowType = useResizeContext()\r\n  const messengerMemberMutation = useMessengerMemberMutation()\r\n  const [value, setValue] = useState('')\r\n  const [autoFocus, setAutoFocus] = useState(true)\r\n  const [videoMode, setVideoMode] = useState<boolean>(false)\r\n  const theme = useColorScheme()\r\n  const postValue = ()=>{\r\n    if (value.length>0){\r\n      contentMutation.create({channel:channel_id, user:auth.user?.id, content:value})\r\n      setValue('')\r\n      setAutoFocus(true)\r\n    }\r\n  }\r\n  const contentMutation = useMessengerContentMutation()\r\n\r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      headerRight: ()=> <HeaderRight extra={[\r\n        {title:lang('invite'), onPress:()=>setModal(InviteModal, {id:channel_id})},\r\n        {title:lang('leave'), onPress:()=>{member_id && messengerMemberMutation.leave(member_id).then(back)}}\r\n      ]}/>,\r\n      title: channel?.name\r\n    });\r\n  }, [navigation, route, member_id, locale]);\r\n\r\n  const renderItem = useCallback(({item, index}:{item:MessengerContentPage, index:number})=><MessengerContentPageItem {...item} ownerId={auth.user?.id}/>, [auth])\r\n  \r\n  const back = ()=>{\r\n    if(navigation.canGoBack())\r\n        navigation.goBack()\r\n      else{\r\n        navigation.navigate('HomeScreen', {tab:2})\r\n      }\r\n  }\r\n  useEffect(()=>{\r\n    if (!(channel_id))\r\n      back()\r\n  }, [])\r\n  useEffect(()=>{\r\n    if(autoFocus){\r\n      (inputRef.current as any).focus()\r\n      setAutoFocus(false)\r\n    }\r\n  }, [autoFocus])\r\n\r\n  return <View style={{flex:1, alignItems:'center', flexDirection:windowType=='landscape'?'row-reverse':'column'}}>\r\n    <VideoCallSection channel_id={channel_id} setDisable={(d)=>setVideoMode(!d)} disable={!videoMode}/>\r\n    <View style={[{flex:videoMode?undefined:1, flexShrink:1}, windowType=='landscape'?{minWidth:320, height:'100%'}:{width:'100%'}]}>\r\n      <FlatList\r\n        style={{flexDirection: 'column-reverse'}}\r\n        contentContainerStyle={{padding:10, flexGrow:1, flexDirection: 'column-reverse'}}\r\n        data={data?.pages}\r\n        renderItem={renderItem}\r\n        onScroll={(e)=>{\r\n          if (e.nativeEvent.contentOffset.y + e.nativeEvent.contentSize.height - height.current < 1)\r\n            fetchNextPage()\r\n        }}\r\n        onLayout={(p)=>{height.current = p.nativeEvent.layout.height}}\r\n      />\r\n      <ThemedView style={{bottom:0, alignItems:'center', width:'100%',flexDirection:'row', paddingTop:15, paddingBottom:10, paddingHorizontal:19}}>\r\n        <TextInput ref={inputRef} value={value} onChangeText={setValue} style={{\r\n          flex:1, borderWidth:1, height:40, borderRadius:6, borderColor:Colors.borderColor, backgroundColor:Colors[theme].background, color:Colors[theme].text\r\n        }} onSubmitEditing={postValue} blurOnSubmit={true}/>\r\n        <CommonButton title={'💬'} onPress={postValue}/>\r\n        <CommonButton title={'📤'} onPress={()=>uploadFile().then(f=>{\r\n          contentMutation.create({channel:channel_id, user:auth.user?.id, content:'', file:f})\r\n        })}/>\r\n        {!videoMode && <CommonButton title={'📹'} onPress={()=>setVideoMode(!videoMode)}/>}\r\n      </ThemedView>\r\n    </View>\r\n  </View>\r\n}","import React, {useEffect, useLayoutEffect, useState} from 'react';\r\n\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport useAuthContext from '../../hooks/useAuthContext';\r\nimport useMessengerChannelList from '../../hooks/lists/useMessengerChannelList';\r\nimport { Text } from '../../components/Themed';\r\nimport { useMessengerMemberMutation } from '../../hooks/lists/useMessengerMemberList';\r\n\r\nexport default function InviteeScreen({navigation, route}: StackScreenProps<any, 'Invitee'>) {\r\n    const id = route?.params?.id\r\n    const {auth, dispatch} = useAuthContext()\r\n    const [enterGuest, setEnterGuest] = useState(false)\r\n    const channelList = useMessengerChannelList(auth)\r\n    const messengerMemberMutation = useMessengerMemberMutation()\r\n    useLayoutEffect(() => {\r\n        navigation.setOptions({headerRight: undefined});\r\n    }, []);\r\n    useEffect(()=>{\r\n        if(auth.user==null && enterGuest==false){\r\n            dispatch({type:\"LOGIN_GUEST\"})\r\n            setEnterGuest(true)\r\n        }\r\n        else if(auth.user && channelList!==undefined){\r\n            if(channelList.find(v=>v.id==id) === undefined){\r\n                console.log(`invite processing (channel:${id})`)\r\n                messengerMemberMutation.invite({\r\n                    channel_id:id,\r\n                    user_ids:[auth.user.id]\r\n                }).then(()=>navigation.replace(\"ChatScreen\", {id}))\r\n            }\r\n            else{\r\n                console.log('already invite')\r\n                navigation.replace(\"ChatScreen\", {id})\r\n            }\r\n        }\r\n    }, [auth, channelList, enterGuest])\r\n  return <Text>{'초대중'}</Text>\r\n};\r\n","import LoginScreen from \"./main/LoginScreen\";\r\nimport ChatScreen from \"./main/ChatScreen\";\r\nimport HomeScreen from \"./main/HomeScreen\";\r\nimport TabOneScreen from \"./main/TabOneScreen\";\r\nimport InviteeScreen from \"./main/InviteeScreen\";\r\n// import BoardScreen from \"../lib/blacktokki-board/BoardScreen\";\r\n// import BoardEditScreen from \"../lib/blacktokki-board/BoardEditScreen\";\r\nimport { Screens } from \"../types\";\r\n\r\nexport const main = {\r\n    HomeScreen:{\r\n        title:'home',\r\n        component:HomeScreen,\r\n        path:'home',\r\n    },\r\n    ChatScreen:{\r\n        title:'chat',\r\n        component:ChatScreen,\r\n        path:'chat'\r\n    },\r\n    // BoardScreen:{\r\n    //     title:'board',\r\n    //     component:BoardScreen,\r\n    //     path:'board'\r\n    // },\r\n    // TabOneScreen:{\r\n    //     title:'tab one',\r\n    //     component:TabOneScreen,\r\n    //     path:'one'\r\n    // },\r\n    InviteeScreen:{\r\n        title: '',        \r\n        component:InviteeScreen,\r\n        path:'invitee'\r\n    }\r\n} as Screens\r\n\r\nexport const login = {\r\n    LoginScreen:{\r\n        path: 'login',\r\n        title: 'Sign in',\r\n        component:LoginScreen\r\n    },\r\n    InviteeScreen:{\r\n        path:'invitee',\r\n        title: '',\r\n        component:InviteeScreen\r\n    }\r\n} as Screens\r\n\r\nexport const modal = {\r\n    // BoardEditScreen:{\r\n    //     title:'board',\r\n    //     component:BoardEditScreen,\r\n    //     path:'modal/board'\r\n    // },\r\n} as Screens","import React, {useState, useEffect, useLayoutEffect} from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { StyleSheet, Text, View} from 'react-native';\r\nimport { Text as StyledText } from 'react-native-paper';\r\nimport { useColorScheme as useConfigColorScheme} from 'react-native-appearance';\r\nimport useResizeContext from '../../hooks/useResizeContext';\r\nimport TabViewNavigator, { bottomTabs } from '../../navigation/tabview';\r\nimport HeaderRight from '../../components/HeaderRight';\r\nimport TextButton from '../../components/TextButton';\r\nimport Colors from '../../constants/Colors';\r\nimport useColorScheme, { setColorScheme } from '../../hooks/useColorScheme';\r\nimport useModalsContext from '../../hooks/useModalsContext';\r\nimport ChannelEditModal from '../../modals/ChannelEditModal';\r\nimport useLangContext from '../../hooks/useLangContext';\r\n\r\n// navigate(\"BoardEditScreen\", {channel_id:item.channel, id:item.id})\r\n// deleteBoardContent(item.id).then(()=>navigate('BoardScreen', {id:item.channel}))\r\n\r\nexport default function HomeScreen({navigation, route}: StackScreenProps<any, 'Home'>) {\r\n  const { lang, locale, setLocale } = useLangContext()\r\n  const windowType = useResizeContext();\r\n  const theme = useColorScheme()\r\n  const configTheme = useConfigColorScheme()\r\n  const { setModal } = useModalsContext()\r\n  const [ home, setHome ] = useState(windowType == 'landscape')\r\n  const color = Colors[theme].text\r\n  const options = [\r\n    {title:lang('member'), headerRight:()=><HeaderRight/>},\r\n    {title:lang('messenger'), headerRight:()=><HeaderRight extra={[{title:lang('create'), onPress:()=>setModal(ChannelEditModal, {type:'messenger'})}]}/>},\r\n    // {title:'board', headerRight:()=><HeaderRight extra={[{title:'create', onPress:()=>setModal(ChannelEditModal, props:{type:'board'}}) }]}/>},\r\n    {title:'config', headerRight:()=><HeaderRight/>}\r\n  ]\r\n  \r\n  useLayoutEffect(() => {\r\n    const index = route?.params?.tab | 0\r\n    navigation.setOptions(windowType == 'portrait'?options[index]:{\r\n      title: lang('home'),\r\n      headerRight: ()=><HeaderRight/>\r\n    });\r\n  }, [navigation, route, windowType, locale]);\r\n  useEffect(()=>{\r\n    setHome(windowType == 'landscape')\r\n  }, [windowType])\r\n  return home?\r\n    <View style={{flex:1, justifyContent:'center', alignItems:'center'}}>\r\n      <View style={{width:'80%', height:'80%'}}>\r\n        <StyledText style={{fontSize:32, color}}>Tokki Tok</StyledText>\r\n        <View style={{backgroundColor:Colors.borderColor, height:1, width:'100%'}}/>\r\n        <View style={{flex:1, alignItems:'flex-start'}}>\r\n          {/* <Text style={{fontSize:20, color:'gray'}}>Welcome! This is a messenger for teams.</Text>*/}\r\n          <Text style={{fontSize:24}}> </Text>\r\n          <Text style={{fontSize:24, fontWeight:'500', color}}>{lang('Quick Start')}</Text>\r\n          <TextButton title={lang('+ New Messenger')} textStyle={{fontSize:20, color}} style={{paddingLeft:0, borderRadius:20}} onPress={()=>setModal(ChannelEditModal, {type:'messenger'})}/>\r\n          <Text style={{fontSize:20, fontWeight:'500', color}}>{lang('* Language Settings')}</Text>\r\n          <View style={{flexDirection:'row'}}>\r\n            {[[lang('Auto'), 'auto'], ['한국어', 'ko'], ['English', 'en']].map(([title, l])=><TextButton \r\n              key={title} title={title || ''} textStyle={{fontSize:16, color, textDecorationLine:locale==l?'underline':'none'}} style={{borderRadius:20}} onPress={()=>setLocale(l)}/>)}\r\n          </View>\r\n          <Text style={{fontSize:20, fontWeight:'500', color}}>{lang('* Skin Settings')}</Text>\r\n          <View style={{flexDirection:'row'}}>\r\n            {[[lang('Auto'), 'no-preference'], [lang('Light'), 'light'], [lang('Dark'), 'dark']].map(([title, colorScheme])=><TextButton \r\n              key={title} title={title} textStyle={{fontSize:16, color, textDecorationLine:configTheme==colorScheme?'underline':'none'}} style={{borderRadius:20}} onPress={(\r\n                )=>setColorScheme(colorScheme)}/>)}\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </View>:\r\n    <TabViewNavigator tabs={bottomTabs} tabBarPosition=\"bottom\" index={parseInt(route.params?.['tab'] || 0)} onTab={(index)=>{navigation.setParams({tab:index})}}/>\r\n}\r\n\r\n","import React, { Context, createContext,  useContext, useEffect, useState } from \"react\"\r\nimport useWebSocket from \"react-use-websocket\"\r\nimport { SendJsonMessage } from \"react-use-websocket/dist/lib/types\"\r\n// @ts-ignore\r\nimport {API_URL} from \"@env\"\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { AppState, AppStateStatus } from \"react-native\";\r\n\r\ntype WebsocketContextType = {lastJsonMessage:any, sendJsonMessage:SendJsonMessage }\r\nconst defaultContext = {lastJsonMessage:undefined, sendJsonMessage:()=>{}}\r\nconst WebSocketContext = createContext<WebsocketContextType>(defaultContext);\r\nconst [SCHEMA, DOMAIN] = `${API_URL}`.split('://')\r\n\r\nexport const WebSocketInternalProvider = ({children, path, Context, useBackground}:{children:React.ReactNode, path:string, Context:Context<WebsocketContextType>, useBackground?:boolean})=>{\r\n  const [token, setToken] = useState<string|null>(null)\r\n  const [isActive, setIsActive] = useState<boolean>(useBackground || AppState.currentState == 'active')\r\n  const { lastJsonMessage, sendJsonMessage } = useWebSocket(`${SCHEMA=='https'?'wss':'ws'}://${DOMAIN}/${path}`,{\r\n    shouldReconnect: (closeEvent) => true,\r\n    protocols: token?['Authorization',  token]:undefined,\r\n    onOpen: (e)=>{console.log(`success websocket connection(${path})`)},\r\n    onClose: (e)=> {console.log(`closed websocket connection(${path})`)},\r\n  }, isActive && token!=null)\r\n  useEffect(()=>{\r\n    AsyncStorage.getItem('Authorization').then(setToken)\r\n    const onChange = (nextState:AppStateStatus)=>setIsActive(useBackground || nextState == 'active')\r\n    AppState.addEventListener(\"change\", onChange)\r\n    return ()=>AppState.removeEventListener(\"change\", onChange)\r\n  }, [])\r\n  return <Context.Provider value={token!=null?{lastJsonMessage, sendJsonMessage}:defaultContext}>\r\n      {children}\r\n    </Context.Provider>\r\n}\r\n\r\nexport const WebSocketProvider = ({disable, children}:{disable?:boolean, children:React.ReactNode})=>{\r\n  return disable?<>{children}</>:<WebSocketInternalProvider path={'messenger/ws/'} Context={WebSocketContext}>\r\n    {children}\r\n  </WebSocketInternalProvider>\r\n}\r\n\r\nexport default ()=>{\r\n  const webSocketContext = useContext(WebSocketContext)\r\n  return webSocketContext\r\n}\r\n\r\n","import React, {useState, useEffect } from 'react';\r\nimport { StyleSheet } from 'react-native';\r\nimport CommonSection from '../components/CommonSection';\r\nimport { View, Text } from '../components/Themed';\r\nimport CommonButton from '../components/CommonButton';\r\n// import useBoardChannelList, { useBoardChannelMutation } from '../hooks/lists/useBoardChannelList';\r\nimport useAuthContext from '../hooks/useAuthContext';\r\nimport { navigate } from '../navigation';\r\nimport { Channel } from '../types';\r\nimport useMessengerChannelList, { useMessengerChannelMutation } from '../hooks/lists/useMessengerChannelList';\r\nimport TextField from '../components/TextField';\r\nimport useModalsContext from '../hooks/useModalsContext';\r\nimport useLangContext from '../hooks/useLangContext';\r\n\r\nexport default function ChannelEditModal({id, type}: {id?:number, type:string}) {\r\n  const { lang } = useLangContext()\r\n  const {auth} = useAuthContext()\r\n  const { setModal } = useModalsContext()\r\n  const channelList = useMessengerChannelList(auth)\r\n  const channelMutation = useMessengerChannelMutation()\r\n  const channel = channelList?.find(v=>v.id==id)\r\n  const [name, setName] = useState('')\r\n  const [description, setDescription] = useState('')\r\n  const back = ()=>{\r\n    setModal(ChannelEditModal, null)\r\n  }\r\n  useEffect(()=>{\r\n    if (channel){\r\n      setName(channel.name)\r\n      setDescription(channel?.description || '')\r\n    }\r\n  }, [channel])\r\n  return <CommonSection outerContainerStyle={{alignSelf:'center'}}>\r\n    <View style={{justifyContent:'space-around'}}>\r\n    <Text style={{fontSize:20}}>{lang('Channel')}</Text>\r\n    </View>\r\n    <View style={styles.separator} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />\r\n    <View style={{width:'100%'}}>\r\n      <TextField name={lang('Channel Name')} value={name} setValue={setName} width={'60%'}/>\r\n      <TextField name={lang('Description')} value={description} setValue={setDescription} multiline width={'60%'}/>\r\n    </View>\r\n    <View style={{width:'100%', flexDirection:'row', justifyContent:'flex-end'}}>\r\n      <CommonButton title={lang('save')} onPress={()=>{\r\n        if(auth?.user?.id && auth.groupId){\r\n          const newChannel:Channel = {id, name, description, type, owner:auth?.user?.id, group:auth.groupId};\r\n          (id?channelMutation.update(newChannel):channelMutation.create(newChannel)).then(v=>navigate(\"Main\", {\r\n            screen:v.type == 'messenger'?'MessengerScreen':'BoardScreen',\r\n            params:{id:v.id}\r\n          }))\r\n        }\r\n      }}/>\r\n      <CommonButton title={lang('cancel')} style={{marginHorizontal:5}} onPress={back}/>\r\n    </View>\r\n  </CommonSection>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  field:{\r\n    width:'50%',\r\n    flexDirection:'row',\r\n    padding:10,\r\n  },\r\n  separator: {\r\n    marginBottom: 20,\r\n    height: 1,\r\n    width: '100%',\r\n  },\r\n})","import { Notification } from '../types';\r\nimport axios from './axios';\r\n\r\nexport const getNotification = async (user_id:number)=>{\r\n    const data = (await axios.get(`/api/v1/notifications/?type=WEB&user=${user_id}`) ).data as Notification[]\r\n    return data.length?data[0]:undefined\r\n}\r\n\r\nexport const postNotification = async(notification:Notification)=>{\r\n    return (await axios.post(`/api/v1/notifications/`, notification)).data as Notification\r\n}\r\n\r\nexport const putNotification = async(notification:Notification)=>{\r\n    return (await axios.put(`/api/v1/notifications/${notification.id}/`, notification)).data as Notification\r\n}","import { Platform } from 'react-native';\r\n//@ts-ignore\r\nimport useMobileDetect from 'use-mobile-detect-hook';\r\n\r\nexport default ()=>{\r\n    const detectMobile = useMobileDetect();\r\n    return (detectMobile.isMobile() || Platform.OS == 'android' || Platform.OS == 'ios') as boolean\r\n}","import { useQuery } from \"react-query\";\r\nimport { getUserMembershipList } from \"../../apis\";\r\nimport { Auth } from \"../useAuthContext\";\r\n\r\nexport default function useUserMembershipList(auth?:Auth){\r\n  const { data } = useQuery([\"UserMembershipList\", auth?.groupId] , async()=>auth?.groupId?(await getUserMembershipList(auth?.groupId)):[])\r\n  return data\r\n}","import * as React from 'react';\r\nimport { View } from './Themed';\r\nimport { StyleSheet, StyleProp, ViewStyle, TextStyle, Pressable } from 'react-native';\r\nimport Colors from '../constants/Colors';\r\n\r\nexport type ItemParamList = {\r\n    outerContainerStyle?:StyleProp<TextStyle>\r\n    containerStyle?:StyleProp<ViewStyle>\r\n    bodyStyle?:StyleProp<ViewStyle>\r\n    children?: React.ReactNode\r\n    onPress?: ()=>void\r\n}\r\n\r\nexport default function CommonItem(props:ItemParamList){\r\n  const [hover, setHover] = React.useState(false)\r\n  const [press, setPress] = React.useState(false)\r\n  return (\r\n    <Pressable\r\n      style={[styles.outerContainer ,props.outerContainerStyle, (press)?{backgroundColor:'rgb(242,242,242)'}:{}]}\r\n      onPressIn={()=>{setPress(true)}}\r\n      onPressOut={()=>{setPress(false);props.onPress?.()}}\r\n       //@ts-ignore\r\n       onHoverIn={()=>setHover(true)}\r\n       onHoverOut={()=>setHover(false)}\r\n    >\r\n        <View style={[styles.container ,props.containerStyle]}>\r\n            <View style={[styles.bodyView, props.bodyStyle]}>\r\n                <>{props.children}</>\r\n            </View>\r\n      </View>\r\n    </Pressable>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  outerContainer:{\r\n    width:'100%',\r\n    maxWidth:1080,\r\n    alignItems:'stretch',\r\n  },  \r\n  container: {\r\n      marginHorizontal:20,\r\n      backgroundColor:'transparent'\r\n    },\r\n    bodyView:{\r\n      width: '100%',\r\n      padding: 10,\r\n      minHeight: 40,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      borderBottomWidth:1,\r\n      borderColor:Colors.borderColor,\r\n      backgroundColor:'transparent'\r\n    }\r\n  });\r\n  ","import * as React from 'react';\r\nimport { Avatar } from 'react-native-paper';\r\nimport { AvatarProps } from '../../types';\r\n\r\nconst normalizeHash = (hash: number, min: number, max: number) => {\r\n    return Math.floor((hash % (max - min)) + min);\r\n};\r\n\r\nconst stringToHSL = (str: string, initHash?:number) => {\r\n    let hash = initHash || 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\r\n    }\r\n    hash = Math.abs(hash);\r\n    return `hsl(${normalizeHash(hash, 0, 360)}, ${normalizeHash(hash, 0, 100)}%, ${normalizeHash(hash, 25, 75)}%)`;\r\n};\r\n\r\nexport default (props:AvatarProps) => {\r\n    const backgroundColor = stringToHSL(props.name, props.userId)\r\n    return <Avatar.Text style={{backgroundColor}} size={props.size} label={props.name.split(' ').map(v=>v[0]).join().toUpperCase()} />\r\n};","import React from 'react';\r\n// import { MaterialIcons } from \"@expo/vector-icons\"\r\nimport Avatar from '../lib/react-native-paper/Avatar';\r\nimport { AvatarProps } from '../types';\r\n\r\nexport default (props:AvatarProps)=>{\r\n    // return <MaterialIcons size={38} style={{ marginBottom: -3, marginRight:10 }} name='account-circle'/>\r\n    return <Avatar {...props}/>\r\n}\r\n\r\n","import React, { useMemo } from 'react';\r\n\r\nimport { TextProps, StyleProp } from 'react-native';\r\nimport {View, Text } from './Themed'\r\nimport useResizeContext from '../hooks/useResizeContext';\r\n\r\ntype Props = {\r\n  name: string,\r\n  width?:number,\r\n  children: React.ReactNode\r\n  textStyle?: StyleProp<TextProps>\r\n}\r\n\r\nexport default function RowField(props:Props) {\r\n  const windowType = useResizeContext()\r\n  const rowStyle = useMemo(()=>windowType=='landscape'?\r\n    {flexDirection:'row', alignItems: 'center', justifyContent:'space-between'}:\r\n    {flexDirection:'column', alignItems:'flex-start'} as any\r\n  , [windowType])\r\n  return (\r\n    <View style={[{paddingVertical:5, width:'100%'}, rowStyle]}>\r\n        <Text style={[windowType=='landscape'?{flex:1}:{width:'100%'},{paddingHorizontal: 15, fontSize:16}, props.textStyle]}>{props.name}</Text>\r\n        <View style={[windowType=='landscape'?{flex:6}:{width:'100%'},{paddingHorizontal: 15}]}>\r\n          <View style={{width:props.width}}>\r\n            {props.children}\r\n          </View>\r\n        </View>\r\n    </View>\r\n  )\r\n}","import React from 'react';\r\nimport { StyleProp, TextStyle } from 'react-native';\r\nimport { CustomTextInputProps } from '../types';\r\nimport CommonTextInput from './CommonTextInput';\r\nimport RowField from './RowField';\r\n\r\nexport default function TextField(props:CustomTextInputProps & {name: string, width?:any, textStyle?:StyleProp<TextStyle>}) {\r\n  return (\r\n    <RowField name={props.name} width={props.width} textStyle={props.textStyle}>\r\n      <CommonTextInput {...props} />\r\n   </RowField>\r\n  )\r\n}","import { MaterialCommunityIcons } from \"@expo/vector-icons\"\r\nimport React from \"react\"\r\nimport { Text, View } from \"react-native\"\r\nimport CommonItem from \"../../components/CommonItem\"\r\nimport useAuthContext from \"../../hooks/useAuthContext\"\r\nimport useUserMembershipList from \"../../hooks/lists/useUserMembershipList\"\r\nimport { UserMembership } from \"../../types\"\r\nimport Avatar from \"../../components/Avatar\"\r\nimport useModalsContext from \"../../hooks/useModalsContext\"\r\nimport ProfileModal from \"../../modals/ProfileModal\"\r\n\r\nexport const renderMemberItem = (item:UserMembership, onPress?:()=>void)=> {\r\n    return <CommonItem key={item.id} bodyStyle={{backgroundColor:'white', flexDirection:'row', justifyContent:'flex-start'}} onPress={onPress}>\r\n        <View style={{marginTop:4, marginRight:12}}><Avatar name={item.name} userId={item.id} size={44}/></View>\r\n        <Text style={{fontSize:20, fontWeight:'400'}}>{item.name}</Text>\r\n    </CommonItem>\r\n}\r\n\r\nexport default ()=>{\r\n    const {auth} = useAuthContext()\r\n    const { setModal } = useModalsContext()\r\n    const userList = useUserMembershipList(auth)\r\n    const memberItem = React.useMemo(\r\n        ()=>userList && userList.map(item=>renderMemberItem(item, ()=>setModal(ProfileModal, {id:item.id}))), [userList])\r\n    return <View style={{flex:1, backgroundColor:'white'}}>\r\n        {memberItem}\r\n    </View>\r\n}\r\n\r\nexport const MemberIcon = <MaterialCommunityIcons size={32} style={{ marginBottom: -3 }} name='account'/>","/**\r\n * Learn more about Light and Dark modes:\r\n * https://docs.expo.io/guides/color-schemes/\r\n */\r\n\r\nimport * as React from 'react';\r\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\r\n\r\nimport Colors from '../constants/Colors'\r\nimport useColorScheme from '../hooks/useColorScheme';\r\n\r\nexport function useThemeColor(\r\n  props: { light?: string; dark?: string },\r\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\r\n) {\r\n  const theme = useColorScheme();\r\n  const colorFromProps = props[theme];\r\n\r\n  if (colorFromProps) {\r\n    return colorFromProps;\r\n  } else {\r\n    return Colors[theme][colorName];\r\n  }\r\n}\r\n\r\ntype ThemeProps = {\r\n  lightColor?: string;\r\n  darkColor?: string;\r\n};\r\n\r\nexport type TextProps = ThemeProps & DefaultText['props'];\r\nexport type ViewProps = ThemeProps & DefaultView['props'];\r\n\r\nexport function Text(props: TextProps) {\r\n  const { style, lightColor, darkColor, ...otherProps } = props;\r\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\r\n\r\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\r\n}\r\n\r\nexport function View(props: ViewProps) {\r\n  const { style, lightColor, darkColor, ...otherProps } = props;\r\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\r\n\r\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\r\n}\r\n","import React from 'react';\r\nimport useAuthContext from '../hooks/useAuthContext';\r\nimport CommonButton from '../components/CommonButton';\r\nimport useModalsContext from '../hooks/useModalsContext';\r\nimport CommonSection from '../components/CommonSection';\r\nimport { Text, View } from '../components/Themed';\r\nimport useLangContext from '../hooks/useLangContext';\r\n\r\nexport default function GuestLogoutModal({id}:{id:number}) {\r\n  const { lang } = useLangContext()\r\n  const { setModal } = useModalsContext()\r\n  const {dispatch} = useAuthContext()\r\n  const back = ()=>{\r\n    setModal(GuestLogoutModal, null)\r\n  }\r\n  return <CommonSection outerContainerStyle={{alignSelf:'center'}}>\r\n    <Text>{lang('Guest users cannot reconnect after logging out. Please create an account or log in.')}</Text>\r\n    <View style={{width:'100%', flexDirection:'row', justifyContent:'flex-end'}}>\r\n      <CommonButton title={lang('sign out')} onPress={()=>dispatch({type:\"LOGOUT_REQUEST\"})}/>\r\n      <CommonButton title={lang('cancel')} onPress={()=>back()}/>\r\n    </View>\r\n  </CommonSection>\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport Profile from '../components/Profile';\r\nimport useAuthContext from '../hooks/useAuthContext';\r\nimport useUserMembershipList from '../hooks/lists/useUserMembershipList';\r\nimport { useMessengerChannelMutation } from '../hooks/lists/useMessengerChannelList';\r\nimport CommonButton from '../components/CommonButton';\r\nimport { DirectChannel } from '../types';\r\nimport { navigate } from '../navigation';\r\nimport useModalsContext from '../hooks/useModalsContext';\r\nimport CommonSection from '../components/CommonSection';\r\nimport { Text, View } from '../components/Themed';\r\nimport useLangContext from '../hooks/useLangContext';\r\n\r\nexport default function ProfileModal({id}:{id:number}) {\r\n  const { lang } = useLangContext()\r\n  const {auth} = useAuthContext()\r\n  const { setModal } = useModalsContext()\r\n  const userList = useUserMembershipList(auth)\r\n  const user = userList?.find(v=>v.id==id)\r\n  const channelMutation = useMessengerChannelMutation()\r\n  const back = ()=>{\r\n    setModal(ProfileModal, null)\r\n  }\r\n  useEffect(()=>{\r\n    if (!(id && user) && userList)\r\n      back()\r\n  }, [userList])\r\n  return user?<CommonSection outerContainerStyle={{alignSelf:'center'}}>\r\n    <View style={{flexDirection:'row', width:'100%'}}>\r\n      <View style={{flex:1}}>\r\n        <CommonButton style={{width:60}} title={'❌'} onPress={back}/>\r\n      </View>\r\n      <View style={{flex:1}}>\r\n        <Text style={{fontSize:20, textAlign:'center'}}>{lang('profile')}</Text>\r\n      </View>\r\n      <View style={{flex:1}}/>\r\n    </View>\r\n    <View style={{marginBottom: 20, height: 1, width: '100%'}} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />\r\n    \r\n    <Profile username={user.username} name={user.name} userId={user.id} />\r\n    <CommonButton title={lang('create messenger')} onPress={()=>{\r\n      if(auth?.user?.id && auth.groupId){\r\n        const newChannel:DirectChannel = {name:auth.user.id!=user.id?`${auth.user.name}, ${user.name}`:auth.user.name, type:'messenger', owner:auth?.user?.id, group:auth.groupId, counterpart:user.id};\r\n        channelMutation.direct(newChannel).then(v=>navigate(\"Main\", {screen:\"ChatScreen\", params: {id:v.id}}))\r\n      }\r\n    }}/>\r\n  </CommonSection>:<></>\r\n}\r\n","import React from 'react';\r\nimport {View} from 'react-native'\r\nimport {Text} from './Themed';\r\nimport { ProfileProps } from '../types';\r\nimport Avatar from './Avatar';\r\nimport TextButton from './TextButton';\r\nimport CommonTextInput from './CommonTextInput';\r\nimport { patchUser } from '../apis';\r\nimport useAuthContext from '../hooks/useAuthContext';\r\n\r\nexport default (props:ProfileProps)=>{\r\n    const [name, setName] = React.useState<string>()\r\n    const { auth, dispatch } = useAuthContext()\r\n    const isSelf = auth.user?.id == props.userId\r\n    const onChange = ()=>{\r\n        isSelf && patchUser({id:props.userId, name:name || ''}).finally(()=>{\r\n            setName(undefined)\r\n            dispatch({type:\"REFRESH\"})\r\n        })\r\n    }\r\n    return <View style={{width:'100%', height:135, justifyContent:'space-evenly', alignItems:'center'}}>\r\n        <Avatar {...props} size={75}/>\r\n        {name===undefined?\r\n            <TextButton textStyle={{fontWeight:'bold', fontSize:15}} onPress={()=>isSelf && setName(props.name)} title={props.name} disabled={!isSelf}/>:\r\n            <CommonTextInput value={name} style={{textAlign:'center'}} setValue={setName} onBlur={onChange} onEndEditing={onChange} />}\r\n        <Text style={{fontWeight:'normal', fontSize:14}}>{props.username}</Text>\r\n    </View>\r\n}","import React, { useState } from 'react';\r\nimport { TextInput } from 'react-native';\r\nimport Colors from '../constants/Colors';\r\nimport useColorScheme from '../hooks/useColorScheme';\r\nimport { CustomTextInputProps } from '../types';\r\n\r\nexport default (props:CustomTextInputProps)=>{\r\n    const [contentHeight, setContentHeight] = useState<number>()\r\n    const minHeight = props.minHeight || 30\r\n    const theme = useColorScheme()\r\n    return <TextInput style={[{\r\n            borderColor:'#d0d7de', \r\n            fontSize:16, \r\n            borderWidth:1, \r\n            borderRadius:6, \r\n            paddingHorizontal:10, \r\n            paddingVertical:3, \r\n            backgroundColor:Colors[theme].background,\r\n            color:Colors[theme].text,\r\n            height:props.multiline?contentHeight:minHeight,\r\n        }, props.style]} \r\n        editable={!props.disabled} \r\n        value={props.value} \r\n        onChangeText={props.setValue}\r\n        onContentSizeChange={props.multiline?(e) => setContentHeight(Math.max(e.nativeEvent.contentSize.height, minHeight) + 2):undefined}\r\n        onBlur={()=>props.onBlur?.(props.value)}\r\n        onEndEditing={()=>props.onEndEditing?.(props.value)}\r\n        multiline={props.multiline}\r\n    />\r\n}","import { useMemo, useReducer } from \"react\"\r\n\r\ntype LocalSearchAction = {type:string, keyword?:string}\r\n\r\ntype LocalSearchState ={active:boolean, keyword:string}\r\n\r\n\r\n\r\nconst localSearchReducer =(initialState:LocalSearchState, action:LocalSearchAction)=>{\r\n    switch (action.type){\r\n        case 'SEARCH':\r\n          return {\r\n            ...initialState,\r\n            keyword: action.keyword\r\n          } as LocalSearchState\r\n        case 'ENABLE_SEARCH':\r\n          return {\r\n            ...initialState,\r\n            active:true,\r\n          }\r\n        case 'DISABLE_SEARCH':\r\n            return{\r\n                ...initialState,\r\n                active:false,\r\n                keyword: ''\r\n            }\r\n        default:\r\n            throw new Error( `Unhandled action type: ${action.type}`)\r\n    }\r\n  }\r\n\r\n\r\nexport default function useLocalSearch<T>(target:T[], compare:(value:T, keyword:string)=>boolean) {\r\n  const [searchState, dispatch] = useReducer(localSearchReducer, {active:false, keyword:''})\r\n  const data = useMemo(()=>searchState.active?target.filter(v=>compare(v, searchState.keyword)):target, [searchState, target])\r\n  return {searchState, dispatch, data}\r\n}","import React, {useRef,MutableRefObject, useMemo, useState, useEffect } from 'react';\r\nimport Clipboard from '@react-native-clipboard/clipboard/dist';\r\nimport { View, Text } from '../components/Themed';\r\nimport CommonSection from '../components/CommonSection';\r\nimport useAuthContext from '../hooks/useAuthContext';\r\nimport useUserMembershipList from '../hooks/lists/useUserMembershipList';\r\nimport { UserMembership } from '../types';\r\nimport CommonButton from '../components/CommonButton';\r\nimport useMessengerMemberList, { useMessengerMemberMutation } from '../hooks/lists/useMessengerMemberList';\r\nimport { renderMemberItem } from '../navigation/tabview/MemberTabView';\r\nimport useModalsContext from '../hooks/useModalsContext';\r\nimport useExternalMembershipList from '../hooks/lists/useExternalMembershipList';\r\nimport TextField from '../components/TextField';\r\nimport useLocalSearch from '../hooks/useLocalSearch';\r\nimport TabViewNavigator from '../navigation/tabview';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\nimport useLangContext from '../hooks/useLangContext';\r\n\r\nconst InviteItem = (props:{item:UserMembership, selectedRef:MutableRefObject<Set<number>>})=>{\r\n  const [selected, setSelected] = useState(props.selectedRef.current.has(props.item.id))\r\n  return <View style={selected?{borderWidth:1, borderColor:'blue'}:{}}>\r\n    {renderMemberItem(props.item, ()=>{\r\n      if (selected){\r\n        setSelected(false)\r\n        props.selectedRef.current.delete(props.item.id)\r\n      }\r\n      else{\r\n        setSelected(true)\r\n        props.selectedRef.current.add(props.item.id)\r\n      }\r\n    })}\r\n  </View>\r\n\r\n}\r\ntype InviteTabViewProps = {\r\n  id:number,\r\n  selectedRef:MutableRefObject<Set<number>>\r\n}\r\n\r\nconst GroupTabView = ({id, selectedRef}:InviteTabViewProps)=>{\r\n  const { lang } = useLangContext()\r\n  const {auth} = useAuthContext()\r\n  const { setModal } = useModalsContext()\r\n  const userList = useUserMembershipList(auth)\r\n  const memberList = useMessengerMemberList(id)\r\n  const messengerMemberMutation = useMessengerMemberMutation()\r\n  const rawData = useMemo(()=>{\r\n    const memberSet = new Set(memberList?.map(v=>v.user))\r\n    return userList?.filter(v=>!memberSet.has(v.id)) || []\r\n  }, [userList, memberList])\r\n  const {data, dispatch:dispatchKeyword, searchState} = useLocalSearch(rawData, (v, keyword)=>(v.username.includes(keyword) || v.name.includes(keyword)))\r\n  const search = (k:string)=>{\r\n    if (k?.length>0){\r\n      dispatchKeyword({type:'ENABLE_SEARCH'})\r\n      dispatchKeyword({type:'SEARCH', keyword:k})\r\n    }\r\n    else{\r\n      dispatchKeyword({type:'DISABLE_SEARCH'})\r\n    }\r\n  }\r\n  const back = ()=>{\r\n    setModal(InviteModal, null)\r\n  }\r\n  return <View style={{alignItems:'center'}}>\r\n    <View style={{backgroundColor:'white', 'width': '50%'}}>\r\n      <TextField name={`${lang('Username')} & ${lang('Name')}`} value={searchState.keyword} setValue={search} width={'80%'}/>\r\n      {id && data?.map((item, index)=><InviteItem key={index} item={item} selectedRef={selectedRef}/>)}\r\n    </View>\r\n    <View style={[{width:'50%', flexDirection:'row', padding:10,}, {justifyContent:'flex-end'}]}>\r\n      <CommonButton title={lang('invite')} onPress={()=>{\r\n        messengerMemberMutation.invite({\r\n          channel_id:id,\r\n          user_ids:[...selectedRef.current]\r\n        }).then(back)\r\n      }}/>\r\n      <CommonButton title={lang('cancel')} onPress={back}/>\r\n    </View>\r\n  </View>\r\n}\r\n\r\nconst DELAY = 500\r\n\r\nconst ExternalMembershipTabView = ({id, selectedRef}:InviteTabViewProps)=>{\r\n  const { lang } = useLangContext()\r\n  const [value, setValue] = useState('')\r\n  const [keyword, setKeyword] = useState('')\r\n  const [copied, setCopied] = useState(false)\r\n  const timeoutRef = useRef<NodeJS.Timeout>()\r\n  const { setModal } = useModalsContext()\r\n  const memberList = useMessengerMemberList(id)\r\n  const externalMemberList = useExternalMembershipList(keyword)\r\n  const data = useMemo(()=>{\r\n    const memberSet = new Set(memberList?.map(v=>v.user))\r\n    return externalMemberList?.filter(v=>!memberSet.has(v.id)) || []\r\n  }, [externalMemberList, memberList])\r\n  const messengerMemberMutation = useMessengerMemberMutation()\r\n  useEffect(()=>{\r\n    timeoutRef.current = setTimeout(()=>{\r\n      setKeyword(value)\r\n    }, DELAY)\r\n    return ()=>{timeoutRef.current && clearTimeout(timeoutRef.current)}\r\n  }, [value])\r\n  const back = ()=>{\r\n    setModal(InviteModal, null)\r\n  }\r\n  const inviteLink = location.href.replace('chat', 'invitee')\r\n  return <View style={{alignItems:'center'}}>\r\n  <TouchableOpacity style={{paddingVertical:10, flexDirection:\"row\"}} onPress={()=>{Clipboard.setString(inviteLink);setCopied(true)}}>\r\n    <Text style={{fontSize:14}}>{lang('invite link')}{\": \"}</Text>\r\n    <Text style={{fontSize:14, color:'#12b886'}}>{inviteLink}{\" \"}</Text>\r\n    {copied && <Text style={{fontSize:12, color:'red'}}>{lang(\"copied\")}</Text>}\r\n  </TouchableOpacity>\r\n  <View style={{backgroundColor:'white', 'width': '50%'}}>\r\n    <TextField name={lang('Username')} value={value} setValue={setValue} width={'80%'}/>\r\n    {id && data?.map((item, index)=><InviteItem key={index} item={item} selectedRef={selectedRef}/>)}\r\n  </View>\r\n  <View style={[{width:'50%', flexDirection:'row', padding:10,}, {justifyContent:'flex-end'}]}>\r\n    <CommonButton title={lang('invite')} onPress={()=>{\r\n      messengerMemberMutation.invite({\r\n        channel_id:id,\r\n        user_ids:[...selectedRef.current]\r\n      }).then(back)\r\n    }}/>\r\n    <CommonButton title={lang('cancel')} onPress={back}/>\r\n  </View>\r\n</View>\r\n}\r\n\r\nexport default function InviteModal({id}:{id:number}) {\r\n  const { lang } = useLangContext()\r\n  const selectedRef = useRef<Set<number>>(new Set())\r\n  const drawerTabs:Record<string, {title:string, component:React.ComponentType<any>, icon:JSX.Element}> = {\r\n    group:{\r\n      title: lang('Group'),\r\n      component: ()=><GroupTabView id={id} selectedRef={selectedRef}/>,\r\n      icon: <></>\r\n    },\r\n    external:{\r\n      title: lang('External members'),\r\n      component: ()=><ExternalMembershipTabView id={id} selectedRef={selectedRef}/>,\r\n      icon: <></>\r\n    }\r\n  }\r\n  return <CommonSection outerContainerStyle={{alignSelf:'center'}}>\r\n    <View style={{justifyContent:'space-around'}}>\r\n      <Text style={{fontSize:20}}>{lang('invite')}</Text>\r\n    </View>\r\n    <View style={{marginBottom: 20, height: 1, width: '100%'}} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />\r\n    <View style={{width:'100%'}}>\r\n      <TabViewNavigator tabs={drawerTabs} tabBarPosition={\"top\"}/>\r\n    </View>\r\n  </CommonSection>\r\n}\r\n\r\n","import { useQuery } from \"react-query\";\r\nimport { getExternalMembershipList } from \"../../apis\";\r\n\r\nexport default function useExternalMembershipList(keyword?:string){\r\n  const { data } = useQuery([\"UserMembershipList\", keyword] , async()=>keyword?(await getExternalMembershipList(keyword)):[])\r\n  return data\r\n}","import axios, { AxiosRequestConfig } from 'axios';\r\n// @ts-ignore\r\nimport {API_URL} from \"@env\"\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nexport const accountURL =  `${API_URL}/account/`\r\nconst baseURL =  `${API_URL}/messenger/`\r\nconst defaultOption:AxiosRequestConfig = {\r\n    baseURL,\r\n    withCredentials: true,\r\n    headers: {}\r\n};\r\nconst _axios = axios.create(defaultOption);\r\n\r\n_axios.interceptors.request.use(\r\n    config => {\r\n        return config;\r\n    },\r\n    error => {\r\n        return Promise.reject(error);\r\n    }\r\n)\r\n\r\n_axios.interceptors.response.use(\r\n    response => {\r\n        // if((response.request.responseURL as string).indexOf('/task/login')>=0 && response.data.length != 0){\r\n        //     // redirect login\r\n        // }\r\n        return response;\r\n    },\r\n    error => {\r\n        if (error.response.status === 401) {\r\n            return getToken().then(async(token)=>{\r\n                if (token){\r\n                    const r = await _axios.post(\"/api/v1/user/sso/refresh/\", {token}, {headers:{'Authorization':''}, baseURL: accountURL})\r\n                    if (r.status == 200 && r.data !== ''){\r\n                        setToken(r.data)\r\n                    }\r\n                }\r\n            }).finally(()=>{\r\n                return Promise.reject(error)\r\n            })\r\n        }\r\n        return Promise.reject(error)\r\n    }\r\n)\r\n\r\nexport const setToken = async (token:string|null)=>{\r\n    _axios.defaults.headers['Authorization'] = `JWT ${token}`\r\n    if (token)\r\n        await AsyncStorage.setItem(\"Authorization\", token)\r\n    else\r\n        AsyncStorage.removeItem(\"Authorization\")\r\n}\r\nexport const getToken = async ()=>{\r\n    const token = await AsyncStorage.getItem(\"Authorization\")\r\n    _axios.defaults.headers['Authorization'] = token?`JWT ${token}`:null\r\n    return token\r\n}\r\n\r\nexport default _axios\r\n","import React, { createContext, useContext, useEffect, useReducer, useMemo, Dispatch, useState } from \"react\"\r\nimport { checkLogin, login, logout } from \"../apis\"\r\nimport { getNotification, putNotification } from \"../apis/notification\"\r\nimport { UserMembership } from \"../types\"\r\n\r\ntype AuthAction = {type:string, username?:string, password?:string, user?:UserMembership|null}\r\n\r\nexport type Auth = {user?:UserMembership|null, groupId?:number}\r\n\r\ntype AuthState ={user?:UserMembership|null, request?:{username:string, password:string}|null}\r\n\r\nconst AuthContext = createContext<{auth:Auth, error?:string, dispatch:Dispatch<AuthAction>}>({auth:{}, dispatch:()=>{}});\r\n\r\nconst authReducer =(initialState:AuthState, action:AuthAction)=>{\r\n  switch (action.type){\r\n      case 'LOGIN_REQUEST':\r\n        return {\r\n          ...initialState,\r\n          request:{username:action.username, password:action.password},\r\n        } as AuthState\r\n      case 'LOGIN_GUEST':\r\n        return {\r\n          ...initialState,\r\n          request:{username:'guest', password:'guest'},\r\n        } as AuthState\r\n      case 'LOGIN_SUCCESS':\r\n          return{\r\n              ...initialState,\r\n              user:action.user,\r\n              request:undefined\r\n          }\r\n      case 'LOGIN_FAILED':\r\n          return{\r\n              ...initialState,\r\n              request:undefined\r\n          }\r\n      case 'LOGOUT_REQUEST':\r\n          return{\r\n              ...initialState,\r\n              request:null\r\n          }\r\n      case 'LOGOUT_SUCCESS':\r\n          return {\r\n            ...initialState,\r\n            user:null,\r\n            request:undefined\r\n          }\r\n      case 'REFRESH':\r\n        return {\r\n          ...initialState,\r\n          user:undefined\r\n        }\r\n      default:\r\n          throw new Error( `Unhandled action type: ${action.type}`)\r\n  }\r\n}\r\n\r\n\r\nexport const AuthProvider = ({children}:{children:React.ReactNode})=>{\r\n  const [authState, dispatch] = useReducer(authReducer, {} as Auth)\r\n  const [error, setError] = useState<string>()\r\n  const auth = useMemo(()=>({\r\n    user:authState.user,\r\n    groupId: authState.user?.membership_set.find(g=>g.root_group_id==null)?.group\r\n  }), [authState])\r\n  useEffect(()=>{\r\n    if(authState.user===undefined){\r\n      checkLogin().then((user)=>{\r\n        dispatch({type:\"LOGIN_SUCCESS\", user})\r\n      }).catch((e)=>{\r\n        console.log(e)\r\n        dispatch({type:\"LOGOUT_SUCCESS\"})\r\n      })\r\n    }\r\n    else if(authState.user===null && authState.request){\r\n      login(authState.request.username, authState.request.password).then(user=>{\r\n        dispatch({type:\"LOGIN_SUCCESS\", user})\r\n      }).catch((data)=>{\r\n        dispatch({type:\"LOGIN_FAILED\"})\r\n        setError(data.response?.data?.message)\r\n      })\r\n    }\r\n    else if(authState.user && authState.request===null){\r\n      getNotification(authState.user.id).then(noti=>{\r\n        noti && putNotification({...noti, token:''}).then(()=>{\r\n          logout().then(()=>dispatch({type:\"LOGOUT_SUCCESS\"}))\r\n        })\r\n      })\r\n    }\r\n  }, [authState])\r\n  return <AuthContext.Provider value={{auth, error, dispatch}}>\r\n    {children}\r\n  </AuthContext.Provider>\r\n}\r\n\r\nexport default ()=>{\r\n  const authContext = useContext(AuthContext)\r\n  return authContext\r\n}\r\n","/**\r\n * Learn more about deep linking with React Navigation\r\n * https://reactnavigation.org/docs/deep-linking\r\n * https://reactnavigation.org/docs/configuring-links\r\n */\r\n\r\nimport { LinkingOptions } from '@react-navigation/native';\r\nimport * as Linking from 'expo-linking';\r\nimport {main, login, modal} from '../screens';\r\n\r\nconst ROOTPATH = 'tokki-tok'  // github repository name\r\n\r\nObject.values(modal).forEach(v=>v.path = ROOTPATH + '/' + v.path)\r\n\r\nexport default  {\r\n  prefixes: [Linking.makeUrl('/')],\r\n  config: {\r\n    screens: {\r\n      Main: {\r\n        screens:{\r\n          ...main,\r\n          ...login,\r\n          NotFound: '*',\r\n        },\r\n        path: ROOTPATH\r\n      },\r\n      ...modal\r\n    },\r\n  },\r\n} as LinkingOptions;\r\n","const tintColorLight = '#2f95dc';\r\nconst tintColorDark = '#fff';\r\n\r\nexport default {\r\n  light: {\r\n    text: '#000',\r\n    background: '#fff',\r\n    tint: tintColorLight,\r\n    tabIconDefault: '#ccc',\r\n    tabIconSelected: tintColorLight,\r\n    header:'#24292f',\r\n    buttonColor:'rgb(242,242,242)',\r\n    buttonBackgroundColor: '#f6f8fa', //'rgba(9,30,66,0.08)',//rgb(242,242,242)\r\n  },\r\n  dark: {\r\n    text: '#fff',\r\n    background: '#000',\r\n    tint: tintColorDark,\r\n    tabIconDefault: '#ccc',\r\n    tabIconSelected: tintColorDark,\r\n    header:'#dbd6d1',\r\n    buttonColor:'rgb(14,14,14)',\r\n    buttonBackgroundColor: '#080604',\r\n  },\r\n  button:{\r\n    borderColor:'rgba(27,31,36,0.15)',\r\n  },\r\n  borderColor:'#d0d7de',\r\n  \r\n  focus:'#0065A4',\r\n};\r\n","import { StackScreenProps } from '@react-navigation/stack';\r\nimport * as React from 'react';\r\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\r\nimport useLangContext from '../hooks/useLangContext';\r\n\r\nexport default function NotFoundScreen({\r\n  navigation,\r\n}: StackScreenProps<any, 'NotFound'>) {\r\n  const { lang } = useLangContext()\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>{lang(\"This screen doesn't exist.\")}</Text>\r\n      <TouchableOpacity onPress={() => navigation.replace('HomeScreen')} style={styles.link}>\r\n        <Text style={styles.linkText}>{lang(\"Go to home screen!\")}</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n  link: {\r\n    marginTop: 15,\r\n    paddingVertical: 15,\r\n  },\r\n  linkText: {\r\n    fontSize: 14,\r\n    color: '#2e78b7',\r\n  },\r\n});\r\n","import { useTheme } from '@react-navigation/native';\r\nimport React, { useState } from 'react';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport Profile from '../components/Profile';\r\nimport TextButton from '../components/TextButton';\r\nimport Colors from '../constants/Colors';\r\nimport useResizeContext from '../hooks/useResizeContext';\r\nimport TabViewNavigator, { drawerTabs } from './tabview';\r\nimport { UserMembership } from '../types';\r\nimport useModalsContext from '../hooks/useModalsContext';\r\nimport ChannelEditModal from '../modals/ChannelEditModal';\r\n\r\nexport default ({user}:{user:UserMembership})=> {\r\n  const { colors } = useTheme();\r\n  const windowType = useResizeContext();\r\n  const [index, setIndex] = useState(0);\r\n  const { setModal } = useModalsContext()\r\n  const onAddList = [\r\n    ()=>setModal(ChannelEditModal, {type:'messenger'}),\r\n    ()=>setModal(ChannelEditModal, {type:'board'})\r\n  ]\r\n  return <View style={windowType=='landscape'?[\r\n      styles.tabBar,\r\n      {\r\n        backgroundColor: colors.card,\r\n        borderTopColor: colors.border,\r\n      },\r\n      // tabBarStyle,\r\n    ]:{width:0}}\r\n    pointerEvents={false ? 'none' : 'auto'}\r\n  >\r\n    <Profile userId={user.id} username={user.username} name={user.name}/>\r\n    {windowType=='landscape' && <>\r\n      <View style={{flexDirection:'row-reverse'}}>\r\n          <TextButton title='+' textStyle={{fontSize:20}} style={{borderRadius:20}} onPress={onAddList[index]}/>\r\n      </View>\r\n      <View accessibilityRole=\"tablist\" style={styles.content}>\r\n        {Object.keys(drawerTabs).length>1 ? \r\n          <TabViewNavigator tabs={drawerTabs} tabBarPosition={\"top\"} onTab={setIndex}/>: \r\n          <View style={{borderTopWidth:1, flex:1, borderColor:colors.border}}>            \r\n            {Object.values(drawerTabs).map(drawerTab=>{const Tab = drawerTab.component; return <Tab key={drawerTab.title}/>})}\r\n          </View>\r\n        }\r\n      </View>\r\n    </>}\r\n  </View>\r\n}\r\n\r\n{/*<Text style={[styles.label, { color: d.isFocused ? colors.primary : '#222' }]}></Text> */}\r\n\r\nconst styles = StyleSheet.create({\r\n    tabBar: {\r\n      width:240,\r\n      elevation: 8,\r\n      borderRightWidth:1,\r\n      borderColor:Colors.borderColor\r\n    },\r\n    content: {\r\n      flex: 1,\r\n      flexDirection: 'row',\r\n    },\r\n    tab: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n    },\r\n    label: {\r\n        textAlign: 'center',\r\n        backgroundColor: 'transparent',\r\n      },\r\n  });","import React, { createContext, useContext, useEffect } from \"react\"\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/messaging\";\r\n//@ts-ignore\r\nimport {FCM_PUBLIC_VAPID_KEY, FCM_API_KEY} from \"@env\"\r\nimport { Notification as NotificationType, UserMembership } from \"../types\";\r\nimport { getNotification, postNotification, putNotification } from \"../apis/notification\";\r\nimport { Auth } from \"./useAuthContext\";\r\nconst firebaseConfig = require(\"../../web/firebase-config.js\")\r\n// Initialize Firebase\r\nconst key = firebaseConfig.messagingSenderId\r\nconst apiKeyEncrypted = (FCM_API_KEY as string).split('').map((v, i)=> (v.charCodeAt(0) ^ key.charCodeAt(i)).toString(16).padStart(2, '0')).join('')\r\nconst app = firebase.initializeApp({...firebaseConfig, apiKey:FCM_API_KEY});\r\n// const analytics = getAnalytics(app);\r\nconst messaging = firebase.messaging(app);\r\n\r\nmessaging.onMessage((payload) => {\r\n  if (!(\"Notification\" in window)) {\r\n    alert(\"This browser does not support desktop notification\");\r\n  }\r\n  else if (Notification.permission === \"granted\") {\r\n    const message_set = JSON.parse(payload.data['message_set'])[0]\r\n    new Notification(payload.data.channel_name, { body: `${payload.data.name}: ${message_set.content}` });\r\n  }\r\n});\r\n\r\nconst requestToken = async()=>{\r\n  const permission = await Notification.requestPermission();\r\n  if (permission === 'granted') {\r\n    const serviceWorkerRegistration = await navigator.serviceWorker.register(`${process.env.PUBLIC_URL}/firebase-messaging-sw.js?${apiKeyEncrypted}`)\r\n    console.log('[SW]: SCOPE: ', serviceWorkerRegistration.scope);\r\n    const currentToken = await messaging.getToken({serviceWorkerRegistration, vapidKey: FCM_PUBLIC_VAPID_KEY })\r\n    window.addEventListener('beforeunload', (event:any) => {\r\n      event.preventDefault();\r\n      serviceWorkerRegistration.unregister()\r\n    });\r\n    if (currentToken)\r\n      return currentToken\r\n  }\r\n  return undefined\r\n}\r\n\r\n\r\nlet noti:NotificationType|undefined\r\n\r\nconst setEnable = async(enable:boolean, user?:UserMembership|null)=>{\r\n  context.enable = enable\r\n  if(user && enable){\r\n    const token = await requestToken() || null\r\n    noti = await getNotification(user.id)\r\n    if (noti == undefined)\r\n      noti = await postNotification({user:user.id, type:'WEB', token})\r\n    else\r\n      noti = await putNotification({...noti, token})\r\n  }\r\n  else if (noti){\r\n    await putNotification({...noti, token:null})\r\n  }\r\n}\r\n\r\nconst context:{enable:boolean, setEnable:(enable:boolean, user?:UserMembership|null)=>void} = {enable:false, setEnable}\r\nconst FirebaseContext = createContext(context);\r\n\r\nexport default (auth:Auth)=>{\r\n  useEffect(()=>{\r\n    setEnable(true, auth.user)\r\n  }, [auth.user])\r\n  const firebaseContext = useContext(FirebaseContext)\r\n  return firebaseContext\r\n}\r\n","import InviteModal from \"./InviteModal\";\r\nimport ProfileModal from \"./ProfileModal\";\r\nimport ChannelEditModal from \"./ChannelEditModal\"\r\nimport GuestLogoutModal from \"./GuestLogoutModal\";\r\n\r\nexport default [\r\n    InviteModal,\r\n    ProfileModal,\r\n    ChannelEditModal,\r\n    GuestLogoutModal\r\n]","import { CardStyleInterpolators, createStackNavigator } from '@react-navigation/stack';\r\nimport React, {useMemo} from 'react';\r\nimport { View } from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport useResizeContext from '../hooks/useResizeContext';\r\nimport NotFoundScreen from '../screens/NotFoundScreen';\r\nimport {main, login, modal} from '../screens';\r\nimport DrawerNavigator from './DrawerNavigator';\r\nimport useAuthContext from '../hooks/useAuthContext';\r\nimport { WebSocketProvider } from '../hooks/useWebsocketContext';\r\nimport HeaderRight from '../components/HeaderRight'\r\nimport Colors from '../constants/Colors';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\nimport useFirebaseContext from '../hooks/useFirebaseContext';\r\nimport useIsMobile from '../hooks/useIsMobile';\r\nimport useColorScheme from '../hooks/useColorScheme';\r\nimport { ModalsProvider } from '../hooks/useModalsContext';\r\nimport modals from '../modals';\r\nimport useLangContext from '../hooks/useLangContext';\r\n\r\nconst Root = createStackNavigator();\r\n\r\nexport default function RootNavigator() {\r\n    const windowType = useResizeContext();\r\n    return <Root.Navigator\r\n        mode= 'modal'\r\n        headerMode= 'screen'\r\n        screenOptions={{\r\n            cardStyle:{backgroundColor:\"white\"},\r\n            animationEnabled: true,\r\n            cardStyleInterpolator: CardStyleInterpolators.forVerticalIOS,\r\n        }}\r\n    >\r\n        <Root.Screen name=\"Main\" component={MainNavigator} options={{headerShown:false}}/>\r\n        {Object.entries(modal).map(([key, screen])=><Root.Screen key={key} name={key} component={screen.component} options={{\r\n            title: screen.title,\r\n            gestureDirection: windowType == 'landscape'?'vertical-inverted':'vertical'\r\n        }} />)}\r\n    </Root.Navigator>\r\n}\r\n\r\nconst Main = createStackNavigator();\r\n\r\nfunction headerLeft(navigation:any, route:any, windowType:string, isMobile:boolean){\r\n    const canGOBackScreen = ['HomeScreen', 'LoginScreen'].findIndex(v=>v == route.name) == -1\r\n    const goBack = ()=>{\r\n        if (navigation.canGoBack())\r\n            navigation.goBack()\r\n        else if (canGOBackScreen)\r\n            navigation.replace('HomeScreen')\r\n    }\r\n    if (windowType=='portrait' && canGOBackScreen)\r\n        return <TouchableOpacity onPress={goBack}><Ionicons size={isMobile?20:24} style={{marginHorizontal:isMobile?16:20 }} name=\"arrow-back\"/></TouchableOpacity>\r\n    return null\r\n}\r\n\r\nconst MainNavigator = ()=>{\r\n    const windowType = useResizeContext();\r\n    const isMobile = useIsMobile()\r\n    const {auth} = useAuthContext()\r\n    const theme = useColorScheme()\r\n    const {lang, locale} = useLangContext()\r\n    const entries = useMemo(()=>{\r\n        if (auth.user === undefined)\r\n            return []\r\n        console.log('current user: ', auth.user)\r\n        return Object.entries(auth.user === null?login:main)\r\n    }, [auth, locale])\r\n    const modalValues = useMemo(()=>{\r\n        if (auth.user === undefined)\r\n            return []\r\n        return auth.user === null?[]:modals\r\n    }, [auth])\r\n\r\n    useFirebaseContext(auth)\r\n    return (auth.user!==undefined?<View style={{flexDirection:'row', flex:1}}>\r\n        <ModalsProvider modals={modalValues}>\r\n            {auth.user?<DrawerNavigator user={auth.user}/>:undefined}\r\n            <View style={{flex:1}}>\r\n                <WebSocketProvider disable={auth.user === null || auth.user === undefined}>\r\n                        <Main.Navigator\r\n                            screenOptions={({navigation, route})=>({\r\n                                headerStyle:{backgroundColor:Colors[theme].header, height:isMobile?50:undefined},\r\n                                headerTitleStyle:{color:'white'},\r\n                                headerLeft:()=>headerLeft(navigation, route, windowType, isMobile),\r\n                                headerRight:()=><HeaderRight/>,\r\n                                headerLeftContainerStyle:{backgroundColor:'white', borderBottomWidth:1, borderColor:Colors.borderColor},\r\n                                cardStyle:{flexShrink:1},\r\n                                animationEnabled:windowType=='portrait',\r\n                                cardStyleInterpolator: CardStyleInterpolators.forHorizontalIOS\r\n                            })}\r\n                        >\r\n                            {entries.map(([key, screen])=><Main.Screen key={key} name={key} component={screen.component} options={{ title: lang(screen.title) }} />)}\r\n                            <Main.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\r\n                        </Main.Navigator>\r\n                </WebSocketProvider>\r\n            </View>\r\n        </ModalsProvider>\r\n    </View>:<></>);\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Dimensions, Platform, View } from 'react-native'\r\nimport useIsMobile from '../hooks/useIsMobile'\r\n\r\n\r\nexport default (props:{children:React.ReactNode})=>{\r\n    const isMobile = useIsMobile()\r\n    const [height, setHeight] = useState(window.innerHeight + 1)\r\n    useEffect(()=>{\r\n        if(isMobile && Platform.OS == 'web'){\r\n            const onChange = (e:any)=>{\r\n                setHeight(window.innerHeight + 1)\r\n            }\r\n            Dimensions.addEventListener(\"change\",onChange)\r\n            return () => Dimensions.removeEventListener(\"change\", onChange)\r\n            \r\n        }\r\n    },[ isMobile])\r\n    return <View style={{height:isMobile&&Platform.OS == 'web'?height:'100%'}}>\r\n        {props.children}\r\n    </View>\r\n\r\n}\r\n  ","import React from 'react';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\r\nimport Navigation from './src/navigation';\r\nimport useCachedResources from './src/hooks/useCachedResources';\r\nimport { useInitColorScheme } from './src/hooks/useColorScheme';\r\nimport MobileSafeAreaView from './src/components/MobileSafeAreaView';\r\nimport { AuthProvider } from './src/hooks/useAuthContext';\r\nimport { QueryClient, QueryClientProvider } from 'react-query';\r\nimport { IntlProvider } from './src/hooks/useLangContext';\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nexport default function App() {\r\n  const isLoadingComplete = useCachedResources();\r\n  const isAppearenceComplete = useInitColorScheme()\r\n  if (!isLoadingComplete || !isAppearenceComplete) {\r\n    return null;\r\n  } else {\r\n    return (\r\n      <SafeAreaProvider>\r\n        <MobileSafeAreaView>\r\n          <AuthProvider>\r\n            <QueryClientProvider client={queryClient}>\r\n              <IntlProvider>\r\n                {/* devtools */}\r\n                {/* <ReactQueryDevtools initialIsOpen={true} /> */}\r\n                <Navigation/>\r\n                <StatusBar />\r\n              </IntlProvider>\r\n            </QueryClientProvider>\r\n          </AuthProvider>\r\n        </MobileSafeAreaView>\r\n      </SafeAreaProvider>\r\n    );\r\n  }\r\n}\r\n","import { Ionicons } from '@expo/vector-icons';\r\nimport * as Font from 'expo-font';\r\nimport * as SplashScreen from 'expo-splash-screen';\r\nimport * as React from 'react';\r\n\r\nexport default function useCachedResources() {\r\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\r\n\r\n  // Load any resources or data that we need prior to rendering the app\r\n  React.useEffect(() => {\r\n    async function loadResourcesAndDataAsync() {\r\n      try {\r\n        SplashScreen.preventAutoHideAsync();\r\n\r\n        // Load fonts\r\n        await Font.loadAsync({\r\n          ...Ionicons.font,\r\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\r\n        });\r\n      } catch (e) {\r\n        // We might want to provide this error information to an error reporting service\r\n        console.warn(e);\r\n      } finally {\r\n        setLoadingComplete(true);\r\n        SplashScreen.hideAsync();\r\n      }\r\n    }\r\n\r\n    loadResourcesAndDataAsync();\r\n  }, []);\r\n\r\n  return isLoadingComplete;\r\n}\r\n","import { createIntl, createIntlCache } from \"@formatjs/intl\";\r\nimport {I18nManager} from \"react-native\";\r\nimport * as RNLocalize from \"react-native-localize\";\r\n\r\nexport const translations = {\r\n  ko: require(\"./ko.json\"),\r\n} as const;\r\n\r\ntype Translation = keyof typeof translations;\r\n\r\n// fallback if no available language fits\r\nconst fallback = { languageTag: \"en\", isRTL: false };\r\n\r\nconst { languageTag, isRTL } =\r\n  RNLocalize.findBestLanguageTag(Object.keys(translations)) ?? fallback;\r\n\r\n// update layout direction\r\nI18nManager.forceRTL(isRTL);\r\n\r\n// console.log(languageTag)\r\nconst intl = createIntl(\r\n  {\r\n    defaultLocale: \"en\",\r\n    locale: languageTag,\r\n    messages: translations[languageTag as Translation],\r\n  },\r\n  createIntlCache(),\r\n);\r\n\r\nexport default intl","import React, { createContext, useContext, useState, useEffect } from \"react\";\r\nimport { IntlShape } from \"@formatjs/intl\";\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport intl, { translations } from \"../lang\";\r\n\r\nconst IntlContext = createContext<{locale?:string, setLocale:(locale:string|undefined)=>void}>({setLocale:()=>{}});\r\n\r\nexport const IntlProvider = ({children}:{children:React.ReactNode})=>{\r\n  const [complete, setComplete] = useState(false)\r\n  const [locale, setLocale] = useState<string>()\r\n  useEffect(()=>{\r\n    AsyncStorage.getItem(\"locale\").then(v=>{\r\n      setLocale(v || undefined)\r\n      setComplete(true)\r\n    })\r\n  }, [])\r\n  return complete?<IntlContext.Provider value={{locale, setLocale}}>\r\n      {children}\r\n    </IntlContext.Provider>:<></>\r\n}\r\n\r\n\r\n\r\ntype TranslationParams = Parameters<IntlShape<string>[\"formatMessage\"]>[1];\r\n\r\nexport default ()=>{\r\n  const { locale, setLocale } = useContext(IntlContext)\r\n  return {\r\n    lang:(key: string, params?: TranslationParams) => {\r\n      if (locale == 'en' || key.length==0)\r\n        return key\r\n      if (locale != undefined && locale !='auto')\r\n        return translations[locale as 'ko'][key]\r\n      return intl\r\n        .formatMessage({ id: key, defaultMessage: key }, params)\r\n        .toString()\r\n    },\r\n    locale,\r\n    setLocale: (locale:string)=>{AsyncStorage.setItem('locale', locale).then(()=>setLocale(locale))}\r\n  }\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Text, StyleSheet, Pressable, StyleProp, ViewStyle} from 'react-native';\r\nimport Colors from '../constants/Colors';\r\nimport useColorScheme from '../hooks/useColorScheme';\r\nimport { CustomButtonProps } from '../types';\r\n\r\nconst DefaultButton = (props:CustomButtonProps)=>{\r\n    const [hover, setHover] = useState(false)\r\n    return <Pressable\r\n        onPress={()=>props.onPress()}\r\n        //@ts-ignore\r\n        onHoverIn={()=>setHover(true)}\r\n        onHoverOut={()=>setHover(false)}\r\n        style={[\r\n            {\r\n                paddingVertical:5, \r\n                paddingHorizontal:16\r\n            },\r\n            props.style,\r\n            hover?{backgroundColor:props.color}:{}\r\n        ]}>\r\n            <Text selectable={false} style={[{fontSize:14}, props.textStyle]}>{props.title}</Text>\r\n        </Pressable>\r\n}\r\n\r\nexport default (props:CustomButtonProps)=>{\r\n    const theme = useColorScheme()\r\n    const _props = {\r\n        color:Colors[theme].buttonColor,\r\n        ...props,\r\n        style:[\r\n            styles.style,\r\n            {\r\n                backgroundColor:Colors[theme].buttonBackgroundColor\r\n            },\r\n            props.style,\r\n        ] as StyleProp<ViewStyle>,\r\n        textStyle:[\r\n            styles.text, \r\n            {color:Colors[theme].text},\r\n            props.textStyle\r\n        ]\r\n    }\r\n    return <DefaultButton {..._props}/>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    style:{\r\n        borderRadius:6, \r\n        borderColor:Colors.button.borderColor, \r\n        borderWidth:1, \r\n    },\r\n    text:{\r\n        textAlign:'center', \r\n        fontWeight:'600'\r\n    }\r\n});\r\n","firebaseConfig = {\n    \"authDomain\": \"virtual-metrics-355712.firebaseapp.com\",\n    \"projectId\": \"virtual-metrics-355712\",\n    \"storageBucket\": \"virtual-metrics-355712.appspot.com\",\n    \"messagingSenderId\": \"76003576924\",\n    \"appId\": \"1:76003576924:web:c8c8a006d07918bbc02a99\",\n    \"measurementId\": \"G-SEL35L4N5R\"\n}\nif (typeof module !== 'undefined') {\n    module.exports = firebaseConfig\n}\n","\r\nimport { User, UserMembership } from '../types';\r\nimport axios, { getToken, setToken, accountURL as baseURL } from './axios';\r\n\r\nexport const login = async(username:string, password:string) => {\r\n    if(username.endsWith('.guest') && password.length == 0)\r\n        password = 'guest'\r\n    const r = await axios.post(\"/api-token-auth/\", {username, password});\r\n    if(r.status == 200){\r\n        await setToken(r.data)\r\n        return await checkLogin()\r\n    }\r\n}\r\n\r\nexport const logout = async() => {\r\n    await setToken(null)\r\n    return await axios.get(\"/api-auth/logout/\")\r\n}\r\n\r\nexport const guestLogin =  async() => {\r\n    return await login('guest', 'guest')\r\n}\r\n\r\nconst checkLoginToken = async ()=>{\r\n    const value = (await axios.get(\"/api/v1/users/memberships/?_self=true\"))?.data\r\n    if (value && value.length){\r\n        return value[0] as UserMembership\r\n    }\r\n    return null\r\n}\r\n\r\nexport const checkLogin = async() => {\r\n    const token = await getToken()\r\n    if (token === null)\r\n        return null\r\n    try{\r\n       return await checkLoginToken()\r\n    }\r\n    catch(e:any){\r\n        let error = e\r\n        if(e.response !== undefined && e.response.status==401){\r\n            try{\r\n                return await checkLoginToken()\r\n            }\r\n            catch(e2){\r\n                error = e2\r\n            }\r\n        }\r\n        const isOffline = ((error as any).code == \"ERR_NETWORK\" || (error as any).message && ((error as any).message as string).startsWith(\"Cannot read\"))\r\n        throw {error, isOffline}\r\n    }\r\n}\r\n\r\nexport const getUserList = async (group_id:number)=>{\r\n    return (await axios.get(`/api/v1/users/?group_id=${group_id}`) ).data as User[]\r\n}\r\n\r\nexport const patchUser = async (user:{id:number, name:string})=>{\r\n    await axios.patch(`/api/v1/user/`, {ids:[user.id], updated: {name:user.name}}, {baseURL})\r\n}\r\n\r\nexport const getUserMembershipList = async (group_id:number)=>{\r\n    return (await axios.get(`/api/v1/users/memberships/?group_id=${group_id}`) ).data as UserMembership[]\r\n}\r\n\r\nexport const getExternalMembershipList = async (username:string)=>{\r\n    return (await axios.get(`/api/v1/users/memberships/?username=${username}`) ).data as UserMembership[]\r\n}","import { Channel, MessengerMember, MessengerContent, EditMessage, MessengerChannel, DirectChannel } from '../types';\r\nimport axios from './axios';\r\n\r\nexport const getMessengerChannelList = async (user_id:number)=>{\r\n    return (await axios.get(`/api/v1/channels/messenger/?type=messenger&messenger_user_id=${user_id}`) ).data as MessengerChannel[]\r\n}\r\n\r\nexport const postChannel = async(channel:Channel)=>{\r\n    return (await axios.post(`/api/v1/channels/`, channel)).data as Channel\r\n}\r\n\r\nexport const postDirectChannel = async(channel:DirectChannel)=>{\r\n    return (await axios.post(`/api/v1/channels/direct/`, channel)).data as Channel\r\n}\r\n\r\nexport const putChannel = async(channel:Channel)=>{\r\n    return (await axios.put(`/api/v1/channels/${channel.id}/`, channel)).data as Channel\r\n}\r\n\r\nexport const deleteChannel = async(channel_id:number)=>{\r\n    await axios.delete(`/api/v1/channels/${channel_id}/`)\r\n}\r\n\r\nexport const getMessengerMemberList = async(channel_id:number)=>{\r\n    return (await axios.get(`/api/v1/messengermembers/?channel=${channel_id}`) ).data as MessengerMember[]\r\n}\r\n\r\nexport const postBulkMessengerMember = async(data:{channel_id:number, user_ids:number[]})=>{\r\n    await axios.post(`/api/v1/messengermembers/bulk/`, {channel:data.channel_id, user_ids:data.user_ids})\r\n}\r\n\r\nexport const deleteMessengerMember = async(member_id:number)=>{\r\n    await axios.delete(`/api/v1/messengermembers/${member_id}/`)\r\n}\r\n\r\nexport const getMessengerContentList = async (channel_id:number, id_lt?:number)=>{\r\n    const id_lt_param = id_lt?`&id_lt=${id_lt}`:''\r\n    return (await axios.get(`/api/v1/messengercontents/?limit=30&channel=${channel_id}${id_lt_param}`)).data.results as MessengerContent[]\r\n}\r\n\r\nexport const postMessage = async (message:EditMessage)=>{\r\n    if (message.file){\r\n        const formData = new FormData(); // formData 객체를 생성한다.\r\n        formData.append(\"file\", message.file)\r\n        Object.entries(message).forEach(value=>{\r\n            formData.append(value[0], `${value[1]}`)\r\n        })\r\n        await axios.post(`/api/v1/messengercontents/messages/`, formData, {headers:{\r\n            ...(axios.defaults.headers as any), \"Content-Type\": \"multipart/form-data\",\r\n        }})\r\n    }\r\n    else{\r\n        await axios.post(`/api/v1/messengercontents/messages/`, message)\r\n    }\r\n}\r\n\r\nexport const deleteMessengerContent = async (content_id:number)=>{\r\n    await axios.delete(`/api/v1/messengercontents/${content_id}/`)\r\n}","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","import React, { useState, createContext, useContext, useEffect } from \"react\";\r\nimport { Modal } from \"react-native\";\r\nimport useResizeContext from \"./useResizeContext\";\r\n\r\ntype ModalProps = any\r\n\r\ntype ModalState = {\r\n  Component:React.ComponentType<ModalProps>,\r\n  ExactComponent?:React.ComponentType<ModalProps>\r\n}\r\ntype SetModal = (Component:ModalState[\"Component\"], props:ModalProps|null)=>void\r\n\r\nconst ModalsContext = createContext<{setModal: SetModal}>({\r\n    setModal: () => {}\r\n});\r\n\r\nexport const ModalsProvider = ({children, modals:allModals}:{children:React.ReactNode, modals:React.ComponentType<ModalProps>[]}) => {\r\n    const [modals, setModals] = useState<ModalState[]>(allModals.map((Component)=>({Component})));\r\n    const windowType = useResizeContext();\r\n    const [animationType, setAnimationType] = useState('none')\r\n    const setModal:SetModal = (Component, props) => {\r\n        const newModals = modals.map(m=>{\r\n            if(m.Component == Component){\r\n                return {\r\n                    Component, \r\n                    ExactComponent:props != null?React.memo(()=><Component {...props}/>):undefined\r\n                }\r\n            }\r\n            return m        \r\n        })\r\n        setModals(newModals);\r\n    }\r\n    useEffect(()=>{\r\n        modals.filter(v=>v.ExactComponent!==undefined).length == 0 && setAnimationType(windowType == 'landscape'?'fade':'slide')\r\n    }, [windowType, modals])\r\n    return <ModalsContext.Provider value={{setModal}}>\r\n        {children}\r\n        {modals.map((modal, index)=>{\r\n            const { ExactComponent } = modal;\r\n            return <Modal key={index} animationType={animationType as any} visible={ExactComponent!==undefined}>\r\n                {ExactComponent?<ExactComponent/>:<></>}\r\n            </Modal>\r\n        })}\r\n    </ModalsContext.Provider>\r\n}\r\n\r\nexport default ()=>{\r\n    const modalsContext = useContext(ModalsContext)\r\n    return modalsContext\r\n}\r\n\r\n","import React, { useState, useEffect, createContext, useContext, useMemo } from 'react';\r\nimport { Dimensions, ScaledSize, useWindowDimensions } from 'react-native';\r\n//@ts-ignore\r\nimport useMobileDetect from 'use-mobile-detect-hook';\r\n\r\ntype WindowType = 'portrait' | 'landscape'\r\n\r\nconst getWindowType = (window:{width:number, height:number})=> window.height >= window.width?'portrait':'landscape' as WindowType;\r\n\r\nconst ResizeContextContext = createContext<WindowType>(getWindowType(Dimensions.get('window')));\r\n\r\nexport const ResizeContextProvider = ({children}:{children:React.ReactNode})=>{\r\n  const detectMobile = useMobileDetect();\r\n  const {width, height} = useWindowDimensions()\r\n  const [windowType, setWindowType] = useState(getWindowType({width, height}))\r\n  useEffect(()=>{\r\n    setWindowType(getWindowType({width, height}))\r\n  }, [width, height])\r\n  return <ResizeContextContext.Provider value={detectMobile.isMobile()?'portrait':windowType}>\r\n    {children}\r\n  </ResizeContextContext.Provider>\r\n}\r\n\r\nexport default function useResizeContext() {\r\n  const windowType = useContext(ResizeContextContext)\r\n  return windowType\r\n}","import AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { useTheme } from '@react-navigation/native';\r\nimport { useMemo, useEffect, useState } from 'react';\r\nimport { ColorSchemeName } from 'react-native';\r\nimport { Appearance, ColorSchemeName as UserColorSchemeName } from 'react-native-appearance';\r\n\r\n// The useColorScheme value is always either light or dark, but the built-in\r\n// type suggests that it can be null. This will not happen in practice, so this\r\n// makes it a bit easier to work with.\r\n\r\nexport function useInitColorScheme(){\r\n  const [complete, setComplete] = useState(false)\r\n  useEffect(()=>{\r\n    if (!complete){\r\n      AsyncStorage.getItem(\"color\").then(v=>{\r\n        Appearance.set({colorScheme:(v==null)?'no-preference':(v as any)})\r\n        setComplete(true)\r\n      })\r\n    }\r\n  }, [complete])\r\n  return complete\r\n}\r\n\r\nexport function setColorScheme(colorScheme:UserColorSchemeName){\r\n  AsyncStorage.setItem('color',colorScheme as string).then(()=>Appearance.set({colorScheme}))\r\n}\r\n\r\nexport default function useColorScheme(): NonNullable<ColorSchemeName> {\r\n  const { dark } = useTheme()\r\n  const colorScheme = useMemo(()=> dark?'dark':'light', [dark]) as NonNullable<ColorSchemeName>;\r\n  return colorScheme\r\n}\r\n","import * as React from 'react';\r\nimport { View, Text } from './Themed';\r\nimport { StyleSheet, StyleProp, ViewStyle, TextStyle } from 'react-native';\r\nimport Colors from '../constants/Colors';\r\n\r\nexport type SectionParamList = {\r\n    title?: string,\r\n    titleStyle?:StyleProp<TextStyle>\r\n    outerContainerStyle?:StyleProp<TextStyle>\r\n    containerStyle?:StyleProp<ViewStyle>\r\n    bodyStyle?:StyleProp<ViewStyle>\r\n    subtitle?: string\r\n    withSeparator?: boolean\r\n    children?: React.ReactNode\r\n}\r\n\r\nexport default function CommonSection(props:SectionParamList){\r\n  return (\r\n    <View style={[styles.outerContainer, props.outerContainerStyle]}>\r\n        <View style={[styles.container, props.containerStyle]}>\r\n            {props.withSeparator?<View style={styles.separator} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />:undefined}\r\n            {props.title?<View style={styles.titleView}>\r\n              <Text style={[styles.title, props.titleStyle]}>{props.title}</Text>\r\n              <Text style={styles.subtitle}>{props.subtitle}</Text>\r\n            </View>:undefined}\r\n            <View style={[styles.bodyView, props.bodyStyle]}>\r\n            {props.children}\r\n            </View>\r\n          </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  outerContainer:{\r\n    width:'100%',\r\n    maxWidth:1080,\r\n    alignItems:'stretch',\r\n    backgroundColor:'transparent'\r\n  },  \r\n  container: {\r\n      marginHorizontal:20,\r\n      marginVertical: 10,\r\n      backgroundColor:'transparent',\r\n    },\r\n    titleView:{\r\n      width: '100%',\r\n      flexDirection:'row',\r\n      backgroundColor:'transparent',\r\n      marginBottom:5,\r\n    },\r\n    title: {\r\n      flex:1,\r\n      fontSize: 16,\r\n    },\r\n    subtitle: {\r\n      flex:1,\r\n      fontSize: 12,\r\n      textAlign: 'right',\r\n      marginTop:4\r\n    },\r\n    separator: {\r\n      marginBottom: 20,\r\n      height: 1,\r\n      width: '100%',\r\n    },\r\n    bodyView:{\r\n      width: '100%',\r\n      padding: 20,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      borderWidth:1,\r\n      borderColor:Colors.borderColor,\r\n      borderRadius:6\r\n    }\r\n  });\r\n  ","import { useEffect } from \"react\";\r\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\r\nimport { getMessengerChannelList, postChannel, postDirectChannel, putChannel } from \"../../apis\";\r\nimport { MessengerChannel, MessengerContent } from \"../../types\";\r\nimport { Auth } from \"../useAuthContext\";\r\nimport useWebsocketContext from \"../useWebsocketContext\";\r\n\r\nexport default function useMessengerChannelList(auth?:Auth){\r\n  const queryClient = useQueryClient()\r\n  const {lastJsonMessage} = useWebsocketContext()\r\n  const { data } = useQuery(\"MessengerChannelList\" , async()=>auth?.user?.id?(await getMessengerChannelList(auth.user.id)):[])\r\n\r\n  useEffect(()=>{\r\n    if(lastJsonMessage !=null){\r\n      if(lastJsonMessage['type']=='enter'){\r\n        queryClient.setQueryData<MessengerChannel[]>(\"MessengerChannelList\", (_data)=>{\r\n          return (_data?.find(v=>v.id==lastJsonMessage['data']['id'])?_data:[lastJsonMessage['data'] , ...(_data|| [])]).sort((a, b)=>a.id - b.id)\r\n        })\r\n      }\r\n      if (lastJsonMessage['type']=='next_message'){\r\n        const data:MessengerContent = lastJsonMessage['data']\r\n        queryClient.setQueryData<MessengerChannel[]>(\"MessengerChannelList\", (_data)=>(_data || []).map(v=>{\r\n          if (v.id == data.channel){\r\n            return {...v, last_message:{content:data.message_set[0]?.content, created:data.created}}\r\n          }\r\n          return v\r\n        }))\r\n      }\r\n      // if(lastJsonMessage['type']=='leave'){\r\n      //   queryClient.setQueryData<Channel[]>(\"MessengerChannelList\", (_data)=>_data?.filter(v=>v.id!=lastJsonMessage['data']['channel_id']) || [])\r\n      // }\r\n    }\r\n  }, [lastJsonMessage])\r\n  return data\r\n}\r\n\r\nexport function useMessengerChannelSorted(auth?:Auth){\r\n  const channelList = useMessengerChannelList(auth);\r\n  return channelList?.sort((a, b)=>(a.last_message?.created || '') < (b.last_message?.created || '')?1:-1)\r\n}\r\nexport function useMessengerChannelMutation(){\r\n  const queryClient = useQueryClient()\r\n\r\n  const create = useMutation(postChannel, {\r\n    onSuccess: ()=>queryClient.invalidateQueries(\"MessengerChannelList\")\r\n  });\r\n\r\n  const update = useMutation(putChannel, {\r\n    onSuccess: () => queryClient.invalidateQueries(\"MessengerChannelList\")\r\n  })\r\n\r\n  const direct = useMutation(postDirectChannel, {\r\n    onSuccess: () => queryClient.invalidateQueries(\"MessengerChannelList\")\r\n  })\r\n\r\n  return { create:create.mutateAsync, update:update.mutateAsync, direct:direct.mutateAsync}\r\n}"],"sourceRoot":""}