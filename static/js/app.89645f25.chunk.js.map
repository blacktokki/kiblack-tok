{"version":3,"sources":["src/components/HeaderRight.tsx","src/screens/main/LoginScreen.tsx","src/components/CommonSection.tsx","src/hooks/lists/useMessengerContent.List.ts","src/hooks/lists/useMessengerMemberList.ts","src/lib/react-native-webrtc/useWebsocketContext.tsx","src/lib/react-native-webrtc/webrtc/p2p.tsx","src/lib/react-native-webrtc/webrtc/index.ts","src/lib/react-native-webrtc/LocalCam.tsx","src/components/LinkPreview.tsx","src/lib/react-native-webrtc/RemoteCam.tsx","src/lib/react-native-webrtc/VirtualCam.tsx","src/screens/main/ChatScreen.tsx","src/screens/main/TabOneScreen.tsx","src/components/RowField.tsx","src/components/TextField.tsx","src/screens/ChannelEditScreen.tsx","src/screens/InviteScreen.tsx","src/screens/index.ts","src/screens/main/HomeScreen.tsx","src/screens/ProfileScreen.tsx","src/hooks/useWebsocketContext.tsx","src/components/TextButton.tsx","src/apis/notification.ts","src/hooks/useIsMobile.ts","src/components/CommonItem.tsx","src/hooks/lists/useUserMembershipList.ts","src/lib/react-native-paper/Avatar.tsx","src/components/Avatar.tsx","src/tabs/DrawerTab.tsx","src/tabs/MessengerTab.tsx","src/tabs/index.ts","src/tabs/MemberTab.tsx","src/navigation/DrawerNavigator.tsx","src/components/Profile.tsx","src/components/CommonTextInput.tsx","src/components/Themed.tsx","src/lang/index.ts","src/navigation/LinkingConfiguration.ts","src/apis/axios.ts","src/screens/NotFoundScreen.tsx","src/hooks/useFirebaseContext.tsx","src/components/MobileSafeAreaView.tsx","src/navigation/RootNavigator.tsx","App.tsx","src/hooks/useCachedResources.ts","src/hooks/useAuthContext.tsx","src/constants/Colors.ts","web/firebase-config.js","src/assets/fonts/SpaceMono-Regular.ttf","src/navigation/index.tsx","src/apis/account.ts","src/apis/messenger.ts","src/components/CommonButton.tsx","src/hooks/useColorScheme.ts","src/hooks/useResizeWindow.ts","src/hooks/lists/useMessengerChannelList.ts"],"names":["props","dispatch","useAuthContext","windowType","useResizeWindow","defaultButtonProps","title","lang","onPress","type","buttonProps","extra","concat","_toConsumableArray","filter","v","undefined","React","createElement","View","style","flexDirection","map","k","TextButton","_extends","key","textStyle","color","Styles","StyleSheet","create","login_container","flex","backgroundColor","login_header","alignItems","paddingTop","paddingBottom","login_header_logo","width","resizeMode","login_header_text","marginTop","fontSize","login_header_text_bold","fontWeight","login_wrapper","justifyContent","paddingVertical","borderTopRightRadius","borderTopLeftRadius","form","maxWidth","form_input","height","paddingHorizontal","marginBottom","borderRadius","button","button_label","login_social","login_social_separator","login_social_separator_line","login_social_separator_text","marginHorizontal","login_social_buttons","login_social_button","borderWidth","borderColor","login_social_icon","login_social_facebook","login_footer_text","guest_footer_text","alignSelf","margin","login_footer_link","CommonSection","styles","outerContainer","outerContainerStyle","container","containerStyle","withSeparator","separator","lightColor","darkColor","titleView","Text","titleStyle","subtitle","bodyView","bodyStyle","children","marginVertical","textAlign","padding","Colors","useMessengerContentList","channel_id","queryClient","useQueryClient","_useInfiniteQuery","useInfiniteQuery","_ref","pageParam","_regeneratorRuntime","async","_context","prev","next","abrupt","getMessengerContentList","then","current","stop","Promise","select","data","pages","length","getNextPageParam","lastPage","id","refetchOnReconnect","refetchOnWindowFocus","fetchNextPage","lastJsonMessage","useWebsocketContext","useEffect","setQueryData","_data","_objectSpread","pageParams","useMessengerMemberList","useQuery","awrap","getMessengerMemberList","sent","useMessengerMemberMutation","invite","useMutation","postBulkMessengerMember","onSuccess","invalidateQueries","leave","deleteMessengerMember","mutate","WebSocketContext","createContext","sendJsonMessage","WebSocketProvider","disable","Fragment","WebSocketInternalProvider","path","Context","useBackground","useContext","peerConstraints","iceServers","urls","sessionConstraints","mandatory","OfferToReceiveAudio","OfferToReceiveVideo","VoiceActivityDetection","mediaConstraints","audio","video","framerate","onICEcandidate","pc","message","_message","rtcMessage","candidate","RTCIceCandidate","console","log","addIceCandidate","sendICEcandidate","event","sendMessage","receiver","target","optimizeSdp","offerDescription","arr","sdp","split","forEach","str","i","test","RTCSessionDescription","join","createOffer","pcRefCurrent","stream","user","addStream","t0","t1","setLocalDescription","name","useLocalCam","pcRef","useRef","_useState","useState","_useState2","_slicedToArray","sender","setSender","_useState3","_useState4","_stream","setStream","isPlay","useMemo","CustomRTCView","useCallback","memo","RTCView","videoProps","start","mode","newStream","_context2","mediaDevices","getUserMedia","getDisplayMedia","catch","e","Object","entries","_ref2","_ref3","error","getTracks","track","websocketOnMessage","response","peerConnection","_peerConnection","answerDescription","_peerConnection2","_context3","channel_name","RTCPeerConnection","addEventListener","setRemoteDescription","camStyle","cam","bottonContainer","position","bottom","buttonBar","label","_auth$user","auth","_useWebsocketContext","_useLocalCam","Button","link","isMobile","TouchableOpacity","Linking","openURL","url","image","Image","source","uri","maxHeight","description","setReceiver","_useRemoteCam","_useState5","_useState6","setUser","_useState7","_useState8","close","clearInterval","statsInterval","_pcRef$current","_pcRef$current2","_pcRef$current3","_pcRef$current4","streams","_peerConnection3","_answerDescription","_streams","_context5","iceConnectionState","activeStream","setInterval","stats","statsOutput","framePerSecond","_context4","getStats","report","kind","keys","statName","framesPerSecond","Date","toTimeString","addTransceiver","direction","getRemoteStreams","createAnswer","localDescription","useRemoteCam","TextInput","value","onChangeText","PATH","process","_useViatualCam","webViewRef","send","Platform","OS","contentWindow","postMessage","JSON","stringify","receive","sendData","MediaStream","listener","parse","nativeEvent","virtualStop","useViatualCam","active","setActive","window","removeEventListener","minWidth","ref","src","allow","WebView","originWhitelist","allowsInlineMediaPlayback","javaScriptEnabled","mediaPlaybackRequiresUserAction","javaScriptEnabledAndroid","useWebkit","startInLoadingState","onMessage","VideoCallContainer","videoMode","guests","setGuests","_useRtcContext","useRtcContext","find","borderTopWidth","RemoteCam","VirtualCam","LocalCam","VideoCallSection","RtcProvider","MessengerContentPageItem","_nextPage2","useIsMobile","nextPage","_nextPage","nextContent","content","index2","created","slice","date","isSystem","isFirst","isSelf","ownerId","dayChanged","message_set","marginLeft","Avatar","userId","size","Hyperlink","linkDefault","wordBreak","linkStyle","link_set","linkIndex","LinkPreview","Panel_Button_Text","Panel_Holder","RowField","rowStyle","TextField","CommonTextInput","field","InviteItem","selectedRef","has","item","selected","setSelected","renderMemberItem","delete","add","main","HomeScreen","component","_route$params2","navigation","route","theme","useColorScheme","text","options","headerRight","HeaderRight","navigate","useLayoutEffect","_route$params","index","params","tab","setOptions","StyledText","paddingLeft","TabViewNavigator","tabs","bottomTabs","tabBarPosition","parseInt","onTab","setParams","ChatScreen","_useMessengerChannelL","inputRef","channel","useMessengerChannelList","_useMessengerContentL","memberList","member_id","_memberList$find","messengerMemberMutation","setValue","autoFocus","setAutoFocus","setVideoMode","postValue","_auth$user2","contentMutation","toggleVideoMode","_delete","deleteMessengerContent","d","variables","useMessengerContentMutation","back","renderItem","_ref4","_auth$user3","canGoBack","goBack","focus","FlatList","contentContainerStyle","flexGrow","onScroll","contentOffset","y","contentSize","onLayout","p","layout","ThemedView","background","onSubmitEditing","blurOnSubmit","CommonButton","TabOneScreen","login","LoginScreen","username","setUsername","password","setPassword","_login","placeholder","autoCapitalize","keyboardType","secureTextEntry","modal","ChannelEditScreen","channelList","channelMutation","useMessengerChannelMutation","setName","setDescription","multiline","groupId","newChannel","owner","group","update","screen","replace","InviteScreen","userList","useUserMembershipList","Set","memberSet","user_ids","ProfileScreen","Profile","counterpart","direct","_split","_split2","SCHEMA","DOMAIN","token","setToken","AppState","currentState","isActive","setIsActive","_useWebSocket","useWebSocket","shouldReconnect","closeEvent","protocols","onOpen","onClose","AsyncStorage","getItem","onChange","nextState","Provider","getNotification","user_id","axios","get","postNotification","notification","post","putNotification","put","useMobileDetect","CommonItem","_React$useState","_React$useState2","setHover","_React$useState3","_React$useState4","press","setPress","Pressable","onPressIn","onPressOut","onHoverIn","onHoverOut","minHeight","borderBottomWidth","getUserMembershipList","normalizeHash","hash","min","max","Math","floor","initHash","charCodeAt","abs","stringToHSL","toUpperCase","DrawerTab","Messenger","useMessengerChannelSorted","MessengerIcon","Ionicons","OneTab","MemberTab","icon","MemberIcon","TwoTab","today","toISOString","_item$last_message","_item$last_message2","_item$last_message3","last_message","FontAwesome","marginRight","opacity","member_count","unread_count","drawerTabs","MaterialCommunityIcons","setIndex","icons","assign","apply","_defineProperty","TabView","renderTabBar","TabBar","indicatorStyle","activeColor","inactiveColor","renderIcon","scene","onTabPress","findIndex","_ref5","navigationState","routes","_ref6","_ref7","onIndexChange","renderScene","SceneMap","_ref8","_ref9","onAddList","_ref11","colors","useTheme","tabBar","card","borderTopColor","border","pointerEvents","accessibilityRole","values","drawerTab","Tab","elevation","borderRightWidth","_useAuthContext","patchUser","finally","disabled","onBlur","onEndEditing","contentHeight","setContentHeight","editable","onContentSizeChange","useThemeColor","colorName","colorFromProps","otherProps","_objectWithoutProperties","_excluded","light","dark","DefaultText","_excluded2","DefaultView","translations","ko","require","_RNLocalize$findBestL","RNLocalize","languageTag","isRTL","I18nManager","forceRTL","intl","createIntl","defaultLocale","locale","messages","createIntlCache","formatMessage","defaultMessage","toString","ROOTPATH","prefixes","config","screens","Main","NotFound","accountURL","defaultOption","baseURL","withCredentials","headers","_axios","interceptors","request","use","reject","status","getToken","r","defaults","setItem","removeItem","NotFoundScreen","linkText","firebaseConfig","messagingSenderId","apiKeyEncrypted","padStart","app","firebase","initializeApp","apiKey","messaging","payload","Notification","permission","body","alert","FirebaseContext","enable","setEnable","FirebaseProvider","tokenRef","setNotification","isMount","setNotificationInternal","n","serviceWorkerRegistration","currentToken","requestPermission","navigator","serviceWorker","register","scope","vapidKey","preventDefault","unregister","requestToken","t","noti","innerHeight","setHeight","Dimensions","Root","createStackNavigator","QueryClient","RootNavigator","MobileSafeAreaView","AuthProvider","QueryClientProvider","client","Navigator","headerMode","screenOptions","cardStyle","animationEnabled","cardStyleInterpolator","CardStyleInterpolators","forVerticalIOS","Screen","MainNavigator","headerShown","gestureDirection","DrawerNavigator","headerStyle","header","headerTitleStyle","headerLeft","canGOBackScreen","headerLeftContainerStyle","flexShrink","forHorizontalIOS","App","isLoadingComplete","setLoadingComplete","SplashScreen","Font","font","warn","finish","useCachedResources","colorScheme","SafeAreaProvider","Navigation","StatusBar","AuthContext","authReducer","initialState","action","Error","_useReducer","useReducer","_useReducer2","authState","_authState$user","_authState$user$membe","membership_set","g","root_group_id","checkLogin","logout","tint","tabIconDefault","tabIconSelected","buttonColor","buttonBackgroundColor","module","exports","navigationRef","_navigationRef$curren","_navigationRef$curren2","NavigationContainer","documentTitle","formatter","linking","versions","LinkingConfiguration","DarkTheme","DefaultTheme","l","search","decoded","s","history","replaceState","pathname","location","ignoreWarnings","_console","_","clone","indexOf","endsWith","guestLogin","checkLoginToken","_await$axios$get","isOffline","code","startsWith","getUserList","group_id","_context6","_context7","patch","ids","updated","_context8","getMessengerChannelList","postChannel","postDirectChannel","putChannel","deleteChannel","id_lt","id_lt_param","_context9","results","_context10","content_id","_context11","DefaultButton","hover","selectable","_props","_useColorScheme","getWindowType","detectMobile","setWindowType","sort","a","b","_data2$message_set$","_a$last_message","_b$last_message","mutateAsync"],"mappings":"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","file":"static/js/app.89645f25.chunk.js","sourcesContent":["import React from 'react'\r\nimport TextButton from \"./TextButton\"\r\nimport useAuthContext from \"../hooks/useAuthContext\"\r\nimport useResizeWindow from '../hooks/useResizeWindow'\r\nimport { View } from 'react-native'\r\nimport lang from '../lang'\r\n\r\ntype ButtonProps = {title:string, onPress:()=>void, windowType?:'landscape'|'portrait'}\r\n\r\nexport default (props:{extra?:ButtonProps[]})=>{\r\n    const {dispatch} = useAuthContext()\r\n    const windowType = useResizeWindow()\r\n    const defaultButtonProps:ButtonProps[] = [{title:lang('sign out'), onPress:()=>dispatch({type:\"LOGOUT_REQUEST\"})}]\r\n    const buttonProps = (props.extra?[...props.extra, ...defaultButtonProps]:defaultButtonProps).filter(v=>v.windowType==windowType || v.windowType == undefined)\r\n    return<View style={{flexDirection:'row'}}>\r\n        {buttonProps.map((v,k)=><TextButton key={k} {...v} textStyle={{color:'white'}} color='#gray'/>)}\r\n    </View>\r\n}\r\n  ","import React, {useLayoutEffect, useState} from 'react';\r\nimport {\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  View,\r\n  StyleSheet,\r\n} from 'react-native';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport useAuthContext from '../../hooks/useAuthContext';\r\nimport lang from '../../lang'\r\n\r\nexport default function LoginScreen({\r\n  navigation, route\r\n}: StackScreenProps<any, 'Login'>) {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const {dispatch} = useAuthContext()\r\n  const _login = ()=>dispatch({type:'LOGIN_REQUEST', username, password})\r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      headerRight: undefined\r\n    });\r\n  }, [navigation, route]);\r\n\r\n  return (\r\n    <View style={Styles.login_wrapper}>\r\n      <View style={Styles.form}>\r\n        <TextInput\r\n          style={Styles.form_input}\r\n          value={username}\r\n          placeholder={lang('Username')}\r\n          onChangeText={(text) => setUsername(text)}\r\n          autoCapitalize={'none'}\r\n          keyboardType={'email-address'}\r\n          onSubmitEditing={_login}\r\n        />\r\n        <TextInput\r\n          style={Styles.form_input}\r\n          value={password}\r\n          placeholder={lang('Password')}\r\n          secureTextEntry\r\n          onChangeText={(text) => setPassword(text)}\r\n          onSubmitEditing={_login}\r\n        />\r\n        <TouchableOpacity onPress={_login}>\r\n          <View style={Styles.button}>\r\n            <Text style={Styles.button_label}>{lang('Sign in')}</Text>\r\n          </View>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity onPress={() => dispatch({type:\"LOGIN_GUEST\"})}>\r\n          <Text style={Styles.guest_footer_text}>\r\n            {lang(\"Sign in as guest\")}\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      <View style={Styles.login_social}>\r\n        <View style={Styles.login_social_separator}>\r\n          <View style={Styles.login_social_separator_line} />\r\n          <Text style={Styles.login_social_separator_text}>{'*'}</Text>\r\n          <View style={Styles.login_social_separator_line} />\r\n        </View>\r\n        <View style={Styles.login_social_buttons}>\r\n        </View>\r\n      </View>\r\n      {/* <>\r\n        <TouchableOpacity onPress={() => navigate(\"RegistrationScreen\")}>\r\n          <Text style={Styles.login_footer_text}>\r\n            {\"Don't have an account? \"}\r\n            <Text style={Styles.login_footer_link}>{'Sign up'}</Text>\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </> */}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst Styles = StyleSheet.create({\r\n    login_container: {\r\n      flex: 1,\r\n      backgroundColor: '#FFF',\r\n    },\r\n    login_header: {\r\n      alignItems: 'center',\r\n      paddingTop: 30,\r\n      paddingBottom: 50,\r\n      backgroundColor: '#208AEC',\r\n    },\r\n    login_header_logo: {\r\n      width: 220,\r\n      resizeMode: 'contain',\r\n    },\r\n    login_header_text: {\r\n      marginTop: 15,\r\n      color: '#f0f0f0',\r\n      fontSize: 16,\r\n    },\r\n    login_header_text_bold: {\r\n      color: '#fff',\r\n      fontWeight: 'bold',\r\n    },\r\n    login_wrapper: {\r\n      flex: 1,\r\n      justifyContent: 'space-between',\r\n      paddingVertical: 40,\r\n      borderTopRightRadius: 12,\r\n      borderTopLeftRadius: 12,\r\n      marginTop: -10,\r\n      backgroundColor: '#fff',\r\n      alignItems: 'center',\r\n    },\r\n    form: {\r\n      width: '100%',\r\n      maxWidth: 280,\r\n    },\r\n    form_input: {\r\n      height: 44,\r\n      paddingHorizontal: 20,\r\n      marginBottom: 20,\r\n      backgroundColor: '#EDF0F7',\r\n      borderRadius: 50,\r\n    },\r\n    button: {\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      height: 44,\r\n      backgroundColor: '#0065A4',\r\n      borderRadius: 50,\r\n    },\r\n    button_label: {\r\n      color: '#fff',\r\n      fontSize: 16,\r\n    },\r\n    login_social: {\r\n      width: '100%',\r\n      maxWidth: 280,\r\n      marginTop: 20,\r\n    },\r\n    login_social_separator: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n    },\r\n    login_social_separator_line: {\r\n      flex: 1,\r\n      width: '100%',\r\n      height: 1,\r\n      backgroundColor: '#E0E0E0',\r\n    },\r\n    login_social_separator_text: {\r\n      marginHorizontal: 10,\r\n      color: '#808080',\r\n      fontSize: 16,\r\n    },\r\n    login_social_buttons: {\r\n      flexDirection: 'row',\r\n      justifyContent: 'center',\r\n      marginTop: 20,\r\n    },\r\n    login_social_button: {\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      width: 60,\r\n      height: 60,\r\n      marginHorizontal: 12,\r\n      borderWidth: 1,\r\n      borderColor: '#E7E7E7',\r\n      borderRadius: 60,\r\n    },\r\n    login_social_icon: {\r\n      width: 38,\r\n      height: 38,\r\n      resizeMode: 'contain',\r\n    },\r\n    login_social_facebook: {\r\n      backgroundColor: '#4267B2',\r\n      borderColor: '#4267B2',\r\n    },\r\n    login_footer_text: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      color: '#808080',\r\n      fontSize: 14,\r\n    },\r\n    guest_footer_text: {\r\n      flexDirection: 'row',\r\n      alignSelf: 'center',\r\n      color: '#808080',\r\n      fontSize: 15,\r\n      margin: 15\r\n    },\r\n    login_footer_link: {\r\n      color: '#208AEC',\r\n      fontSize: 15,\r\n      fontWeight: 'bold',\r\n    },\r\n  });\r\n  ","import * as React from 'react';\r\nimport { View, Text } from './Themed';\r\nimport { StyleSheet, StyleProp, ViewStyle, TextStyle } from 'react-native';\r\nimport Colors from '../constants/Colors';\r\n\r\nexport type SectionParamList = {\r\n    title?: string,\r\n    titleStyle?:StyleProp<TextStyle>\r\n    outerContainerStyle?:StyleProp<TextStyle>\r\n    containerStyle?:StyleProp<ViewStyle>\r\n    bodyStyle?:StyleProp<ViewStyle>\r\n    subtitle?: string\r\n    withSeparator?: boolean\r\n    children?: React.ReactNode\r\n}\r\n\r\nexport default function CommonSection(props:SectionParamList){\r\n  return (\r\n    <View style={[styles.outerContainer, props.outerContainerStyle]}>\r\n        <View style={[styles.container, props.containerStyle]}>\r\n            {props.withSeparator?<View style={styles.separator} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />:undefined}\r\n            {props.title?<View style={styles.titleView}>\r\n              <Text style={[styles.title, props.titleStyle]}>{props.title}</Text>\r\n              <Text style={styles.subtitle}>{props.subtitle}</Text>\r\n            </View>:undefined}\r\n            <View style={[styles.bodyView, props.bodyStyle]}>\r\n            {props.children}\r\n            </View>\r\n          </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  outerContainer:{\r\n    width:'100%',\r\n    maxWidth:1080,\r\n    alignItems:'stretch',\r\n    backgroundColor:'transparent'\r\n  },  \r\n  container: {\r\n      marginHorizontal:20,\r\n      marginVertical: 10,\r\n      backgroundColor:'transparent',\r\n    },\r\n    titleView:{\r\n      width: '100%',\r\n      flexDirection:'row',\r\n      backgroundColor:'transparent',\r\n      marginBottom:5,\r\n    },\r\n    title: {\r\n      flex:1,\r\n      fontSize: 16,\r\n    },\r\n    subtitle: {\r\n      flex:1,\r\n      fontSize: 12,\r\n      textAlign: 'right',\r\n      marginTop:4\r\n    },\r\n    separator: {\r\n      marginBottom: 20,\r\n      height: 1,\r\n      width: '100%',\r\n    },\r\n    bodyView:{\r\n      width: '100%',\r\n      padding: 20,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      borderWidth:1,\r\n      borderColor:Colors.borderColor,\r\n      borderRadius:6\r\n    }\r\n  });\r\n  ","import { useCallback, useEffect, useState } from \"react\"\r\nimport { InfiniteData, useInfiniteQuery, useMutation, useQueryClient } from \"react-query\"\r\nimport { getMessengerContentList, postMessage, deleteMessengerContent } from \"../../apis\"\r\nimport { MessengerContent } from \"../../types\"\r\nimport useWebsocketContext from \"../useWebsocketContext\"\r\n\r\nexport type MessengerContentPage = {\r\n  next?:MessengerContentPage\r\n  current:MessengerContent[]\r\n}\r\n\r\nexport default function useMessengerContentList(channel_id:number){  \r\n  const queryClient = useQueryClient()\r\n  const { data, fetchNextPage } = useInfiniteQuery<MessengerContentPage>(\r\n    [\"MessengerContentList\", channel_id], \r\n    async({pageParam})=>getMessengerContentList(channel_id, pageParam).then(current=>({current})), \r\n    {\r\n      select:data=>{\r\n        if(data.pages.length > 1)\r\n          data.pages[data.pages.length - 2].next = data.pages[data.pages.length - 1]\r\n        return data;\r\n      },\r\n      getNextPageParam:(lastPage)=>lastPage?.current.length?lastPage.current[lastPage.current.length - 1].id:undefined,\r\n      refetchOnReconnect:false,\r\n      refetchOnWindowFocus:false\r\n    }\r\n  )\r\n  const { lastJsonMessage } = useWebsocketContext()\r\n  useEffect(()=>{\r\n    if(lastJsonMessage !=null && lastJsonMessage['type']=='next_message' && lastJsonMessage['data']['channel'] == channel_id){\r\n      queryClient.setQueryData<InfiniteData<MessengerContentPage>>([\"MessengerContentList\", channel_id], (_data)=>{\r\n        if(_data?.pages[0].current && _data?.pages[0].current[0].id != lastJsonMessage['data'].id)\r\n          _data.pages[0].current = [lastJsonMessage['data'], ..._data?.pages[0].current]\r\n        return {...(_data || {pages:[], pageParams:[]})}\r\n      })\r\n    }\r\n  }, [lastJsonMessage])\r\n  return { data, fetchNextPage }\r\n}\r\n\r\nexport function useMessengerContentMutation(){\r\n  // const queryClient = useQueryClient()\r\n  const create = useMutation(postMessage, {\r\n    onSuccess: () => {\r\n      // queryClient.setQueryData(['MessengerContentList'], (data:any) => ({\r\n      //   pages: data.pages.slice(0, 1),\r\n      //   pageParams: data.pageParams.slice(0, 1),\r\n      // }))\r\n      // queryClient.invalidateQueries(\"MessengerContentList\")\r\n    }\r\n  });\r\n  const _delete = useMutation(deleteMessengerContent, {\r\n    onSuccess: (d, variables) => {\r\n      // queryClient.setQueryData(['MessengerContentList'], (data:any) => ({\r\n      //   pages: (data.pages as MessengerContent[][]).map(v=>v.filter(v2=>v2.id != variables)),\r\n      //   pageParams: data.pageParams,\r\n      // }))\r\n    }\r\n  })\r\n  return { create:create.mutate, delete:_delete.mutate }\r\n}","import { useMutation, useQuery, useQueryClient } from \"react-query\";\r\nimport { postBulkMessengerMember, deleteMessengerMember, getMessengerMemberList } from \"../../apis\";\r\n\r\nexport default function useMessengerMemberList(channel_id:number){\r\n  const { data } = useQuery([\"MessengerMemberList\", channel_id] , async()=>await getMessengerMemberList(channel_id))\r\n  return data\r\n}\r\n\r\n\r\nexport function useMessengerMemberMutation(){\r\n  const queryClient = useQueryClient()\r\n  const invite = useMutation(postBulkMessengerMember, {\r\n    onSuccess: ()=>{\r\n      queryClient.invalidateQueries(\"MessengerMemberList\")\r\n    }\r\n  })\r\n\r\n  const leave = useMutation(deleteMessengerMember, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(\"MessengerChannelList\")\r\n      queryClient.invalidateQueries(\"MessengerMemberList\")\r\n    }\r\n  })\r\n  return {invite:invite.mutate, leave:leave.mutate}\r\n}","import React, { createContext, useContext } from \"react\"\r\nimport { SendJsonMessage } from \"react-use-websocket/dist/lib/types\";\r\nimport { WebSocketInternalProvider } from \"../../hooks/useWebsocketContext\";\r\n\r\nconst WebSocketContext = createContext<{lastJsonMessage:any, sendJsonMessage:SendJsonMessage }>({lastJsonMessage:undefined, sendJsonMessage:()=>{}});\r\n\r\nexport const WebSocketProvider = ({disable, children}:{disable?:boolean, children:React.ReactNode})=>{\r\n  return disable?<></>:<WebSocketInternalProvider path={'messenger/ws/rtc/'} Context={WebSocketContext} useBackground>\r\n    {children}\r\n  </WebSocketInternalProvider>\r\n}\r\n\r\nexport default ()=>{\r\n  const webSocketContext = useContext(WebSocketContext)\r\n  return webSocketContext\r\n}\r\n\r\n","import React, { useCallback, useRef, useState, useMemo } from \"react\";\r\n//@ts-ignore\r\nimport { RTCView, mediaDevices, RTCPeerConnection, MediaStream, RTCSessionDescription, RTCIceCandidate } from \"react-native-webrtc-web-shim\";\r\nexport const peerConstraints = {\r\n\ticeServers: [\r\n\t\t{\r\n\t\t\turls: 'stun:stun.l.google.com:19302'\r\n\t\t}\r\n\t]\r\n};\r\n\r\nexport const sessionConstraints = {\r\n\tmandatory: {\r\n\t\tOfferToReceiveAudio: true,\r\n\t\tOfferToReceiveVideo: true,\r\n\t\tVoiceActivityDetection: true\r\n\t}\r\n};\r\n\r\nconst mediaConstraints = {audio:true, video:{framerate:30}}\r\n\r\n//@ts-ignore\r\nexport {MediaStream, RTCPeerConnection, RTCSessionDescription} from \"react-native-webrtc-web-shim\";\r\n\r\nconst onICEcandidate = (pc:typeof RTCPeerConnection, message:any)=>{\r\n\tconst _message = message.data.rtcMessage\r\n\t\tconst candidate = new RTCIceCandidate(_message);\r\n\t\tif (pc) {\r\n\t\t\tconsole.log(\"ICE candidate Added\");\r\n\t\t\tpc.addIceCandidate(candidate);\r\n\t\t}\r\n}\r\n\r\nconst sendICEcandidate = (event:any, sendMessage:(data:any)=>void, receiver:string, target:string) => {\r\n\t// When you find a null candidate then there are no more candidates.\r\n\t// Gathering of candidates has finished.\r\n\tif ( !event.candidate ) { return; };\r\n\t// Send the event.candidate onto the person you're calling.\r\n\t// Keeping to Trickle ICE Standards, you should send the candidates immediately.\r\n\tsendMessage({type:'ICEcandidate', receiver, data:{target, rtcMessage:event.candidate}})\r\n  }\r\n\r\nconst BAND_WIDTH = 8000\r\n\r\nconst optimizeSdp = (offerDescription:RTCSessionDescription)=>{\r\n\tvar arr = offerDescription.sdp.split('\\r\\n');\r\n\tarr.forEach((str:string, i:number) => {\r\n\t\tif (/^a=fmtp:\\d*/.test(str)) {\r\n\t\t\tarr[i] = str + `;x-google-max-bitrate=${BAND_WIDTH};x-google-min-bitrate=${BAND_WIDTH};x-google-start-bitrate=${BAND_WIDTH}`;\r\n\t\t} else if (/^a=mid:(0|video)/.test(str)) { // if with audio then 0=>1\r\n\t\t\tarr[i] += `\\r\\nb=AS:${BAND_WIDTH}`;\r\n\t\t}\r\n\t});\r\n  \treturn new RTCSessionDescription({\r\n    \ttype: offerDescription.type,\r\n    \tsdp: arr.join('\\r\\n'),\r\n  \t})\r\n}\r\n\r\nconst createOffer = async(pcRefCurrent:{pc?:typeof RTCPeerConnection, receiver:string}, sendMessage:(data:any)=>void, stream:typeof MediaStream, target:string, user?:{name:string})=>{\r\n\tstream && pcRefCurrent.pc.addStream( stream );\r\n\tconst offerDescription = optimizeSdp((await pcRefCurrent.pc.createOffer( sessionConstraints )));\r\n\tawait pcRefCurrent.pc.setLocalDescription( offerDescription );\r\n\tsendMessage({type:'call', receiver:pcRefCurrent.receiver, data:{target, name:user?.name, rtcMessage:offerDescription}})\r\n}\r\n\r\nexport const useLocalCam = (sendMessage:(data:any)=>void)=>{\r\n\tconst pcRef = useRef<Record<number,{pc:typeof RTCPeerConnection, receiver:string}>>({})\r\n\tconst [sender, setSender] = useState<string>()\r\n\tconst [_stream, setStream] = useState<MediaStream>()\r\n\tconst isPlay = useMemo(()=>_stream?true:false, [_stream])\r\n\tconst CustomRTCView = useCallback(React.memo(({style}:{style:any})=>(_stream?<RTCView stream={_stream} style={style} videoProps={{height:'100%'}} />:<></>)) , [_stream])\r\n\tconst start = useCallback(async(user:{name:string}, stream?:typeof MediaStream, mode?:'camera'|'display')=>{\r\n\t\tconsole.log(\"start\");\r\n\t\tif (!_stream || mode!==undefined) {\r\n\t\t\ttry {\r\n\t\t\t\tlet newStream:typeof MediaStream;\r\n\t\t\t\tif(mode == 'camera'){\r\n\t\t\t\t\tnewStream = await mediaDevices.getUserMedia(mediaConstraints)\r\n\t\t\t\t}\r\n\t\t\t\telse if (mode == 'display'){\r\n\t\t\t\t\tnewStream = await mediaDevices.getDisplayMedia(mediaConstraints)\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tnewStream = stream || await mediaDevices.getUserMedia(mediaConstraints).catch((e:any)=>mediaDevices.getDisplayMedia(mediaConstraints));\r\n\t\t\t\t}\r\n\t\t\t\tsetStream(newStream)\r\n\t\t\t\tObject.entries(pcRef.current).map(([k, v])=>{\r\n\t\t\t\t\tcreateOffer(v, sendMessage, newStream, 'guest', user)\r\n\t\t\t\t})\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.error(e);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [_stream])\r\n\tconst stop = useCallback(()=>{\r\n\t\tconsole.log(\"stop\");\r\n\t\tif(_stream){\r\n\t\t\t_stream.getTracks().map((track:any) => track.stop());\r\n\t\t\tsetStream(undefined)\r\n\t\t}\r\n\t}, [_stream])\r\n\treturn {\r\n\t\tstart,\r\n\t\tstop,\r\n\t\twebsocketOnMessage: async(response:any, user:{name:string})=>{\r\n\t\t\tlet type = response.type;\r\n\t\t\tif (type == 'connection'){\r\n\t\t\t\tsetSender(response.data.channel_name)\r\n\t\t\t}\r\n\t\t\tif (type == 'start' && response.data.target=='host'){\r\n\t\t\t  console.log('1 start')\r\n\t\t\t  const peerConnection = new RTCPeerConnection( peerConstraints );\r\n\t\t\t  peerConnection.addEventListener( 'icecandidate', (event:any) => sendICEcandidate(event, sendMessage, response.sender, 'guest'));\r\n\t\t\t  pcRef.current[response.sender] = {pc:peerConnection, receiver: response.sender}\r\n\t\t\t  createOffer(pcRef.current[response.sender], sendMessage, _stream, 'guest', user)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (type == \"answer\" && response.data.target == 'host'){\r\n\t\t\t  console.log('3 answer')\r\n\t\t\t  const peerConnection = pcRef.current[response.sender].pc\r\n\t\t\t  const answerDescription = new RTCSessionDescription(response.data.rtcMessage);\r\n\t\t\t  await peerConnection.setRemoteDescription( answerDescription );\r\n\t\t\t  // const streams = pcRef.current.pc.getRemoteStreams()\r\n\t\t\t  // setMirrorStream(streams[streams.length - 1])\r\n\t\t\t}\r\n\t\t\tif (type == \"ICEcandidate\" && response.data.target=='host'){\r\n\t\t\t\tconst peerConnection = pcRef.current[response.sender].pc\r\n\t\t\t\tonICEcandidate(peerConnection, response)\r\n\t\t\t}\r\n\t\t},\r\n\t\tCustomRTCView,\r\n\t\tisPlay,\r\n\t\tsender,\r\n\t\t// renderMirrorView,\r\n\t}\r\n}\r\n\r\nexport const useRemoteCam = (sendMessage:(data:any)=>void)=>{\r\n\tconst pcRef = useRef<{pc?:RTCPeerConnection, receiver?:string, statsInterval?:any}>({})\r\n\tconst [user, setUser] = useState<{name:string}>()\r\n\tconst [_stream, setStream] = useState<MediaStream>()\r\n\tconst CustomRTCView = useCallback(React.memo((style:any)=>_stream?<RTCView stream={_stream} style={style} videoProps={{height:'100%'}} />:<></>), [_stream])\r\n\tconst isPlay = useMemo(()=>_stream?true:false, [_stream])\r\n\tconst start = useCallback((receiver:string)=>{\r\n\t\tconsole.log(\"start\");\r\n\t\tif (!pcRef.current.pc) {\r\n\t\t  pcRef.current.pc = new RTCPeerConnection( peerConstraints );\r\n\t\t  pcRef.current.receiver = receiver\r\n\t\t}\r\n\t\tif (!_stream){\r\n\t\t\tsendMessage({type:'start', receiver, data:{'target': 'host'}})\r\n\t\t}\r\n\t}, [_stream])\r\n\tconst stop = () => {\r\n\t\tconsole.log(\"stop\");\r\n\t\tif (pcRef.current.pc) {\r\n\t\t  // peerConnection._unregisterEvents();\r\n\t\t  setStream(undefined)\r\n\t\t  pcRef.current.pc.close();\r\n\t\t  pcRef.current.pc = undefined\r\n\t\t  pcRef.current.receiver = undefined\r\n\t\t  clearInterval(pcRef.current.statsInterval)\r\n\t\t}\r\n\t}\r\n\treturn {\r\n\t\tstart,\r\n\t\tstop,\r\n\t\twebsocketOnMessage: async(response:any)=>{\r\n\t\t\tlet type = response.type;\r\n\t\t\tif (type == 'start' && response.data.target=='guest' && response.sender == pcRef.current?.receiver){\r\n\t\t\t\tconsole.log('(remote)1 start')\r\n\t\t\t\tconst peerConnection = pcRef.current.pc\r\n\t\t\t\tsetUser({name: response.data.name})\r\n\t\t\t\tpeerConnection.addEventListener('icecandidate', (event:any) => sendICEcandidate(event, sendMessage, response.sender, 'host'));\r\n\t\t\t\tpeerConnection.addEventListener('iceconnectionstatechange', (e:any)=>{\r\n\t\t\t\t\tif (pcRef.current.pc.iceConnectionState == 'connected'){\r\n\t\t\t\t\t\tlet activeStream = false\r\n\t\t\t\t\t\tpcRef.current.statsInterval = setInterval(async()=>{\r\n\t\t\t\t\t\t\tconst stats = await pcRef.current.pc.getStats(null)\r\n\t\t\t\t\t\t\tlet statsOutput = \"\";\r\n\t\t\t\t\t\t\tlet framePerSecond = undefined\r\n\t\t\t\t\t\t\tstats.forEach((report:any) => {\r\n\t\t\t\t\t\t\t\tif (report.type === \"inbound-rtp\" && report.kind === \"video\") {\r\n\t\t\t\t\t\t\t\t\tObject.keys(report).forEach((statName) => {\r\n\t\t\t\t\t\t\t\t\t\tstatsOutput += `${statName}: ${report[statName]}\\n`;\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tframePerSecond = report.framesPerSecond\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tconsole.log(activeStream, framePerSecond)\r\n\t\t\t\t\t\t\tif (framePerSecond != undefined){\r\n\t\t\t\t\t\t\t\tactiveStream = true\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (activeStream){\r\n\t\t\t\t\t\t\t\tstop()\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tconsole.log(new Date().toTimeString().split(' ')[0], statsOutput)\r\n\t\t\t\t\t\t}, 1000);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (pcRef.current.pc.iceConnectionState == 'failed'){\r\n\t\t\t\t\t\tstop()\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t// peerConnection.addTransceiver('audio', {\r\n\t\t\t\t// \tdirection: 'recvonly'\r\n\t\t\t\t// });\r\n\t\t\t\tpeerConnection.addTransceiver('video', {\r\n\t\t\t\t\tdirection: 'recvonly'\r\n\t\t\t\t});\r\n\t\t\t\tawait createOffer({pc:pcRef.current.pc, receiver:response.sender}, sendMessage, _stream, 'host', user)\r\n\t\t\t}  \r\n\t\t\tif (type == \"answer\" && response.data.target=='guest' && response.sender == pcRef.current?.receiver){\r\n\t\t\t\tconsole.log('(remote)3 answer')\r\n\t\t\t\tconst answerDescription = new RTCSessionDescription(response.data.rtcMessage);\r\n\t\t\t\tawait pcRef.current.pc.setRemoteDescription( answerDescription );\r\n\t\t\t\tconst streams = pcRef.current.pc.getRemoteStreams()\r\n\t\t\t\tsetStream(streams[streams.length - 1])\r\n\t\t\t\tsendMessage({type:'end', receiver:pcRef.current.receiver, data:{}})\r\n\t\t\t}\r\n\t\t\tif (type == \"call\" && response.sender == pcRef.current?.receiver){\r\n\t\t\t  console.log('2 call')\r\n\t\t\t  const peerConnection = pcRef.current.pc\r\n\t\t\t  setUser({name:response.data.name})\r\n\t\t\t  if (!peerConnection)\r\n\t\t\t\treturn\r\n\t\t\t  peerConnection.addEventListener( 'icecandidate', (event:any) => sendICEcandidate(event, sendMessage, response.sender, 'host'));\r\n\t\t\t  const offerDescription = new RTCSessionDescription(response.data.rtcMessage);\r\n\t\t\t  await peerConnection.setRemoteDescription( offerDescription );\r\n\t\t\t  const answerDescription = await peerConnection.createAnswer( sessionConstraints );\r\n\t\t\t  await peerConnection.setLocalDescription( answerDescription );\r\n\t\t\t  sendMessage({type:'answer', receiver:pcRef.current.receiver, data:{target:'host', rtcMessage:peerConnection.localDescription}})\r\n\t\t\t  // Here is a good place to process candidates.\r\n\t\t\t  const streams = pcRef.current.pc.getRemoteStreams()\r\n\t\t\t  setStream(streams[streams.length - 1])\r\n\t\t\t}\r\n\t\t\tif (type == \"ICEcandidate\" && response.data.target=='guest' && response.sender == pcRef.current?.receiver)\r\n\t\t\t  onICEcandidate(pcRef.current.pc, response)\r\n\t\t},\r\n\t\tCustomRTCView,\r\n\t\tuser,\r\n\t\tisPlay\r\n\t}\r\n}","import {StyleSheet} from \"react-native\";\r\nexport {useLocalCam, useRemoteCam} from \"./p2p\"\r\n\r\nexport const camStyle = StyleSheet.create({\r\n\tcontainer:{ flex: 1},\r\n\tcam:{ flex: 1, height:'100%'},\r\n\tbottonContainer: {position:\"absolute\", bottom:0, justifyContent:'flex-end'},\r\n\tbuttonBar: { flexDirection: \"row\", justifyContent: \"space-around\" },\r\n\tlabel: {backgroundColor:'#0008', color:'white', paddingHorizontal:5},\r\n})","import React, { useEffect } from \"react\";\r\nimport {Button, View, Text} from \"react-native\";\r\nimport useAuthContext from \"../../hooks/useAuthContext\";\r\n\r\nimport useWebsocketContext from \"./useWebsocketContext\";\r\nimport { useLocalCam, camStyle} from \"./webrtc\";\r\n\r\n\r\nexport default (props:{mode?:'camera'|'display'|null})=>{\r\n  const {auth} = useAuthContext()\r\n  const {lastJsonMessage, sendJsonMessage} = useWebsocketContext()\r\n  const {start, stop, websocketOnMessage, CustomRTCView, isPlay} = useLocalCam(sendJsonMessage)\r\n  useEffect(()=>{\r\n    auth.user && lastJsonMessage && websocketOnMessage(lastJsonMessage, auth.user)\r\n  }, [lastJsonMessage, auth])\r\n  useEffect(()=>{\r\n    if(props.mode && !isPlay){\r\n      auth.user && start(auth.user, undefined, props.mode)\r\n    }\r\n    else if(props.mode===null && isPlay){\r\n      stop()\r\n    }\r\n  }, [isPlay, auth, props.mode])\r\n  useEffect(()=>{\r\n    return ()=>{isPlay && stop()}\r\n  }, [isPlay])\r\n  return (\r\n    <View style={camStyle.container}>\r\n      <CustomRTCView style={camStyle.cam}/>\r\n      <View style={camStyle.bottonContainer}>\r\n        <View style={camStyle.buttonBar}>  \r\n        </View>\r\n        {(props.mode === undefined || isPlay) &&<View style={{flexDirection:'row'}}><Text style={camStyle.label}>{auth.user?.name}</Text></View>}\r\n        <View style={camStyle.buttonBar}>\r\n          {props.mode === undefined && !isPlay && <Button title=\"Start\" onPress={()=>auth.user && start(auth.user)} />}\r\n          {props.mode === undefined && isPlay && <Button title=\"Stop\" onPress={stop} />}\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport CommonSection from \"./CommonSection\"\r\nimport { Image, Linking } from \"react-native\"\r\nimport { View, Text } from \"./Themed\"\r\nimport { Link } from \"../types\"\r\n\r\n\r\n\r\nexport default ({link, isMobile}:{link:Link, isMobile:boolean})=>{\r\n    return <CommonSection containerStyle={{marginHorizontal:0}} bodyStyle={{padding:0}}>\r\n    <TouchableOpacity onPress={()=>Linking.openURL(link.url)} style={{flexDirection:'row'}} containerStyle={{width:'100%'}}>\r\n        {link.image && <Image source={{uri:link.image}} resizeMode=\"cover\" style={{ width:'100%', maxWidth:isMobile?120:150, maxHeight:isMobile?120:150, borderWidth:1}}/>}\r\n        <View style={{flex:1, marginHorizontal:20}}>\r\n        <Text style={{fontSize:20}}>{link.title}</Text>\r\n        <Text style={{fontSize:14}}>{link.description}</Text>\r\n        <Text style={{fontSize:12}}>{link.url}</Text>\r\n        </View>\r\n    </TouchableOpacity>\r\n    </CommonSection>\r\n}","import React, { useState, useEffect, } from \"react\";\r\nimport {Button,Text, TextInput, View} from \"react-native\";\r\nimport useWebsocketContext from \"./useWebsocketContext\";\r\nimport { useRemoteCam, camStyle} from \"./webrtc\";\r\n\r\nexport default (props:{receiver?:string})=>{\r\n  const [receiver, setReceiver] = useState('')\r\n  const {lastJsonMessage, sendJsonMessage} = useWebsocketContext()\r\n  const {start, stop, websocketOnMessage, CustomRTCView, isPlay, user} = useRemoteCam(sendJsonMessage)\r\n  useEffect(()=>{\r\n    lastJsonMessage && websocketOnMessage(lastJsonMessage)\r\n  }, [lastJsonMessage])\r\n  useEffect(()=>{\r\n    if(props.receiver){\r\n      start(props.receiver)\r\n    }\r\n    return ()=>stop()\r\n  }, [props.receiver])\r\n  return (\r\n    <View style={camStyle.container}>\r\n      <CustomRTCView style={camStyle.cam}/>\r\n      <View style={camStyle.bottonContainer}>\r\n        <View style={camStyle.buttonBar}>\r\n        </View>\r\n        {(props.receiver ===undefined || isPlay) &&\r\n          <View style={{flexDirection:'row'}}>{\r\n            (props.receiver || isPlay)?\r\n            <Text style={camStyle.label}>{user?.name}</Text>:\r\n            <>\r\n              <Text style={{borderWidth:1}}>Receiver:&nbsp;</Text>\r\n              <TextInput style={{borderWidth:1, flex:1}} value={receiver} onChangeText={setReceiver}/>\r\n            </> \r\n          }</View>}\r\n        <View style={camStyle.buttonBar}>\r\n          {props.receiver === undefined && !isPlay && <Button title=\"Start\" onPress={()=>start(receiver)} />}\r\n          {props.receiver === undefined && isPlay && <Button title=\"Stop\" onPress={stop} />}\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport {Button, Platform, View, Text} from \"react-native\";\r\nimport WebView from \"react-native-webview\";\r\nimport useAuthContext from \"../../hooks/useAuthContext\";\r\nimport useWebsocketContext from \"./useWebsocketContext\";\r\nimport {useLocalCam, camStyle} from \"./webrtc\";\r\nimport {MediaStream, RTCPeerConnection, RTCSessionDescription, peerConstraints, sessionConstraints} from \"./webrtc/p2p\"\r\n\r\nconst useViatualCam = ()=>{\r\n  const webViewRef = useRef(null)\r\n  const pcRef = useRef<{pc?:RTCPeerConnection}>({})\r\n  const [stream, setStream] = useState<MediaStream>()\r\n  const send = (data:any)=>{\r\n    if (Platform.OS == 'web')\r\n      (webViewRef.current as any).contentWindow.postMessage(JSON.stringify(data), undefined/*'http://localhost:3001/'*/)\r\n    else\r\n      (webViewRef.current as any).postMessage(JSON.stringify(data))\r\n  }\r\n  const receive = async(sendData:{type:string, data:any})=>{\r\n    const {type, data} = sendData\r\n    if (type == \"call\"){\r\n      console.log('(virtual)2 call_received')\r\n      const peerConnection = new RTCPeerConnection( peerConstraints );\r\n      pcRef.current.pc = peerConnection\r\n      peerConnection.addEventListener( 'icecandidate', (event:any) => {\r\n        if ( !event.candidate ) { return; };\r\n        send({type:'ICEcandidate', data:{rtcMessage:event.candidate}})\r\n      });\r\n      const offerDescription = new RTCSessionDescription(data.rtcMessage);\r\n      await peerConnection.setRemoteDescription( offerDescription );\r\n      const answerDescription = await peerConnection.createAnswer( sessionConstraints );\r\n      await peerConnection.setLocalDescription( answerDescription );\r\n      send({type:'answer_call', data:{rtcMessage:peerConnection.localDescription}})\r\n      const streams = pcRef.current.pc.getRemoteStreams()\r\n      setStream(new MediaStream(streams[streams.length - 1]))\r\n    }\r\n    if (type == \"ICEcandidate\"){\r\n      const candidate = new RTCIceCandidate(data.rtcMessage);\r\n        console.log(\"ICE candidate Added\");\r\n        pcRef.current.pc.addIceCandidate(candidate);\r\n    }\r\n    if (type == \"console\"){\r\n      console.log(\"(virtual)\", data)\r\n    }\r\n  }\r\n  const listener = (event:any)=>{\r\n    if(Platform.OS == 'web'){\r\n      try{\r\n        // console.log('parent receive', event.data)\r\n        receive(JSON.parse(event.data))\r\n      }\r\n      catch(e){\r\n      }\r\n    }\r\n    else{\r\n      receive(JSON.parse(event.nativeEvent.data))\r\n    }\r\n  }\r\n  const virtualStop = ()=>{\r\n    if(pcRef.current.pc){\r\n      pcRef.current.pc.close();\r\n      pcRef.current.pc = undefined\r\n    }\r\n    setStream(undefined)\r\n  }\r\n  return {webViewRef, stream, listener, virtualStop}\r\n}\r\n\r\nconst PATH = `${process.env.PUBLIC_URL}/virtual.html`\r\n\r\nexport default (props:{mode?:'virtual'|null})=>{\r\n  const {webViewRef, stream, listener, virtualStop} = useViatualCam()\r\n  const [active, setActive] = useState(props.mode == 'virtual')\r\n  //localCam code\r\n  const {auth} = useAuthContext()\r\n  const {lastJsonMessage, sendJsonMessage} = useWebsocketContext()\r\n  const {start, stop, websocketOnMessage, isPlay} = useLocalCam(sendJsonMessage)\r\n  const _stop = ()=>{\r\n    stop()\r\n    virtualStop()\r\n    setActive(false)\r\n  }\r\n  useEffect(()=>{\r\n    auth.user && lastJsonMessage && websocketOnMessage(lastJsonMessage, auth.user)\r\n  }, [lastJsonMessage, auth])\r\n  useEffect(()=>{\r\n    if(props.mode && !isPlay){\r\n      auth.user && stream && start(auth.user, stream)\r\n    }\r\n    else if(props.mode===null && isPlay){\r\n      _stop()\r\n    }\r\n  }, [isPlay, auth, props.mode, stream])\r\n  //localCam code end\r\n  useEffect(()=>{\r\n    if(Platform.OS == 'web'){\r\n      window.addEventListener('message', listener)\r\n      return ()=>window.removeEventListener('message', listener)\r\n    }\r\n  }, [])\r\n  return <View style={camStyle.container}>\r\n    <View style={[camStyle.cam, {minWidth:320}]}>\r\n      {active?(\r\n        Platform.OS == 'web'?\r\n          <iframe ref={webViewRef} src={PATH} allow='camera *;microphone *' height=\"100%\" width=\"100%\"/>:\r\n          <WebView\r\n                  ref={webViewRef}\r\n                  source={{ uri: PATH}}\r\n                  originWhitelist={['*']}\r\n                  allowsInlineMediaPlayback\r\n                  javaScriptEnabled\r\n                  mediaPlaybackRequiresUserAction={false}\r\n                  javaScriptEnabledAndroid\r\n                  useWebkit\r\n                  startInLoadingState={true}\r\n                  style={{flex:1}}\r\n                  onMessage={listener}\r\n              />):\r\n        undefined}\r\n    </View>\r\n    <View style={camStyle.bottonContainer}>\r\n      <View style={camStyle.buttonBar}>  \r\n      </View>\r\n      {(props.mode === undefined || isPlay) &&<View style={{flexDirection:'row'}}><Text style={camStyle.label}>{auth.user?.name}</Text></View>}\r\n      <View style={camStyle.buttonBar}>\r\n        {props.mode === undefined && !isPlay && <Button title=\"Start\" onPress={()=>auth.user && start(auth.user)} />}\r\n        {props.mode === undefined && isPlay && <Button title=\"Stop\" onPress={stop} />}\r\n      </View>\r\n    </View>\r\n  </View>\r\n}\r\n","import React, {useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState} from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { StyleSheet, View } from 'react-native';\r\nimport CommonSection from '../../components/CommonSection';\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\nimport { FlatList, TextInput } from 'react-native-gesture-handler';\r\nimport CommonButton from '../../components/CommonButton';\r\nimport useMessengerContentList, { MessengerContentPage, useMessengerContentMutation } from '../../hooks/lists/useMessengerContent.List';\r\nimport useAuthContext from '../../hooks/useAuthContext';\r\nimport HeaderRight from '../../components/HeaderRight';\r\nimport useMessengerMemberList, { useMessengerMemberMutation } from '../../hooks/lists/useMessengerMemberList';\r\nimport { navigate } from '../../navigation';\r\nimport Colors from '../../constants/Colors';\r\nimport useColorScheme from '../../hooks/useColorScheme';\r\nimport { Text, View as ThemedView } from '../../components/Themed' \r\nimport Hyperlink from 'react-native-hyperlink'\r\nimport useMessengerChannelList from '../../hooks/lists/useMessengerChannelList';\r\nimport LocalCam from '../../lib/react-native-webrtc/LocalCam';\r\nimport useIsMobile from '../../hooks/useIsMobile';\r\nimport LinkPreview from '../../components/LinkPreview';\r\nimport {default as useRtcContext, WebSocketProvider as RtcProvider} from \"../../lib/react-native-webrtc/useWebsocketContext\";\r\nimport RemoteCam from '../../lib/react-native-webrtc/RemoteCam';\r\nimport lang from '../../lang'\r\nimport Avatar from '../../components/Avatar';\r\nimport VirtualCam from '../../lib/react-native-webrtc/VirtualCam';\r\ntype VideoType = 'camera'|'display'|'virtual'\r\ntype VideoCallProps = {channel_id:number, videoMode:VideoType|null}\r\n\r\nconst VideoCallContainer = ({channel_id, videoMode}:VideoCallProps)=>{\r\n  const [guests, setGuests] = useState<string[]>([])\r\n  const { lastJsonMessage, sendJsonMessage } = useRtcContext()\r\n  useEffect(()=>{\r\n    if(lastJsonMessage !=null){\r\n      if(lastJsonMessage['type']=='connection'){\r\n        sendJsonMessage({'type':'broadcast', 'data':{'channel_id':channel_id}})\r\n      }\r\n      if(lastJsonMessage['type']=='broadcast_guest' || lastJsonMessage['type']=='broadcast_host'){\r\n        setGuests([...guests, lastJsonMessage['sender']])\r\n      }\r\n      if(lastJsonMessage['type']=='broadcast_disconnect'){\r\n        const channel_name = lastJsonMessage['sender']\r\n        const exist = guests.find(v=>v == channel_name)\r\n        exist && setGuests(guests.filter(v=>v != channel_name))\r\n      }\r\n    }\r\n  }, [lastJsonMessage])\r\n  return lastJsonMessage !==undefined ?<View style={[\r\n      {flexDirection: 'row', justifyContent:'center', borderColor:Colors.borderColor, borderRadius:10, paddingTop:10, backgroundColor:'white'},\r\n      videoMode!==null?{borderTopWidth:1}:{}]}>\r\n      {guests.map((receiver, i)=><View key={i} style={{maxWidth:'33%', flexDirection: 'row', marginHorizontal:10, flex:1}}>\r\n        <RemoteCam receiver={receiver}/>\r\n      </View>)}\r\n      <View style={{maxWidth:'33%', flexDirection: 'row', marginHorizontal:10, flex:1}}>\r\n        {videoMode=='virtual'?<VirtualCam mode={'virtual'}/>:<LocalCam mode={videoMode}/>}\r\n      </View>\r\n    </View>:<></>\r\n}\r\n\r\nconst VideoCallSection = React.memo(({channel_id, videoMode}:VideoCallProps)=>{\r\n  return <RtcProvider disable={videoMode==null}>\r\n    <VideoCallContainer channel_id={channel_id} videoMode={videoMode}/>\r\n  </RtcProvider>\r\n})\r\n\r\n\r\nconst MessengerContentPageItem = React.memo((props:MessengerContentPage & {ownerId?:number})=>{\r\n  const isMobile = useIsMobile()\r\n  let nextPage = props.next;\r\n    while(nextPage?.next && nextPage.current.length==0){\r\n      nextPage = nextPage.next\r\n    }\r\n    const nextContent = nextPage?.current[0]\r\n    return <View style={{flexDirection: 'column-reverse'}}>\r\n      \r\n      {props.current.map((content, index2)=>{\r\n        const next = index2 + 1 < props.current.length?props.current[index2+1]:nextContent\r\n        const created:string = content.created.slice(0, 16)\r\n        const date = created.slice(0, 10)\r\n        const isSystem = content.user == null\r\n        const isFirst = next==undefined || (content.user != next.user || created != next.created.slice(0, 16))\r\n        const isSelf = props.ownerId == content.user\r\n        const dayChanged = next==undefined || date != next.created.slice(0, 10)\r\n        if (isSystem)\r\n          return <View key={content.id} style={{flexDirection:'row', justifyContent:'center', width:'100%', marginVertical:5}}>\r\n            <Text>{content.message_set[0].content}</Text>\r\n          </View>\r\n        return <View key={content.id}>\r\n          {dayChanged?<View style={{flexDirection:'row', justifyContent:'center', width:'100%'}}><Text>{date}</Text></View>:undefined}\r\n          <View key={content.id} style={{flexDirection:'row', justifyContent:isSelf?'space-between':'flex-start', width:'100%'}}>\r\n            {isFirst && !isSelf? <View style={{marginTop:3, marginLeft:12}}><Avatar name={content.name} userId={content.user} size={36}/></View>:<View style={{width:48}}/>}\r\n            <CommonSection outerContainerStyle={{width:undefined, maxWidth:'90%'}} title={isFirst?content.name:undefined} titleStyle={{flex:undefined}} bodyStyle={{padding:10}} subtitle={`${created.slice(11)}`}>\r\n              {/* @ts-ignore */}\r\n              <Hyperlink linkDefault={ true } style={{wordBreak:\"break-word\"}} linkStyle={{color: '#12b886'}}>\r\n                <Text>{content.message_set[0].content}</Text>\r\n              </Hyperlink>\r\n              {content.link_set.map((link, linkIndex)=><LinkPreview key={linkIndex} link={link} isMobile={isMobile}/>)}\r\n            </CommonSection>\r\n          </View>\r\n        </View>\r\n      })}\r\n    </View>\r\n\r\n})\r\n\r\nexport default function ChatScreen({navigation, route}: StackScreenProps<any, 'Chat'>) {\r\n  const channel_id = route?.params?.id\r\n  const height = useRef(0)\r\n  const inputRef = useRef<TextInput>(null)\r\n  const {auth} = useAuthContext()\r\n  const channel = useMessengerChannelList(auth)?.find(v=>v.id==parseInt(channel_id))\r\n  const {data, fetchNextPage } = useMessengerContentList(channel_id)\r\n  const memberList = useMessengerMemberList(channel_id)\r\n  const member_id = useMemo(()=>memberList?.find(v=>v.user == auth.user?.id)?.id, [auth, memberList])\r\n  const messengerMemberMutation = useMessengerMemberMutation()\r\n  const [value, setValue] = useState('')\r\n  const [autoFocus, setAutoFocus] = useState(true)\r\n  const [videoMode, setVideoMode] = useState<VideoType|null>(null)\r\n  const theme = useColorScheme()\r\n  const postValue = ()=>{\r\n    if (value.length>0){\r\n      contentMutation.create({channel:channel_id, user:auth.user?.id, content:value})\r\n      setValue('')\r\n      setAutoFocus(true)\r\n    }\r\n  }\r\n  const toggleVideoMode = (mode:VideoType)=>{\r\n    setVideoMode(videoMode!=mode?mode:null)\r\n  }\r\n  const contentMutation = useMessengerContentMutation()\r\n\r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      headerRight: ()=> <HeaderRight extra={[\r\n        {title:lang('invite'), onPress:()=>{navigate(\"InviteScreen\", {id:channel_id})}},\r\n        {title:lang('leave'), onPress:()=>{member_id && messengerMemberMutation.leave(member_id);back()}}\r\n      ]}/>,\r\n      title: channel?.name\r\n    });\r\n  }, [navigation, route, member_id]);\r\n\r\n  const renderItem = useCallback(({item, index}:{item:MessengerContentPage, index:number})=><MessengerContentPageItem {...item} ownerId={auth.user?.id}/>, [auth])\r\n  \r\n  const back = ()=>{\r\n    if(navigation.canGoBack())\r\n        navigation.goBack()\r\n      else{\r\n        navigation.navigate('HomeScreen', {tab:2})\r\n      }\r\n  }\r\n  useEffect(()=>{\r\n    if (!(channel_id))\r\n      back()\r\n  }, [])\r\n  useEffect(()=>{\r\n    if(autoFocus){\r\n      (inputRef.current as any).focus()\r\n      setAutoFocus(false)\r\n    }\r\n  }, [autoFocus])\r\n\r\n  return <View style={{flex:1, alignItems:'center'}}>\r\n      <View style={{width:'100%', flex:1}}>\r\n        <FlatList\r\n          style={{width:'100%', flexDirection: 'column-reverse'}}\r\n          contentContainerStyle={{padding:10, flexGrow:1, flexDirection: 'column-reverse'}}\r\n          data={data?.pages}\r\n          renderItem={renderItem}\r\n          onScroll={(e)=>{\r\n            if (e.nativeEvent.contentOffset.y + e.nativeEvent.contentSize.height - height.current < 1)\r\n              fetchNextPage()\r\n          }}\r\n          onLayout={(p)=>{height.current = p.nativeEvent.layout.height}}\r\n        />\r\n        {/* <CommonButton/> */}\r\n      </View>\r\n      <ThemedView style={{width:'100%'}}>\r\n        <VideoCallSection channel_id={channel_id} videoMode={videoMode}/>\r\n        <View style={{bottom:0, width:'100%', alignItems:'center'}}>\r\n          <View style={{width:'100%',flexDirection:'row', paddingTop:15, paddingBottom:10, paddingHorizontal:19}}>\r\n            <TextInput ref={inputRef} value={value} onChangeText={setValue} style={{\r\n              flex:1, borderWidth:1, height:40, borderRadius:6, borderColor:Colors.borderColor, backgroundColor:Colors[theme].background, color:Colors[theme].text\r\n            }} onSubmitEditing={postValue} blurOnSubmit={true}/>\r\n            <CommonButton title={'💬'} onPress={postValue}/>\r\n            <CommonButton title={'📹'} onPress={()=>toggleVideoMode('camera')}/>\r\n            <CommonButton title={'🖥️'} onPress={()=>toggleVideoMode('display')}/>\r\n            <CommonButton title={'🐰'} onPress={()=>toggleVideoMode('virtual')}/>\r\n          </View>\r\n        </View>\r\n      </ThemedView>\r\n  </View>\r\n}\r\n","import React, {useCallback, useRef} from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { StyleSheet, Text, Button, View} from 'react-native';\r\n\r\n\r\nexport default function TabOneScreen({\r\n  navigation\r\n}: StackScreenProps<any, 'TabOne'>) {\r\n  return <View style={{padding:10}}>\r\n    \r\n  </View>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  Panel_Button_Text: {\r\n    textAlign: 'center',\r\n    color: '#fff',\r\n    fontSize: 21\r\n  },\r\n  Panel_Holder: {\r\n    borderWidth: 1,\r\n    borderColor: '#888',\r\n    marginVertical: 5\r\n  }\r\n})","import React, { useMemo } from 'react';\r\n\r\nimport { TextProps, StyleProp } from 'react-native';\r\nimport {View, Text } from './Themed'\r\nimport useResizeWindow from '../hooks/useResizeWindow';\r\n\r\ntype Props = {\r\n  name: string,\r\n  width?:number,\r\n  children: React.ReactNode\r\n  textStyle?: StyleProp<TextProps>\r\n}\r\n\r\nexport default function RowField(props:Props) {\r\n  const windowType = useResizeWindow()\r\n  const rowStyle = useMemo(()=>windowType=='landscape'?\r\n    {flexDirection:'row', alignItems: 'center', justifyContent:'space-between'}:\r\n    {flexDirection:'column', alignItems:'flex-start'} as any\r\n  , [windowType])\r\n  return (\r\n    <View style={[{paddingVertical:5, width:'100%'}, rowStyle]}>\r\n        <Text style={[windowType=='landscape'?{flex:1}:{width:'100%'},{paddingHorizontal: 15, fontSize:16}, props.textStyle]}>{props.name}</Text>\r\n        <View style={[windowType=='landscape'?{flex:6}:{width:'100%'},{paddingHorizontal: 15}]}>\r\n          <View style={{width:props.width}}>\r\n            {props.children}\r\n          </View>\r\n        </View>\r\n    </View>\r\n  )\r\n}","import React from 'react';\r\nimport { StyleProp, TextStyle } from 'react-native';\r\nimport { CustomTextInputProps } from '../types';\r\nimport CommonTextInput from './CommonTextInput';\r\nimport RowField from './RowField';\r\n\r\nexport default function TextField(props:CustomTextInputProps & {name: string, width?:any, textStyle?:StyleProp<TextStyle>}) {\r\n  return (\r\n    <RowField name={props.name} width={props.width} textStyle={props.textStyle}>\r\n      <CommonTextInput {...props} />\r\n   </RowField>\r\n  )\r\n}","import React, {useState, useEffect } from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { StyleSheet } from 'react-native';\r\nimport CommonSection from '../components/CommonSection';\r\nimport { View, Text } from '../components/Themed';\r\nimport CommonButton from '../components/CommonButton';\r\n// import useBoardChannelList, { useBoardChannelMutation } from '../hooks/lists/useBoardChannelList';\r\nimport useAuthContext from '../hooks/useAuthContext';\r\nimport { navigate } from '../navigation';\r\nimport { Channel } from '../types';\r\nimport useMessengerChannelList, { useMessengerChannelMutation } from '../hooks/lists/useMessengerChannelList';\r\nimport TextField from '../components/TextField';\r\nimport lang from '../lang'\r\n\r\nexport default function ChannelEditScreen({navigation, route}: StackScreenProps<any, 'ChannelEdit'>) {\r\n  const id = route?.params?.id\r\n  const type = route?.params?.type\r\n  const {auth} = useAuthContext()\r\n  const channelList = useMessengerChannelList(auth)\r\n  const channelMutation = useMessengerChannelMutation()\r\n  const channel = channelList?.find(v=>v.id==id)\r\n  const [name, setName] = useState('')\r\n  const [description, setDescription] = useState('')\r\n  const back = ()=>{\r\n    if(navigation.canGoBack())\r\n        navigation.goBack()\r\n      else{\r\n        navigation.replace('Main')\r\n      }\r\n  }\r\n  useEffect(()=>{\r\n    if (channel){\r\n      setName(channel.name)\r\n      setDescription(channel?.description || '')\r\n    }\r\n  }, [channel])\r\n  return <CommonSection outerContainerStyle={{alignSelf:'center'}}>\r\n    <View style={{justifyContent:'space-around'}}>\r\n    <Text style={{fontSize:20}}>{lang('Channel')}</Text>\r\n    </View>\r\n    <View style={styles.separator} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />\r\n    <View style={{width:'100%'}}>\r\n      <TextField name={lang('Channel Name')} value={name} setValue={setName} width={'60%'}/>\r\n      <TextField name={lang('Description')} value={description} setValue={setDescription} multiline width={'60%'}/>\r\n    </View>\r\n    <View style={{width:'100%', flexDirection:'row', justifyContent:'flex-end'}}>\r\n      <CommonButton title={lang('save')} onPress={()=>{\r\n        if(auth?.user?.id && auth.groupId){\r\n          const newChannel:Channel = {id, name, description, type, owner:auth?.user?.id, group:auth.groupId};\r\n          (id?channelMutation.update(newChannel):channelMutation.create(newChannel)).then(v=>navigate(\"Main\", {\r\n            screen:v.type == 'messenger'?'MessengerScreen':'BoardScreen',\r\n            params:{id:v.id}\r\n          }))\r\n        }\r\n      }}/>\r\n      <CommonButton title={lang('cancel')} style={{marginHorizontal:5}} onPress={back}/>\r\n    </View>\r\n  </CommonSection>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  field:{\r\n    width:'50%',\r\n    flexDirection:'row',\r\n    padding:10,\r\n  },\r\n  separator: {\r\n    marginBottom: 20,\r\n    height: 1,\r\n    width: '100%',\r\n  },\r\n})","import React, {useRef,MutableRefObject, useMemo, useState } from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { View, Text } from '../components/Themed';\r\nimport CommonSection from '../components/CommonSection';\r\nimport useAuthContext from '../hooks/useAuthContext';\r\nimport useUserMembershipList from '../hooks/lists/useUserMembershipList';\r\nimport { UserMembership } from '../types';\r\nimport CommonButton from '../components/CommonButton';\r\nimport useMessengerMemberList, { useMessengerMemberMutation } from '../hooks/lists/useMessengerMemberList';\r\nimport { renderMemberItem } from '../tabs/MemberTab';\r\nimport { navigate } from '../navigation';\r\nimport lang from  '../lang'\r\n\r\nconst InviteItem = (props:{item:UserMembership, selectedRef:MutableRefObject<Set<number>>})=>{\r\n  const [selected, setSelected] = useState(props.selectedRef.current.has(props.item.id))\r\n  return <View style={selected?{borderWidth:1, borderColor:'blue'}:{}}>\r\n    {renderMemberItem(props.item, (item)=>{\r\n      if (selected){\r\n        setSelected(false)\r\n        props.selectedRef.current.delete(item.id)\r\n      }\r\n      else{\r\n        setSelected(true)\r\n        props.selectedRef.current.add(item.id)\r\n      }\r\n    })}\r\n  </View>\r\n\r\n}\r\n\r\nexport default function InviteScreen({navigation, route}: StackScreenProps<any, 'Invite'>) {\r\n  const id = route?.params?.id\r\n  const {auth} = useAuthContext()\r\n  const userList = useUserMembershipList(auth)\r\n  const memberList = useMessengerMemberList(id)\r\n  const messengerMemberMutation = useMessengerMemberMutation()\r\n  const selectedRef = useRef<Set<number>>(new Set())\r\n  const data = useMemo(()=>{\r\n    const memberSet = new Set(memberList?.map(v=>v.user))\r\n    return userList?.filter(v=>!memberSet.has(v.id))\r\n  }, [userList, memberList])\r\n\r\n\r\n  const back = ()=>{\r\n    if(navigation.canGoBack())\r\n      navigation.goBack()\r\n    else if (id)\r\n      navigate(\"ChatScreen\", {id})\r\n    else\r\n      navigation.replace('Main')\r\n  }\r\n\r\n  return <CommonSection outerContainerStyle={{alignSelf:'center'}}>\r\n    <View style={{backgroundColor:'white', 'width': '50%'}}>\r\n    {data?.map((item, index)=><InviteItem key={index} item={item} selectedRef={selectedRef}/>)}\r\n    </View>\r\n    <View style={[{width:'50%', flexDirection:'row', padding:10,}, {justifyContent:'flex-end'}]}>\r\n      <CommonButton title={lang('invite')} onPress={()=>{\r\n        messengerMemberMutation.invite({\r\n          channel_id:id,\r\n          user_ids:[...selectedRef.current]\r\n        })\r\n        back()\r\n      }}/>\r\n      <CommonButton title={lang('cancel')} onPress={back}/>\r\n    </View>\r\n  </CommonSection>\r\n}\r\n\r\n","import LoginScreen from \"./main/LoginScreen\";\r\nimport ChatScreen from \"./main/ChatScreen\";\r\nimport HomeScreen from \"./main/HomeScreen\";\r\nimport TabOneScreen from \"./main/TabOneScreen\";\r\n// import BoardScreen from \"../lib/blacktokki-board/BoardScreen\";\r\n// import BoardEditScreen from \"../lib/blacktokki-board/BoardEditScreen\";\r\nimport ChannelEditScreen from \"./ChannelEditScreen\"\r\nimport { Screens } from \"../types\";\r\nimport InviteScreen from \"./InviteScreen\";\r\nimport ProfileScreen from \"./ProfileScreen\";\r\nimport lang from \"../lang\"\r\n\r\nexport const main = {\r\n    HomeScreen:{\r\n        title:lang('home'),\r\n        component:HomeScreen,\r\n        path:'home',\r\n    },\r\n    ChatScreen:{\r\n        title:lang('chat'),\r\n        component:ChatScreen,\r\n        path:'chat'\r\n    },\r\n    // BoardScreen:{\r\n    //     title:'board',\r\n    //     component:BoardScreen,\r\n    //     path:'board'\r\n    // },\r\n    TabOneScreen:{\r\n        title:'tab one',\r\n        component:TabOneScreen,\r\n        path:'one'\r\n    },\r\n} as Screens\r\n\r\nexport const login = {\r\n    LoginScreen:{\r\n        path: 'login',\r\n        title: lang('Sign in'),\r\n        component:LoginScreen\r\n    },\r\n} as Screens\r\n\r\nexport const modal = {\r\n    // BoardEditScreen:{\r\n    //     title:'board',\r\n    //     component:BoardEditScreen,\r\n    //     path:'modal/board'\r\n    // },\r\n    ChannelEditScreen:{\r\n        title:lang('channel'),\r\n        component:ChannelEditScreen,\r\n        path:'modal/channel'\r\n    },\r\n    InviteScreen:{\r\n        title:lang('invite'),\r\n        component:InviteScreen,\r\n        path:'modal/invite'\r\n    },\r\n    ProfileScreen:{\r\n        title:lang('profile'),\r\n        component:ProfileScreen,\r\n        path:'modal/profile'\r\n    }\r\n} as Screens","import React, {useLayoutEffect} from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { StyleSheet, Text, Button, View} from 'react-native';\r\nimport { Text as StyledText } from 'react-native-paper';\r\nimport {TabViewNavigator} from '../../navigation/DrawerNavigator';\r\nimport useResizeWindow from '../../hooks/useResizeWindow';\r\nimport { bottomTabs } from '../../tabs';\r\nimport { navigate } from '../../navigation';\r\nimport HeaderRight from '../../components/HeaderRight';\r\nimport TextButton from '../../components/TextButton';\r\nimport Colors from '../../constants/Colors';\r\nimport useColorScheme from '../../hooks/useColorScheme';\r\nimport lang from '../../lang'\r\n\r\n// navigate(\"BoardEditScreen\", {channel_id:item.channel, id:item.id})\r\n// deleteBoardContent(item.id).then(()=>navigate('BoardScreen', {id:item.channel}))\r\n\r\nexport default function HomeScreen({navigation, route}: StackScreenProps<any, 'Home'>) {\r\n  const windowType = useResizeWindow();\r\n  const theme = useColorScheme()\r\n  const color = Colors[theme].text\r\n  const options = [\r\n    {title:lang('member'), headerRight:()=><HeaderRight/>},\r\n    {title:lang('messenger'), headerRight:()=><HeaderRight extra={[{title:lang('create'), onPress:()=>navigate(\"ChannelEditScreen\", {type:\"messenger\"})}]}/>},\r\n    // {title:'board', headerRight:()=><HeaderRight extra={[{title:'create', onPress:()=>navigate(\"ChannelEditScreen\", {type:\"board\"})}]}/>},\r\n    {title:'config', headerRight:()=><HeaderRight/>}\r\n  ]\r\n  \r\n  useLayoutEffect(() => {\r\n    const index = route?.params?.tab | 0\r\n    navigation.setOptions(windowType == 'portrait'?options[index]:{\r\n      title: lang('home'),\r\n      headerRight: ()=><HeaderRight/>\r\n    });\r\n  }, [navigation, route, windowType]);\r\n  return windowType == 'landscape'?\r\n    <View style={{flex:1, justifyContent:'center', alignItems:'center'}}>\r\n      <View style={{width:'80%', height:'80%'}}>\r\n        <StyledText style={{fontSize:32, color}}>Tokki Tok</StyledText>\r\n        <View style={{backgroundColor:Colors.borderColor, height:1, width:'100%'}}/>\r\n        <View style={{flex:1, alignItems:'flex-start'}}>\r\n          {/* <Text style={{fontSize:20, color:'gray'}}>Welcome! This is a messenger for teams.</Text>*/}\r\n          <Text style={{fontSize:24}}> </Text>\r\n          <Text style={{fontSize:24, fontWeight:'500', color}}>{lang('Quick Start')}</Text>\r\n          <TextButton title={lang('+ New Messenger')} textStyle={{fontSize:20, color}} style={{paddingLeft:0, borderRadius:20}} onPress={()=>navigate(\"ChannelEditScreen\", {type:\"messenger\"})}/>\r\n          {/* <TextButton title='+ New Board' textStyle={{fontSize:20}} style={{paddingLeft:0, borderRadius:20}} onPress={()=>navigate(\"ChannelEditScreen\", {type:\"board\"})}/> */}\r\n        </View>\r\n      </View>\r\n    </View>:\r\n    <TabViewNavigator tabs={bottomTabs} tabBarPosition=\"bottom\" index={parseInt(route.params?.['tab'] || 0)} onTab={(index)=>{navigation.setParams({tab:index})}}/>\r\n}\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { View} from '../components/Themed';\r\nimport Profile from '../components/Profile';\r\nimport useAuthContext from '../hooks/useAuthContext';\r\nimport useUserMembershipList from '../hooks/lists/useUserMembershipList';\r\nimport { useMessengerChannelMutation } from '../hooks/lists/useMessengerChannelList';\r\nimport CommonButton from '../components/CommonButton';\r\nimport { DirectChannel } from '../types';\r\nimport { navigate } from '../navigation';\r\nimport lang from '../lang'\r\n\r\nexport default function ProfileScreen({\r\n  navigation, route\r\n}: StackScreenProps<any, 'Profile'>) {\r\n  const id = route?.params?.id\r\n  const {auth} = useAuthContext()\r\n  const userList = useUserMembershipList(auth)\r\n  const user = userList?.find(v=>v.id==id)\r\n  const channelMutation = useMessengerChannelMutation()\r\n  const back = ()=>{\r\n    if(navigation.canGoBack())\r\n        navigation.goBack()\r\n      else{\r\n        navigation.replace('Main')\r\n      }\r\n  }\r\n  useEffect(()=>{\r\n    if (!(id && user) && userList)\r\n      back()\r\n  }, [userList])\r\n  return user?<View style={{padding:10}}>\r\n    \r\n    <Profile username={user.username} name={user.name} userId={user.id} />\r\n    <CommonButton title={lang('create messenger')} onPress={()=>{\r\n      if(auth?.user?.id && auth.groupId){\r\n        const newChannel:DirectChannel = {name:auth.user.id!=user.id?`${auth.user.name}, ${user.name}`:auth.user.name, type:'messenger', owner:auth?.user?.id, group:auth.groupId, counterpart:user.id};\r\n        channelMutation.direct(newChannel).then(v=>navigate(\"Main\", {screen:\"ChatScreen\", params: {id:v.id}}))\r\n      }\r\n    }}/>\r\n  </View>:<></>\r\n}\r\n","import React, { Context, createContext,  useContext, useEffect, useState } from \"react\"\r\nimport useWebSocket from \"react-use-websocket\"\r\nimport { SendJsonMessage } from \"react-use-websocket/dist/lib/types\"\r\n// @ts-ignore\r\nimport {API_URL} from \"@env\"\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { AppState, AppStateStatus } from \"react-native\";\r\n\r\ntype WebsocketContextType = {lastJsonMessage:any, sendJsonMessage:SendJsonMessage }\r\nconst WebSocketContext = createContext<WebsocketContextType>({lastJsonMessage:undefined, sendJsonMessage:()=>{}});\r\nconst [SCHEMA, DOMAIN] = `${API_URL}`.split('://')\r\n\r\nexport const WebSocketInternalProvider = ({children, path, Context, useBackground}:{children:React.ReactNode, path:string, Context:Context<WebsocketContextType>, useBackground?:boolean})=>{\r\n  const [token, setToken] = useState<string|null>(null)\r\n  const [isActive, setIsActive] = useState<boolean>(useBackground || AppState.currentState == 'active')\r\n  const { lastJsonMessage, sendJsonMessage } = useWebSocket(`${SCHEMA=='https'?'wss':'ws'}://${DOMAIN}/${path}`,{\r\n    shouldReconnect: (closeEvent) => true,\r\n    protocols: token?['Authorization',  token]:undefined,\r\n    onOpen: (e)=>{console.log(`success websocket connection(${path})`)},\r\n    onClose: (e)=> {console.log(`closed websocket connection(${path})`)},\r\n  }, isActive && token!=null)\r\n  useEffect(()=>{\r\n    AsyncStorage.getItem('Authorization').then(setToken)\r\n    const onChange = (nextState:AppStateStatus)=>setIsActive(useBackground || nextState == 'active')\r\n    AppState.addEventListener(\"change\", onChange)\r\n    return ()=>AppState.removeEventListener(\"change\", onChange)\r\n  }, [])\r\n  return (token==null)?<>{children}</>:<Context.Provider value={{lastJsonMessage, sendJsonMessage}}>\r\n      {children}\r\n    </Context.Provider>\r\n}\r\n\r\nexport const WebSocketProvider = React.memo(({disable, children}:{disable?:boolean, children:React.ReactNode})=>{\r\n  return disable?<>{children}</>:<WebSocketInternalProvider path={'messenger/ws/'} Context={WebSocketContext}>\r\n    {children}\r\n  </WebSocketInternalProvider>\r\n})\r\n\r\nexport default ()=>{\r\n  const webSocketContext = useContext(WebSocketContext)\r\n  return webSocketContext\r\n}\r\n\r\n","import React, { useState } from 'react';\r\nimport { StyleSheet} from 'react-native';\r\nimport { CustomButtonProps } from '../types';\r\nimport CommonButton from './CommonButton';\r\n\r\nexport default (props:CustomButtonProps)=>{\r\n    return <CommonButton {...props} style={[styles.style, props.style]}/>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    style:{\r\n        borderRadius:6, \r\n        backgroundColor: 'transparent',\r\n        borderWidth:0\r\n    },\r\n});\r\n","import { Notification } from '../types';\r\nimport axios from './axios';\r\n\r\nexport const getNotification = async (user_id:number)=>{\r\n    const data = (await axios.get(`/api/v1/notifications/?type=WEB&user=${user_id}`) ).data as Notification[]\r\n    return data.length?data[0]:undefined\r\n}\r\n\r\nexport const postNotification = async(notification:Notification)=>{\r\n    return (await axios.post(`/api/v1/notifications/`, notification)).data as Notification\r\n}\r\n\r\nexport const putNotification = async(notification:Notification)=>{\r\n    return (await axios.put(`/api/v1/notifications/${notification.id}/`, notification)).data as Notification\r\n}","import { Platform } from 'react-native';\r\n//@ts-ignore\r\nimport useMobileDetect from 'use-mobile-detect-hook';\r\n\r\nexport default ()=>{\r\n    const detectMobile = useMobileDetect();\r\n    return (detectMobile.isMobile() || Platform.OS == 'android' || Platform.OS == 'ios') as boolean\r\n}","import * as React from 'react';\r\nimport { View } from './Themed';\r\nimport { StyleSheet, StyleProp, ViewStyle, TextStyle, Pressable } from 'react-native';\r\nimport Colors from '../constants/Colors';\r\n\r\nexport type ItemParamList = {\r\n    outerContainerStyle?:StyleProp<TextStyle>\r\n    containerStyle?:StyleProp<ViewStyle>\r\n    bodyStyle?:StyleProp<ViewStyle>\r\n    children?: React.ReactNode\r\n    onPress?: ()=>void\r\n}\r\n\r\nexport default function CommonItem(props:ItemParamList){\r\n  const [hover, setHover] = React.useState(false)\r\n  const [press, setPress] = React.useState(false)\r\n  return (\r\n    <Pressable\r\n      style={[styles.outerContainer ,props.outerContainerStyle, (press)?{backgroundColor:'rgb(242,242,242)'}:{}]}\r\n      onPressIn={()=>{setPress(true)}}\r\n      onPressOut={()=>{setPress(false);props.onPress?.()}}\r\n       //@ts-ignore\r\n       onHoverIn={()=>setHover(true)}\r\n       onHoverOut={()=>setHover(false)}\r\n    >\r\n        <View style={[styles.container ,props.containerStyle]}>\r\n            <View style={[styles.bodyView, props.bodyStyle]}>\r\n                <>{props.children}</>\r\n            </View>\r\n      </View>\r\n    </Pressable>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  outerContainer:{\r\n    width:'100%',\r\n    maxWidth:1080,\r\n    alignItems:'stretch',\r\n  },  \r\n  container: {\r\n      marginHorizontal:20,\r\n      backgroundColor:'transparent'\r\n    },\r\n    bodyView:{\r\n      width: '100%',\r\n      padding: 10,\r\n      minHeight: 40,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      borderBottomWidth:1,\r\n      borderColor:Colors.borderColor,\r\n      backgroundColor:'transparent'\r\n    }\r\n  });\r\n  ","import { useQuery } from \"react-query\";\r\nimport { getUserMembershipList } from \"../../apis\";\r\nimport { Auth } from \"../useAuthContext\";\r\n\r\nexport default function useUserMembershipList(auth?:Auth){\r\n  const { data } = useQuery([\"UserMembershipList\", auth?.groupId] , async()=>auth?.groupId?(await getUserMembershipList(auth?.groupId)):[])\r\n  return data\r\n}","import * as React from 'react';\r\nimport { Avatar } from 'react-native-paper';\r\nimport { AvatarProps } from '../../types';\r\n\r\nconst normalizeHash = (hash: number, min: number, max: number) => {\r\n    return Math.floor((hash % (max - min)) + min);\r\n};\r\n\r\nconst stringToHSL = (str: string, initHash?:number) => {\r\n    let hash = initHash || 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\r\n    }\r\n    hash = Math.abs(hash);\r\n    return `hsl(${normalizeHash(hash, 0, 360)}, ${normalizeHash(hash, 0, 100)}%, ${normalizeHash(hash, 25, 75)}%)`;\r\n};\r\n\r\nexport default (props:AvatarProps) => {\r\n    const backgroundColor = stringToHSL(props.name, props.userId)\r\n    return <Avatar.Text style={{backgroundColor}} size={props.size} label={props.name.split(' ').map(v=>v[0]).join().toUpperCase()} />\r\n};","import React from 'react';\r\n// import { MaterialIcons } from \"@expo/vector-icons\"\r\nimport Avatar from '../lib/react-native-paper/Avatar';\r\nimport { AvatarProps } from '../types';\r\n\r\nexport default (props:AvatarProps)=>{\r\n    // return <MaterialIcons size={38} style={{ marginBottom: -3, marginRight:10 }} name='account-circle'/>\r\n    return <Avatar {...props}/>\r\n}\r\n\r\n","import React from \"react\"\r\nimport { View, Text } from \"../components/Themed\"\r\nimport CommonItem from \"../components/CommonItem\"\r\n// import useBoardChannelList from \"../lib/blacktokki-board/useBoardChannelList\"\r\nimport { useMessengerChannelSorted } from \"../hooks/lists/useMessengerChannelList\"\r\nimport useAuthContext from \"../hooks/useAuthContext\"\r\nimport { navigate } from \"../navigation\"\r\n\r\nconst DrawerTab = (props:{data:{name:string, onPress?:()=>void}[]})=><View style={{flex:1}}>\r\n    {props.data.map((item, index)=><CommonItem key={index} containerStyle={{marginHorizontal:0}} bodyStyle={{alignItems:'flex-start'}} onPress={item.onPress}>\r\n        <Text style={{marginLeft:20}}>{item.name}</Text>\r\n    </CommonItem>\r\n    )}\r\n</View>\r\n\r\nexport default {\r\n    Messenger:()=>{\r\n        const {auth} = useAuthContext()\r\n        const channelList = useMessengerChannelSorted(auth);\r\n        return <DrawerTab data={(channelList || []).map(item=>({...item, onPress:()=>navigate(\"ChatScreen\", {id:item.id})}))}/>\r\n    },\r\n    // Board:()=>{\r\n    //     const {auth} = useAuthContext()\r\n    //     const channelList = useBoardChannelList(auth);\r\n    //     return <DrawerTab data={(channelList || []).map(item=>({...item, onPress:()=>navigate(\"BoardScreen\", {id:item.id})}))}/>\r\n    // },\r\n}","import { Ionicons, FontAwesome } from \"@expo/vector-icons\"\r\nimport React from \"react\"\r\nimport { Text, View } from \"react-native\"\r\nimport CommonItem from \"../components/CommonItem\"\r\nimport useAuthContext from \"../hooks/useAuthContext\"\r\nimport { useMessengerChannelSorted } from \"../hooks/lists/useMessengerChannelList\"\r\nimport { navigate } from \"../navigation\"\r\n\r\nexport default ()=>{\r\n    const {auth} = useAuthContext()\r\n    const channelList = useMessengerChannelSorted(auth)\r\n    const today = (new Date()).toISOString().slice(0, 10)\r\n    return <View style={{flex:1, backgroundColor:'white'}}>\r\n        {channelList?.map((item, index)=>{\r\n            const date = item.last_message?.created.slice(0,10)\r\n            return <CommonItem key={index} bodyStyle={{flexDirection:'row', justifyContent:'space-between'}} onPress={()=>navigate(\"ChatScreen\", {id:item.id})}>\r\n                <View style={{flexDirection:'row'}}>\r\n                    <FontAwesome size={36} style={{ marginBottom: -3, marginRight:20 }} name='users'/>\r\n                    <View>\r\n                        <View style={{flexDirection:'row'}}>\r\n                            <Text style={{fontSize:18}}>{item.name}</Text>\r\n                            <Text style={{fontSize:18, opacity: 0.4, paddingLeft:5}}>{item.member_count}</Text>\r\n                        </View>\r\n                        <Text style={{fontSize:16, opacity: 0.4}}>{item.last_message?.content}</Text>\r\n                    </View>\r\n                </View>\r\n                <View>\r\n                    <Text style={{fontSize:14, opacity: 0.4, textAlign:'right'}}>{date==today?item.last_message?.created.slice(11,16):date}</Text>\r\n                    <Text style={{fontSize:14, textAlign:'right'}}>{item.unread_count?item.unread_count:' '}</Text>\r\n                </View>\r\n            </CommonItem>\r\n        })}\r\n    </View>\r\n}\r\n\r\nexport const MessengerIcon = <Ionicons size={30} style={{ marginBottom: -3 }} name='chatbox'/>","import React from \"react\";\r\nimport MemberTab, {MemberIcon} from \"./MemberTab\";\r\nimport OneTab, {ConfigIcon} from \"./OneTab\";\r\nimport DrawerTab  from './DrawerTab';\r\nimport MessengerTab, {MessengerIcon} from \"./MessengerTab\";\r\nimport lang from \"../lang\"\r\n// import BoardTab, {BoardIcon}  from \"../lib/blacktokki-board/BoardTab\";\r\n\r\nexport const bottomTabs = {\r\n    OneTab:{\r\n        title:lang('member'),\r\n        component:MemberTab,\r\n        icon:MemberIcon,\r\n    },\r\n    TwoTab:{\r\n        title:lang('messenger'),\r\n        component:MessengerTab,\r\n        icon:MessengerIcon\r\n    },\r\n    // ThreeTab:{\r\n    //     title:'board',\r\n    //     component:BoardTab,\r\n    //     icon:BoardIcon\r\n    // },\r\n    // FourTab:{\r\n    //     title:'config',\r\n    //     component:OneTab,\r\n    //     icon:ConfigIcon\r\n    // }\r\n} as Record<string, {title:string, component:React.ComponentType<any>, icon:JSX.Element}>\r\n\r\nexport const drawerTabs = {\r\n    TwoTab:{\r\n        title:lang('messenger'),\r\n        component:DrawerTab.Messenger,\r\n        icon:MessengerIcon\r\n    },\r\n    // ThreeTab:{\r\n    //     title:'board',\r\n    //     component:DrawerTab.Board,\r\n    //     icon:BoardIcon\r\n    // }\r\n} as Record<string, {title:string, component:React.ComponentType<any>, icon:JSX.Element}>","import { MaterialCommunityIcons } from \"@expo/vector-icons\"\r\nimport React from \"react\"\r\nimport { Text, View } from \"react-native\"\r\nimport CommonItem from \"../components/CommonItem\"\r\nimport useAuthContext from \"../hooks/useAuthContext\"\r\nimport useUserMembershipList from \"../hooks/lists/useUserMembershipList\"\r\nimport { UserMembership } from \"../types\"\r\nimport { navigate } from \"../navigation\"\r\nimport Avatar from \"../components/Avatar\"\r\n\r\nexport const renderMemberItem = (item:UserMembership, onPress?:(item:UserMembership)=>void)=> (\r\n    <CommonItem key={item.id} bodyStyle={{backgroundColor:'white', flexDirection:'row', justifyContent:'flex-start'}} onPress={onPress?()=>onPress(item):undefined}>\r\n        <View style={{marginTop:4, marginRight:12}}><Avatar name={item.name} userId={item.id} size={44}/></View>\r\n        <Text style={{fontSize:20, fontWeight:'400'}}>{item.name}</Text>\r\n    </CommonItem>\r\n)\r\n\r\nexport default ()=>{\r\n    const {auth} = useAuthContext()\r\n    const userList = useUserMembershipList(auth)\r\n    return <View style={{flex:1, backgroundColor:'white'}}>\r\n        {userList && userList.map(item=>renderMemberItem(item, (item)=>navigate(\"ProfileScreen\", {id:item.id})))}\r\n    </View>\r\n}\r\n\r\nexport const MemberIcon = <MaterialCommunityIcons size={32} style={{ marginBottom: -3 }} name='account'/>","import { useTheme } from '@react-navigation/native';\r\nimport React, { useState } from 'react';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport { TabView, SceneMap,NavigationState, SceneRendererProps, TabBar } from 'react-native-tab-view';\r\nimport { navigate } from '.';\r\nimport Profile from '../components/Profile';\r\nimport TextButton from '../components/TextButton';\r\nimport Colors from '../constants/Colors';\r\nimport useResizeWindow from '../hooks/useResizeWindow';\r\nimport { drawerTabs } from '../tabs';\r\nimport { UserMembership } from '../types';\r\n\r\nexport const TabViewNavigator = (props:{tabs:typeof drawerTabs, tabBarPosition:\"top\"|\"bottom\", index?:number, onTab?:(index:number)=>void})=>{\r\n  const [index, setIndex] = React.useState(props.index || 0);\r\n  const entries = Object.entries(props.tabs)\r\n  const onTab = props.onTab\r\n  const icons = Object.assign({}, ...entries.map(([k, v])=>({[k]:v.icon})))\r\n  return <TabView\r\n    renderTabBar={(props:SceneRendererProps & {navigationState: NavigationState<any>})=>{\r\n      return <TabBar\r\n        {...props}\r\n        indicatorStyle={{ backgroundColor: \"#2196F3\" }}\r\n        style={{ backgroundColor:'white' }}\r\n        activeColor={'black'}\r\n        inactiveColor={'black'}\r\n        renderIcon={(scene)=>icons[scene.route.key]}\r\n        onTabPress={(scene)=>onTab?.(entries.findIndex(([k, v])=>k == scene.route.key))}\r\n      />\r\n    }}\r\n    navigationState={{ index, routes: entries.map(([k, v])=>({key:k, title:v.title}))}}\r\n    onIndexChange={setIndex}\r\n    renderScene={SceneMap(Object.assign({}, ...entries.map(([k, v])=>({[k]:v.component}))))}\r\n    tabBarPosition={props.tabBarPosition}\r\n  />\r\n}\r\n\r\nconst onAddList = [\r\n  ()=>navigate(\"ChannelEditScreen\", {type:\"messenger\"}),\r\n  ()=>navigate(\"ChannelEditScreen\", {type:\"board\"})\r\n]\r\n\r\nexport default ({user}:{user:UserMembership})=> {\r\n  const { colors } = useTheme();\r\n  const windowType = useResizeWindow();\r\n  const [index, setIndex] = useState(0);\r\n  return windowType=='landscape'?<View\r\n      style={[\r\n        styles.tabBar,\r\n        {\r\n          backgroundColor: colors.card,\r\n          borderTopColor: colors.border,\r\n        },\r\n        // tabBarStyle,\r\n      ]}\r\n      pointerEvents={false ? 'none' : 'auto'}\r\n    >\r\n      <Profile userId={user.id} username={user.username} name={user.name}/>\r\n      <View style={{flexDirection:'row-reverse'}}>\r\n          <TextButton title='+' textStyle={{fontSize:20}} style={{borderRadius:20}} onPress={onAddList[index]}/>\r\n      </View>\r\n      <View accessibilityRole=\"tablist\" style={styles.content}>\r\n        {Object.keys(drawerTabs).length>1 ? \r\n          <TabViewNavigator tabs={drawerTabs} tabBarPosition={\"top\"} onTab={setIndex}/>: \r\n          <View style={{borderTopWidth:1, flex:1, borderColor:colors.border}}>            \r\n            {Object.values(drawerTabs).map(drawerTab=>{const Tab = drawerTab.component; return <Tab key={drawerTab.title}/>})}\r\n          </View>\r\n        }\r\n      </View>\r\n    </View>:<View style={{width:0}}></View>\r\n}\r\n\r\n{/*<Text style={[styles.label, { color: d.isFocused ? colors.primary : '#222' }]}></Text> */}\r\n\r\nconst styles = StyleSheet.create({\r\n    tabBar: {\r\n      width:240,\r\n      elevation: 8,\r\n      borderRightWidth:1,\r\n      borderColor:Colors.borderColor\r\n    },\r\n    content: {\r\n      flex: 1,\r\n      flexDirection: 'row',\r\n    },\r\n    tab: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n    },\r\n    label: {\r\n        textAlign: 'center',\r\n        backgroundColor: 'transparent',\r\n      },\r\n  });","import React from 'react';\r\nimport {View} from 'react-native'\r\nimport {Text} from './Themed';\r\nimport { ProfileProps } from '../types';\r\nimport Avatar from './Avatar';\r\nimport TextButton from './TextButton';\r\nimport CommonTextInput from './CommonTextInput';\r\nimport { patchUser } from '../apis';\r\nimport useAuthContext from '../hooks/useAuthContext';\r\n\r\nexport default (props:ProfileProps)=>{\r\n    const [name, setName] = React.useState<string>()\r\n    const { auth, dispatch } = useAuthContext()\r\n    const isSelf = auth.user?.id == props.userId\r\n    const onChange = ()=>{\r\n        isSelf && patchUser({id:props.userId, name:name || ''}).finally(()=>{\r\n            setName(undefined)\r\n            dispatch({type:\"REFRESH\"})\r\n        })\r\n    }\r\n    console.log(props)\r\n    return <View style={{width:'100%', height:135, justifyContent:'space-evenly', alignItems:'center'}}>\r\n        <Avatar {...props} size={75}/>\r\n        {name===undefined?\r\n            <TextButton textStyle={{fontWeight:'bold', fontSize:15}} onPress={()=>isSelf && setName(props.name)} title={props.name} disabled={!isSelf}/>:\r\n            <CommonTextInput value={name} style={{textAlign:'center'}} setValue={setName} onBlur={onChange} onEndEditing={onChange} />}\r\n        <Text style={{fontWeight:'normal', fontSize:14}}>{props.username}</Text>\r\n    </View>\r\n}","import React, { useState } from 'react';\r\nimport { TextInput } from 'react-native';\r\nimport Colors from '../constants/Colors';\r\nimport useColorScheme from '../hooks/useColorScheme';\r\nimport { CustomTextInputProps } from '../types';\r\n\r\nexport default (props:CustomTextInputProps)=>{\r\n    const [contentHeight, setContentHeight] = useState<number>()\r\n    const minHeight = props.minHeight || 30\r\n    const theme = useColorScheme()\r\n    return <TextInput style={[{\r\n            borderColor:'#d0d7de', \r\n            fontSize:16, \r\n            borderWidth:1, \r\n            borderRadius:6, \r\n            paddingHorizontal:10, \r\n            paddingVertical:3, \r\n            backgroundColor:Colors[theme].background,\r\n            color:Colors[theme].text,\r\n            height:props.multiline?contentHeight:minHeight,\r\n        }, props.style]} \r\n        editable={!props.disabled} \r\n        value={props.value} \r\n        onChangeText={props.setValue}\r\n        onContentSizeChange={props.multiline?(e) => setContentHeight(Math.max(e.nativeEvent.contentSize.height, minHeight) + 2):undefined}\r\n        onBlur={()=>props.onBlur?.(props.value)}\r\n        onEndEditing={()=>props.onEndEditing?.(props.value)}\r\n        multiline={props.multiline}\r\n    />\r\n}","/**\r\n * Learn more about Light and Dark modes:\r\n * https://docs.expo.io/guides/color-schemes/\r\n */\r\n\r\nimport * as React from 'react';\r\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\r\n\r\nimport Colors from '../constants/Colors'\r\nimport useColorScheme from '../hooks/useColorScheme';\r\n\r\nexport function useThemeColor(\r\n  props: { light?: string; dark?: string },\r\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\r\n) {\r\n  const theme = useColorScheme();\r\n  const colorFromProps = props[theme];\r\n\r\n  if (colorFromProps) {\r\n    return colorFromProps;\r\n  } else {\r\n    return Colors[theme][colorName];\r\n  }\r\n}\r\n\r\ntype ThemeProps = {\r\n  lightColor?: string;\r\n  darkColor?: string;\r\n};\r\n\r\nexport type TextProps = ThemeProps & DefaultText['props'];\r\nexport type ViewProps = ThemeProps & DefaultView['props'];\r\n\r\nexport function Text(props: TextProps) {\r\n  const { style, lightColor, darkColor, ...otherProps } = props;\r\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\r\n\r\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\r\n}\r\n\r\nexport function View(props: ViewProps) {\r\n  const { style, lightColor, darkColor, ...otherProps } = props;\r\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\r\n\r\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\r\n}\r\n","import { createIntl, createIntlCache } from \"@formatjs/intl\";\r\nimport {I18nManager} from \"react-native\";\r\nimport * as RNLocalize from \"react-native-localize\";\r\n\r\nconst translations = {\r\n  ko: require(\"./ko.json\"),\r\n} as const;\r\n\r\ntype Translation = keyof typeof translations;\r\n\r\n// fallback if no available language fits\r\nconst fallback = { languageTag: \"en\", isRTL: false };\r\n\r\nconst { languageTag, isRTL } =\r\n  RNLocalize.findBestLanguageTag(Object.keys(translations)) ?? fallback;\r\n\r\n// update layout direction\r\nI18nManager.forceRTL(isRTL);\r\n\r\n// console.log(languageTag)\r\nconst intl = createIntl(\r\n  {\r\n    defaultLocale: \"en\",\r\n    locale: languageTag,\r\n    messages: translations[languageTag as Translation],\r\n  },\r\n  createIntlCache(),\r\n);\r\n\r\ntype TranslationParams = Parameters<(typeof intl)[\"formatMessage\"]>[1];\r\n\r\nexport default (key: string, params?: TranslationParams) => \r\n  intl\r\n    .formatMessage({ id: key, defaultMessage: key }, params)\r\n    .toString();","/**\r\n * Learn more about deep linking with React Navigation\r\n * https://reactnavigation.org/docs/deep-linking\r\n * https://reactnavigation.org/docs/configuring-links\r\n */\r\n\r\nimport { LinkingOptions } from '@react-navigation/native';\r\nimport * as Linking from 'expo-linking';\r\nimport {main, login, modal} from '../screens';\r\n\r\nconst ROOTPATH = 'tokki-tok'  // github repository name\r\n\r\nObject.values(modal).forEach(v=>v.path = ROOTPATH + '/' + v.path)\r\n\r\nexport default  {\r\n  prefixes: [Linking.makeUrl('/')],\r\n  config: {\r\n    screens: {\r\n      Main: {\r\n        screens:{\r\n          ...main,\r\n          ...login,\r\n          NotFound: '*',\r\n        },\r\n        path: ROOTPATH\r\n      },\r\n      ...modal\r\n    },\r\n  },\r\n} as LinkingOptions;\r\n","import axios, { AxiosRequestConfig } from 'axios';\r\n// @ts-ignore\r\nimport {API_URL} from \"@env\"\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nexport const accountURL =  `${API_URL}/account/`\r\nconst baseURL =  `${API_URL}/messenger/`\r\nconst defaultOption:AxiosRequestConfig = {\r\n    baseURL,\r\n    withCredentials: true,\r\n    headers: {}\r\n};\r\nconst _axios = axios.create(defaultOption);\r\n\r\n_axios.interceptors.request.use(\r\n    config => {\r\n        return config;\r\n    },\r\n    error => {\r\n        return Promise.reject(error);\r\n    }\r\n)\r\n\r\n_axios.interceptors.response.use(\r\n    response => {\r\n        // if((response.request.responseURL as string).indexOf('/task/login')>=0 && response.data.length != 0){\r\n        //     // redirect login\r\n        // }\r\n        return response;\r\n    },\r\n    error => {\r\n        if (error.response.status === 401) {\r\n            getToken().then(async(token)=>{\r\n                const r = await _axios.post(\"/api/v1/user/sso/refresh/\", {token}, {headers:{'Authorization':''}, baseURL: accountURL})\r\n                if (r.status == 200 && r.data !== ''){\r\n                    setToken(r.data)\r\n                }\r\n            })\r\n        }\r\n        return Promise.reject(error)\r\n    }\r\n)\r\n\r\nexport const setToken = async (token:string|null)=>{\r\n    _axios.defaults.headers['Authorization'] = `JWT ${token}`\r\n    if (token)\r\n        await AsyncStorage.setItem(\"Authorization\", token)\r\n    else\r\n        AsyncStorage.removeItem(\"Authorization\")\r\n}\r\nexport const getToken = async ()=>{\r\n    const token = await AsyncStorage.getItem(\"Authorization\")\r\n    _axios.defaults.headers['Authorization'] = token?`JWT ${token}`:null\r\n    return token\r\n}\r\n\r\nexport default _axios\r\n","import { StackScreenProps } from '@react-navigation/stack';\r\nimport * as React from 'react';\r\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\r\nimport lang from '../lang'\r\n\r\nexport default function NotFoundScreen({\r\n  navigation,\r\n}: StackScreenProps<any, 'NotFound'>) {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>{lang(\"This screen doesn't exist.\")}</Text>\r\n      <TouchableOpacity onPress={() => navigation.replace('HomeScreen')} style={styles.link}>\r\n        <Text style={styles.linkText}>{lang(\"Go to home screen!\")}</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n  link: {\r\n    marginTop: 15,\r\n    paddingVertical: 15,\r\n  },\r\n  linkText: {\r\n    fontSize: 14,\r\n    color: '#2e78b7',\r\n  },\r\n});\r\n","import React, { createContext, useContext, useEffect, useMemo, useRef, useState } from \"react\"\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/messaging\";\r\n//@ts-ignore\r\nimport {FCM_PUBLIC_VAPID_KEY, FCM_API_KEY} from \"@env\"\r\nimport { Notification as NotificationType, UserMembership } from \"../types\";\r\nimport { getNotification, postNotification, putNotification } from \"../apis/notification\";\r\nconst firebaseConfig = require(\"../../web/firebase-config.js\")\r\n// Initialize Firebase\r\nconst key = firebaseConfig.messagingSenderId\r\nconst apiKeyEncrypted = (FCM_API_KEY as string).split('').map((v, i)=> (v.charCodeAt(0) ^ key.charCodeAt(i)).toString(16).padStart(2, '0')).join('')\r\nconst app = firebase.initializeApp({...firebaseConfig, apiKey:FCM_API_KEY});\r\n// const analytics = getAnalytics(app);\r\nconst messaging = firebase.messaging(app);\r\n\r\nmessaging.onMessage((payload) => {\r\n  if (!(\"Notification\" in window)) {\r\n    alert(\"This browser does not support desktop notification\");\r\n  }\r\n  else if (Notification.permission === \"granted\") {\r\n    const message_set = JSON.parse(payload.data['message_set'])[0]\r\n    new Notification(payload.data.channel_name, { body: `${payload.data.name}: ${message_set.content}` });\r\n  }\r\n});\r\n\r\nconst FirebaseContext = createContext<{enable:boolean, setEnable:(enable:boolean)=>void}>({enable:false, setEnable:()=>{}});\r\n\r\nconst requestToken = async()=>{\r\n  const permission = await Notification.requestPermission();\r\n  if (permission === 'granted') {\r\n    const serviceWorkerRegistration = await navigator.serviceWorker.register(`${process.env.PUBLIC_URL}/firebase-messaging-sw.js?${apiKeyEncrypted}`)\r\n    console.log('[SW]: SCOPE: ', serviceWorkerRegistration.scope);\r\n    const currentToken = await messaging.getToken({serviceWorkerRegistration, vapidKey: FCM_PUBLIC_VAPID_KEY })\r\n    window.addEventListener('beforeunload', (event:any) => {\r\n      event.preventDefault();\r\n      serviceWorkerRegistration.unregister()\r\n    });\r\n    if (currentToken)\r\n      return currentToken\r\n  }\r\n  return undefined\r\n}\r\n\r\nexport const FirebaseProvider = ({children, user}:{user?:UserMembership|null, children:React.ReactNode})=>{\r\n  const tokenRef = useRef<string>()\r\n  const [notification, setNotification] = useState<NotificationType>()\r\n  const enable = useMemo(()=>!(notification?.token), [notification])\r\n  const setEnable = (enable:boolean)=>{\r\n    if(user && notification){\r\n      putNotification({...notification, token:enable||tokenRef.current==undefined?null:tokenRef.current}).then((noti)=>{\r\n        setNotification(noti)\r\n      })\r\n    }\r\n  }\r\n  \r\n  useEffect(()=>{\r\n    let isMount = true;\r\n    const setNotificationInternal = (n?:NotificationType)=>{\r\n      if (isMount)setNotification(n)\r\n    }\r\n    if(user){\r\n      requestToken().then((t)=>{\r\n        tokenRef.current = t\r\n        getNotification(user.id).then(noti=>{\r\n          const token = t==undefined?null:t\r\n          if (noti == undefined)\r\n            postNotification({user:user.id, type:'WEB', token}).then(setNotificationInternal)\r\n          else\r\n            putNotification({...noti, token}).then(setNotificationInternal)\r\n        })\r\n      })\r\n    }\r\n    else{\r\n      setNotificationInternal(undefined)\r\n    }\r\n    return ()=>{isMount=false}\r\n  }, [user])\r\n  return !user?<>{children}</>:<FirebaseContext.Provider value={{enable, setEnable}}>\r\n    {children}\r\n  </FirebaseContext.Provider>\r\n}\r\n\r\nexport default ()=>{\r\n  const firebaseContext = useContext(FirebaseContext)\r\n  return firebaseContext\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Dimensions, Platform, View } from 'react-native'\r\nimport useIsMobile from '../hooks/useIsMobile'\r\n\r\ntype ViewProps = {windowType:'landscape'|'portrait', children:React.ReactNode}\r\n\r\nexport default (props:ViewProps)=>{\r\n    const isMobile = useIsMobile()\r\n    const [height, setHeight] = useState(window.innerHeight + 1)\r\n    useEffect(()=>{\r\n        if(isMobile && Platform.OS == 'web'){\r\n            const onChange = (e:any)=>{\r\n                setHeight(window.innerHeight + 1)\r\n            }\r\n            Dimensions.addEventListener(\"change\",onChange)\r\n            return () => Dimensions.removeEventListener(\"change\", onChange)\r\n            \r\n        }\r\n    },[ isMobile])\r\n    return <View style={{height:isMobile&&Platform.OS == 'web'?height:'100%'}}>\r\n        {props.children}\r\n    </View>\r\n\r\n}\r\n  ","import { CardStyleInterpolators, createStackNavigator } from '@react-navigation/stack';\r\nimport React, {useMemo} from 'react';\r\nimport { View } from 'react-native';\r\nimport { QueryClient, QueryClientProvider } from \"react-query\";\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport useResizeWindow from '../hooks/useResizeWindow';\r\nimport NotFoundScreen from '../screens/NotFoundScreen';\r\nimport {main, login, modal} from '../screens';\r\nimport DrawerNavigator from './DrawerNavigator';\r\nimport useAuthContext, {AuthProvider} from '../hooks/useAuthContext';\r\nimport { WebSocketProvider } from '../hooks/useWebsocketContext';\r\nimport HeaderRight from '../components/HeaderRight'\r\nimport Colors from '../constants/Colors';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\nimport { FirebaseProvider } from '../hooks/useFirebaseContext';\r\nimport useIsMobile from '../hooks/useIsMobile';\r\nimport MobileSafeAreaView from '../components/MobileSafeAreaView';\r\nimport useColorScheme from '../hooks/useColorScheme';\r\n\r\nconst Root = createStackNavigator();\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nexport default function RootNavigator() {\r\n    const windowType = useResizeWindow();\r\n    return (\r\n        <MobileSafeAreaView windowType={windowType}>\r\n            <AuthProvider>\r\n                <QueryClientProvider client={queryClient}>\r\n                    {/* devtools */}\r\n                    {/* <ReactQueryDevtools initialIsOpen={true} /> */}\r\n                        <Root.Navigator\r\n                            mode= 'modal'\r\n                            headerMode= 'screen'\r\n                            screenOptions={{\r\n                                cardStyle:{backgroundColor:\"white\"},\r\n                                animationEnabled: true,\r\n                                cardStyleInterpolator: CardStyleInterpolators.forVerticalIOS,\r\n                            }}\r\n                        >\r\n                            <Root.Screen name=\"Main\" component={MainNavigator} options={{headerShown:false}}/>\r\n                            {Object.entries(modal).map(([key, screen])=><Root.Screen key={key} name={key} component={screen.component} options={{\r\n                                title: screen.title,\r\n                                gestureDirection: windowType == 'landscape'?'vertical-inverted':'vertical'\r\n                            }} />)}\r\n                        </Root.Navigator>\r\n                </QueryClientProvider>\r\n            </AuthProvider>\r\n        </MobileSafeAreaView>\r\n    );\r\n}\r\n\r\nconst Main = createStackNavigator();\r\n\r\nfunction headerLeft(navigation:any, route:any, windowType:string, isMobile:boolean){\r\n    const canGOBackScreen = ['HomeScreen', 'LoginScreen'].findIndex(v=>v == route.name) == -1\r\n    const goBack = ()=>{\r\n        if (navigation.canGoBack())\r\n            navigation.goBack()\r\n        else if (canGOBackScreen)\r\n            navigation.replace('HomeScreen')\r\n    }\r\n    if (windowType=='portrait' && canGOBackScreen)\r\n        return <TouchableOpacity onPress={goBack}><Ionicons size={isMobile?20:24} style={{marginHorizontal:isMobile?16:20 }} name=\"arrow-back\"/></TouchableOpacity>\r\n    return null\r\n}\r\n\r\nfunction MainNavigator(){\r\n    const windowType = useResizeWindow();\r\n    const isMobile = useIsMobile()\r\n    const {auth} = useAuthContext()\r\n    const theme = useColorScheme()\r\n    const entries = useMemo(()=>{\r\n        if (auth.user === undefined)\r\n            return []\r\n        console.log('current user: ', auth.user)\r\n        return Object.entries(auth.user === null?login:main)\r\n    }, [auth])\r\n    return (auth.user!==undefined?<View style={{flexDirection:'row', flex:1}}>\r\n        {auth.user?<DrawerNavigator user={auth.user}/>:undefined}\r\n        <View style={{flex:1}}>\r\n            <FirebaseProvider user={auth.user}>\r\n                <WebSocketProvider disable={auth.user === null || auth.user === undefined}>\r\n                    <Main.Navigator\r\n                        screenOptions={({navigation, route})=>({\r\n                            headerStyle:{backgroundColor:Colors[theme].header, height:isMobile?50:undefined},\r\n                            headerTitleStyle:{color:'white'},\r\n                            headerLeft:()=>headerLeft(navigation, route, windowType, isMobile),\r\n                            headerRight:()=><HeaderRight/>,\r\n                            headerLeftContainerStyle:{backgroundColor:'white', borderBottomWidth:1, borderColor:Colors.borderColor},\r\n                            cardStyle:{flexShrink:1},\r\n                            animationEnabled:windowType=='portrait',\r\n                            cardStyleInterpolator: CardStyleInterpolators.forHorizontalIOS\r\n                        })}\r\n                    >\r\n                        {entries.map(([key, screen])=><Main.Screen key={key} name={key} component={screen.component} options={{ title: screen.title }} />)}\r\n                        <Main.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\r\n                    </Main.Navigator>\r\n                </WebSocketProvider>\r\n            </FirebaseProvider>\r\n        </View>\r\n    </View>:<></>);\r\n}","import React from 'react';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\r\nimport Navigation from './src/navigation';\r\nimport useColorScheme from './src/hooks/useColorScheme';\r\nimport useCachedResources from './src/hooks/useCachedResources';\r\n\r\nexport default function App() {\r\n  const isLoadingComplete = useCachedResources();\r\n  const colorScheme = useColorScheme();\r\n  if (!isLoadingComplete) {\r\n    return null;\r\n  } else {\r\n    return (\r\n      <SafeAreaProvider>\r\n        <Navigation colorScheme={colorScheme} />\r\n        <StatusBar />\r\n      </SafeAreaProvider>\r\n    );\r\n  }\r\n}\r\n","import { Ionicons } from '@expo/vector-icons';\r\nimport * as Font from 'expo-font';\r\nimport * as SplashScreen from 'expo-splash-screen';\r\nimport * as React from 'react';\r\n\r\nexport default function useCachedResources() {\r\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\r\n\r\n  // Load any resources or data that we need prior to rendering the app\r\n  React.useEffect(() => {\r\n    async function loadResourcesAndDataAsync() {\r\n      try {\r\n        SplashScreen.preventAutoHideAsync();\r\n\r\n        // Load fonts\r\n        await Font.loadAsync({\r\n          ...Ionicons.font,\r\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\r\n        });\r\n      } catch (e) {\r\n        // We might want to provide this error information to an error reporting service\r\n        console.warn(e);\r\n      } finally {\r\n        setLoadingComplete(true);\r\n        SplashScreen.hideAsync();\r\n      }\r\n    }\r\n\r\n    loadResourcesAndDataAsync();\r\n  }, []);\r\n\r\n  return isLoadingComplete;\r\n}\r\n","import React, { createContext, useContext, useEffect, useReducer, useMemo, Dispatch } from \"react\"\r\nimport { checkLogin, login, logout } from \"../apis\"\r\nimport { getNotification, putNotification } from \"../apis/notification\"\r\nimport { UserMembership } from \"../types\"\r\n\r\ntype AuthAction = {type:string, username?:string, password?:string, user?:UserMembership|null}\r\n\r\nexport type Auth = {user?:UserMembership|null, groupId?:number}\r\n\r\ntype AuthState ={user?:UserMembership|null, request?:{username:string, password:string}|null}\r\n\r\nconst AuthContext = createContext<{auth:Auth, dispatch:Dispatch<AuthAction>}>({auth:{}, dispatch:()=>{}});\r\n\r\nconst authReducer =(initialState:AuthState, action:AuthAction)=>{\r\n  switch (action.type){\r\n      case 'LOGIN_REQUEST':\r\n        return {\r\n          ...initialState,\r\n          request:{username:action.username, password:action.password},\r\n        } as AuthState\r\n      case 'LOGIN_GUEST':\r\n        return {\r\n          ...initialState,\r\n          request:{username:'guest', password:'guest'},\r\n        } as AuthState\r\n      case 'LOGIN_SUCCESS':\r\n          return{\r\n              ...initialState,\r\n              user:action.user,\r\n              request:undefined\r\n          }\r\n      case 'LOGIN_FAILED':\r\n          return{\r\n              ...initialState,\r\n              request:undefined\r\n          }\r\n      case 'LOGOUT_REQUEST':\r\n          return{\r\n              ...initialState,\r\n              request:null\r\n          }\r\n      case 'LOGOUT_SUCCESS':\r\n          return {\r\n            ...initialState,\r\n            user:null,\r\n            request:undefined\r\n          }\r\n      case 'REFRESH':\r\n        return {\r\n          ...initialState,\r\n          user:undefined\r\n        }\r\n      default:\r\n          throw new Error( `Unhandled action type: ${action.type}`)\r\n  }\r\n}\r\n\r\n\r\nexport const AuthProvider = ({children}:{children:React.ReactNode})=>{\r\n  const [authState, dispatch] = useReducer(authReducer, {} as Auth)\r\n  const auth = useMemo(()=>({\r\n    user:authState.user,\r\n    groupId: authState.user?.membership_set.find(g=>g.root_group_id==null)?.group\r\n  }), [authState])\r\n  useEffect(()=>{\r\n    if(authState.user===undefined){\r\n      checkLogin().then((user)=>{\r\n        dispatch({type:\"LOGIN_SUCCESS\", user})\r\n      }).catch((e)=>{\r\n        console.log(e)\r\n        dispatch({type:\"LOGOUT_SUCCESS\"})\r\n      })\r\n    }\r\n    else if(authState.user===null && authState.request){\r\n      login(authState.request.username, authState.request.password).then(user=>{\r\n        dispatch({type:\"LOGIN_SUCCESS\", user})\r\n      }).catch(()=>{\r\n        dispatch({type:\"LOGIN_FAILED\"})\r\n      })\r\n    }\r\n    else if(authState.user && authState.request===null){\r\n      getNotification(authState.user.id).then(noti=>{\r\n        noti && putNotification({...noti, token:''}).then(()=>{\r\n          logout().then(()=>dispatch({type:\"LOGOUT_SUCCESS\"}))\r\n        })\r\n      })\r\n    }\r\n  }, [authState])\r\n  return <AuthContext.Provider value={{auth, dispatch}}>\r\n    {children}\r\n  </AuthContext.Provider>\r\n}\r\n\r\nexport default ()=>{\r\n  const authContext = useContext(AuthContext)\r\n  return authContext\r\n}\r\n","const tintColorLight = '#2f95dc';\r\nconst tintColorDark = '#fff';\r\n\r\nexport default {\r\n  light: {\r\n    text: '#000',\r\n    background: '#fff',\r\n    tint: tintColorLight,\r\n    tabIconDefault: '#ccc',\r\n    tabIconSelected: tintColorLight,\r\n    header:'#24292f',\r\n    buttonColor:'rgb(242,242,242)',\r\n    buttonBackgroundColor: '#f6f8fa', //'rgba(9,30,66,0.08)',//rgb(242,242,242)\r\n  },\r\n  dark: {\r\n    text: '#fff',\r\n    background: '#000',\r\n    tint: tintColorDark,\r\n    tabIconDefault: '#ccc',\r\n    tabIconSelected: tintColorDark,\r\n    header:'#dbd6d1',\r\n    buttonColor:'rgb(14,14,14)',\r\n    buttonBackgroundColor: '#080604',\r\n  },\r\n  button:{\r\n    borderColor:'rgba(27,31,36,0.15)',\r\n  },\r\n  borderColor:'#d0d7de',\r\n  \r\n  focus:'#0065A4',\r\n};\r\n","firebaseConfig = {\n    \"authDomain\": \"virtual-metrics-355712.firebaseapp.com\",\n    \"projectId\": \"virtual-metrics-355712\",\n    \"storageBucket\": \"virtual-metrics-355712.appspot.com\",\n    \"messagingSenderId\": \"76003576924\",\n    \"appId\": \"1:76003576924:web:c8c8a006d07918bbc02a99\",\n    \"measurementId\": \"G-SEL35L4N5R\"\n}\nif (typeof module !== 'undefined') {\n    module.exports = firebaseConfig\n}\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","/**\r\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\r\n * https://reactnavigation.org/docs/getting-started\r\n *\r\n */\r\nimport _ from 'lodash';\r\nimport { NavigationContainer, DefaultTheme, DarkTheme, NavigationContainerRef } from '@react-navigation/native';\r\nimport * as React from 'react';\r\nimport { ColorSchemeName } from 'react-native';\r\n\r\nimport LinkingConfiguration from './LinkingConfiguration';\r\nimport RootNavigator from './RootNavigator';\r\n\r\nconst navigationRef = React.createRef<NavigationContainerRef>();\r\n\r\nexport function navigate(name:string, params?:any) {\r\n  if (params)\r\n    navigationRef.current?.navigate(name, params);\r\n  navigationRef.current?.navigate(name);\r\n}\r\n\r\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\r\n  return (\r\n    <NavigationContainer\r\n      ref={navigationRef}\r\n      documentTitle={{formatter: (options, route) => {return `TOKKI TOK`}}}\r\n      linking={(process.versions && process.versions['electron'])?undefined:LinkingConfiguration}\r\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\r\n      <RootNavigator />\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\n(function(l) {  // for github-page\r\n    if (l !== undefined && l.search[1] === '/' ) {\r\n        var decoded = l.search.slice(1).split('&').map(function(s) { \r\n        return s.replace(/~and~/g, '&')\r\n        }).join('?');\r\n        window.history.replaceState(null, '',\r\n            l.pathname.slice(0, -1) + decoded + l.hash\r\n        );\r\n    }\r\n}(window.location))\r\n    \r\nconst ignoreWarnings = ['ReactNativeFiberHostComponent'];\r\nconst _console = _.clone(console);\r\nconsole.warn = (message: string|Object) => {\r\n    var warn = true;\r\n    if (message instanceof Object)\r\n    warn = false;\r\n    else{\r\n    ignoreWarnings.forEach((value)=>{\r\n        if (message.indexOf && message.indexOf(value) <= -1) {\r\n            warn = false;\r\n        }\r\n    })\r\n    };\r\n    if (warn){\r\n        _console.warn(message);\r\n    }\r\n    else{\r\n        // console.log(message)\r\n    }\r\n};\r\n","\r\nimport { User, UserMembership } from '../types';\r\nimport axios, { getToken, setToken, accountURL as baseURL } from './axios';\r\n\r\nexport const login = async(username:string, password:string) => {\r\n    if(username.endsWith('.guest') && password.length == 0)\r\n        password = 'guest'\r\n    const r = await axios.post(\"/api-token-auth/\", {username, password});\r\n    if(r.status == 200){\r\n        await setToken(r.data)\r\n        return await checkLogin()\r\n    }\r\n}\r\n\r\nexport const logout = async() => {\r\n    await setToken(null)\r\n    return await axios.get(\"/api-auth/logout/\")\r\n}\r\n\r\nexport const guestLogin =  async() => {\r\n    return await login('guest', 'guest')\r\n}\r\n\r\nconst checkLoginToken = async ()=>{\r\n    const value = (await axios.get(\"/api/v1/users/memberships/?_self=true\"))?.data\r\n    if (value && value.length){\r\n        return value[0] as UserMembership\r\n    }\r\n    return null\r\n}\r\n\r\nexport const checkLogin = async() => {\r\n    const token = await getToken()\r\n    if (token === null)\r\n        return null\r\n    try{\r\n       return await checkLoginToken()\r\n    }\r\n    catch(e:any){\r\n        let error = e\r\n        if(e.response !== undefined && e.response.status==401){\r\n            try{\r\n                return await checkLoginToken()\r\n            }\r\n            catch(e2){\r\n                error = e2\r\n            }\r\n        }\r\n        const isOffline = ((error as any).code == \"ERR_NETWORK\" || (error as any).message && ((error as any).message as string).startsWith(\"Cannot read\"))\r\n        throw {error, isOffline}\r\n    }\r\n}\r\n\r\nexport const getUserList = async (group_id:number)=>{\r\n    return (await axios.get(`/api/v1/users/?group_id=${group_id}`) ).data as User[]\r\n}\r\n\r\nexport const patchUser = async (user:{id:number, name:string})=>{\r\n    await axios.patch(`/api/v1/user/`, {ids:[user.id], updated: {name:user.name}}, {baseURL})\r\n}\r\n\r\nexport const getUserMembershipList = async (group_id:number)=>{\r\n    return (await axios.get(`/api/v1/users/memberships/?group_id=${group_id}`) ).data as UserMembership[]\r\n}\r\n","import { Channel, MessengerMember, MessengerContent, EditMessage, MessengerChannel, DirectChannel } from '../types';\r\nimport axios from './axios';\r\n\r\nexport const getMessengerChannelList = async (user_id:number)=>{\r\n    return (await axios.get(`/api/v1/channels/messenger/?type=messenger&messenger_user_id=${user_id}`) ).data as MessengerChannel[]\r\n}\r\n\r\nexport const postChannel = async(channel:Channel)=>{\r\n    return (await axios.post(`/api/v1/channels/`, channel)).data as Channel\r\n}\r\n\r\nexport const postDirectChannel = async(channel:DirectChannel)=>{\r\n    return (await axios.post(`/api/v1/channels/direct/`, channel)).data as Channel\r\n}\r\n\r\nexport const putChannel = async(channel:Channel)=>{\r\n    return (await axios.put(`/api/v1/channels/${channel.id}/`, channel)).data as Channel\r\n}\r\n\r\nexport const deleteChannel = async(channel_id:number)=>{\r\n    await axios.delete(`/api/v1/channels/${channel_id}/`)\r\n}\r\n\r\nexport const getMessengerMemberList = async(channel_id:number)=>{\r\n    return (await axios.get(`/api/v1/messengermembers/?channel=${channel_id}`) ).data as MessengerMember[]\r\n}\r\n\r\nexport const postBulkMessengerMember = async(data:{channel_id:number, user_ids:number[]})=>{\r\n    await axios.post(`/api/v1/messengermembers/bulk/`, {channel:data.channel_id, user_ids:data.user_ids})\r\n}\r\n\r\nexport const deleteMessengerMember = async(member_id:number)=>{\r\n    await axios.delete(`/api/v1/messengermembers/${member_id}/`)\r\n}\r\n\r\nexport const getMessengerContentList = async (channel_id:number, id_lt?:number)=>{\r\n    const id_lt_param = id_lt?`&id_lt=${id_lt}`:''\r\n    return (await axios.get(`/api/v1/messengercontents/?limit=30&channel=${channel_id}${id_lt_param}`)).data.results as MessengerContent[]\r\n}\r\n\r\nexport const postMessage = async (message:EditMessage)=>{\r\n    await axios.post(`/api/v1/messengercontents/messages/`, message)\r\n}\r\n\r\nexport const deleteMessengerContent = async (content_id:number)=>{\r\n    await axios.delete(`/api/v1/messengercontents/${content_id}/`)\r\n}","import React, { useState } from 'react';\r\nimport { Text, StyleSheet, Pressable, StyleProp, ViewStyle} from 'react-native';\r\nimport Colors from '../constants/Colors';\r\nimport useColorScheme from '../hooks/useColorScheme';\r\nimport { CustomButtonProps } from '../types';\r\n\r\nconst DefaultButton = (props:CustomButtonProps)=>{\r\n    const [hover, setHover] = useState(false)\r\n    return <Pressable\r\n        onPress={()=>props.onPress()}\r\n        //@ts-ignore\r\n        onHoverIn={()=>setHover(true)}\r\n        onHoverOut={()=>setHover(false)}\r\n        style={[\r\n            {\r\n                paddingVertical:5, \r\n                paddingHorizontal:16\r\n            },\r\n            props.style,\r\n            hover?{backgroundColor:props.color}:{}\r\n        ]}>\r\n            <Text selectable={false} style={[{fontSize:14}, props.textStyle]}>{props.title}</Text>\r\n        </Pressable>\r\n}\r\n\r\nexport default (props:CustomButtonProps)=>{\r\n    const theme = useColorScheme()\r\n    const _props = {\r\n        color:Colors[theme].buttonColor,\r\n        ...props,\r\n        style:[\r\n            styles.style,\r\n            {\r\n                backgroundColor:Colors[theme].buttonBackgroundColor\r\n            },\r\n            props.style,\r\n        ] as StyleProp<ViewStyle>,\r\n        textStyle:[\r\n            styles.text, \r\n            {color:Colors[theme].text},\r\n            props.textStyle\r\n        ]\r\n    }\r\n    return <DefaultButton {..._props}/>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    style:{\r\n        borderRadius:6, \r\n        borderColor:Colors.button.borderColor, \r\n        borderWidth:1, \r\n    },\r\n    text:{\r\n        textAlign:'center', \r\n        fontWeight:'600'\r\n    }\r\n});\r\n","import { ColorSchemeName, useColorScheme as _useColorScheme } from 'react-native';\r\n\r\n// The useColorScheme value is always either light or dark, but the built-in\r\n// type suggests that it can be null. This will not happen in practice, so this\r\n// makes it a bit easier to work with.\r\nexport default function useColorScheme(): NonNullable<ColorSchemeName> {\r\n  return _useColorScheme() as NonNullable<ColorSchemeName>;\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { Dimensions, ScaledSize } from 'react-native';\r\n//@ts-ignore\r\nimport useMobileDetect from 'use-mobile-detect-hook';\r\n\r\ntype WindowType = 'portrait' | 'landscape'\r\n\r\nconst getWindowType = (window:ScaledSize)=> window.height >= window.width?'portrait':'landscape' as WindowType;\r\n\r\nexport default function useResizeWindow() {\r\n  const detectMobile = useMobileDetect();\r\n  const [windowType, setWindowType] = useState(getWindowType(Dimensions.get('window')))\r\n  const onChange = () => setWindowType(getWindowType(Dimensions.get('window')))\r\n\r\n  useEffect(() => {\r\n    Dimensions.addEventListener(\"change\", onChange);\r\n    return () => {\r\n      Dimensions.removeEventListener(\"change\", onChange);\r\n    };\r\n  });\r\n  if (detectMobile.isMobile())\r\n    return 'portrait'\r\n  return windowType\r\n}","import { useEffect } from \"react\";\r\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\r\nimport { getMessengerChannelList, postChannel, postDirectChannel, putChannel } from \"../../apis\";\r\nimport { MessengerChannel, MessengerContent } from \"../../types\";\r\nimport { Auth } from \"../useAuthContext\";\r\nimport useWebsocketContext from \"../useWebsocketContext\";\r\n\r\nexport default function useMessengerChannelList(auth?:Auth){\r\n  const queryClient = useQueryClient()\r\n  const {lastJsonMessage} = useWebsocketContext()\r\n  const { data } = useQuery(\"MessengerChannelList\" , async()=>auth?.user?.id?(await getMessengerChannelList(auth.user.id)):[])\r\n\r\n  useEffect(()=>{\r\n    if(lastJsonMessage !=null){\r\n      if(lastJsonMessage['type']=='enter'){\r\n        queryClient.setQueryData<MessengerChannel[]>(\"MessengerChannelList\", (_data)=>{\r\n          return (_data?.find(v=>v.id==lastJsonMessage['data']['id'])?_data:[lastJsonMessage['data'] , ...(_data|| [])]).sort((a, b)=>a.id - b.id)\r\n        })\r\n      }\r\n      if (lastJsonMessage['type']=='next_message'){\r\n        const data:MessengerContent = lastJsonMessage['data']\r\n        queryClient.setQueryData<MessengerChannel[]>(\"MessengerChannelList\", (_data)=>(_data || []).map(v=>{\r\n          if (v.id == data.channel){\r\n            return {...v, last_message:{content:data.message_set[0]?.content, created:data.created}}\r\n          }\r\n          return v\r\n        }))\r\n      }\r\n      // if(lastJsonMessage['type']=='leave'){\r\n      //   queryClient.setQueryData<Channel[]>(\"MessengerChannelList\", (_data)=>_data?.filter(v=>v.id!=lastJsonMessage['data']['channel_id']) || [])\r\n      // }\r\n    }\r\n  }, [lastJsonMessage])\r\n  return data\r\n}\r\n\r\nexport function useMessengerChannelSorted(auth?:Auth){\r\n  const channelList = useMessengerChannelList(auth);\r\n  return channelList?.sort((a, b)=>(a.last_message?.created || '') < (b.last_message?.created || '')?1:-1)\r\n}\r\nexport function useMessengerChannelMutation(){\r\n  const queryClient = useQueryClient()\r\n\r\n  const create = useMutation(postChannel, {\r\n    onSuccess: ()=>queryClient.invalidateQueries(\"MessengerChannelList\")\r\n  });\r\n\r\n  const update = useMutation(putChannel, {\r\n    onSuccess: () => queryClient.invalidateQueries(\"MessengerChannelList\")\r\n  })\r\n\r\n  const direct = useMutation(postDirectChannel, {\r\n    onSuccess: () => queryClient.invalidateQueries(\"MessengerChannelList\")\r\n  })\r\n\r\n  return { create:create.mutateAsync, update:update.mutateAsync, direct:direct.mutateAsync}\r\n}"],"sourceRoot":""}