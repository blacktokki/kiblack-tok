{"version":3,"sources":["src/components/HeaderRight.tsx","src/screens/main/LoginScreen.tsx","src/components/CommonSection.tsx","src/hooks/lists/useMessengerContent.List.ts","src/hooks/lists/useMessengerMemberList.ts","src/components/LinkPreview.tsx","src/lib/react-native-webrtc/useWebsocketContext.tsx","src/lib/react-native-webrtc/webrtc/p2p.tsx","src/lib/react-native-webrtc/webrtc/index.ts","src/lib/react-native-webrtc/LocalCam.tsx","src/lib/react-native-webrtc/RemoteCam.tsx","src/screens/main/ChatScreen/VideoCallSection.tsx","src/screens/main/ChatScreen/index.tsx","src/screens/main/TabOneScreen.tsx","src/components/RowField.tsx","src/components/TextField.tsx","src/screens/ChannelEditScreen.tsx","src/screens/InviteScreen.tsx","src/screens/index.ts","src/screens/main/HomeScreen.tsx","src/screens/ProfileScreen.tsx","src/hooks/useWebsocketContext.tsx","src/components/TextButton.tsx","src/apis/notification.ts","src/hooks/useIsMobile.ts","src/components/CommonItem.tsx","src/hooks/lists/useUserMembershipList.ts","src/lib/react-native-paper/Avatar.tsx","src/components/Avatar.tsx","src/tabs/DrawerTab.tsx","src/tabs/MessengerTab.tsx","src/tabs/index.ts","src/tabs/MemberTab.tsx","src/navigation/DrawerNavigator.tsx","src/components/Profile.tsx","src/components/CommonTextInput.tsx","src/components/Themed.tsx","src/lang/index.ts","src/navigation/LinkingConfiguration.ts","src/apis/axios.ts","src/constants/Colors.ts","src/screens/NotFoundScreen.tsx","src/hooks/useFirebaseContext.tsx","src/components/MobileSafeAreaView.tsx","src/navigation/RootNavigator.tsx","App.tsx","src/hooks/useCachedResources.ts","src/hooks/useAuthContext.tsx","web/firebase-config.js","src/assets/fonts/SpaceMono-Regular.ttf","src/navigation/index.tsx","src/apis/account.ts","src/apis/messenger.ts","src/components/CommonButton.tsx","src/hooks/useResizeWindow.ts","src/hooks/useColorScheme.ts","src/hooks/lists/useMessengerChannelList.ts"],"names":["props","dispatch","useAuthContext","windowType","useResizeWindow","defaultButtonProps","title","lang","onPress","type","buttonProps","extra","concat","_toConsumableArray","filter","v","undefined","React","createElement","View","style","flexDirection","map","k","TextButton","_extends","key","textStyle","color","Styles","StyleSheet","create","login_container","flex","backgroundColor","login_header","alignItems","paddingTop","paddingBottom","login_header_logo","width","resizeMode","login_header_text","marginTop","fontSize","login_header_text_bold","fontWeight","login_wrapper","justifyContent","paddingVertical","borderTopRightRadius","borderTopLeftRadius","form","maxWidth","form_input","height","paddingHorizontal","marginBottom","borderRadius","button","button_label","login_social","login_social_separator","login_social_separator_line","login_social_separator_text","marginHorizontal","login_social_buttons","login_social_button","borderWidth","borderColor","login_social_icon","login_social_facebook","login_footer_text","guest_footer_text","alignSelf","margin","login_footer_link","CommonSection","styles","outerContainer","outerContainerStyle","container","containerStyle","withSeparator","separator","lightColor","darkColor","titleView","Text","titleStyle","subtitle","bodyView","bodyStyle","children","marginVertical","textAlign","padding","Colors","useMessengerContentList","channel_id","queryClient","useQueryClient","_useInfiniteQuery","useInfiniteQuery","_ref","pageParam","_regeneratorRuntime","async","_context","prev","next","abrupt","getMessengerContentList","then","current","stop","Promise","select","data","pages","length","getNextPageParam","lastPage","id","refetchOnReconnect","refetchOnWindowFocus","fetchNextPage","lastJsonMessage","useWebsocketContext","useEffect","setQueryData","_data","_objectSpread","pageParams","useMessengerMemberList","useQuery","awrap","getMessengerMemberList","sent","useMessengerMemberMutation","invite","useMutation","postBulkMessengerMember","onSuccess","invalidateQueries","leave","deleteMessengerMember","mutate","link","isMobile","hideUrl","align","TouchableOpacity","Linking","openURL","url","image","Image","source","uri","maxHeight","description","WebSocketContext","createContext","sendJsonMessage","WebSocketProvider","disable","Fragment","WebSocketInternalProvider","path","Context","useBackground","useContext","console","log","peerConstraints","iceServers","JSON","parse","sessionConstraints","mandatory","OfferToReceiveAudio","OfferToReceiveVideo","VoiceActivityDetection","mediaConstraints","audio","video","framerate","onICEcandidate","pc","message","_message","rtcMessage","candidate","RTCIceCandidate","addIceCandidate","sendICEcandidate","event","sendMessage","receiver","target","optimizeSdp","offerDescription","arr","sdp","split","forEach","str","i","test","RTCSessionDescription","join","createOffer","pcRefCurrent","stream","user","addStream","t0","t1","setLocalDescription","name","camStyle","cam","bottonContainer","position","bottom","buttonBar","label","_props$user","_useWebsocketContext","_useLocalCam","pcRef","useRef","_useState","useState","_useState2","_slicedToArray","sender","setSender","_useState3","_useState4","_stream","setStream","isPlay","useMemo","CustomRTCView","useCallback","memo","RTCView","videoProps","start","mode","newStream","_context2","mediaDevices","getUserMedia","getDisplayMedia","catch","e","Object","entries","_ref2","_ref3","error","getTracks","track","websocketOnMessage","response","peerConnection","_peerConnection","answerDescription","_peerConnection2","_context3","channel_name","RTCPeerConnection","addEventListener","setRemoteDescription","useLocalCam","Button","setReceiver","_useRemoteCam","_useState5","_useState6","setUser","_useState7","_useState8","close","clearInterval","statsInterval","_pcRef$current","_pcRef$current2","_pcRef$current3","_pcRef$current4","streams","_peerConnection3","_answerDescription","_streams","_context5","iceConnectionState","activeStream","setInterval","stats","statsOutput","framePerSecond","_context4","getStats","report","kind","keys","statName","framesPerSecond","Date","toTimeString","addTransceiver","direction","getRemoteStreams","createAnswer","localDescription","useRemoteCam","TextInput","value","onChangeText","VideoView","scale","flexGrow","focusGuest","setFocusGuest","VideoCallContainer","_auth$user","setDisable","auth","videoMode","setVideoMode","guests","setGuests","_useRtcContext","useRtcContext","find","Math","max","ceil","sqrt","toggleVideoMode","ThemedView","aspectRatio","flexShrink","borderLeftWidth","borderBottomWidth","flexWrap","RemoteCam","LocalCam","CommonButton","RtcProvider","humanFileSize","size","floor","pow","toFixed","MessengerContentPageItem","_nextPage2","useIsMobile","nextPage","_nextPage","nextContent","content","index2","created","slice","date","isSystem","isFirst","isSelf","ownerId","dayChanged","message_set","marginLeft","Avatar","userId","Hyperlink","linkDefault","wordBreak","linkStyle","selectable","link_set","linkIndex","LinkPreview","file","filename","filesize","Panel_Button_Text","Panel_Holder","RowField","rowStyle","TextField","CommonTextInput","field","InviteItem","selectedRef","has","item","selected","setSelected","renderMemberItem","delete","add","main","HomeScreen","component","_route$params2","navigation","route","theme","useColorScheme","text","options","headerRight","HeaderRight","navigate","useLayoutEffect","_route$params","index","params","tab","setOptions","StyledText","paddingLeft","TabViewNavigator","tabs","bottomTabs","tabBarPosition","parseInt","onTab","setParams","ChatScreen","_useMessengerChannelL","inputRef","channel","useMessengerChannelList","_useMessengerContentL","memberList","member_id","_memberList$find","messengerMemberMutation","setValue","autoFocus","setAutoFocus","postValue","_auth$user2","contentMutation","postMessage","_delete","deleteMessengerContent","d","variables","useMessengerContentMutation","back","renderItem","_auth$user3","canGoBack","goBack","focus","VideoCallSection","minWidth","FlatList","contentContainerStyle","onScroll","nativeEvent","contentOffset","y","contentSize","onLayout","p","layout","ref","background","onSubmitEditing","blurOnSubmit","resolve","reject","Platform","OS","input","document","onchange","files","onabort","onerror","click","f","_auth$user4","newFile","TabOneScreen","login","LoginScreen","username","setUsername","password","setPassword","_login","placeholder","autoCapitalize","keyboardType","secureTextEntry","modal","ChannelEditScreen","channelList","channelMutation","useMessengerChannelMutation","setName","setDescription","multiline","groupId","newChannel","owner","group","update","screen","replace","InviteScreen","userList","useUserMembershipList","Set","memberSet","user_ids","ProfileScreen","Profile","counterpart","direct","_split","_split2","SCHEMA","DOMAIN","token","setToken","AppState","currentState","isActive","setIsActive","_useWebSocket","useWebSocket","shouldReconnect","closeEvent","protocols","onOpen","onClose","AsyncStorage","getItem","onChange","nextState","removeEventListener","Provider","getNotification","user_id","axios","get","postNotification","notification","post","putNotification","put","useMobileDetect","CommonItem","_React$useState","_React$useState2","setHover","_React$useState3","_React$useState4","press","setPress","Pressable","onPressIn","onPressOut","onHoverIn","onHoverOut","minHeight","getUserMembershipList","normalizeHash","hash","min","initHash","charCodeAt","abs","stringToHSL","toUpperCase","DrawerTab","Messenger","useMessengerChannelSorted","MessengerIcon","Ionicons","OneTab","MemberTab","icon","MemberIcon","TwoTab","today","toISOString","_item$last_message","_item$last_message2","_item$last_message3","last_message","FontAwesome","marginRight","opacity","member_count","unread_count","drawerTabs","memberItem","MaterialCommunityIcons","setIndex","icons","assign","apply","_defineProperty","TabView","renderTabBar","TabBar","indicatorStyle","activeColor","inactiveColor","renderIcon","scene","onTabPress","findIndex","_ref4","_ref5","navigationState","routes","_ref6","_ref7","onIndexChange","renderScene","SceneMap","_ref8","_ref9","onAddList","_ref11","colors","useTheme","tabBar","card","borderTopColor","border","pointerEvents","accessibilityRole","borderTopWidth","values","drawerTab","Tab","elevation","borderRightWidth","_useAuthContext","patchUser","finally","disabled","onBlur","onEndEditing","contentHeight","setContentHeight","editable","onContentSizeChange","useThemeColor","colorName","colorFromProps","otherProps","_objectWithoutProperties","_excluded","light","dark","DefaultText","_excluded2","DefaultView","translations","ko","require","_RNLocalize$findBestL","RNLocalize","languageTag","isRTL","I18nManager","forceRTL","intl","createIntl","defaultLocale","locale","messages","createIntlCache","formatMessage","defaultMessage","toString","ROOTPATH","prefixes","config","screens","Main","NotFound","accountURL","defaultOption","baseURL","withCredentials","headers","_axios","interceptors","request","use","status","getToken","r","defaults","setItem","removeItem","tint","tabIconDefault","tabIconSelected","header","buttonColor","buttonBackgroundColor","NotFoundScreen","linkText","firebaseConfig","messagingSenderId","apiKeyEncrypted","padStart","app","firebase","initializeApp","apiKey","messaging","onMessage","payload","window","Notification","permission","body","alert","FirebaseContext","enable","setEnable","FirebaseProvider","tokenRef","setNotification","isMount","setNotificationInternal","n","serviceWorkerRegistration","currentToken","requestPermission","navigator","serviceWorker","register","process","scope","vapidKey","preventDefault","unregister","requestToken","t","noti","innerHeight","setHeight","Dimensions","Root","createStackNavigator","QueryClient","RootNavigator","MobileSafeAreaView","AuthProvider","QueryClientProvider","client","Navigator","headerMode","screenOptions","cardStyle","animationEnabled","cardStyleInterpolator","CardStyleInterpolators","forVerticalIOS","Screen","MainNavigator","headerShown","gestureDirection","DrawerNavigator","headerStyle","headerTitleStyle","headerLeft","canGOBackScreen","headerLeftContainerStyle","forHorizontalIOS","App","isLoadingComplete","setLoadingComplete","SplashScreen","Font","font","warn","finish","useCachedResources","colorScheme","SafeAreaProvider","Navigation","StatusBar","AuthContext","authReducer","initialState","action","Error","_useReducer","useReducer","_useReducer2","authState","_authState$user","_authState$user$membe","membership_set","g","root_group_id","checkLogin","logout","module","exports","navigationRef","_navigationRef$curren","_navigationRef$curren2","NavigationContainer","documentTitle","formatter","linking","versions","LinkingConfiguration","DarkTheme","DefaultTheme","l","search","decoded","s","history","replaceState","pathname","location","ignoreWarnings","_console","_","clone","indexOf","endsWith","guestLogin","checkLoginToken","_await$axios$get","isOffline","code","startsWith","getUserList","group_id","_context6","_context7","patch","ids","updated","_context8","getMessengerChannelList","postChannel","postDirectChannel","putChannel","deleteChannel","id_lt","id_lt_param","_context9","results","formData","_context10","FormData","append","content_id","_context11","DefaultButton","hover","_props","getWindowType","detectMobile","setWindowType","_useColorScheme","sort","a","b","_data2$message_set$","_a$last_message","_b$last_message","mutateAsync"],"mappings":"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","file":"static/js/app.602f6799.chunk.js","sourcesContent":["import React from 'react'\r\nimport TextButton from \"./TextButton\"\r\nimport useAuthContext from \"../hooks/useAuthContext\"\r\nimport useResizeWindow from '../hooks/useResizeWindow'\r\nimport { View } from 'react-native'\r\nimport lang from '../lang'\r\n\r\ntype ButtonProps = {title:string, onPress:()=>void, windowType?:'landscape'|'portrait'}\r\n\r\nexport default (props:{extra?:ButtonProps[]})=>{\r\n    const {dispatch} = useAuthContext()\r\n    const windowType = useResizeWindow()\r\n    const defaultButtonProps:ButtonProps[] = [{title:lang('sign out'), onPress:()=>dispatch({type:\"LOGOUT_REQUEST\"})}]\r\n    const buttonProps = (props.extra?[...props.extra, ...defaultButtonProps]:defaultButtonProps).filter(v=>v.windowType==windowType || v.windowType == undefined)\r\n    return<View style={{flexDirection:'row'}}>\r\n        {buttonProps.map((v,k)=><TextButton key={k} {...v} textStyle={{color:'white'}} color='#gray'/>)}\r\n    </View>\r\n}\r\n  ","import React, {useLayoutEffect, useState} from 'react';\r\nimport {\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  View,\r\n  StyleSheet,\r\n} from 'react-native';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport useAuthContext from '../../hooks/useAuthContext';\r\nimport lang from '../../lang'\r\n\r\nexport default function LoginScreen({\r\n  navigation, route\r\n}: StackScreenProps<any, 'Login'>) {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const {dispatch} = useAuthContext()\r\n  const _login = ()=>dispatch({type:'LOGIN_REQUEST', username, password})\r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      headerRight: undefined\r\n    });\r\n  }, [navigation, route]);\r\n\r\n  return (\r\n    <View style={Styles.login_wrapper}>\r\n      <View style={Styles.form}>\r\n        <TextInput\r\n          style={Styles.form_input}\r\n          value={username}\r\n          placeholder={lang('Username')}\r\n          onChangeText={(text) => setUsername(text)}\r\n          autoCapitalize={'none'}\r\n          keyboardType={'email-address'}\r\n          onSubmitEditing={_login}\r\n        />\r\n        <TextInput\r\n          style={Styles.form_input}\r\n          value={password}\r\n          placeholder={lang('Password')}\r\n          secureTextEntry\r\n          onChangeText={(text) => setPassword(text)}\r\n          onSubmitEditing={_login}\r\n        />\r\n        <TouchableOpacity onPress={_login}>\r\n          <View style={Styles.button}>\r\n            <Text style={Styles.button_label}>{lang('Sign in')}</Text>\r\n          </View>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity onPress={() => dispatch({type:\"LOGIN_GUEST\"})}>\r\n          <Text style={Styles.guest_footer_text}>\r\n            {lang(\"Sign in as guest\")}\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      <View style={Styles.login_social}>\r\n        <View style={Styles.login_social_separator}>\r\n          <View style={Styles.login_social_separator_line} />\r\n          <Text style={Styles.login_social_separator_text}>{'*'}</Text>\r\n          <View style={Styles.login_social_separator_line} />\r\n        </View>\r\n        <View style={Styles.login_social_buttons}>\r\n        </View>\r\n      </View>\r\n      {/* <>\r\n        <TouchableOpacity onPress={() => navigate(\"RegistrationScreen\")}>\r\n          <Text style={Styles.login_footer_text}>\r\n            {\"Don't have an account? \"}\r\n            <Text style={Styles.login_footer_link}>{'Sign up'}</Text>\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </> */}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst Styles = StyleSheet.create({\r\n    login_container: {\r\n      flex: 1,\r\n      backgroundColor: '#FFF',\r\n    },\r\n    login_header: {\r\n      alignItems: 'center',\r\n      paddingTop: 30,\r\n      paddingBottom: 50,\r\n      backgroundColor: '#208AEC',\r\n    },\r\n    login_header_logo: {\r\n      width: 220,\r\n      resizeMode: 'contain',\r\n    },\r\n    login_header_text: {\r\n      marginTop: 15,\r\n      color: '#f0f0f0',\r\n      fontSize: 16,\r\n    },\r\n    login_header_text_bold: {\r\n      color: '#fff',\r\n      fontWeight: 'bold',\r\n    },\r\n    login_wrapper: {\r\n      flex: 1,\r\n      justifyContent: 'space-between',\r\n      paddingVertical: 40,\r\n      borderTopRightRadius: 12,\r\n      borderTopLeftRadius: 12,\r\n      marginTop: -10,\r\n      backgroundColor: '#fff',\r\n      alignItems: 'center',\r\n    },\r\n    form: {\r\n      width: '100%',\r\n      maxWidth: 280,\r\n    },\r\n    form_input: {\r\n      height: 44,\r\n      paddingHorizontal: 20,\r\n      marginBottom: 20,\r\n      backgroundColor: '#EDF0F7',\r\n      borderRadius: 50,\r\n    },\r\n    button: {\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      height: 44,\r\n      backgroundColor: '#0065A4',\r\n      borderRadius: 50,\r\n    },\r\n    button_label: {\r\n      color: '#fff',\r\n      fontSize: 16,\r\n    },\r\n    login_social: {\r\n      width: '100%',\r\n      maxWidth: 280,\r\n      marginTop: 20,\r\n    },\r\n    login_social_separator: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n    },\r\n    login_social_separator_line: {\r\n      flex: 1,\r\n      width: '100%',\r\n      height: 1,\r\n      backgroundColor: '#E0E0E0',\r\n    },\r\n    login_social_separator_text: {\r\n      marginHorizontal: 10,\r\n      color: '#808080',\r\n      fontSize: 16,\r\n    },\r\n    login_social_buttons: {\r\n      flexDirection: 'row',\r\n      justifyContent: 'center',\r\n      marginTop: 20,\r\n    },\r\n    login_social_button: {\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      width: 60,\r\n      height: 60,\r\n      marginHorizontal: 12,\r\n      borderWidth: 1,\r\n      borderColor: '#E7E7E7',\r\n      borderRadius: 60,\r\n    },\r\n    login_social_icon: {\r\n      width: 38,\r\n      height: 38,\r\n      resizeMode: 'contain',\r\n    },\r\n    login_social_facebook: {\r\n      backgroundColor: '#4267B2',\r\n      borderColor: '#4267B2',\r\n    },\r\n    login_footer_text: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      color: '#808080',\r\n      fontSize: 14,\r\n    },\r\n    guest_footer_text: {\r\n      flexDirection: 'row',\r\n      alignSelf: 'center',\r\n      color: '#808080',\r\n      fontSize: 15,\r\n      margin: 15\r\n    },\r\n    login_footer_link: {\r\n      color: '#208AEC',\r\n      fontSize: 15,\r\n      fontWeight: 'bold',\r\n    },\r\n  });\r\n  ","import * as React from 'react';\r\nimport { View, Text } from './Themed';\r\nimport { StyleSheet, StyleProp, ViewStyle, TextStyle } from 'react-native';\r\nimport Colors from '../constants/Colors';\r\n\r\nexport type SectionParamList = {\r\n    title?: string,\r\n    titleStyle?:StyleProp<TextStyle>\r\n    outerContainerStyle?:StyleProp<TextStyle>\r\n    containerStyle?:StyleProp<ViewStyle>\r\n    bodyStyle?:StyleProp<ViewStyle>\r\n    subtitle?: string\r\n    withSeparator?: boolean\r\n    children?: React.ReactNode\r\n}\r\n\r\nexport default function CommonSection(props:SectionParamList){\r\n  return (\r\n    <View style={[styles.outerContainer, props.outerContainerStyle]}>\r\n        <View style={[styles.container, props.containerStyle]}>\r\n            {props.withSeparator?<View style={styles.separator} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />:undefined}\r\n            {props.title?<View style={styles.titleView}>\r\n              <Text style={[styles.title, props.titleStyle]}>{props.title}</Text>\r\n              <Text style={styles.subtitle}>{props.subtitle}</Text>\r\n            </View>:undefined}\r\n            <View style={[styles.bodyView, props.bodyStyle]}>\r\n            {props.children}\r\n            </View>\r\n          </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  outerContainer:{\r\n    width:'100%',\r\n    maxWidth:1080,\r\n    alignItems:'stretch',\r\n    backgroundColor:'transparent'\r\n  },  \r\n  container: {\r\n      marginHorizontal:20,\r\n      marginVertical: 10,\r\n      backgroundColor:'transparent',\r\n    },\r\n    titleView:{\r\n      width: '100%',\r\n      flexDirection:'row',\r\n      backgroundColor:'transparent',\r\n      marginBottom:5,\r\n    },\r\n    title: {\r\n      flex:1,\r\n      fontSize: 16,\r\n    },\r\n    subtitle: {\r\n      flex:1,\r\n      fontSize: 12,\r\n      textAlign: 'right',\r\n      marginTop:4\r\n    },\r\n    separator: {\r\n      marginBottom: 20,\r\n      height: 1,\r\n      width: '100%',\r\n    },\r\n    bodyView:{\r\n      width: '100%',\r\n      padding: 20,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      borderWidth:1,\r\n      borderColor:Colors.borderColor,\r\n      borderRadius:6\r\n    }\r\n  });\r\n  ","import { useCallback, useEffect, useState } from \"react\"\r\nimport { InfiniteData, useInfiniteQuery, useMutation, useQueryClient } from \"react-query\"\r\nimport { getMessengerContentList, postMessage, deleteMessengerContent } from \"../../apis\"\r\nimport { MessengerContent } from \"../../types\"\r\nimport useWebsocketContext from \"../useWebsocketContext\"\r\n\r\nexport type MessengerContentPage = {\r\n  next?:MessengerContentPage\r\n  current:MessengerContent[]\r\n}\r\n\r\nexport default function useMessengerContentList(channel_id:number){  \r\n  const queryClient = useQueryClient()\r\n  const { data, fetchNextPage } = useInfiniteQuery<MessengerContentPage>(\r\n    [\"MessengerContentList\", channel_id], \r\n    async({pageParam})=>getMessengerContentList(channel_id, pageParam).then(current=>({current})), \r\n    {\r\n      select:data=>{\r\n        if(data.pages.length > 1)\r\n          data.pages[data.pages.length - 2].next = data.pages[data.pages.length - 1]\r\n        return data;\r\n      },\r\n      getNextPageParam:(lastPage)=>lastPage?.current.length?lastPage.current[lastPage.current.length - 1].id:undefined,\r\n      refetchOnReconnect:false,\r\n      refetchOnWindowFocus:false\r\n    }\r\n  )\r\n  const { lastJsonMessage } = useWebsocketContext()\r\n  useEffect(()=>{\r\n    if(lastJsonMessage !=null && lastJsonMessage['type']=='next_message' && lastJsonMessage['data']['channel'] == channel_id){\r\n      queryClient.setQueryData<InfiniteData<MessengerContentPage>>([\"MessengerContentList\", channel_id], (_data)=>{\r\n        if(_data?.pages[0].current && _data?.pages[0].current[0].id != lastJsonMessage['data'].id)\r\n          _data.pages[0].current = [lastJsonMessage['data'], ..._data?.pages[0].current]\r\n        return {...(_data || {pages:[], pageParams:[]})}\r\n      })\r\n    }\r\n  }, [lastJsonMessage])\r\n  return { data, fetchNextPage }\r\n}\r\n\r\nexport function useMessengerContentMutation(){\r\n  // const queryClient = useQueryClient()\r\n  const create = useMutation(postMessage, {\r\n    onSuccess: () => {\r\n      // queryClient.setQueryData(['MessengerContentList'], (data:any) => ({\r\n      //   pages: data.pages.slice(0, 1),\r\n      //   pageParams: data.pageParams.slice(0, 1),\r\n      // }))\r\n      // queryClient.invalidateQueries(\"MessengerContentList\")\r\n    }\r\n  });\r\n  const _delete = useMutation(deleteMessengerContent, {\r\n    onSuccess: (d, variables) => {\r\n      // queryClient.setQueryData(['MessengerContentList'], (data:any) => ({\r\n      //   pages: (data.pages as MessengerContent[][]).map(v=>v.filter(v2=>v2.id != variables)),\r\n      //   pageParams: data.pageParams,\r\n      // }))\r\n    }\r\n  })\r\n  return { create:create.mutate, delete:_delete.mutate }\r\n}","import { useMutation, useQuery, useQueryClient } from \"react-query\";\r\nimport { postBulkMessengerMember, deleteMessengerMember, getMessengerMemberList } from \"../../apis\";\r\n\r\nexport default function useMessengerMemberList(channel_id:number){\r\n  const { data } = useQuery([\"MessengerMemberList\", channel_id] , async()=>await getMessengerMemberList(channel_id))\r\n  return data\r\n}\r\n\r\n\r\nexport function useMessengerMemberMutation(){\r\n  const queryClient = useQueryClient()\r\n  const invite = useMutation(postBulkMessengerMember, {\r\n    onSuccess: ()=>{\r\n      queryClient.invalidateQueries(\"MessengerMemberList\")\r\n    }\r\n  })\r\n\r\n  const leave = useMutation(deleteMessengerMember, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(\"MessengerChannelList\")\r\n      queryClient.invalidateQueries(\"MessengerMemberList\")\r\n    }\r\n  })\r\n  return {invite:invite.mutate, leave:leave.mutate}\r\n}","import React from 'react'\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport CommonSection from \"./CommonSection\"\r\nimport { Image, Linking, TextStyle } from \"react-native\"\r\nimport { View, Text } from \"./Themed\"\r\nimport { Link } from \"../types\"\r\n\r\n\r\n\r\nexport default ({link, isMobile, hideUrl, align}:{link:Link, isMobile:boolean, hideUrl?:boolean, align?:TextStyle['textAlign']})=>{\r\n    return <CommonSection containerStyle={{marginHorizontal:0}} bodyStyle={{padding:0}}>\r\n    <TouchableOpacity onPress={()=>Linking.openURL(link.url)} style={{flexDirection:'row'}} containerStyle={{width:'100%'}}>\r\n        {link.image && <Image source={{uri:link.image}} resizeMode=\"cover\" style={{ width:'100%', maxWidth:isMobile?120:150, maxHeight:isMobile?120:150, borderWidth:1}}/>}\r\n        <View style={{flex:1, marginHorizontal:20}}>\r\n        <Text style={{fontSize:20}}>{link.title}</Text>\r\n        <Text style={{fontSize:14, textAlign:align}}>{link.description}</Text>\r\n        {hideUrl!=true && <Text style={{fontSize:12}}>{link.url}</Text>}\r\n        </View>\r\n    </TouchableOpacity>\r\n    </CommonSection>\r\n}","import React, { createContext, useContext } from \"react\"\r\nimport { SendJsonMessage } from \"react-use-websocket/dist/lib/types\";\r\nimport { WebSocketInternalProvider } from \"../../hooks/useWebsocketContext\";\r\n\r\nconst WebSocketContext = createContext<{lastJsonMessage:any, sendJsonMessage:SendJsonMessage }>({lastJsonMessage:undefined, sendJsonMessage:()=>{}});\r\n\r\nexport const WebSocketProvider = ({disable, children}:{disable?:boolean, children:React.ReactNode})=>{\r\n  return disable?<></>:<WebSocketInternalProvider path={'messenger/ws/rtc/'} Context={WebSocketContext} useBackground>\r\n    {children}\r\n  </WebSocketInternalProvider>\r\n}\r\n\r\nexport default ()=>{\r\n  const webSocketContext = useContext(WebSocketContext)\r\n  return webSocketContext\r\n}\r\n\r\n","import React, { useCallback, useRef, useState, useMemo } from \"react\";\r\n//@ts-ignore\r\nimport { RTCView, mediaDevices, RTCPeerConnection, MediaStream, RTCSessionDescription, RTCIceCandidate } from \"react-native-webrtc-web-shim\";\r\n// @ts-ignore\r\nimport {TURN_SERVER} from \"@env\"\r\n\r\n\r\nconsole.log(TURN_SERVER?\"use turn server\": \"use stun server\")\r\n\r\nexport const peerConstraints = {\r\n\ticeServers: [TURN_SERVER?JSON.parse(TURN_SERVER):{urls: 'stun:stun.l.google.com:19302'}]\r\n};\r\n\r\nexport const sessionConstraints = {\r\n\tmandatory: {\r\n\t\tOfferToReceiveAudio: true,\r\n\t\tOfferToReceiveVideo: true,\r\n\t\tVoiceActivityDetection: true\r\n\t}\r\n};\r\n\r\nconst mediaConstraints = {audio:true, video:{framerate:30}}\r\n\r\n//@ts-ignore\r\nexport {MediaStream, RTCPeerConnection, RTCSessionDescription} from \"react-native-webrtc-web-shim\";\r\n\r\nconst onICEcandidate = (pc:typeof RTCPeerConnection, message:any)=>{\r\n\tconst _message = message.data.rtcMessage\r\n\t\tconst candidate = new RTCIceCandidate(_message);\r\n\t\tif (pc) {\r\n\t\t\tconsole.log(\"ICE candidate Added\");\r\n\t\t\tpc.addIceCandidate(candidate);\r\n\t\t}\r\n}\r\n\r\nconst sendICEcandidate = (event:any, sendMessage:(data:any)=>void, receiver:string, target:string) => {\r\n\t// When you find a null candidate then there are no more candidates.\r\n\t// Gathering of candidates has finished.\r\n\tif ( !event.candidate ) { return; };\r\n\t// Send the event.candidate onto the person you're calling.\r\n\t// Keeping to Trickle ICE Standards, you should send the candidates immediately.\r\n\tsendMessage({type:'ICEcandidate', receiver, data:{target, rtcMessage:event.candidate}})\r\n  }\r\n\r\nconst BAND_WIDTH = 8000\r\n\r\nconst optimizeSdp = (offerDescription:RTCSessionDescription)=>{\r\n\tvar arr = offerDescription.sdp.split('\\r\\n');\r\n\tarr.forEach((str:string, i:number) => {\r\n\t\tif (/^a=fmtp:\\d*/.test(str)) {\r\n\t\t\tarr[i] = str + `;x-google-max-bitrate=${BAND_WIDTH};x-google-min-bitrate=${BAND_WIDTH};x-google-start-bitrate=${BAND_WIDTH}`;\r\n\t\t} else if (/^a=mid:(0|video)/.test(str)) { // if with audio then 0=>1\r\n\t\t\tarr[i] += `\\r\\nb=AS:${BAND_WIDTH}`;\r\n\t\t}\r\n\t});\r\n  \treturn new RTCSessionDescription({\r\n    \ttype: offerDescription.type,\r\n    \tsdp: arr.join('\\r\\n'),\r\n  \t})\r\n}\r\n\r\nconst createOffer = async(pcRefCurrent:{pc?:typeof RTCPeerConnection, receiver:string}, sendMessage:(data:any)=>void, stream:typeof MediaStream, target:string, user?:{name:string})=>{\r\n\tstream && pcRefCurrent.pc.addStream( stream );\r\n\tconst offerDescription = optimizeSdp((await pcRefCurrent.pc.createOffer( sessionConstraints )));\r\n\tawait pcRefCurrent.pc.setLocalDescription( offerDescription );\r\n\tsendMessage({type:'call', receiver:pcRefCurrent.receiver, data:{target, name:user?.name, rtcMessage:offerDescription}})\r\n}\r\n\r\nexport const useLocalCam = (sendMessage:(data:any)=>void)=>{\r\n\tconst pcRef = useRef<Record<number,{pc:typeof RTCPeerConnection, receiver:string}>>({})\r\n\tconst [sender, setSender] = useState<string>()\r\n\tconst [_stream, setStream] = useState<MediaStream>()\r\n\tconst isPlay = useMemo(()=>_stream?true:false, [_stream])\r\n\tconst CustomRTCView = useCallback(React.memo(({style}:{style:any})=>(_stream?<RTCView stream={_stream} style={style} videoProps={{height:'100%'}} />:<></>)) , [_stream])\r\n\tconst start = useCallback(async(user:{name:string}, stream?:typeof MediaStream, mode?:'camera'|'display')=>{\r\n\t\tconsole.log(\"start\");\r\n\t\tif (!_stream || mode!==undefined) {\r\n\t\t\ttry {\r\n\t\t\t\tlet newStream:typeof MediaStream;\r\n\t\t\t\tif(mode == 'camera'){\r\n\t\t\t\t\tnewStream = await mediaDevices.getUserMedia(mediaConstraints)\r\n\t\t\t\t}\r\n\t\t\t\telse if (mode == 'display'){\r\n\t\t\t\t\tnewStream = await mediaDevices.getDisplayMedia(mediaConstraints)\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tnewStream = stream || await mediaDevices.getUserMedia(mediaConstraints).catch((e:any)=>mediaDevices.getDisplayMedia(mediaConstraints));\r\n\t\t\t\t}\r\n\t\t\t\tsetStream(newStream)\r\n\t\t\t\tObject.entries(pcRef.current).map(([k, v])=>{\r\n\t\t\t\t\tcreateOffer(v, sendMessage, newStream, 'guest', user)\r\n\t\t\t\t})\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.error(e);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [_stream])\r\n\tconst stop = useCallback(()=>{\r\n\t\tconsole.log(\"stop\");\r\n\t\tif(_stream){\r\n\t\t\t_stream.getTracks().map((track:any) => track.stop());\r\n\t\t\tsetStream(undefined)\r\n\t\t}\r\n\t}, [_stream])\r\n\treturn {\r\n\t\tstart,\r\n\t\tstop,\r\n\t\twebsocketOnMessage: async(response:any, user:{name:string})=>{\r\n\t\t\tlet type = response.type;\r\n\t\t\tif (type == 'connection'){\r\n\t\t\t\tsetSender(response.data.channel_name)\r\n\t\t\t}\r\n\t\t\tif (type == 'start' && response.data.target=='host'){\r\n\t\t\t  console.log('1 start')\r\n\t\t\t  const peerConnection = new RTCPeerConnection( peerConstraints );\r\n\t\t\t  peerConnection.addEventListener( 'icecandidate', (event:any) => sendICEcandidate(event, sendMessage, response.sender, 'guest'));\r\n\t\t\t  pcRef.current[response.sender] = {pc:peerConnection, receiver: response.sender}\r\n\t\t\t  createOffer(pcRef.current[response.sender], sendMessage, _stream, 'guest', user)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (type == \"answer\" && response.data.target == 'host'){\r\n\t\t\t  console.log('3 answer')\r\n\t\t\t  const peerConnection = pcRef.current[response.sender].pc\r\n\t\t\t  const answerDescription = new RTCSessionDescription(response.data.rtcMessage);\r\n\t\t\t  await peerConnection.setRemoteDescription( answerDescription );\r\n\t\t\t  // const streams = pcRef.current.pc.getRemoteStreams()\r\n\t\t\t  // setMirrorStream(streams[streams.length - 1])\r\n\t\t\t}\r\n\t\t\tif (type == \"ICEcandidate\" && response.data.target=='host'){\r\n\t\t\t\tconst peerConnection = pcRef.current[response.sender].pc\r\n\t\t\t\tonICEcandidate(peerConnection, response)\r\n\t\t\t}\r\n\t\t},\r\n\t\tCustomRTCView,\r\n\t\tisPlay,\r\n\t\tsender,\r\n\t\t// renderMirrorView,\r\n\t}\r\n}\r\n\r\nexport const useRemoteCam = (sendMessage:(data:any)=>void)=>{\r\n\tconst pcRef = useRef<{pc?:RTCPeerConnection, receiver?:string, statsInterval?:any}>({})\r\n\tconst [user, setUser] = useState<{name:string}>()\r\n\tconst [_stream, setStream] = useState<MediaStream>()\r\n\tconst CustomRTCView = useCallback(React.memo((style:any)=>_stream?<RTCView stream={_stream} style={style} videoProps={{height:'100%'}} />:<></>), [_stream])\r\n\tconst isPlay = useMemo(()=>_stream?true:false, [_stream])\r\n\tconst start = useCallback((receiver:string)=>{\r\n\t\tconsole.log(\"start\");\r\n\t\tif (!pcRef.current.pc) {\r\n\t\t  pcRef.current.pc = new RTCPeerConnection( peerConstraints );\r\n\t\t  pcRef.current.receiver = receiver\r\n\t\t}\r\n\t\tif (!_stream){\r\n\t\t\tsendMessage({type:'start', receiver, data:{'target': 'host'}})\r\n\t\t}\r\n\t}, [_stream])\r\n\tconst stop = () => {\r\n\t\tconsole.log(\"stop\");\r\n\t\tif (pcRef.current.pc) {\r\n\t\t  // peerConnection._unregisterEvents();\r\n\t\t  setStream(undefined)\r\n\t\t  pcRef.current.pc.close();\r\n\t\t  pcRef.current.pc = undefined\r\n\t\t  pcRef.current.receiver = undefined\r\n\t\t  clearInterval(pcRef.current.statsInterval)\r\n\t\t}\r\n\t}\r\n\treturn {\r\n\t\tstart,\r\n\t\tstop,\r\n\t\twebsocketOnMessage: async(response:any)=>{\r\n\t\t\tlet type = response.type;\r\n\t\t\tif (type == 'start' && response.data.target=='guest' && response.sender == pcRef.current?.receiver){\r\n\t\t\t\tconsole.log('(remote)1 start')\r\n\t\t\t\tconst peerConnection = pcRef.current.pc\r\n\t\t\t\tsetUser({name: response.data.name})\r\n\t\t\t\tpeerConnection.addEventListener('icecandidate', (event:any) => sendICEcandidate(event, sendMessage, response.sender, 'host'));\r\n\t\t\t\tpeerConnection.addEventListener('iceconnectionstatechange', (e:any)=>{\r\n\t\t\t\t\tif (pcRef.current.pc.iceConnectionState == 'connected'){\r\n\t\t\t\t\t\tlet activeStream = false\r\n\t\t\t\t\t\tpcRef.current.statsInterval = setInterval(async()=>{\r\n\t\t\t\t\t\t\tconst stats = await pcRef.current.pc.getStats(null)\r\n\t\t\t\t\t\t\tlet statsOutput = \"\";\r\n\t\t\t\t\t\t\tlet framePerSecond = undefined\r\n\t\t\t\t\t\t\tstats.forEach((report:any) => {\r\n\t\t\t\t\t\t\t\tif (report.type === \"inbound-rtp\" && report.kind === \"video\") {\r\n\t\t\t\t\t\t\t\t\tObject.keys(report).forEach((statName) => {\r\n\t\t\t\t\t\t\t\t\t\tstatsOutput += `${statName}: ${report[statName]}\\n`;\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tframePerSecond = report.framesPerSecond\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tconsole.log(activeStream, framePerSecond)\r\n\t\t\t\t\t\t\tif (framePerSecond != undefined){\r\n\t\t\t\t\t\t\t\tactiveStream = true\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (activeStream){\r\n\t\t\t\t\t\t\t\tstop()\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tconsole.log(new Date().toTimeString().split(' ')[0], statsOutput)\r\n\t\t\t\t\t\t}, 1000);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (pcRef.current.pc.iceConnectionState == 'failed'){\r\n\t\t\t\t\t\tstop()\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t// peerConnection.addTransceiver('audio', {\r\n\t\t\t\t// \tdirection: 'recvonly'\r\n\t\t\t\t// });\r\n\t\t\t\tpeerConnection.addTransceiver('video', {\r\n\t\t\t\t\tdirection: 'recvonly'\r\n\t\t\t\t});\r\n\t\t\t\tawait createOffer({pc:pcRef.current.pc, receiver:response.sender}, sendMessage, _stream, 'host', user)\r\n\t\t\t}  \r\n\t\t\tif (type == \"answer\" && response.data.target=='guest' && response.sender == pcRef.current?.receiver){\r\n\t\t\t\tconsole.log('(remote)3 answer')\r\n\t\t\t\tconst answerDescription = new RTCSessionDescription(response.data.rtcMessage);\r\n\t\t\t\tawait pcRef.current.pc.setRemoteDescription( answerDescription );\r\n\t\t\t\tconst streams = pcRef.current.pc.getRemoteStreams()\r\n\t\t\t\tsetStream(streams[streams.length - 1])\r\n\t\t\t\tsendMessage({type:'end', receiver:pcRef.current.receiver, data:{}})\r\n\t\t\t}\r\n\t\t\tif (type == \"call\" && response.sender == pcRef.current?.receiver){\r\n\t\t\t  console.log('2 call')\r\n\t\t\t  const peerConnection = pcRef.current.pc\r\n\t\t\t  setUser({name:response.data.name})\r\n\t\t\t  if (!peerConnection)\r\n\t\t\t\treturn\r\n\t\t\t  peerConnection.addEventListener( 'icecandidate', (event:any) => sendICEcandidate(event, sendMessage, response.sender, 'host'));\r\n\t\t\t  const offerDescription = new RTCSessionDescription(response.data.rtcMessage);\r\n\t\t\t  await peerConnection.setRemoteDescription( offerDescription );\r\n\t\t\t  const answerDescription = await peerConnection.createAnswer( sessionConstraints );\r\n\t\t\t  await peerConnection.setLocalDescription( answerDescription );\r\n\t\t\t  sendMessage({type:'answer', receiver:pcRef.current.receiver, data:{target:'host', rtcMessage:peerConnection.localDescription}})\r\n\t\t\t  // Here is a good place to process candidates.\r\n\t\t\t  const streams = pcRef.current.pc.getRemoteStreams()\r\n\t\t\t  setStream(streams[streams.length - 1])\r\n\t\t\t}\r\n\t\t\tif (type == \"ICEcandidate\" && response.data.target=='guest' && response.sender == pcRef.current?.receiver)\r\n\t\t\t  onICEcandidate(pcRef.current.pc, response)\r\n\t\t},\r\n\t\tCustomRTCView,\r\n\t\tuser,\r\n\t\tisPlay\r\n\t}\r\n}","import {StyleSheet} from \"react-native\";\r\nexport {useLocalCam, useRemoteCam} from \"./p2p\"\r\n\r\nexport const camStyle = StyleSheet.create({\r\n\tcontainer:{ flex: 1},\r\n\tcam:{ flex: 1, height:'100%'},\r\n\tbottonContainer: {position:\"absolute\", bottom:0, justifyContent:'flex-end'},\r\n\tbuttonBar: { flexDirection: \"row\", justifyContent: \"space-around\" },\r\n\tlabel: {backgroundColor:'#0008', color:'white', paddingHorizontal:5},\r\n})","import React, { useEffect } from \"react\";\r\nimport {Button, View, Text} from \"react-native\";\r\nimport useWebsocketContext from \"./useWebsocketContext\";\r\nimport { useLocalCam, camStyle} from \"./webrtc\";\r\n\r\n\r\nexport default (props:{user?:{name:string}|null, mode?:'camera'|'display'|null})=>{\r\n  const {lastJsonMessage, sendJsonMessage} = useWebsocketContext()\r\n  const {start, stop, websocketOnMessage, CustomRTCView, isPlay} = useLocalCam(sendJsonMessage)\r\n  useEffect(()=>{\r\n    props.user && lastJsonMessage && websocketOnMessage(lastJsonMessage, props.user)\r\n  }, [lastJsonMessage, props.user])\r\n  useEffect(()=>{\r\n    if(props.mode && !isPlay){\r\n      props.user && start(props.user, undefined, props.mode)\r\n    }\r\n    else if(props.mode===null && isPlay){\r\n      stop()\r\n    }\r\n    return ()=>{isPlay && stop()}\r\n  }, [isPlay, props.user, props.mode])\r\n  return (\r\n    <View style={camStyle.container}>\r\n      <CustomRTCView style={camStyle.cam}/>\r\n      <View style={camStyle.bottonContainer}>\r\n        <View style={camStyle.buttonBar}>  \r\n        </View>\r\n        <View style={{flexDirection:'row'}}><Text style={camStyle.label}>{props.user?.name}</Text></View>\r\n        <View style={camStyle.buttonBar}>\r\n          {props.mode === undefined && !isPlay && <Button title=\"Start\" onPress={()=>props.user && start(props.user)} />}\r\n          {props.mode === undefined && isPlay && <Button title=\"Stop\" onPress={stop} />}\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n","import React, { useState, useEffect, } from \"react\";\r\nimport {Button,Text, TextInput, View} from \"react-native\";\r\nimport useWebsocketContext from \"./useWebsocketContext\";\r\nimport { useRemoteCam, camStyle} from \"./webrtc\";\r\n\r\nexport default (props:{receiver?:string})=>{\r\n  const [receiver, setReceiver] = useState('')\r\n  const {lastJsonMessage, sendJsonMessage} = useWebsocketContext()\r\n  const {start, stop, websocketOnMessage, CustomRTCView, isPlay, user} = useRemoteCam(sendJsonMessage)\r\n  useEffect(()=>{\r\n    lastJsonMessage && websocketOnMessage(lastJsonMessage)\r\n  }, [lastJsonMessage])\r\n  useEffect(()=>{\r\n    if(props.receiver){\r\n      start(props.receiver)\r\n    }\r\n    return ()=>stop()\r\n  }, [props.receiver])\r\n  return (\r\n    <View style={camStyle.container}>\r\n      <CustomRTCView style={camStyle.cam}/>\r\n      <View style={camStyle.bottonContainer}>\r\n        <View style={camStyle.buttonBar}>\r\n        </View>\r\n        <View style={{flexDirection:'row'}}>{\r\n          (props.receiver || isPlay)?\r\n          <Text style={camStyle.label}>{user?.name || 'loading...'}</Text>:\r\n          <>\r\n            <Text style={{borderWidth:1}}>Receiver:&nbsp;</Text>\r\n            <TextInput style={{borderWidth:1, flex:1}} value={receiver} onChangeText={setReceiver}/>\r\n          </> \r\n        }</View>\r\n        <View style={camStyle.buttonBar}>\r\n          {props.receiver === undefined && !isPlay && <Button title=\"Start\" onPress={()=>start(receiver)} />}\r\n          {props.receiver === undefined && isPlay && <Button title=\"Stop\" onPress={stop} />}\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport { StyleSheet, View } from 'react-native';\r\nimport { View as ThemedView } from '../../../components/Themed' \r\nimport Colors from '../../../constants/Colors';\r\nimport {default as useRtcContext, WebSocketProvider as RtcProvider} from \"../../../lib/react-native-webrtc/useWebsocketContext\";\r\nimport LocalCam from '../../../lib/react-native-webrtc/LocalCam';\r\nimport RemoteCam from '../../../lib/react-native-webrtc/RemoteCam';\r\nimport useResizeWindow from '../../../hooks/useResizeWindow';\r\nimport useAuthContext from '../../../hooks/useAuthContext';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\nimport CommonButton from '../../../components/CommonButton';\r\n\r\ntype VideoType = 'camera'|'display'|null\r\ntype VideoCallProps = {channel_id:number, setDisable:(disable:boolean)=>void, disable?:boolean}\r\n\r\n\r\nconst VideoView = (props:{\r\n  scale:string,\r\n  focusGuest?:string,\r\n  setFocusGuest:(focusGuest?:string)=>void\r\n  receiver?:string\r\n  children:React.ReactNode\r\n})=>{\r\n  return <View style={[{maxWidth:props.scale, maxHeight:props.scale, borderWidth:1, borderColor:Colors.borderColor, backgroundColor:'gray', flexDirection:'row', flexGrow:1}, (props.focusGuest == undefined || props.focusGuest == props.receiver)?{}:{width:0, height:0}]}>\r\n    <TouchableOpacity style={{flex:1}} containerStyle={{flex:1, justifyContent:'center'}} onPress={()=>props.setFocusGuest(props.focusGuest?undefined:props.receiver)}>\r\n    {props.children}\r\n    </TouchableOpacity>\r\n  </View>\r\n    \r\n  \r\n}\r\n\r\nconst VideoCallContainer = ({channel_id, disable, setDisable}:VideoCallProps)=>{\r\n  const {auth} = useAuthContext()\r\n  const [videoMode, setVideoMode] = useState<VideoType>(null)\r\n  const [guests, setGuests] = useState<string[]>([])\r\n  const [focusGuest, setFocusGuest] = useState<string>()\r\n  const windowType = useResizeWindow()\r\n  const { lastJsonMessage, sendJsonMessage } = useRtcContext()\r\n  useEffect(()=>{\r\n    if(lastJsonMessage !=null){\r\n      if(lastJsonMessage['type']=='connection'){\r\n        sendJsonMessage({'type':'broadcast', 'data':{'channel_id':channel_id}})\r\n      }\r\n      if(lastJsonMessage['type']=='broadcast_guest' || lastJsonMessage['type']=='broadcast_host'){\r\n        setGuests([...guests, lastJsonMessage['sender']])\r\n      }\r\n      if(lastJsonMessage['type']=='broadcast_disconnect'){\r\n        const channel_name = lastJsonMessage['sender']\r\n        const exist = guests.find(v=>v == channel_name)\r\n        exist && setGuests(guests.filter(v=>v != channel_name))\r\n      }\r\n    }\r\n  }, [lastJsonMessage])\r\n  const scale = focusGuest?'100%':`${100 / Math.max(2, Math.ceil(Math.sqrt(guests.length + 1)))}%`\r\n  const toggleVideoMode = (mode:VideoType)=>{\r\n    setVideoMode(videoMode!=mode?mode:null)\r\n  }\r\n  return lastJsonMessage !==undefined ?\r\n    <ThemedView style={[\r\n      {aspectRatio:!disable?16/9:0, borderColor:Colors.borderColor, borderRadius:10},\r\n      windowType=='landscape'?{flexShrink:0.5, height:'100%', borderLeftWidth:1, paddingBottom:65}:{maxHeight:'36%', width:'100%', borderBottomWidth:1}\r\n    ]}>\r\n      <View style={{aspectRatio:16/9, backgroundColor:'white', flexWrap:'wrap', flexDirection:'row', width:'100%', height:'100%'}}>\r\n        {guests.map((receiver, i)=><VideoView scale={scale} focusGuest={focusGuest} setFocusGuest={setFocusGuest} receiver={receiver}>\r\n          <RemoteCam receiver={receiver}/>\r\n        </VideoView>\r\n        )}\r\n        <VideoView scale={scale} focusGuest={focusGuest} setFocusGuest={setFocusGuest} receiver={auth.user?.name}>\r\n          <LocalCam user={auth.user} mode={videoMode}/>\r\n        </VideoView>\r\n      </View>\r\n      <ThemedView style={[\r\n          {position:'absolute', alignItems:'center', justifyContent:'flex-end', width:'100%',flexDirection:'row'},\r\n          windowType=='landscape'?{bottom:0, paddingVertical:15, paddingHorizontal:19}:{backgroundColor:'transparent'}\r\n        ]}>\r\n        <CommonButton title={'⏺️'} onPress={()=>toggleVideoMode('camera')}/>\r\n        <CommonButton title={'🖥️'} onPress={()=>toggleVideoMode('display')}/>\r\n        <CommonButton title={'📹'} onPress={()=>setDisable(true)}/>\r\n      </ThemedView>\r\n    </ThemedView>:\r\n  <></>\r\n  }\r\n  \r\nexport default React.memo(({channel_id, disable, setDisable}:VideoCallProps)=>{\r\n  return <RtcProvider disable={disable}>\r\n    <VideoCallContainer channel_id={channel_id} disable={disable} setDisable={setDisable}/>\r\n  </RtcProvider>\r\n})\r\n","import React, {useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState} from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { Platform, StyleSheet, View } from 'react-native';\r\nimport CommonSection from '../../../components/CommonSection';\r\nimport { FlatList, TextInput } from 'react-native-gesture-handler';\r\nimport CommonButton from '../../../components/CommonButton';\r\nimport useMessengerContentList, { MessengerContentPage, useMessengerContentMutation } from '../../../hooks/lists/useMessengerContent.List';\r\nimport useAuthContext from '../../../hooks/useAuthContext';\r\nimport HeaderRight from '../../../components/HeaderRight';\r\nimport useMessengerMemberList, { useMessengerMemberMutation } from '../../../hooks/lists/useMessengerMemberList';\r\nimport { navigate } from '../../../navigation';\r\nimport Colors from '../../../constants/Colors';\r\nimport useColorScheme from '../../../hooks/useColorScheme';\r\nimport { Text, View as ThemedView } from '../../../components/Themed' \r\nimport Hyperlink from 'react-native-hyperlink'\r\nimport useMessengerChannelList from '../../../hooks/lists/useMessengerChannelList';\r\nimport useIsMobile from '../../../hooks/useIsMobile';\r\nimport LinkPreview from '../../../components/LinkPreview';\r\nimport lang from '../../../lang'\r\nimport Avatar from '../../../components/Avatar';\r\nimport VideoCallSection from './VideoCallSection';\r\nimport useResizeWindow from '../../../hooks/useResizeWindow';\r\n\r\nfunction humanFileSize(size:number) {\r\n  var i = size == 0 ? 0 : Math.floor(Math.log(size) / Math.log(1024));\r\n  return (size / Math.pow(1024, i)).toFixed(2) + ' ' + ['B', 'kB', 'MB', 'GB', 'TB'][i];\r\n}\r\n\r\nfunction uploadFile(){\r\n  return new Promise<Blob|undefined>((resolve, reject)=>{\r\n    if (Platform.OS == 'web'){\r\n      var input = document.createElement('input');\r\n      input.type = 'file';\r\n      input.onchange = e => { \r\n        resolve((e.target as any).files[0])\r\n      }\r\n      input.onabort = reject\r\n      input.onerror = reject\r\n      input.click();\r\n    }\r\n    else\r\n      resolve(undefined)\r\n  })\r\n}\r\n\r\nconst MessengerContentPageItem = React.memo((props:MessengerContentPage & {ownerId?:number})=>{\r\n  const isMobile = useIsMobile()\r\n  let nextPage = props.next;\r\n    while(nextPage?.next && nextPage.current.length==0){\r\n      nextPage = nextPage.next\r\n    }\r\n    const nextContent = nextPage?.current[0]\r\n    return <View style={{flexDirection: 'column-reverse'}}>\r\n      \r\n      {props.current.map((content, index2)=>{\r\n        const next = index2 + 1 < props.current.length?props.current[index2+1]:nextContent\r\n        const created:string = content.created.slice(0, 16)\r\n        const date = created.slice(0, 10)\r\n        const isSystem = content.user == null\r\n        const isFirst = next==undefined || (content.user != next.user || created != next.created.slice(0, 16))\r\n        const isSelf = props.ownerId == content.user\r\n        const dayChanged = next==undefined || date != next.created.slice(0, 10)\r\n        const message = content.message_set[0]\r\n        if (isSystem)\r\n          return <View key={content.id} style={{flexDirection:'row', justifyContent:'center', width:'100%', marginVertical:5}}>\r\n            <Text>{message.content}</Text>\r\n          </View>\r\n        return <View key={content.id}>\r\n          {dayChanged?<View style={{flexDirection:'row', justifyContent:'center', width:'100%'}}><Text>{date}</Text></View>:undefined}\r\n          <View key={content.id} style={{flexDirection:'row', justifyContent:isSelf?'space-between':'flex-start', width:'100%'}}>\r\n            {isFirst && !isSelf? <View style={{marginTop:3, marginLeft:12}}><Avatar name={content.name} userId={content.user} size={36}/></View>:<View style={{width:48}}/>}\r\n            <CommonSection outerContainerStyle={{width:undefined, maxWidth:'90%'}} title={isFirst?content.name:undefined} titleStyle={{flex:undefined}} bodyStyle={{padding:10}} subtitle={`${created.slice(11)}`}>\r\n              {/* @ts-ignore */}\r\n              <Hyperlink linkDefault={ true } style={{wordBreak:\"break-word\"}} linkStyle={{color: '#12b886'}}>\r\n                <Text selectable>{message.content}</Text>\r\n              </Hyperlink>\r\n              {content.link_set.map((link, linkIndex)=><LinkPreview key={linkIndex} link={link} isMobile={isMobile}/>)}\r\n              {message.file && message.filename && message.filesize && <LinkPreview link={{title:`📥 ${message.filename}`, url:message.file, description:humanFileSize(message.filesize), image:null}} hideUrl align='right' isMobile={isMobile}/>}\r\n            </CommonSection>\r\n          </View>\r\n        </View>\r\n      })}\r\n    </View>\r\n\r\n})\r\n\r\nexport default function ChatScreen({navigation, route}: StackScreenProps<any, 'Chat'>) {\r\n  const channel_id = route?.params?.id\r\n  const height = useRef(0)\r\n  const inputRef = useRef<TextInput>(null)\r\n  const {auth} = useAuthContext()\r\n  const channel = useMessengerChannelList(auth)?.find(v=>v.id==parseInt(channel_id))\r\n  const {data, fetchNextPage } = useMessengerContentList(channel_id)\r\n  const memberList = useMessengerMemberList(channel_id)\r\n  const member_id = useMemo(()=>memberList?.find(v=>v.user == auth.user?.id)?.id, [auth, memberList])\r\n  const windowType = useResizeWindow()\r\n  const messengerMemberMutation = useMessengerMemberMutation()\r\n  const [value, setValue] = useState('')\r\n  const [autoFocus, setAutoFocus] = useState(true)\r\n  const [videoMode, setVideoMode] = useState<boolean>(false)\r\n  const theme = useColorScheme()\r\n  const postValue = ()=>{\r\n    if (value.length>0){\r\n      contentMutation.create({channel:channel_id, user:auth.user?.id, content:value})\r\n      setValue('')\r\n      setAutoFocus(true)\r\n    }\r\n  }\r\n  const contentMutation = useMessengerContentMutation()\r\n\r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      headerRight: ()=> <HeaderRight extra={[\r\n        {title:lang('invite'), onPress:()=>{navigate(\"InviteScreen\", {id:channel_id})}},\r\n        {title:lang('leave'), onPress:()=>{member_id && messengerMemberMutation.leave(member_id);back()}}\r\n      ]}/>,\r\n      title: channel?.name\r\n    });\r\n  }, [navigation, route, member_id]);\r\n\r\n  const renderItem = useCallback(({item, index}:{item:MessengerContentPage, index:number})=><MessengerContentPageItem {...item} ownerId={auth.user?.id}/>, [auth])\r\n  \r\n  const back = ()=>{\r\n    if(navigation.canGoBack())\r\n        navigation.goBack()\r\n      else{\r\n        navigation.navigate('HomeScreen', {tab:2})\r\n      }\r\n  }\r\n  useEffect(()=>{\r\n    if (!(channel_id))\r\n      back()\r\n  }, [])\r\n  useEffect(()=>{\r\n    if(autoFocus){\r\n      (inputRef.current as any).focus()\r\n      setAutoFocus(false)\r\n    }\r\n  }, [autoFocus])\r\n\r\n  return <View style={{flex:1, alignItems:'center', flexDirection:windowType=='landscape'?'row-reverse':'column'}}>\r\n    <VideoCallSection channel_id={channel_id} setDisable={(d)=>setVideoMode(!d)} disable={!videoMode}/>\r\n    <View style={[{flex:videoMode?undefined:1, flexShrink:1}, windowType=='landscape'?{minWidth:320, height:'100%'}:{width:'100%'}]}>\r\n      <FlatList\r\n        style={{flexDirection: 'column-reverse'}}\r\n        contentContainerStyle={{padding:10, flexGrow:1, flexDirection: 'column-reverse'}}\r\n        data={data?.pages}\r\n        renderItem={renderItem}\r\n        onScroll={(e)=>{\r\n          if (e.nativeEvent.contentOffset.y + e.nativeEvent.contentSize.height - height.current < 1)\r\n            fetchNextPage()\r\n        }}\r\n        onLayout={(p)=>{height.current = p.nativeEvent.layout.height}}\r\n      />\r\n      <ThemedView style={{bottom:0, alignItems:'center', width:'100%',flexDirection:'row', paddingTop:15, paddingBottom:10, paddingHorizontal:19}}>\r\n        <TextInput ref={inputRef} value={value} onChangeText={setValue} style={{\r\n          flex:1, borderWidth:1, height:40, borderRadius:6, borderColor:Colors.borderColor, backgroundColor:Colors[theme].background, color:Colors[theme].text\r\n        }} onSubmitEditing={postValue} blurOnSubmit={true}/>\r\n        <CommonButton title={'💬'} onPress={postValue}/>\r\n        <CommonButton title={'📤'} onPress={()=>uploadFile().then(f=>{\r\n          contentMutation.create({channel:channel_id, user:auth.user?.id, content:'', newFile:f})\r\n        })}/>\r\n        {!videoMode && <CommonButton title={'📹'} onPress={()=>setVideoMode(!videoMode)}/>}\r\n      </ThemedView>\r\n    </View>\r\n  </View>\r\n}","import React, {useCallback, useRef} from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { StyleSheet, Text, Button, View} from 'react-native';\r\n\r\n\r\nexport default function TabOneScreen({\r\n  navigation\r\n}: StackScreenProps<any, 'TabOne'>) {\r\n  return <View style={{padding:10}}>\r\n    \r\n  </View>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  Panel_Button_Text: {\r\n    textAlign: 'center',\r\n    color: '#fff',\r\n    fontSize: 21\r\n  },\r\n  Panel_Holder: {\r\n    borderWidth: 1,\r\n    borderColor: '#888',\r\n    marginVertical: 5\r\n  }\r\n})","import React, { useMemo } from 'react';\r\n\r\nimport { TextProps, StyleProp } from 'react-native';\r\nimport {View, Text } from './Themed'\r\nimport useResizeWindow from '../hooks/useResizeWindow';\r\n\r\ntype Props = {\r\n  name: string,\r\n  width?:number,\r\n  children: React.ReactNode\r\n  textStyle?: StyleProp<TextProps>\r\n}\r\n\r\nexport default function RowField(props:Props) {\r\n  const windowType = useResizeWindow()\r\n  const rowStyle = useMemo(()=>windowType=='landscape'?\r\n    {flexDirection:'row', alignItems: 'center', justifyContent:'space-between'}:\r\n    {flexDirection:'column', alignItems:'flex-start'} as any\r\n  , [windowType])\r\n  return (\r\n    <View style={[{paddingVertical:5, width:'100%'}, rowStyle]}>\r\n        <Text style={[windowType=='landscape'?{flex:1}:{width:'100%'},{paddingHorizontal: 15, fontSize:16}, props.textStyle]}>{props.name}</Text>\r\n        <View style={[windowType=='landscape'?{flex:6}:{width:'100%'},{paddingHorizontal: 15}]}>\r\n          <View style={{width:props.width}}>\r\n            {props.children}\r\n          </View>\r\n        </View>\r\n    </View>\r\n  )\r\n}","import React from 'react';\r\nimport { StyleProp, TextStyle } from 'react-native';\r\nimport { CustomTextInputProps } from '../types';\r\nimport CommonTextInput from './CommonTextInput';\r\nimport RowField from './RowField';\r\n\r\nexport default function TextField(props:CustomTextInputProps & {name: string, width?:any, textStyle?:StyleProp<TextStyle>}) {\r\n  return (\r\n    <RowField name={props.name} width={props.width} textStyle={props.textStyle}>\r\n      <CommonTextInput {...props} />\r\n   </RowField>\r\n  )\r\n}","import React, {useState, useEffect } from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { StyleSheet } from 'react-native';\r\nimport CommonSection from '../components/CommonSection';\r\nimport { View, Text } from '../components/Themed';\r\nimport CommonButton from '../components/CommonButton';\r\n// import useBoardChannelList, { useBoardChannelMutation } from '../hooks/lists/useBoardChannelList';\r\nimport useAuthContext from '../hooks/useAuthContext';\r\nimport { navigate } from '../navigation';\r\nimport { Channel } from '../types';\r\nimport useMessengerChannelList, { useMessengerChannelMutation } from '../hooks/lists/useMessengerChannelList';\r\nimport TextField from '../components/TextField';\r\nimport lang from '../lang'\r\n\r\nexport default function ChannelEditScreen({navigation, route}: StackScreenProps<any, 'ChannelEdit'>) {\r\n  const id = route?.params?.id\r\n  const type = route?.params?.type\r\n  const {auth} = useAuthContext()\r\n  const channelList = useMessengerChannelList(auth)\r\n  const channelMutation = useMessengerChannelMutation()\r\n  const channel = channelList?.find(v=>v.id==id)\r\n  const [name, setName] = useState('')\r\n  const [description, setDescription] = useState('')\r\n  const back = ()=>{\r\n    if(navigation.canGoBack())\r\n        navigation.goBack()\r\n      else{\r\n        navigation.replace('Main')\r\n      }\r\n  }\r\n  useEffect(()=>{\r\n    if (channel){\r\n      setName(channel.name)\r\n      setDescription(channel?.description || '')\r\n    }\r\n  }, [channel])\r\n  return <CommonSection outerContainerStyle={{alignSelf:'center'}}>\r\n    <View style={{justifyContent:'space-around'}}>\r\n    <Text style={{fontSize:20}}>{lang('Channel')}</Text>\r\n    </View>\r\n    <View style={styles.separator} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />\r\n    <View style={{width:'100%'}}>\r\n      <TextField name={lang('Channel Name')} value={name} setValue={setName} width={'60%'}/>\r\n      <TextField name={lang('Description')} value={description} setValue={setDescription} multiline width={'60%'}/>\r\n    </View>\r\n    <View style={{width:'100%', flexDirection:'row', justifyContent:'flex-end'}}>\r\n      <CommonButton title={lang('save')} onPress={()=>{\r\n        if(auth?.user?.id && auth.groupId){\r\n          const newChannel:Channel = {id, name, description, type, owner:auth?.user?.id, group:auth.groupId};\r\n          (id?channelMutation.update(newChannel):channelMutation.create(newChannel)).then(v=>navigate(\"Main\", {\r\n            screen:v.type == 'messenger'?'MessengerScreen':'BoardScreen',\r\n            params:{id:v.id}\r\n          }))\r\n        }\r\n      }}/>\r\n      <CommonButton title={lang('cancel')} style={{marginHorizontal:5}} onPress={back}/>\r\n    </View>\r\n  </CommonSection>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  field:{\r\n    width:'50%',\r\n    flexDirection:'row',\r\n    padding:10,\r\n  },\r\n  separator: {\r\n    marginBottom: 20,\r\n    height: 1,\r\n    width: '100%',\r\n  },\r\n})","import React, {useRef,MutableRefObject, useMemo, useState } from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { View, Text } from '../components/Themed';\r\nimport CommonSection from '../components/CommonSection';\r\nimport useAuthContext from '../hooks/useAuthContext';\r\nimport useUserMembershipList from '../hooks/lists/useUserMembershipList';\r\nimport { UserMembership } from '../types';\r\nimport CommonButton from '../components/CommonButton';\r\nimport useMessengerMemberList, { useMessengerMemberMutation } from '../hooks/lists/useMessengerMemberList';\r\nimport { renderMemberItem } from '../tabs/MemberTab';\r\nimport { navigate } from '../navigation';\r\nimport lang from  '../lang'\r\n\r\nconst InviteItem = (props:{item:UserMembership, selectedRef:MutableRefObject<Set<number>>})=>{\r\n  const [selected, setSelected] = useState(props.selectedRef.current.has(props.item.id))\r\n  return <View style={selected?{borderWidth:1, borderColor:'blue'}:{}}>\r\n    {renderMemberItem(props.item, ()=>{\r\n      if (selected){\r\n        setSelected(false)\r\n        props.selectedRef.current.delete(props.item.id)\r\n      }\r\n      else{\r\n        setSelected(true)\r\n        props.selectedRef.current.add(props.item.id)\r\n      }\r\n    })}\r\n  </View>\r\n\r\n}\r\n\r\nexport default function InviteScreen({navigation, route}: StackScreenProps<any, 'Invite'>) {\r\n  const id = route?.params?.id\r\n  const {auth} = useAuthContext()\r\n  const userList = useUserMembershipList(auth)\r\n  const memberList = useMessengerMemberList(id)\r\n  const messengerMemberMutation = useMessengerMemberMutation()\r\n  const selectedRef = useRef<Set<number>>(new Set())\r\n  const data = useMemo(()=>{\r\n    const memberSet = new Set(memberList?.map(v=>v.user))\r\n    return userList?.filter(v=>!memberSet.has(v.id))\r\n  }, [userList, memberList])\r\n\r\n\r\n  const back = ()=>{\r\n    if(navigation.canGoBack())\r\n      navigation.goBack()\r\n    else if (id)\r\n      navigate(\"ChatScreen\", {id})\r\n    else\r\n      navigation.replace('Main')\r\n  }\r\n\r\n  return <CommonSection outerContainerStyle={{alignSelf:'center'}}>\r\n    <View style={{backgroundColor:'white', 'width': '50%'}}>\r\n    {data?.map((item, index)=><InviteItem key={index} item={item} selectedRef={selectedRef}/>)}\r\n    </View>\r\n    <View style={[{width:'50%', flexDirection:'row', padding:10,}, {justifyContent:'flex-end'}]}>\r\n      <CommonButton title={lang('invite')} onPress={()=>{\r\n        messengerMemberMutation.invite({\r\n          channel_id:id,\r\n          user_ids:[...selectedRef.current]\r\n        })\r\n        back()\r\n      }}/>\r\n      <CommonButton title={lang('cancel')} onPress={back}/>\r\n    </View>\r\n  </CommonSection>\r\n}\r\n\r\n","import LoginScreen from \"./main/LoginScreen\";\r\nimport ChatScreen from \"./main/ChatScreen\";\r\nimport HomeScreen from \"./main/HomeScreen\";\r\nimport TabOneScreen from \"./main/TabOneScreen\";\r\n// import BoardScreen from \"../lib/blacktokki-board/BoardScreen\";\r\n// import BoardEditScreen from \"../lib/blacktokki-board/BoardEditScreen\";\r\nimport ChannelEditScreen from \"./ChannelEditScreen\"\r\nimport { Screens } from \"../types\";\r\nimport InviteScreen from \"./InviteScreen\";\r\nimport ProfileScreen from \"./ProfileScreen\";\r\nimport lang from \"../lang\"\r\n\r\nexport const main = {\r\n    HomeScreen:{\r\n        title:lang('home'),\r\n        component:HomeScreen,\r\n        path:'home',\r\n    },\r\n    ChatScreen:{\r\n        title:lang('chat'),\r\n        component:ChatScreen,\r\n        path:'chat'\r\n    },\r\n    // BoardScreen:{\r\n    //     title:'board',\r\n    //     component:BoardScreen,\r\n    //     path:'board'\r\n    // },\r\n    TabOneScreen:{\r\n        title:'tab one',\r\n        component:TabOneScreen,\r\n        path:'one'\r\n    },\r\n} as Screens\r\n\r\nexport const login = {\r\n    LoginScreen:{\r\n        path: 'login',\r\n        title: lang('Sign in'),\r\n        component:LoginScreen\r\n    },\r\n} as Screens\r\n\r\nexport const modal = {\r\n    // BoardEditScreen:{\r\n    //     title:'board',\r\n    //     component:BoardEditScreen,\r\n    //     path:'modal/board'\r\n    // },\r\n    ChannelEditScreen:{\r\n        title:lang('channel'),\r\n        component:ChannelEditScreen,\r\n        path:'modal/channel'\r\n    },\r\n    InviteScreen:{\r\n        title:lang('invite'),\r\n        component:InviteScreen,\r\n        path:'modal/invite'\r\n    },\r\n    ProfileScreen:{\r\n        title:lang('profile'),\r\n        component:ProfileScreen,\r\n        path:'modal/profile'\r\n    }\r\n} as Screens","import React, {useLayoutEffect} from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { StyleSheet, Text, Button, View} from 'react-native';\r\nimport { Text as StyledText } from 'react-native-paper';\r\nimport {TabViewNavigator} from '../../navigation/DrawerNavigator';\r\nimport useResizeWindow from '../../hooks/useResizeWindow';\r\nimport { bottomTabs } from '../../tabs';\r\nimport { navigate } from '../../navigation';\r\nimport HeaderRight from '../../components/HeaderRight';\r\nimport TextButton from '../../components/TextButton';\r\nimport Colors from '../../constants/Colors';\r\nimport useColorScheme from '../../hooks/useColorScheme';\r\nimport lang from '../../lang'\r\n\r\n// navigate(\"BoardEditScreen\", {channel_id:item.channel, id:item.id})\r\n// deleteBoardContent(item.id).then(()=>navigate('BoardScreen', {id:item.channel}))\r\n\r\nexport default function HomeScreen({navigation, route}: StackScreenProps<any, 'Home'>) {\r\n  const windowType = useResizeWindow();\r\n  const theme = useColorScheme()\r\n  const color = Colors[theme].text\r\n  const options = [\r\n    {title:lang('member'), headerRight:()=><HeaderRight/>},\r\n    {title:lang('messenger'), headerRight:()=><HeaderRight extra={[{title:lang('create'), onPress:()=>navigate(\"ChannelEditScreen\", {type:\"messenger\"})}]}/>},\r\n    // {title:'board', headerRight:()=><HeaderRight extra={[{title:'create', onPress:()=>navigate(\"ChannelEditScreen\", {type:\"board\"})}]}/>},\r\n    {title:'config', headerRight:()=><HeaderRight/>}\r\n  ]\r\n  \r\n  useLayoutEffect(() => {\r\n    const index = route?.params?.tab | 0\r\n    navigation.setOptions(windowType == 'portrait'?options[index]:{\r\n      title: lang('home'),\r\n      headerRight: ()=><HeaderRight/>\r\n    });\r\n  }, [navigation, route, windowType]);\r\n  return <>\r\n    {windowType == 'landscape'?\r\n      <View style={{flex:1, justifyContent:'center', alignItems:'center'}}>\r\n        <View style={{width:'80%', height:'80%'}}>\r\n          <StyledText style={{fontSize:32, color}}>Tokki Tok</StyledText>\r\n          <View style={{backgroundColor:Colors.borderColor, height:1, width:'100%'}}/>\r\n          <View style={{flex:1, alignItems:'flex-start'}}>\r\n            {/* <Text style={{fontSize:20, color:'gray'}}>Welcome! This is a messenger for teams.</Text>*/}\r\n            <Text style={{fontSize:24}}> </Text>\r\n            <Text style={{fontSize:24, fontWeight:'500', color}}>{lang('Quick Start')}</Text>\r\n            <TextButton title={lang('+ New Messenger')} textStyle={{fontSize:20, color}} style={{paddingLeft:0, borderRadius:20}} onPress={()=>navigate(\"ChannelEditScreen\", {type:\"messenger\"})}/>\r\n            {/* <TextButton title='+ New Board' textStyle={{fontSize:20}} style={{paddingLeft:0, borderRadius:20}} onPress={()=>navigate(\"ChannelEditScreen\", {type:\"board\"})}/> */}\r\n          </View>\r\n        </View>\r\n      </View>:<></>}\r\n      <View style={windowType == 'portrait'?{flex:1}:{width:0, flex:0}}>\r\n        <TabViewNavigator tabs={bottomTabs} tabBarPosition=\"bottom\" index={parseInt(route.params?.['tab'] || 0)} onTab={(index)=>{navigation.setParams({tab:index})}}/>\r\n      </View>\r\n  </>\r\n}\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { View} from '../components/Themed';\r\nimport Profile from '../components/Profile';\r\nimport useAuthContext from '../hooks/useAuthContext';\r\nimport useUserMembershipList from '../hooks/lists/useUserMembershipList';\r\nimport { useMessengerChannelMutation } from '../hooks/lists/useMessengerChannelList';\r\nimport CommonButton from '../components/CommonButton';\r\nimport { DirectChannel } from '../types';\r\nimport { navigate } from '../navigation';\r\nimport lang from '../lang'\r\n\r\nexport default function ProfileScreen({\r\n  navigation, route\r\n}: StackScreenProps<any, 'Profile'>) {\r\n  const id = route?.params?.id\r\n  const {auth} = useAuthContext()\r\n  const userList = useUserMembershipList(auth)\r\n  const user = userList?.find(v=>v.id==id)\r\n  const channelMutation = useMessengerChannelMutation()\r\n  const back = ()=>{\r\n    if(navigation.canGoBack())\r\n        navigation.goBack()\r\n      else{\r\n        navigation.replace('Main')\r\n      }\r\n  }\r\n  useEffect(()=>{\r\n    if (!(id && user) && userList)\r\n      back()\r\n  }, [userList])\r\n  return user?<View style={{padding:10}}>\r\n    \r\n    <Profile username={user.username} name={user.name} userId={user.id} />\r\n    <CommonButton title={lang('create messenger')} onPress={()=>{\r\n      if(auth?.user?.id && auth.groupId){\r\n        const newChannel:DirectChannel = {name:auth.user.id!=user.id?`${auth.user.name}, ${user.name}`:auth.user.name, type:'messenger', owner:auth?.user?.id, group:auth.groupId, counterpart:user.id};\r\n        channelMutation.direct(newChannel).then(v=>navigate(\"Main\", {screen:\"ChatScreen\", params: {id:v.id}}))\r\n      }\r\n    }}/>\r\n  </View>:<></>\r\n}\r\n","import React, { Context, createContext,  useContext, useEffect, useState } from \"react\"\r\nimport useWebSocket from \"react-use-websocket\"\r\nimport { SendJsonMessage } from \"react-use-websocket/dist/lib/types\"\r\n// @ts-ignore\r\nimport {API_URL} from \"@env\"\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { AppState, AppStateStatus } from \"react-native\";\r\n\r\ntype WebsocketContextType = {lastJsonMessage:any, sendJsonMessage:SendJsonMessage }\r\nconst WebSocketContext = createContext<WebsocketContextType>({lastJsonMessage:undefined, sendJsonMessage:()=>{}});\r\nconst [SCHEMA, DOMAIN] = `${API_URL}`.split('://')\r\n\r\nexport const WebSocketInternalProvider = ({children, path, Context, useBackground}:{children:React.ReactNode, path:string, Context:Context<WebsocketContextType>, useBackground?:boolean})=>{\r\n  const [token, setToken] = useState<string|null>(null)\r\n  const [isActive, setIsActive] = useState<boolean>(useBackground || AppState.currentState == 'active')\r\n  const { lastJsonMessage, sendJsonMessage } = useWebSocket(`${SCHEMA=='https'?'wss':'ws'}://${DOMAIN}/${path}`,{\r\n    shouldReconnect: (closeEvent) => true,\r\n    protocols: token?['Authorization',  token]:undefined,\r\n    onOpen: (e)=>{console.log(`success websocket connection(${path})`)},\r\n    onClose: (e)=> {console.log(`closed websocket connection(${path})`)},\r\n  }, isActive && token!=null)\r\n  useEffect(()=>{\r\n    AsyncStorage.getItem('Authorization').then(setToken)\r\n    const onChange = (nextState:AppStateStatus)=>setIsActive(useBackground || nextState == 'active')\r\n    AppState.addEventListener(\"change\", onChange)\r\n    return ()=>AppState.removeEventListener(\"change\", onChange)\r\n  }, [])\r\n  return (token==null)?<>{children}</>:<Context.Provider value={{lastJsonMessage, sendJsonMessage}}>\r\n      {children}\r\n    </Context.Provider>\r\n}\r\n\r\nexport const WebSocketProvider = React.memo(({disable, children}:{disable?:boolean, children:React.ReactNode})=>{\r\n  return disable?<>{children}</>:<WebSocketInternalProvider path={'messenger/ws/'} Context={WebSocketContext}>\r\n    {children}\r\n  </WebSocketInternalProvider>\r\n})\r\n\r\nexport default ()=>{\r\n  const webSocketContext = useContext(WebSocketContext)\r\n  return webSocketContext\r\n}\r\n\r\n","import React, { useState } from 'react';\r\nimport { StyleSheet} from 'react-native';\r\nimport { CustomButtonProps } from '../types';\r\nimport CommonButton from './CommonButton';\r\n\r\nexport default (props:CustomButtonProps)=>{\r\n    return <CommonButton {...props} style={[styles.style, props.style]}/>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    style:{\r\n        borderRadius:6, \r\n        backgroundColor: 'transparent',\r\n        borderWidth:0\r\n    },\r\n});\r\n","import { Notification } from '../types';\r\nimport axios from './axios';\r\n\r\nexport const getNotification = async (user_id:number)=>{\r\n    const data = (await axios.get(`/api/v1/notifications/?type=WEB&user=${user_id}`) ).data as Notification[]\r\n    return data.length?data[0]:undefined\r\n}\r\n\r\nexport const postNotification = async(notification:Notification)=>{\r\n    return (await axios.post(`/api/v1/notifications/`, notification)).data as Notification\r\n}\r\n\r\nexport const putNotification = async(notification:Notification)=>{\r\n    return (await axios.put(`/api/v1/notifications/${notification.id}/`, notification)).data as Notification\r\n}","import { Platform } from 'react-native';\r\n//@ts-ignore\r\nimport useMobileDetect from 'use-mobile-detect-hook';\r\n\r\nexport default ()=>{\r\n    const detectMobile = useMobileDetect();\r\n    return (detectMobile.isMobile() || Platform.OS == 'android' || Platform.OS == 'ios') as boolean\r\n}","import * as React from 'react';\r\nimport { View } from './Themed';\r\nimport { StyleSheet, StyleProp, ViewStyle, TextStyle, Pressable } from 'react-native';\r\nimport Colors from '../constants/Colors';\r\n\r\nexport type ItemParamList = {\r\n    outerContainerStyle?:StyleProp<TextStyle>\r\n    containerStyle?:StyleProp<ViewStyle>\r\n    bodyStyle?:StyleProp<ViewStyle>\r\n    children?: React.ReactNode\r\n    onPress?: ()=>void\r\n}\r\n\r\nexport default function CommonItem(props:ItemParamList){\r\n  const [hover, setHover] = React.useState(false)\r\n  const [press, setPress] = React.useState(false)\r\n  return (\r\n    <Pressable\r\n      style={[styles.outerContainer ,props.outerContainerStyle, (press)?{backgroundColor:'rgb(242,242,242)'}:{}]}\r\n      onPressIn={()=>{setPress(true)}}\r\n      onPressOut={()=>{setPress(false);props.onPress?.()}}\r\n       //@ts-ignore\r\n       onHoverIn={()=>setHover(true)}\r\n       onHoverOut={()=>setHover(false)}\r\n    >\r\n        <View style={[styles.container ,props.containerStyle]}>\r\n            <View style={[styles.bodyView, props.bodyStyle]}>\r\n                <>{props.children}</>\r\n            </View>\r\n      </View>\r\n    </Pressable>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  outerContainer:{\r\n    width:'100%',\r\n    maxWidth:1080,\r\n    alignItems:'stretch',\r\n  },  \r\n  container: {\r\n      marginHorizontal:20,\r\n      backgroundColor:'transparent'\r\n    },\r\n    bodyView:{\r\n      width: '100%',\r\n      padding: 10,\r\n      minHeight: 40,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      borderBottomWidth:1,\r\n      borderColor:Colors.borderColor,\r\n      backgroundColor:'transparent'\r\n    }\r\n  });\r\n  ","import { useQuery } from \"react-query\";\r\nimport { getUserMembershipList } from \"../../apis\";\r\nimport { Auth } from \"../useAuthContext\";\r\n\r\nexport default function useUserMembershipList(auth?:Auth){\r\n  const { data } = useQuery([\"UserMembershipList\", auth?.groupId] , async()=>auth?.groupId?(await getUserMembershipList(auth?.groupId)):[])\r\n  return data\r\n}","import * as React from 'react';\r\nimport { Avatar } from 'react-native-paper';\r\nimport { AvatarProps } from '../../types';\r\n\r\nconst normalizeHash = (hash: number, min: number, max: number) => {\r\n    return Math.floor((hash % (max - min)) + min);\r\n};\r\n\r\nconst stringToHSL = (str: string, initHash?:number) => {\r\n    let hash = initHash || 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\r\n    }\r\n    hash = Math.abs(hash);\r\n    return `hsl(${normalizeHash(hash, 0, 360)}, ${normalizeHash(hash, 0, 100)}%, ${normalizeHash(hash, 25, 75)}%)`;\r\n};\r\n\r\nexport default (props:AvatarProps) => {\r\n    const backgroundColor = stringToHSL(props.name, props.userId)\r\n    return <Avatar.Text style={{backgroundColor}} size={props.size} label={props.name.split(' ').map(v=>v[0]).join().toUpperCase()} />\r\n};","import React from 'react';\r\n// import { MaterialIcons } from \"@expo/vector-icons\"\r\nimport Avatar from '../lib/react-native-paper/Avatar';\r\nimport { AvatarProps } from '../types';\r\n\r\nexport default (props:AvatarProps)=>{\r\n    // return <MaterialIcons size={38} style={{ marginBottom: -3, marginRight:10 }} name='account-circle'/>\r\n    return <Avatar {...props}/>\r\n}\r\n\r\n","import React from \"react\"\r\nimport { View, Text } from \"../components/Themed\"\r\nimport CommonItem from \"../components/CommonItem\"\r\n// import useBoardChannelList from \"../lib/blacktokki-board/useBoardChannelList\"\r\nimport { useMessengerChannelSorted } from \"../hooks/lists/useMessengerChannelList\"\r\nimport useAuthContext from \"../hooks/useAuthContext\"\r\nimport { navigate } from \"../navigation\"\r\n\r\nconst DrawerTab = (props:{data:{name:string, onPress?:()=>void}[]})=><View style={{flex:1}}>\r\n    {props.data.map((item, index)=><CommonItem key={index} containerStyle={{marginHorizontal:0}} bodyStyle={{alignItems:'flex-start'}} onPress={item.onPress}>\r\n        <Text style={{marginLeft:20}}>{item.name}</Text>\r\n    </CommonItem>\r\n    )}\r\n</View>\r\n\r\nexport default {\r\n    Messenger:()=>{\r\n        const {auth} = useAuthContext()\r\n        const channelList = useMessengerChannelSorted(auth);\r\n        return <DrawerTab data={(channelList || []).map(item=>({...item, onPress:()=>navigate(\"ChatScreen\", {id:item.id})}))}/>\r\n    },\r\n    // Board:()=>{\r\n    //     const {auth} = useAuthContext()\r\n    //     const channelList = useBoardChannelList(auth);\r\n    //     return <DrawerTab data={(channelList || []).map(item=>({...item, onPress:()=>navigate(\"BoardScreen\", {id:item.id})}))}/>\r\n    // },\r\n}","import { Ionicons, FontAwesome } from \"@expo/vector-icons\"\r\nimport React from \"react\"\r\nimport { Text, View } from \"react-native\"\r\nimport CommonItem from \"../components/CommonItem\"\r\nimport useAuthContext from \"../hooks/useAuthContext\"\r\nimport { useMessengerChannelSorted } from \"../hooks/lists/useMessengerChannelList\"\r\nimport { navigate } from \"../navigation\"\r\n\r\nexport default ()=>{\r\n    const {auth} = useAuthContext()\r\n    const channelList = useMessengerChannelSorted(auth)\r\n    const today = (new Date()).toISOString().slice(0, 10)\r\n    return <View style={{flex:1, backgroundColor:'white'}}>\r\n        {channelList?.map((item, index)=>{\r\n            const date = item.last_message?.created.slice(0,10)\r\n            return <CommonItem key={index} bodyStyle={{flexDirection:'row', justifyContent:'space-between'}} onPress={()=>navigate(\"ChatScreen\", {id:item.id})}>\r\n                <View style={{flexDirection:'row'}}>\r\n                    <FontAwesome size={36} style={{ marginBottom: -3, marginRight:20 }} name='users'/>\r\n                    <View>\r\n                        <View style={{flexDirection:'row'}}>\r\n                            <Text style={{fontSize:18}}>{item.name}</Text>\r\n                            <Text style={{fontSize:18, opacity: 0.4, paddingLeft:5}}>{item.member_count}</Text>\r\n                        </View>\r\n                        <Text style={{fontSize:16, opacity: 0.4}}>{item.last_message?.content}</Text>\r\n                    </View>\r\n                </View>\r\n                <View>\r\n                    <Text style={{fontSize:14, opacity: 0.4, textAlign:'right'}}>{date==today?item.last_message?.created.slice(11,16):date}</Text>\r\n                    <Text style={{fontSize:14, textAlign:'right'}}>{item.unread_count?item.unread_count:' '}</Text>\r\n                </View>\r\n            </CommonItem>\r\n        })}\r\n    </View>\r\n}\r\n\r\nexport const MessengerIcon = <Ionicons size={30} style={{ marginBottom: -3 }} name='chatbox'/>","import React from \"react\";\r\nimport MemberTab, {MemberIcon} from \"./MemberTab\";\r\nimport OneTab, {ConfigIcon} from \"./OneTab\";\r\nimport DrawerTab  from './DrawerTab';\r\nimport MessengerTab, {MessengerIcon} from \"./MessengerTab\";\r\nimport lang from \"../lang\"\r\n// import BoardTab, {BoardIcon}  from \"../lib/blacktokki-board/BoardTab\";\r\n\r\nexport const bottomTabs = {\r\n    OneTab:{\r\n        title:lang('member'),\r\n        component:MemberTab,\r\n        icon:MemberIcon,\r\n    },\r\n    TwoTab:{\r\n        title:lang('messenger'),\r\n        component:MessengerTab,\r\n        icon:MessengerIcon\r\n    },\r\n    // ThreeTab:{\r\n    //     title:'board',\r\n    //     component:BoardTab,\r\n    //     icon:BoardIcon\r\n    // },\r\n    // FourTab:{\r\n    //     title:'config',\r\n    //     component:OneTab,\r\n    //     icon:ConfigIcon\r\n    // }\r\n} as Record<string, {title:string, component:React.ComponentType<any>, icon:JSX.Element}>\r\n\r\nexport const drawerTabs = {\r\n    TwoTab:{\r\n        title:lang('messenger'),\r\n        component:DrawerTab.Messenger,\r\n        icon:MessengerIcon\r\n    },\r\n    // ThreeTab:{\r\n    //     title:'board',\r\n    //     component:DrawerTab.Board,\r\n    //     icon:BoardIcon\r\n    // }\r\n} as Record<string, {title:string, component:React.ComponentType<any>, icon:JSX.Element}>","import { MaterialCommunityIcons } from \"@expo/vector-icons\"\r\nimport React from \"react\"\r\nimport { Text, View } from \"react-native\"\r\nimport CommonItem from \"../components/CommonItem\"\r\nimport useAuthContext from \"../hooks/useAuthContext\"\r\nimport useUserMembershipList from \"../hooks/lists/useUserMembershipList\"\r\nimport { UserMembership } from \"../types\"\r\nimport { navigate } from \"../navigation\"\r\nimport Avatar from \"../components/Avatar\"\r\n\r\nexport const renderMemberItem = (item:UserMembership, onPress?:()=>void)=> {\r\n    return <CommonItem key={item.id} bodyStyle={{backgroundColor:'white', flexDirection:'row', justifyContent:'flex-start'}} onPress={onPress}>\r\n        <View style={{marginTop:4, marginRight:12}}><Avatar name={item.name} userId={item.id} size={44}/></View>\r\n        <Text style={{fontSize:20, fontWeight:'400'}}>{item.name}</Text>\r\n    </CommonItem>\r\n}\r\n\r\nexport default ()=>{\r\n    const {auth} = useAuthContext()\r\n    const userList = useUserMembershipList(auth)\r\n    const memberItem = React.useMemo(\r\n        ()=>userList && userList.map(item=>renderMemberItem(item, ()=>navigate(\"ProfileScreen\", {id:item.id}))), [userList])\r\n    return <View style={{flex:1, backgroundColor:'white'}}>\r\n        {memberItem}\r\n    </View>\r\n}\r\n\r\nexport const MemberIcon = <MaterialCommunityIcons size={32} style={{ marginBottom: -3 }} name='account'/>","import { useTheme } from '@react-navigation/native';\r\nimport React, { useState } from 'react';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport { TabView, SceneMap,NavigationState, SceneRendererProps, TabBar } from 'react-native-tab-view';\r\nimport { navigate } from '.';\r\nimport Profile from '../components/Profile';\r\nimport TextButton from '../components/TextButton';\r\nimport Colors from '../constants/Colors';\r\nimport useResizeWindow from '../hooks/useResizeWindow';\r\nimport { drawerTabs } from '../tabs';\r\nimport { UserMembership } from '../types';\r\n\r\nexport const TabViewNavigator = (props:{tabs:typeof drawerTabs, tabBarPosition:\"top\"|\"bottom\", index?:number, onTab?:(index:number)=>void})=>{\r\n  const [index, setIndex] = React.useState(props.index || 0);\r\n  const entries = Object.entries(props.tabs)\r\n  const onTab = props.onTab\r\n  const icons = Object.assign({}, ...entries.map(([k, v])=>({[k]:v.icon})))\r\n  return <TabView\r\n    renderTabBar={(props:SceneRendererProps & {navigationState: NavigationState<any>})=>{\r\n      return <TabBar\r\n        {...props}\r\n        indicatorStyle={{ backgroundColor: \"#2196F3\" }}\r\n        style={{ backgroundColor:'white' }}\r\n        activeColor={'black'}\r\n        inactiveColor={'black'}\r\n        renderIcon={(scene)=>icons[scene.route.key]}\r\n        onTabPress={(scene)=>onTab?.(entries.findIndex(([k, v])=>k == scene.route.key))}\r\n      />\r\n    }}\r\n    navigationState={{ index, routes: entries.map(([k, v])=>({key:k, title:v.title}))}}\r\n    onIndexChange={setIndex}\r\n    renderScene={SceneMap(Object.assign({}, ...entries.map(([k, v])=>({[k]:v.component}))))}\r\n    tabBarPosition={props.tabBarPosition}\r\n  />\r\n}\r\n\r\nconst onAddList = [\r\n  ()=>navigate(\"ChannelEditScreen\", {type:\"messenger\"}),\r\n  ()=>navigate(\"ChannelEditScreen\", {type:\"board\"})\r\n]\r\n\r\nexport default React.memo(({user}:{user:UserMembership})=> {\r\n  const { colors } = useTheme();\r\n  const windowType = useResizeWindow();\r\n  const [index, setIndex] = useState(0);\r\n  return windowType=='landscape'?<View\r\n      style={[\r\n        styles.tabBar,\r\n        {\r\n          backgroundColor: colors.card,\r\n          borderTopColor: colors.border,\r\n        },\r\n        // tabBarStyle,\r\n      ]}\r\n      pointerEvents={false ? 'none' : 'auto'}\r\n    >\r\n      <Profile userId={user.id} username={user.username} name={user.name}/>\r\n      <View style={{flexDirection:'row-reverse'}}>\r\n          <TextButton title='+' textStyle={{fontSize:20}} style={{borderRadius:20}} onPress={onAddList[index]}/>\r\n      </View>\r\n      <View accessibilityRole=\"tablist\" style={styles.content}>\r\n        {Object.keys(drawerTabs).length>1 ? \r\n          <TabViewNavigator tabs={drawerTabs} tabBarPosition={\"top\"} onTab={setIndex}/>: \r\n          <View style={{borderTopWidth:1, flex:1, borderColor:colors.border}}>            \r\n            {Object.values(drawerTabs).map(drawerTab=>{const Tab = drawerTab.component; return <Tab key={drawerTab.title}/>})}\r\n          </View>\r\n        }\r\n      </View>\r\n    </View>:<View style={{width:0}}></View>\r\n})\r\n\r\n{/*<Text style={[styles.label, { color: d.isFocused ? colors.primary : '#222' }]}></Text> */}\r\n\r\nconst styles = StyleSheet.create({\r\n    tabBar: {\r\n      width:240,\r\n      elevation: 8,\r\n      borderRightWidth:1,\r\n      borderColor:Colors.borderColor\r\n    },\r\n    content: {\r\n      flex: 1,\r\n      flexDirection: 'row',\r\n    },\r\n    tab: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n    },\r\n    label: {\r\n        textAlign: 'center',\r\n        backgroundColor: 'transparent',\r\n      },\r\n  });","import React from 'react';\r\nimport {View} from 'react-native'\r\nimport {Text} from './Themed';\r\nimport { ProfileProps } from '../types';\r\nimport Avatar from './Avatar';\r\nimport TextButton from './TextButton';\r\nimport CommonTextInput from './CommonTextInput';\r\nimport { patchUser } from '../apis';\r\nimport useAuthContext from '../hooks/useAuthContext';\r\n\r\nexport default (props:ProfileProps)=>{\r\n    const [name, setName] = React.useState<string>()\r\n    const { auth, dispatch } = useAuthContext()\r\n    const isSelf = auth.user?.id == props.userId\r\n    const onChange = ()=>{\r\n        isSelf && patchUser({id:props.userId, name:name || ''}).finally(()=>{\r\n            setName(undefined)\r\n            dispatch({type:\"REFRESH\"})\r\n        })\r\n    }\r\n    return <View style={{width:'100%', height:135, justifyContent:'space-evenly', alignItems:'center'}}>\r\n        <Avatar {...props} size={75}/>\r\n        {name===undefined?\r\n            <TextButton textStyle={{fontWeight:'bold', fontSize:15}} onPress={()=>isSelf && setName(props.name)} title={props.name} disabled={!isSelf}/>:\r\n            <CommonTextInput value={name} style={{textAlign:'center'}} setValue={setName} onBlur={onChange} onEndEditing={onChange} />}\r\n        <Text style={{fontWeight:'normal', fontSize:14}}>{props.username}</Text>\r\n    </View>\r\n}","import React, { useState } from 'react';\r\nimport { TextInput } from 'react-native';\r\nimport Colors from '../constants/Colors';\r\nimport useColorScheme from '../hooks/useColorScheme';\r\nimport { CustomTextInputProps } from '../types';\r\n\r\nexport default (props:CustomTextInputProps)=>{\r\n    const [contentHeight, setContentHeight] = useState<number>()\r\n    const minHeight = props.minHeight || 30\r\n    const theme = useColorScheme()\r\n    return <TextInput style={[{\r\n            borderColor:'#d0d7de', \r\n            fontSize:16, \r\n            borderWidth:1, \r\n            borderRadius:6, \r\n            paddingHorizontal:10, \r\n            paddingVertical:3, \r\n            backgroundColor:Colors[theme].background,\r\n            color:Colors[theme].text,\r\n            height:props.multiline?contentHeight:minHeight,\r\n        }, props.style]} \r\n        editable={!props.disabled} \r\n        value={props.value} \r\n        onChangeText={props.setValue}\r\n        onContentSizeChange={props.multiline?(e) => setContentHeight(Math.max(e.nativeEvent.contentSize.height, minHeight) + 2):undefined}\r\n        onBlur={()=>props.onBlur?.(props.value)}\r\n        onEndEditing={()=>props.onEndEditing?.(props.value)}\r\n        multiline={props.multiline}\r\n    />\r\n}","/**\r\n * Learn more about Light and Dark modes:\r\n * https://docs.expo.io/guides/color-schemes/\r\n */\r\n\r\nimport * as React from 'react';\r\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\r\n\r\nimport Colors from '../constants/Colors'\r\nimport useColorScheme from '../hooks/useColorScheme';\r\n\r\nexport function useThemeColor(\r\n  props: { light?: string; dark?: string },\r\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\r\n) {\r\n  const theme = useColorScheme();\r\n  const colorFromProps = props[theme];\r\n\r\n  if (colorFromProps) {\r\n    return colorFromProps;\r\n  } else {\r\n    return Colors[theme][colorName];\r\n  }\r\n}\r\n\r\ntype ThemeProps = {\r\n  lightColor?: string;\r\n  darkColor?: string;\r\n};\r\n\r\nexport type TextProps = ThemeProps & DefaultText['props'];\r\nexport type ViewProps = ThemeProps & DefaultView['props'];\r\n\r\nexport function Text(props: TextProps) {\r\n  const { style, lightColor, darkColor, ...otherProps } = props;\r\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\r\n\r\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\r\n}\r\n\r\nexport function View(props: ViewProps) {\r\n  const { style, lightColor, darkColor, ...otherProps } = props;\r\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\r\n\r\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\r\n}\r\n","import { createIntl, createIntlCache } from \"@formatjs/intl\";\r\nimport {I18nManager} from \"react-native\";\r\nimport * as RNLocalize from \"react-native-localize\";\r\n\r\nconst translations = {\r\n  ko: require(\"./ko.json\"),\r\n} as const;\r\n\r\ntype Translation = keyof typeof translations;\r\n\r\n// fallback if no available language fits\r\nconst fallback = { languageTag: \"en\", isRTL: false };\r\n\r\nconst { languageTag, isRTL } =\r\n  RNLocalize.findBestLanguageTag(Object.keys(translations)) ?? fallback;\r\n\r\n// update layout direction\r\nI18nManager.forceRTL(isRTL);\r\n\r\n// console.log(languageTag)\r\nconst intl = createIntl(\r\n  {\r\n    defaultLocale: \"en\",\r\n    locale: languageTag,\r\n    messages: translations[languageTag as Translation],\r\n  },\r\n  createIntlCache(),\r\n);\r\n\r\ntype TranslationParams = Parameters<(typeof intl)[\"formatMessage\"]>[1];\r\n\r\nexport default (key: string, params?: TranslationParams) => \r\n  intl\r\n    .formatMessage({ id: key, defaultMessage: key }, params)\r\n    .toString();","/**\r\n * Learn more about deep linking with React Navigation\r\n * https://reactnavigation.org/docs/deep-linking\r\n * https://reactnavigation.org/docs/configuring-links\r\n */\r\n\r\nimport { LinkingOptions } from '@react-navigation/native';\r\nimport * as Linking from 'expo-linking';\r\nimport {main, login, modal} from '../screens';\r\n\r\nconst ROOTPATH = 'tokki-tok'  // github repository name\r\n\r\nObject.values(modal).forEach(v=>v.path = ROOTPATH + '/' + v.path)\r\n\r\nexport default  {\r\n  prefixes: [Linking.makeUrl('/')],\r\n  config: {\r\n    screens: {\r\n      Main: {\r\n        screens:{\r\n          ...main,\r\n          ...login,\r\n          NotFound: '*',\r\n        },\r\n        path: ROOTPATH\r\n      },\r\n      ...modal\r\n    },\r\n  },\r\n} as LinkingOptions;\r\n","import axios, { AxiosRequestConfig } from 'axios';\r\n// @ts-ignore\r\nimport {API_URL} from \"@env\"\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nexport const accountURL =  `${API_URL}/account/`\r\nconst baseURL =  `${API_URL}/messenger/`\r\nconst defaultOption:AxiosRequestConfig = {\r\n    baseURL,\r\n    withCredentials: true,\r\n    headers: {}\r\n};\r\nconst _axios = axios.create(defaultOption);\r\n\r\n_axios.interceptors.request.use(\r\n    config => {\r\n        return config;\r\n    },\r\n    error => {\r\n        return Promise.reject(error);\r\n    }\r\n)\r\n\r\n_axios.interceptors.response.use(\r\n    response => {\r\n        // if((response.request.responseURL as string).indexOf('/task/login')>=0 && response.data.length != 0){\r\n        //     // redirect login\r\n        // }\r\n        return response;\r\n    },\r\n    error => {\r\n        if (error.response.status === 401) {\r\n            getToken().then(async(token)=>{\r\n                const r = await _axios.post(\"/api/v1/user/sso/refresh/\", {token}, {headers:{'Authorization':''}, baseURL: accountURL})\r\n                if (r.status == 200 && r.data !== ''){\r\n                    setToken(r.data)\r\n                }\r\n            })\r\n        }\r\n        return Promise.reject(error)\r\n    }\r\n)\r\n\r\nexport const setToken = async (token:string|null)=>{\r\n    _axios.defaults.headers['Authorization'] = `JWT ${token}`\r\n    if (token)\r\n        await AsyncStorage.setItem(\"Authorization\", token)\r\n    else\r\n        AsyncStorage.removeItem(\"Authorization\")\r\n}\r\nexport const getToken = async ()=>{\r\n    const token = await AsyncStorage.getItem(\"Authorization\")\r\n    _axios.defaults.headers['Authorization'] = token?`JWT ${token}`:null\r\n    return token\r\n}\r\n\r\nexport default _axios\r\n","const tintColorLight = '#2f95dc';\r\nconst tintColorDark = '#fff';\r\n\r\nexport default {\r\n  light: {\r\n    text: '#000',\r\n    background: '#fff',\r\n    tint: tintColorLight,\r\n    tabIconDefault: '#ccc',\r\n    tabIconSelected: tintColorLight,\r\n    header:'#24292f',\r\n    buttonColor:'rgb(242,242,242)',\r\n    buttonBackgroundColor: '#f6f8fa', //'rgba(9,30,66,0.08)',//rgb(242,242,242)\r\n  },\r\n  dark: {\r\n    text: '#fff',\r\n    background: '#000',\r\n    tint: tintColorDark,\r\n    tabIconDefault: '#ccc',\r\n    tabIconSelected: tintColorDark,\r\n    header:'#dbd6d1',\r\n    buttonColor:'rgb(14,14,14)',\r\n    buttonBackgroundColor: '#080604',\r\n  },\r\n  button:{\r\n    borderColor:'rgba(27,31,36,0.15)',\r\n  },\r\n  borderColor:'#d0d7de',\r\n  \r\n  focus:'#0065A4',\r\n};\r\n","import { StackScreenProps } from '@react-navigation/stack';\r\nimport * as React from 'react';\r\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\r\nimport lang from '../lang'\r\n\r\nexport default function NotFoundScreen({\r\n  navigation,\r\n}: StackScreenProps<any, 'NotFound'>) {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>{lang(\"This screen doesn't exist.\")}</Text>\r\n      <TouchableOpacity onPress={() => navigation.replace('HomeScreen')} style={styles.link}>\r\n        <Text style={styles.linkText}>{lang(\"Go to home screen!\")}</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n  link: {\r\n    marginTop: 15,\r\n    paddingVertical: 15,\r\n  },\r\n  linkText: {\r\n    fontSize: 14,\r\n    color: '#2e78b7',\r\n  },\r\n});\r\n","import React, { createContext, useContext, useEffect, useMemo, useRef, useState } from \"react\"\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/messaging\";\r\n//@ts-ignore\r\nimport {FCM_PUBLIC_VAPID_KEY, FCM_API_KEY} from \"@env\"\r\nimport { Notification as NotificationType, UserMembership } from \"../types\";\r\nimport { getNotification, postNotification, putNotification } from \"../apis/notification\";\r\nconst firebaseConfig = require(\"../../web/firebase-config.js\")\r\n// Initialize Firebase\r\nconst key = firebaseConfig.messagingSenderId\r\nconst apiKeyEncrypted = (FCM_API_KEY as string).split('').map((v, i)=> (v.charCodeAt(0) ^ key.charCodeAt(i)).toString(16).padStart(2, '0')).join('')\r\nconst app = firebase.initializeApp({...firebaseConfig, apiKey:FCM_API_KEY});\r\n// const analytics = getAnalytics(app);\r\nconst messaging = firebase.messaging(app);\r\n\r\nmessaging.onMessage((payload) => {\r\n  if (!(\"Notification\" in window)) {\r\n    alert(\"This browser does not support desktop notification\");\r\n  }\r\n  else if (Notification.permission === \"granted\") {\r\n    const message_set = JSON.parse(payload.data['message_set'])[0]\r\n    new Notification(payload.data.channel_name, { body: `${payload.data.name}: ${message_set.content}` });\r\n  }\r\n});\r\n\r\nconst FirebaseContext = createContext<{enable:boolean, setEnable:(enable:boolean)=>void}>({enable:false, setEnable:()=>{}});\r\n\r\nconst requestToken = async()=>{\r\n  const permission = await Notification.requestPermission();\r\n  if (permission === 'granted') {\r\n    const serviceWorkerRegistration = await navigator.serviceWorker.register(`${process.env.PUBLIC_URL}/firebase-messaging-sw.js?${apiKeyEncrypted}`)\r\n    console.log('[SW]: SCOPE: ', serviceWorkerRegistration.scope);\r\n    const currentToken = await messaging.getToken({serviceWorkerRegistration, vapidKey: FCM_PUBLIC_VAPID_KEY })\r\n    window.addEventListener('beforeunload', (event:any) => {\r\n      event.preventDefault();\r\n      serviceWorkerRegistration.unregister()\r\n    });\r\n    if (currentToken)\r\n      return currentToken\r\n  }\r\n  return undefined\r\n}\r\n\r\nexport const FirebaseProvider = ({children, user}:{user?:UserMembership|null, children:React.ReactNode})=>{\r\n  const tokenRef = useRef<string>()\r\n  const [notification, setNotification] = useState<NotificationType>()\r\n  const enable = useMemo(()=>!(notification?.token), [notification])\r\n  const setEnable = (enable:boolean)=>{\r\n    if(user && notification){\r\n      putNotification({...notification, token:enable||tokenRef.current==undefined?null:tokenRef.current}).then((noti)=>{\r\n        setNotification(noti)\r\n      })\r\n    }\r\n  }\r\n  \r\n  useEffect(()=>{\r\n    let isMount = true;\r\n    const setNotificationInternal = (n?:NotificationType)=>{\r\n      if (isMount)setNotification(n)\r\n    }\r\n    if(user){\r\n      requestToken().then((t)=>{\r\n        tokenRef.current = t\r\n        getNotification(user.id).then(noti=>{\r\n          const token = t==undefined?null:t\r\n          if (noti == undefined)\r\n            postNotification({user:user.id, type:'WEB', token}).then(setNotificationInternal)\r\n          else\r\n            putNotification({...noti, token}).then(setNotificationInternal)\r\n        })\r\n      })\r\n    }\r\n    else{\r\n      setNotificationInternal(undefined)\r\n    }\r\n    return ()=>{isMount=false}\r\n  }, [user])\r\n  return !user?<>{children}</>:<FirebaseContext.Provider value={{enable, setEnable}}>\r\n    {children}\r\n  </FirebaseContext.Provider>\r\n}\r\n\r\nexport default ()=>{\r\n  const firebaseContext = useContext(FirebaseContext)\r\n  return firebaseContext\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Dimensions, Platform, View } from 'react-native'\r\nimport useIsMobile from '../hooks/useIsMobile'\r\n\r\ntype ViewProps = {windowType:'landscape'|'portrait', children:React.ReactNode}\r\n\r\nexport default (props:ViewProps)=>{\r\n    const isMobile = useIsMobile()\r\n    const [height, setHeight] = useState(window.innerHeight + 1)\r\n    useEffect(()=>{\r\n        if(isMobile && Platform.OS == 'web'){\r\n            const onChange = (e:any)=>{\r\n                setHeight(window.innerHeight + 1)\r\n            }\r\n            Dimensions.addEventListener(\"change\",onChange)\r\n            return () => Dimensions.removeEventListener(\"change\", onChange)\r\n            \r\n        }\r\n    },[ isMobile])\r\n    return <View style={{height:isMobile&&Platform.OS == 'web'?height:'100%'}}>\r\n        {props.children}\r\n    </View>\r\n\r\n}\r\n  ","import { CardStyleInterpolators, createStackNavigator } from '@react-navigation/stack';\r\nimport React, {useMemo} from 'react';\r\nimport { View } from 'react-native';\r\nimport { QueryClient, QueryClientProvider } from \"react-query\";\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport useResizeWindow from '../hooks/useResizeWindow';\r\nimport NotFoundScreen from '../screens/NotFoundScreen';\r\nimport {main, login, modal} from '../screens';\r\nimport DrawerNavigator from './DrawerNavigator';\r\nimport useAuthContext, {AuthProvider} from '../hooks/useAuthContext';\r\nimport { WebSocketProvider } from '../hooks/useWebsocketContext';\r\nimport HeaderRight from '../components/HeaderRight'\r\nimport Colors from '../constants/Colors';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\nimport { FirebaseProvider } from '../hooks/useFirebaseContext';\r\nimport useIsMobile from '../hooks/useIsMobile';\r\nimport MobileSafeAreaView from '../components/MobileSafeAreaView';\r\nimport useColorScheme from '../hooks/useColorScheme';\r\n\r\nconst Root = createStackNavigator();\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nexport default function RootNavigator() {\r\n    const windowType = useResizeWindow();\r\n    return (\r\n        <MobileSafeAreaView windowType={windowType}>\r\n            <AuthProvider>\r\n                <QueryClientProvider client={queryClient}>\r\n                    {/* devtools */}\r\n                    {/* <ReactQueryDevtools initialIsOpen={true} /> */}\r\n                        <Root.Navigator\r\n                            mode= 'modal'\r\n                            headerMode= 'screen'\r\n                            screenOptions={{\r\n                                cardStyle:{backgroundColor:\"white\"},\r\n                                animationEnabled: true,\r\n                                cardStyleInterpolator: CardStyleInterpolators.forVerticalIOS,\r\n                            }}\r\n                        >\r\n                            <Root.Screen name=\"Main\" component={MainNavigator} options={{headerShown:false}}/>\r\n                            {Object.entries(modal).map(([key, screen])=><Root.Screen key={key} name={key} component={screen.component} options={{\r\n                                title: screen.title,\r\n                                gestureDirection: windowType == 'landscape'?'vertical-inverted':'vertical'\r\n                            }} />)}\r\n                        </Root.Navigator>\r\n                </QueryClientProvider>\r\n            </AuthProvider>\r\n        </MobileSafeAreaView>\r\n    );\r\n}\r\n\r\nconst Main = createStackNavigator();\r\n\r\nfunction headerLeft(navigation:any, route:any, windowType:string, isMobile:boolean){\r\n    const canGOBackScreen = ['HomeScreen', 'LoginScreen'].findIndex(v=>v == route.name) == -1\r\n    const goBack = ()=>{\r\n        if (navigation.canGoBack())\r\n            navigation.goBack()\r\n        else if (canGOBackScreen)\r\n            navigation.replace('HomeScreen')\r\n    }\r\n    if (windowType=='portrait' && canGOBackScreen)\r\n        return <TouchableOpacity onPress={goBack}><Ionicons size={isMobile?20:24} style={{marginHorizontal:isMobile?16:20 }} name=\"arrow-back\"/></TouchableOpacity>\r\n    return null\r\n}\r\n\r\nfunction MainNavigator(){\r\n    const windowType = useResizeWindow();\r\n    const isMobile = useIsMobile()\r\n    const {auth} = useAuthContext()\r\n    const theme = useColorScheme()\r\n    const entries = useMemo(()=>{\r\n        if (auth.user === undefined)\r\n            return []\r\n        console.log('current user: ', auth.user)\r\n        return Object.entries(auth.user === null?login:main)\r\n    }, [auth])\r\n    return (auth.user!==undefined?<View style={{flexDirection:'row', flex:1}}>\r\n        {auth.user?<DrawerNavigator user={auth.user}/>:undefined}\r\n        <View style={{flex:1}}>\r\n            <FirebaseProvider user={auth.user}>\r\n                <WebSocketProvider disable={auth.user === null || auth.user === undefined}>\r\n                    <Main.Navigator\r\n                        screenOptions={({navigation, route})=>({\r\n                            headerStyle:{backgroundColor:Colors[theme].header, height:isMobile?50:undefined},\r\n                            headerTitleStyle:{color:'white'},\r\n                            headerLeft:()=>headerLeft(navigation, route, windowType, isMobile),\r\n                            headerRight:()=><HeaderRight/>,\r\n                            headerLeftContainerStyle:{backgroundColor:'white', borderBottomWidth:1, borderColor:Colors.borderColor},\r\n                            cardStyle:{flexShrink:1},\r\n                            animationEnabled:windowType=='portrait',\r\n                            cardStyleInterpolator: CardStyleInterpolators.forHorizontalIOS\r\n                        })}\r\n                    >\r\n                        {entries.map(([key, screen])=><Main.Screen key={key} name={key} component={screen.component} options={{ title: screen.title }} />)}\r\n                        <Main.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\r\n                    </Main.Navigator>\r\n                </WebSocketProvider>\r\n            </FirebaseProvider>\r\n        </View>\r\n    </View>:<></>);\r\n}","import React from 'react';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\r\nimport Navigation from './src/navigation';\r\nimport useColorScheme from './src/hooks/useColorScheme';\r\nimport useCachedResources from './src/hooks/useCachedResources';\r\n\r\nexport default function App() {\r\n  const isLoadingComplete = useCachedResources();\r\n  const colorScheme = useColorScheme();\r\n  if (!isLoadingComplete) {\r\n    return null;\r\n  } else {\r\n    return (\r\n      <SafeAreaProvider>\r\n        <Navigation colorScheme={colorScheme} />\r\n        <StatusBar />\r\n      </SafeAreaProvider>\r\n    );\r\n  }\r\n}\r\n","import { Ionicons } from '@expo/vector-icons';\r\nimport * as Font from 'expo-font';\r\nimport * as SplashScreen from 'expo-splash-screen';\r\nimport * as React from 'react';\r\n\r\nexport default function useCachedResources() {\r\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\r\n\r\n  // Load any resources or data that we need prior to rendering the app\r\n  React.useEffect(() => {\r\n    async function loadResourcesAndDataAsync() {\r\n      try {\r\n        SplashScreen.preventAutoHideAsync();\r\n\r\n        // Load fonts\r\n        await Font.loadAsync({\r\n          ...Ionicons.font,\r\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\r\n        });\r\n      } catch (e) {\r\n        // We might want to provide this error information to an error reporting service\r\n        console.warn(e);\r\n      } finally {\r\n        setLoadingComplete(true);\r\n        SplashScreen.hideAsync();\r\n      }\r\n    }\r\n\r\n    loadResourcesAndDataAsync();\r\n  }, []);\r\n\r\n  return isLoadingComplete;\r\n}\r\n","import React, { createContext, useContext, useEffect, useReducer, useMemo, Dispatch } from \"react\"\r\nimport { checkLogin, login, logout } from \"../apis\"\r\nimport { getNotification, putNotification } from \"../apis/notification\"\r\nimport { UserMembership } from \"../types\"\r\n\r\ntype AuthAction = {type:string, username?:string, password?:string, user?:UserMembership|null}\r\n\r\nexport type Auth = {user?:UserMembership|null, groupId?:number}\r\n\r\ntype AuthState ={user?:UserMembership|null, request?:{username:string, password:string}|null}\r\n\r\nconst AuthContext = createContext<{auth:Auth, dispatch:Dispatch<AuthAction>}>({auth:{}, dispatch:()=>{}});\r\n\r\nconst authReducer =(initialState:AuthState, action:AuthAction)=>{\r\n  switch (action.type){\r\n      case 'LOGIN_REQUEST':\r\n        return {\r\n          ...initialState,\r\n          request:{username:action.username, password:action.password},\r\n        } as AuthState\r\n      case 'LOGIN_GUEST':\r\n        return {\r\n          ...initialState,\r\n          request:{username:'guest', password:'guest'},\r\n        } as AuthState\r\n      case 'LOGIN_SUCCESS':\r\n          return{\r\n              ...initialState,\r\n              user:action.user,\r\n              request:undefined\r\n          }\r\n      case 'LOGIN_FAILED':\r\n          return{\r\n              ...initialState,\r\n              request:undefined\r\n          }\r\n      case 'LOGOUT_REQUEST':\r\n          return{\r\n              ...initialState,\r\n              request:null\r\n          }\r\n      case 'LOGOUT_SUCCESS':\r\n          return {\r\n            ...initialState,\r\n            user:null,\r\n            request:undefined\r\n          }\r\n      case 'REFRESH':\r\n        return {\r\n          ...initialState,\r\n          user:undefined\r\n        }\r\n      default:\r\n          throw new Error( `Unhandled action type: ${action.type}`)\r\n  }\r\n}\r\n\r\n\r\nexport const AuthProvider = ({children}:{children:React.ReactNode})=>{\r\n  const [authState, dispatch] = useReducer(authReducer, {} as Auth)\r\n  const auth = useMemo(()=>({\r\n    user:authState.user,\r\n    groupId: authState.user?.membership_set.find(g=>g.root_group_id==null)?.group\r\n  }), [authState])\r\n  useEffect(()=>{\r\n    if(authState.user===undefined){\r\n      checkLogin().then((user)=>{\r\n        dispatch({type:\"LOGIN_SUCCESS\", user})\r\n      }).catch((e)=>{\r\n        console.log(e)\r\n        dispatch({type:\"LOGOUT_SUCCESS\"})\r\n      })\r\n    }\r\n    else if(authState.user===null && authState.request){\r\n      login(authState.request.username, authState.request.password).then(user=>{\r\n        dispatch({type:\"LOGIN_SUCCESS\", user})\r\n      }).catch(()=>{\r\n        dispatch({type:\"LOGIN_FAILED\"})\r\n      })\r\n    }\r\n    else if(authState.user && authState.request===null){\r\n      getNotification(authState.user.id).then(noti=>{\r\n        noti && putNotification({...noti, token:''}).then(()=>{\r\n          logout().then(()=>dispatch({type:\"LOGOUT_SUCCESS\"}))\r\n        })\r\n      })\r\n    }\r\n  }, [authState])\r\n  return <AuthContext.Provider value={{auth, dispatch}}>\r\n    {children}\r\n  </AuthContext.Provider>\r\n}\r\n\r\nexport default ()=>{\r\n  const authContext = useContext(AuthContext)\r\n  return authContext\r\n}\r\n","firebaseConfig = {\n    \"authDomain\": \"virtual-metrics-355712.firebaseapp.com\",\n    \"projectId\": \"virtual-metrics-355712\",\n    \"storageBucket\": \"virtual-metrics-355712.appspot.com\",\n    \"messagingSenderId\": \"76003576924\",\n    \"appId\": \"1:76003576924:web:c8c8a006d07918bbc02a99\",\n    \"measurementId\": \"G-SEL35L4N5R\"\n}\nif (typeof module !== 'undefined') {\n    module.exports = firebaseConfig\n}\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","/**\r\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\r\n * https://reactnavigation.org/docs/getting-started\r\n *\r\n */\r\nimport _ from 'lodash';\r\nimport { NavigationContainer, DefaultTheme, DarkTheme, NavigationContainerRef } from '@react-navigation/native';\r\nimport * as React from 'react';\r\nimport { ColorSchemeName } from 'react-native';\r\n\r\nimport LinkingConfiguration from './LinkingConfiguration';\r\nimport RootNavigator from './RootNavigator';\r\n\r\nconst navigationRef = React.createRef<NavigationContainerRef>();\r\n\r\nexport function navigate(name:string, params?:any) {\r\n  if (params)\r\n    navigationRef.current?.navigate(name, params);\r\n  navigationRef.current?.navigate(name);\r\n}\r\n\r\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\r\n  return (\r\n    <NavigationContainer\r\n      ref={navigationRef}\r\n      documentTitle={{formatter: (options, route) => {return `TOKKI TOK`}}}\r\n      linking={(process.versions && process.versions['electron'])?undefined:LinkingConfiguration}\r\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\r\n      <RootNavigator />\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\n(function(l) {  // for github-page\r\n    if (l !== undefined && l.search[1] === '/' ) {\r\n        var decoded = l.search.slice(1).split('&').map(function(s) { \r\n        return s.replace(/~and~/g, '&')\r\n        }).join('?');\r\n        window.history.replaceState(null, '',\r\n            l.pathname.slice(0, -1) + decoded + l.hash\r\n        );\r\n    }\r\n}(window.location))\r\n    \r\nconst ignoreWarnings = ['ReactNativeFiberHostComponent'];\r\nconst _console = _.clone(console);\r\nconsole.warn = (message: string|Object) => {\r\n    var warn = true;\r\n    if (message instanceof Object)\r\n    warn = false;\r\n    else{\r\n    ignoreWarnings.forEach((value)=>{\r\n        if (message.indexOf && message.indexOf(value) <= -1) {\r\n            warn = false;\r\n        }\r\n    })\r\n    };\r\n    if (warn){\r\n        _console.warn(message);\r\n    }\r\n    else{\r\n        // console.log(message)\r\n    }\r\n};\r\n","\r\nimport { User, UserMembership } from '../types';\r\nimport axios, { getToken, setToken, accountURL as baseURL } from './axios';\r\n\r\nexport const login = async(username:string, password:string) => {\r\n    if(username.endsWith('.guest') && password.length == 0)\r\n        password = 'guest'\r\n    const r = await axios.post(\"/api-token-auth/\", {username, password});\r\n    if(r.status == 200){\r\n        await setToken(r.data)\r\n        return await checkLogin()\r\n    }\r\n}\r\n\r\nexport const logout = async() => {\r\n    await setToken(null)\r\n    return await axios.get(\"/api-auth/logout/\")\r\n}\r\n\r\nexport const guestLogin =  async() => {\r\n    return await login('guest', 'guest')\r\n}\r\n\r\nconst checkLoginToken = async ()=>{\r\n    const value = (await axios.get(\"/api/v1/users/memberships/?_self=true\"))?.data\r\n    if (value && value.length){\r\n        return value[0] as UserMembership\r\n    }\r\n    return null\r\n}\r\n\r\nexport const checkLogin = async() => {\r\n    const token = await getToken()\r\n    if (token === null)\r\n        return null\r\n    try{\r\n       return await checkLoginToken()\r\n    }\r\n    catch(e:any){\r\n        let error = e\r\n        if(e.response !== undefined && e.response.status==401){\r\n            try{\r\n                return await checkLoginToken()\r\n            }\r\n            catch(e2){\r\n                error = e2\r\n            }\r\n        }\r\n        const isOffline = ((error as any).code == \"ERR_NETWORK\" || (error as any).message && ((error as any).message as string).startsWith(\"Cannot read\"))\r\n        throw {error, isOffline}\r\n    }\r\n}\r\n\r\nexport const getUserList = async (group_id:number)=>{\r\n    return (await axios.get(`/api/v1/users/?group_id=${group_id}`) ).data as User[]\r\n}\r\n\r\nexport const patchUser = async (user:{id:number, name:string})=>{\r\n    await axios.patch(`/api/v1/user/`, {ids:[user.id], updated: {name:user.name}}, {baseURL})\r\n}\r\n\r\nexport const getUserMembershipList = async (group_id:number)=>{\r\n    return (await axios.get(`/api/v1/users/memberships/?group_id=${group_id}`) ).data as UserMembership[]\r\n}\r\n","import { Channel, MessengerMember, MessengerContent, EditMessage, MessengerChannel, DirectChannel } from '../types';\r\nimport axios from './axios';\r\n\r\nexport const getMessengerChannelList = async (user_id:number)=>{\r\n    return (await axios.get(`/api/v1/channels/messenger/?type=messenger&messenger_user_id=${user_id}`) ).data as MessengerChannel[]\r\n}\r\n\r\nexport const postChannel = async(channel:Channel)=>{\r\n    return (await axios.post(`/api/v1/channels/`, channel)).data as Channel\r\n}\r\n\r\nexport const postDirectChannel = async(channel:DirectChannel)=>{\r\n    return (await axios.post(`/api/v1/channels/direct/`, channel)).data as Channel\r\n}\r\n\r\nexport const putChannel = async(channel:Channel)=>{\r\n    return (await axios.put(`/api/v1/channels/${channel.id}/`, channel)).data as Channel\r\n}\r\n\r\nexport const deleteChannel = async(channel_id:number)=>{\r\n    await axios.delete(`/api/v1/channels/${channel_id}/`)\r\n}\r\n\r\nexport const getMessengerMemberList = async(channel_id:number)=>{\r\n    return (await axios.get(`/api/v1/messengermembers/?channel=${channel_id}`) ).data as MessengerMember[]\r\n}\r\n\r\nexport const postBulkMessengerMember = async(data:{channel_id:number, user_ids:number[]})=>{\r\n    await axios.post(`/api/v1/messengermembers/bulk/`, {channel:data.channel_id, user_ids:data.user_ids})\r\n}\r\n\r\nexport const deleteMessengerMember = async(member_id:number)=>{\r\n    await axios.delete(`/api/v1/messengermembers/${member_id}/`)\r\n}\r\n\r\nexport const getMessengerContentList = async (channel_id:number, id_lt?:number)=>{\r\n    const id_lt_param = id_lt?`&id_lt=${id_lt}`:''\r\n    return (await axios.get(`/api/v1/messengercontents/?limit=30&channel=${channel_id}${id_lt_param}`)).data.results as MessengerContent[]\r\n}\r\n\r\nexport const postMessage = async (message:EditMessage)=>{\r\n    if (message.newFile){\r\n        const formData = new FormData(); // formData 객체를 생성한다.\r\n        formData.append(\"file\", message.newFile)\r\n        Object.entries(message).forEach(value=>{\r\n            formData.append(value[0], `${value[1]}`)\r\n        })\r\n        await axios.post(`/api/v1/messengercontents/messages/`, formData, {headers:{\r\n            ...(axios.defaults.headers as any), \"Content-Type\": \"multipart/form-data\",\r\n        }})\r\n    }\r\n    else{\r\n        await axios.post(`/api/v1/messengercontents/messages/`, message)\r\n    }\r\n}\r\n\r\nexport const deleteMessengerContent = async (content_id:number)=>{\r\n    await axios.delete(`/api/v1/messengercontents/${content_id}/`)\r\n}","import React, { useState } from 'react';\r\nimport { Text, StyleSheet, Pressable, StyleProp, ViewStyle} from 'react-native';\r\nimport Colors from '../constants/Colors';\r\nimport useColorScheme from '../hooks/useColorScheme';\r\nimport { CustomButtonProps } from '../types';\r\n\r\nconst DefaultButton = (props:CustomButtonProps)=>{\r\n    const [hover, setHover] = useState(false)\r\n    return <Pressable\r\n        onPress={()=>props.onPress()}\r\n        //@ts-ignore\r\n        onHoverIn={()=>setHover(true)}\r\n        onHoverOut={()=>setHover(false)}\r\n        style={[\r\n            {\r\n                paddingVertical:5, \r\n                paddingHorizontal:16\r\n            },\r\n            props.style,\r\n            hover?{backgroundColor:props.color}:{}\r\n        ]}>\r\n            <Text selectable={false} style={[{fontSize:14}, props.textStyle]}>{props.title}</Text>\r\n        </Pressable>\r\n}\r\n\r\nexport default (props:CustomButtonProps)=>{\r\n    const theme = useColorScheme()\r\n    const _props = {\r\n        color:Colors[theme].buttonColor,\r\n        ...props,\r\n        style:[\r\n            styles.style,\r\n            {\r\n                backgroundColor:Colors[theme].buttonBackgroundColor\r\n            },\r\n            props.style,\r\n        ] as StyleProp<ViewStyle>,\r\n        textStyle:[\r\n            styles.text, \r\n            {color:Colors[theme].text},\r\n            props.textStyle\r\n        ]\r\n    }\r\n    return <DefaultButton {..._props}/>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    style:{\r\n        borderRadius:6, \r\n        borderColor:Colors.button.borderColor, \r\n        borderWidth:1, \r\n    },\r\n    text:{\r\n        textAlign:'center', \r\n        fontWeight:'600'\r\n    }\r\n});\r\n","import { useState, useEffect } from 'react';\r\nimport { Dimensions, ScaledSize } from 'react-native';\r\n//@ts-ignore\r\nimport useMobileDetect from 'use-mobile-detect-hook';\r\n\r\ntype WindowType = 'portrait' | 'landscape'\r\n\r\nconst getWindowType = (window:ScaledSize)=> window.height >= window.width?'portrait':'landscape' as WindowType;\r\n\r\nexport default function useResizeWindow() {\r\n  const detectMobile = useMobileDetect();\r\n  const [windowType, setWindowType] = useState(getWindowType(Dimensions.get('window')))\r\n  const onChange = () => setWindowType(getWindowType(Dimensions.get('window')))\r\n\r\n  useEffect(() => {\r\n    Dimensions.addEventListener(\"change\", onChange);\r\n    return () => {\r\n      Dimensions.removeEventListener(\"change\", onChange);\r\n    };\r\n  });\r\n  if (detectMobile.isMobile())\r\n    return 'portrait'\r\n  return windowType\r\n}","import { ColorSchemeName, useColorScheme as _useColorScheme } from 'react-native';\r\n\r\n// The useColorScheme value is always either light or dark, but the built-in\r\n// type suggests that it can be null. This will not happen in practice, so this\r\n// makes it a bit easier to work with.\r\nexport default function useColorScheme(): NonNullable<ColorSchemeName> {\r\n  return _useColorScheme() as NonNullable<ColorSchemeName>;\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\r\nimport { getMessengerChannelList, postChannel, postDirectChannel, putChannel } from \"../../apis\";\r\nimport { MessengerChannel, MessengerContent } from \"../../types\";\r\nimport { Auth } from \"../useAuthContext\";\r\nimport useWebsocketContext from \"../useWebsocketContext\";\r\n\r\nexport default function useMessengerChannelList(auth?:Auth){\r\n  const queryClient = useQueryClient()\r\n  const {lastJsonMessage} = useWebsocketContext()\r\n  const { data } = useQuery(\"MessengerChannelList\" , async()=>auth?.user?.id?(await getMessengerChannelList(auth.user.id)):[])\r\n\r\n  useEffect(()=>{\r\n    if(lastJsonMessage !=null){\r\n      if(lastJsonMessage['type']=='enter'){\r\n        queryClient.setQueryData<MessengerChannel[]>(\"MessengerChannelList\", (_data)=>{\r\n          return (_data?.find(v=>v.id==lastJsonMessage['data']['id'])?_data:[lastJsonMessage['data'] , ...(_data|| [])]).sort((a, b)=>a.id - b.id)\r\n        })\r\n      }\r\n      if (lastJsonMessage['type']=='next_message'){\r\n        const data:MessengerContent = lastJsonMessage['data']\r\n        queryClient.setQueryData<MessengerChannel[]>(\"MessengerChannelList\", (_data)=>(_data || []).map(v=>{\r\n          if (v.id == data.channel){\r\n            return {...v, last_message:{content:data.message_set[0]?.content, created:data.created}}\r\n          }\r\n          return v\r\n        }))\r\n      }\r\n      // if(lastJsonMessage['type']=='leave'){\r\n      //   queryClient.setQueryData<Channel[]>(\"MessengerChannelList\", (_data)=>_data?.filter(v=>v.id!=lastJsonMessage['data']['channel_id']) || [])\r\n      // }\r\n    }\r\n  }, [lastJsonMessage])\r\n  return data\r\n}\r\n\r\nexport function useMessengerChannelSorted(auth?:Auth){\r\n  const channelList = useMessengerChannelList(auth);\r\n  return channelList?.sort((a, b)=>(a.last_message?.created || '') < (b.last_message?.created || '')?1:-1)\r\n}\r\nexport function useMessengerChannelMutation(){\r\n  const queryClient = useQueryClient()\r\n\r\n  const create = useMutation(postChannel, {\r\n    onSuccess: ()=>queryClient.invalidateQueries(\"MessengerChannelList\")\r\n  });\r\n\r\n  const update = useMutation(putChannel, {\r\n    onSuccess: () => queryClient.invalidateQueries(\"MessengerChannelList\")\r\n  })\r\n\r\n  const direct = useMutation(postDirectChannel, {\r\n    onSuccess: () => queryClient.invalidateQueries(\"MessengerChannelList\")\r\n  })\r\n\r\n  return { create:create.mutateAsync, update:update.mutateAsync, direct:direct.mutateAsync}\r\n}"],"sourceRoot":""}