{"version":3,"sources":["src/components/HeaderRight.tsx","src/screens/main/LoginScreen.tsx","src/components/CommonSection.tsx","src/hooks/lists/useMessengerContent.List.ts","src/hooks/lists/useMessengerMemberList.ts","src/components/LinkPreview.tsx","src/lib/react-native-webrtc/useWebsocketContext.tsx","src/lib/react-native-webrtc/webrtc/p2p.tsx","src/lib/react-native-webrtc/webrtc/index.ts","src/lib/react-native-webrtc/LocalCam.tsx","src/lib/react-native-webrtc/RemoteCam.tsx","src/screens/main/ChatScreen/VideoCallSection.tsx","src/components/FilePreview.tsx","src/screens/main/ChatScreen/index.tsx","src/screens/main/TabOneScreen.tsx","src/components/RowField.tsx","src/components/TextField.tsx","src/screens/ChannelEditScreen.tsx","src/screens/InviteScreen.tsx","src/screens/index.ts","src/screens/main/HomeScreen.tsx","src/screens/ProfileScreen.tsx","src/hooks/useWebsocketContext.tsx","src/components/TextButton.tsx","src/apis/notification.ts","src/hooks/useIsMobile.ts","src/components/CommonItem.tsx","src/hooks/lists/useUserMembershipList.ts","src/lib/react-native-paper/Avatar.tsx","src/components/Avatar.tsx","src/tabs/DrawerTab.tsx","src/tabs/MessengerTab.tsx","src/tabs/index.ts","src/tabs/MemberTab.tsx","src/navigation/DrawerNavigator.tsx","src/components/Profile.tsx","src/components/CommonTextInput.tsx","src/components/Themed.tsx","src/lang/index.ts","src/navigation/LinkingConfiguration.ts","src/apis/axios.ts","src/constants/Colors.ts","src/screens/NotFoundScreen.tsx","src/hooks/useFirebaseContext.tsx","src/components/MobileSafeAreaView.tsx","src/navigation/RootNavigator.tsx","App.tsx","src/hooks/useCachedResources.ts","src/hooks/useAuthContext.tsx","web/firebase-config.js","src/assets/fonts/SpaceMono-Regular.ttf","src/navigation/index.tsx","src/apis/account.ts","src/apis/messenger.ts","src/components/CommonButton.tsx","src/hooks/useResizeWindow.ts","src/hooks/useColorScheme.ts","src/hooks/lists/useMessengerChannelList.ts"],"names":["props","dispatch","useAuthContext","windowType","useResizeWindow","defaultButtonProps","title","lang","onPress","type","buttonProps","extra","filter","v","undefined","style","flexDirection","map","k","key","textStyle","color","Styles","StyleSheet","create","login_container","flex","backgroundColor","login_header","alignItems","paddingTop","paddingBottom","login_header_logo","width","resizeMode","login_header_text","marginTop","fontSize","login_header_text_bold","fontWeight","login_wrapper","justifyContent","paddingVertical","borderTopRightRadius","borderTopLeftRadius","form","maxWidth","form_input","height","paddingHorizontal","marginBottom","borderRadius","button","button_label","login_social","login_social_separator","login_social_separator_line","login_social_separator_text","marginHorizontal","login_social_buttons","login_social_button","borderWidth","borderColor","login_social_icon","login_social_facebook","login_footer_text","guest_footer_text","alignSelf","margin","login_footer_link","CommonSection","styles","outerContainer","outerContainerStyle","container","containerStyle","withSeparator","separator","lightColor","darkColor","titleView","titleStyle","subtitle","bodyView","bodyStyle","children","marginVertical","textAlign","padding","Colors","useMessengerContentList","channel_id","queryClient","useQueryClient","useInfiniteQuery","a","async","pageParam","getMessengerContentList","then","current","select","data","pages","length","next","getNextPageParam","lastPage","id","refetchOnReconnect","refetchOnWindowFocus","fetchNextPage","lastJsonMessage","useWebsocketContext","useEffect","setQueryData","_data","pageParams","useMessengerMemberList","useQuery","getMessengerMemberList","useMessengerMemberMutation","invite","useMutation","postBulkMessengerMember","onSuccess","invalidateQueries","leave","deleteMessengerMember","mutate","link","isMobile","Linking","openURL","url","image","Image","source","uri","maxHeight","description","WebSocketContext","createContext","sendJsonMessage","WebSocketProvider","disable","path","Context","useBackground","useContext","console","log","peerConstraints","iceServers","JSON","parse","sessionConstraints","mandatory","OfferToReceiveAudio","OfferToReceiveVideo","VoiceActivityDetection","mediaConstraints","audio","video","framerate","onICEcandidate","pc","message","_message","rtcMessage","candidate","RTCIceCandidate","addIceCandidate","sendICEcandidate","event","sendMessage","receiver","target","optimizeSdp","offerDescription","arr","sdp","split","forEach","str","i","test","RTCSessionDescription","join","createOffer","pcRefCurrent","stream","user","addStream","setLocalDescription","name","camStyle","cam","bottonContainer","position","bottom","buttonBar","label","pcRef","useRef","useState","sender","setSender","_stream","setStream","isPlay","useMemo","CustomRTCView","useCallback","React","memo","videoProps","start","mode","mediaDevices","getUserMedia","newStream","getDisplayMedia","catch","e","Object","entries","error","stop","getTracks","track","websocketOnMessage","response","channel_name","peerConnection","RTCPeerConnection","addEventListener","answerDescription","setRemoteDescription","useLocalCam","View","Text","Button","setReceiver","setUser","close","clearInterval","statsInterval","iceConnectionState","activeStream","setInterval","getStats","stats","statsOutput","framePerSecond","report","kind","keys","statName","framesPerSecond","Date","toTimeString","addTransceiver","direction","streams","getRemoteStreams","createAnswer","localDescription","useRemoteCam","TextInput","value","onChangeText","VideoView","scale","flexGrow","focusGuest","setFocusGuest","VideoCallContainer","setDisable","auth","videoMode","setVideoMode","guests","setGuests","useRtcContext","find","Math","max","ceil","sqrt","toggleVideoMode","Themed","aspectRatio","flexShrink","borderLeftWidth","borderBottomWidth","flexWrap","RemoteCam","LocalCam","CommonButton","file","showBorder","FontAwesome","size","filename","floor","pow","toFixed","humanFileSize","filesize","MessengerContentPageItem","useIsMobile","nextPage","nextContent","content","index2","created","slice","date","isSystem","isFirst","isSelf","ownerId","dayChanged","message_set","marginLeft","Avatar","userId","linkDefault","wordBreak","linkStyle","selectable","file_set","fileIndex","FilePreview","link_set","linkIndex","LinkPreview","Panel_Button_Text","Panel_Holder","RowField","rowStyle","TextField","CommonTextInput","field","InviteItem","selectedRef","has","item","selected","setSelected","renderMemberItem","delete","add","main","HomeScreen","component","navigation","route","theme","useColorScheme","text","options","headerRight","HeaderRight","navigate","useLayoutEffect","index","params","tab","setOptions","TextButton","paddingLeft","tabs","bottomTabs","tabBarPosition","parseInt","onTab","setParams","ChatScreen","inputRef","channel","useMessengerChannelList","memberList","member_id","messengerMemberMutation","setValue","autoFocus","setAutoFocus","postValue","contentMutation","postMessage","_delete","deleteMessengerContent","d","variables","useMessengerContentMutation","back","renderItem","canGoBack","goBack","focus","VideoCallSection","minWidth","contentContainerStyle","onScroll","nativeEvent","contentOffset","y","contentSize","onLayout","p","layout","ref","background","onSubmitEditing","blurOnSubmit","Promise","resolve","reject","Platform","OS","input","document","createElement","onchange","files","onabort","onerror","click","f","TabOneScreen","login","LoginScreen","username","setUsername","password","setPassword","_login","placeholder","autoCapitalize","keyboardType","secureTextEntry","TouchableOpacity","modal","ChannelEditScreen","channelList","channelMutation","useMessengerChannelMutation","setName","setDescription","multiline","groupId","newChannel","owner","group","update","screen","replace","InviteScreen","userList","useUserMembershipList","Set","memberSet","user_ids","ProfileScreen","Profile","counterpart","direct","SCHEMA","DOMAIN","WebSocketInternalProvider","token","setToken","AppState","currentState","isActive","setIsActive","useWebSocket","shouldReconnect","closeEvent","protocols","onOpen","onClose","AsyncStorage","getItem","onChange","nextState","removeEventListener","Provider","getNotification","user_id","axios","get","postNotification","notification","post","putNotification","put","useMobileDetect","CommonItem","setHover","press","setPress","onPressIn","onPressOut","onHoverIn","onHoverOut","minHeight","getUserMembershipList","normalizeHash","hash","min","initHash","charCodeAt","abs","stringToHSL","toUpperCase","DrawerTab","Messenger","useMessengerChannelSorted","MessengerIcon","Ionicons","OneTab","MemberTab","icon","MemberIcon","TwoTab","today","toISOString","last_message","marginRight","opacity","member_count","unread_count","drawerTabs","memberItem","TabViewNavigator","setIndex","icons","assign","renderTabBar","indicatorStyle","activeColor","inactiveColor","renderIcon","scene","onTabPress","findIndex","navigationState","routes","onIndexChange","renderScene","SceneMap","onAddList","colors","useTheme","tabBar","card","borderTopColor","border","pointerEvents","accessibilityRole","borderTopWidth","values","drawerTab","Tab","elevation","borderRightWidth","patchUser","finally","disabled","onBlur","onEndEditing","contentHeight","setContentHeight","editable","onContentSizeChange","useThemeColor","colorName","colorFromProps","otherProps","light","dark","translations","ko","require","RNLocalize","languageTag","isRTL","I18nManager","forceRTL","intl","createIntl","defaultLocale","locale","messages","createIntlCache","formatMessage","defaultMessage","toString","ROOTPATH","prefixes","config","screens","Main","NotFound","accountURL","defaultOption","baseURL","withCredentials","headers","_axios","interceptors","request","use","status","getToken","r","defaults","setItem","removeItem","tint","tabIconDefault","tabIconSelected","header","buttonColor","buttonBackgroundColor","NotFoundScreen","linkText","firebaseConfig","messagingSenderId","apiKeyEncrypted","padStart","app","firebase","initializeApp","apiKey","messaging","onMessage","payload","window","Notification","permission","body","alert","FirebaseContext","enable","setEnable","FirebaseProvider","tokenRef","setNotification","isMount","setNotificationInternal","n","requestPermission","navigator","serviceWorker","register","process","serviceWorkerRegistration","scope","vapidKey","currentToken","preventDefault","unregister","requestToken","t","noti","innerHeight","setHeight","Dimensions","Root","createStackNavigator","QueryClient","RootNavigator","MobileSafeAreaView","client","Navigator","headerMode","screenOptions","cardStyle","animationEnabled","cardStyleInterpolator","CardStyleInterpolators","forVerticalIOS","Screen","MainNavigator","headerShown","gestureDirection","DrawerNavigator","headerStyle","headerTitleStyle","headerLeft","canGOBackScreen","headerLeftContainerStyle","forHorizontalIOS","App","isLoadingComplete","setLoadingComplete","SplashScreen","Font","font","warn","useCachedResources","colorScheme","StatusBar","AuthContext","authReducer","initialState","action","Error","AuthProvider","useReducer","authState","membership_set","g","root_group_id","checkLogin","logout","module","exports","navigationRef","Navigation","documentTitle","formatter","linking","versions","LinkingConfiguration","DarkTheme","DefaultTheme","l","search","decoded","s","history","replaceState","pathname","location","ignoreWarnings","_console","_","clone","indexOf","endsWith","guestLogin","checkLoginToken","isOffline","code","startsWith","getUserList","group_id","patch","ids","updated","getMessengerChannelList","postChannel","postDirectChannel","putChannel","deleteChannel","id_lt","id_lt_param","results","formData","FormData","append","content_id","DefaultButton","hover","_props","getWindowType","detectMobile","setWindowType","_useColorScheme","sort","b","mutateAsync"],"mappings":"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","file":"static/js/app.83e483fd.chunk.js","sourcesContent":["import React from 'react'\nimport TextButton from \"./TextButton\"\nimport useAuthContext from \"../hooks/useAuthContext\"\nimport useResizeWindow from '../hooks/useResizeWindow'\nimport { View } from 'react-native'\nimport lang from '../lang'\n\ntype ButtonProps = {title:string, onPress:()=>void, windowType?:'landscape'|'portrait'}\n\nexport default (props:{extra?:ButtonProps[]})=>{\n    const {dispatch} = useAuthContext()\n    const windowType = useResizeWindow()\n    const defaultButtonProps:ButtonProps[] = [{title:lang('sign out'), onPress:()=>dispatch({type:\"LOGOUT_REQUEST\"})}]\n    const buttonProps = (props.extra?[...props.extra, ...defaultButtonProps]:defaultButtonProps).filter(v=>v.windowType==windowType || v.windowType == undefined)\n    return<View style={{flexDirection:'row'}}>\n        {buttonProps.map((v,k)=><TextButton key={k} {...v} textStyle={{color:'white'}} color='#gray'/>)}\n    </View>\n}\n  ","import React, {useLayoutEffect, useState} from 'react';\nimport {\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n  StyleSheet,\n} from 'react-native';\nimport { StackScreenProps } from '@react-navigation/stack';\nimport useAuthContext from '../../hooks/useAuthContext';\nimport lang from '../../lang'\n\nexport default function LoginScreen({\n  navigation, route\n}: StackScreenProps<any, 'Login'>) {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const {dispatch} = useAuthContext()\n  const _login = ()=>dispatch({type:'LOGIN_REQUEST', username, password})\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      headerRight: undefined\n    });\n  }, [navigation, route]);\n\n  return (\n    <View style={Styles.login_wrapper}>\n      <View style={Styles.form}>\n        <TextInput\n          style={Styles.form_input}\n          value={username}\n          placeholder={lang('Username')}\n          onChangeText={(text) => setUsername(text)}\n          autoCapitalize={'none'}\n          keyboardType={'email-address'}\n          onSubmitEditing={_login}\n        />\n        <TextInput\n          style={Styles.form_input}\n          value={password}\n          placeholder={lang('Password')}\n          secureTextEntry\n          onChangeText={(text) => setPassword(text)}\n          onSubmitEditing={_login}\n        />\n        <TouchableOpacity onPress={_login}>\n          <View style={Styles.button}>\n            <Text style={Styles.button_label}>{lang('Sign in')}</Text>\n          </View>\n        </TouchableOpacity>\n        <TouchableOpacity onPress={() => dispatch({type:\"LOGIN_GUEST\"})}>\n          <Text style={Styles.guest_footer_text}>\n            {lang(\"Sign in as guest\")}\n          </Text>\n        </TouchableOpacity>\n      </View>\n      <View style={Styles.login_social}>\n        <View style={Styles.login_social_separator}>\n          <View style={Styles.login_social_separator_line} />\n          <Text style={Styles.login_social_separator_text}>{'*'}</Text>\n          <View style={Styles.login_social_separator_line} />\n        </View>\n        <View style={Styles.login_social_buttons}>\n        </View>\n      </View>\n      {/* <>\n        <TouchableOpacity onPress={() => navigate(\"RegistrationScreen\")}>\n          <Text style={Styles.login_footer_text}>\n            {\"Don't have an account? \"}\n            <Text style={Styles.login_footer_link}>{'Sign up'}</Text>\n          </Text>\n        </TouchableOpacity>\n      </> */}\n    </View>\n  );\n};\n\nconst Styles = StyleSheet.create({\n    login_container: {\n      flex: 1,\n      backgroundColor: '#FFF',\n    },\n    login_header: {\n      alignItems: 'center',\n      paddingTop: 30,\n      paddingBottom: 50,\n      backgroundColor: '#208AEC',\n    },\n    login_header_logo: {\n      width: 220,\n      resizeMode: 'contain',\n    },\n    login_header_text: {\n      marginTop: 15,\n      color: '#f0f0f0',\n      fontSize: 16,\n    },\n    login_header_text_bold: {\n      color: '#fff',\n      fontWeight: 'bold',\n    },\n    login_wrapper: {\n      flex: 1,\n      justifyContent: 'space-between',\n      paddingVertical: 40,\n      borderTopRightRadius: 12,\n      borderTopLeftRadius: 12,\n      marginTop: -10,\n      backgroundColor: '#fff',\n      alignItems: 'center',\n    },\n    form: {\n      width: '100%',\n      maxWidth: 280,\n    },\n    form_input: {\n      height: 44,\n      paddingHorizontal: 20,\n      marginBottom: 20,\n      backgroundColor: '#EDF0F7',\n      borderRadius: 50,\n    },\n    button: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: 44,\n      backgroundColor: '#0065A4',\n      borderRadius: 50,\n    },\n    button_label: {\n      color: '#fff',\n      fontSize: 16,\n    },\n    login_social: {\n      width: '100%',\n      maxWidth: 280,\n      marginTop: 20,\n    },\n    login_social_separator: {\n      flexDirection: 'row',\n      alignItems: 'center',\n    },\n    login_social_separator_line: {\n      flex: 1,\n      width: '100%',\n      height: 1,\n      backgroundColor: '#E0E0E0',\n    },\n    login_social_separator_text: {\n      marginHorizontal: 10,\n      color: '#808080',\n      fontSize: 16,\n    },\n    login_social_buttons: {\n      flexDirection: 'row',\n      justifyContent: 'center',\n      marginTop: 20,\n    },\n    login_social_button: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: 60,\n      height: 60,\n      marginHorizontal: 12,\n      borderWidth: 1,\n      borderColor: '#E7E7E7',\n      borderRadius: 60,\n    },\n    login_social_icon: {\n      width: 38,\n      height: 38,\n      resizeMode: 'contain',\n    },\n    login_social_facebook: {\n      backgroundColor: '#4267B2',\n      borderColor: '#4267B2',\n    },\n    login_footer_text: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      color: '#808080',\n      fontSize: 14,\n    },\n    guest_footer_text: {\n      flexDirection: 'row',\n      alignSelf: 'center',\n      color: '#808080',\n      fontSize: 15,\n      margin: 15\n    },\n    login_footer_link: {\n      color: '#208AEC',\n      fontSize: 15,\n      fontWeight: 'bold',\n    },\n  });\n  ","import * as React from 'react';\nimport { View, Text } from './Themed';\nimport { StyleSheet, StyleProp, ViewStyle, TextStyle } from 'react-native';\nimport Colors from '../constants/Colors';\n\nexport type SectionParamList = {\n    title?: string,\n    titleStyle?:StyleProp<TextStyle>\n    outerContainerStyle?:StyleProp<TextStyle>\n    containerStyle?:StyleProp<ViewStyle>\n    bodyStyle?:StyleProp<ViewStyle>\n    subtitle?: string\n    withSeparator?: boolean\n    children?: React.ReactNode\n}\n\nexport default function CommonSection(props:SectionParamList){\n  return (\n    <View style={[styles.outerContainer, props.outerContainerStyle]}>\n        <View style={[styles.container, props.containerStyle]}>\n            {props.withSeparator?<View style={styles.separator} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />:undefined}\n            {props.title?<View style={styles.titleView}>\n              <Text style={[styles.title, props.titleStyle]}>{props.title}</Text>\n              <Text style={styles.subtitle}>{props.subtitle}</Text>\n            </View>:undefined}\n            <View style={[styles.bodyView, props.bodyStyle]}>\n            {props.children}\n            </View>\n          </View>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n  outerContainer:{\n    width:'100%',\n    maxWidth:1080,\n    alignItems:'stretch',\n    backgroundColor:'transparent'\n  },  \n  container: {\n      marginHorizontal:20,\n      marginVertical: 10,\n      backgroundColor:'transparent',\n    },\n    titleView:{\n      width: '100%',\n      flexDirection:'row',\n      backgroundColor:'transparent',\n      marginBottom:5,\n    },\n    title: {\n      flex:1,\n      fontSize: 16,\n    },\n    subtitle: {\n      flex:1,\n      fontSize: 12,\n      textAlign: 'right',\n      marginTop:4\n    },\n    separator: {\n      marginBottom: 20,\n      height: 1,\n      width: '100%',\n    },\n    bodyView:{\n      width: '100%',\n      padding: 20,\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderWidth:1,\n      borderColor:Colors.borderColor,\n      borderRadius:6\n    }\n  });\n  ","import { useCallback, useEffect, useState } from \"react\"\nimport { InfiniteData, useInfiniteQuery, useMutation, useQueryClient } from \"react-query\"\nimport { getMessengerContentList, postMessage, deleteMessengerContent } from \"../../apis\"\nimport { MessengerContent } from \"../../types\"\nimport useWebsocketContext from \"../useWebsocketContext\"\n\nexport type MessengerContentPage = {\n  next?:MessengerContentPage\n  current:MessengerContent[]\n}\n\nexport default function useMessengerContentList(channel_id:number){  \n  const queryClient = useQueryClient()\n  const { data, fetchNextPage } = useInfiniteQuery<MessengerContentPage>(\n    [\"MessengerContentList\", channel_id], \n    async({pageParam})=>getMessengerContentList(channel_id, pageParam).then(current=>({current})), \n    {\n      select:data=>{\n        if(data.pages.length > 1)\n          data.pages[data.pages.length - 2].next = data.pages[data.pages.length - 1]\n        return data;\n      },\n      getNextPageParam:(lastPage)=>lastPage?.current.length?lastPage.current[lastPage.current.length - 1].id:undefined,\n      refetchOnReconnect:false,\n      refetchOnWindowFocus:false\n    }\n  )\n  const { lastJsonMessage } = useWebsocketContext()\n  useEffect(()=>{\n    if(lastJsonMessage !=null && lastJsonMessage['type']=='next_message' && lastJsonMessage['data']['channel'] == channel_id){\n      queryClient.setQueryData<InfiniteData<MessengerContentPage>>([\"MessengerContentList\", channel_id], (_data)=>{\n        if(_data?.pages[0].current && _data?.pages[0].current[0].id != lastJsonMessage['data'].id)\n          _data.pages[0].current = [lastJsonMessage['data'], ..._data?.pages[0].current]\n        return {...(_data || {pages:[], pageParams:[]})}\n      })\n    }\n  }, [lastJsonMessage])\n  return { data, fetchNextPage }\n}\n\nexport function useMessengerContentMutation(){\n  // const queryClient = useQueryClient()\n  const create = useMutation(postMessage, {\n    onSuccess: () => {\n      // queryClient.setQueryData(['MessengerContentList'], (data:any) => ({\n      //   pages: data.pages.slice(0, 1),\n      //   pageParams: data.pageParams.slice(0, 1),\n      // }))\n      // queryClient.invalidateQueries(\"MessengerContentList\")\n    }\n  });\n  const _delete = useMutation(deleteMessengerContent, {\n    onSuccess: (d, variables) => {\n      // queryClient.setQueryData(['MessengerContentList'], (data:any) => ({\n      //   pages: (data.pages as MessengerContent[][]).map(v=>v.filter(v2=>v2.id != variables)),\n      //   pageParams: data.pageParams,\n      // }))\n    }\n  })\n  return { create:create.mutate, delete:_delete.mutate }\n}","import { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport { postBulkMessengerMember, deleteMessengerMember, getMessengerMemberList } from \"../../apis\";\n\nexport default function useMessengerMemberList(channel_id:number){\n  const { data } = useQuery([\"MessengerMemberList\", channel_id] , async()=>await getMessengerMemberList(channel_id))\n  return data\n}\n\n\nexport function useMessengerMemberMutation(){\n  const queryClient = useQueryClient()\n  const invite = useMutation(postBulkMessengerMember, {\n    onSuccess: ()=>{\n      queryClient.invalidateQueries(\"MessengerMemberList\")\n    }\n  })\n\n  const leave = useMutation(deleteMessengerMember, {\n    onSuccess: () => {\n      queryClient.invalidateQueries(\"MessengerChannelList\")\n      queryClient.invalidateQueries(\"MessengerMemberList\")\n    }\n  })\n  return {invite:invite.mutate, leave:leave.mutate}\n}","import React from 'react'\nimport { TouchableOpacity } from \"react-native-gesture-handler\"\nimport CommonSection from \"./CommonSection\"\nimport { Image, Linking, TextStyle } from \"react-native\"\nimport { View, Text } from \"./Themed\"\nimport { Link } from \"../types\"\n\n\n\nexport default ({link, isMobile}:{link:Link, isMobile:boolean})=>{\n    return <CommonSection containerStyle={{marginHorizontal:0}} bodyStyle={{padding:0}}>\n    <TouchableOpacity onPress={()=>Linking.openURL(link.url)} style={{flexDirection:'row'}} containerStyle={{width:'100%'}}>\n        {link.image && <Image source={{uri:link.image}} resizeMode=\"cover\" style={{ width:'100%', maxWidth:isMobile?120:150, maxHeight:isMobile?120:150, borderWidth:1}}/>}\n        <View style={{flex:1, marginHorizontal:20}}>\n        <Text style={{fontSize:18}}>{link.title}</Text>\n        <Text style={{fontSize:14}}>{link.description}</Text>\n        <Text style={{fontSize:12}}>{link.url}</Text>\n        </View>\n    </TouchableOpacity>\n    </CommonSection>\n}","import React, { createContext, useContext } from \"react\"\nimport { SendJsonMessage } from \"react-use-websocket/dist/lib/types\";\nimport { WebSocketInternalProvider } from \"../../hooks/useWebsocketContext\";\n\nconst WebSocketContext = createContext<{lastJsonMessage:any, sendJsonMessage:SendJsonMessage }>({lastJsonMessage:undefined, sendJsonMessage:()=>{}});\n\nexport const WebSocketProvider = ({disable, children}:{disable?:boolean, children:React.ReactNode})=>{\n  return disable?<></>:<WebSocketInternalProvider path={'messenger/ws/rtc/'} Context={WebSocketContext} useBackground>\n    {children}\n  </WebSocketInternalProvider>\n}\n\nexport default ()=>{\n  const webSocketContext = useContext(WebSocketContext)\n  return webSocketContext\n}\n\n","import React, { useCallback, useRef, useState, useMemo } from \"react\";\n//@ts-ignore\nimport { RTCView, mediaDevices, RTCPeerConnection, MediaStream, RTCSessionDescription, RTCIceCandidate } from \"react-native-webrtc-web-shim\";\n// @ts-ignore\nimport {TURN_SERVER} from \"@env\"\n\n\nconsole.log(TURN_SERVER?\"use turn server\": \"use stun server\")\n\nexport const peerConstraints = {\n\ticeServers: [TURN_SERVER?JSON.parse(TURN_SERVER):{urls: 'stun:stun.l.google.com:19302'}]\n};\n\nexport const sessionConstraints = {\n\tmandatory: {\n\t\tOfferToReceiveAudio: true,\n\t\tOfferToReceiveVideo: true,\n\t\tVoiceActivityDetection: true\n\t}\n};\n\nconst mediaConstraints = {audio:true, video:{framerate:30}}\n\n//@ts-ignore\nexport {MediaStream, RTCPeerConnection, RTCSessionDescription} from \"react-native-webrtc-web-shim\";\n\nconst onICEcandidate = (pc:typeof RTCPeerConnection, message:any)=>{\n\tconst _message = message.data.rtcMessage\n\t\tconst candidate = new RTCIceCandidate(_message);\n\t\tif (pc) {\n\t\t\tconsole.log(\"ICE candidate Added\");\n\t\t\tpc.addIceCandidate(candidate);\n\t\t}\n}\n\nconst sendICEcandidate = (event:any, sendMessage:(data:any)=>void, receiver:string, target:string) => {\n\t// When you find a null candidate then there are no more candidates.\n\t// Gathering of candidates has finished.\n\tif ( !event.candidate ) { return; };\n\t// Send the event.candidate onto the person you're calling.\n\t// Keeping to Trickle ICE Standards, you should send the candidates immediately.\n\tsendMessage({type:'ICEcandidate', receiver, data:{target, rtcMessage:event.candidate}})\n  }\n\nconst BAND_WIDTH = 8000\n\nconst optimizeSdp = (offerDescription:RTCSessionDescription)=>{\n\tvar arr = offerDescription.sdp.split('\\r\\n');\n\tarr.forEach((str:string, i:number) => {\n\t\tif (/^a=fmtp:\\d*/.test(str)) {\n\t\t\tarr[i] = str + `;x-google-max-bitrate=${BAND_WIDTH};x-google-min-bitrate=${BAND_WIDTH};x-google-start-bitrate=${BAND_WIDTH}`;\n\t\t} else if (/^a=mid:(0|video)/.test(str)) { // if with audio then 0=>1\n\t\t\tarr[i] += `\\r\\nb=AS:${BAND_WIDTH}`;\n\t\t}\n\t});\n  \treturn new RTCSessionDescription({\n    \ttype: offerDescription.type,\n    \tsdp: arr.join('\\r\\n'),\n  \t})\n}\n\nconst createOffer = async(pcRefCurrent:{pc?:typeof RTCPeerConnection, receiver:string}, sendMessage:(data:any)=>void, stream:typeof MediaStream, target:string, user?:{name:string})=>{\n\tstream && pcRefCurrent.pc.addStream( stream );\n\tconst offerDescription = optimizeSdp((await pcRefCurrent.pc.createOffer( sessionConstraints )));\n\tawait pcRefCurrent.pc.setLocalDescription( offerDescription );\n\tsendMessage({type:'call', receiver:pcRefCurrent.receiver, data:{target, name:user?.name, rtcMessage:offerDescription}})\n}\n\nexport const useLocalCam = (sendMessage:(data:any)=>void)=>{\n\tconst pcRef = useRef<Record<number,{pc:typeof RTCPeerConnection, receiver:string}>>({})\n\tconst [sender, setSender] = useState<string>()\n\tconst [_stream, setStream] = useState<MediaStream>()\n\tconst isPlay = useMemo(()=>_stream?true:false, [_stream])\n\tconst CustomRTCView = useCallback(React.memo(({style}:{style:any})=>(_stream?<RTCView stream={_stream} style={style} videoProps={{height:'100%'}} />:<></>)) , [_stream])\n\tconst start = useCallback(async(user:{name:string}, stream?:typeof MediaStream, mode?:'camera'|'display')=>{\n\t\tconsole.log(\"start\");\n\t\tif (!_stream || mode!==undefined) {\n\t\t\ttry {\n\t\t\t\tlet newStream:typeof MediaStream;\n\t\t\t\tif(mode == 'camera'){\n\t\t\t\t\tnewStream = await mediaDevices.getUserMedia(mediaConstraints)\n\t\t\t\t}\n\t\t\t\telse if (mode == 'display'){\n\t\t\t\t\tnewStream = await mediaDevices.getDisplayMedia(mediaConstraints)\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tnewStream = stream || await mediaDevices.getUserMedia(mediaConstraints).catch((e:any)=>mediaDevices.getDisplayMedia(mediaConstraints));\n\t\t\t\t}\n\t\t\t\tsetStream(newStream)\n\t\t\t\tObject.entries(pcRef.current).map(([k, v])=>{\n\t\t\t\t\tcreateOffer(v, sendMessage, newStream, 'guest', user)\n\t\t\t\t})\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e);\n\t\t\t}\n\t\t}\n\t}, [_stream])\n\tconst stop = useCallback(()=>{\n\t\tconsole.log(\"stop\");\n\t\tif(_stream){\n\t\t\t_stream.getTracks().map((track:any) => track.stop());\n\t\t\tsetStream(undefined)\n\t\t}\n\t}, [_stream])\n\treturn {\n\t\tstart,\n\t\tstop,\n\t\twebsocketOnMessage: async(response:any, user:{name:string})=>{\n\t\t\tlet type = response.type;\n\t\t\tif (type == 'connection'){\n\t\t\t\tsetSender(response.data.channel_name)\n\t\t\t}\n\t\t\tif (type == 'start' && response.data.target=='host'){\n\t\t\t  console.log('1 start')\n\t\t\t  const peerConnection = new RTCPeerConnection( peerConstraints );\n\t\t\t  peerConnection.addEventListener( 'icecandidate', (event:any) => sendICEcandidate(event, sendMessage, response.sender, 'guest'));\n\t\t\t  pcRef.current[response.sender] = {pc:peerConnection, receiver: response.sender}\n\t\t\t  createOffer(pcRef.current[response.sender], sendMessage, _stream, 'guest', user)\n\t\t\t}\n\t\t\t\n\t\t\tif (type == \"answer\" && response.data.target == 'host'){\n\t\t\t  console.log('3 answer')\n\t\t\t  const peerConnection = pcRef.current[response.sender].pc\n\t\t\t  const answerDescription = new RTCSessionDescription(response.data.rtcMessage);\n\t\t\t  await peerConnection.setRemoteDescription( answerDescription );\n\t\t\t  // const streams = pcRef.current.pc.getRemoteStreams()\n\t\t\t  // setMirrorStream(streams[streams.length - 1])\n\t\t\t}\n\t\t\tif (type == \"ICEcandidate\" && response.data.target=='host'){\n\t\t\t\tconst peerConnection = pcRef.current[response.sender].pc\n\t\t\t\tonICEcandidate(peerConnection, response)\n\t\t\t}\n\t\t},\n\t\tCustomRTCView,\n\t\tisPlay,\n\t\tsender,\n\t\t// renderMirrorView,\n\t}\n}\n\nexport const useRemoteCam = (sendMessage:(data:any)=>void)=>{\n\tconst pcRef = useRef<{pc?:RTCPeerConnection, receiver?:string, statsInterval?:any}>({})\n\tconst [user, setUser] = useState<{name:string}>()\n\tconst [_stream, setStream] = useState<MediaStream>()\n\tconst CustomRTCView = useCallback(React.memo((style:any)=>_stream?<RTCView stream={_stream} style={style} videoProps={{height:'100%'}} />:<></>), [_stream])\n\tconst isPlay = useMemo(()=>_stream?true:false, [_stream])\n\tconst start = useCallback((receiver:string)=>{\n\t\tconsole.log(\"start\");\n\t\tif (!pcRef.current.pc) {\n\t\t  pcRef.current.pc = new RTCPeerConnection( peerConstraints );\n\t\t  pcRef.current.receiver = receiver\n\t\t}\n\t\tif (!_stream){\n\t\t\tsendMessage({type:'start', receiver, data:{'target': 'host'}})\n\t\t}\n\t}, [_stream])\n\tconst stop = () => {\n\t\tconsole.log(\"stop\");\n\t\tif (pcRef.current.pc) {\n\t\t  // peerConnection._unregisterEvents();\n\t\t  setStream(undefined)\n\t\t  pcRef.current.pc.close();\n\t\t  pcRef.current.pc = undefined\n\t\t  pcRef.current.receiver = undefined\n\t\t  clearInterval(pcRef.current.statsInterval)\n\t\t}\n\t}\n\treturn {\n\t\tstart,\n\t\tstop,\n\t\twebsocketOnMessage: async(response:any)=>{\n\t\t\tlet type = response.type;\n\t\t\tif (type == 'start' && response.data.target=='guest' && response.sender == pcRef.current?.receiver){\n\t\t\t\tconsole.log('(remote)1 start')\n\t\t\t\tconst peerConnection = pcRef.current.pc\n\t\t\t\tsetUser({name: response.data.name})\n\t\t\t\tpeerConnection.addEventListener('icecandidate', (event:any) => sendICEcandidate(event, sendMessage, response.sender, 'host'));\n\t\t\t\tpeerConnection.addEventListener('iceconnectionstatechange', (e:any)=>{\n\t\t\t\t\tif (pcRef.current.pc.iceConnectionState == 'connected'){\n\t\t\t\t\t\tlet activeStream = false\n\t\t\t\t\t\tpcRef.current.statsInterval = setInterval(async()=>{\n\t\t\t\t\t\t\tconst stats = await pcRef.current.pc.getStats(null)\n\t\t\t\t\t\t\tlet statsOutput = \"\";\n\t\t\t\t\t\t\tlet framePerSecond = undefined\n\t\t\t\t\t\t\tstats.forEach((report:any) => {\n\t\t\t\t\t\t\t\tif (report.type === \"inbound-rtp\" && report.kind === \"video\") {\n\t\t\t\t\t\t\t\t\tObject.keys(report).forEach((statName) => {\n\t\t\t\t\t\t\t\t\t\tstatsOutput += `${statName}: ${report[statName]}\\n`;\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tframePerSecond = report.framesPerSecond\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tconsole.log(activeStream, framePerSecond)\n\t\t\t\t\t\t\tif (framePerSecond != undefined){\n\t\t\t\t\t\t\t\tactiveStream = true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (activeStream){\n\t\t\t\t\t\t\t\tstop()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconsole.log(new Date().toTimeString().split(' ')[0], statsOutput)\n\t\t\t\t\t\t}, 1000);\n\t\t\t\t\t}\n\t\t\t\t\telse if (pcRef.current.pc.iceConnectionState == 'failed'){\n\t\t\t\t\t\tstop()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t// peerConnection.addTransceiver('audio', {\n\t\t\t\t// \tdirection: 'recvonly'\n\t\t\t\t// });\n\t\t\t\tpeerConnection.addTransceiver('video', {\n\t\t\t\t\tdirection: 'recvonly'\n\t\t\t\t});\n\t\t\t\tawait createOffer({pc:pcRef.current.pc, receiver:response.sender}, sendMessage, _stream, 'host', user)\n\t\t\t}  \n\t\t\tif (type == \"answer\" && response.data.target=='guest' && response.sender == pcRef.current?.receiver){\n\t\t\t\tconsole.log('(remote)3 answer')\n\t\t\t\tconst answerDescription = new RTCSessionDescription(response.data.rtcMessage);\n\t\t\t\tawait pcRef.current.pc.setRemoteDescription( answerDescription );\n\t\t\t\tconst streams = pcRef.current.pc.getRemoteStreams()\n\t\t\t\tsetStream(streams[streams.length - 1])\n\t\t\t\tsendMessage({type:'end', receiver:pcRef.current.receiver, data:{}})\n\t\t\t}\n\t\t\tif (type == \"call\" && response.sender == pcRef.current?.receiver){\n\t\t\t  console.log('2 call')\n\t\t\t  const peerConnection = pcRef.current.pc\n\t\t\t  setUser({name:response.data.name})\n\t\t\t  if (!peerConnection)\n\t\t\t\treturn\n\t\t\t  peerConnection.addEventListener( 'icecandidate', (event:any) => sendICEcandidate(event, sendMessage, response.sender, 'host'));\n\t\t\t  const offerDescription = new RTCSessionDescription(response.data.rtcMessage);\n\t\t\t  await peerConnection.setRemoteDescription( offerDescription );\n\t\t\t  const answerDescription = await peerConnection.createAnswer( sessionConstraints );\n\t\t\t  await peerConnection.setLocalDescription( answerDescription );\n\t\t\t  sendMessage({type:'answer', receiver:pcRef.current.receiver, data:{target:'host', rtcMessage:peerConnection.localDescription}})\n\t\t\t  // Here is a good place to process candidates.\n\t\t\t  const streams = pcRef.current.pc.getRemoteStreams()\n\t\t\t  setStream(streams[streams.length - 1])\n\t\t\t}\n\t\t\tif (type == \"ICEcandidate\" && response.data.target=='guest' && response.sender == pcRef.current?.receiver)\n\t\t\t  onICEcandidate(pcRef.current.pc, response)\n\t\t},\n\t\tCustomRTCView,\n\t\tuser,\n\t\tisPlay\n\t}\n}","import {StyleSheet} from \"react-native\";\nexport {useLocalCam, useRemoteCam} from \"./p2p\"\n\nexport const camStyle = StyleSheet.create({\n\tcontainer:{ flex: 1},\n\tcam:{ flex: 1, height:'100%'},\n\tbottonContainer: {position:\"absolute\", bottom:0, justifyContent:'flex-end'},\n\tbuttonBar: { flexDirection: \"row\", justifyContent: \"space-around\" },\n\tlabel: {backgroundColor:'#0008', color:'white', paddingHorizontal:5},\n})","import React, { useEffect } from \"react\";\nimport {Button, View, Text} from \"react-native\";\nimport useWebsocketContext from \"./useWebsocketContext\";\nimport { useLocalCam, camStyle} from \"./webrtc\";\n\n\nexport default (props:{user?:{name:string}|null, mode?:'camera'|'display'|null})=>{\n  const {lastJsonMessage, sendJsonMessage} = useWebsocketContext()\n  const {start, stop, websocketOnMessage, CustomRTCView, isPlay} = useLocalCam(sendJsonMessage)\n  useEffect(()=>{\n    props.user && lastJsonMessage && websocketOnMessage(lastJsonMessage, props.user)\n  }, [lastJsonMessage, props.user])\n  useEffect(()=>{\n    if(props.mode && !isPlay){\n      props.user && start(props.user, undefined, props.mode)\n    }\n    else if(props.mode===null && isPlay){\n      stop()\n    }\n    return ()=>{isPlay && stop()}\n  }, [isPlay, props.user, props.mode])\n  return (\n    <View style={camStyle.container}>\n      <CustomRTCView style={camStyle.cam}/>\n      <View style={camStyle.bottonContainer}>\n        <View style={camStyle.buttonBar}>  \n        </View>\n        <View style={{flexDirection:'row'}}><Text style={camStyle.label}>{props.user?.name}</Text></View>\n        <View style={camStyle.buttonBar}>\n          {props.mode === undefined && !isPlay && <Button title=\"Start\" onPress={()=>props.user && start(props.user)} />}\n          {props.mode === undefined && isPlay && <Button title=\"Stop\" onPress={stop} />}\n        </View>\n      </View>\n    </View>\n  );\n}\n","import React, { useState, useEffect, } from \"react\";\nimport {Button,Text, TextInput, View} from \"react-native\";\nimport useWebsocketContext from \"./useWebsocketContext\";\nimport { useRemoteCam, camStyle} from \"./webrtc\";\n\nexport default (props:{receiver?:string})=>{\n  const [receiver, setReceiver] = useState('')\n  const {lastJsonMessage, sendJsonMessage} = useWebsocketContext()\n  const {start, stop, websocketOnMessage, CustomRTCView, isPlay, user} = useRemoteCam(sendJsonMessage)\n  useEffect(()=>{\n    lastJsonMessage && websocketOnMessage(lastJsonMessage)\n  }, [lastJsonMessage])\n  useEffect(()=>{\n    if(props.receiver){\n      start(props.receiver)\n    }\n    return ()=>stop()\n  }, [props.receiver])\n  return (\n    <View style={camStyle.container}>\n      <CustomRTCView style={camStyle.cam}/>\n      <View style={camStyle.bottonContainer}>\n        <View style={camStyle.buttonBar}>\n        </View>\n        <View style={{flexDirection:'row'}}>{\n          (props.receiver || isPlay)?\n          <Text style={camStyle.label}>{user?.name || 'loading...'}</Text>:\n          <>\n            <Text style={{borderWidth:1}}>Receiver:&nbsp;</Text>\n            <TextInput style={{borderWidth:1, flex:1}} value={receiver} onChangeText={setReceiver}/>\n          </> \n        }</View>\n        <View style={camStyle.buttonBar}>\n          {props.receiver === undefined && !isPlay && <Button title=\"Start\" onPress={()=>start(receiver)} />}\n          {props.receiver === undefined && isPlay && <Button title=\"Stop\" onPress={stop} />}\n        </View>\n      </View>\n    </View>\n  );\n}\n\n","import React, {useEffect, useState} from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { View as ThemedView } from '../../../components/Themed' \nimport Colors from '../../../constants/Colors';\nimport {default as useRtcContext, WebSocketProvider as RtcProvider} from \"../../../lib/react-native-webrtc/useWebsocketContext\";\nimport LocalCam from '../../../lib/react-native-webrtc/LocalCam';\nimport RemoteCam from '../../../lib/react-native-webrtc/RemoteCam';\nimport useResizeWindow from '../../../hooks/useResizeWindow';\nimport useAuthContext from '../../../hooks/useAuthContext';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport CommonButton from '../../../components/CommonButton';\n\ntype VideoType = 'camera'|'display'|null\ntype VideoCallProps = {channel_id:number, setDisable:(disable:boolean)=>void, disable?:boolean}\n\n\nconst VideoView = (props:{\n  scale:string,\n  focusGuest?:string,\n  setFocusGuest:(focusGuest?:string)=>void\n  receiver?:string\n  children:React.ReactNode\n})=>{\n  return <View style={[{maxWidth:props.scale, maxHeight:props.scale, borderWidth:1, borderColor:Colors.borderColor, backgroundColor:'gray', flexDirection:'row', flexGrow:1}, (props.focusGuest == undefined || props.focusGuest == props.receiver)?{}:{width:0, height:0}]}>\n    <TouchableOpacity style={{flex:1}} containerStyle={{flex:1, justifyContent:'center'}} onPress={()=>props.setFocusGuest(props.focusGuest?undefined:props.receiver)}>\n    {props.children}\n    </TouchableOpacity>\n  </View>\n    \n  \n}\n\nconst VideoCallContainer = ({channel_id, disable, setDisable}:VideoCallProps)=>{\n  const {auth} = useAuthContext()\n  const [videoMode, setVideoMode] = useState<VideoType>(null)\n  const [guests, setGuests] = useState<string[]>([])\n  const [focusGuest, setFocusGuest] = useState<string>()\n  const windowType = useResizeWindow()\n  const { lastJsonMessage, sendJsonMessage } = useRtcContext()\n  useEffect(()=>{\n    if(lastJsonMessage !=null){\n      if(lastJsonMessage['type']=='connection'){\n        sendJsonMessage({'type':'broadcast', 'data':{'channel_id':channel_id}})\n      }\n      if(lastJsonMessage['type']=='broadcast_guest' || lastJsonMessage['type']=='broadcast_host'){\n        setGuests([...guests, lastJsonMessage['sender']])\n      }\n      if(lastJsonMessage['type']=='broadcast_disconnect'){\n        const channel_name = lastJsonMessage['sender']\n        const exist = guests.find(v=>v == channel_name)\n        exist && setGuests(guests.filter(v=>v != channel_name))\n      }\n    }\n  }, [lastJsonMessage])\n  const scale = focusGuest?'100%':`${100 / Math.max(2, Math.ceil(Math.sqrt(guests.length + 1)))}%`\n  const toggleVideoMode = (mode:VideoType)=>{\n    setVideoMode(videoMode!=mode?mode:null)\n  }\n  return lastJsonMessage !==undefined ?\n    <ThemedView style={[\n      {aspectRatio:!disable?16/9:0, borderColor:Colors.borderColor, borderRadius:10},\n      windowType=='landscape'?{flexShrink:0.5, height:'100%', borderLeftWidth:1, paddingBottom:65}:{maxHeight:'36%', width:'100%', borderBottomWidth:1}\n    ]}>\n      <View style={{aspectRatio:16/9, backgroundColor:'white', flexWrap:'wrap', flexDirection:'row', width:'100%', height:'100%'}}>\n        {guests.map((receiver, i)=><VideoView scale={scale} focusGuest={focusGuest} setFocusGuest={setFocusGuest} receiver={receiver}>\n          <RemoteCam receiver={receiver}/>\n        </VideoView>\n        )}\n        <VideoView scale={scale} focusGuest={focusGuest} setFocusGuest={setFocusGuest} receiver={auth.user?.name}>\n          <LocalCam user={auth.user} mode={videoMode}/>\n        </VideoView>\n      </View>\n      <ThemedView style={[\n          {position:'absolute', alignItems:'center', justifyContent:'flex-end', width:'100%',flexDirection:'row'},\n          windowType=='landscape'?{bottom:0, paddingVertical:15, paddingHorizontal:19}:{backgroundColor:'transparent'}\n        ]}>\n        <CommonButton title={'⏺️'} onPress={()=>toggleVideoMode('camera')}/>\n        <CommonButton title={'🖥️'} onPress={()=>toggleVideoMode('display')}/>\n        <CommonButton title={'📹'} onPress={()=>setDisable(true)}/>\n      </ThemedView>\n    </ThemedView>:\n  <></>\n  }\n  \nexport default React.memo(({channel_id, disable, setDisable}:VideoCallProps)=>{\n  return <RtcProvider disable={disable}>\n    <VideoCallContainer channel_id={channel_id} disable={disable} setDisable={setDisable}/>\n  </RtcProvider>\n})\n","import React from 'react'\nimport { TouchableOpacity } from \"react-native-gesture-handler\"\nimport CommonSection from \"./CommonSection\"\nimport { Image, Linking, TextStyle } from \"react-native\"\nimport { FontAwesome } from '@expo/vector-icons'; \nimport { View, Text } from \"./Themed\"\nimport { File, Link } from \"../types\"\n\nfunction humanFileSize(size:number) {\n    var i = size == 0 ? 0 : Math.floor(Math.log(size) / Math.log(1024));\n    return (size / Math.pow(1024, i)).toFixed(2) + ' ' + ['B', 'kB', 'MB', 'GB', 'TB'][i];\n  }\n  \n\nexport default ({file, isMobile, showBorder}:{file:File, isMobile:boolean, showBorder:boolean})=>{\n    return <CommonSection containerStyle={{marginHorizontal:0}} bodyStyle={showBorder?{padding:10}:{borderWidth:0, padding:0}}>\n    <TouchableOpacity onPress={()=>Linking.openURL(file.file)} style={{flexDirection:'row', alignItems:'flex-start'}} containerStyle={{width:'100%'}}>\n        <FontAwesome name=\"file-o\" size={20} color=\"black\" />\n        <View style={{flex:1, marginHorizontal:10}}>\n            <Text style={{fontSize:18}}>{file.filename}</Text>\n            <Text style={{fontSize:14}}>{humanFileSize(file.filesize)}</Text>\n        </View>\n    </TouchableOpacity>\n    </CommonSection>\n}","import React, {useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState} from 'react';\nimport { StackScreenProps } from '@react-navigation/stack';\nimport { Platform, StyleSheet, View } from 'react-native';\nimport CommonSection from '../../../components/CommonSection';\nimport { FlatList, TextInput } from 'react-native-gesture-handler';\nimport CommonButton from '../../../components/CommonButton';\nimport useMessengerContentList, { MessengerContentPage, useMessengerContentMutation } from '../../../hooks/lists/useMessengerContent.List';\nimport useAuthContext from '../../../hooks/useAuthContext';\nimport HeaderRight from '../../../components/HeaderRight';\nimport useMessengerMemberList, { useMessengerMemberMutation } from '../../../hooks/lists/useMessengerMemberList';\nimport { navigate } from '../../../navigation';\nimport Colors from '../../../constants/Colors';\nimport useColorScheme from '../../../hooks/useColorScheme';\nimport { Text, View as ThemedView } from '../../../components/Themed' \nimport Hyperlink from 'react-native-hyperlink'\nimport useMessengerChannelList from '../../../hooks/lists/useMessengerChannelList';\nimport useIsMobile from '../../../hooks/useIsMobile';\nimport LinkPreview from '../../../components/LinkPreview';\nimport lang from '../../../lang'\nimport Avatar from '../../../components/Avatar';\nimport VideoCallSection from './VideoCallSection';\nimport useResizeWindow from '../../../hooks/useResizeWindow';\nimport FilePreview from '../../../components/FilePreview';\n\n\nfunction uploadFile(){\n  return new Promise<Blob|undefined>((resolve, reject)=>{\n    if (Platform.OS == 'web'){\n      var input = document.createElement('input');\n      input.type = 'file';\n      input.onchange = e => { \n        resolve((e.target as any).files[0])\n      }\n      input.onabort = reject\n      input.onerror = reject\n      input.click();\n    }\n    else\n      resolve(undefined)\n  })\n}\n\nconst MessengerContentPageItem = React.memo((props:MessengerContentPage & {ownerId?:number})=>{\n  const isMobile = useIsMobile()\n  let nextPage = props.next;\n    while(nextPage?.next && nextPage.current.length==0){\n      nextPage = nextPage.next\n    }\n    const nextContent = nextPage?.current[0]\n    return <View style={{flexDirection: 'column-reverse'}}>\n      \n      {props.current.map((content, index2)=>{\n        const next = index2 + 1 < props.current.length?props.current[index2+1]:nextContent\n        const created:string = content.created.slice(0, 16)\n        const date = created.slice(0, 10)\n        const isSystem = content.user == null\n        const isFirst = next==undefined || (content.user != next.user || created != next.created.slice(0, 16))\n        const isSelf = props.ownerId == content.user\n        const dayChanged = next==undefined || date != next.created.slice(0, 10)\n        const message = content.message_set[0]\n        if (isSystem)\n          return <View key={content.id} style={{flexDirection:'row', justifyContent:'center', width:'100%', marginVertical:5}}>\n            <Text>{message.content}</Text>\n          </View>\n        return <View key={content.id}>\n          {dayChanged?<View style={{flexDirection:'row', justifyContent:'center', width:'100%'}}><Text>{date}</Text></View>:undefined}\n          <View key={content.id} style={{flexDirection:'row', justifyContent:isSelf?'space-between':'flex-start', width:'100%'}}>\n            {isFirst && !isSelf? <View style={{marginTop:3, marginLeft:12}}><Avatar name={content.name} userId={content.user} size={36}/></View>:<View style={{width:48}}/>}\n            <CommonSection outerContainerStyle={{width:undefined, maxWidth:'90%'}} title={isFirst?content.name:undefined} titleStyle={{flex:undefined}} bodyStyle={{padding:10}} subtitle={`${created.slice(11)}`}>\n              {/* @ts-ignore */}\n              <Hyperlink linkDefault={ true } style={{wordBreak:\"break-word\"}} linkStyle={{color: '#12b886'}}>\n                <Text selectable>{message.content}</Text>\n              </Hyperlink>\n              {content.file_set.map((file, fileIndex)=><FilePreview key={fileIndex} file={file} isMobile={isMobile} showBorder={content.file_set.length>1 || message.content.length>0}/>)}\n              {content.link_set.map((link, linkIndex)=><LinkPreview key={linkIndex} link={link} isMobile={isMobile}/>)}              \n            </CommonSection>\n          </View>\n        </View>\n      })}\n    </View>\n\n})\n\nexport default function ChatScreen({navigation, route}: StackScreenProps<any, 'Chat'>) {\n  const channel_id = route?.params?.id\n  const height = useRef(0)\n  const inputRef = useRef<TextInput>(null)\n  const {auth} = useAuthContext()\n  const channel = useMessengerChannelList(auth)?.find(v=>v.id==parseInt(channel_id))\n  const {data, fetchNextPage } = useMessengerContentList(channel_id)\n  const memberList = useMessengerMemberList(channel_id)\n  const member_id = useMemo(()=>memberList?.find(v=>v.user == auth.user?.id)?.id, [auth, memberList])\n  const windowType = useResizeWindow()\n  const messengerMemberMutation = useMessengerMemberMutation()\n  const [value, setValue] = useState('')\n  const [autoFocus, setAutoFocus] = useState(true)\n  const [videoMode, setVideoMode] = useState<boolean>(false)\n  const theme = useColorScheme()\n  const postValue = ()=>{\n    if (value.length>0){\n      contentMutation.create({channel:channel_id, user:auth.user?.id, content:value})\n      setValue('')\n      setAutoFocus(true)\n    }\n  }\n  const contentMutation = useMessengerContentMutation()\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      headerRight: ()=> <HeaderRight extra={[\n        {title:lang('invite'), onPress:()=>{navigate(\"InviteScreen\", {id:channel_id})}},\n        {title:lang('leave'), onPress:()=>{member_id && messengerMemberMutation.leave(member_id);back()}}\n      ]}/>,\n      title: channel?.name\n    });\n  }, [navigation, route, member_id]);\n\n  const renderItem = useCallback(({item, index}:{item:MessengerContentPage, index:number})=><MessengerContentPageItem {...item} ownerId={auth.user?.id}/>, [auth])\n  \n  const back = ()=>{\n    if(navigation.canGoBack())\n        navigation.goBack()\n      else{\n        navigation.navigate('HomeScreen', {tab:2})\n      }\n  }\n  useEffect(()=>{\n    if (!(channel_id))\n      back()\n  }, [])\n  useEffect(()=>{\n    if(autoFocus){\n      (inputRef.current as any).focus()\n      setAutoFocus(false)\n    }\n  }, [autoFocus])\n\n  return <View style={{flex:1, alignItems:'center', flexDirection:windowType=='landscape'?'row-reverse':'column'}}>\n    <VideoCallSection channel_id={channel_id} setDisable={(d)=>setVideoMode(!d)} disable={!videoMode}/>\n    <View style={[{flex:videoMode?undefined:1, flexShrink:1}, windowType=='landscape'?{minWidth:320, height:'100%'}:{width:'100%'}]}>\n      <FlatList\n        style={{flexDirection: 'column-reverse'}}\n        contentContainerStyle={{padding:10, flexGrow:1, flexDirection: 'column-reverse'}}\n        data={data?.pages}\n        renderItem={renderItem}\n        onScroll={(e)=>{\n          if (e.nativeEvent.contentOffset.y + e.nativeEvent.contentSize.height - height.current < 1)\n            fetchNextPage()\n        }}\n        onLayout={(p)=>{height.current = p.nativeEvent.layout.height}}\n      />\n      <ThemedView style={{bottom:0, alignItems:'center', width:'100%',flexDirection:'row', paddingTop:15, paddingBottom:10, paddingHorizontal:19}}>\n        <TextInput ref={inputRef} value={value} onChangeText={setValue} style={{\n          flex:1, borderWidth:1, height:40, borderRadius:6, borderColor:Colors.borderColor, backgroundColor:Colors[theme].background, color:Colors[theme].text\n        }} onSubmitEditing={postValue} blurOnSubmit={true}/>\n        <CommonButton title={'💬'} onPress={postValue}/>\n        <CommonButton title={'📤'} onPress={()=>uploadFile().then(f=>{\n          contentMutation.create({channel:channel_id, user:auth.user?.id, content:'', file:f})\n        })}/>\n        {!videoMode && <CommonButton title={'📹'} onPress={()=>setVideoMode(!videoMode)}/>}\n      </ThemedView>\n    </View>\n  </View>\n}","import React, {useCallback, useRef} from 'react';\nimport { StackScreenProps } from '@react-navigation/stack';\nimport { StyleSheet, Text, Button, View} from 'react-native';\n\n\nexport default function TabOneScreen({\n  navigation\n}: StackScreenProps<any, 'TabOne'>) {\n  return <View style={{padding:10}}>\n    \n  </View>\n}\n\nconst styles = StyleSheet.create({\n  Panel_Button_Text: {\n    textAlign: 'center',\n    color: '#fff',\n    fontSize: 21\n  },\n  Panel_Holder: {\n    borderWidth: 1,\n    borderColor: '#888',\n    marginVertical: 5\n  }\n})","import React, { useMemo } from 'react';\n\nimport { TextProps, StyleProp } from 'react-native';\nimport {View, Text } from './Themed'\nimport useResizeWindow from '../hooks/useResizeWindow';\n\ntype Props = {\n  name: string,\n  width?:number,\n  children: React.ReactNode\n  textStyle?: StyleProp<TextProps>\n}\n\nexport default function RowField(props:Props) {\n  const windowType = useResizeWindow()\n  const rowStyle = useMemo(()=>windowType=='landscape'?\n    {flexDirection:'row', alignItems: 'center', justifyContent:'space-between'}:\n    {flexDirection:'column', alignItems:'flex-start'} as any\n  , [windowType])\n  return (\n    <View style={[{paddingVertical:5, width:'100%'}, rowStyle]}>\n        <Text style={[windowType=='landscape'?{flex:1}:{width:'100%'},{paddingHorizontal: 15, fontSize:16}, props.textStyle]}>{props.name}</Text>\n        <View style={[windowType=='landscape'?{flex:6}:{width:'100%'},{paddingHorizontal: 15}]}>\n          <View style={{width:props.width}}>\n            {props.children}\n          </View>\n        </View>\n    </View>\n  )\n}","import React from 'react';\nimport { StyleProp, TextStyle } from 'react-native';\nimport { CustomTextInputProps } from '../types';\nimport CommonTextInput from './CommonTextInput';\nimport RowField from './RowField';\n\nexport default function TextField(props:CustomTextInputProps & {name: string, width?:any, textStyle?:StyleProp<TextStyle>}) {\n  return (\n    <RowField name={props.name} width={props.width} textStyle={props.textStyle}>\n      <CommonTextInput {...props} />\n   </RowField>\n  )\n}","import React, {useState, useEffect } from 'react';\nimport { StackScreenProps } from '@react-navigation/stack';\nimport { StyleSheet } from 'react-native';\nimport CommonSection from '../components/CommonSection';\nimport { View, Text } from '../components/Themed';\nimport CommonButton from '../components/CommonButton';\n// import useBoardChannelList, { useBoardChannelMutation } from '../hooks/lists/useBoardChannelList';\nimport useAuthContext from '../hooks/useAuthContext';\nimport { navigate } from '../navigation';\nimport { Channel } from '../types';\nimport useMessengerChannelList, { useMessengerChannelMutation } from '../hooks/lists/useMessengerChannelList';\nimport TextField from '../components/TextField';\nimport lang from '../lang'\n\nexport default function ChannelEditScreen({navigation, route}: StackScreenProps<any, 'ChannelEdit'>) {\n  const id = route?.params?.id\n  const type = route?.params?.type\n  const {auth} = useAuthContext()\n  const channelList = useMessengerChannelList(auth)\n  const channelMutation = useMessengerChannelMutation()\n  const channel = channelList?.find(v=>v.id==id)\n  const [name, setName] = useState('')\n  const [description, setDescription] = useState('')\n  const back = ()=>{\n    if(navigation.canGoBack())\n        navigation.goBack()\n      else{\n        navigation.replace('Main')\n      }\n  }\n  useEffect(()=>{\n    if (channel){\n      setName(channel.name)\n      setDescription(channel?.description || '')\n    }\n  }, [channel])\n  return <CommonSection outerContainerStyle={{alignSelf:'center'}}>\n    <View style={{justifyContent:'space-around'}}>\n    <Text style={{fontSize:20}}>{lang('Channel')}</Text>\n    </View>\n    <View style={styles.separator} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />\n    <View style={{width:'100%'}}>\n      <TextField name={lang('Channel Name')} value={name} setValue={setName} width={'60%'}/>\n      <TextField name={lang('Description')} value={description} setValue={setDescription} multiline width={'60%'}/>\n    </View>\n    <View style={{width:'100%', flexDirection:'row', justifyContent:'flex-end'}}>\n      <CommonButton title={lang('save')} onPress={()=>{\n        if(auth?.user?.id && auth.groupId){\n          const newChannel:Channel = {id, name, description, type, owner:auth?.user?.id, group:auth.groupId};\n          (id?channelMutation.update(newChannel):channelMutation.create(newChannel)).then(v=>navigate(\"Main\", {\n            screen:v.type == 'messenger'?'MessengerScreen':'BoardScreen',\n            params:{id:v.id}\n          }))\n        }\n      }}/>\n      <CommonButton title={lang('cancel')} style={{marginHorizontal:5}} onPress={back}/>\n    </View>\n  </CommonSection>\n}\n\nconst styles = StyleSheet.create({\n  field:{\n    width:'50%',\n    flexDirection:'row',\n    padding:10,\n  },\n  separator: {\n    marginBottom: 20,\n    height: 1,\n    width: '100%',\n  },\n})","import React, {useRef,MutableRefObject, useMemo, useState } from 'react';\nimport { StackScreenProps } from '@react-navigation/stack';\nimport { View, Text } from '../components/Themed';\nimport CommonSection from '../components/CommonSection';\nimport useAuthContext from '../hooks/useAuthContext';\nimport useUserMembershipList from '../hooks/lists/useUserMembershipList';\nimport { UserMembership } from '../types';\nimport CommonButton from '../components/CommonButton';\nimport useMessengerMemberList, { useMessengerMemberMutation } from '../hooks/lists/useMessengerMemberList';\nimport { renderMemberItem } from '../tabs/MemberTab';\nimport { navigate } from '../navigation';\nimport lang from  '../lang'\n\nconst InviteItem = (props:{item:UserMembership, selectedRef:MutableRefObject<Set<number>>})=>{\n  const [selected, setSelected] = useState(props.selectedRef.current.has(props.item.id))\n  return <View style={selected?{borderWidth:1, borderColor:'blue'}:{}}>\n    {renderMemberItem(props.item, ()=>{\n      if (selected){\n        setSelected(false)\n        props.selectedRef.current.delete(props.item.id)\n      }\n      else{\n        setSelected(true)\n        props.selectedRef.current.add(props.item.id)\n      }\n    })}\n  </View>\n\n}\n\nexport default function InviteScreen({navigation, route}: StackScreenProps<any, 'Invite'>) {\n  const id = route?.params?.id\n  const {auth} = useAuthContext()\n  const userList = useUserMembershipList(auth)\n  const memberList = useMessengerMemberList(id)\n  const messengerMemberMutation = useMessengerMemberMutation()\n  const selectedRef = useRef<Set<number>>(new Set())\n  const data = useMemo(()=>{\n    const memberSet = new Set(memberList?.map(v=>v.user))\n    return userList?.filter(v=>!memberSet.has(v.id))\n  }, [userList, memberList])\n\n\n  const back = ()=>{\n    if(navigation.canGoBack())\n      navigation.goBack()\n    else if (id)\n      navigate(\"ChatScreen\", {id})\n    else\n      navigation.replace('Main')\n  }\n\n  return <CommonSection outerContainerStyle={{alignSelf:'center'}}>\n    <View style={{backgroundColor:'white', 'width': '50%'}}>\n    {data?.map((item, index)=><InviteItem key={index} item={item} selectedRef={selectedRef}/>)}\n    </View>\n    <View style={[{width:'50%', flexDirection:'row', padding:10,}, {justifyContent:'flex-end'}]}>\n      <CommonButton title={lang('invite')} onPress={()=>{\n        messengerMemberMutation.invite({\n          channel_id:id,\n          user_ids:[...selectedRef.current]\n        })\n        back()\n      }}/>\n      <CommonButton title={lang('cancel')} onPress={back}/>\n    </View>\n  </CommonSection>\n}\n\n","import LoginScreen from \"./main/LoginScreen\";\nimport ChatScreen from \"./main/ChatScreen\";\nimport HomeScreen from \"./main/HomeScreen\";\nimport TabOneScreen from \"./main/TabOneScreen\";\n// import BoardScreen from \"../lib/blacktokki-board/BoardScreen\";\n// import BoardEditScreen from \"../lib/blacktokki-board/BoardEditScreen\";\nimport ChannelEditScreen from \"./ChannelEditScreen\"\nimport { Screens } from \"../types\";\nimport InviteScreen from \"./InviteScreen\";\nimport ProfileScreen from \"./ProfileScreen\";\nimport lang from \"../lang\"\n\nexport const main = {\n    HomeScreen:{\n        title:lang('home'),\n        component:HomeScreen,\n        path:'home',\n    },\n    ChatScreen:{\n        title:lang('chat'),\n        component:ChatScreen,\n        path:'chat'\n    },\n    // BoardScreen:{\n    //     title:'board',\n    //     component:BoardScreen,\n    //     path:'board'\n    // },\n    TabOneScreen:{\n        title:'tab one',\n        component:TabOneScreen,\n        path:'one'\n    },\n} as Screens\n\nexport const login = {\n    LoginScreen:{\n        path: 'login',\n        title: lang('Sign in'),\n        component:LoginScreen\n    },\n} as Screens\n\nexport const modal = {\n    // BoardEditScreen:{\n    //     title:'board',\n    //     component:BoardEditScreen,\n    //     path:'modal/board'\n    // },\n    ChannelEditScreen:{\n        title:lang('channel'),\n        component:ChannelEditScreen,\n        path:'modal/channel'\n    },\n    InviteScreen:{\n        title:lang('invite'),\n        component:InviteScreen,\n        path:'modal/invite'\n    },\n    ProfileScreen:{\n        title:lang('profile'),\n        component:ProfileScreen,\n        path:'modal/profile'\n    }\n} as Screens","import React, {useLayoutEffect} from 'react';\nimport { StackScreenProps } from '@react-navigation/stack';\nimport { StyleSheet, Text, Button, View} from 'react-native';\nimport { Text as StyledText } from 'react-native-paper';\nimport {TabViewNavigator} from '../../navigation/DrawerNavigator';\nimport useResizeWindow from '../../hooks/useResizeWindow';\nimport { bottomTabs } from '../../tabs';\nimport { navigate } from '../../navigation';\nimport HeaderRight from '../../components/HeaderRight';\nimport TextButton from '../../components/TextButton';\nimport Colors from '../../constants/Colors';\nimport useColorScheme from '../../hooks/useColorScheme';\nimport lang from '../../lang'\n\n// navigate(\"BoardEditScreen\", {channel_id:item.channel, id:item.id})\n// deleteBoardContent(item.id).then(()=>navigate('BoardScreen', {id:item.channel}))\n\nexport default function HomeScreen({navigation, route}: StackScreenProps<any, 'Home'>) {\n  const windowType = useResizeWindow();\n  const theme = useColorScheme()\n  const color = Colors[theme].text\n  const options = [\n    {title:lang('member'), headerRight:()=><HeaderRight/>},\n    {title:lang('messenger'), headerRight:()=><HeaderRight extra={[{title:lang('create'), onPress:()=>navigate(\"ChannelEditScreen\", {type:\"messenger\"})}]}/>},\n    // {title:'board', headerRight:()=><HeaderRight extra={[{title:'create', onPress:()=>navigate(\"ChannelEditScreen\", {type:\"board\"})}]}/>},\n    {title:'config', headerRight:()=><HeaderRight/>}\n  ]\n  \n  useLayoutEffect(() => {\n    const index = route?.params?.tab | 0\n    navigation.setOptions(windowType == 'portrait'?options[index]:{\n      title: lang('home'),\n      headerRight: ()=><HeaderRight/>\n    });\n  }, [navigation, route, windowType]);\n  return <>\n    {windowType == 'landscape'?\n      <View style={{flex:1, justifyContent:'center', alignItems:'center'}}>\n        <View style={{width:'80%', height:'80%'}}>\n          <StyledText style={{fontSize:32, color}}>Tokki Tok</StyledText>\n          <View style={{backgroundColor:Colors.borderColor, height:1, width:'100%'}}/>\n          <View style={{flex:1, alignItems:'flex-start'}}>\n            {/* <Text style={{fontSize:20, color:'gray'}}>Welcome! This is a messenger for teams.</Text>*/}\n            <Text style={{fontSize:24}}> </Text>\n            <Text style={{fontSize:24, fontWeight:'500', color}}>{lang('Quick Start')}</Text>\n            <TextButton title={lang('+ New Messenger')} textStyle={{fontSize:20, color}} style={{paddingLeft:0, borderRadius:20}} onPress={()=>navigate(\"ChannelEditScreen\", {type:\"messenger\"})}/>\n            {/* <TextButton title='+ New Board' textStyle={{fontSize:20}} style={{paddingLeft:0, borderRadius:20}} onPress={()=>navigate(\"ChannelEditScreen\", {type:\"board\"})}/> */}\n          </View>\n        </View>\n      </View>:<></>}\n      <View style={windowType == 'portrait'?{flex:1}:{width:0, flex:0}}>\n        <TabViewNavigator tabs={bottomTabs} tabBarPosition=\"bottom\" index={parseInt(route.params?.['tab'] || 0)} onTab={(index)=>{navigation.setParams({tab:index})}}/>\n      </View>\n  </>\n}\n\n","import React, { useEffect } from 'react';\nimport { StackScreenProps } from '@react-navigation/stack';\nimport { View} from '../components/Themed';\nimport Profile from '../components/Profile';\nimport useAuthContext from '../hooks/useAuthContext';\nimport useUserMembershipList from '../hooks/lists/useUserMembershipList';\nimport { useMessengerChannelMutation } from '../hooks/lists/useMessengerChannelList';\nimport CommonButton from '../components/CommonButton';\nimport { DirectChannel } from '../types';\nimport { navigate } from '../navigation';\nimport lang from '../lang'\n\nexport default function ProfileScreen({\n  navigation, route\n}: StackScreenProps<any, 'Profile'>) {\n  const id = route?.params?.id\n  const {auth} = useAuthContext()\n  const userList = useUserMembershipList(auth)\n  const user = userList?.find(v=>v.id==id)\n  const channelMutation = useMessengerChannelMutation()\n  const back = ()=>{\n    if(navigation.canGoBack())\n        navigation.goBack()\n      else{\n        navigation.replace('Main')\n      }\n  }\n  useEffect(()=>{\n    if (!(id && user) && userList)\n      back()\n  }, [userList])\n  return user?<View style={{padding:10}}>\n    \n    <Profile username={user.username} name={user.name} userId={user.id} />\n    <CommonButton title={lang('create messenger')} onPress={()=>{\n      if(auth?.user?.id && auth.groupId){\n        const newChannel:DirectChannel = {name:auth.user.id!=user.id?`${auth.user.name}, ${user.name}`:auth.user.name, type:'messenger', owner:auth?.user?.id, group:auth.groupId, counterpart:user.id};\n        channelMutation.direct(newChannel).then(v=>navigate(\"Main\", {screen:\"ChatScreen\", params: {id:v.id}}))\n      }\n    }}/>\n  </View>:<></>\n}\n","import React, { Context, createContext,  useContext, useEffect, useState } from \"react\"\nimport useWebSocket from \"react-use-websocket\"\nimport { SendJsonMessage } from \"react-use-websocket/dist/lib/types\"\n// @ts-ignore\nimport {API_URL} from \"@env\"\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { AppState, AppStateStatus } from \"react-native\";\n\ntype WebsocketContextType = {lastJsonMessage:any, sendJsonMessage:SendJsonMessage }\nconst WebSocketContext = createContext<WebsocketContextType>({lastJsonMessage:undefined, sendJsonMessage:()=>{}});\nconst [SCHEMA, DOMAIN] = `${API_URL}`.split('://')\n\nexport const WebSocketInternalProvider = ({children, path, Context, useBackground}:{children:React.ReactNode, path:string, Context:Context<WebsocketContextType>, useBackground?:boolean})=>{\n  const [token, setToken] = useState<string|null>(null)\n  const [isActive, setIsActive] = useState<boolean>(useBackground || AppState.currentState == 'active')\n  const { lastJsonMessage, sendJsonMessage } = useWebSocket(`${SCHEMA=='https'?'wss':'ws'}://${DOMAIN}/${path}`,{\n    shouldReconnect: (closeEvent) => true,\n    protocols: token?['Authorization',  token]:undefined,\n    onOpen: (e)=>{console.log(`success websocket connection(${path})`)},\n    onClose: (e)=> {console.log(`closed websocket connection(${path})`)},\n  }, isActive && token!=null)\n  useEffect(()=>{\n    AsyncStorage.getItem('Authorization').then(setToken)\n    const onChange = (nextState:AppStateStatus)=>setIsActive(useBackground || nextState == 'active')\n    AppState.addEventListener(\"change\", onChange)\n    return ()=>AppState.removeEventListener(\"change\", onChange)\n  }, [])\n  return (token==null)?<>{children}</>:<Context.Provider value={{lastJsonMessage, sendJsonMessage}}>\n      {children}\n    </Context.Provider>\n}\n\nexport const WebSocketProvider = React.memo(({disable, children}:{disable?:boolean, children:React.ReactNode})=>{\n  return disable?<>{children}</>:<WebSocketInternalProvider path={'messenger/ws/'} Context={WebSocketContext}>\n    {children}\n  </WebSocketInternalProvider>\n})\n\nexport default ()=>{\n  const webSocketContext = useContext(WebSocketContext)\n  return webSocketContext\n}\n\n","import React, { useState } from 'react';\nimport { StyleSheet} from 'react-native';\nimport { CustomButtonProps } from '../types';\nimport CommonButton from './CommonButton';\n\nexport default (props:CustomButtonProps)=>{\n    return <CommonButton {...props} style={[styles.style, props.style]}/>\n}\n\nconst styles = StyleSheet.create({\n    style:{\n        borderRadius:6, \n        backgroundColor: 'transparent',\n        borderWidth:0\n    },\n});\n","import { Notification } from '../types';\nimport axios from './axios';\n\nexport const getNotification = async (user_id:number)=>{\n    const data = (await axios.get(`/api/v1/notifications/?type=WEB&user=${user_id}`) ).data as Notification[]\n    return data.length?data[0]:undefined\n}\n\nexport const postNotification = async(notification:Notification)=>{\n    return (await axios.post(`/api/v1/notifications/`, notification)).data as Notification\n}\n\nexport const putNotification = async(notification:Notification)=>{\n    return (await axios.put(`/api/v1/notifications/${notification.id}/`, notification)).data as Notification\n}","import { Platform } from 'react-native';\n//@ts-ignore\nimport useMobileDetect from 'use-mobile-detect-hook';\n\nexport default ()=>{\n    const detectMobile = useMobileDetect();\n    return (detectMobile.isMobile() || Platform.OS == 'android' || Platform.OS == 'ios') as boolean\n}","import * as React from 'react';\nimport { View } from './Themed';\nimport { StyleSheet, StyleProp, ViewStyle, TextStyle, Pressable } from 'react-native';\nimport Colors from '../constants/Colors';\n\nexport type ItemParamList = {\n    outerContainerStyle?:StyleProp<TextStyle>\n    containerStyle?:StyleProp<ViewStyle>\n    bodyStyle?:StyleProp<ViewStyle>\n    children?: React.ReactNode\n    onPress?: ()=>void\n}\n\nexport default function CommonItem(props:ItemParamList){\n  const [hover, setHover] = React.useState(false)\n  const [press, setPress] = React.useState(false)\n  return (\n    <Pressable\n      style={[styles.outerContainer ,props.outerContainerStyle, (press)?{backgroundColor:'rgb(242,242,242)'}:{}]}\n      onPressIn={()=>{setPress(true)}}\n      onPressOut={()=>{setPress(false);props.onPress?.()}}\n       //@ts-ignore\n       onHoverIn={()=>setHover(true)}\n       onHoverOut={()=>setHover(false)}\n    >\n        <View style={[styles.container ,props.containerStyle]}>\n            <View style={[styles.bodyView, props.bodyStyle]}>\n                <>{props.children}</>\n            </View>\n      </View>\n    </Pressable>\n    )\n}\n\nconst styles = StyleSheet.create({\n  outerContainer:{\n    width:'100%',\n    maxWidth:1080,\n    alignItems:'stretch',\n  },  \n  container: {\n      marginHorizontal:20,\n      backgroundColor:'transparent'\n    },\n    bodyView:{\n      width: '100%',\n      padding: 10,\n      minHeight: 40,\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderBottomWidth:1,\n      borderColor:Colors.borderColor,\n      backgroundColor:'transparent'\n    }\n  });\n  ","import { useQuery } from \"react-query\";\nimport { getUserMembershipList } from \"../../apis\";\nimport { Auth } from \"../useAuthContext\";\n\nexport default function useUserMembershipList(auth?:Auth){\n  const { data } = useQuery([\"UserMembershipList\", auth?.groupId] , async()=>auth?.groupId?(await getUserMembershipList(auth?.groupId)):[])\n  return data\n}","import * as React from 'react';\nimport { Avatar } from 'react-native-paper';\nimport { AvatarProps } from '../../types';\n\nconst normalizeHash = (hash: number, min: number, max: number) => {\n    return Math.floor((hash % (max - min)) + min);\n};\n\nconst stringToHSL = (str: string, initHash?:number) => {\n    let hash = initHash || 0;\n    for (let i = 0; i < str.length; i++) {\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    hash = Math.abs(hash);\n    return `hsl(${normalizeHash(hash, 0, 360)}, ${normalizeHash(hash, 0, 100)}%, ${normalizeHash(hash, 25, 75)}%)`;\n};\n\nexport default (props:AvatarProps) => {\n    const backgroundColor = stringToHSL(props.name, props.userId)\n    return <Avatar.Text style={{backgroundColor}} size={props.size} label={props.name.split(' ').map(v=>v[0]).join().toUpperCase()} />\n};","import React from 'react';\n// import { MaterialIcons } from \"@expo/vector-icons\"\nimport Avatar from '../lib/react-native-paper/Avatar';\nimport { AvatarProps } from '../types';\n\nexport default (props:AvatarProps)=>{\n    // return <MaterialIcons size={38} style={{ marginBottom: -3, marginRight:10 }} name='account-circle'/>\n    return <Avatar {...props}/>\n}\n\n","import React from \"react\"\nimport { View, Text } from \"../components/Themed\"\nimport CommonItem from \"../components/CommonItem\"\n// import useBoardChannelList from \"../lib/blacktokki-board/useBoardChannelList\"\nimport { useMessengerChannelSorted } from \"../hooks/lists/useMessengerChannelList\"\nimport useAuthContext from \"../hooks/useAuthContext\"\nimport { navigate } from \"../navigation\"\n\nconst DrawerTab = (props:{data:{name:string, onPress?:()=>void}[]})=><View style={{flex:1}}>\n    {props.data.map((item, index)=><CommonItem key={index} containerStyle={{marginHorizontal:0}} bodyStyle={{alignItems:'flex-start'}} onPress={item.onPress}>\n        <Text style={{marginLeft:20}}>{item.name}</Text>\n    </CommonItem>\n    )}\n</View>\n\nexport default {\n    Messenger:()=>{\n        const {auth} = useAuthContext()\n        const channelList = useMessengerChannelSorted(auth);\n        return <DrawerTab data={(channelList || []).map(item=>({...item, onPress:()=>navigate(\"ChatScreen\", {id:item.id})}))}/>\n    },\n    // Board:()=>{\n    //     const {auth} = useAuthContext()\n    //     const channelList = useBoardChannelList(auth);\n    //     return <DrawerTab data={(channelList || []).map(item=>({...item, onPress:()=>navigate(\"BoardScreen\", {id:item.id})}))}/>\n    // },\n}","import { Ionicons, FontAwesome } from \"@expo/vector-icons\"\nimport React from \"react\"\nimport { Text, View } from \"react-native\"\nimport CommonItem from \"../components/CommonItem\"\nimport useAuthContext from \"../hooks/useAuthContext\"\nimport { useMessengerChannelSorted } from \"../hooks/lists/useMessengerChannelList\"\nimport { navigate } from \"../navigation\"\n\nexport default ()=>{\n    const {auth} = useAuthContext()\n    const channelList = useMessengerChannelSorted(auth)\n    const today = (new Date()).toISOString().slice(0, 10)\n    return <View style={{flex:1, backgroundColor:'white'}}>\n        {channelList?.map((item, index)=>{\n            const date = item.last_message?.created.slice(0,10)\n            return <CommonItem key={index} bodyStyle={{flexDirection:'row', justifyContent:'space-between'}} onPress={()=>navigate(\"ChatScreen\", {id:item.id})}>\n                <View style={{flexDirection:'row'}}>\n                    <FontAwesome size={36} style={{ marginBottom: -3, marginRight:20 }} name='users'/>\n                    <View>\n                        <View style={{flexDirection:'row'}}>\n                            <Text style={{fontSize:18}}>{item.name}</Text>\n                            <Text style={{fontSize:18, opacity: 0.4, paddingLeft:5}}>{item.member_count}</Text>\n                        </View>\n                        <Text style={{fontSize:16, opacity: 0.4}}>{item.last_message?.content}</Text>\n                    </View>\n                </View>\n                <View>\n                    <Text style={{fontSize:14, opacity: 0.4, textAlign:'right'}}>{date==today?item.last_message?.created.slice(11,16):date}</Text>\n                    <Text style={{fontSize:14, textAlign:'right'}}>{item.unread_count?item.unread_count:' '}</Text>\n                </View>\n            </CommonItem>\n        })}\n    </View>\n}\n\nexport const MessengerIcon = <Ionicons size={30} style={{ marginBottom: -3 }} name='chatbox'/>","import React from \"react\";\nimport MemberTab, {MemberIcon} from \"./MemberTab\";\nimport OneTab, {ConfigIcon} from \"./OneTab\";\nimport DrawerTab  from './DrawerTab';\nimport MessengerTab, {MessengerIcon} from \"./MessengerTab\";\nimport lang from \"../lang\"\n// import BoardTab, {BoardIcon}  from \"../lib/blacktokki-board/BoardTab\";\n\nexport const bottomTabs = {\n    OneTab:{\n        title:lang('member'),\n        component:MemberTab,\n        icon:MemberIcon,\n    },\n    TwoTab:{\n        title:lang('messenger'),\n        component:MessengerTab,\n        icon:MessengerIcon\n    },\n    // ThreeTab:{\n    //     title:'board',\n    //     component:BoardTab,\n    //     icon:BoardIcon\n    // },\n    // FourTab:{\n    //     title:'config',\n    //     component:OneTab,\n    //     icon:ConfigIcon\n    // }\n} as Record<string, {title:string, component:React.ComponentType<any>, icon:JSX.Element}>\n\nexport const drawerTabs = {\n    TwoTab:{\n        title:lang('messenger'),\n        component:DrawerTab.Messenger,\n        icon:MessengerIcon\n    },\n    // ThreeTab:{\n    //     title:'board',\n    //     component:DrawerTab.Board,\n    //     icon:BoardIcon\n    // }\n} as Record<string, {title:string, component:React.ComponentType<any>, icon:JSX.Element}>","import { MaterialCommunityIcons } from \"@expo/vector-icons\"\nimport React from \"react\"\nimport { Text, View } from \"react-native\"\nimport CommonItem from \"../components/CommonItem\"\nimport useAuthContext from \"../hooks/useAuthContext\"\nimport useUserMembershipList from \"../hooks/lists/useUserMembershipList\"\nimport { UserMembership } from \"../types\"\nimport { navigate } from \"../navigation\"\nimport Avatar from \"../components/Avatar\"\n\nexport const renderMemberItem = (item:UserMembership, onPress?:()=>void)=> {\n    return <CommonItem key={item.id} bodyStyle={{backgroundColor:'white', flexDirection:'row', justifyContent:'flex-start'}} onPress={onPress}>\n        <View style={{marginTop:4, marginRight:12}}><Avatar name={item.name} userId={item.id} size={44}/></View>\n        <Text style={{fontSize:20, fontWeight:'400'}}>{item.name}</Text>\n    </CommonItem>\n}\n\nexport default ()=>{\n    const {auth} = useAuthContext()\n    const userList = useUserMembershipList(auth)\n    const memberItem = React.useMemo(\n        ()=>userList && userList.map(item=>renderMemberItem(item, ()=>navigate(\"ProfileScreen\", {id:item.id}))), [userList])\n    return <View style={{flex:1, backgroundColor:'white'}}>\n        {memberItem}\n    </View>\n}\n\nexport const MemberIcon = <MaterialCommunityIcons size={32} style={{ marginBottom: -3 }} name='account'/>","import { useTheme } from '@react-navigation/native';\nimport React, { useState } from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { TabView, SceneMap,NavigationState, SceneRendererProps, TabBar } from 'react-native-tab-view';\nimport { navigate } from '.';\nimport Profile from '../components/Profile';\nimport TextButton from '../components/TextButton';\nimport Colors from '../constants/Colors';\nimport useResizeWindow from '../hooks/useResizeWindow';\nimport { drawerTabs } from '../tabs';\nimport { UserMembership } from '../types';\n\nexport const TabViewNavigator = (props:{tabs:typeof drawerTabs, tabBarPosition:\"top\"|\"bottom\", index?:number, onTab?:(index:number)=>void})=>{\n  const [index, setIndex] = React.useState(props.index || 0);\n  const entries = Object.entries(props.tabs)\n  const onTab = props.onTab\n  const icons = Object.assign({}, ...entries.map(([k, v])=>({[k]:v.icon})))\n  return <TabView\n    renderTabBar={(props:SceneRendererProps & {navigationState: NavigationState<any>})=>{\n      return <TabBar\n        {...props}\n        indicatorStyle={{ backgroundColor: \"#2196F3\" }}\n        style={{ backgroundColor:'white' }}\n        activeColor={'black'}\n        inactiveColor={'black'}\n        renderIcon={(scene)=>icons[scene.route.key]}\n        onTabPress={(scene)=>onTab?.(entries.findIndex(([k, v])=>k == scene.route.key))}\n      />\n    }}\n    navigationState={{ index, routes: entries.map(([k, v])=>({key:k, title:v.title}))}}\n    onIndexChange={setIndex}\n    renderScene={SceneMap(Object.assign({}, ...entries.map(([k, v])=>({[k]:v.component}))))}\n    tabBarPosition={props.tabBarPosition}\n  />\n}\n\nconst onAddList = [\n  ()=>navigate(\"ChannelEditScreen\", {type:\"messenger\"}),\n  ()=>navigate(\"ChannelEditScreen\", {type:\"board\"})\n]\n\nexport default React.memo(({user}:{user:UserMembership})=> {\n  const { colors } = useTheme();\n  const windowType = useResizeWindow();\n  const [index, setIndex] = useState(0);\n  return windowType=='landscape'?<View\n      style={[\n        styles.tabBar,\n        {\n          backgroundColor: colors.card,\n          borderTopColor: colors.border,\n        },\n        // tabBarStyle,\n      ]}\n      pointerEvents={false ? 'none' : 'auto'}\n    >\n      <Profile userId={user.id} username={user.username} name={user.name}/>\n      <View style={{flexDirection:'row-reverse'}}>\n          <TextButton title='+' textStyle={{fontSize:20}} style={{borderRadius:20}} onPress={onAddList[index]}/>\n      </View>\n      <View accessibilityRole=\"tablist\" style={styles.content}>\n        {Object.keys(drawerTabs).length>1 ? \n          <TabViewNavigator tabs={drawerTabs} tabBarPosition={\"top\"} onTab={setIndex}/>: \n          <View style={{borderTopWidth:1, flex:1, borderColor:colors.border}}>            \n            {Object.values(drawerTabs).map(drawerTab=>{const Tab = drawerTab.component; return <Tab key={drawerTab.title}/>})}\n          </View>\n        }\n      </View>\n    </View>:<View style={{width:0}}></View>\n})\n\n{/*<Text style={[styles.label, { color: d.isFocused ? colors.primary : '#222' }]}></Text> */}\n\nconst styles = StyleSheet.create({\n    tabBar: {\n      width:240,\n      elevation: 8,\n      borderRightWidth:1,\n      borderColor:Colors.borderColor\n    },\n    content: {\n      flex: 1,\n      flexDirection: 'row',\n    },\n    tab: {\n        flex: 1,\n        alignItems: 'center',\n    },\n    label: {\n        textAlign: 'center',\n        backgroundColor: 'transparent',\n      },\n  });","import React from 'react';\nimport {View} from 'react-native'\nimport {Text} from './Themed';\nimport { ProfileProps } from '../types';\nimport Avatar from './Avatar';\nimport TextButton from './TextButton';\nimport CommonTextInput from './CommonTextInput';\nimport { patchUser } from '../apis';\nimport useAuthContext from '../hooks/useAuthContext';\n\nexport default (props:ProfileProps)=>{\n    const [name, setName] = React.useState<string>()\n    const { auth, dispatch } = useAuthContext()\n    const isSelf = auth.user?.id == props.userId\n    const onChange = ()=>{\n        isSelf && patchUser({id:props.userId, name:name || ''}).finally(()=>{\n            setName(undefined)\n            dispatch({type:\"REFRESH\"})\n        })\n    }\n    return <View style={{width:'100%', height:135, justifyContent:'space-evenly', alignItems:'center'}}>\n        <Avatar {...props} size={75}/>\n        {name===undefined?\n            <TextButton textStyle={{fontWeight:'bold', fontSize:15}} onPress={()=>isSelf && setName(props.name)} title={props.name} disabled={!isSelf}/>:\n            <CommonTextInput value={name} style={{textAlign:'center'}} setValue={setName} onBlur={onChange} onEndEditing={onChange} />}\n        <Text style={{fontWeight:'normal', fontSize:14}}>{props.username}</Text>\n    </View>\n}","import React, { useState } from 'react';\nimport { TextInput } from 'react-native';\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport { CustomTextInputProps } from '../types';\n\nexport default (props:CustomTextInputProps)=>{\n    const [contentHeight, setContentHeight] = useState<number>()\n    const minHeight = props.minHeight || 30\n    const theme = useColorScheme()\n    return <TextInput style={[{\n            borderColor:'#d0d7de', \n            fontSize:16, \n            borderWidth:1, \n            borderRadius:6, \n            paddingHorizontal:10, \n            paddingVertical:3, \n            backgroundColor:Colors[theme].background,\n            color:Colors[theme].text,\n            height:props.multiline?contentHeight:minHeight,\n        }, props.style]} \n        editable={!props.disabled} \n        value={props.value} \n        onChangeText={props.setValue}\n        onContentSizeChange={props.multiline?(e) => setContentHeight(Math.max(e.nativeEvent.contentSize.height, minHeight) + 2):undefined}\n        onBlur={()=>props.onBlur?.(props.value)}\n        onEndEditing={()=>props.onEndEditing?.(props.value)}\n        multiline={props.multiline}\n    />\n}","/**\n * Learn more about Light and Dark modes:\n * https://docs.expo.io/guides/color-schemes/\n */\n\nimport * as React from 'react';\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\n\nimport Colors from '../constants/Colors'\nimport useColorScheme from '../hooks/useColorScheme';\n\nexport function useThemeColor(\n  props: { light?: string; dark?: string },\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\n) {\n  const theme = useColorScheme();\n  const colorFromProps = props[theme];\n\n  if (colorFromProps) {\n    return colorFromProps;\n  } else {\n    return Colors[theme][colorName];\n  }\n}\n\ntype ThemeProps = {\n  lightColor?: string;\n  darkColor?: string;\n};\n\nexport type TextProps = ThemeProps & DefaultText['props'];\nexport type ViewProps = ThemeProps & DefaultView['props'];\n\nexport function Text(props: TextProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\n\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\n}\n\nexport function View(props: ViewProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\n\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\n}\n","import { createIntl, createIntlCache } from \"@formatjs/intl\";\nimport {I18nManager} from \"react-native\";\nimport * as RNLocalize from \"react-native-localize\";\n\nconst translations = {\n  ko: require(\"./ko.json\"),\n} as const;\n\ntype Translation = keyof typeof translations;\n\n// fallback if no available language fits\nconst fallback = { languageTag: \"en\", isRTL: false };\n\nconst { languageTag, isRTL } =\n  RNLocalize.findBestLanguageTag(Object.keys(translations)) ?? fallback;\n\n// update layout direction\nI18nManager.forceRTL(isRTL);\n\n// console.log(languageTag)\nconst intl = createIntl(\n  {\n    defaultLocale: \"en\",\n    locale: languageTag,\n    messages: translations[languageTag as Translation],\n  },\n  createIntlCache(),\n);\n\ntype TranslationParams = Parameters<(typeof intl)[\"formatMessage\"]>[1];\n\nexport default (key: string, params?: TranslationParams) => \n  intl\n    .formatMessage({ id: key, defaultMessage: key }, params)\n    .toString();","/**\n * Learn more about deep linking with React Navigation\n * https://reactnavigation.org/docs/deep-linking\n * https://reactnavigation.org/docs/configuring-links\n */\n\nimport { LinkingOptions } from '@react-navigation/native';\nimport * as Linking from 'expo-linking';\nimport {main, login, modal} from '../screens';\n\nconst ROOTPATH = 'tokki-tok'  // github repository name\n\nObject.values(modal).forEach(v=>v.path = ROOTPATH + '/' + v.path)\n\nexport default  {\n  prefixes: [Linking.makeUrl('/')],\n  config: {\n    screens: {\n      Main: {\n        screens:{\n          ...main,\n          ...login,\n          NotFound: '*',\n        },\n        path: ROOTPATH\n      },\n      ...modal\n    },\n  },\n} as LinkingOptions;\n","import axios, { AxiosRequestConfig } from 'axios';\n// @ts-ignore\nimport {API_URL} from \"@env\"\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nexport const accountURL =  `${API_URL}/account/`\nconst baseURL =  `${API_URL}/messenger/`\nconst defaultOption:AxiosRequestConfig = {\n    baseURL,\n    withCredentials: true,\n    headers: {}\n};\nconst _axios = axios.create(defaultOption);\n\n_axios.interceptors.request.use(\n    config => {\n        return config;\n    },\n    error => {\n        return Promise.reject(error);\n    }\n)\n\n_axios.interceptors.response.use(\n    response => {\n        // if((response.request.responseURL as string).indexOf('/task/login')>=0 && response.data.length != 0){\n        //     // redirect login\n        // }\n        return response;\n    },\n    error => {\n        if (error.response.status === 401) {\n            getToken().then(async(token)=>{\n                const r = await _axios.post(\"/api/v1/user/sso/refresh/\", {token}, {headers:{'Authorization':''}, baseURL: accountURL})\n                if (r.status == 200 && r.data !== ''){\n                    setToken(r.data)\n                }\n            })\n        }\n        return Promise.reject(error)\n    }\n)\n\nexport const setToken = async (token:string|null)=>{\n    _axios.defaults.headers['Authorization'] = `JWT ${token}`\n    if (token)\n        await AsyncStorage.setItem(\"Authorization\", token)\n    else\n        AsyncStorage.removeItem(\"Authorization\")\n}\nexport const getToken = async ()=>{\n    const token = await AsyncStorage.getItem(\"Authorization\")\n    _axios.defaults.headers['Authorization'] = token?`JWT ${token}`:null\n    return token\n}\n\nexport default _axios\n","const tintColorLight = '#2f95dc';\nconst tintColorDark = '#fff';\n\nexport default {\n  light: {\n    text: '#000',\n    background: '#fff',\n    tint: tintColorLight,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorLight,\n    header:'#24292f',\n    buttonColor:'rgb(242,242,242)',\n    buttonBackgroundColor: '#f6f8fa', //'rgba(9,30,66,0.08)',//rgb(242,242,242)\n  },\n  dark: {\n    text: '#fff',\n    background: '#000',\n    tint: tintColorDark,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorDark,\n    header:'#dbd6d1',\n    buttonColor:'rgb(14,14,14)',\n    buttonBackgroundColor: '#080604',\n  },\n  button:{\n    borderColor:'rgba(27,31,36,0.15)',\n  },\n  borderColor:'#d0d7de',\n  \n  focus:'#0065A4',\n};\n","import { StackScreenProps } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport lang from '../lang'\n\nexport default function NotFoundScreen({\n  navigation,\n}: StackScreenProps<any, 'NotFound'>) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>{lang(\"This screen doesn't exist.\")}</Text>\n      <TouchableOpacity onPress={() => navigation.replace('HomeScreen')} style={styles.link}>\n        <Text style={styles.linkText}>{lang(\"Go to home screen!\")}</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  link: {\n    marginTop: 15,\n    paddingVertical: 15,\n  },\n  linkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n});\n","import React, { createContext, useContext, useEffect, useMemo, useRef, useState } from \"react\"\nimport firebase from \"firebase/app\";\nimport \"firebase/messaging\";\n//@ts-ignore\nimport {FCM_PUBLIC_VAPID_KEY, FCM_API_KEY} from \"@env\"\nimport { Notification as NotificationType, UserMembership } from \"../types\";\nimport { getNotification, postNotification, putNotification } from \"../apis/notification\";\nconst firebaseConfig = require(\"../../web/firebase-config.js\")\n// Initialize Firebase\nconst key = firebaseConfig.messagingSenderId\nconst apiKeyEncrypted = (FCM_API_KEY as string).split('').map((v, i)=> (v.charCodeAt(0) ^ key.charCodeAt(i)).toString(16).padStart(2, '0')).join('')\nconst app = firebase.initializeApp({...firebaseConfig, apiKey:FCM_API_KEY});\n// const analytics = getAnalytics(app);\nconst messaging = firebase.messaging(app);\n\nmessaging.onMessage((payload) => {\n  if (!(\"Notification\" in window)) {\n    alert(\"This browser does not support desktop notification\");\n  }\n  else if (Notification.permission === \"granted\") {\n    const message_set = JSON.parse(payload.data['message_set'])[0]\n    new Notification(payload.data.channel_name, { body: `${payload.data.name}: ${message_set.content}` });\n  }\n});\n\nconst FirebaseContext = createContext<{enable:boolean, setEnable:(enable:boolean)=>void}>({enable:false, setEnable:()=>{}});\n\nconst requestToken = async()=>{\n  const permission = await Notification.requestPermission();\n  if (permission === 'granted') {\n    const serviceWorkerRegistration = await navigator.serviceWorker.register(`${process.env.PUBLIC_URL}/firebase-messaging-sw.js?${apiKeyEncrypted}`)\n    console.log('[SW]: SCOPE: ', serviceWorkerRegistration.scope);\n    const currentToken = await messaging.getToken({serviceWorkerRegistration, vapidKey: FCM_PUBLIC_VAPID_KEY })\n    window.addEventListener('beforeunload', (event:any) => {\n      event.preventDefault();\n      serviceWorkerRegistration.unregister()\n    });\n    if (currentToken)\n      return currentToken\n  }\n  return undefined\n}\n\nexport const FirebaseProvider = ({children, user}:{user?:UserMembership|null, children:React.ReactNode})=>{\n  const tokenRef = useRef<string>()\n  const [notification, setNotification] = useState<NotificationType>()\n  const enable = useMemo(()=>!(notification?.token), [notification])\n  const setEnable = (enable:boolean)=>{\n    if(user && notification){\n      putNotification({...notification, token:enable||tokenRef.current==undefined?null:tokenRef.current}).then((noti)=>{\n        setNotification(noti)\n      })\n    }\n  }\n  \n  useEffect(()=>{\n    let isMount = true;\n    const setNotificationInternal = (n?:NotificationType)=>{\n      if (isMount)setNotification(n)\n    }\n    if(user){\n      requestToken().then((t)=>{\n        tokenRef.current = t\n        getNotification(user.id).then(noti=>{\n          const token = t==undefined?null:t\n          if (noti == undefined)\n            postNotification({user:user.id, type:'WEB', token}).then(setNotificationInternal)\n          else\n            putNotification({...noti, token}).then(setNotificationInternal)\n        })\n      })\n    }\n    else{\n      setNotificationInternal(undefined)\n    }\n    return ()=>{isMount=false}\n  }, [user])\n  return !user?<>{children}</>:<FirebaseContext.Provider value={{enable, setEnable}}>\n    {children}\n  </FirebaseContext.Provider>\n}\n\nexport default ()=>{\n  const firebaseContext = useContext(FirebaseContext)\n  return firebaseContext\n}\n","import React, { useEffect, useState } from 'react'\nimport { Dimensions, Platform, View } from 'react-native'\nimport useIsMobile from '../hooks/useIsMobile'\n\ntype ViewProps = {windowType:'landscape'|'portrait', children:React.ReactNode}\n\nexport default (props:ViewProps)=>{\n    const isMobile = useIsMobile()\n    const [height, setHeight] = useState(window.innerHeight + 1)\n    useEffect(()=>{\n        if(isMobile && Platform.OS == 'web'){\n            const onChange = (e:any)=>{\n                setHeight(window.innerHeight + 1)\n            }\n            Dimensions.addEventListener(\"change\",onChange)\n            return () => Dimensions.removeEventListener(\"change\", onChange)\n            \n        }\n    },[ isMobile])\n    return <View style={{height:isMobile&&Platform.OS == 'web'?height:'100%'}}>\n        {props.children}\n    </View>\n\n}\n  ","import { CardStyleInterpolators, createStackNavigator } from '@react-navigation/stack';\nimport React, {useMemo} from 'react';\nimport { View } from 'react-native';\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { Ionicons } from '@expo/vector-icons';\nimport useResizeWindow from '../hooks/useResizeWindow';\nimport NotFoundScreen from '../screens/NotFoundScreen';\nimport {main, login, modal} from '../screens';\nimport DrawerNavigator from './DrawerNavigator';\nimport useAuthContext, {AuthProvider} from '../hooks/useAuthContext';\nimport { WebSocketProvider } from '../hooks/useWebsocketContext';\nimport HeaderRight from '../components/HeaderRight'\nimport Colors from '../constants/Colors';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { FirebaseProvider } from '../hooks/useFirebaseContext';\nimport useIsMobile from '../hooks/useIsMobile';\nimport MobileSafeAreaView from '../components/MobileSafeAreaView';\nimport useColorScheme from '../hooks/useColorScheme';\n\nconst Root = createStackNavigator();\n\nconst queryClient = new QueryClient();\n\nexport default function RootNavigator() {\n    const windowType = useResizeWindow();\n    return (\n        <MobileSafeAreaView windowType={windowType}>\n            <AuthProvider>\n                <QueryClientProvider client={queryClient}>\n                    {/* devtools */}\n                    {/* <ReactQueryDevtools initialIsOpen={true} /> */}\n                        <Root.Navigator\n                            mode= 'modal'\n                            headerMode= 'screen'\n                            screenOptions={{\n                                cardStyle:{backgroundColor:\"white\"},\n                                animationEnabled: true,\n                                cardStyleInterpolator: CardStyleInterpolators.forVerticalIOS,\n                            }}\n                        >\n                            <Root.Screen name=\"Main\" component={MainNavigator} options={{headerShown:false}}/>\n                            {Object.entries(modal).map(([key, screen])=><Root.Screen key={key} name={key} component={screen.component} options={{\n                                title: screen.title,\n                                gestureDirection: windowType == 'landscape'?'vertical-inverted':'vertical'\n                            }} />)}\n                        </Root.Navigator>\n                </QueryClientProvider>\n            </AuthProvider>\n        </MobileSafeAreaView>\n    );\n}\n\nconst Main = createStackNavigator();\n\nfunction headerLeft(navigation:any, route:any, windowType:string, isMobile:boolean){\n    const canGOBackScreen = ['HomeScreen', 'LoginScreen'].findIndex(v=>v == route.name) == -1\n    const goBack = ()=>{\n        if (navigation.canGoBack())\n            navigation.goBack()\n        else if (canGOBackScreen)\n            navigation.replace('HomeScreen')\n    }\n    if (windowType=='portrait' && canGOBackScreen)\n        return <TouchableOpacity onPress={goBack}><Ionicons size={isMobile?20:24} style={{marginHorizontal:isMobile?16:20 }} name=\"arrow-back\"/></TouchableOpacity>\n    return null\n}\n\nfunction MainNavigator(){\n    const windowType = useResizeWindow();\n    const isMobile = useIsMobile()\n    const {auth} = useAuthContext()\n    const theme = useColorScheme()\n    const entries = useMemo(()=>{\n        if (auth.user === undefined)\n            return []\n        console.log('current user: ', auth.user)\n        return Object.entries(auth.user === null?login:main)\n    }, [auth])\n    return (auth.user!==undefined?<View style={{flexDirection:'row', flex:1}}>\n        {auth.user?<DrawerNavigator user={auth.user}/>:undefined}\n        <View style={{flex:1}}>\n            <FirebaseProvider user={auth.user}>\n                <WebSocketProvider disable={auth.user === null || auth.user === undefined}>\n                    <Main.Navigator\n                        screenOptions={({navigation, route})=>({\n                            headerStyle:{backgroundColor:Colors[theme].header, height:isMobile?50:undefined},\n                            headerTitleStyle:{color:'white'},\n                            headerLeft:()=>headerLeft(navigation, route, windowType, isMobile),\n                            headerRight:()=><HeaderRight/>,\n                            headerLeftContainerStyle:{backgroundColor:'white', borderBottomWidth:1, borderColor:Colors.borderColor},\n                            cardStyle:{flexShrink:1},\n                            animationEnabled:windowType=='portrait',\n                            cardStyleInterpolator: CardStyleInterpolators.forHorizontalIOS\n                        })}\n                    >\n                        {entries.map(([key, screen])=><Main.Screen key={key} name={key} component={screen.component} options={{ title: screen.title }} />)}\n                        <Main.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n                    </Main.Navigator>\n                </WebSocketProvider>\n            </FirebaseProvider>\n        </View>\n    </View>:<></>);\n}","import React from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport Navigation from './src/navigation';\nimport useColorScheme from './src/hooks/useColorScheme';\nimport useCachedResources from './src/hooks/useCachedResources';\n\nexport default function App() {\n  const isLoadingComplete = useCachedResources();\n  const colorScheme = useColorScheme();\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return (\n      <SafeAreaProvider>\n        <Navigation colorScheme={colorScheme} />\n        <StatusBar />\n      </SafeAreaProvider>\n    );\n  }\n}\n","import { Ionicons } from '@expo/vector-icons';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as React from 'react';\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...Ionicons.font,\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete;\n}\n","import React, { createContext, useContext, useEffect, useReducer, useMemo, Dispatch } from \"react\"\nimport { checkLogin, login, logout } from \"../apis\"\nimport { getNotification, putNotification } from \"../apis/notification\"\nimport { UserMembership } from \"../types\"\n\ntype AuthAction = {type:string, username?:string, password?:string, user?:UserMembership|null}\n\nexport type Auth = {user?:UserMembership|null, groupId?:number}\n\ntype AuthState ={user?:UserMembership|null, request?:{username:string, password:string}|null}\n\nconst AuthContext = createContext<{auth:Auth, dispatch:Dispatch<AuthAction>}>({auth:{}, dispatch:()=>{}});\n\nconst authReducer =(initialState:AuthState, action:AuthAction)=>{\n  switch (action.type){\n      case 'LOGIN_REQUEST':\n        return {\n          ...initialState,\n          request:{username:action.username, password:action.password},\n        } as AuthState\n      case 'LOGIN_GUEST':\n        return {\n          ...initialState,\n          request:{username:'guest', password:'guest'},\n        } as AuthState\n      case 'LOGIN_SUCCESS':\n          return{\n              ...initialState,\n              user:action.user,\n              request:undefined\n          }\n      case 'LOGIN_FAILED':\n          return{\n              ...initialState,\n              request:undefined\n          }\n      case 'LOGOUT_REQUEST':\n          return{\n              ...initialState,\n              request:null\n          }\n      case 'LOGOUT_SUCCESS':\n          return {\n            ...initialState,\n            user:null,\n            request:undefined\n          }\n      case 'REFRESH':\n        return {\n          ...initialState,\n          user:undefined\n        }\n      default:\n          throw new Error( `Unhandled action type: ${action.type}`)\n  }\n}\n\n\nexport const AuthProvider = ({children}:{children:React.ReactNode})=>{\n  const [authState, dispatch] = useReducer(authReducer, {} as Auth)\n  const auth = useMemo(()=>({\n    user:authState.user,\n    groupId: authState.user?.membership_set.find(g=>g.root_group_id==null)?.group\n  }), [authState])\n  useEffect(()=>{\n    if(authState.user===undefined){\n      checkLogin().then((user)=>{\n        dispatch({type:\"LOGIN_SUCCESS\", user})\n      }).catch((e)=>{\n        console.log(e)\n        dispatch({type:\"LOGOUT_SUCCESS\"})\n      })\n    }\n    else if(authState.user===null && authState.request){\n      login(authState.request.username, authState.request.password).then(user=>{\n        dispatch({type:\"LOGIN_SUCCESS\", user})\n      }).catch(()=>{\n        dispatch({type:\"LOGIN_FAILED\"})\n      })\n    }\n    else if(authState.user && authState.request===null){\n      getNotification(authState.user.id).then(noti=>{\n        noti && putNotification({...noti, token:''}).then(()=>{\n          logout().then(()=>dispatch({type:\"LOGOUT_SUCCESS\"}))\n        })\n      })\n    }\n  }, [authState])\n  return <AuthContext.Provider value={{auth, dispatch}}>\n    {children}\n  </AuthContext.Provider>\n}\n\nexport default ()=>{\n  const authContext = useContext(AuthContext)\n  return authContext\n}\n","firebaseConfig = {\n    \"authDomain\": \"virtual-metrics-355712.firebaseapp.com\",\n    \"projectId\": \"virtual-metrics-355712\",\n    \"storageBucket\": \"virtual-metrics-355712.appspot.com\",\n    \"messagingSenderId\": \"76003576924\",\n    \"appId\": \"1:76003576924:web:c8c8a006d07918bbc02a99\",\n    \"measurementId\": \"G-SEL35L4N5R\"\n}\nif (typeof module !== 'undefined') {\n    module.exports = firebaseConfig\n}\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","/**\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\n * https://reactnavigation.org/docs/getting-started\n *\n */\nimport _ from 'lodash';\nimport { NavigationContainer, DefaultTheme, DarkTheme, NavigationContainerRef } from '@react-navigation/native';\nimport * as React from 'react';\nimport { ColorSchemeName } from 'react-native';\n\nimport LinkingConfiguration from './LinkingConfiguration';\nimport RootNavigator from './RootNavigator';\n\nconst navigationRef = React.createRef<NavigationContainerRef>();\n\nexport function navigate(name:string, params?:any) {\n  if (params)\n    navigationRef.current?.navigate(name, params);\n  navigationRef.current?.navigate(name);\n}\n\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\n  return (\n    <NavigationContainer\n      ref={navigationRef}\n      documentTitle={{formatter: (options, route) => {return `TOKKI TOK`}}}\n      linking={(process.versions && process.versions['electron'])?undefined:LinkingConfiguration}\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n\n(function(l) {  // for github-page\n    if (l !== undefined && l.search[1] === '/' ) {\n        var decoded = l.search.slice(1).split('&').map(function(s) { \n        return s.replace(/~and~/g, '&')\n        }).join('?');\n        window.history.replaceState(null, '',\n            l.pathname.slice(0, -1) + decoded + l.hash\n        );\n    }\n}(window.location))\n    \nconst ignoreWarnings = ['ReactNativeFiberHostComponent'];\nconst _console = _.clone(console);\nconsole.warn = (message: string|Object) => {\n    var warn = true;\n    if (message instanceof Object)\n    warn = false;\n    else{\n    ignoreWarnings.forEach((value)=>{\n        if (message.indexOf && message.indexOf(value) <= -1) {\n            warn = false;\n        }\n    })\n    };\n    if (warn){\n        _console.warn(message);\n    }\n    else{\n        // console.log(message)\n    }\n};\n","\nimport { User, UserMembership } from '../types';\nimport axios, { getToken, setToken, accountURL as baseURL } from './axios';\n\nexport const login = async(username:string, password:string) => {\n    if(username.endsWith('.guest') && password.length == 0)\n        password = 'guest'\n    const r = await axios.post(\"/api-token-auth/\", {username, password});\n    if(r.status == 200){\n        await setToken(r.data)\n        return await checkLogin()\n    }\n}\n\nexport const logout = async() => {\n    await setToken(null)\n    return await axios.get(\"/api-auth/logout/\")\n}\n\nexport const guestLogin =  async() => {\n    return await login('guest', 'guest')\n}\n\nconst checkLoginToken = async ()=>{\n    const value = (await axios.get(\"/api/v1/users/memberships/?_self=true\"))?.data\n    if (value && value.length){\n        return value[0] as UserMembership\n    }\n    return null\n}\n\nexport const checkLogin = async() => {\n    const token = await getToken()\n    if (token === null)\n        return null\n    try{\n       return await checkLoginToken()\n    }\n    catch(e:any){\n        let error = e\n        if(e.response !== undefined && e.response.status==401){\n            try{\n                return await checkLoginToken()\n            }\n            catch(e2){\n                error = e2\n            }\n        }\n        const isOffline = ((error as any).code == \"ERR_NETWORK\" || (error as any).message && ((error as any).message as string).startsWith(\"Cannot read\"))\n        throw {error, isOffline}\n    }\n}\n\nexport const getUserList = async (group_id:number)=>{\n    return (await axios.get(`/api/v1/users/?group_id=${group_id}`) ).data as User[]\n}\n\nexport const patchUser = async (user:{id:number, name:string})=>{\n    await axios.patch(`/api/v1/user/`, {ids:[user.id], updated: {name:user.name}}, {baseURL})\n}\n\nexport const getUserMembershipList = async (group_id:number)=>{\n    return (await axios.get(`/api/v1/users/memberships/?group_id=${group_id}`) ).data as UserMembership[]\n}\n","import { Channel, MessengerMember, MessengerContent, EditMessage, MessengerChannel, DirectChannel } from '../types';\nimport axios from './axios';\n\nexport const getMessengerChannelList = async (user_id:number)=>{\n    return (await axios.get(`/api/v1/channels/messenger/?type=messenger&messenger_user_id=${user_id}`) ).data as MessengerChannel[]\n}\n\nexport const postChannel = async(channel:Channel)=>{\n    return (await axios.post(`/api/v1/channels/`, channel)).data as Channel\n}\n\nexport const postDirectChannel = async(channel:DirectChannel)=>{\n    return (await axios.post(`/api/v1/channels/direct/`, channel)).data as Channel\n}\n\nexport const putChannel = async(channel:Channel)=>{\n    return (await axios.put(`/api/v1/channels/${channel.id}/`, channel)).data as Channel\n}\n\nexport const deleteChannel = async(channel_id:number)=>{\n    await axios.delete(`/api/v1/channels/${channel_id}/`)\n}\n\nexport const getMessengerMemberList = async(channel_id:number)=>{\n    return (await axios.get(`/api/v1/messengermembers/?channel=${channel_id}`) ).data as MessengerMember[]\n}\n\nexport const postBulkMessengerMember = async(data:{channel_id:number, user_ids:number[]})=>{\n    await axios.post(`/api/v1/messengermembers/bulk/`, {channel:data.channel_id, user_ids:data.user_ids})\n}\n\nexport const deleteMessengerMember = async(member_id:number)=>{\n    await axios.delete(`/api/v1/messengermembers/${member_id}/`)\n}\n\nexport const getMessengerContentList = async (channel_id:number, id_lt?:number)=>{\n    const id_lt_param = id_lt?`&id_lt=${id_lt}`:''\n    return (await axios.get(`/api/v1/messengercontents/?limit=30&channel=${channel_id}${id_lt_param}`)).data.results as MessengerContent[]\n}\n\nexport const postMessage = async (message:EditMessage)=>{\n    if (message.file){\n        const formData = new FormData(); // formData 객체를 생성한다.\n        formData.append(\"file\", message.file)\n        Object.entries(message).forEach(value=>{\n            formData.append(value[0], `${value[1]}`)\n        })\n        await axios.post(`/api/v1/messengercontents/messages/`, formData, {headers:{\n            ...(axios.defaults.headers as any), \"Content-Type\": \"multipart/form-data\",\n        }})\n    }\n    else{\n        await axios.post(`/api/v1/messengercontents/messages/`, message)\n    }\n}\n\nexport const deleteMessengerContent = async (content_id:number)=>{\n    await axios.delete(`/api/v1/messengercontents/${content_id}/`)\n}","import React, { useState } from 'react';\nimport { Text, StyleSheet, Pressable, StyleProp, ViewStyle} from 'react-native';\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport { CustomButtonProps } from '../types';\n\nconst DefaultButton = (props:CustomButtonProps)=>{\n    const [hover, setHover] = useState(false)\n    return <Pressable\n        onPress={()=>props.onPress()}\n        //@ts-ignore\n        onHoverIn={()=>setHover(true)}\n        onHoverOut={()=>setHover(false)}\n        style={[\n            {\n                paddingVertical:5, \n                paddingHorizontal:16\n            },\n            props.style,\n            hover?{backgroundColor:props.color}:{}\n        ]}>\n            <Text selectable={false} style={[{fontSize:14}, props.textStyle]}>{props.title}</Text>\n        </Pressable>\n}\n\nexport default (props:CustomButtonProps)=>{\n    const theme = useColorScheme()\n    const _props = {\n        color:Colors[theme].buttonColor,\n        ...props,\n        style:[\n            styles.style,\n            {\n                backgroundColor:Colors[theme].buttonBackgroundColor\n            },\n            props.style,\n        ] as StyleProp<ViewStyle>,\n        textStyle:[\n            styles.text, \n            {color:Colors[theme].text},\n            props.textStyle\n        ]\n    }\n    return <DefaultButton {..._props}/>\n}\n\nconst styles = StyleSheet.create({\n    style:{\n        borderRadius:6, \n        borderColor:Colors.button.borderColor, \n        borderWidth:1, \n    },\n    text:{\n        textAlign:'center', \n        fontWeight:'600'\n    }\n});\n","import { useState, useEffect } from 'react';\nimport { Dimensions, ScaledSize } from 'react-native';\n//@ts-ignore\nimport useMobileDetect from 'use-mobile-detect-hook';\n\ntype WindowType = 'portrait' | 'landscape'\n\nconst getWindowType = (window:ScaledSize)=> window.height >= window.width?'portrait':'landscape' as WindowType;\n\nexport default function useResizeWindow() {\n  const detectMobile = useMobileDetect();\n  const [windowType, setWindowType] = useState(getWindowType(Dimensions.get('window')))\n  const onChange = () => setWindowType(getWindowType(Dimensions.get('window')))\n\n  useEffect(() => {\n    Dimensions.addEventListener(\"change\", onChange);\n    return () => {\n      Dimensions.removeEventListener(\"change\", onChange);\n    };\n  });\n  if (detectMobile.isMobile())\n    return 'portrait'\n  return windowType\n}","import { ColorSchemeName, useColorScheme as _useColorScheme } from 'react-native';\n\n// The useColorScheme value is always either light or dark, but the built-in\n// type suggests that it can be null. This will not happen in practice, so this\n// makes it a bit easier to work with.\nexport default function useColorScheme(): NonNullable<ColorSchemeName> {\n  return _useColorScheme() as NonNullable<ColorSchemeName>;\n}\n","import { useEffect } from \"react\";\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport { getMessengerChannelList, postChannel, postDirectChannel, putChannel } from \"../../apis\";\nimport { MessengerChannel, MessengerContent } from \"../../types\";\nimport { Auth } from \"../useAuthContext\";\nimport useWebsocketContext from \"../useWebsocketContext\";\n\nexport default function useMessengerChannelList(auth?:Auth){\n  const queryClient = useQueryClient()\n  const {lastJsonMessage} = useWebsocketContext()\n  const { data } = useQuery(\"MessengerChannelList\" , async()=>auth?.user?.id?(await getMessengerChannelList(auth.user.id)):[])\n\n  useEffect(()=>{\n    if(lastJsonMessage !=null){\n      if(lastJsonMessage['type']=='enter'){\n        queryClient.setQueryData<MessengerChannel[]>(\"MessengerChannelList\", (_data)=>{\n          return (_data?.find(v=>v.id==lastJsonMessage['data']['id'])?_data:[lastJsonMessage['data'] , ...(_data|| [])]).sort((a, b)=>a.id - b.id)\n        })\n      }\n      if (lastJsonMessage['type']=='next_message'){\n        const data:MessengerContent = lastJsonMessage['data']\n        queryClient.setQueryData<MessengerChannel[]>(\"MessengerChannelList\", (_data)=>(_data || []).map(v=>{\n          if (v.id == data.channel){\n            return {...v, last_message:{content:data.message_set[0]?.content, created:data.created}}\n          }\n          return v\n        }))\n      }\n      // if(lastJsonMessage['type']=='leave'){\n      //   queryClient.setQueryData<Channel[]>(\"MessengerChannelList\", (_data)=>_data?.filter(v=>v.id!=lastJsonMessage['data']['channel_id']) || [])\n      // }\n    }\n  }, [lastJsonMessage])\n  return data\n}\n\nexport function useMessengerChannelSorted(auth?:Auth){\n  const channelList = useMessengerChannelList(auth);\n  return channelList?.sort((a, b)=>(a.last_message?.created || '') < (b.last_message?.created || '')?1:-1)\n}\nexport function useMessengerChannelMutation(){\n  const queryClient = useQueryClient()\n\n  const create = useMutation(postChannel, {\n    onSuccess: ()=>queryClient.invalidateQueries(\"MessengerChannelList\")\n  });\n\n  const update = useMutation(putChannel, {\n    onSuccess: () => queryClient.invalidateQueries(\"MessengerChannelList\")\n  })\n\n  const direct = useMutation(postDirectChannel, {\n    onSuccess: () => queryClient.invalidateQueries(\"MessengerChannelList\")\n  })\n\n  return { create:create.mutateAsync, update:update.mutateAsync, direct:direct.mutateAsync}\n}"],"sourceRoot":""}