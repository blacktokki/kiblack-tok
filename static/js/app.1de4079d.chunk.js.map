{"version":3,"sources":["src/services/notification.ts","src/lang/index.ts","src/services/axios.ts","src/hooks/useAuthContext.tsx","src/hooks/useColorScheme.ts","src/lib/@expo/vector-icons.tsx","src/hooks/useIsMobile.ts","src/components/MobileSafeAreaView.tsx","App.tsx","src/hooks/useCachedResources.ts","src/assets/fonts/SpaceMono-Regular.ttf","src/constants/Envs.ts","src/services/account.ts","src/services/messenger.ts","src/hooks/useLangContext.tsx"],"names":["getNotification","_ref","_asyncToGenerator","user_id","data","axios","get","length","undefined","_x","apply","arguments","postNotification","_ref2","notification","post","_x2","putNotification","_ref3","put","id","_x3","translations","ko","require","_RNLocalize$findBestL","RNLocalize","Object","keys","languageTag","isRTL","I18nManager","forceRTL","intl","createIntl","defaultLocale","locale","messages","createIntlCache","defaultOption","baseURL","withCredentials","headers","_axios","create","interceptors","request","use","config","error","Promise","reject","response","status","getToken","then","token","r","accountURL","setToken","finally","defaults","AsyncStorage","setItem","removeItem","getItem","AuthContext","createContext","auth","dispatch","authReducer","initialState","action","type","_objectSpread","username","password","user","Error","AuthProvider","children","_useReducer","useReducer","_useReducer2","_slicedToArray","authState","_useState","useState","_useState2","setError","useMemo","_authState$user","_authState$user$membe","groupId","membership_set","find","g","root_group_id","group","useEffect","checkLogin","catch","e","console","log","login","_data$response","_data$response$data","message","noti","logout","_jsx","Provider","value","useContext","useInitColorScheme","complete","setComplete","v","Appearance","set","colorScheme","setColorScheme","useColorScheme","dark","useTheme","lazyIcon","key","Icon","React","lazy","module","default","props","Suspense","fallback","_Fragment","AntDesign","Ionicons","FontAwesome","MaterialIcons","FontAwesome5","Entypo","SimpleLineIcons","MaterialCommunityIcons","useMobileDetect","isMobile","Platform","OS","useIsMobile","window","innerHeight","height","setHeight","onChange","Dimensions","addEventListener","removeEventListener","View","style","queryClient","QueryClient","App","isLoadingComplete","_React$useState","_React$useState2","setLoadingComplete","_loadResourcesAndDataAsync","SplashScreen","Font","font","warn","loadResourcesAndDataAsync","useCachedResources","isAppearenceComplete","isViewer","location","pathname","endsWith","Navigation","ChatViewer","SafeAreaProvider","MobileSafeAreaView","QueryClientProvider","client","IntlProvider","_jsxs","StatusBar","l","search","decoded","slice","split","map","s","replace","join","history","replaceState","hash","exports","_split","_split2","websockerURL","FCM_PUBLIC_VAPID_KEY","FCM_API_KEY","TURN_SERVER","guestLogin","checkLoginToken","_ref4","_yield$axios$get","_ref5","e2","isOffline","code","startsWith","getUserList","_ref6","group_id","postUser","_ref7","imageUrl","inviteGroupId","isAdmin","is_staff","isGuest","is_guest","name","_x4","patchUser","_ref8","patch","ids","updated","_x5","deleteUser","_ref9","userId","delete","_x6","getUserMembershipList","_ref10","_x7","getExternalMembershipList","_ref11","_x8","getMessengerChannelList","resolve","postChannel","channel","postDirectChannel","putChannel","deleteChannel","channel_id","getMessengerMemberList","postBulkMessengerMember","user_ids","deleteMessengerMember","member_id","getMessengerContentList","id_lt","id_lt_param","viewerPath","results","_x9","_x10","_x11","getNewMessengerContentList","updated_gte","_x12","_x13","getTimerMessageContentList","timer_gt","_x14","_x15","postMessage","_ref12","callback","file","formData","FormData","append","entries","forEach","filename","onUploadProgress","p","progress","loaded","total","_x16","_x17","patchMessengerContent","_ref13","content","_x18","IntlContext","setLocale","_useState3","_useState4","_useContext","lang","params","formatMessage","defaultMessage","toString"],"mappings":"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","file":"static/js/app.1de4079d.chunk.js","sourcesContent":["import { Notification } from '../types';\nimport axios from './axios';\n\nexport const getNotification = async (user_id:number)=>{\n    const data = (await axios.get(`/api/v1/notifications/?type=WEB&user=${user_id}`) ).data as Notification[]\n    return data.length?data[0]:undefined\n}\n\nexport const postNotification = async(notification:Notification)=>{\n    return (await axios.post(`/api/v1/notifications/`, notification)).data as Notification\n}\n\nexport const putNotification = async(notification:Notification)=>{\n    return (await axios.put(`/api/v1/notifications/${notification.id}/`, notification)).data as Notification\n}","import { createIntl, createIntlCache } from \"@formatjs/intl\";\nimport {I18nManager} from \"react-native\";\nimport * as RNLocalize from \"react-native-localize\";\n\nexport const translations = {\n  ko: require(\"./ko.json\"),\n} as const;\n\ntype Translation = keyof typeof translations;\n\n// fallback if no available language fits\nconst fallback = { languageTag: \"en\", isRTL: false };\n\nconst { languageTag, isRTL } =\n  RNLocalize.findBestLanguageTag(Object.keys(translations)) ?? fallback;\n\n// update layout direction\nI18nManager.forceRTL(isRTL);\n\n// console.log(languageTag)\nconst intl = createIntl(\n  {\n    defaultLocale: \"en\",\n    locale: languageTag,\n    messages: translations[languageTag as Translation],\n  },\n  createIntlCache(),\n);\n\nexport default intl","import axios, { AxiosRequestConfig } from 'axios';\nimport {accountURL, baseURL} from \"../constants/Envs\"\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nconst defaultOption:AxiosRequestConfig = {\n    baseURL,\n    withCredentials: true,\n    headers: {}\n};\nconst _axios = axios.create(defaultOption);\n\n_axios.interceptors.request.use(\n    config => {\n        return config;\n    },\n    error => {\n        return Promise.reject(error);\n    }\n)\n\n_axios.interceptors.response.use(\n    response => {\n        // if((response.request.responseURL as string).indexOf('/task/login')>=0 && response.data.length != 0){\n        //     // redirect login\n        // }\n        return response;\n    },\n    error => {\n        if (error.response.status === 401) {\n            return getToken().then(async(token)=>{\n                if (token){\n                    const r = await _axios.post(\"/api/v1/user/sso/refresh/\", {token}, {headers:{'Authorization':''}, baseURL: accountURL})\n                    if (r.status == 200 && r.data !== ''){\n                        setToken(r.data)\n                    }\n                }\n            }).finally(()=>{\n                return Promise.reject(error)\n            })\n        }\n        return Promise.reject(error)\n    }\n)\n\nexport const setToken = async (token:string|null)=>{\n    _axios.defaults.headers['Authorization'] = `JWT ${token}`\n    if (token)\n        await AsyncStorage.setItem(\"Authorization\", token)\n    else\n        AsyncStorage.removeItem(\"Authorization\")\n}\nexport const getToken = async ()=>{\n    const token = await AsyncStorage.getItem(\"Authorization\")\n    _axios.defaults.headers['Authorization'] = token?`JWT ${token}`:null\n    return token\n}\n\nexport default _axios\n","import React, { createContext, useContext, useEffect, useReducer, useMemo, Dispatch, useState } from \"react\"\nimport { checkLogin, login, logout } from \"../services\"\nimport { getNotification, putNotification } from \"../services/notification\"\nimport { UserMembership } from \"../types\"\n\ntype AuthAction = {type:string, username?:string, password?:string, user?:UserMembership|null}\n\nexport type Auth = {user?:UserMembership|null, groupId?:number}\n\ntype AuthState ={user?:UserMembership|null, request?:{username:string, password:string}|null}\n\nconst AuthContext = createContext<{auth:Auth, error?:string, dispatch:Dispatch<AuthAction>}>({auth:{}, dispatch:()=>{}});\n\nconst authReducer =(initialState:AuthState, action:AuthAction)=>{\n  switch (action.type){\n      case 'LOGIN_REQUEST':\n        return {\n          ...initialState,\n          request:{username:action.username, password:action.password},\n        } as AuthState\n      case 'LOGIN_GUEST':\n        return {\n          ...initialState,\n          request:{username:'guest', password:'guest'},\n        } as AuthState\n      case 'LOGIN_SUCCESS':\n          return{\n              ...initialState,\n              user:action.user,\n              request:undefined\n          }\n      case 'LOGIN_FAILED':\n          return{\n              ...initialState,\n              request:undefined\n          }\n      case 'LOGOUT_REQUEST':\n          return{\n              ...initialState,\n              request:null\n          }\n      case 'LOGOUT_SUCCESS':\n          return {\n            ...initialState,\n            user:null,\n            request:undefined\n          }\n      case 'REFRESH':\n        return {\n          ...initialState,\n          user:undefined\n        }\n      default:\n          throw new Error( `Unhandled action type: ${action.type}`)\n  }\n}\n\n\nexport const AuthProvider = ({children}:{children:React.ReactNode})=>{\n  const [authState, dispatch] = useReducer(authReducer, {} as Auth)\n  const [error, setError] = useState<string>()\n  const auth = useMemo(()=>({\n    user:authState.user,\n    groupId: authState.user?.membership_set.find(g=>g.root_group_id==null)?.group\n  }), [authState])\n  useEffect(()=>{\n    if(authState.user===undefined){\n      checkLogin().then((user)=>{\n        dispatch({type:\"LOGIN_SUCCESS\", user})\n      }).catch((e)=>{\n        console.log(e)\n        dispatch({type:\"LOGOUT_SUCCESS\"})\n      })\n    }\n    else if(authState.user!==undefined && authState.request){\n      login(authState.request.username, authState.request.password).then(user=>{\n        dispatch({type:\"LOGIN_SUCCESS\", user})\n      }).catch((data)=>{\n        dispatch({type:\"LOGIN_FAILED\"})\n        setError(data.response?.data?.message)\n      })\n    }\n    else if(authState.user && authState.request===null){\n      getNotification(authState.user.id).then(noti=>{\n        noti && putNotification({...noti, token:''}).then(()=>{\n          logout().then(()=>dispatch({type:\"LOGOUT_SUCCESS\"}))\n        })\n      })\n    }\n  }, [authState])\n  return <AuthContext.Provider value={{auth, error, dispatch}}>\n    {children}\n  </AuthContext.Provider>\n}\n\nexport default ()=>{\n  const authContext = useContext(AuthContext)\n  return authContext\n}\n","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useTheme } from '@react-navigation/native';\nimport { useMemo, useEffect, useState } from 'react';\nimport { ColorSchemeName } from 'react-native';\nimport { Appearance, ColorSchemeName as UserColorSchemeName } from 'react-native-appearance';\n\n// The useColorScheme value is always either light or dark, but the built-in\n// type suggests that it can be null. This will not happen in practice, so this\n// makes it a bit easier to work with.\n\nexport function useInitColorScheme(){\n  const [complete, setComplete] = useState(false)\n  useEffect(()=>{\n    if (!complete){\n      AsyncStorage.getItem(\"color\").then(v=>{\n        Appearance.set({colorScheme:(v==null)?'no-preference':(v as any)})\n        setComplete(true)\n      })\n    }\n  }, [complete])\n  return complete\n}\n\nexport function setColorScheme(colorScheme:UserColorSchemeName){\n  AsyncStorage.setItem('color',colorScheme as string).then(()=>Appearance.set({colorScheme}))\n}\n\nexport default function useColorScheme(): NonNullable<ColorSchemeName> {\n  const { dark } = useTheme()\n  const colorScheme = useMemo(()=> dark?'dark':'light', [dark]) as NonNullable<ColorSchemeName>;\n  return colorScheme\n}\n","\n\n\n\nimport React, { Suspense } from \"react\";\n\nconst lazyIcon = <T extends keyof typeof import(\"@expo/vector-icons\"),>(key:T)=>{\n    const Icon = React.lazy(\n        () => import(\"@expo/vector-icons\").then(module => {\n            return { default: module[key] }\n        })\n    ) as typeof import(\"@expo/vector-icons\")[T]\n    return (props:React.ComponentProps<typeof Icon>)=>{\n        return <Suspense fallback={<></>}>\n            <Icon {...props}/>\n        </Suspense>\n    }\n}\n\nexport const AntDesign = lazyIcon('AntDesign');\nexport const Ionicons = lazyIcon('Ionicons');\nexport const FontAwesome = lazyIcon('FontAwesome');\nexport const MaterialIcons = lazyIcon('MaterialIcons');\nexport const FontAwesome5 = lazyIcon('FontAwesome5');\nexport const Entypo = lazyIcon('Entypo');\nexport const SimpleLineIcons = lazyIcon('SimpleLineIcons');\nexport const MaterialCommunityIcons = lazyIcon('MaterialCommunityIcons');","import { Platform } from 'react-native';\n//@ts-ignore\nimport useMobileDetect from 'use-mobile-detect-hook';\n\nexport default ()=>{\n    const detectMobile = useMobileDetect();\n    return (detectMobile.isMobile() || Platform.OS == 'android' || Platform.OS == 'ios') as boolean\n}","import React, { useEffect, useState } from 'react'\nimport { Dimensions, Platform, View } from 'react-native'\nimport useIsMobile from '../hooks/useIsMobile'\n\n\nexport default (props:{children:React.ReactNode})=>{\n    const isMobile = useIsMobile()\n    const [height, setHeight] = useState(window.innerHeight + 1)\n    useEffect(()=>{\n        if(isMobile && Platform.OS == 'web'){\n            const onChange = (e:any)=>{\n                setHeight(window.innerHeight + 1)\n            }\n            Dimensions.addEventListener(\"change\",onChange)\n            return () => Dimensions.removeEventListener(\"change\", onChange)\n            \n        }\n    },[ isMobile])\n    return <View style={{height:isMobile&&Platform.OS == 'web'?height:'100%'}}>\n        {props.children}\n    </View>\n\n}\n  ","import React, { Suspense } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport useCachedResources from './src/hooks/useCachedResources';\nimport { useInitColorScheme } from './src/hooks/useColorScheme';\nimport MobileSafeAreaView from './src/components/MobileSafeAreaView';\nimport { AuthProvider } from './src/hooks/useAuthContext';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { IntlProvider } from './src/hooks/useLangContext';\n\nconst queryClient = new QueryClient();\n\nexport default function App() {\n  const isLoadingComplete = useCachedResources();\n  const isAppearenceComplete = useInitColorScheme()\n  const isViewer = window.location !==undefined && window.location.pathname.endsWith('/viewer')\n  const Navigation = React.lazy(()=> import('./src/navigation'))\n  const ChatViewer = React.lazy(()=> import('./src/navigation/ChatViewer'))\n  if (!isLoadingComplete || !isAppearenceComplete) {\n    return null;\n  } else {\n    return (\n      <SafeAreaProvider>\n        <MobileSafeAreaView>\n          {!isViewer?<AuthProvider>\n            <QueryClientProvider client={queryClient}>\n              <IntlProvider>\n                {/* devtools */}\n                {/* <ReactQueryDevtools initialIsOpen={true} /> */}\n                <Suspense fallback={<></>}>\n                  <Navigation/>\n                </Suspense>\n                <StatusBar />\n              </IntlProvider>\n            </QueryClientProvider>\n          </AuthProvider>:\n          <QueryClientProvider client={queryClient}>\n            <IntlProvider>\n              <Suspense fallback={<></>}>\n                <ChatViewer/>\n              </Suspense>\n            </IntlProvider>\n          </QueryClientProvider>}\n        </MobileSafeAreaView>\n      </SafeAreaProvider>\n    );\n  }\n}\n\n(function(l) {  // for github-page\n    if (l !== undefined && l.search[1] === '/' ) {\n        var decoded = l.search.slice(1).split('&').map(function(s) { \n        return s.replace(/~and~/g, '&')\n        }).join('?');\n        window.history.replaceState(null, '',\n            l.pathname.slice(0, -1) + decoded + l.hash\n        );\n    }\n}(window.location))","import { Ionicons } from '../lib/@expo/vector-icons';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as React from 'react';\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...Ionicons.font,\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete;\n}\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","// @ts-ignore\nimport {API_URL, FCM_PUBLIC_VAPID_KEY as fcm1, FCM_API_KEY as fcm2, TURN_SERVER as turn1 } from \"@env\"\nexport const accountURL =  `${API_URL}/account/`\nexport const baseURL =  `${API_URL}/messenger/`\nconst [SCHEMA, DOMAIN] = `${API_URL}`.split('://')\nexport const websockerURL = `${SCHEMA=='https'?'wss':'ws'}://${DOMAIN}`\nexport const FCM_PUBLIC_VAPID_KEY = fcm1\nexport const FCM_API_KEY = fcm2\nexport const TURN_SERVER = turn1","\nimport { CreateUser, User, UserMembership } from '../types';\nimport axios, { getToken, setToken } from './axios';\nimport {accountURL as baseURL} from '../constants/Envs'\n\nexport const login = async(username:string, password:string) => {\n    if(username.endsWith('.guest') && password.length == 0)\n        password = 'guest'\n    const r = await axios.post(\"/api-token-auth/\", {username, password});\n    if(r.status == 200){\n        await setToken(r.data)\n        return await checkLogin()\n    }\n}\n\nexport const logout = async() => {\n    await setToken(null)\n    return await axios.get(\"/api-auth/logout/\")\n}\n\nexport const guestLogin =  async() => {\n    return await login('guest', 'guest')\n}\n\nconst checkLoginToken = async ()=>{\n    const value = (await axios.get(\"/api/v1/users/memberships/?_self=true\"))?.data\n    if (value && value.length){\n        return value[0] as UserMembership\n    }\n    return null\n}\n\nexport const checkLogin = async() => {\n    const token = await getToken()\n    if (token === null)\n        return null\n    try{\n       return await checkLoginToken()\n    }\n    catch(e:any){\n        let error = e\n        if(e.response !== undefined && e.response.status==401){\n            try{\n                return await checkLoginToken()\n            }\n            catch(e2){\n                error = e2\n            }\n        }\n        const isOffline = ((error as any).code == \"ERR_NETWORK\" || (error as any).message && ((error as any).message as string).startsWith(\"Cannot read\"))\n        throw {error, isOffline}\n    }\n}\n\nexport const getUserList = async (group_id:number)=>{\n    return (await axios.get(`/api/v1/users/?group_id=${group_id}`) ).data as User[]\n}\n\nexport const postUser = async (user:CreateUser)=>{\n    await axios.post(`/api/v1/user/`, {\n        imageUrl:user.imageUrl,\n        inviteGroupId: user.inviteGroupId,\n        isAdmin: user.is_staff,\n        isGuest: user.is_guest,\n        name: user.name,\n        password: user.password,\n        username: user.username\n    }, {baseURL})\n}\n\nexport const patchUser = async (user:{id:number, name:string, is_guest?:boolean, username?:string, password?:string})=>{\n    console.log(user)\n    await axios.patch(`/api/v1/user/`, {ids:[user.id], updated: {\n        name:user.name, \n        isGuest:user.is_guest,\n        username:user.username,\n        password:user.password,\n    }}, {baseURL})\n}\n\nexport const deleteUser = async (userId:number)=>{\n    await axios.delete(`/api/v1/user/${userId}/`, {baseURL})\n}\n\nexport const getUserMembershipList = async (group_id:number)=>{\n    return (await axios.get(`/api/v1/users/memberships/?group_id=${group_id}`) ).data as UserMembership[]\n}\n\nexport const getExternalMembershipList = async (username:string)=>{\n    return (await axios.get(`/api/v1/users/memberships/?username=${username}`) ).data as UserMembership[]\n}","import { Channel, MessengerMember, MessengerContent, EditMessage, MessengerChannel, EditMessengerContent } from '../types';\nimport axios from './axios';\n\nexport const getMessengerChannelList = async (user_id?:number)=>{\n    if(user_id==undefined)\n        return Promise.resolve(null)\n    return (await axios.get(`/api/v1/channels/messenger/?type=messenger&messenger_user_id=${user_id}`) ).data as MessengerChannel[]\n}\n\nexport const postChannel = async(channel:Channel)=>{\n    return (await axios.post(`/api/v1/channels/`, channel)).data as Channel\n}\n\nexport const postDirectChannel = async(channel:Channel)=>{\n    return (await axios.post(`/api/v1/channels/direct/`, channel)).data as Channel\n}\n\nexport const putChannel = async(channel:Channel)=>{\n    return (await axios.put(`/api/v1/channels/${channel.id}/`, channel)).data as Channel\n}\n\nexport const deleteChannel = async(channel_id:number)=>{\n    await axios.delete(`/api/v1/channels/${channel_id}/`)\n}\n\nexport const getMessengerMemberList = async(channel_id:number)=>{\n    try{\n        return (await axios.get(`/api/v1/messengermembers/?channel=${channel_id}`) ).data as MessengerMember[]\n    }\n    catch(e:any){\n        if (e.response.status==400 || e.response.status==403)\n            return Promise.resolve(null)\n        throw e\n    }\n}\n\nexport const postBulkMessengerMember = async(data:{channel_id:number, user_ids:number[]})=>{\n    await axios.post(`/api/v1/messengermembers/bulk/`, {channel:data.channel_id, user_ids:data.user_ids})\n}\n\nexport const deleteMessengerMember = async(member_id:number)=>{\n    await axios.delete(`/api/v1/messengermembers/${member_id}/`)\n}\n\nexport const getMessengerContentList = async (channel_id:number, id_lt?:number, isViewer?:boolean)=>{\n    const id_lt_param = id_lt?`&id_lt=${id_lt}`:''\n    const viewerPath = isViewer?'viewer/':''\n    return (await axios.get(`/api/v1/messengercontents/${viewerPath}?limit=30&channel=${channel_id}${id_lt_param}`)).data.results as MessengerContent[]\n}\n\nexport const getNewMessengerContentList = async (channel_id:number, updated_gte:string)=>{\n    return (await axios.get(`/api/v1/messengercontents/?channel=${channel_id}&with_archive=true&updated_gte=${updated_gte}`)).data as MessengerContent[]\n}\n\nexport const getTimerMessageContentList = async (channel_id:number, timer_gt:string)=>{\n    return (await axios.get(`/api/v1/messengercontents/?channel=${channel_id}&timer_gt=${timer_gt}`)).data as MessengerContent[]\n}\n\nexport const postMessage = async (message:EditMessage, callback?:(args:{channel:number, filename:string, progress:number})=>void)=>{\n    if (message.file){\n        const formData = new FormData(); // formData 객체를 생성한다.\n        formData.append(\"file\", message.file)\n        Object.entries(message).forEach(value=>{\n            formData.append(value[0], `${value[1]}`)\n        })\n        const filename = message.file.name\n        await axios.post(`/api/v1/messengercontents/messages/`, formData, {\n            headers:{\n                ...(axios.defaults.headers as any), \"Content-Type\": \"multipart/form-data\",\n            },\n            onUploadProgress:(p)=>{\n                callback?.({channel:message.channel, filename, progress:p.loaded/(p.total || 1)})\n            }\n        })\n    }\n    else{\n        await axios.post(`/api/v1/messengercontents/messages/`, message)\n    }\n}\n\nexport const patchMessengerContent = async (content:EditMessengerContent)=>{\n    return (await axios.patch(`/api/v1/messengercontents/${content.id}/`, content)).data as MessengerContent\n}\n","import React, { createContext, useContext, useState, useEffect } from \"react\";\nimport { IntlShape } from \"@formatjs/intl\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport intl, { translations } from \"../lang\";\n\nconst IntlContext = createContext<{locale?:string, setLocale:(locale:string|undefined)=>void}>({locale:'auto', setLocale:()=>{}});\n\nexport const IntlProvider = ({children}:{children:React.ReactNode})=>{\n  const [complete, setComplete] = useState(false)\n  const [locale, setLocale] = useState<string>()\n  useEffect(()=>{\n    AsyncStorage.getItem(\"locale\").then(v=>{\n      setLocale(v || 'auto')\n      setComplete(true)\n    })\n  }, [])\n  return complete?<IntlContext.Provider value={{locale, setLocale}}>\n      {children}\n    </IntlContext.Provider>:<></>\n}\n\n\n\ntype TranslationParams = Parameters<IntlShape<string>[\"formatMessage\"]>[1];\n\nexport default ()=>{\n  const { locale, setLocale } = useContext(IntlContext)\n  return {\n    lang:(key: string, params?: TranslationParams) => {\n      if (locale == 'en' || key.length==0)\n        return key\n      if (locale != undefined && locale !='auto')\n        return translations[locale as 'ko'][key]\n      return intl\n        .formatMessage({ id: key, defaultMessage: key }, params)\n        .toString()\n    },\n    locale,\n    setLocale: (locale:string)=>{AsyncStorage.setItem('locale', locale).then(()=>setLocale(locale))}\n  }\n}\n"],"sourceRoot":""}