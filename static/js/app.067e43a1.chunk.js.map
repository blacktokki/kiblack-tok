{"version":3,"sources":["src/screens/main/LoginScreen.tsx","src/components/CommonSection.tsx","src/hooks/lists/useMessengerContent.List.ts","src/hooks/lists/useMessengerMemberList.ts","src/screens/main/TabOneScreen.tsx","src/hooks/lists/useBoardContentList.ts","src/components/RowField.tsx","src/components/TextField.tsx","src/screens/BoardEditScreen.tsx","src/screens/ChannelEditScreen.tsx","src/screens/InviteScreen.tsx","src/screens/index.ts","src/screens/main/HomeScreen.tsx","src/screens/main/ChatScreen.tsx","src/screens/main/BoardScreen.tsx","src/screens/ProfileScreen.tsx","src/components/CommonItem.tsx","src/components/TextButton.tsx","src/hooks/useWebsocketContext.tsx","src/hooks/lists/useUserMembershipList.ts","src/hooks/useIsMobile.ts","src/tabs/MemberTab.tsx","src/hooks/useColorScheme.ts","src/navigation/DrawerNavigator.tsx","src/tabs/DrawerTab.tsx","src/tabs/MessengerTab.tsx","src/tabs/BoardTab.tsx","src/tabs/index.ts","src/lib/react-native-paper/Profile.tsx","src/components/Profile.tsx","src/components/Themed.tsx","src/navigation/LinkingConfiguration.ts","src/apis/axios.ts","src/navigation/index.tsx","src/screens/NotFoundScreen.tsx","src/apis/notification.ts","src/hooks/useFirebaseContext.tsx","src/components/MobileSafeAreaView.tsx","src/navigation/RootNavigator.tsx","App.tsx","src/hooks/useCachedResources.ts","src/hooks/useAuthContext.tsx","src/apis/account.ts","src/apis/messenger.ts","web/firebase-config.js","src/assets/fonts/SpaceMono-Regular.ttf","src/constants/Colors.ts","src/components/CommonButton.tsx","src/hooks/lists/useBoardChannelList.ts","src/components/HeaderRight.tsx","src/hooks/useResizeWindow.ts","src/hooks/lists/useMessengerChannelList.ts"],"names":["Styles","StyleSheet","create","login_container","flex","backgroundColor","login_header","alignItems","paddingTop","paddingBottom","login_header_logo","width","resizeMode","login_header_text","marginTop","color","fontSize","login_header_text_bold","fontWeight","login_wrapper","justifyContent","paddingVertical","borderTopRightRadius","borderTopLeftRadius","form","maxWidth","form_input","height","paddingHorizontal","marginBottom","borderRadius","button","button_label","login_social","login_social_separator","flexDirection","login_social_separator_line","login_social_separator_text","marginHorizontal","login_social_buttons","login_social_button","borderWidth","borderColor","login_social_icon","login_social_facebook","login_footer_text","guest_footer_text","alignSelf","margin","login_footer_link","CommonSection","props","style","styles","outerContainer","outerContainerStyle","container","containerStyle","withSeparator","separator","lightColor","darkColor","undefined","title","titleView","titleStyle","subtitle","bodyView","bodyStyle","children","marginVertical","textAlign","padding","Colors","useMessengerContentList","channel_id","queryClient","useQueryClient","useInfiniteQuery","a","async","pageParam","getMessengerContentList","then","current","select","data","pages","length","next","getNextPageParam","lastPage","id","refetchOnReconnect","refetchOnWindowFocus","fetchNextPage","lastJsonMessage","useWebsocketContext","useEffect","setQueryData","_data","pageParams","useMessengerMemberList","useQuery","getMessengerMemberList","useMessengerMemberMutation","invite","useMutation","postBulkMessengerMember","onSuccess","invalidateQueries","leave","deleteMessengerMember","mutate","Panel_Button_Text","Panel_Holder","useBoardContentList","getBoardContentList","useBoardContentMutation","postBoard","update","patchBoard","_delete","deleteBoardContent","delete","RowField","windowType","useResizeWindow","rowStyle","useMemo","View","Text","textStyle","name","TextField","useState","contentHeight","setContentHeight","minHeight","disabled","multiline","editable","value","onChangeText","setValue","onContentSizeChange","e","Math","max","nativeEvent","contentSize","field","InviteItem","selectedRef","has","item","selected","setSelected","renderMemberItem","add","main","HomeScreen","component","navigation","route","options","headerRight","HeaderRight","extra","onPress","navigate","type","useLayoutEffect","index","params","tab","setOptions","TextButton","paddingLeft","tabs","bottomTabs","tabBarPosition","parseInt","onTab","setParams","path","ChatScreen","useRef","auth","useAuthContext","channel","useMessengerChannelList","find","v","memberList","member_id","user","messengerMemberMutation","postValue","contentMutation","content","postMessage","deleteMessengerContent","d","variables","useMessengerContentMutation","back","renderItem","useCallback","nextPage","nextContent","map","index2","created","slice","date","isSystem","isFirst","isSelf","dayChanged","key","message_set","MaterialIcons","size","marginRight","linkDefault","wordBreak","linkStyle","canGoBack","goBack","contentContainerStyle","flexGrow","onScroll","contentOffset","y","onLayout","p","layout","position","top","onSubmitEditing","CommonButton","BoardScreen","useBoardChannelList","contentList","boardChannelMutation","useBoardChannelMutation","isMobile","useIsMobile","opacity","split","replace","board_set","link_set","link","linkIndex","Linking","openURL","url","Image","source","uri","image","maxHeight","description","FlatList","ListHeaderComponent","TabOneScreen","login","LoginScreen","username","setUsername","password","setPassword","dispatch","_login","TextInput","placeholder","text","autoCapitalize","keyboardType","secureTextEntry","TouchableOpacity","modal","BoardEditScreen","boardChannelList","boardContentList","boardContentMutation","board","setTitle","setContent","newBoard","screen","ChannelEditScreen","channelList","channelMutation","useMessengerChannelMutation","setName","setDescription","groupId","newChannel","owner","group","InviteScreen","userList","useUserMembershipList","Set","memberSet","filter","user_ids","ProfileScreen","Profile","CommonItem","React","setHover","press","setPress","onPressIn","onPressOut","onHoverIn","onHoverOut","borderBottomWidth","WebSocketContext","createContext","sendJsonMessage","SCHEMA","DOMAIN","WebSocketProviderInternal","token","useWebSocket","shouldReconnect","closeEvent","protocols","onOpen","console","log","Provider","WebSocketProvider","disable","setToken","AppState","currentState","appState","setAppState","AsyncStorage","getItem","onChange","nextState","addEventListener","removeEventListener","useContext","getUserMembershipList","useMobileDetect","Platform","OS","MemberIcon","useColorScheme","_useColorScheme","TabViewNavigator","setIndex","entries","Object","icons","assign","k","icon","renderTabBar","indicatorStyle","activeColor","inactiveColor","renderIcon","scene","onTabPress","findIndex","navigationState","routes","onIndexChange","renderScene","SceneMap","onAddList","colors","useTheme","tabBar","card","borderTopColor","border","pointerEvents","accessibilityRole","drawerTabs","elevation","borderRightWidth","label","DrawerTab","marginLeft","Messenger","Board","MessengerIcon","Ionicons","BoardIcon","FontAwesome5","OneTab","MemberTab","TwoTab","today","Date","toISOString","last_message","FontAwesome","member_count","unread_count","ThreeTab","header","join","toUpperCase","useThemeColor","colorName","theme","colorFromProps","otherProps","light","dark","values","forEach","ROOTPATH","prefixes","config","screens","Main","NotFound","defaultOption","baseURL","withCredentials","headers","_axios","axios","interceptors","request","use","error","Promise","reject","response","status","getToken","post","r","defaults","setItem","removeItem","navigationRef","Navigation","colorScheme","ref","documentTitle","formatter","linking","process","versions","LinkingConfiguration","DarkTheme","DefaultTheme","l","search","decoded","s","window","history","replaceState","pathname","hash","location","ignoreWarnings","_console","_","clone","warn","message","indexOf","NotFoundScreen","linkText","putNotification","notification","put","firebaseConfig","require","messagingSenderId","apiKeyEncrypted","i","charCodeAt","toString","padStart","app","firebase","initializeApp","apiKey","messaging","onMessage","payload","Notification","permission","JSON","parse","channel_name","body","alert","FirebaseContext","enable","setEnable","FirebaseProvider","tokenRef","setNotification","isMount","requestPermission","navigator","serviceWorker","register","serviceWorkerRegistration","scope","vapidKey","currentToken","requestToken","t","user_id","get","getNotification","noti","setNotificationInternal","n","postNotification","innerHeight","setHeight","onChangeOrientation","innerWidth","Dimensions","Root","createStackNavigator","QueryClient","RootNavigator","MobileSafeAreaView","client","Navigator","mode","headerMode","screenOptions","cardStyle","animationEnabled","cardStyleInterpolator","CardStyleInterpolators","forVerticalIOS","Screen","MainNavigator","headerShown","gestureDirection","DrawerNavigator","headerStyle","headerTitleStyle","headerLeft","canGOBackScreen","headerLeftContainerStyle","flexShrink","forHorizontalIOS","App","isLoadingComplete","setLoadingComplete","SplashScreen","Font","font","useCachedResources","StatusBar","AuthContext","authReducer","initialState","action","Error","AuthProvider","useReducer","authState","membership_set","g","root_group_id","checkLogin","catch","logout","endsWith","guestLogin","checkLoginToken","isOffline","code","startsWith","getUserList","group_id","getBoardChannelList","getMessengerChannelList","postChannel","putChannel","deleteChannel","patch","content_id","id_lt","id_lt_param","results","module","exports","background","tint","tabIconDefault","tabIconSelected","focus","DefaultButton","hover","selectable","_props","mutateAsync","defaultButtonProps","buttonProps","detectMobile","setWindow","sort","b"],"mappings":"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","file":"static/js/app.067e43a1.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport {\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n  StyleSheet,\n} from 'react-native';\nimport { StackScreenProps } from '@react-navigation/stack';\nimport useAuthContext from '../../hooks/useAuthContext';\n\nexport default function LoginScreen({\n  navigation\n}: StackScreenProps<any, 'Login'>) {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const {dispatch} = useAuthContext()\n  const _login = ()=>dispatch({type:'LOGIN_REQUEST', username, password})\n\n  return (\n    <View style={Styles.login_wrapper}>\n      <View style={Styles.form}>\n        <TextInput\n          style={Styles.form_input}\n          value={username}\n          placeholder={'Username'}\n          onChangeText={(text) => setUsername(text)}\n          autoCapitalize={'none'}\n          keyboardType={'email-address'}\n          onSubmitEditing={_login}\n        />\n        <TextInput\n          style={Styles.form_input}\n          value={password}\n          placeholder={'Password'}\n          secureTextEntry\n          onChangeText={(text) => setPassword(text)}\n          onSubmitEditing={_login}\n        />\n        <TouchableOpacity onPress={_login}>\n          <View style={Styles.button}>\n            <Text style={Styles.button_label}>{'Sign in'}</Text>\n          </View>\n        </TouchableOpacity>\n        <TouchableOpacity onPress={() => dispatch({type:\"LOGIN_GUEST\"})}>\n          <Text style={Styles.guest_footer_text}>\n            {\"Sign in as guest\"}\n          </Text>\n        </TouchableOpacity>\n      </View>\n      <View style={Styles.login_social}>\n        <View style={Styles.login_social_separator}>\n          <View style={Styles.login_social_separator_line} />\n          <Text style={Styles.login_social_separator_text}>{'text'}</Text>\n          <View style={Styles.login_social_separator_line} />\n        </View>\n        <View style={Styles.login_social_buttons}>\n        </View>\n      </View>\n      {/* <>\n        <TouchableOpacity onPress={() => navigate(\"RegistrationScreen\")}>\n          <Text style={Styles.login_footer_text}>\n            {\"Don't have an account? \"}\n            <Text style={Styles.login_footer_link}>{'Sign up'}</Text>\n          </Text>\n        </TouchableOpacity>\n      </> */}\n    </View>\n  );\n};\n\nconst Styles = StyleSheet.create({\n    login_container: {\n      flex: 1,\n      backgroundColor: '#FFF',\n    },\n    login_header: {\n      alignItems: 'center',\n      paddingTop: 30,\n      paddingBottom: 50,\n      backgroundColor: '#208AEC',\n    },\n    login_header_logo: {\n      width: 220,\n      resizeMode: 'contain',\n    },\n    login_header_text: {\n      marginTop: 15,\n      color: '#f0f0f0',\n      fontSize: 16,\n    },\n    login_header_text_bold: {\n      color: '#fff',\n      fontWeight: 'bold',\n    },\n    login_wrapper: {\n      flex: 1,\n      justifyContent: 'space-between',\n      paddingVertical: 40,\n      borderTopRightRadius: 12,\n      borderTopLeftRadius: 12,\n      marginTop: -10,\n      backgroundColor: '#fff',\n      alignItems: 'center',\n    },\n    form: {\n      width: '100%',\n      maxWidth: 280,\n    },\n    form_input: {\n      height: 44,\n      paddingHorizontal: 20,\n      marginBottom: 20,\n      backgroundColor: '#EDF0F7',\n      borderRadius: 50,\n    },\n    button: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: 44,\n      backgroundColor: '#0065A4',\n      borderRadius: 50,\n    },\n    button_label: {\n      color: '#fff',\n      fontSize: 16,\n    },\n    login_social: {\n      width: '100%',\n      maxWidth: 280,\n      marginTop: 20,\n    },\n    login_social_separator: {\n      flexDirection: 'row',\n      alignItems: 'center',\n    },\n    login_social_separator_line: {\n      flex: 1,\n      width: '100%',\n      height: 1,\n      backgroundColor: '#E0E0E0',\n    },\n    login_social_separator_text: {\n      marginHorizontal: 10,\n      color: '#808080',\n      fontSize: 16,\n    },\n    login_social_buttons: {\n      flexDirection: 'row',\n      justifyContent: 'center',\n      marginTop: 20,\n    },\n    login_social_button: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: 60,\n      height: 60,\n      marginHorizontal: 12,\n      borderWidth: 1,\n      borderColor: '#E7E7E7',\n      borderRadius: 60,\n    },\n    login_social_icon: {\n      width: 38,\n      height: 38,\n      resizeMode: 'contain',\n    },\n    login_social_facebook: {\n      backgroundColor: '#4267B2',\n      borderColor: '#4267B2',\n    },\n    login_footer_text: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      color: '#808080',\n      fontSize: 14,\n    },\n    guest_footer_text: {\n      flexDirection: 'row',\n      alignSelf: 'center',\n      color: '#808080',\n      fontSize: 15,\n      margin: 15\n    },\n    login_footer_link: {\n      color: '#208AEC',\n      fontSize: 15,\n      fontWeight: 'bold',\n    },\n  });\n  ","import * as React from 'react';\nimport { View, Text } from './Themed';\nimport { StyleSheet, StyleProp, ViewStyle, TextStyle } from 'react-native';\nimport Colors from '../constants/Colors';\n\nexport type SectionParamList = {\n    title?: string,\n    titleStyle?:StyleProp<TextStyle>\n    outerContainerStyle?:StyleProp<TextStyle>\n    containerStyle?:StyleProp<ViewStyle>\n    bodyStyle?:StyleProp<ViewStyle>\n    subtitle?: string\n    withSeparator?: boolean\n    children?: React.ReactNode\n}\n\nexport default function CommonSection(props:SectionParamList){\n  return (\n    <View style={[styles.outerContainer, props.outerContainerStyle]}>\n        <View style={[styles.container, props.containerStyle]}>\n            {props.withSeparator?<View style={styles.separator} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />:undefined}\n            {props.title?<View style={styles.titleView}>\n              <Text style={[styles.title, props.titleStyle]}>{props.title}</Text>\n              <Text style={styles.subtitle}>{props.subtitle}</Text>\n            </View>:undefined}\n            <View style={[styles.bodyView, props.bodyStyle]}>\n            {props.children}\n            </View>\n          </View>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n  outerContainer:{\n    width:'100%',\n    maxWidth:1080,\n    alignItems:'stretch',\n    backgroundColor:'transparent'\n  },  \n  container: {\n      marginHorizontal:20,\n      marginVertical: 10,\n      backgroundColor:'transparent',\n    },\n    titleView:{\n      width: '100%',\n      flexDirection:'row',\n      backgroundColor:'transparent',\n      marginBottom:5,\n    },\n    title: {\n      flex:1,\n      fontSize: 16,\n    },\n    subtitle: {\n      flex:1,\n      fontSize: 12,\n      textAlign: 'right',\n      marginTop:4\n    },\n    separator: {\n      marginBottom: 20,\n      height: 1,\n      width: '100%',\n    },\n    bodyView:{\n      width: '100%',\n      padding: 20,\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderWidth:1,\n      borderColor:Colors.borderColor,\n      borderRadius:6\n    }\n  });\n  ","import { useCallback, useEffect, useState } from \"react\"\nimport { InfiniteData, useInfiniteQuery, useMutation, useQueryClient } from \"react-query\"\nimport { getMessengerContentList, postMessage, deleteMessengerContent } from \"../../apis\"\nimport { MessengerContent } from \"../../types\"\nimport useWebsocketContext from \"../useWebsocketContext\"\n\nexport type MessengerContentPage = {\n  next?:MessengerContentPage\n  current:MessengerContent[]\n}\n\nexport default function useMessengerContentList(channel_id:number){  \n  const queryClient = useQueryClient()\n  const { data, fetchNextPage } = useInfiniteQuery<MessengerContentPage>(\n    [\"MessengerContentList\", channel_id], \n    async({pageParam})=>getMessengerContentList(channel_id, pageParam).then(current=>({current})), \n    {\n      select:data=>{\n        if(data.pages.length > 1)\n          data.pages[data.pages.length - 2].next = data.pages[data.pages.length - 1]\n        return data;\n      },\n      getNextPageParam:(lastPage)=>lastPage?.current.length?lastPage.current[lastPage.current.length - 1].id:undefined,\n      refetchOnReconnect:false,\n      refetchOnWindowFocus:false\n    }\n  )\n  const { lastJsonMessage } = useWebsocketContext()\n  useEffect(()=>{\n    if(lastJsonMessage !=null && lastJsonMessage['type']=='next_message' && lastJsonMessage['data']['channel'] == channel_id){\n      queryClient.setQueryData<InfiniteData<MessengerContentPage>>([\"MessengerContentList\", channel_id], (_data)=>{\n        if(_data?.pages[0].current && _data?.pages[0].current[0].id != lastJsonMessage['data'].id)\n          _data.pages[0].current = [lastJsonMessage['data'], ..._data?.pages[0].current]\n        return {...(_data || {pages:[], pageParams:[]})}\n      })\n    }\n  }, [lastJsonMessage])\n  return { data, fetchNextPage }\n}\n\nexport function useMessengerContentMutation(){\n  // const queryClient = useQueryClient()\n  const create = useMutation(postMessage, {\n    onSuccess: () => {\n      // queryClient.setQueryData(['MessengerContentList'], (data:any) => ({\n      //   pages: data.pages.slice(0, 1),\n      //   pageParams: data.pageParams.slice(0, 1),\n      // }))\n      // queryClient.invalidateQueries(\"MessengerContentList\")\n    }\n  });\n  const _delete = useMutation(deleteMessengerContent, {\n    onSuccess: (d, variables) => {\n      // queryClient.setQueryData(['MessengerContentList'], (data:any) => ({\n      //   pages: (data.pages as MessengerContent[][]).map(v=>v.filter(v2=>v2.id != variables)),\n      //   pageParams: data.pageParams,\n      // }))\n    }\n  })\n  return { create:create.mutate, delete:_delete.mutate }\n}","import { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport { postBulkMessengerMember, deleteMessengerMember, getMessengerMemberList } from \"../../apis\";\n\nexport default function useMessengerMemberList(channel_id:number){\n  const { data } = useQuery([\"MessengerMemberList\", channel_id] , async()=>await getMessengerMemberList(channel_id))\n  return data\n}\n\n\nexport function useMessengerMemberMutation(){\n  const queryClient = useQueryClient()\n  const invite = useMutation(postBulkMessengerMember, {\n    onSuccess: ()=>{\n      queryClient.invalidateQueries(\"MessengerMemberList\")\n    }\n  })\n\n  const leave = useMutation(deleteMessengerMember, {\n    onSuccess: () => {\n      queryClient.invalidateQueries(\"MessengerChannelList\")\n      queryClient.invalidateQueries(\"MessengerMemberList\")\n    }\n  })\n  return {invite:invite.mutate, leave:leave.mutate}\n}","import React, {useCallback, useRef} from 'react';\nimport { StackScreenProps } from '@react-navigation/stack';\nimport { StyleSheet, Text, Button, View} from 'react-native';\n\n\nexport default function TabOneScreen({\n  navigation\n}: StackScreenProps<any, 'TabOne'>) {\n  return <View style={{padding:10}}>\n    \n  </View>\n}\n\nconst styles = StyleSheet.create({\n  Panel_Button_Text: {\n    textAlign: 'center',\n    color: '#fff',\n    fontSize: 21\n  },\n  Panel_Holder: {\n    borderWidth: 1,\n    borderColor: '#888',\n    marginVertical: 5\n  }\n})","import { useMutation, useQuery, useQueryClient } from \"react-query\"\nimport { deleteBoardContent, getBoardContentList, patchBoard, postBoard } from \"../../apis\"\n\n\nexport default function useBoardContentList(channel_id:number){\n  const { data } = useQuery([\"BoardContentList\", channel_id] , async()=>await getBoardContentList(channel_id))\n  return data\n}\n\nexport function useBoardContentMutation(){\n  const queryClient = useQueryClient()\n  const create = useMutation(postBoard, {\n    onSuccess: () => queryClient.invalidateQueries(\"BoardContentList\")\n  });\n  const update = useMutation(patchBoard, {\n    onSuccess: () => queryClient.invalidateQueries(\"BoardContentList\")\n  })\n  const _delete = useMutation(deleteBoardContent, {\n    onSuccess: () => queryClient.invalidateQueries(\"BoardContentList\")\n  })\n  return { create:create.mutate, update:update.mutate, delete:_delete.mutate }\n}","import React, { useMemo } from 'react';\n\nimport { View, Text, TextProps, StyleProp } from 'react-native';\nimport useResizeWindow from '../hooks/useResizeWindow';\n\ntype Props = {\n  name: string,\n  width?:number,\n  children: React.ReactNode\n  textStyle?: StyleProp<TextProps>\n}\n\nexport default function RowField(props:Props) {\n  const windowType = useResizeWindow()\n  const rowStyle = useMemo(()=>windowType=='landscape'?\n    {flexDirection:'row', alignItems: 'center', justifyContent:'space-between'}:\n    {flexDirection:'column', alignItems:'flex-start'} as any\n  , [windowType])\n  return (\n    <View style={[{paddingVertical:5, width:'100%'}, rowStyle]}>\n        <Text style={[windowType=='landscape'?{flex:1}:{width:'100%'},{paddingHorizontal: 15, fontSize:16}, props.textStyle]}>{props.name}</Text>\n        <View style={[windowType=='landscape'?{flex:6}:{width:'100%'},{paddingHorizontal: 15}]}>\n          <View style={{width:props.width}}>\n            {props.children}\n          </View>\n        </View>\n    </View>\n  )\n}","import React, { useEffect, useState } from 'react';\n\nimport { View, Text, StyleProp, ViewStyle, TextStyle } from 'react-native';\n\nimport { TextInput } from 'react-native-gesture-handler';\nimport RowField from './RowField';\n\ntype Props = {\n  name: string,\n  value: any,\n  setValue?: (value:any)=>void\n  width?:any\n  disabled?:boolean\n  multiline?:boolean\n  minHeight?:number\n  textStyle?:StyleProp<TextStyle>\n  style?:StyleProp<ViewStyle>\n}\n\nexport default function TextField(props:Props) {\n  const [contentHeight, setContentHeight] = useState<number>()\n  const minHeight = props.minHeight || 30\n  return (\n    <RowField name={props.name} width={props.width} textStyle={props.textStyle}>\n      <TextInput style={[{\n          borderColor:'#d0d7de', \n          fontSize:16, \n          borderWidth:1, \n          borderRadius:6, \n          paddingHorizontal:10, \n          paddingVertical:3, \n          backgroundColor:props.disabled?'#EEE':undefined,\n          height:props.multiline?contentHeight:minHeight,\n        }, props.style]} editable={!props.disabled} value={props.value} onChangeText={props.setValue}\n        onContentSizeChange={props.multiline?(e) => setContentHeight(Math.max(e.nativeEvent.contentSize.height, minHeight) + 2):undefined} \n        multiline={props.multiline}\n      ></TextInput>\n   </RowField>\n  )\n}","import React, {useState, useEffect, useMemo} from 'react';\nimport { StackScreenProps } from '@react-navigation/stack';\nimport { StyleSheet } from 'react-native';\nimport CommonSection from '../components/CommonSection';\nimport { View, Text } from '../components/Themed';\nimport CommonButton from '../components/CommonButton';\nimport useBoardChannelList from '../hooks/lists/useBoardChannelList';\nimport useAuthContext from '../hooks/useAuthContext';\nimport { navigate } from '../navigation';\nimport useBoardContentList, { useBoardContentMutation } from '../hooks/lists/useBoardContentList';\nimport { Board } from '../types';\nimport TextField from '../components/TextField';\n\n\nexport default function BoardEditScreen({navigation, route}: StackScreenProps<any, 'BoardEdit'>) {\n  const id = route?.params?.id\n  const channel_id = route?.params?.channel_id\n  const {auth} = useAuthContext()\n  const boardChannelList = useBoardChannelList(auth)\n  const boardContentList = useBoardContentList(channel_id)\n  const boardContentMutation = useBoardContentMutation()\n  const channel = boardChannelList?.find(v=>v.id==channel_id)\n  const board = useMemo(()=>boardContentList?.find(v=>v.id==id)?.board_set[0], [boardContentList])\n  const [title, setTitle] = useState('')\n  const [content, setContent] = useState('')\n  const back = ()=>{\n    if(navigation.canGoBack())\n        navigation.goBack()\n      else{\n        navigation.replace('Main')\n      }\n  }\n  useEffect(()=>{\n    if (!(channel_id && channel) && boardChannelList)\n      back()\n  }, [boardChannelList])\n  useEffect(()=>{\n    if (board){\n      setTitle(board.title)\n      setContent(board.content)\n    }\n  }, [board])\n  return <CommonSection outerContainerStyle={{alignSelf:'center'}}>\n    <View style={{justifyContent:'space-around'}}>\n      <Text style={{fontSize:20}}>Edit Board</Text>\n    </View>\n    <View style={styles.separator} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />\n    <View style={{width:'100%'}}>\n      <TextField name='Channel' disabled={true} value={channel?.name || ''} width={'100%'}/>\n      <TextField name='Title' value={title} setValue={setTitle} width={'100%'}/>\n      <TextField name='Content' value={content} setValue={setContent} multiline width={'100%'} minHeight={300}/>\n    </View>\n    <View style={{width:'100%', flexDirection:'row', justifyContent:'flex-end'}}>\n      <CommonButton title={'save'} onPress={()=>{\n        const newBoard:Board = {id:board?.id, title, content};\n        id?boardContentMutation.update(newBoard):boardContentMutation.create({...newBoard, user:auth.user?.id, channel:channel_id})\n        navigate(\"Main\", {screen:\"BoardScreen\", params: {id:channel_id}})\n      }}/>\n      <CommonButton title={'cancel'} style={{marginHorizontal:5}} onPress={back}/>\n    </View>\n  </CommonSection>\n}\n\nconst styles = StyleSheet.create({\n  field:{\n    width:'50%',\n    flexDirection:'row',\n    padding:10,\n  },\n  separator: {\n    marginBottom: 20,\n    height: 1,\n    width: '100%',\n  },\n})","import React, {useState, useEffect } from 'react';\nimport { StackScreenProps } from '@react-navigation/stack';\nimport { StyleSheet } from 'react-native';\nimport CommonSection from '../components/CommonSection';\nimport { View, Text } from '../components/Themed';\nimport CommonButton from '../components/CommonButton';\nimport useBoardChannelList, { useBoardChannelMutation } from '../hooks/lists/useBoardChannelList';\nimport useAuthContext from '../hooks/useAuthContext';\nimport { navigate } from '../navigation';\nimport { Channel } from '../types';\nimport useMessengerChannelList, { useMessengerChannelMutation } from '../hooks/lists/useMessengerChannelList';\nimport TextField from '../components/TextField';\n\n\nexport default function ChannelEditScreen({navigation, route}: StackScreenProps<any, 'ChannelEdit'>) {\n  const id = route?.params?.id\n  const type = route?.params?.type\n  const {auth} = useAuthContext()\n  const channelList = type=='messenger'?useMessengerChannelList(auth):useBoardChannelList(auth)\n  const channelMutation = type=='messenger'?useMessengerChannelMutation():useBoardChannelMutation()\n  const channel = channelList?.find(v=>v.id==id)\n  const [name, setName] = useState('')\n  const [description, setDescription] = useState('')\n  const back = ()=>{\n    if(navigation.canGoBack())\n        navigation.goBack()\n      else{\n        navigation.replace('Main')\n      }\n  }\n  useEffect(()=>{\n    if (channel){\n      setName(channel.name)\n      setDescription(channel?.description || '')\n    }\n  }, [channel])\n  return <CommonSection outerContainerStyle={{alignSelf:'center'}}>\n    <View style={{justifyContent:'space-around'}}>\n    <Text style={{fontSize:20}}>Edit Channel - {type}</Text>\n    </View>\n    <View style={styles.separator} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />\n    <View style={{width:'100%'}}>\n      <TextField name='Channel Name' value={name} setValue={setName} width={'60%'}/>\n      <TextField name='Description' value={description} setValue={setDescription} multiline width={'60%'}/>\n    </View>\n    <View style={{width:'100%', flexDirection:'row', justifyContent:'flex-end'}}>\n      <CommonButton title={'save'} onPress={()=>{\n        if(auth?.user?.id && auth.groupId){\n          const newChannel:Channel = {id, name, description, type, owner:auth?.user?.id, group:auth.groupId};\n          (id?channelMutation.update(newChannel):channelMutation.create(newChannel)).then(v=>navigate(\"Main\", {\n            screen:v.type == 'messenger'?'MessengerScreen':'BoardScreen',\n            params:{id:v.id}\n          }))\n        }\n      }}/>\n      <CommonButton title={'cancel'} style={{marginHorizontal:5}} onPress={back}/>\n    </View>\n  </CommonSection>\n}\n\nconst styles = StyleSheet.create({\n  field:{\n    width:'50%',\n    flexDirection:'row',\n    padding:10,\n  },\n  separator: {\n    marginBottom: 20,\n    height: 1,\n    width: '100%',\n  },\n})","import React, {useRef,MutableRefObject, useMemo, useState } from 'react';\nimport { StackScreenProps } from '@react-navigation/stack';\nimport { View, Text } from '../components/Themed';\nimport CommonSection from '../components/CommonSection';\nimport useAuthContext from '../hooks/useAuthContext';\nimport useUserMembershipList from '../hooks/lists/useUserMembershipList';\nimport { UserMembership } from '../types';\nimport CommonButton from '../components/CommonButton';\nimport useMessengerMemberList, { useMessengerMemberMutation } from '../hooks/lists/useMessengerMemberList';\nimport { renderMemberItem } from '../tabs/MemberTab';\nimport { navigate } from '../navigation';\n\n\nconst InviteItem = (props:{item:UserMembership, selectedRef:MutableRefObject<Set<number>>})=>{\n  const [selected, setSelected] = useState(props.selectedRef.current.has(props.item.id))\n  return <View style={selected?{borderWidth:1, borderColor:'blue'}:{}}>\n    {renderMemberItem(props.item, (item)=>{\n      if (selected){\n        setSelected(false)\n        props.selectedRef.current.delete(item.id)\n      }\n      else{\n        setSelected(true)\n        props.selectedRef.current.add(item.id)\n      }\n    })}\n  </View>\n\n}\n\nexport default function InviteScreen({navigation, route}: StackScreenProps<any, 'Invite'>) {\n  const id = route?.params?.id\n  const {auth} = useAuthContext()\n  const userList = useUserMembershipList(auth)\n  const memberList = useMessengerMemberList(id)\n  const messengerMemberMutation = useMessengerMemberMutation()\n  const selectedRef = useRef<Set<number>>(new Set())\n  const data = useMemo(()=>{\n    const memberSet = new Set(memberList?.map(v=>v.user))\n    return userList?.filter(v=>!memberSet.has(v.id))\n  }, [userList, memberList])\n\n\n  const back = ()=>{\n    if(navigation.canGoBack())\n      navigation.goBack()\n    else if (id)\n      navigate(\"ChatScreen\", {id})\n    else\n      navigation.replace('Main')\n  }\n\n  return <CommonSection outerContainerStyle={{alignSelf:'center'}}>\n    {data?.map((item, index)=><InviteItem key={index} item={item} selectedRef={selectedRef}/>)}\n    <View style={[{width:'50%', flexDirection:'row', padding:10,}, {justifyContent:'flex-end'}]}>\n      <CommonButton title={'save'} onPress={()=>{\n        messengerMemberMutation.invite({\n          channel_id:id,\n          user_ids:[...selectedRef.current]\n        })\n        back()\n      }}/>\n      <CommonButton title={'cancel'} onPress={back}/>\n    </View>\n  </CommonSection>\n}\n\n","import LoginScreen from \"./main/LoginScreen\";\nimport ChatScreen from \"./main/ChatScreen\";\nimport HomeScreen from \"./main/HomeScreen\";\nimport TabOneScreen from \"./main/TabOneScreen\";\nimport BoardScreen from \"./main/BoardScreen\";\nimport BoardEditScreen from \"./BoardEditScreen\";\nimport ChannelEditScreen from \"./ChannelEditScreen\"\nimport { Screens } from \"../types\";\nimport InviteScreen from \"./InviteScreen\";\nimport ProfileScreen from \"./ProfileScreen\";\n\nexport const main = {\n    HomeScreen:{\n        title:'home',\n        component:HomeScreen,\n        path:'home',\n    },\n    ChatScreen:{\n        title:'chat',\n        component:ChatScreen,\n        path:'chat'\n    },\n    BoardScreen:{\n        title:'board',\n        component:BoardScreen,\n        path:'board'\n    },\n    TabOneScreen:{\n        title:'tab one',\n        component:TabOneScreen,\n        path:'one'\n    },\n} as Screens\n\nexport const login = {\n    LoginScreen:{\n        path: 'login',\n        title: '로그인',\n        component:LoginScreen\n    },\n} as Screens\n\nexport const modal = {\n    BoardEditScreen:{\n        title:'board',\n        component:BoardEditScreen,\n        path:'modal/board'\n    },\n    ChannelEditScreen:{\n        title:'channel',\n        component:ChannelEditScreen,\n        path:'modal/channel'\n    },\n    InviteScreen:{\n        title:'invite',\n        component:InviteScreen,\n        path:'modal/invite'\n    },\n    ProfileScreen:{\n        title:'profile',\n        component:ProfileScreen,\n        path:'modal/profile'\n    }\n} as Screens","import React, {useLayoutEffect} from 'react';\nimport { StackScreenProps } from '@react-navigation/stack';\nimport { StyleSheet, Text, Button, View} from 'react-native';\nimport { Text as StyledText } from 'react-native-paper';\nimport {TabViewNavigator} from '../../navigation/DrawerNavigator';\nimport useResizeWindow from '../../hooks/useResizeWindow';\nimport { bottomTabs } from '../../tabs';\nimport { navigate } from '../../navigation';\nimport HeaderRight from '../../components/HeaderRight';\nimport TextButton from '../../components/TextButton';\nimport Colors from '../../constants/Colors';\n\n// navigate(\"BoardEditScreen\", {channel_id:item.channel, id:item.id})\n// deleteBoardContent(item.id).then(()=>navigate('BoardScreen', {id:item.channel}))\n\nexport default function HomeScreen({navigation, route}: StackScreenProps<any, 'Home'>) {\n  const windowType = useResizeWindow();\n\n  const options = [\n    {title:'member', headerRight:()=><HeaderRight/>},\n    {title:'messenger', headerRight:()=><HeaderRight extra={[{title:'create', onPress:()=>navigate(\"ChannelEditScreen\", {type:\"messenger\"})}]}/>},\n    {title:'board', headerRight:()=><HeaderRight extra={[{title:'create', onPress:()=>navigate(\"ChannelEditScreen\", {type:\"board\"})}]}/>},\n    {title:'config', headerRight:()=><HeaderRight/>}\n  ]\n  \n  useLayoutEffect(() => {\n    const index = route?.params?.tab | 0\n    navigation.setOptions(windowType == 'portrait'?options[index]:{\n      title: 'home',\n      headerRight: ()=><HeaderRight/>\n    });\n  }, [navigation, route, windowType]);\n  return windowType == 'landscape'?\n    <View style={{flex:1, justifyContent:'center', alignItems:'center'}}>\n      <View style={{width:'80%', height:'80%'}}>\n        <StyledText style={{fontSize:32}}>Tokki Tok</StyledText>\n        <View style={{backgroundColor:Colors.borderColor, height:1, width:'100%'}}/>\n        <View style={{flex:1, alignItems:'flex-start'}}>\n          <Text style={{fontSize:20, color:'gray'}}>Welcome! This is a messenger & board for teams.</Text>\n          <Text style={{fontSize:24}}> </Text>\n          <Text style={{fontSize:24, fontWeight:'500'}}>Quick Start</Text>\n          <TextButton title='+ New Messenger' textStyle={{fontSize:20}} style={{paddingLeft:0, borderRadius:20}} onPress={()=>navigate(\"ChannelEditScreen\", {type:\"messenger\"})}/>\n          <TextButton title='+ New Board' textStyle={{fontSize:20}} style={{paddingLeft:0, borderRadius:20}} onPress={()=>navigate(\"ChannelEditScreen\", {type:\"board\"})}/>\n        </View>\n      </View>\n    </View>:\n    <TabViewNavigator tabs={bottomTabs} tabBarPosition=\"bottom\" index={parseInt(route.params?.['tab'] || 0)} onTab={(index)=>{navigation.setParams({tab:index})}}/>\n}\n\n","import React, {useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState} from 'react';\nimport { StackScreenProps } from '@react-navigation/stack';\nimport { StyleSheet, Text, View} from 'react-native';\nimport CommonSection from '../../components/CommonSection';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { FlatList, TextInput } from 'react-native-gesture-handler';\nimport CommonButton from '../../components/CommonButton';\nimport useMessengerContentList, { MessengerContentPage, useMessengerContentMutation } from '../../hooks/lists/useMessengerContent.List';\nimport useAuthContext from '../../hooks/useAuthContext';\nimport HeaderRight from '../../components/HeaderRight';\nimport useMessengerMemberList, { useMessengerMemberMutation } from '../../hooks/lists/useMessengerMemberList';\nimport { navigate } from '../../navigation';\nimport Colors from '../../constants/Colors';\nimport Hyperlink from 'react-native-hyperlink'\nimport useMessengerChannelList from '../../hooks/lists/useMessengerChannelList';\n\nconst marginBottom = 65\n\nexport default function ChatScreen({navigation, route}: StackScreenProps<any, 'Chat'>) {\n  const channel_id = route?.params?.id\n  const height = useRef(0)\n  const {auth} = useAuthContext()\n  const channel = useMessengerChannelList(auth)?.find(v=>v.id==parseInt(channel_id))\n  const {data, fetchNextPage } = useMessengerContentList(channel_id)\n  const memberList = useMessengerMemberList(channel_id)\n  const member_id = useMemo(()=>memberList?.find(v=>v.user == auth.user?.id)?.id, [auth, memberList])\n  const messengerMemberMutation = useMessengerMemberMutation()\n  const [value, setValue] = useState('')\n  const postValue = ()=>{\n    contentMutation.create({channel:channel_id, user:auth.user?.id, content:value})\n    setValue('')\n  }\n  const contentMutation = useMessengerContentMutation()\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      headerRight: ()=> <HeaderRight extra={[\n        {title:'invite', onPress:()=>{navigate(\"InviteScreen\", {id:channel_id})}},\n        {title:'leave', onPress:()=>{member_id && messengerMemberMutation.leave(member_id);back()}}\n      ]}/>,\n      title: channel?.name\n    });\n  }, [navigation, route, member_id]);\n\n  const renderItem = useCallback(({item, index}:{item:MessengerContentPage, index:number})=>{\n    let nextPage = item.next;\n    while(nextPage?.next && nextPage.current.length==0){\n      nextPage = nextPage.next\n    }\n    const nextContent = nextPage?.current[0]\n    return <View style={{flexDirection: 'column-reverse'}}>\n      \n      {item.current.map((content, index2)=>{\n        const next = index2 + 1 < item.current.length?item.current[index2+1]:nextContent\n        const created:string = content.created.slice(0, 16)\n        const date = created.slice(0, 10)\n        const isSystem = content.user == null\n        const isFirst = next==undefined || (content.user != next.user || created != next.created.slice(0, 16))\n        const isSelf = auth.user?.id == content.user\n        const dayChanged = next==undefined || date != next.created.slice(0, 10)\n        if (isSystem)\n          return <View key={content.id} style={{flexDirection:'row', justifyContent:'center', width:'100%'}}>\n            <Text>{content.message_set[0].content}</Text>\n          </View>\n        return <View key={content.id}>\n          {dayChanged?<View style={{flexDirection:'row', justifyContent:'center', width:'100%'}}><Text>{date}</Text></View>:undefined}\n          <View key={content.id} style={{flexDirection:'row', justifyContent:isSelf?'space-between':'flex-start', width:'100%'}}>\n            {isFirst && !isSelf?<MaterialIcons size={38} style={{marginBottom: -3, marginRight:10 }} name='account-circle'/>:<View style={{width:48}}/>}\n            <CommonSection outerContainerStyle={{width:undefined, maxWidth:'90%'}} title={isFirst?content.name:undefined} titleStyle={{flex:undefined}} bodyStyle={{padding:10}} subtitle={`${created.slice(11)}`}>\n              {/* @ts-ignore */}\n              <Hyperlink linkDefault={ true } style={{wordBreak:\"break-word\"}} linkStyle={{color: '#12b886'}}>\n                <Text>{content.message_set[0].content}</Text>\n              </Hyperlink>\n            </CommonSection>\n          </View>\n        </View>\n      })}\n    </View>\n  }, [navigation, contentMutation])\n  \n  const back = ()=>{\n    if(navigation.canGoBack())\n        navigation.goBack()\n      else{\n        navigation.navigate('HomeScreen', {tab:2})\n      }\n  }\n  useEffect(()=>{\n    if (!(channel_id))\n      back()\n  }, [])\n\n  return <View style={{flex:1, alignItems:'center'}}>\n    <FlatList\n        style={{width:'100%', flexDirection: 'column-reverse', marginBottom}}\n        contentContainerStyle={{padding:10, flexGrow:1, flexDirection: 'column-reverse'}}\n        data={data?.pages}\n        renderItem={renderItem}\n        onScroll={(e)=>{\n          if (e.nativeEvent.contentOffset.y + e.nativeEvent.contentSize.height - height.current < 1)\n            fetchNextPage()\n        }}\n        onLayout={(p)=>{height.current = p.nativeEvent.layout.height}}\n      />\n      <View style={{width:'100%'}}>\n        <View style={{position:'absolute', top:-marginBottom, width:'100%', backgroundColor:'white', alignItems:'center'}}>\n          <View style={{width:'100%',flexDirection:'row', paddingTop:15, paddingBottom:10, paddingHorizontal:19}}>\n            <TextInput value={value} onChangeText={setValue} style={{flex:1, borderWidth:1, height:40, borderRadius:6, borderColor:Colors.borderColor}} onSubmitEditing={postValue}/><CommonButton title={'write'} onPress={postValue}/>\n          </View>\n        </View>\n      </View>\n  </View>\n}\n// outerContainerStyle={{alignContent:'flex-end'}} containerStyle={{width:'50%'}}\n","import React, {useCallback, useEffect, useLayoutEffect} from 'react';\nimport {FlatList, Image, Linking } from 'react-native';\nimport { StackScreenProps } from '@react-navigation/stack';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport Hyperlink from 'react-native-hyperlink'\nimport useBoardContentList, { useBoardContentMutation } from '../../hooks/lists/useBoardContentList';\nimport CommonSection from '../../components/CommonSection';\nimport { View, Text } from '../../components/Themed';\nimport CommonButton from '../../components/CommonButton';\nimport { BoardContent } from '../../types';\nimport HeaderRight from '../../components/HeaderRight';\nimport useBoardChannelList, { useBoardChannelMutation } from '../../hooks/lists/useBoardChannelList';\nimport useAuthContext from '../../hooks/useAuthContext';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport useIsMobile from '../../hooks/useIsMobile';\n\n\n\n\nexport default function BoardScreen({navigation, route}: StackScreenProps<any, 'Board'>) {\n  const channel_id = route?.params?.id\n  const {auth} = useAuthContext()\n  const channel = useBoardChannelList(auth)?.find(v=>v.id==parseInt(channel_id))\n  const contentList = useBoardContentList(channel_id)\n  const boardChannelMutation = useBoardChannelMutation()\n  const contentMutation = useBoardContentMutation()\n  const isMobile = useIsMobile()\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      headerRight: ()=> <HeaderRight extra={[{title:'delete', onPress:()=>{boardChannelMutation.delete(channel_id);back()}}]}/>,\n      title: channel?.name\n    });\n  }, [navigation, route]);\n  \n  const renderItem = useCallback(({item}:{item:BoardContent})=><CommonSection bodyStyle={{alignItems:'flex-start', paddingHorizontal:'5%'}}>\n    <View style={{flexDirection:isMobile?'column': 'row', width:'100%', justifyContent:'space-between'}}>\n      <View style={{flexDirection:'row'}}>\n        <MaterialIcons size={38} style={{marginBottom: -3, marginRight:10 }} name='account-circle'/>\n        <View>\n          <Text style={{fontSize:16}}>{item.name}</Text>\n          <Text style={{fontSize:14, opacity: 0.4}}>{item.created.split('.')[0].replace('T', ' ')}</Text>\n        </View>\n      </View>\n      <View style={{flexDirection:'row', height:isMobile?'45%':'80%'}}>\n        <CommonButton title={'edit'} onPress={()=>navigation.navigate(\"BoardEditScreen\", {channel_id:item.channel, id:item.id})}/>\n        <CommonButton title={'delete'} style={{marginHorizontal:5}} onPress={()=> contentMutation.delete(item.id)}/>\n      </View>\n    </View>\n    <Text style={{fontSize:20}}>{item.board_set[0].title}</Text>\n    {/* @ts-ignore */}\n    <Hyperlink linkDefault={ true } style={{wordBreak:\"break-word\"}} linkStyle={{color: '#12b886'}}>\n      <Text style={{fontSize:14}}>{item.board_set[0].content}</Text>\n    </Hyperlink>\n    {item.link_set.map((link, linkIndex)=><CommonSection key={linkIndex} containerStyle={{marginHorizontal:0}} bodyStyle={{padding:0}}>\n      <TouchableOpacity onPress={()=>Linking.openURL(link.url)} style={{flexDirection:'row'}} containerStyle={{width:'100%'}}>\n          <Image source={{uri:link.image}} resizeMode=\"cover\" style={{ width:'100%', maxWidth:isMobile?120:150, maxHeight:isMobile?120:150, borderWidth:1}}/>\n          <View style={{flex:1, marginHorizontal:20}}>\n            <Text style={{fontSize:20}}>{link.title}</Text>\n            <Text style={{fontSize:14}}>{link.description}</Text>\n            <Text style={{fontSize:12}}>{link.url}</Text>\n          </View>\n        </TouchableOpacity>\n      </CommonSection>\n    )}\n  </CommonSection>\n  , [navigation, contentMutation, isMobile])\n  \n  const back = ()=>{\n    if(navigation.canGoBack())\n        navigation.goBack()\n      else{\n        navigation.navigate('HomeScreen', {tab:2})\n      }\n  }\n  useEffect(()=>{\n    if (!(channel_id))\n      back()\n  }, [])\n  return <View style={{flex:1, backgroundColor:'white'}}>\n      <FlatList\n        data={contentList}\n        renderItem={renderItem}\n        contentContainerStyle={{flexGrow:1}}\n        ListHeaderComponent={()=><CommonSection bodyStyle={{flexDirection:'row', justifyContent:'flex-end', paddingVertical:0, borderWidth:0}}>\n            <CommonButton title={'write'} style={{paddingHorizontal:32, paddingBottom:8}} onPress={()=>navigation.navigate(\"BoardEditScreen\", {channel_id})}/>\n        </CommonSection>}\n      />\n  </View>\n}\n// outerContainerStyle={{alignContent:'flex-end'}} containerStyle={{width:'50%'}}\n","import React, {useCallback, useEffect, useRef} from 'react';\nimport { StackScreenProps } from '@react-navigation/stack';\nimport { StyleSheet, Text, Button, View} from 'react-native';\nimport Profile from '../components/Profile';\nimport useAuthContext from '../hooks/useAuthContext';\nimport useUserMembershipList from '../hooks/lists/useUserMembershipList';\nimport { useMessengerChannelMutation } from '../hooks/lists/useMessengerChannelList';\nimport CommonButton from '../components/CommonButton';\nimport { Channel } from '../types';\nimport { navigate } from '../navigation';\n\n\nexport default function ProfileScreen({\n  navigation, route\n}: StackScreenProps<any, 'Profile'>) {\n  const id = route?.params?.id\n  const {auth} = useAuthContext()\n  const userList = useUserMembershipList(auth)\n  const user = userList?.find(v=>v.id==id)\n  const channelMutation = useMessengerChannelMutation()\n  const back = ()=>{\n    if(navigation.canGoBack())\n        navigation.goBack()\n      else{\n        navigation.replace('Main')\n      }\n  }\n  useEffect(()=>{\n    if (!(id && user) && userList)\n      back()\n  }, [userList])\n  return user?<View style={{padding:10}}>\n    \n    <Profile username={user?.username} name={user?.name} />\n    <CommonButton title={'create messenger'} onPress={()=>{\n      if(auth?.user?.id && auth.groupId){\n        const newChannel:Channel = {name:`${auth.user.name}, ${user.name}`, type:'messenger', owner:auth?.user?.id, group:auth.groupId};\n        channelMutation.create(newChannel).then(v=>navigate(\"Main\", {screen:\"MessengerScreen\", params: {id:v.id}}))\n      }\n    }}/>\n  </View>:<></>\n}\n","import * as React from 'react';\nimport { View } from './Themed';\nimport { StyleSheet, StyleProp, ViewStyle, TextStyle, Pressable } from 'react-native';\nimport Colors from '../constants/Colors';\n\nexport type ItemParamList = {\n    outerContainerStyle?:StyleProp<TextStyle>\n    containerStyle?:StyleProp<ViewStyle>\n    bodyStyle?:StyleProp<ViewStyle>\n    children?: React.ReactNode\n    onPress?: ()=>void\n}\n\nexport default function CommonItem(props:ItemParamList){\n  const [hover, setHover] = React.useState(false)\n  const [press, setPress] = React.useState(false)\n  return (\n    <Pressable\n      style={[styles.outerContainer ,props.outerContainerStyle, (press)?{backgroundColor:'rgb(242,242,242)'}:{}]}\n      onPressIn={()=>{setPress(true)}}\n      onPressOut={()=>{setPress(false);props.onPress?.()}}\n       //@ts-ignore\n       onHoverIn={()=>setHover(true)}\n       onHoverOut={()=>setHover(false)}\n    >\n        <View style={[styles.container ,props.containerStyle]}>\n            <View style={[styles.bodyView, props.bodyStyle]}>\n                <>{props.children}</>\n            </View>\n      </View>\n    </Pressable>\n    )\n}\n\nconst styles = StyleSheet.create({\n  outerContainer:{\n    width:'100%',\n    maxWidth:1080,\n    alignItems:'stretch',\n  },  \n  container: {\n      marginHorizontal:20,\n      backgroundColor:'transparent'\n    },\n    bodyView:{\n      width: '100%',\n      padding: 10,\n      minHeight: 40,\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderBottomWidth:1,\n      borderColor:Colors.borderColor,\n      backgroundColor:'transparent'\n    }\n  });\n  ","import React, { useState } from 'react';\nimport { StyleSheet} from 'react-native';\nimport { CustomButtonProps } from '../types';\nimport CommonButton from './CommonButton';\n\nexport default (props:CustomButtonProps)=>{\n    return <CommonButton {...props} style={[styles.style, props.style]}/>\n}\n\nconst styles = StyleSheet.create({\n    style:{\n        borderRadius:6, \n        backgroundColor: 'transparent',\n        borderWidth:0\n    },\n});\n","import React, { createContext, useContext, useEffect, useState } from \"react\"\nimport useWebSocket from \"react-use-websocket\"\nimport { SendJsonMessage } from \"react-use-websocket/dist/lib/types\"\n// @ts-ignore\nimport {API_URL} from \"@env\"\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { AppState, AppStateStatus } from \"react-native\";\n\nconst WebSocketContext = createContext<{lastJsonMessage:any, sendJsonMessage:SendJsonMessage }>({lastJsonMessage:null, sendJsonMessage:()=>{}});\nconst [SCHEMA, DOMAIN] = `${API_URL}`.split('://')\n\nconst WebSocketProviderInternal = ({token, children}:{token:string, children:React.ReactNode})=>{\n  const { lastJsonMessage, sendJsonMessage } = useWebSocket(`${SCHEMA=='https'?'wss':'ws'}://${DOMAIN}/messenger/ws/`,{\n    shouldReconnect: (closeEvent) => true,\n    protocols: ['Authorization', token],\n    onOpen: (e)=>{console.log('success websocket connection')}\n  })\n  return <WebSocketContext.Provider value={{lastJsonMessage, sendJsonMessage}}>\n  {children}\n</WebSocketContext.Provider>\n}\n\nexport const WebSocketProvider = ({disable, children}:{disable?:boolean, children:React.ReactNode})=>{\n  const [token, setToken] = useState<string|null>(null)\n  const [appState, setAppState] = useState<AppStateStatus>(AppState.currentState)\n  useEffect(()=>{\n    if(disable)\n      setToken(null)\n    else\n      AsyncStorage.getItem('Authorization').then(setToken)   \n  },[disable])\n  useEffect(()=>{\n    const onChange = (nextState:AppStateStatus)=>setAppState(nextState)\n    AppState.addEventListener(\"change\", onChange)\n    return ()=>AppState.removeEventListener(\"change\", onChange)\n  })\n\n  return (disable || token==null || appState!='active')?<>{children}</>:<WebSocketProviderInternal token={token}>\n    {children}\n  </WebSocketProviderInternal>\n}\n\nexport default ()=>{\n  const webSocketContext = useContext(WebSocketContext)\n  return webSocketContext\n}\n\n","import { useQuery } from \"react-query\";\nimport { getUserMembershipList } from \"../../apis\";\nimport { Auth } from \"../useAuthContext\";\n\nexport default function useUserMembershipList(auth?:Auth){\n  const { data } = useQuery([\"UserMembershipList\", auth?.groupId] , async()=>auth?.groupId?(await getUserMembershipList(auth?.groupId)):[])\n  return data\n}","import { Platform } from 'react-native';\n//@ts-ignore\nimport useMobileDetect from 'use-mobile-detect-hook';\n\nexport default ()=>{\n    const detectMobile = useMobileDetect();\n    return (detectMobile.isMobile() || Platform.OS == 'android' || Platform.OS == 'ios') as boolean\n}","import { MaterialCommunityIcons, MaterialIcons } from \"@expo/vector-icons\"\nimport React from \"react\"\nimport { Text, View } from \"react-native\"\nimport CommonItem from \"../components/CommonItem\"\nimport useAuthContext from \"../hooks/useAuthContext\"\nimport useUserMembershipList from \"../hooks/lists/useUserMembershipList\"\nimport { UserMembership } from \"../types\"\nimport { navigate } from \"../navigation\"\n\nexport const renderMemberItem = (item:UserMembership, onPress?:(item:UserMembership)=>void)=> (\n    <CommonItem key={item.id} bodyStyle={{flexDirection:'row', justifyContent:'flex-start'}} onPress={onPress?()=>onPress(item):undefined}>\n        <MaterialIcons size={38} style={{ marginBottom: -3, marginRight:10 }} name='account-circle'/>\n        <Text style={{fontSize:20, fontWeight:'400'}}>{item.name}</Text>\n    </CommonItem>\n)\n\nexport default ()=>{\n    const {auth} = useAuthContext()\n    const userList = useUserMembershipList(auth)\n    return <View style={{flex:1, backgroundColor:'white'}}>\n        {userList && userList.map(item=>renderMemberItem(item, (item)=>navigate(\"ProfileScreen\", {id:item.id})))}\n    </View>\n}\n\nexport const MemberIcon = <MaterialCommunityIcons size={32} style={{ marginBottom: -3 }} name='account'/>","import { ColorSchemeName, useColorScheme as _useColorScheme } from 'react-native';\n\n// The useColorScheme value is always either light or dark, but the built-in\n// type suggests that it can be null. This will not happen in practice, so this\n// makes it a bit easier to work with.\nexport default function useColorScheme(): NonNullable<ColorSchemeName> {\n  return _useColorScheme() as NonNullable<ColorSchemeName>;\n}\n","import { useTheme } from '@react-navigation/native';\nimport React, { useState } from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { TabView, SceneMap,NavigationState, SceneRendererProps, TabBar } from 'react-native-tab-view';\nimport { navigate } from '.';\nimport Profile from '../components/Profile';\nimport TextButton from '../components/TextButton';\nimport Colors from '../constants/Colors';\nimport useResizeWindow from '../hooks/useResizeWindow';\nimport { drawerTabs } from '../tabs';\nimport { UserMembership } from '../types';\n\nexport const TabViewNavigator = (props:{tabs:typeof drawerTabs, tabBarPosition:\"top\"|\"bottom\", index?:number, onTab?:(index:number)=>void})=>{\n  const [index, setIndex] = React.useState(props.index || 0);\n  const entries = Object.entries(props.tabs)\n  const onTab = props.onTab\n  const icons = Object.assign({}, ...entries.map(([k, v])=>({[k]:v.icon})))\n  return <TabView\n    renderTabBar={(props:SceneRendererProps & {navigationState: NavigationState<any>})=>{\n      return <TabBar\n        {...props}\n        indicatorStyle={{ backgroundColor: \"#2196F3\" }}\n        style={{ backgroundColor:'white' }}\n        activeColor={'black'}\n        inactiveColor={'black'}\n        renderIcon={(scene)=>icons[scene.route.key]}\n        onTabPress={(scene)=>onTab?.(entries.findIndex(([k, v])=>k == scene.route.key))}\n      />\n    }}\n    navigationState={{ index, routes: entries.map(([k, v])=>({key:k, title:v.title}))}}\n    onIndexChange={setIndex}\n    renderScene={SceneMap(Object.assign({}, ...entries.map(([k, v])=>({[k]:v.component}))))}\n    tabBarPosition={props.tabBarPosition}\n  />\n}\n\nconst onAddList = [\n  ()=>navigate(\"ChannelEditScreen\", {type:\"messenger\"}),\n  ()=>navigate(\"ChannelEditScreen\", {type:\"board\"})\n]\n\nexport default ({user}:{user:UserMembership})=> {\n  const { colors } = useTheme();\n  const windowType = useResizeWindow();\n  const [index, setIndex] = useState(0);\n  return windowType=='landscape'?<View\n      style={[\n        styles.tabBar,\n        {\n          backgroundColor: colors.card,\n          borderTopColor: colors.border,\n        },\n        // tabBarStyle,\n      ]}\n      pointerEvents={false ? 'none' : 'auto'}\n    >\n      <Profile username={user.username} name={user.name}/>\n      <View style={{flexDirection:'row-reverse'}}>\n          <TextButton title='+' textStyle={{fontSize:20}} style={{borderRadius:20}} onPress={onAddList[index]}/>\n      </View>\n      <View accessibilityRole=\"tablist\" style={styles.content}>\n        <TabViewNavigator tabs={drawerTabs} tabBarPosition={\"top\"} onTab={setIndex}/>\n      </View>\n    </View>:<View style={{width:0}}></View>\n}\n\n{/*<Text style={[styles.label, { color: d.isFocused ? colors.primary : '#222' }]}></Text> */}\n\nconst styles = StyleSheet.create({\n    tabBar: {\n      width:240,\n      elevation: 8,\n      borderRightWidth:1,\n      borderColor:Colors.borderColor\n    },\n    content: {\n      flex: 1,\n      flexDirection: 'row',\n    },\n    tab: {\n        flex: 1,\n        alignItems: 'center',\n    },\n    label: {\n        textAlign: 'center',\n        backgroundColor: 'transparent',\n      },\n  });","import React from \"react\"\nimport { View, Text } from \"react-native\"\nimport CommonItem from \"../components/CommonItem\"\nimport useBoardChannelList from \"../hooks/lists/useBoardChannelList\"\nimport useMessengerChannelList from \"../hooks/lists/useMessengerChannelList\"\nimport useAuthContext from \"../hooks/useAuthContext\"\nimport { navigate } from \"../navigation\"\n\nconst DrawerTab = (props:{data:{name:string, onPress?:()=>void}[]})=><View style={{flex:1, backgroundColor:'white'}}>\n    {props.data.map((item, index)=><CommonItem key={index} containerStyle={{marginHorizontal:0}} bodyStyle={{alignItems:'flex-start'}} onPress={item.onPress}>\n        <Text style={{marginLeft:20}}>{item.name}</Text>\n    </CommonItem>\n    )}\n</View>\n\nexport default {\n    Messenger:()=>{\n        const {auth} = useAuthContext()\n        const channelList = useMessengerChannelList(auth);\n        return <DrawerTab data={(channelList || []).map(item=>({...item, onPress:()=>navigate(\"ChatScreen\", {id:item.id})}))}/>\n    },\n    Board:()=>{\n        const {auth} = useAuthContext()\n        const channelList = useBoardChannelList(auth);\n        return <DrawerTab data={(channelList || []).map(item=>({...item, onPress:()=>navigate(\"BoardScreen\", {id:item.id})}))}/>\n    },\n}","import { Ionicons, FontAwesome } from \"@expo/vector-icons\"\nimport React from \"react\"\nimport { Text, View } from \"react-native\"\nimport CommonItem from \"../components/CommonItem\"\nimport useAuthContext from \"../hooks/useAuthContext\"\nimport useMessengerChannelList from \"../hooks/lists/useMessengerChannelList\"\nimport { navigate } from \"../navigation\"\n\nexport default ()=>{\n    const {auth} = useAuthContext()\n    const channelList = useMessengerChannelList(auth)\n    const today = (new Date()).toISOString().slice(0, 10)\n    return <View style={{flex:1, backgroundColor:'white'}}>\n        {channelList?.map((item, index)=>{\n            const date = item.last_message?.created.slice(0,10)\n            return <CommonItem key={index} bodyStyle={{flexDirection:'row', justifyContent:'space-between'}} onPress={()=>navigate(\"ChatScreen\", {id:item.id})}>\n                <View style={{flexDirection:'row'}}>\n                    <FontAwesome size={36} style={{ marginBottom: -3, marginRight:20 }} name='users'/>\n                    <View>\n                        <View style={{flexDirection:'row'}}>\n                            <Text style={{fontSize:18}}>{item.name}</Text>\n                            <Text style={{fontSize:18, opacity: 0.4, paddingLeft:5}}>{item.member_count}</Text>\n                        </View>\n                        <Text style={{fontSize:16, opacity: 0.4}}>{item.last_message?.content}</Text>\n                    </View>\n                </View>\n                <View>\n                    <Text style={{fontSize:14, opacity: 0.4, textAlign:'right'}}>{date==today?item.last_message?.created.slice(11,16):date}</Text>\n                    <Text style={{fontSize:14, textAlign:'right'}}>{item.unread_count?item.unread_count:' '}</Text>\n                </View>\n            </CommonItem>\n        })}\n    </View>\n}\n\nexport const MessengerIcon = <Ionicons size={30} style={{ marginBottom: -3 }} name='chatbox'/>","import { FontAwesome, FontAwesome5 } from \"@expo/vector-icons\"\nimport React from \"react\"\nimport { Text, View } from \"react-native\"\nimport CommonItem from \"../components/CommonItem\"\nimport useBoardChannelList from \"../hooks/lists/useBoardChannelList\"\nimport useAuthContext from \"../hooks/useAuthContext\"\nimport { navigate } from \"../navigation\"\n\nexport default ()=>{\n    const {auth} = useAuthContext()\n    const channelList = useBoardChannelList(auth)\n    return <View style={{flex:1, backgroundColor:'white'}}>\n        {channelList?.map(item=><CommonItem key={item.id} bodyStyle={{flexDirection:'row', justifyContent:'flex-start'}} onPress={()=>navigate(\"BoardScreen\", {id:item.id})}>\n            <FontAwesome size={32} style={{ marginBottom: -3, marginRight:10 }} name='bars'/>\n            <Text style={{fontSize:20, fontWeight:'400'}}>{item.name}</Text>\n        </CommonItem>)}\n    </View>\n}\n\nexport const BoardIcon = <FontAwesome5 size={30} style={{ marginBottom: 3 }} name='clipboard-list'/>","import React from \"react\";\nimport MemberTab, {MemberIcon} from \"./MemberTab\";\nimport OneTab, {ConfigIcon} from \"./OneTab\";\nimport DrawerTab  from './DrawerTab';\nimport MessengerTab, {MessengerIcon} from \"./MessengerTab\";\nimport BoardTab, {BoardIcon}  from \"./BoardTab\";\n\nexport const bottomTabs = {\n    OneTab:{\n        title:'member',\n        component:MemberTab,\n        icon:MemberIcon,\n    },\n    TwoTab:{\n        title:'messenger',\n        component:MessengerTab,\n        icon:MessengerIcon\n    },\n    ThreeTab:{\n        title:'board',\n        component:BoardTab,\n        icon:BoardIcon\n    },\n    // FourTab:{\n    //     title:'config',\n    //     component:OneTab,\n    //     icon:ConfigIcon\n    // }\n} as Record<string, {title:string, component:React.ComponentType<any>, icon:JSX.Element}>\n\nexport const drawerTabs = {\n    TwoTab:{\n        title:'messenger',\n        component:DrawerTab.Messenger,\n        icon:MessengerIcon\n    },\n    ThreeTab:{\n        title:'board',\n        component:DrawerTab.Board,\n        icon:BoardIcon\n    }\n} as Record<string, {title:string, component:React.ComponentType<any>, icon:JSX.Element}>","import * as React from 'react';\nimport {View, Text} from 'react-native';\nimport { Avatar } from 'react-native-paper';\nimport Colors from '../../constants/Colors';\nimport { ProfileProps } from '../../types';\n\nexport default (props:ProfileProps) => (\n    <View style={{width:'100%', height:135, justifyContent:'space-evenly', alignItems:'center'}}>\n        <Avatar.Text style={{backgroundColor:Colors.header}} size={75} label={props.name.split(' ').map(v=>v[0]).join().toUpperCase()} />\n        <Text style={{fontWeight:'bold', fontSize:15}}>{props.name}</Text>\n        <Text style={{fontWeight:'normal', fontSize:14}}>{props.username}</Text>\n    </View>\n);","import React from 'react';\nimport {View} from 'react-native'\nimport Profile from '../lib/react-native-paper/Profile';\nimport { ProfileProps } from '../types';\n\nexport default (props:ProfileProps)=>{\n    return <View style={{width:'100%', height:135}}>\n        <Profile {...props}/>\n    </View>\n}\n\n","/**\n * Learn more about Light and Dark modes:\n * https://docs.expo.io/guides/color-schemes/\n */\n\nimport * as React from 'react';\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\n\nimport Colors from '../constants/Colors'\nimport useColorScheme from '../hooks/useColorScheme';\n\nexport function useThemeColor(\n  props: { light?: string; dark?: string },\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\n) {\n  const theme = useColorScheme();\n  const colorFromProps = props[theme];\n\n  if (colorFromProps) {\n    return colorFromProps;\n  } else {\n    return Colors[theme][colorName];\n  }\n}\n\ntype ThemeProps = {\n  lightColor?: string;\n  darkColor?: string;\n};\n\nexport type TextProps = ThemeProps & DefaultText['props'];\nexport type ViewProps = ThemeProps & DefaultView['props'];\n\nexport function Text(props: TextProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\n\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\n}\n\nexport function View(props: ViewProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\n\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\n}\n","/**\n * Learn more about deep linking with React Navigation\n * https://reactnavigation.org/docs/deep-linking\n * https://reactnavigation.org/docs/configuring-links\n */\n\nimport { LinkingOptions } from '@react-navigation/native';\nimport * as Linking from 'expo-linking';\nimport {main, login, modal} from '../screens';\n\nconst ROOTPATH = 'tokki-tok'  // github repository name\n\nObject.values(modal).forEach(v=>v.path = ROOTPATH + '/' + v.path)\n\nexport default  {\n  prefixes: [Linking.makeUrl('/')],\n  config: {\n    screens: {\n      Main: {\n        screens:{\n          ...main,\n          ...login,\n          NotFound: '*',\n        },\n        path: ROOTPATH\n      },\n      ...modal\n    },\n  },\n} as LinkingOptions;\n","import axios, { AxiosRequestConfig } from 'axios';\n// @ts-ignore\nimport {API_URL} from \"@env\"\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nconst baseURL =  `${API_URL}/messenger/`\nconst defaultOption:AxiosRequestConfig = {\n    baseURL,\n    withCredentials: true,\n    headers: {}\n};\nconst _axios = axios.create(defaultOption);\n\n_axios.interceptors.request.use(\n    config => {\n        return config;\n    },\n    error => {\n        return Promise.reject(error);\n    }\n)\n\n_axios.interceptors.response.use(\n    response => {\n        // if((response.request.responseURL as string).indexOf('/task/login')>=0 && response.data.length != 0){\n        //     // redirect login\n        // }\n        return response;\n    },\n    error => {\n        if (error.response.status === 401) {\n            getToken().then(async(token)=>{\n                const r = await _axios.post(\"/api-token-refresh/\", {token}, {headers:{'Authorization':''}})\n                if (r.status == 200 && r.data !== ''){\n                    setToken(r.data)\n                }\n            })\n        }\n        return Promise.reject(error)\n    }\n)\n\nexport const setToken = async (token:string|null)=>{\n    _axios.defaults.headers['Authorization'] = `JWT ${token}`\n    if (token)\n        await AsyncStorage.setItem(\"Authorization\", token)\n    else\n        AsyncStorage.removeItem(\"Authorization\")\n}\nexport const getToken = async ()=>{\n    const token = await AsyncStorage.getItem(\"Authorization\")\n    _axios.defaults.headers['Authorization'] = `JWT ${token}`\n    return token\n}\n\nexport default _axios\n","/**\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\n * https://reactnavigation.org/docs/getting-started\n *\n */\nimport _ from 'lodash';\nimport { NavigationContainer, DefaultTheme, DarkTheme, NavigationContainerRef } from '@react-navigation/native';\nimport * as React from 'react';\nimport { ColorSchemeName } from 'react-native';\n\nimport LinkingConfiguration from './LinkingConfiguration';\nimport RootNavigator from './RootNavigator';\n\nconst navigationRef = React.createRef<NavigationContainerRef>();\n\nexport function navigate(name:string, params?:any) {\n  if (params)\n    navigationRef.current?.navigate(name, params);\n  navigationRef.current?.navigate(name);\n}\n\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\n  return (\n    <NavigationContainer\n      ref={navigationRef}\n      documentTitle={{formatter: (options, route) => {return `TOKKI TOK`}}}\n      linking={(process.versions && process.versions['electron'])?undefined:LinkingConfiguration}\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n\n(function(l) {  // for github-page\n    if (l !== undefined && l.search[1] === '/' ) {\n        var decoded = l.search.slice(1).split('&').map(function(s) { \n        return s.replace(/~and~/g, '&')\n        }).join('?');\n        window.history.replaceState(null, '',\n            l.pathname.slice(0, -1) + decoded + l.hash\n        );\n    }\n}(window.location))\n    \nconst ignoreWarnings = ['ReactNativeFiberHostComponent'];\nconst _console = _.clone(console);\nconsole.warn = (message: string|Object) => {\n    var warn = true;\n    if (message instanceof Object)\n    warn = false;\n    else{\n    ignoreWarnings.forEach((value)=>{\n        if (message.indexOf && message.indexOf(value) <= -1) {\n            warn = false;\n        }\n    })\n    };\n    if (warn){\n        _console.warn(message);\n    }\n    else{\n        // console.log(message)\n    }\n};\n","import { StackScreenProps } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\n\nexport default function NotFoundScreen({\n  navigation,\n}: StackScreenProps<any, 'NotFound'>) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>This screen doesn't exist.</Text>\n      <TouchableOpacity onPress={() => navigation.replace('HomeScreen')} style={styles.link}>\n        <Text style={styles.linkText}>Go to home screen!</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  link: {\n    marginTop: 15,\n    paddingVertical: 15,\n  },\n  linkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n});\n","import { Notification } from '../types';\nimport axios from './axios';\n\nexport const getNotification = async (user_id:number)=>{\n    const data = (await axios.get(`/api/v1/notifications/?type=WEB&user=${user_id}`) ).data as Notification[]\n    return data.length?data[0]:undefined\n}\n\nexport const postNotification = async(notification:Notification)=>{\n    return (await axios.post(`/api/v1/notifications/`, notification)).data as Notification\n}\n\nexport const putNotification = async(notification:Notification)=>{\n    return (await axios.put(`/api/v1/notifications/${notification.id}/`, notification)).data as Notification\n}","import React, { createContext, useContext, useEffect, useMemo, useRef, useState } from \"react\"\nimport firebase from \"firebase/app\";\nimport \"firebase/messaging\";\n//@ts-ignore\nimport {FCM_PUBLIC_VAPID_KEY, FCM_API_KEY} from \"@env\"\nimport { Notification as NotificationType, UserMembership } from \"../types\";\nimport { getNotification, postNotification, putNotification } from \"../apis/notification\";\nconst firebaseConfig = require(\"../../web/firebase-config.js\")\n// Initialize Firebase\nconst key = firebaseConfig.messagingSenderId\nconst apiKeyEncrypted = (FCM_API_KEY as string).split('').map((v, i)=> (v.charCodeAt(0) ^ key.charCodeAt(i)).toString(16).padStart(2, '0')).join('')\nconst app = firebase.initializeApp({...firebaseConfig, apiKey:FCM_API_KEY});\n// const analytics = getAnalytics(app);\nconst messaging = firebase.messaging(app);\n\nmessaging.onMessage((payload) => {\n  if (!(\"Notification\" in window)) {\n    alert(\"This browser does not support desktop notification\");\n  }\n  else if (Notification.permission === \"granted\") {\n    const message_set = JSON.parse(payload.data['message_set'])[0]\n    new Notification(payload.data.channel_name, { body: `${payload.data.name}: ${message_set.content}` });\n  }\n});\n\nconst FirebaseContext = createContext<{enable:boolean, setEnable:(enable:boolean)=>void}>({enable:false, setEnable:()=>{}});\n\nconst requestToken = async()=>{\n  const permission = await Notification.requestPermission();\n  if (permission === 'granted') {\n    const serviceWorkerRegistration = await navigator.serviceWorker.register(`${process.env.PUBLIC_URL}/firebase-messaging-sw.js?${apiKeyEncrypted}`)\n    console.log('[SW]: SCOPE: ', serviceWorkerRegistration.scope);\n    const currentToken = await messaging.getToken({serviceWorkerRegistration, vapidKey: FCM_PUBLIC_VAPID_KEY })\n    if (currentToken)\n      return currentToken\n  }\n  return undefined\n}\n\nexport const FirebaseProvider = ({children, user}:{user?:UserMembership|null, children:React.ReactNode})=>{\n  const tokenRef = useRef<string>()\n  const [notification, setNotification] = useState<NotificationType>()\n  const enable = useMemo(()=>!(notification?.token), [notification])\n  const setEnable = (enable:boolean)=>{\n    if(user && notification){\n      putNotification({...notification, token:enable||tokenRef.current==undefined?null:tokenRef.current}).then((noti)=>{\n        setNotification(noti)\n      })\n    }\n  }\n  \n  useEffect(()=>{\n    let isMount = true;\n    if(user){\n      requestToken().then((t)=>{\n        tokenRef.current = t\n        getNotification(user.id).then(noti=>{\n          const setNotificationInternal = (n:NotificationType)=>{\n            if (isMount)setNotification(n)\n          }\n          const token = t==undefined?null:t\n          if (noti == undefined)\n            postNotification({user:user.id, type:'WEB', token}).then(setNotificationInternal)\n          else\n            putNotification({...noti, token}).then(setNotificationInternal)\n        })\n      })\n    }\n    return ()=>{isMount=false}\n  },[])\n  return !user?<>{children}</>:<FirebaseContext.Provider value={{enable, setEnable}}>\n    {children}\n  </FirebaseContext.Provider>\n}\n\nexport default ()=>{\n  const firebaseContext = useContext(FirebaseContext)\n  return firebaseContext\n}\n","import React, { useEffect, useState } from 'react'\nimport { Dimensions, Platform, View } from 'react-native'\nimport useIsMobile from '../hooks/useIsMobile'\n\ntype ViewProps = {windowType:'landscape'|'portrait', children:React.ReactNode}\n\nexport default (props:ViewProps)=>{\n    const isMobile = useIsMobile()\n    const [height, setHeight] = useState(window.innerHeight + 1)\n    useEffect(()=>{\n        if(isMobile && Platform.OS == 'web'){\n            const onChange = (e:any)=>{\n                setHeight(window.innerHeight + 1)\n            }\n            const onChangeOrientation = (e:any)=>{\n                setHeight(window.innerWidth + 1)\n            }\n            window.addEventListener(\"touchmove\", onChange)\n            Dimensions.addEventListener(\"change\",onChangeOrientation)\n            // if (screen?.orientation)\n            //     screen.orientation.addEventListener(\"change\",onChangeOrientation)\n            // else\n            //     window.addEventListener(\"orientationchange\", onChangeOrientation)\n            return () => {\n                window.removeEventListener(\"touchmove\", onChange)\n                Dimensions.removeEventListener(\"change\", onChangeOrientation)\n                // if (screen?.orientation)\n                //     screen.orientation.removeEventListener(\"change\",onChangeOrientation)\n                // else\n                //     window.removeEventListener(\"orientationchange\", onChangeOrientation)\n            }\n        }\n    },[ isMobile])\n    return <View style={{height:isMobile&&Platform.OS == 'web'?height:'100%'}}>\n        {props.children}\n    </View>\n\n}\n  ","import { CardStyleInterpolators, createStackNavigator } from '@react-navigation/stack';\nimport React, {useMemo} from 'react';\nimport { View } from 'react-native';\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { Ionicons } from '@expo/vector-icons';\nimport useResizeWindow from '../hooks/useResizeWindow';\nimport NotFoundScreen from '../screens/NotFoundScreen';\nimport {main, login, modal} from '../screens';\nimport DrawerNavigator from './DrawerNavigator';\nimport useAuthContext, {AuthProvider} from '../hooks/useAuthContext';\nimport { WebSocketProvider } from '../hooks/useWebsocketContext';\nimport HeaderRight from '../components/HeaderRight'\nimport Colors from '../constants/Colors';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { FirebaseProvider } from '../hooks/useFirebaseContext';\nimport useIsMobile from '../hooks/useIsMobile';\nimport MobileSafeAreaView from '../components/MobileSafeAreaView';\n\nconst Root = createStackNavigator();\n\nconst queryClient = new QueryClient();\n\nexport default function RootNavigator() {\n    const windowType = useResizeWindow();\n    return (\n        <MobileSafeAreaView windowType={windowType}>\n            <AuthProvider>\n                <QueryClientProvider client={queryClient}>\n                    {/* devtools */}\n                    {/* <ReactQueryDevtools initialIsOpen={true} /> */}\n                        <Root.Navigator\n                            mode= 'modal'\n                            headerMode= 'screen'\n                            screenOptions={{\n                                cardStyle:{backgroundColor:\"white\"},\n                                animationEnabled: true,\n                                cardStyleInterpolator: CardStyleInterpolators.forVerticalIOS,\n                            }}\n                        >\n                            <Root.Screen name=\"Main\" component={MainNavigator} options={{headerShown:false}}/>\n                            {Object.entries(modal).map(([key, screen])=><Root.Screen key={key} name={key} component={screen.component} options={{\n                                title: screen.title,\n                                gestureDirection: windowType == 'landscape'?'vertical-inverted':'vertical'\n                            }} />)}\n                        </Root.Navigator>\n                </QueryClientProvider>\n            </AuthProvider>\n        </MobileSafeAreaView>\n    );\n}\n\nconst Main = createStackNavigator();\n\nfunction headerLeft(navigation:any, route:any, windowType:string, isMobile:boolean){\n    const canGOBackScreen = ['HomeScreen', 'LoginScreen'].findIndex(v=>v == route.name) == -1\n    const goBack = ()=>{\n        if (navigation.canGoBack())\n            navigation.goBack()\n        else if (canGOBackScreen)\n            navigation.replace('HomeScreen')\n    }\n    if (windowType=='portrait' && canGOBackScreen)\n        return <TouchableOpacity onPress={goBack}><Ionicons size={isMobile?20:24} style={{marginHorizontal:isMobile?16:20 }} name=\"arrow-back\"/></TouchableOpacity>\n    return null\n}\n\nfunction MainNavigator(){\n    const windowType = useResizeWindow();\n    const isMobile = useIsMobile()\n    const {auth} = useAuthContext()\n    const entries = useMemo(()=>{\n        if (auth.user === undefined)\n            return []\n        console.log('current user: ', auth.user)\n        return Object.entries(auth.user === null?login:main)\n    }, [auth])\n    return (auth.user!==undefined?<View style={{flexDirection:'row', flex:1}}>\n        {auth.user?<DrawerNavigator user={auth.user}/>:undefined}\n        <View style={{flex:1}}>\n            <FirebaseProvider user={auth.user}>\n                <WebSocketProvider disable={auth.user === null || auth.user === undefined}>\n                    <Main.Navigator\n                        screenOptions={({navigation, route})=>({\n                            headerStyle:{backgroundColor:Colors.header, height:isMobile?50:undefined},\n                            headerTitleStyle:{color:'white'},\n                            headerLeft:()=>headerLeft(navigation, route, windowType, isMobile),\n                            headerRight:()=><HeaderRight/>,\n                            headerLeftContainerStyle:{backgroundColor:'white', borderBottomWidth:1, borderColor:Colors.borderColor},\n                            cardStyle:{flexShrink:1},\n                            animationEnabled:windowType=='portrait',\n                            cardStyleInterpolator: CardStyleInterpolators.forHorizontalIOS\n                        })}\n                    >\n                        {entries.map(([key, screen])=><Main.Screen key={key} name={key} component={screen.component} options={{ title: screen.title }} />)}\n                        <Main.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n                    </Main.Navigator>\n                </WebSocketProvider>\n            </FirebaseProvider>\n        </View>\n    </View>:<></>);\n}","import React from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport Navigation from './src/navigation';\nimport useColorScheme from './src/hooks/useColorScheme';\nimport useCachedResources from './src/hooks/useCachedResources';\n\nexport default function App() {\n  const isLoadingComplete = useCachedResources();\n  const colorScheme = useColorScheme();\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return (\n      <SafeAreaProvider>\n        <Navigation colorScheme={colorScheme} />\n        <StatusBar />\n      </SafeAreaProvider>\n    );\n  }\n}\n","import { Ionicons } from '@expo/vector-icons';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as React from 'react';\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...Ionicons.font,\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete;\n}\n","import React, { createContext, useContext, useEffect, useReducer, useMemo, Dispatch } from \"react\"\nimport { checkLogin, login, logout } from \"../apis\"\nimport { UserMembership } from \"../types\"\n\ntype AuthAction = {type:string, username?:string, password?:string, user?:UserMembership|null}\n\nexport type Auth = {user?:UserMembership|null, groupId?:number}\n\ntype AuthState ={user?:UserMembership|null, request?:{username:string, password:string}|null}\n\nconst AuthContext = createContext<{auth:Auth, dispatch:Dispatch<AuthAction>}>({auth:{}, dispatch:()=>{}});\n\nconst authReducer =(initialState:AuthState, action:AuthAction)=>{\n  switch (action.type){\n      case 'LOGIN_REQUEST':\n        return {\n          ...initialState,\n          request:{username:action.username, password:action.password},\n        } as AuthState\n      case 'LOGIN_GUEST':\n        return {\n          ...initialState,\n          request:{username:'guest', password:'guest'},\n        } as AuthState\n      case 'LOGIN_SUCCESS':\n          return{\n              ...initialState,\n              user:action.user,\n              request:undefined\n          }\n      case 'LOGIN_FAILED':\n          return{\n              ...initialState,\n              request:undefined\n          }\n      case 'LOGOUT_REQUEST':\n          return{\n              ...initialState,\n              request:null\n          }\n      case 'LOGOUT_SUCCESS':\n          return {\n            ...initialState,\n            user:null,\n            request:undefined\n          }\n      default:\n          throw new Error( `Unhandled action type: ${action.type}`)\n  }\n}\n\n\nexport const AuthProvider = ({children}:{children:React.ReactNode})=>{\n  const [authState, dispatch] = useReducer(authReducer, {} as Auth)\n  const auth = useMemo(()=>({\n    user:authState.user,\n    groupId: authState.user?.membership_set.find(g=>g.root_group_id==null)?.group\n  }), [authState])\n  useEffect(()=>{\n    if(authState.user===undefined){\n      checkLogin().then((user)=>{\n        dispatch({type:\"LOGIN_SUCCESS\", user})\n      }).catch((e)=>{\n        console.log(e)\n        dispatch({type:\"LOGOUT_SUCCESS\"})\n      })\n    }\n    else if(authState.user===null && authState.request){\n      login(authState.request.username, authState.request.password).then(user=>{\n        dispatch({type:\"LOGIN_SUCCESS\", user})\n      }).catch(()=>{\n        dispatch({type:\"LOGIN_FAILED\"})\n      })\n    }\n    else if(authState.user && authState.request===null){\n      logout().then(()=>dispatch({type:\"LOGOUT_SUCCESS\"}))\n    }\n  }, [authState])\n  return <AuthContext.Provider value={{auth, dispatch}}>\n    {children}\n  </AuthContext.Provider>\n}\n\nexport default ()=>{\n  const authContext = useContext(AuthContext)\n  return authContext\n}\n","\nimport { User, UserMembership } from '../types';\nimport axios, { getToken, setToken } from './axios';\n\nexport const login = async(username:string, password:string) => {\n    if(username.endsWith('.guest') && password.length == 0)\n        password = 'guest'\n    const r = await axios.post(\"/api-token-auth/\", {username, password});\n    if(r.status == 200){\n        await setToken(r.data)\n        return await checkLogin()\n    }\n}\n\nexport const logout = async() => {\n    await setToken(null)\n    return await axios.get(\"/api-auth/logout/\")\n}\n\nexport const guestLogin =  async() => {\n    return await login('guest', 'guest')\n}\n\nconst checkLoginToken = async ()=>{\n    const value = (await axios.get(\"/api/v1/users/memberships/?_self=true\"))?.data\n    if (value && value.length){\n        return value[0] as UserMembership\n    }\n    return null\n}\n\nexport const checkLogin = async() => {\n    const token = await getToken()\n    if (token === null)\n        return null\n    try{\n       return await checkLoginToken()\n    }\n    catch(e:any){\n        let error = e\n        if(e.response !== undefined && e.response.status==401){\n            try{\n                return await checkLoginToken()\n            }\n            catch(e2){\n                error = e2\n            }\n        }\n        const isOffline = ((error as any).code == \"ERR_NETWORK\" || (error as any).message && ((error as any).message as string).startsWith(\"Cannot read\"))\n        throw {error, isOffline}\n    }\n}\n\nexport const getUserList = async (group_id:number)=>{\n    return (await axios.get(`/api/v1/users/?group_id=${group_id}`) ).data as User[]\n}\n\nexport const getUserMembershipList = async (group_id:number)=>{\n    return (await axios.get(`/api/v1/users/memberships/?group_id=${group_id}`) ).data as UserMembership[]\n}\n\n// export const getGroup = async (user:User)=>{\n//     return (await) axios.get(``)\n// }\n\n","import { Board, EditBoard, BoardContent, Channel, MessengerMember, MessengerContent, EditMessage, MessengerChannel } from '../types';\nimport axios from './axios';\n\nexport const getBoardChannelList = async (group_id:number)=>{\n    return (await axios.get(`/api/v1/channels/?type=board&group=${group_id}`) ).data as Channel[]\n}\n\nexport const getMessengerChannelList = async (user_id:number)=>{\n    return (await axios.get(`/api/v1/channels/messenger/?type=messenger&messenger_user_id=${user_id}`) ).data as MessengerChannel[]\n}\n\nexport const postChannel = async(channel:Channel)=>{\n    return (await axios.post(`/api/v1/channels/`, channel)).data as Channel\n}\n\nexport const putChannel = async(channel:Channel)=>{\n    return (await axios.put(`/api/v1/channels/${channel.id}/`, channel)).data as Channel\n}\n\nexport const deleteChannel = async(channel_id:number)=>{\n    await axios.delete(`/api/v1/channels/${channel_id}/`)\n}\n\nexport const getBoardContentList = async (channel_id:number)=>{\n    return (await axios.get(`/api/v1/boardcontents/?channel=${channel_id}`) ).data as BoardContent[]\n}\n\nexport const postBoard = async (board:EditBoard)=>{\n    await axios.post(`/api/v1/boardcontents/boards/`, board)\n}\n\nexport const patchBoard = async (board:Board)=>{\n    await axios.patch(`/api/v1/boardcontents/${board.id}/board/`, board)\n}\n\nexport const deleteBoardContent = async (content_id:number)=>{\n    await axios.delete(`/api/v1/boardcontents/${content_id}/`)\n}\n\nexport const getMessengerMemberList = async(channel_id:number)=>{\n    return (await axios.get(`/api/v1/messengermembers/?channel=${channel_id}`) ).data as MessengerMember[]\n}\n\nexport const postBulkMessengerMember = async(data:{channel_id:number, user_ids:number[]})=>{\n    await axios.post(`/api/v1/messengermembers/bulk/`, {channel:data.channel_id, user_ids:data.user_ids})\n}\n\nexport const deleteMessengerMember = async(member_id:number)=>{\n    await axios.delete(`/api/v1/messengermembers/${member_id}/`)\n}\n\nexport const getMessengerContentList = async (channel_id:number, id_lt?:number)=>{\n    const id_lt_param = id_lt?`&id_lt=${id_lt}`:''\n    return (await axios.get(`/api/v1/messengercontents/?limit=30&channel=${channel_id}${id_lt_param}`)).data.results as MessengerContent[]\n}\n\nexport const postMessage = async (message:EditMessage)=>{\n    await axios.post(`/api/v1/messengercontents/messages/`, message)\n}\n\nexport const deleteMessengerContent = async (content_id:number)=>{\n    await axios.delete(`/api/v1/messengercontents/${content_id}/`)\n}","firebaseConfig = {\n    \"authDomain\": \"virtual-metrics-355712.firebaseapp.com\",\n    \"projectId\": \"virtual-metrics-355712\",\n    \"storageBucket\": \"virtual-metrics-355712.appspot.com\",\n    \"messagingSenderId\": \"76003576924\",\n    \"appId\": \"1:76003576924:web:c8c8a006d07918bbc02a99\",\n    \"measurementId\": \"G-SEL35L4N5R\"\n}\nif (typeof module !== 'undefined') {\n    module.exports = firebaseConfig\n}\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","const tintColorLight = '#2f95dc';\nconst tintColorDark = '#fff';\n\nexport default {\n  light: {\n    text: '#000',\n    background: '#fff',\n    tint: tintColorLight,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorLight,\n  },\n  dark: {\n    text: '#fff',\n    background: '#000',\n    tint: tintColorDark,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorDark,\n  },\n  button:{\n    color:'rgb(242,242,242)',\n    borderColor:'rgba(27,31,36,0.15)',\n    backgroundColor:'#f6f8fa', //'rgba(9,30,66,0.08)',//rgb(242,242,242)\n  },\n  borderColor:'#d0d7de',\n  header:'#24292f',\n  focus:'#0065A4',\n};\n","import React, { useState } from 'react';\nimport { Text, StyleSheet, Pressable, StyleProp, ViewStyle} from 'react-native';\nimport Colors from '../constants/Colors';\nimport { CustomButtonProps } from '../types';\n\nconst DefaultButton = (props:CustomButtonProps)=>{\n    const [hover, setHover] = useState(false)\n    return <Pressable\n        onPress={()=>props.onPress()}\n        //@ts-ignore\n        onHoverIn={()=>setHover(true)}\n        onHoverOut={()=>setHover(false)}\n        style={[\n            {\n                paddingVertical:5, \n                paddingHorizontal:16\n            },\n            props.style,\n            hover?{backgroundColor:props.color}:{}\n        ]}>\n            <Text selectable={false} style={[{fontSize:14}, props.textStyle]}>{props.title}</Text>\n        </Pressable>\n}\n\nexport default (props:CustomButtonProps)=>{\n    const _props = {\n        color:Colors.button.color,\n        ...props,\n        style:[\n            styles.style,\n            props.style,\n        ] as StyleProp<ViewStyle>,\n        textStyle:[\n            styles.text, props.textStyle\n        ]\n    }\n    return <DefaultButton {..._props}/>\n}\n\nconst styles = StyleSheet.create({\n    style:{\n        borderRadius:6, \n        borderColor:Colors.button.borderColor, \n        borderWidth:1, \n        backgroundColor:Colors.button.backgroundColor\n    },\n    text:{\n        color:'black', \n        textAlign:'center', \n        fontWeight:'600'\n    }\n});\n","import { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport { deleteChannel, getBoardChannelList, postChannel, putChannel } from \"../../apis\";\nimport { Auth } from \"../useAuthContext\";\n\nexport default function useBoardChannelList(auth?:Auth){\n  const { data } = useQuery([\"BoardChannelList\", auth?.groupId] , async()=>auth?.groupId?(await getBoardChannelList(auth?.groupId)):[])\n  return data\n}\n\nexport function useBoardChannelMutation(){\n  const queryClient = useQueryClient()\n  const create = useMutation(postChannel, {\n    onSuccess: () => queryClient.invalidateQueries(\"BoardChannelList\")    \n  });\n  const update = useMutation(putChannel, {\n    onSuccess: () => queryClient.invalidateQueries(\"BoardChannelList\")\n  })\n  const _delete = useMutation(deleteChannel, {\n    onSuccess: () => queryClient.invalidateQueries(\"BoardChannelList\")\n  })\n\n  return { create:create.mutateAsync, update:update.mutateAsync, delete:_delete.mutate}\n}","import React from 'react'\nimport TextButton from \"./TextButton\"\nimport useAuthContext from \"../hooks/useAuthContext\"\nimport useResizeWindow from '../hooks/useResizeWindow'\nimport { View } from 'react-native'\n\ntype ButtonProps = {title:string, onPress:()=>void, windowType?:'landscape'|'portrait'}\n\nexport default (props:{extra?:ButtonProps[]})=>{\n    const {dispatch} = useAuthContext()\n    const windowType = useResizeWindow()\n    const defaultButtonProps:ButtonProps[] = [{title:'logout', onPress:()=>dispatch({type:\"LOGOUT_REQUEST\"})}]\n    const buttonProps = (props.extra?[...props.extra, ...defaultButtonProps]:defaultButtonProps).filter(v=>v.windowType==windowType || v.windowType == undefined)\n    return<View style={{flexDirection:'row'}}>\n        {buttonProps.map((v,k)=><TextButton key={k} {...v} textStyle={{color:'white'}} color='#gray'/>)}\n    </View>\n}\n  ","import { useState, useEffect } from 'react';\nimport { Dimensions, Keyboard } from 'react-native';\n//@ts-ignore\nimport useMobileDetect from 'use-mobile-detect-hook';\n\ntype WindowType = 'portrait' | 'landscape'\n\nexport default function useResizeWindow() {\n  const detectMobile = useMobileDetect();\n  const [window, setWindow] = useState(Dimensions.get('window'));\n  const onChange = () => setWindow(Dimensions.get('window'))\n\n  useEffect(() => {\n    Dimensions.addEventListener(\"change\", onChange);\n    return () => {\n      Dimensions.removeEventListener(\"change\", onChange);\n    };\n  });\n  if (detectMobile.isMobile())\n    return 'portrait'\n  return window.height >= window.width?'portrait':'landscape' as WindowType;\n}","import { useEffect } from \"react\";\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport { getMessengerChannelList, postChannel, putChannel } from \"../../apis\";\nimport { MessengerChannel } from \"../../types\";\nimport { Auth } from \"../useAuthContext\";\nimport useWebsocketContext from \"../useWebsocketContext\";\n\nexport default function useMessengerChannelList(auth?:Auth){\n  const queryClient = useQueryClient()\n  const {lastJsonMessage} = useWebsocketContext()\n  const { data } = useQuery(\"MessengerChannelList\" , async()=>auth?.user?.id?(await getMessengerChannelList(auth.user.id)):[])\n\n  useEffect(()=>{\n    if(lastJsonMessage !=null){\n      if(lastJsonMessage['type']=='enter'){\n        queryClient.setQueryData<MessengerChannel[]>(\"MessengerChannelList\", (_data)=>{\n          return (_data?.find(v=>v.id==lastJsonMessage['data']['id'])?_data:[lastJsonMessage['data'] , ...(_data|| [])]).sort((a, b)=>a.id - b.id)\n        })\n      }\n      // if(lastJsonMessage['type']=='leave'){\n      //   queryClient.setQueryData<Channel[]>(\"MessengerChannelList\", (_data)=>_data?.filter(v=>v.id!=lastJsonMessage['data']['channel_id']) || [])\n      // }\n    }\n  }, [lastJsonMessage])\n  return data\n}\n\nexport function useMessengerChannelMutation(){\n  const queryClient = useQueryClient()\n\n  const create = useMutation(postChannel, {\n    onSuccess: ()=>queryClient.invalidateQueries(\"MessengerChannelList\")\n  });\n\n  const update = useMutation(putChannel, {\n    onSuccess: () => queryClient.invalidateQueries(\"MessengerChannelList\")\n  })\n\n\n  return { create:create.mutateAsync, update:update.mutateAsync}\n}"],"sourceRoot":""}