{"version":3,"sources":["src/components/Calendar.tsx"],"names":["Calendar","props","locale","undefined","intl","LocaleConfig","defaultLocale","currentLocale","locales","markingType","markedDates","renderArrow","direction","monthFormat","initialDate","date","disableAllTouchEventsForDisabledDays","onMonthChange","onDayPress","setDate","dateString","current","style","width","dayComponent","dayjs","extend","localeData","monthNames","months","monthNamesShort","monthsShort","dayNames","weekdays","dayNamesShort","weekdaysShort","today","prev","next"],"mappings":"uFAAA,qKAwDe,SAASA,EAASC,GAC/B,IAAMC,OAA0BC,GAAhBF,EAAMC,QAAsC,QAAfD,EAAMC,OAAiBD,EAAMC,OAAOE,UAAKF,OACtFG,IAAaC,cAAgBJ,EAC7B,IAAMK,EAAgBF,IAAaG,QAAQN,GAC3C,OACE,kBAAC,UAAI,KACH,kBAAC,UAAY,CACXO,YAAaR,EAAMQ,YACnBC,YAAaT,EAAMS,YACnBC,YAAa,SAAAC,GAAS,OAAI,kBAAC,UAAI,KAAe,QAAbA,EAAoBL,EAAoB,KAAEA,EAAoB,OAC/FM,YAAaN,EAA2B,YACxCO,YAAab,EAAMc,KACnBC,qCAAsCf,EAAMe,qCAC5CC,cAAehB,EAAMgB,cACrBC,WAAY,SAACH,GAAI,OAAiB,MAAbd,EAAMkB,aAAO,EAAblB,EAAMkB,QAAUJ,EAAKK,aAC1CC,QAASpB,EAAMc,KACfO,MAAO,CAAC,CAACC,MAAM,KAAOtB,EAAMqB,OAC5BE,aAAcvB,EAAMuB,gBAxD5BC,IAAMC,OAAOC,KAAYA,aACzBF,IAAMvB,OAAO,MAEZG,IAAaG,QAAY,GAAsB,CAC9CoB,WAAYH,IAAMI,SAClBC,gBAAiBL,IAAMM,cACvBC,SAAUP,IAAMQ,WAChBC,cAAeT,IAAMU,gBACrBC,MAAO,QACPC,KAAM,OACNC,KAAM,OACNzB,iBAAaV,GAGfsB,IAAMvB,OAAO,MAEZG,IAAaG,QAAY,GAAsB,CAC9CoB,WAAYH,IAAMI,SAClBC,gBAAiBL,IAAMM,cACvBC,SAAUP,IAAMQ,WAChBC,cAAeT,IAAMU,gBACrBC,MAAO,eACPC,KAAM,eACNC,KAAM,eACNzB,YAAa","file":"static/js/10.4dcc8183.chunk.js","sourcesContent":["import React from 'react';\nimport dayjs from 'dayjs';\nimport localeData from 'dayjs/plugin/localeData';\nimport 'dayjs/locale/ko'\nimport intl from \"../lang\";\nimport { StyleSheet, Text, View,StyleProp, ViewStyle } from 'react-native';\nimport LocaleConfig from 'xdate';\nimport {default as BaseCalendar} from 'react-native-calendars/src/calendar';\nimport { DateData, DayState, MarkedDates, MarkingTypes } from 'react-native-calendars/src/types';\n\ntype locale_detail = typeof LocaleConfig.locales[''] & {\n  today:string,\n  prev:string,\n  next:string,\n  monthFormat?:string\n}\n\ndayjs.extend(localeData).localeData()\ndayjs.locale('en');\n\n(LocaleConfig.locales['en'] as locale_detail) = {\n  monthNames: dayjs.months(),\n  monthNamesShort: dayjs.monthsShort(),\n  dayNames: dayjs.weekdays(),\n  dayNamesShort: dayjs.weekdaysShort(),\n  today: \"Today\",\n  prev: 'Prev',\n  next: 'Next',\n  monthFormat: undefined\n};\n\ndayjs.locale('ko');\n\n(LocaleConfig.locales['ko'] as locale_detail) = {\n  monthNames: dayjs.months(),\n  monthNamesShort: dayjs.monthsShort(),\n  dayNames: dayjs.weekdays(),\n  dayNamesShort: dayjs.weekdaysShort(),\n  today: \"오늘\",\n  prev: '이전',\n  next: '다음',\n  monthFormat: 'yyyy년 MM월'\n};\n\nexport type CalendarProps = {\n  date?:string,\n  setDate?:(date:string)=>void,\n  style:StyleProp<ViewStyle>\n  markingType?:MarkingTypes\n  markedDates?:MarkedDates\n  onMonthChange?:(date:DateData)=>void\n  disableAllTouchEventsForDisabledDays?:boolean\n  locale?:string,\n  dayComponent?:React.ComponentType<{date:DateData, state:DayState}>\n}\n\nexport default function Calendar(props:CalendarProps) {\n  const locale = (props.locale != undefined && props.locale !='auto')?props.locale:intl.locale\n  LocaleConfig.defaultLocale = locale\n  const currentLocale = LocaleConfig.locales[locale] as locale_detail\n  return (\n    <View>\n      <BaseCalendar\n        markingType={props.markingType}\n        markedDates={props.markedDates}\n        renderArrow={direction => <Text>{direction == 'left'?currentLocale['prev']:currentLocale['next']}</Text>}\n        monthFormat={currentLocale['monthFormat']}\n        initialDate={props.date}\n        disableAllTouchEventsForDisabledDays={props.disableAllTouchEventsForDisabledDays}\n        onMonthChange={props.onMonthChange}\n        onDayPress={(date)=> props.setDate?.(date.dateString)}\n        current={props.date}\n        style={[{width:400 }, props.style]}\n        dayComponent={props.dayComponent as any}\n      />\n      {/* <Text style={styles.dateText}>선택: {props.date}</Text> */}\n    </View>\n  );\n}\n"],"sourceRoot":""}