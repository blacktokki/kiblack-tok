{"version":3,"sources":["src/navigation/index.tsx","src/components/TextButton.tsx","src/hooks/lists/useMessengerMemberList.ts","src/components/HeaderRight.tsx","src/screens/main/LoginScreen.tsx","src/hooks/lists/useMessengerContent.List.ts","src/components/LinkPreview.tsx","src/lib/react-native-webrtc/useWebsocketContext.tsx","src/lib/react-native-webrtc/webrtc/p2p.tsx","src/lib/react-native-webrtc/webrtc/index.ts","src/lib/react-native-webrtc/LocalCam.tsx","src/lib/react-native-webrtc/RemoteCam.tsx","src/screens/main/ChatScreen/VideoCallSection.tsx","src/components/FilePreview.tsx","src/screens/main/ChatScreen/index.tsx","src/screens/main/TabOneScreen.tsx","src/screens/main/InviteeScreen.tsx","src/screens/index.ts","src/screens/main/HomeScreen.tsx","src/hooks/useWebsocketContext.tsx","src/modals/ChannelEditModal.tsx","src/apis/notification.ts","src/hooks/useIsMobile.ts","src/hooks/lists/useUserMembershipList.ts","src/components/CommonItem.tsx","src/navigation/DrawerNavigator.tsx","src/lib/react-native-paper/Avatar.tsx","src/components/Avatar.tsx","src/tabs/DrawerTab.tsx","src/tabs/MessengerTab.tsx","src/tabs/index.ts","src/components/RowField.tsx","src/components/TextField.tsx","src/tabs/MemberTab.tsx","src/components/Themed.tsx","src/modals/GuestLogoutModal.tsx","src/modals/ProfileModal.tsx","src/components/Profile.tsx","src/components/CommonTextInput.tsx","src/hooks/useLocalSearch.ts","src/modals/InviteModal.tsx","src/hooks/lists/useExternalMembershipList.ts","src/apis/axios.ts","src/hooks/useAuthContext.tsx","src/navigation/LinkingConfiguration.ts","src/constants/Colors.ts","src/screens/NotFoundScreen.tsx","src/hooks/useFirebaseContext.tsx","src/modals/index.ts","src/navigation/RootNavigator.tsx","src/components/MobileSafeAreaView.tsx","App.tsx","src/hooks/useCachedResources.ts","src/lang/index.ts","src/hooks/useLangContext.tsx","src/components/CommonButton.tsx","web/firebase-config.js","src/apis/account.ts","src/apis/messenger.ts","src/assets/fonts/SpaceMono-Regular.ttf","src/hooks/useModalsContext.tsx","src/hooks/useResizeWindow.tsx","src/hooks/useColorScheme.ts","src/components/CommonSection.tsx","src/hooks/lists/useMessengerChannelList.ts"],"names":["navigationRef","React","navigate","name","params","_navigationRef$curren","_navigationRef$curren2","current","Navigation","defaultColorScheme","useDefaultColorScheme","userColorScheme","useColorScheme","colorScheme","NavigationContainer","ref","documentTitle","formatter","options","route","linking","process","versions","undefined","LinkingConfiguration","theme","DarkTheme","DefaultTheme","ResizeWindowProvider","RootNavigator","l","search","decoded","slice","split","map","s","replace","join","window","history","replaceState","pathname","hash","location","ignoreWarnings","_console","_","clone","console","warn","message","Object","forEach","value","indexOf","props","createElement","CommonButton","_extends","style","styles","StyleSheet","create","borderRadius","backgroundColor","borderWidth","useMessengerMemberList","channel_id","useQuery","_regeneratorRuntime","async","_context","prev","next","awrap","getMessengerMemberList","abrupt","sent","stop","Promise","data","useMessengerMemberMutation","queryClient","useQueryClient","invite","useMutation","postBulkMessengerMember","onSuccess","invalidateQueries","leave","deleteMessengerMember","mutateAsync","lang","useLangContext","_useAuthContext","useAuthContext","auth","dispatch","setModal","useModalsContext","windowType","useResizeWindow","defaultButtonProps","title","onPress","_auth$user","user","username","endsWith","GuestLogoutModal","type","buttonProps","extra","concat","_toConsumableArray","filter","v","View","flexDirection","k","TextButton","key","textStyle","color","Styles","login_container","flex","login_header","alignItems","paddingTop","paddingBottom","login_header_logo","width","resizeMode","login_header_text","marginTop","fontSize","login_header_text_bold","fontWeight","login_wrapper","justifyContent","paddingVertical","borderTopRightRadius","borderTopLeftRadius","form","maxWidth","form_error","height","form_error_text","textAlignVertical","form_input","paddingHorizontal","marginBottom","button","button_label","login_social","login_social_separator","login_social_separator_line","login_social_separator_text","marginHorizontal","login_social_buttons","login_social_button","borderColor","login_social_icon","login_social_facebook","login_footer_text","guest_footer_text","alignSelf","margin","login_footer_link","useMessengerContentList","_useInfiniteQuery","useInfiniteQuery","_ref","pageParam","getMessengerContentList","then","select","pages","length","getNextPageParam","lastPage","id","refetchOnReconnect","refetchOnWindowFocus","fetchNextPage","lastJsonMessage","useWebsocketContext","useEffect","setQueryData","_data","_objectSpread","pageParams","link","isMobile","CommonSection","containerStyle","bodyStyle","padding","TouchableOpacity","Linking","openURL","url","image","Image","source","uri","maxHeight","Text","description","WebSocketContext","createContext","sendJsonMessage","WebSocketProvider","disable","children","Fragment","WebSocketInternalProvider","path","Context","useBackground","useContext","log","peerConstraints","iceServers","JSON","parse","sessionConstraints","mandatory","OfferToReceiveAudio","OfferToReceiveVideo","VoiceActivityDetection","mediaConstraints","audio","video","framerate","onICEcandidate","pc","_message","rtcMessage","candidate","RTCIceCandidate","addIceCandidate","sendICEcandidate","event","sendMessage","receiver","target","optimizeSdp","offerDescription","arr","sdp","str","i","test","RTCSessionDescription","createOffer","pcRefCurrent","stream","addStream","t0","t1","setLocalDescription","camStyle","container","cam","bottonContainer","position","bottom","buttonBar","label","_props$user","_useWebsocketContext","_useLocalCam","pcRef","useRef","_useState","useState","_useState2","_slicedToArray","sender","setSender","_useState3","_useState4","_stream","setStream","isPlay","useMemo","CustomRTCView","useCallback","memo","RTCView","videoProps","start","mode","newStream","_context2","mediaDevices","getUserMedia","getDisplayMedia","catch","e","entries","_ref2","_ref3","error","getTracks","track","websocketOnMessage","response","peerConnection","_peerConnection","answerDescription","_peerConnection2","_context3","channel_name","RTCPeerConnection","addEventListener","setRemoteDescription","useLocalCam","Button","setReceiver","_useRemoteCam","_useState5","_useState6","setUser","_useState7","_useState8","close","clearInterval","statsInterval","_pcRef$current","_pcRef$current2","_pcRef$current3","_pcRef$current4","streams","_peerConnection3","_answerDescription","_streams","_context5","iceConnectionState","activeStream","setInterval","stats","statsOutput","framePerSecond","_context4","getStats","report","kind","keys","statName","framesPerSecond","Date","toTimeString","addTransceiver","direction","getRemoteStreams","createAnswer","localDescription","useRemoteCam","TextInput","onChangeText","VideoView","scale","Colors","flexGrow","focusGuest","setFocusGuest","VideoCallContainer","setDisable","videoMode","setVideoMode","guests","setGuests","_useRtcContext","useRtcContext","find","Math","max","ceil","sqrt","toggleVideoMode","ThemedView","aspectRatio","flexShrink","borderLeftWidth","borderBottomWidth","flexWrap","RemoteCam","LocalCam","RtcProvider","file","showBorder","FontAwesome","size","filename","floor","pow","toFixed","humanFileSize","filesize","MessengerContentPageItem","_nextPage2","useIsMobile","nextPage","_nextPage","nextContent","content","index2","created","date","isSystem","isFirst","isSelf","ownerId","dayChanged","message_set","marginVertical","marginLeft","Avatar","userId","outerContainerStyle","titleStyle","subtitle","Hyperlink","linkDefault","wordBreak","linkStyle","selectable","file_set","fileIndex","FilePreview","link_set","linkIndex","LinkPreview","Panel_Button_Text","textAlign","Panel_Holder","InviteeScreen","_route$params","navigation","enterGuest","setEnterGuest","channelList","useMessengerChannelList","messengerMemberMutation","useLayoutEffect","setOptions","headerRight","user_ids","main","HomeScreen","component","_route$params2","_useLangContext","locale","setLocale","configTheme","useConfigColorScheme","home","setHome","text","HeaderRight","ChannelEditModal","index","tab","StyledText","paddingLeft","textDecorationLine","_ref4","_ref5","setColorScheme","TabViewNavigator","tabs","bottomTabs","tabBarPosition","parseInt","onTab","setParams","ChatScreen","_useMessengerChannelL","inputRef","channel","_useMessengerContentL","memberList","member_id","_memberList$find","setValue","autoFocus","setAutoFocus","postValue","_auth$user2","contentMutation","postMessage","_delete","deleteMessengerContent","d","variables","mutate","delete","useMessengerContentMutation","InviteModal","back","renderItem","_auth$user3","item","canGoBack","goBack","focus","VideoCallSection","minWidth","FlatList","contentContainerStyle","onScroll","nativeEvent","contentOffset","y","contentSize","onLayout","p","layout","background","onSubmitEditing","blurOnSubmit","resolve","reject","Platform","OS","input","document","onchange","files","onabort","onerror","click","f","_auth$user4","TabOneScreen","login","LoginScreen","setUsername","password","setPassword","_login","placeholder","autoCapitalize","keyboardType","secureTextEntry","modal","defaultContext","_split","_split2","SCHEMA","DOMAIN","token","setToken","AppState","currentState","isActive","setIsActive","_useWebSocket","useWebSocket","shouldReconnect","closeEvent","protocols","onOpen","onClose","AsyncStorage","getItem","onChange","nextState","removeEventListener","Provider","channelMutation","useMessengerChannelMutation","setName","setDescription","separator","lightColor","darkColor","TextField","multiline","groupId","newChannel","owner","group","update","screen","field","getNotification","user_id","axios","get","postNotification","notification","post","putNotification","put","useMobileDetect","useUserMembershipList","getUserMembershipList","CommonItem","_React$useState","_React$useState2","setHover","_React$useState3","_React$useState4","press","setPress","Pressable","outerContainer","onPressIn","onPressOut","onHoverIn","onHoverOut","bodyView","minHeight","setIndex","icons","assign","apply","_defineProperty","icon","TabView","renderTabBar","TabBar","indicatorStyle","activeColor","inactiveColor","renderIcon","scene","onTabPress","findIndex","navigationState","routes","_ref6","_ref7","onIndexChange","renderScene","SceneMap","_ref8","_ref9","_ref11","colors","useTheme","onAddList","tabBar","card","borderTopColor","border","pointerEvents","Profile","accessibilityRole","drawerTabs","borderTopWidth","values","drawerTab","Tab","elevation","borderRightWidth","normalizeHash","min","initHash","charCodeAt","abs","stringToHSL","toUpperCase","DrawerTab","Messenger","useMessengerChannelSorted","MessengerIcon","Ionicons","OneTab","MemberTab","MemberIcon","TwoTab","today","toISOString","_item$last_message","_item$last_message2","_item$last_message3","last_message","marginRight","opacity","member_count","unread_count","RowField","rowStyle","CommonTextInput","renderMemberItem","userList","memberItem","ProfileModal","MaterialCommunityIcons","useThemeColor","colorName","colorFromProps","otherProps","_objectWithoutProperties","_excluded","light","dark","DefaultText","_excluded2","DefaultView","counterpart","direct","patchUser","finally","disabled","onBlur","onEndEditing","contentHeight","setContentHeight","editable","onContentSizeChange","localSearchReducer","initialState","action","keyword","active","Error","InviteItem","selectedRef","has","selected","setSelected","add","GroupTabView","_useLocalSearch","compare","_useReducer","useReducer","_useReducer2","searchState","useLocalSearch","memberSet","Set","includes","dispatchKeyword","ExternalMembershipTabView","setKeyword","copied","setCopied","timeoutRef","externalMemberList","getExternalMembershipList","useExternalMembershipList","setTimeout","clearTimeout","inviteLink","href","Clipboard","setString","external","accountURL","defaultOption","baseURL","withCredentials","headers","_axios","interceptors","request","use","config","status","getToken","r","defaults","setItem","removeItem","AuthContext","authReducer","AuthProvider","authState","setError","_authState$user","_authState$user$membe","membership_set","g","root_group_id","checkLogin","_data$response","_data$response$data","noti","logout","ROOTPATH","prefixes","screens","Main","NotFound","tint","tabIconDefault","tabIconSelected","header","buttonColor","buttonBackgroundColor","NotFoundScreen","linkText","firebaseConfig","require","messagingSenderId","apiKeyEncrypted","toString","padStart","app","firebase","initializeApp","apiKey","messaging","onMessage","payload","Notification","permission","body","alert","requestToken","serviceWorkerRegistration","currentToken","requestPermission","navigator","serviceWorker","register","scope","vapidKey","preventDefault","unregister","setEnable","enable","context","FirebaseContext","Root","createStackNavigator","Navigator","headerMode","screenOptions","cardStyle","animationEnabled","cardStyleInterpolator","CardStyleInterpolators","forVerticalIOS","Screen","MainNavigator","headerShown","gestureDirection","modalValues","modals","useFirebaseContext","DrawerNavigator","ModalsProvider","headerStyle","headerTitleStyle","headerLeft","canGOBackScreen","headerLeftContainerStyle","forHorizontalIOS","innerHeight","setHeight","Dimensions","QueryClient","App","isLoadingComplete","setLoadingComplete","SplashScreen","Font","font","finish","useCachedResources","isAppearenceComplete","useInitColorScheme","SafeAreaProvider","MobileSafeAreaView","QueryClientProvider","client","IntlProvider","StatusBar","translations","ko","_RNLocalize$findBestL","RNLocalize","languageTag","isRTL","I18nManager","forceRTL","intl","createIntl","defaultLocale","messages","createIntlCache","IntlContext","complete","setComplete","_useContext","formatMessage","defaultMessage","DefaultButton","hover","_props","module","exports","guestLogin","checkLoginToken","_await$axios$get","isOffline","code","startsWith","getUserList","group_id","_context6","_context7","patch","ids","updated","_context8","_context9","getMessengerChannelList","postChannel","postDirectChannel","putChannel","deleteChannel","id_lt","id_lt_param","results","formData","_context10","FormData","append","content_id","_context11","ModalsContext","allModals","Component","setModals","animationType","setAnimationType","ExactComponent","newModals","m","Modal","visible","getWindowType","ResizeWindowContext","detectMobile","_useWindowDimensions","useWindowDimensions","setWindowType","Appearance","set","withSeparator","titleView","sort","a","b","_data2$message_set$","_a$last_message","_b$last_message"],"mappings":"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","file":"static/js/app.60433edc.chunk.js","sourcesContent":["/**\r\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\r\n * https://reactnavigation.org/docs/getting-started\r\n *\r\n */\r\nimport _ from 'lodash';\r\nimport { NavigationContainer, DefaultTheme, DarkTheme, NavigationContainerRef } from '@react-navigation/native';\r\nimport * as React from 'react';\r\n\r\nimport LinkingConfiguration from './LinkingConfiguration';\r\nimport RootNavigator from './RootNavigator';\r\n\r\nimport { ColorSchemeName, useColorScheme as useDefaultColorScheme } from 'react-native';\r\nimport { Appearance, useColorScheme as useColorScheme } from 'react-native-appearance';\r\nimport { ResizeWindowProvider } from '../hooks/useResizeWindow';\r\n\r\n\r\nconst navigationRef = React.createRef<NavigationContainerRef>();\r\n\r\nexport function navigate(name:string, params?:any) {\r\n  if (params)\r\n    navigationRef.current?.navigate(name, params);\r\n  navigationRef.current?.navigate(name);\r\n}\r\n\r\nexport default function Navigation() {\r\n  const defaultColorScheme = useDefaultColorScheme()\r\n  const userColorScheme = useColorScheme()\r\n  const colorScheme = userColorScheme =='no-preference'?defaultColorScheme:userColorScheme\r\n  return <NavigationContainer\r\n    ref={navigationRef}\r\n    documentTitle={{formatter: (options, route) => {return `TOKKI TOK`}}}\r\n    linking={(process.versions && process.versions['electron'])?undefined:LinkingConfiguration}\r\n    theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\r\n        <ResizeWindowProvider>\r\n          <RootNavigator />\r\n        </ResizeWindowProvider>\r\n  </NavigationContainer>\r\n}\r\n\r\n(function(l) {  // for github-page\r\n    if (l !== undefined && l.search[1] === '/' ) {\r\n        var decoded = l.search.slice(1).split('&').map(function(s) { \r\n        return s.replace(/~and~/g, '&')\r\n        }).join('?');\r\n        window.history.replaceState(null, '',\r\n            l.pathname.slice(0, -1) + decoded + l.hash\r\n        );\r\n    }\r\n}(window.location))\r\n    \r\nconst ignoreWarnings = ['ReactNativeFiberHostComponent'];\r\nconst _console = _.clone(console);\r\nconsole.warn = (message: string|Object) => {\r\n    var warn = true;\r\n    if (message instanceof Object)\r\n    warn = false;\r\n    else{\r\n    ignoreWarnings.forEach((value)=>{\r\n        if (message.indexOf && message.indexOf(value) <= -1) {\r\n            warn = false;\r\n        }\r\n    })\r\n    };\r\n    if (warn){\r\n        _console.warn(message);\r\n    }\r\n    else{\r\n        // console.log(message)\r\n    }\r\n};\r\n","import React, { useState } from 'react';\r\nimport { StyleSheet} from 'react-native';\r\nimport { CustomButtonProps } from '../types';\r\nimport CommonButton from './CommonButton';\r\n\r\nexport default (props:CustomButtonProps)=>{\r\n    return <CommonButton {...props} style={[styles.style, props.style]}/>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    style:{\r\n        borderRadius:6, \r\n        backgroundColor: 'transparent',\r\n        borderWidth:0\r\n    },\r\n});\r\n","import { useMutation, useQuery, useQueryClient } from \"react-query\";\r\nimport { postBulkMessengerMember, deleteMessengerMember, getMessengerMemberList } from \"../../apis\";\r\n\r\nexport default function useMessengerMemberList(channel_id:number){\r\n  const { data } = useQuery([\"MessengerMemberList\", channel_id] , async()=>await getMessengerMemberList(channel_id))\r\n  return data\r\n}\r\n\r\n\r\nexport function useMessengerMemberMutation(){\r\n  const queryClient = useQueryClient()\r\n  const invite = useMutation(postBulkMessengerMember, {\r\n    onSuccess: ()=>{\r\n      queryClient.invalidateQueries(\"MessengerMemberList\")\r\n    }\r\n  })\r\n\r\n  const leave = useMutation(deleteMessengerMember, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(\"MessengerChannelList\")\r\n      queryClient.invalidateQueries(\"MessengerMemberList\")\r\n    }\r\n  })\r\n  return {invite:invite.mutateAsync, leave:leave.mutateAsync}\r\n}","import React from 'react'\r\nimport TextButton from \"./TextButton\"\r\nimport useAuthContext from \"../hooks/useAuthContext\"\r\nimport useResizeWindow from '../hooks/useResizeWindow'\r\nimport { View } from 'react-native'\r\nimport useModalsContext from '../hooks/useModalsContext'\r\nimport GuestLogoutModal from '../modals/GuestLogoutModal'\r\nimport useLangContext from '../hooks/useLangContext'\r\n\r\ntype ButtonProps = {title:string, onPress:()=>void, windowType?:'landscape'|'portrait'}\r\n\r\nexport default (props:{extra?:ButtonProps[]})=>{\r\n    const { lang } = useLangContext()\r\n    const {auth, dispatch} = useAuthContext()\r\n    const { setModal } = useModalsContext()\r\n    const windowType = useResizeWindow()\r\n    const defaultButtonProps:ButtonProps[] = [{title:lang('sign out'), onPress:()=>{\r\n        if (auth?.user?.username.endsWith(\".guest\")){\r\n            setModal(GuestLogoutModal, {})\r\n        }\r\n        else{\r\n            dispatch({type:\"LOGOUT_REQUEST\"})\r\n        }\r\n    }}]\r\n    const buttonProps = (props.extra?[...props.extra, ...defaultButtonProps]:defaultButtonProps).filter(v=>v.windowType==windowType || v.windowType == undefined)\r\n    return<View style={{flexDirection:'row'}}>\r\n        {buttonProps.map((v,k)=><TextButton key={k} {...v} textStyle={{color:'white'}} color='#gray'/>)}\r\n    </View>\r\n}\r\n  ","import React, {useLayoutEffect, useState} from 'react';\r\nimport {\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  View,\r\n  StyleSheet,\r\n} from 'react-native';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport useAuthContext from '../../hooks/useAuthContext';\r\nimport useLangContext from '../../hooks/useLangContext';\r\n\r\nexport default function LoginScreen({\r\n  navigation, route\r\n}: StackScreenProps<any, 'Login'>) {\r\n  const { lang } = useLangContext()\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const {error, dispatch} = useAuthContext()\r\n  const _login = ()=>dispatch({type:'LOGIN_REQUEST', username, password})\r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      headerRight: undefined\r\n    });\r\n  }, [navigation, route]);\r\n\r\n  return (\r\n    <View style={Styles.login_wrapper}>\r\n      <View style={Styles.form}>\r\n        {error && <View style={Styles.form_error}>\r\n          <Text style={Styles.form_error_text}>{lang(error)}</Text>\r\n        </View>}\r\n        <TextInput\r\n          style={Styles.form_input}\r\n          value={username}\r\n          placeholder={lang('Username')}\r\n          onChangeText={(text) => setUsername(text)}\r\n          autoCapitalize={'none'}\r\n          keyboardType={'email-address'}\r\n          onSubmitEditing={_login}\r\n        />\r\n        <TextInput\r\n          style={Styles.form_input}\r\n          value={password}\r\n          placeholder={lang('Password')}\r\n          secureTextEntry\r\n          onChangeText={(text) => setPassword(text)}\r\n          onSubmitEditing={_login}\r\n        />\r\n        <TouchableOpacity onPress={_login}>\r\n          <View style={Styles.button}>\r\n            <Text style={Styles.button_label}>{lang('Sign in')}</Text>\r\n          </View>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity onPress={() => dispatch({type:\"LOGIN_GUEST\"})}>\r\n          <Text style={Styles.guest_footer_text}>\r\n            {lang(\"Sign in as guest\")}\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      <View style={Styles.login_social}>\r\n        <View style={Styles.login_social_separator}>\r\n          <View style={Styles.login_social_separator_line} />\r\n          <Text style={Styles.login_social_separator_text}>{'*'}</Text>\r\n          <View style={Styles.login_social_separator_line} />\r\n        </View>\r\n        <View style={Styles.login_social_buttons}>\r\n        </View>\r\n      </View>\r\n      {/* <>\r\n        <TouchableOpacity onPress={() => navigate(\"RegistrationScreen\")}>\r\n          <Text style={Styles.login_footer_text}>\r\n            {\"Don't have an account? \"}\r\n            <Text style={Styles.login_footer_link}>{'Sign up'}</Text>\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </> */}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst Styles = StyleSheet.create({\r\n    login_container: {\r\n      flex: 1,\r\n      backgroundColor: '#FFF',\r\n    },\r\n    login_header: {\r\n      alignItems: 'center',\r\n      paddingTop: 30,\r\n      paddingBottom: 50,\r\n      backgroundColor: '#208AEC',\r\n    },\r\n    login_header_logo: {\r\n      width: 220,\r\n      resizeMode: 'contain',\r\n    },\r\n    login_header_text: {\r\n      marginTop: 15,\r\n      color: '#f0f0f0',\r\n      fontSize: 16,\r\n    },\r\n    login_header_text_bold: {\r\n      color: '#fff',\r\n      fontWeight: 'bold',\r\n    },\r\n    login_wrapper: {\r\n      flex: 1,\r\n      justifyContent: 'space-between',\r\n      paddingVertical: 40,\r\n      borderTopRightRadius: 12,\r\n      borderTopLeftRadius: 12,\r\n      marginTop: -10,\r\n      backgroundColor: '#fff',\r\n      alignItems: 'center',\r\n    },\r\n    form: {\r\n      width: '100%',\r\n      maxWidth: 320,\r\n    },\r\n    form_error: {\r\n      height: 22,\r\n      width:'100%',\r\n    },\r\n    form_error_text:{\r\n      textAlignVertical:'center',\r\n      color:'red',\r\n      fontSize:13,\r\n    },\r\n    form_input: {\r\n      height: 44,\r\n      paddingHorizontal: 20,\r\n      marginBottom: 20,\r\n      backgroundColor: '#EDF0F7',\r\n      borderRadius: 50,\r\n    },\r\n    button: {\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      height: 44,\r\n      backgroundColor: '#0065A4',\r\n      borderRadius: 50,\r\n    },\r\n    button_label: {\r\n      color: '#fff',\r\n      fontSize: 16,\r\n    },\r\n    login_social: {\r\n      width: '100%',\r\n      maxWidth: 280,\r\n      marginTop: 20,\r\n    },\r\n    login_social_separator: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n    },\r\n    login_social_separator_line: {\r\n      flex: 1,\r\n      width: '100%',\r\n      height: 1,\r\n      backgroundColor: '#E0E0E0',\r\n    },\r\n    login_social_separator_text: {\r\n      marginHorizontal: 10,\r\n      color: '#808080',\r\n      fontSize: 16,\r\n    },\r\n    login_social_buttons: {\r\n      flexDirection: 'row',\r\n      justifyContent: 'center',\r\n      marginTop: 20,\r\n    },\r\n    login_social_button: {\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      width: 60,\r\n      height: 60,\r\n      marginHorizontal: 12,\r\n      borderWidth: 1,\r\n      borderColor: '#E7E7E7',\r\n      borderRadius: 60,\r\n    },\r\n    login_social_icon: {\r\n      width: 38,\r\n      height: 38,\r\n      resizeMode: 'contain',\r\n    },\r\n    login_social_facebook: {\r\n      backgroundColor: '#4267B2',\r\n      borderColor: '#4267B2',\r\n    },\r\n    login_footer_text: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      color: '#808080',\r\n      fontSize: 14,\r\n    },\r\n    guest_footer_text: {\r\n      flexDirection: 'row',\r\n      alignSelf: 'center',\r\n      color: '#808080',\r\n      fontSize: 15,\r\n      margin: 15\r\n    },\r\n    login_footer_link: {\r\n      color: '#208AEC',\r\n      fontSize: 15,\r\n      fontWeight: 'bold',\r\n    },\r\n  });\r\n  ","import { useCallback, useEffect, useState } from \"react\"\r\nimport { InfiniteData, useInfiniteQuery, useMutation, useQueryClient } from \"react-query\"\r\nimport { getMessengerContentList, postMessage, deleteMessengerContent } from \"../../apis\"\r\nimport { MessengerContent } from \"../../types\"\r\nimport useWebsocketContext from \"../useWebsocketContext\"\r\n\r\nexport type MessengerContentPage = {\r\n  next?:MessengerContentPage\r\n  current:MessengerContent[]\r\n}\r\n\r\nexport default function useMessengerContentList(channel_id:number){  \r\n  const queryClient = useQueryClient()\r\n  const { data, fetchNextPage } = useInfiniteQuery<MessengerContentPage>(\r\n    [\"MessengerContentList\", channel_id], \r\n    async({pageParam})=>getMessengerContentList(channel_id, pageParam).then(current=>({current})), \r\n    {\r\n      select:data=>{\r\n        if(data.pages.length > 1)\r\n          data.pages[data.pages.length - 2].next = data.pages[data.pages.length - 1]\r\n        return data;\r\n      },\r\n      getNextPageParam:(lastPage)=>lastPage?.current.length?lastPage.current[lastPage.current.length - 1].id:undefined,\r\n      refetchOnReconnect:false,\r\n      refetchOnWindowFocus:false\r\n    }\r\n  )\r\n  const { lastJsonMessage } = useWebsocketContext()\r\n  useEffect(()=>{\r\n    if(lastJsonMessage !=null && lastJsonMessage['type']=='next_message' && lastJsonMessage['data']['channel'] == channel_id){\r\n      queryClient.setQueryData<InfiniteData<MessengerContentPage>>([\"MessengerContentList\", channel_id], (_data)=>{\r\n        if(_data?.pages[0].current && _data?.pages[0].current[0].id != lastJsonMessage['data'].id)\r\n          _data.pages[0].current = [lastJsonMessage['data'], ..._data?.pages[0].current]\r\n        return {...(_data || {pages:[], pageParams:[]})}\r\n      })\r\n    }\r\n  }, [lastJsonMessage])\r\n  return { data, fetchNextPage }\r\n}\r\n\r\nexport function useMessengerContentMutation(){\r\n  // const queryClient = useQueryClient()\r\n  const create = useMutation(postMessage, {\r\n    onSuccess: () => {\r\n      // queryClient.setQueryData(['MessengerContentList'], (data:any) => ({\r\n      //   pages: data.pages.slice(0, 1),\r\n      //   pageParams: data.pageParams.slice(0, 1),\r\n      // }))\r\n      // queryClient.invalidateQueries(\"MessengerContentList\")\r\n    }\r\n  });\r\n  const _delete = useMutation(deleteMessengerContent, {\r\n    onSuccess: (d, variables) => {\r\n      // queryClient.setQueryData(['MessengerContentList'], (data:any) => ({\r\n      //   pages: (data.pages as MessengerContent[][]).map(v=>v.filter(v2=>v2.id != variables)),\r\n      //   pageParams: data.pageParams,\r\n      // }))\r\n    }\r\n  })\r\n  return { create:create.mutate, delete:_delete.mutate }\r\n}","import React from 'react'\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport CommonSection from \"./CommonSection\"\r\nimport { Image, Linking, TextStyle } from \"react-native\"\r\nimport { View, Text } from \"./Themed\"\r\nimport { Link } from \"../types\"\r\n\r\n\r\n\r\nexport default ({link, isMobile}:{link:Link, isMobile:boolean})=>{\r\n    return <CommonSection containerStyle={{marginHorizontal:0}} bodyStyle={{padding:0}}>\r\n    <TouchableOpacity onPress={()=>Linking.openURL(link.url)} style={{flexDirection:'row'}} containerStyle={{width:'100%'}}>\r\n        {link.image && <Image source={{uri:link.image}} resizeMode=\"cover\" style={{ width:'100%', maxWidth:isMobile?120:150, maxHeight:isMobile?120:150, borderWidth:1}}/>}\r\n        <View style={{flex:1, marginHorizontal:20}}>\r\n        <Text style={{fontSize:18}}>{link.title}</Text>\r\n        <Text style={{fontSize:14}}>{link.description}</Text>\r\n        <Text style={{fontSize:12}}>{link.url}</Text>\r\n        </View>\r\n    </TouchableOpacity>\r\n    </CommonSection>\r\n}","import React, { createContext, useContext } from \"react\"\r\nimport { SendJsonMessage } from \"react-use-websocket/dist/lib/types\";\r\nimport { WebSocketInternalProvider } from \"../../hooks/useWebsocketContext\";\r\n\r\nconst WebSocketContext = createContext<{lastJsonMessage:any, sendJsonMessage:SendJsonMessage }>({lastJsonMessage:undefined, sendJsonMessage:()=>{}});\r\n\r\nexport const WebSocketProvider = ({disable, children}:{disable?:boolean, children:React.ReactNode})=>{\r\n  return disable?<></>:<WebSocketInternalProvider path={'messenger/ws/rtc/'} Context={WebSocketContext} useBackground>\r\n    {children}\r\n  </WebSocketInternalProvider>\r\n}\r\n\r\nexport default ()=>{\r\n  const webSocketContext = useContext(WebSocketContext)\r\n  return webSocketContext\r\n}\r\n\r\n","import React, { useCallback, useRef, useState, useMemo } from \"react\";\r\n//@ts-ignore\r\nimport { RTCView, mediaDevices, RTCPeerConnection, MediaStream, RTCSessionDescription, RTCIceCandidate } from \"react-native-webrtc-web-shim\";\r\n// @ts-ignore\r\nimport {TURN_SERVER} from \"@env\"\r\n\r\n\r\nconsole.log(TURN_SERVER?\"use turn server\": \"use stun server\")\r\n\r\nexport const peerConstraints = {\r\n\ticeServers: [TURN_SERVER?JSON.parse(TURN_SERVER):{urls: 'stun:stun.l.google.com:19302'}]\r\n};\r\n\r\nexport const sessionConstraints = {\r\n\tmandatory: {\r\n\t\tOfferToReceiveAudio: true,\r\n\t\tOfferToReceiveVideo: true,\r\n\t\tVoiceActivityDetection: true\r\n\t}\r\n};\r\n\r\nconst mediaConstraints = {audio:true, video:{framerate:30}}\r\n\r\n//@ts-ignore\r\nexport {MediaStream, RTCPeerConnection, RTCSessionDescription} from \"react-native-webrtc-web-shim\";\r\n\r\nconst onICEcandidate = (pc:typeof RTCPeerConnection, message:any)=>{\r\n\tconst _message = message.data.rtcMessage\r\n\t\tconst candidate = new RTCIceCandidate(_message);\r\n\t\tif (pc) {\r\n\t\t\tconsole.log(\"ICE candidate Added\");\r\n\t\t\tpc.addIceCandidate(candidate);\r\n\t\t}\r\n}\r\n\r\nconst sendICEcandidate = (event:any, sendMessage:(data:any)=>void, receiver:string, target:string) => {\r\n\t// When you find a null candidate then there are no more candidates.\r\n\t// Gathering of candidates has finished.\r\n\tif ( !event.candidate ) { return; };\r\n\t// Send the event.candidate onto the person you're calling.\r\n\t// Keeping to Trickle ICE Standards, you should send the candidates immediately.\r\n\tsendMessage({type:'ICEcandidate', receiver, data:{target, rtcMessage:event.candidate}})\r\n  }\r\n\r\nconst BAND_WIDTH = 8000\r\n\r\nconst optimizeSdp = (offerDescription:RTCSessionDescription)=>{\r\n\tvar arr = offerDescription.sdp.split('\\r\\n');\r\n\tarr.forEach((str:string, i:number) => {\r\n\t\tif (/^a=fmtp:\\d*/.test(str)) {\r\n\t\t\tarr[i] = str + `;x-google-max-bitrate=${BAND_WIDTH};x-google-min-bitrate=${BAND_WIDTH};x-google-start-bitrate=${BAND_WIDTH}`;\r\n\t\t} else if (/^a=mid:(0|video)/.test(str)) { // if with audio then 0=>1\r\n\t\t\tarr[i] += `\\r\\nb=AS:${BAND_WIDTH}`;\r\n\t\t}\r\n\t});\r\n  \treturn new RTCSessionDescription({\r\n    \ttype: offerDescription.type,\r\n    \tsdp: arr.join('\\r\\n'),\r\n  \t})\r\n}\r\n\r\nconst createOffer = async(pcRefCurrent:{pc?:typeof RTCPeerConnection, receiver:string}, sendMessage:(data:any)=>void, stream:typeof MediaStream, target:string, user?:{name:string})=>{\r\n\tstream && pcRefCurrent.pc.addStream( stream );\r\n\tconst offerDescription = optimizeSdp((await pcRefCurrent.pc.createOffer( sessionConstraints )));\r\n\tawait pcRefCurrent.pc.setLocalDescription( offerDescription );\r\n\tsendMessage({type:'call', receiver:pcRefCurrent.receiver, data:{target, name:user?.name, rtcMessage:offerDescription}})\r\n}\r\n\r\nexport const useLocalCam = (sendMessage:(data:any)=>void)=>{\r\n\tconst pcRef = useRef<Record<number,{pc:typeof RTCPeerConnection, receiver:string}>>({})\r\n\tconst [sender, setSender] = useState<string>()\r\n\tconst [_stream, setStream] = useState<MediaStream>()\r\n\tconst isPlay = useMemo(()=>_stream?true:false, [_stream])\r\n\tconst CustomRTCView = useCallback(React.memo(({style}:{style:any})=>(_stream?<RTCView stream={_stream} style={style} videoProps={{height:'100%'}} />:<></>)) , [_stream])\r\n\tconst start = useCallback(async(user:{name:string}, stream?:typeof MediaStream, mode?:'camera'|'display')=>{\r\n\t\tconsole.log(\"start\");\r\n\t\tif (!_stream || mode!==undefined) {\r\n\t\t\ttry {\r\n\t\t\t\tlet newStream:typeof MediaStream;\r\n\t\t\t\tif(mode == 'camera'){\r\n\t\t\t\t\tnewStream = await mediaDevices.getUserMedia(mediaConstraints)\r\n\t\t\t\t}\r\n\t\t\t\telse if (mode == 'display'){\r\n\t\t\t\t\tnewStream = await mediaDevices.getDisplayMedia(mediaConstraints)\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tnewStream = stream || await mediaDevices.getUserMedia(mediaConstraints).catch((e:any)=>mediaDevices.getDisplayMedia(mediaConstraints));\r\n\t\t\t\t}\r\n\t\t\t\tsetStream(newStream)\r\n\t\t\t\tObject.entries(pcRef.current).map(([k, v])=>{\r\n\t\t\t\t\tcreateOffer(v, sendMessage, newStream, 'guest', user)\r\n\t\t\t\t})\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.error(e);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [_stream])\r\n\tconst stop = useCallback(()=>{\r\n\t\tconsole.log(\"stop\");\r\n\t\tif(_stream){\r\n\t\t\t_stream.getTracks().map((track:any) => track.stop());\r\n\t\t\tsetStream(undefined)\r\n\t\t}\r\n\t}, [_stream])\r\n\treturn {\r\n\t\tstart,\r\n\t\tstop,\r\n\t\twebsocketOnMessage: async(response:any, user:{name:string})=>{\r\n\t\t\tlet type = response.type;\r\n\t\t\tif (type == 'connection'){\r\n\t\t\t\tsetSender(response.data.channel_name)\r\n\t\t\t}\r\n\t\t\tif (type == 'start' && response.data.target=='host'){\r\n\t\t\t  console.log('1 start')\r\n\t\t\t  const peerConnection = new RTCPeerConnection( peerConstraints );\r\n\t\t\t  peerConnection.addEventListener( 'icecandidate', (event:any) => sendICEcandidate(event, sendMessage, response.sender, 'guest'));\r\n\t\t\t  pcRef.current[response.sender] = {pc:peerConnection, receiver: response.sender}\r\n\t\t\t  createOffer(pcRef.current[response.sender], sendMessage, _stream, 'guest', user)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (type == \"answer\" && response.data.target == 'host'){\r\n\t\t\t  console.log('3 answer')\r\n\t\t\t  const peerConnection = pcRef.current[response.sender].pc\r\n\t\t\t  const answerDescription = new RTCSessionDescription(response.data.rtcMessage);\r\n\t\t\t  await peerConnection.setRemoteDescription( answerDescription );\r\n\t\t\t  // const streams = pcRef.current.pc.getRemoteStreams()\r\n\t\t\t  // setMirrorStream(streams[streams.length - 1])\r\n\t\t\t}\r\n\t\t\tif (type == \"ICEcandidate\" && response.data.target=='host'){\r\n\t\t\t\tconst peerConnection = pcRef.current[response.sender].pc\r\n\t\t\t\tonICEcandidate(peerConnection, response)\r\n\t\t\t}\r\n\t\t},\r\n\t\tCustomRTCView,\r\n\t\tisPlay,\r\n\t\tsender,\r\n\t\t// renderMirrorView,\r\n\t}\r\n}\r\n\r\nexport const useRemoteCam = (sendMessage:(data:any)=>void)=>{\r\n\tconst pcRef = useRef<{pc?:RTCPeerConnection, receiver?:string, statsInterval?:any}>({})\r\n\tconst [user, setUser] = useState<{name:string}>()\r\n\tconst [_stream, setStream] = useState<MediaStream>()\r\n\tconst CustomRTCView = useCallback(React.memo((style:any)=>_stream?<RTCView stream={_stream} style={style} videoProps={{height:'100%'}} />:<></>), [_stream])\r\n\tconst isPlay = useMemo(()=>_stream?true:false, [_stream])\r\n\tconst start = useCallback((receiver:string)=>{\r\n\t\tconsole.log(\"start\");\r\n\t\tif (!pcRef.current.pc) {\r\n\t\t  pcRef.current.pc = new RTCPeerConnection( peerConstraints );\r\n\t\t  pcRef.current.receiver = receiver\r\n\t\t}\r\n\t\tif (!_stream){\r\n\t\t\tsendMessage({type:'start', receiver, data:{'target': 'host'}})\r\n\t\t}\r\n\t}, [_stream])\r\n\tconst stop = () => {\r\n\t\tconsole.log(\"stop\");\r\n\t\tif (pcRef.current.pc) {\r\n\t\t  // peerConnection._unregisterEvents();\r\n\t\t  setStream(undefined)\r\n\t\t  pcRef.current.pc.close();\r\n\t\t  pcRef.current.pc = undefined\r\n\t\t  pcRef.current.receiver = undefined\r\n\t\t  clearInterval(pcRef.current.statsInterval)\r\n\t\t}\r\n\t}\r\n\treturn {\r\n\t\tstart,\r\n\t\tstop,\r\n\t\twebsocketOnMessage: async(response:any)=>{\r\n\t\t\tlet type = response.type;\r\n\t\t\tif (type == 'start' && response.data.target=='guest' && response.sender == pcRef.current?.receiver){\r\n\t\t\t\tconsole.log('(remote)1 start')\r\n\t\t\t\tconst peerConnection = pcRef.current.pc\r\n\t\t\t\tsetUser({name: response.data.name})\r\n\t\t\t\tpeerConnection.addEventListener('icecandidate', (event:any) => sendICEcandidate(event, sendMessage, response.sender, 'host'));\r\n\t\t\t\tpeerConnection.addEventListener('iceconnectionstatechange', (e:any)=>{\r\n\t\t\t\t\tif (pcRef.current.pc.iceConnectionState == 'connected'){\r\n\t\t\t\t\t\tlet activeStream = false\r\n\t\t\t\t\t\tpcRef.current.statsInterval = setInterval(async()=>{\r\n\t\t\t\t\t\t\tconst stats = await pcRef.current.pc.getStats(null)\r\n\t\t\t\t\t\t\tlet statsOutput = \"\";\r\n\t\t\t\t\t\t\tlet framePerSecond = undefined\r\n\t\t\t\t\t\t\tstats.forEach((report:any) => {\r\n\t\t\t\t\t\t\t\tif (report.type === \"inbound-rtp\" && report.kind === \"video\") {\r\n\t\t\t\t\t\t\t\t\tObject.keys(report).forEach((statName) => {\r\n\t\t\t\t\t\t\t\t\t\tstatsOutput += `${statName}: ${report[statName]}\\n`;\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tframePerSecond = report.framesPerSecond\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tconsole.log(activeStream, framePerSecond)\r\n\t\t\t\t\t\t\tif (framePerSecond != undefined){\r\n\t\t\t\t\t\t\t\tactiveStream = true\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (activeStream){\r\n\t\t\t\t\t\t\t\tstop()\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tconsole.log(new Date().toTimeString().split(' ')[0], statsOutput)\r\n\t\t\t\t\t\t}, 1000);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (pcRef.current.pc.iceConnectionState == 'failed'){\r\n\t\t\t\t\t\tstop()\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t// peerConnection.addTransceiver('audio', {\r\n\t\t\t\t// \tdirection: 'recvonly'\r\n\t\t\t\t// });\r\n\t\t\t\tpeerConnection.addTransceiver('video', {\r\n\t\t\t\t\tdirection: 'recvonly'\r\n\t\t\t\t});\r\n\t\t\t\tawait createOffer({pc:pcRef.current.pc, receiver:response.sender}, sendMessage, _stream, 'host', user)\r\n\t\t\t}  \r\n\t\t\tif (type == \"answer\" && response.data.target=='guest' && response.sender == pcRef.current?.receiver){\r\n\t\t\t\tconsole.log('(remote)3 answer')\r\n\t\t\t\tconst answerDescription = new RTCSessionDescription(response.data.rtcMessage);\r\n\t\t\t\tawait pcRef.current.pc.setRemoteDescription( answerDescription );\r\n\t\t\t\tconst streams = pcRef.current.pc.getRemoteStreams()\r\n\t\t\t\tsetStream(streams[streams.length - 1])\r\n\t\t\t\tsendMessage({type:'end', receiver:pcRef.current.receiver, data:{}})\r\n\t\t\t}\r\n\t\t\tif (type == \"call\" && response.sender == pcRef.current?.receiver){\r\n\t\t\t  console.log('2 call')\r\n\t\t\t  const peerConnection = pcRef.current.pc\r\n\t\t\t  setUser({name:response.data.name})\r\n\t\t\t  if (!peerConnection)\r\n\t\t\t\treturn\r\n\t\t\t  peerConnection.addEventListener( 'icecandidate', (event:any) => sendICEcandidate(event, sendMessage, response.sender, 'host'));\r\n\t\t\t  const offerDescription = new RTCSessionDescription(response.data.rtcMessage);\r\n\t\t\t  await peerConnection.setRemoteDescription( offerDescription );\r\n\t\t\t  const answerDescription = await peerConnection.createAnswer( sessionConstraints );\r\n\t\t\t  await peerConnection.setLocalDescription( answerDescription );\r\n\t\t\t  sendMessage({type:'answer', receiver:pcRef.current.receiver, data:{target:'host', rtcMessage:peerConnection.localDescription}})\r\n\t\t\t  // Here is a good place to process candidates.\r\n\t\t\t  const streams = pcRef.current.pc.getRemoteStreams()\r\n\t\t\t  setStream(streams[streams.length - 1])\r\n\t\t\t}\r\n\t\t\tif (type == \"ICEcandidate\" && response.data.target=='guest' && response.sender == pcRef.current?.receiver)\r\n\t\t\t  onICEcandidate(pcRef.current.pc, response)\r\n\t\t},\r\n\t\tCustomRTCView,\r\n\t\tuser,\r\n\t\tisPlay\r\n\t}\r\n}","import {StyleSheet} from \"react-native\";\r\nexport {useLocalCam, useRemoteCam} from \"./p2p\"\r\n\r\nexport const camStyle = StyleSheet.create({\r\n\tcontainer:{ flex: 1},\r\n\tcam:{ flex: 1, height:'100%'},\r\n\tbottonContainer: {position:\"absolute\", bottom:0, justifyContent:'flex-end'},\r\n\tbuttonBar: { flexDirection: \"row\", justifyContent: \"space-around\" },\r\n\tlabel: {backgroundColor:'#0008', color:'white', paddingHorizontal:5},\r\n})","import React, { useEffect } from \"react\";\r\nimport {Button, View, Text} from \"react-native\";\r\nimport useWebsocketContext from \"./useWebsocketContext\";\r\nimport { useLocalCam, camStyle} from \"./webrtc\";\r\n\r\n\r\nexport default (props:{user?:{name:string}|null, mode?:'camera'|'display'|null})=>{\r\n  const {lastJsonMessage, sendJsonMessage} = useWebsocketContext()\r\n  const {start, stop, websocketOnMessage, CustomRTCView, isPlay} = useLocalCam(sendJsonMessage)\r\n  useEffect(()=>{\r\n    props.user && lastJsonMessage && websocketOnMessage(lastJsonMessage, props.user)\r\n  }, [lastJsonMessage, props.user])\r\n  useEffect(()=>{\r\n    if(props.mode && !isPlay){\r\n      props.user && start(props.user, undefined, props.mode)\r\n    }\r\n    else if(props.mode===null && isPlay){\r\n      stop()\r\n    }\r\n    return ()=>{isPlay && stop()}\r\n  }, [isPlay, props.user, props.mode])\r\n  return (\r\n    <View style={camStyle.container}>\r\n      <CustomRTCView style={camStyle.cam}/>\r\n      <View style={camStyle.bottonContainer}>\r\n        <View style={camStyle.buttonBar}>  \r\n        </View>\r\n        <View style={{flexDirection:'row'}}><Text style={camStyle.label}>{props.user?.name}</Text></View>\r\n        <View style={camStyle.buttonBar}>\r\n          {props.mode === undefined && !isPlay && <Button title=\"Start\" onPress={()=>props.user && start(props.user)} />}\r\n          {props.mode === undefined && isPlay && <Button title=\"Stop\" onPress={stop} />}\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n","import React, { useState, useEffect, } from \"react\";\r\nimport {Button,Text, TextInput, View} from \"react-native\";\r\nimport useWebsocketContext from \"./useWebsocketContext\";\r\nimport { useRemoteCam, camStyle} from \"./webrtc\";\r\n\r\nexport default (props:{receiver?:string})=>{\r\n  const [receiver, setReceiver] = useState('')\r\n  const {lastJsonMessage, sendJsonMessage} = useWebsocketContext()\r\n  const {start, stop, websocketOnMessage, CustomRTCView, isPlay, user} = useRemoteCam(sendJsonMessage)\r\n  useEffect(()=>{\r\n    lastJsonMessage && websocketOnMessage(lastJsonMessage)\r\n  }, [lastJsonMessage])\r\n  useEffect(()=>{\r\n    if(props.receiver){\r\n      start(props.receiver)\r\n    }\r\n    return ()=>stop()\r\n  }, [props.receiver])\r\n  return (\r\n    <View style={camStyle.container}>\r\n      <CustomRTCView style={camStyle.cam}/>\r\n      <View style={camStyle.bottonContainer}>\r\n        <View style={camStyle.buttonBar}>\r\n        </View>\r\n        <View style={{flexDirection:'row'}}>{\r\n          (props.receiver || isPlay)?\r\n          <Text style={camStyle.label}>{user?.name || 'loading...'}</Text>:\r\n          <>\r\n            <Text style={{borderWidth:1}}>Receiver:&nbsp;</Text>\r\n            <TextInput style={{borderWidth:1, flex:1}} value={receiver} onChangeText={setReceiver}/>\r\n          </> \r\n        }</View>\r\n        <View style={camStyle.buttonBar}>\r\n          {props.receiver === undefined && !isPlay && <Button title=\"Start\" onPress={()=>start(receiver)} />}\r\n          {props.receiver === undefined && isPlay && <Button title=\"Stop\" onPress={stop} />}\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport { StyleSheet, View } from 'react-native';\r\nimport { View as ThemedView } from '../../../components/Themed' \r\nimport Colors from '../../../constants/Colors';\r\nimport {default as useRtcContext, WebSocketProvider as RtcProvider} from \"../../../lib/react-native-webrtc/useWebsocketContext\";\r\nimport LocalCam from '../../../lib/react-native-webrtc/LocalCam';\r\nimport RemoteCam from '../../../lib/react-native-webrtc/RemoteCam';\r\nimport useResizeWindow from '../../../hooks/useResizeWindow';\r\nimport useAuthContext from '../../../hooks/useAuthContext';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\nimport CommonButton from '../../../components/CommonButton';\r\n\r\ntype VideoType = 'camera'|'display'|null\r\ntype VideoCallProps = {channel_id:number, setDisable:(disable:boolean)=>void, disable?:boolean}\r\n\r\n\r\nconst VideoView = (props:{\r\n  scale:string,\r\n  focusGuest?:string,\r\n  setFocusGuest:(focusGuest?:string)=>void\r\n  receiver?:string\r\n  children:React.ReactNode\r\n})=>{\r\n  return <View style={[{maxWidth:props.scale, maxHeight:props.scale, borderWidth:1, borderColor:Colors.borderColor, backgroundColor:'gray', flexDirection:'row', flexGrow:1}, (props.focusGuest == undefined || props.focusGuest == props.receiver)?{}:{width:0, height:0}]}>\r\n    <TouchableOpacity style={{flex:1}} containerStyle={{flex:1, justifyContent:'center'}} onPress={()=>props.setFocusGuest(props.focusGuest?undefined:props.receiver)}>\r\n    {props.children}\r\n    </TouchableOpacity>\r\n  </View>\r\n    \r\n  \r\n}\r\n\r\nconst VideoCallContainer = ({channel_id, disable, setDisable}:VideoCallProps)=>{\r\n  const {auth} = useAuthContext()\r\n  const [videoMode, setVideoMode] = useState<VideoType>(null)\r\n  const [guests, setGuests] = useState<string[]>([])\r\n  const [focusGuest, setFocusGuest] = useState<string>()\r\n  const windowType = useResizeWindow()\r\n  const { lastJsonMessage, sendJsonMessage } = useRtcContext()\r\n  useEffect(()=>{\r\n    if(lastJsonMessage !=null){\r\n      if(lastJsonMessage['type']=='connection'){\r\n        sendJsonMessage({'type':'broadcast', 'data':{'channel_id':channel_id}})\r\n      }\r\n      if(lastJsonMessage['type']=='broadcast_guest' || lastJsonMessage['type']=='broadcast_host'){\r\n        setGuests([...guests, lastJsonMessage['sender']])\r\n      }\r\n      if(lastJsonMessage['type']=='broadcast_disconnect'){\r\n        const channel_name = lastJsonMessage['sender']\r\n        const exist = guests.find(v=>v == channel_name)\r\n        exist && setGuests(guests.filter(v=>v != channel_name))\r\n      }\r\n    }\r\n  }, [lastJsonMessage])\r\n  const scale = focusGuest?'100%':`${100 / Math.max(2, Math.ceil(Math.sqrt(guests.length + 1)))}%`\r\n  const toggleVideoMode = (mode:VideoType)=>{\r\n    setVideoMode(videoMode!=mode?mode:null)\r\n  }\r\n  return lastJsonMessage !==undefined ?\r\n    <ThemedView style={[\r\n      {aspectRatio:!disable?16/9:0, borderColor:Colors.borderColor, borderRadius:10},\r\n      windowType=='landscape'?{flexShrink:0.5, height:'100%', borderLeftWidth:1, paddingBottom:65}:{maxHeight:'36%', width:'100%', borderBottomWidth:1}\r\n    ]}>\r\n      <View style={{aspectRatio:16/9, backgroundColor:'white', flexWrap:'wrap', flexDirection:'row', width:'100%', height:'100%'}}>\r\n        {guests.map((receiver, i)=><VideoView scale={scale} focusGuest={focusGuest} setFocusGuest={setFocusGuest} receiver={receiver}>\r\n          <RemoteCam receiver={receiver}/>\r\n        </VideoView>\r\n        )}\r\n        <VideoView scale={scale} focusGuest={focusGuest} setFocusGuest={setFocusGuest} receiver={auth.user?.name}>\r\n          <LocalCam user={auth.user} mode={videoMode}/>\r\n        </VideoView>\r\n      </View>\r\n      <ThemedView style={[\r\n          {position:'absolute', alignItems:'center', justifyContent:'flex-end', width:'100%',flexDirection:'row'},\r\n          windowType=='landscape'?{bottom:0, paddingVertical:15, paddingHorizontal:19}:{backgroundColor:'transparent'}\r\n        ]}>\r\n        <CommonButton title={'⏺️'} onPress={()=>toggleVideoMode('camera')}/>\r\n        <CommonButton title={'🖥️'} onPress={()=>toggleVideoMode('display')}/>\r\n        <CommonButton title={'📹'} onPress={()=>setDisable(true)}/>\r\n      </ThemedView>\r\n    </ThemedView>:\r\n  <></>\r\n  }\r\n  \r\nexport default React.memo(({channel_id, disable, setDisable}:VideoCallProps)=>{\r\n  return <RtcProvider disable={disable}>\r\n    <VideoCallContainer channel_id={channel_id} disable={disable} setDisable={setDisable}/>\r\n  </RtcProvider>\r\n})\r\n","import React from 'react'\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport CommonSection from \"./CommonSection\"\r\nimport { Linking, TextStyle } from \"react-native\"\r\nimport { FontAwesome } from '@expo/vector-icons'; \r\nimport { View, Text } from \"./Themed\"\r\nimport { File } from \"../types\"\r\nimport useColorScheme from '../hooks/useColorScheme';\r\n\r\nfunction humanFileSize(size:number) {\r\n    var i = size == 0 ? 0 : Math.floor(Math.log(size) / Math.log(1024));\r\n    return (size / Math.pow(1024, i)).toFixed(2) + ' ' + ['B', 'kB', 'MB', 'GB', 'TB'][i];\r\n  }\r\n  \r\n\r\nexport default ({file, isMobile, showBorder}:{file:File, isMobile:boolean, showBorder:boolean})=>{\r\n    const theme = useColorScheme()\r\n    return <CommonSection containerStyle={{marginHorizontal:0}} bodyStyle={showBorder?{padding:10}:{borderWidth:0, padding:0}}>\r\n    <TouchableOpacity onPress={()=>Linking.openURL(file.file)} style={{flexDirection:'row', alignItems:'flex-start'}} containerStyle={{width:'100%'}}>\r\n        <FontAwesome name=\"file-o\" size={20} color={theme=='light'?'black':'white'} />\r\n        <View style={{flex:1, marginHorizontal:10}}>\r\n            <Text style={{fontSize:18}}>{file.filename}</Text>\r\n            <Text style={{fontSize:14}}>{humanFileSize(file.filesize)}</Text>\r\n        </View>\r\n    </TouchableOpacity>\r\n    </CommonSection>\r\n}","import React, {useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState} from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { Platform, StyleSheet, View } from 'react-native';\r\nimport CommonSection from '../../../components/CommonSection';\r\nimport { FlatList, TextInput } from 'react-native-gesture-handler';\r\nimport CommonButton from '../../../components/CommonButton';\r\nimport useMessengerContentList, { MessengerContentPage, useMessengerContentMutation } from '../../../hooks/lists/useMessengerContent.List';\r\nimport useAuthContext from '../../../hooks/useAuthContext';\r\nimport HeaderRight from '../../../components/HeaderRight';\r\nimport useMessengerMemberList, { useMessengerMemberMutation } from '../../../hooks/lists/useMessengerMemberList';\r\nimport { navigate } from '../../../navigation';\r\nimport Colors from '../../../constants/Colors';\r\nimport useColorScheme from '../../../hooks/useColorScheme';\r\nimport { Text, View as ThemedView } from '../../../components/Themed' \r\nimport Hyperlink from 'react-native-hyperlink'\r\nimport useMessengerChannelList from '../../../hooks/lists/useMessengerChannelList';\r\nimport useIsMobile from '../../../hooks/useIsMobile';\r\nimport LinkPreview from '../../../components/LinkPreview';\r\nimport Avatar from '../../../components/Avatar';\r\nimport VideoCallSection from './VideoCallSection';\r\nimport useResizeWindow from '../../../hooks/useResizeWindow';\r\nimport FilePreview from '../../../components/FilePreview';\r\nimport useModalsContext from '../../../hooks/useModalsContext';\r\nimport InviteModal from '../../../modals/InviteModal';\r\nimport useLangContext from '../../../hooks/useLangContext';\r\n\r\n\r\nfunction uploadFile(){\r\n  return new Promise<Blob|undefined>((resolve, reject)=>{\r\n    if (Platform.OS == 'web'){\r\n      var input = document.createElement('input');\r\n      input.type = 'file';\r\n      input.onchange = e => { \r\n        resolve((e.target as any).files[0])\r\n      }\r\n      input.onabort = reject\r\n      input.onerror = reject\r\n      input.click();\r\n    }\r\n    else\r\n      resolve(undefined)\r\n  })\r\n}\r\n\r\nconst MessengerContentPageItem = React.memo((props:MessengerContentPage & {ownerId?:number})=>{\r\n  const isMobile = useIsMobile()\r\n  let nextPage = props.next;\r\n    while(nextPage?.next && nextPage.current.length==0){\r\n      nextPage = nextPage.next\r\n    }\r\n    const nextContent = nextPage?.current[0]\r\n    return <View style={{flexDirection: 'column-reverse'}}>\r\n      \r\n      {props.current.map((content, index2)=>{\r\n        const next = index2 + 1 < props.current.length?props.current[index2+1]:nextContent\r\n        const created:string = content.created.slice(0, 16)\r\n        const date = created.slice(0, 10)\r\n        const isSystem = content.user == null\r\n        const isFirst = next==undefined || (content.user != next.user || created != next.created.slice(0, 16))\r\n        const isSelf = props.ownerId == content.user\r\n        const dayChanged = next==undefined || date != next.created.slice(0, 10)\r\n        const message = content.message_set[0]\r\n        if (isSystem)\r\n          return <View key={content.id} style={{flexDirection:'row', justifyContent:'center', width:'100%', marginVertical:5}}>\r\n            <Text>{message.content}</Text>\r\n          </View>\r\n        return <View key={content.id}>\r\n          {dayChanged?<View style={{flexDirection:'row', justifyContent:'center', width:'100%'}}><Text>{date}</Text></View>:undefined}\r\n          <View key={content.id} style={{flexDirection:'row', justifyContent:isSelf?'space-between':'flex-start', width:'100%'}}>\r\n            {isFirst && !isSelf? <View style={{marginTop:3, marginLeft:12}}><Avatar name={content.name} userId={content.user} size={36}/></View>:<View style={{width:48}}/>}\r\n            <CommonSection outerContainerStyle={{width:undefined, maxWidth:'90%'}} title={isFirst?content.name:undefined} titleStyle={{flex:undefined}} bodyStyle={{padding:10}} subtitle={`${created.slice(11)}`}>\r\n              {/* @ts-ignore */}\r\n              <Hyperlink linkDefault={ true } style={{wordBreak:\"break-word\"}} linkStyle={{color: '#12b886'}}>\r\n                <Text selectable>{message.content}</Text>\r\n              </Hyperlink>\r\n              {content.file_set.map((file, fileIndex)=><FilePreview key={fileIndex} file={file} isMobile={isMobile} showBorder={content.file_set.length>1 || message.content.length>0}/>)}\r\n              {content.link_set.map((link, linkIndex)=><LinkPreview key={linkIndex} link={link} isMobile={isMobile}/>)}              \r\n            </CommonSection>\r\n          </View>\r\n        </View>\r\n      })}\r\n    </View>\r\n\r\n})\r\n\r\nexport default function ChatScreen({navigation, route}: StackScreenProps<any, 'Chat'>) {\r\n  const { lang } = useLangContext()\r\n  const channel_id = route?.params?.id\r\n  const height = useRef(0)\r\n  const inputRef = useRef<TextInput>(null)\r\n  const {auth} = useAuthContext()\r\n  const { setModal } = useModalsContext()\r\n  const channel = useMessengerChannelList(auth)?.find(v=>v.id==parseInt(channel_id))\r\n  const {data, fetchNextPage } = useMessengerContentList(channel_id)\r\n  const memberList = useMessengerMemberList(channel_id)\r\n  const member_id = useMemo(()=>memberList?.find(v=>v.user == auth.user?.id)?.id, [auth, memberList])\r\n  const windowType = useResizeWindow()\r\n  const messengerMemberMutation = useMessengerMemberMutation()\r\n  const [value, setValue] = useState('')\r\n  const [autoFocus, setAutoFocus] = useState(true)\r\n  const [videoMode, setVideoMode] = useState<boolean>(false)\r\n  const theme = useColorScheme()\r\n  const postValue = ()=>{\r\n    if (value.length>0){\r\n      contentMutation.create({channel:channel_id, user:auth.user?.id, content:value})\r\n      setValue('')\r\n      setAutoFocus(true)\r\n    }\r\n  }\r\n  const contentMutation = useMessengerContentMutation()\r\n\r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      headerRight: ()=> <HeaderRight extra={[\r\n        {title:lang('invite'), onPress:()=>setModal(InviteModal, {id:channel_id})},\r\n        {title:lang('leave'), onPress:()=>{member_id && messengerMemberMutation.leave(member_id).then(back)}}\r\n      ]}/>,\r\n      title: channel?.name\r\n    });\r\n  }, [navigation, route, member_id]);\r\n\r\n  const renderItem = useCallback(({item, index}:{item:MessengerContentPage, index:number})=><MessengerContentPageItem {...item} ownerId={auth.user?.id}/>, [auth])\r\n  \r\n  const back = ()=>{\r\n    if(navigation.canGoBack())\r\n        navigation.goBack()\r\n      else{\r\n        navigation.navigate('HomeScreen', {tab:2})\r\n      }\r\n  }\r\n  useEffect(()=>{\r\n    if (!(channel_id))\r\n      back()\r\n  }, [])\r\n  useEffect(()=>{\r\n    if(autoFocus){\r\n      (inputRef.current as any).focus()\r\n      setAutoFocus(false)\r\n    }\r\n  }, [autoFocus])\r\n\r\n  return <View style={{flex:1, alignItems:'center', flexDirection:windowType=='landscape'?'row-reverse':'column'}}>\r\n    <VideoCallSection channel_id={channel_id} setDisable={(d)=>setVideoMode(!d)} disable={!videoMode}/>\r\n    <View style={[{flex:videoMode?undefined:1, flexShrink:1}, windowType=='landscape'?{minWidth:320, height:'100%'}:{width:'100%'}]}>\r\n      <FlatList\r\n        style={{flexDirection: 'column-reverse'}}\r\n        contentContainerStyle={{padding:10, flexGrow:1, flexDirection: 'column-reverse'}}\r\n        data={data?.pages}\r\n        renderItem={renderItem}\r\n        onScroll={(e)=>{\r\n          if (e.nativeEvent.contentOffset.y + e.nativeEvent.contentSize.height - height.current < 1)\r\n            fetchNextPage()\r\n        }}\r\n        onLayout={(p)=>{height.current = p.nativeEvent.layout.height}}\r\n      />\r\n      <ThemedView style={{bottom:0, alignItems:'center', width:'100%',flexDirection:'row', paddingTop:15, paddingBottom:10, paddingHorizontal:19}}>\r\n        <TextInput ref={inputRef} value={value} onChangeText={setValue} style={{\r\n          flex:1, borderWidth:1, height:40, borderRadius:6, borderColor:Colors.borderColor, backgroundColor:Colors[theme].background, color:Colors[theme].text\r\n        }} onSubmitEditing={postValue} blurOnSubmit={true}/>\r\n        <CommonButton title={'💬'} onPress={postValue}/>\r\n        <CommonButton title={'📤'} onPress={()=>uploadFile().then(f=>{\r\n          contentMutation.create({channel:channel_id, user:auth.user?.id, content:'', file:f})\r\n        })}/>\r\n        {!videoMode && <CommonButton title={'📹'} onPress={()=>setVideoMode(!videoMode)}/>}\r\n      </ThemedView>\r\n    </View>\r\n  </View>\r\n}","import React, {useCallback, useRef} from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { StyleSheet, Text, Button, View} from 'react-native';\r\n\r\n\r\nexport default function TabOneScreen({\r\n  navigation\r\n}: StackScreenProps<any, 'TabOne'>) {\r\n  return <View style={{padding:10}}>\r\n    \r\n  </View>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  Panel_Button_Text: {\r\n    textAlign: 'center',\r\n    color: '#fff',\r\n    fontSize: 21\r\n  },\r\n  Panel_Holder: {\r\n    borderWidth: 1,\r\n    borderColor: '#888',\r\n    marginVertical: 5\r\n  }\r\n})","import React, {useEffect, useLayoutEffect, useState} from 'react';\r\n\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport useAuthContext from '../../hooks/useAuthContext';\r\nimport useMessengerChannelList from '../../hooks/lists/useMessengerChannelList';\r\nimport { Text } from '../../components/Themed';\r\nimport { useMessengerMemberMutation } from '../../hooks/lists/useMessengerMemberList';\r\n\r\nexport default function InviteeScreen({navigation, route}: StackScreenProps<any, 'Invitee'>) {\r\n    const id = route?.params?.id\r\n    const {auth, dispatch} = useAuthContext()\r\n    const [enterGuest, setEnterGuest] = useState(false)\r\n    const channelList = useMessengerChannelList(auth)\r\n    const messengerMemberMutation = useMessengerMemberMutation()\r\n    useLayoutEffect(() => {\r\n        navigation.setOptions({headerRight: undefined});\r\n    }, []);\r\n    useEffect(()=>{\r\n        if(auth.user==null && enterGuest==false){\r\n            dispatch({type:\"LOGIN_GUEST\"})\r\n            setEnterGuest(true)\r\n        }\r\n        else if(auth.user && channelList!==undefined){\r\n            if(channelList.find(v=>v.id==id) === undefined){\r\n                console.log(`invite processing (channel:${id})`)\r\n                messengerMemberMutation.invite({\r\n                    channel_id:id,\r\n                    user_ids:[auth.user.id]\r\n                }).then(()=>navigation.replace(\"ChatScreen\", {id}))\r\n            }\r\n            else{\r\n                console.log('already invite')\r\n                navigation.replace(\"ChatScreen\", {id})\r\n            }\r\n        }\r\n    }, [auth, channelList, enterGuest])\r\n  return <Text>{'초대중'}</Text>\r\n};\r\n","import LoginScreen from \"./main/LoginScreen\";\r\nimport ChatScreen from \"./main/ChatScreen\";\r\nimport HomeScreen from \"./main/HomeScreen\";\r\nimport TabOneScreen from \"./main/TabOneScreen\";\r\nimport InviteeScreen from \"./main/InviteeScreen\";\r\n// import BoardScreen from \"../lib/blacktokki-board/BoardScreen\";\r\n// import BoardEditScreen from \"../lib/blacktokki-board/BoardEditScreen\";\r\nimport { Screens } from \"../types\";\r\n\r\nexport const main = {\r\n    HomeScreen:{\r\n        title:'home',\r\n        component:HomeScreen,\r\n        path:'home',\r\n    },\r\n    ChatScreen:{\r\n        title:'chat',\r\n        component:ChatScreen,\r\n        path:'chat'\r\n    },\r\n    // BoardScreen:{\r\n    //     title:'board',\r\n    //     component:BoardScreen,\r\n    //     path:'board'\r\n    // },\r\n    TabOneScreen:{\r\n        title:'tab one',\r\n        component:TabOneScreen,\r\n        path:'one'\r\n    },\r\n    InviteeScreen:{\r\n        title: '',        \r\n        component:InviteeScreen,\r\n        path:'invitee'\r\n    }\r\n} as Screens\r\n\r\nexport const login = {\r\n    LoginScreen:{\r\n        path: 'login',\r\n        title: 'Sign in',\r\n        component:LoginScreen\r\n    },\r\n    InviteeScreen:{\r\n        path:'invitee',\r\n        title: '',\r\n        component:InviteeScreen\r\n    }\r\n} as Screens\r\n\r\nexport const modal = {\r\n    // BoardEditScreen:{\r\n    //     title:'board',\r\n    //     component:BoardEditScreen,\r\n    //     path:'modal/board'\r\n    // },\r\n} as Screens","import React, {useState, useEffect, useLayoutEffect} from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { StyleSheet, Text, View} from 'react-native';\r\nimport { Text as StyledText } from 'react-native-paper';\r\nimport { Appearance, useColorScheme as useConfigColorScheme} from 'react-native-appearance';\r\nimport {TabViewNavigator} from '../../navigation/DrawerNavigator';\r\nimport useResizeWindow from '../../hooks/useResizeWindow';\r\nimport { bottomTabs } from '../../tabs';\r\nimport HeaderRight from '../../components/HeaderRight';\r\nimport TextButton from '../../components/TextButton';\r\nimport Colors from '../../constants/Colors';\r\nimport useColorScheme, { setColorScheme } from '../../hooks/useColorScheme';\r\nimport useModalsContext from '../../hooks/useModalsContext';\r\nimport ChannelEditModal from '../../modals/ChannelEditModal';\r\nimport useLangContext from '../../hooks/useLangContext';\r\n\r\n// navigate(\"BoardEditScreen\", {channel_id:item.channel, id:item.id})\r\n// deleteBoardContent(item.id).then(()=>navigate('BoardScreen', {id:item.channel}))\r\n\r\nexport default function HomeScreen({navigation, route}: StackScreenProps<any, 'Home'>) {\r\n  const { lang, locale, setLocale } = useLangContext()\r\n  const windowType = useResizeWindow();\r\n  const theme = useColorScheme()\r\n  const configTheme = useConfigColorScheme()\r\n  const { setModal } = useModalsContext()\r\n  const [ home, setHome ] = useState(windowType == 'landscape')\r\n  const color = Colors[theme].text\r\n  const options = [\r\n    {title:lang('member'), headerRight:()=><HeaderRight/>},\r\n    {title:lang('messenger'), headerRight:()=><HeaderRight extra={[{title:lang('create'), onPress:()=>setModal(ChannelEditModal, {type:'messenger'})}]}/>},\r\n    // {title:'board', headerRight:()=><HeaderRight extra={[{title:'create', onPress:()=>setModal(ChannelEditModal, props:{type:'board'}}) }]}/>},\r\n    {title:'config', headerRight:()=><HeaderRight/>}\r\n  ]\r\n  \r\n  useLayoutEffect(() => {\r\n    const index = route?.params?.tab | 0\r\n    navigation.setOptions(windowType == 'portrait'?options[index]:{\r\n      title: lang('home'),\r\n      headerRight: ()=><HeaderRight/>\r\n    });\r\n  }, [navigation, route, windowType]);\r\n  useEffect(()=>{\r\n    setHome(windowType == 'landscape')\r\n  }, [windowType])\r\n  return home?\r\n    <View style={{flex:1, justifyContent:'center', alignItems:'center'}}>\r\n      <View style={{width:'80%', height:'80%'}}>\r\n        <StyledText style={{fontSize:32, color}}>Tokki Tok</StyledText>\r\n        <View style={{backgroundColor:Colors.borderColor, height:1, width:'100%'}}/>\r\n        <View style={{flex:1, alignItems:'flex-start'}}>\r\n          {/* <Text style={{fontSize:20, color:'gray'}}>Welcome! This is a messenger for teams.</Text>*/}\r\n          <Text style={{fontSize:24}}> </Text>\r\n          <Text style={{fontSize:24, fontWeight:'500', color}}>{lang('Quick Start')}</Text>\r\n          <TextButton title={lang('+ New Messenger')} textStyle={{fontSize:20, color}} style={{paddingLeft:0, borderRadius:20}} onPress={()=>setModal(ChannelEditModal, {type:'messenger'})}/>\r\n          <Text style={{fontSize:20, fontWeight:'500', color}}>{lang('* Language Settings')}</Text>\r\n          <View style={{flexDirection:'row'}}>\r\n            {[[lang('Auto'), 'auto'], ['한국어', 'ko'], ['English', 'en']].map(([title, l])=><TextButton \r\n              key={title} title={title || ''} textStyle={{fontSize:16, color, textDecorationLine:locale==l?'underline':'none'}} style={{borderRadius:20}} onPress={()=>setLocale(l)}/>)}\r\n          </View>\r\n          <Text style={{fontSize:20, fontWeight:'500', color}}>{lang('* Skin Settings')}</Text>\r\n          <View style={{flexDirection:'row'}}>\r\n            {[[lang('Auto'), 'no-preference'], [lang('Light'), 'light'], [lang('Dark'), 'dark']].map(([title, colorScheme])=><TextButton \r\n              key={title} title={title} textStyle={{fontSize:16, color, textDecorationLine:configTheme==colorScheme?'underline':'none'}} style={{borderRadius:20}} onPress={(\r\n                )=>setColorScheme(colorScheme)}/>)}\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </View>:\r\n    <TabViewNavigator tabs={bottomTabs} tabBarPosition=\"bottom\" index={parseInt(route.params?.['tab'] || 0)} onTab={(index)=>{navigation.setParams({tab:index})}}/>\r\n}\r\n\r\n","import React, { Context, createContext,  useContext, useEffect, useState } from \"react\"\r\nimport useWebSocket from \"react-use-websocket\"\r\nimport { SendJsonMessage } from \"react-use-websocket/dist/lib/types\"\r\n// @ts-ignore\r\nimport {API_URL} from \"@env\"\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { AppState, AppStateStatus } from \"react-native\";\r\n\r\ntype WebsocketContextType = {lastJsonMessage:any, sendJsonMessage:SendJsonMessage }\r\nconst defaultContext = {lastJsonMessage:undefined, sendJsonMessage:()=>{}}\r\nconst WebSocketContext = createContext<WebsocketContextType>(defaultContext);\r\nconst [SCHEMA, DOMAIN] = `${API_URL}`.split('://')\r\n\r\nexport const WebSocketInternalProvider = ({children, path, Context, useBackground}:{children:React.ReactNode, path:string, Context:Context<WebsocketContextType>, useBackground?:boolean})=>{\r\n  const [token, setToken] = useState<string|null>(null)\r\n  const [isActive, setIsActive] = useState<boolean>(useBackground || AppState.currentState == 'active')\r\n  const { lastJsonMessage, sendJsonMessage } = useWebSocket(`${SCHEMA=='https'?'wss':'ws'}://${DOMAIN}/${path}`,{\r\n    shouldReconnect: (closeEvent) => true,\r\n    protocols: token?['Authorization',  token]:undefined,\r\n    onOpen: (e)=>{console.log(`success websocket connection(${path})`)},\r\n    onClose: (e)=> {console.log(`closed websocket connection(${path})`)},\r\n  }, isActive && token!=null)\r\n  useEffect(()=>{\r\n    AsyncStorage.getItem('Authorization').then(setToken)\r\n    const onChange = (nextState:AppStateStatus)=>setIsActive(useBackground || nextState == 'active')\r\n    AppState.addEventListener(\"change\", onChange)\r\n    return ()=>AppState.removeEventListener(\"change\", onChange)\r\n  }, [])\r\n  return <Context.Provider value={token!=null?{lastJsonMessage, sendJsonMessage}:defaultContext}>\r\n      {children}\r\n    </Context.Provider>\r\n}\r\n\r\nexport const WebSocketProvider = ({disable, children}:{disable?:boolean, children:React.ReactNode})=>{\r\n  return disable?<>{children}</>:<WebSocketInternalProvider path={'messenger/ws/'} Context={WebSocketContext}>\r\n    {children}\r\n  </WebSocketInternalProvider>\r\n}\r\n\r\nexport default ()=>{\r\n  const webSocketContext = useContext(WebSocketContext)\r\n  return webSocketContext\r\n}\r\n\r\n","import React, {useState, useEffect } from 'react';\r\nimport { StyleSheet } from 'react-native';\r\nimport CommonSection from '../components/CommonSection';\r\nimport { View, Text } from '../components/Themed';\r\nimport CommonButton from '../components/CommonButton';\r\n// import useBoardChannelList, { useBoardChannelMutation } from '../hooks/lists/useBoardChannelList';\r\nimport useAuthContext from '../hooks/useAuthContext';\r\nimport { navigate } from '../navigation';\r\nimport { Channel } from '../types';\r\nimport useMessengerChannelList, { useMessengerChannelMutation } from '../hooks/lists/useMessengerChannelList';\r\nimport TextField from '../components/TextField';\r\nimport useModalsContext from '../hooks/useModalsContext';\r\nimport useLangContext from '../hooks/useLangContext';\r\n\r\nexport default function ChannelEditModal({id, type}: {id?:number, type:string}) {\r\n  const { lang } = useLangContext()\r\n  const {auth} = useAuthContext()\r\n  const { setModal } = useModalsContext()\r\n  const channelList = useMessengerChannelList(auth)\r\n  const channelMutation = useMessengerChannelMutation()\r\n  const channel = channelList?.find(v=>v.id==id)\r\n  const [name, setName] = useState('')\r\n  const [description, setDescription] = useState('')\r\n  const back = ()=>{\r\n    setModal(ChannelEditModal, null)\r\n  }\r\n  useEffect(()=>{\r\n    if (channel){\r\n      setName(channel.name)\r\n      setDescription(channel?.description || '')\r\n    }\r\n  }, [channel])\r\n  return <CommonSection outerContainerStyle={{alignSelf:'center'}}>\r\n    <View style={{justifyContent:'space-around'}}>\r\n    <Text style={{fontSize:20}}>{lang('Channel')}</Text>\r\n    </View>\r\n    <View style={styles.separator} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />\r\n    <View style={{width:'100%'}}>\r\n      <TextField name={lang('Channel Name')} value={name} setValue={setName} width={'60%'}/>\r\n      <TextField name={lang('Description')} value={description} setValue={setDescription} multiline width={'60%'}/>\r\n    </View>\r\n    <View style={{width:'100%', flexDirection:'row', justifyContent:'flex-end'}}>\r\n      <CommonButton title={lang('save')} onPress={()=>{\r\n        if(auth?.user?.id && auth.groupId){\r\n          const newChannel:Channel = {id, name, description, type, owner:auth?.user?.id, group:auth.groupId};\r\n          (id?channelMutation.update(newChannel):channelMutation.create(newChannel)).then(v=>navigate(\"Main\", {\r\n            screen:v.type == 'messenger'?'MessengerScreen':'BoardScreen',\r\n            params:{id:v.id}\r\n          }))\r\n        }\r\n      }}/>\r\n      <CommonButton title={lang('cancel')} style={{marginHorizontal:5}} onPress={back}/>\r\n    </View>\r\n  </CommonSection>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  field:{\r\n    width:'50%',\r\n    flexDirection:'row',\r\n    padding:10,\r\n  },\r\n  separator: {\r\n    marginBottom: 20,\r\n    height: 1,\r\n    width: '100%',\r\n  },\r\n})","import { Notification } from '../types';\r\nimport axios from './axios';\r\n\r\nexport const getNotification = async (user_id:number)=>{\r\n    const data = (await axios.get(`/api/v1/notifications/?type=WEB&user=${user_id}`) ).data as Notification[]\r\n    return data.length?data[0]:undefined\r\n}\r\n\r\nexport const postNotification = async(notification:Notification)=>{\r\n    return (await axios.post(`/api/v1/notifications/`, notification)).data as Notification\r\n}\r\n\r\nexport const putNotification = async(notification:Notification)=>{\r\n    return (await axios.put(`/api/v1/notifications/${notification.id}/`, notification)).data as Notification\r\n}","import { Platform } from 'react-native';\r\n//@ts-ignore\r\nimport useMobileDetect from 'use-mobile-detect-hook';\r\n\r\nexport default ()=>{\r\n    const detectMobile = useMobileDetect();\r\n    return (detectMobile.isMobile() || Platform.OS == 'android' || Platform.OS == 'ios') as boolean\r\n}","import { useQuery } from \"react-query\";\r\nimport { getUserMembershipList } from \"../../apis\";\r\nimport { Auth } from \"../useAuthContext\";\r\n\r\nexport default function useUserMembershipList(auth?:Auth){\r\n  const { data } = useQuery([\"UserMembershipList\", auth?.groupId] , async()=>auth?.groupId?(await getUserMembershipList(auth?.groupId)):[])\r\n  return data\r\n}","import * as React from 'react';\r\nimport { View } from './Themed';\r\nimport { StyleSheet, StyleProp, ViewStyle, TextStyle, Pressable } from 'react-native';\r\nimport Colors from '../constants/Colors';\r\n\r\nexport type ItemParamList = {\r\n    outerContainerStyle?:StyleProp<TextStyle>\r\n    containerStyle?:StyleProp<ViewStyle>\r\n    bodyStyle?:StyleProp<ViewStyle>\r\n    children?: React.ReactNode\r\n    onPress?: ()=>void\r\n}\r\n\r\nexport default function CommonItem(props:ItemParamList){\r\n  const [hover, setHover] = React.useState(false)\r\n  const [press, setPress] = React.useState(false)\r\n  return (\r\n    <Pressable\r\n      style={[styles.outerContainer ,props.outerContainerStyle, (press)?{backgroundColor:'rgb(242,242,242)'}:{}]}\r\n      onPressIn={()=>{setPress(true)}}\r\n      onPressOut={()=>{setPress(false);props.onPress?.()}}\r\n       //@ts-ignore\r\n       onHoverIn={()=>setHover(true)}\r\n       onHoverOut={()=>setHover(false)}\r\n    >\r\n        <View style={[styles.container ,props.containerStyle]}>\r\n            <View style={[styles.bodyView, props.bodyStyle]}>\r\n                <>{props.children}</>\r\n            </View>\r\n      </View>\r\n    </Pressable>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  outerContainer:{\r\n    width:'100%',\r\n    maxWidth:1080,\r\n    alignItems:'stretch',\r\n  },  \r\n  container: {\r\n      marginHorizontal:20,\r\n      backgroundColor:'transparent'\r\n    },\r\n    bodyView:{\r\n      width: '100%',\r\n      padding: 10,\r\n      minHeight: 40,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      borderBottomWidth:1,\r\n      borderColor:Colors.borderColor,\r\n      backgroundColor:'transparent'\r\n    }\r\n  });\r\n  ","import { useTheme } from '@react-navigation/native';\r\nimport React, { useState } from 'react';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport { TabView, SceneMap,NavigationState, SceneRendererProps, TabBar } from 'react-native-tab-view';\r\nimport Profile from '../components/Profile';\r\nimport TextButton from '../components/TextButton';\r\nimport Colors from '../constants/Colors';\r\nimport useResizeWindow from '../hooks/useResizeWindow';\r\nimport { drawerTabs } from '../tabs';\r\nimport { UserMembership } from '../types';\r\nimport useModalsContext from '../hooks/useModalsContext';\r\nimport ChannelEditModal from '../modals/ChannelEditModal';\r\nimport useLangContext from '../hooks/useLangContext';\r\n\r\nexport const TabViewNavigator = (props:{tabs:typeof drawerTabs, tabBarPosition:\"top\"|\"bottom\", index?:number, onTab?:(index:number)=>void})=>{\r\n  const { lang } = useLangContext()\r\n  const [index, setIndex] = React.useState(props.index || 0);\r\n  const entries = Object.entries(props.tabs)\r\n  const onTab = props.onTab\r\n  const icons = Object.assign({}, ...entries.map(([k, v])=>({[k]:v.icon})))\r\n  return <TabView\r\n    renderTabBar={(props:SceneRendererProps & {navigationState: NavigationState<any>})=>{\r\n      return <TabBar\r\n        {...props}\r\n        indicatorStyle={{ backgroundColor: \"#2196F3\" }}\r\n        style={{ backgroundColor:'white' }}\r\n        activeColor={'black'}\r\n        inactiveColor={'black'}\r\n        renderIcon={(scene)=>icons[scene.route.key]}\r\n        onTabPress={(scene)=>onTab?.(entries.findIndex(([k, v])=>k == scene.route.key))}\r\n      />\r\n    }}\r\n    navigationState={{ index, routes: entries.map(([k, v])=>({key:k, title:lang(v.title)}))}}\r\n    onIndexChange={setIndex}\r\n    renderScene={SceneMap(Object.assign({}, ...entries.map(([k, v])=>({[k]:v.component}))))}\r\n    tabBarPosition={props.tabBarPosition}\r\n  />\r\n}\r\n\r\n\r\nexport default ({user}:{user:UserMembership})=> {\r\n  const { colors } = useTheme();\r\n  const windowType = useResizeWindow();\r\n  const [index, setIndex] = useState(0);\r\n  const { setModal } = useModalsContext()\r\n  const onAddList = [\r\n    ()=>setModal(ChannelEditModal, {type:'messenger'}),\r\n    ()=>setModal(ChannelEditModal, {type:'board'})\r\n  ]\r\n  return <View style={windowType=='landscape'?[\r\n      styles.tabBar,\r\n      {\r\n        backgroundColor: colors.card,\r\n        borderTopColor: colors.border,\r\n      },\r\n      // tabBarStyle,\r\n    ]:{width:0}}\r\n    pointerEvents={false ? 'none' : 'auto'}\r\n  >\r\n    <Profile userId={user.id} username={user.username} name={user.name}/>\r\n    {windowType=='landscape' && <>\r\n      <View style={{flexDirection:'row-reverse'}}>\r\n          <TextButton title='+' textStyle={{fontSize:20}} style={{borderRadius:20}} onPress={onAddList[index]}/>\r\n      </View>\r\n      <View accessibilityRole=\"tablist\" style={styles.content}>\r\n        {Object.keys(drawerTabs).length>1 ? \r\n          <TabViewNavigator tabs={drawerTabs} tabBarPosition={\"top\"} onTab={setIndex}/>: \r\n          <View style={{borderTopWidth:1, flex:1, borderColor:colors.border}}>            \r\n            {Object.values(drawerTabs).map(drawerTab=>{const Tab = drawerTab.component; return <Tab key={drawerTab.title}/>})}\r\n          </View>\r\n        }\r\n      </View>\r\n    </>}\r\n  </View>\r\n}\r\n\r\n{/*<Text style={[styles.label, { color: d.isFocused ? colors.primary : '#222' }]}></Text> */}\r\n\r\nconst styles = StyleSheet.create({\r\n    tabBar: {\r\n      width:240,\r\n      elevation: 8,\r\n      borderRightWidth:1,\r\n      borderColor:Colors.borderColor\r\n    },\r\n    content: {\r\n      flex: 1,\r\n      flexDirection: 'row',\r\n    },\r\n    tab: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n    },\r\n    label: {\r\n        textAlign: 'center',\r\n        backgroundColor: 'transparent',\r\n      },\r\n  });","import * as React from 'react';\r\nimport { Avatar } from 'react-native-paper';\r\nimport { AvatarProps } from '../../types';\r\n\r\nconst normalizeHash = (hash: number, min: number, max: number) => {\r\n    return Math.floor((hash % (max - min)) + min);\r\n};\r\n\r\nconst stringToHSL = (str: string, initHash?:number) => {\r\n    let hash = initHash || 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\r\n    }\r\n    hash = Math.abs(hash);\r\n    return `hsl(${normalizeHash(hash, 0, 360)}, ${normalizeHash(hash, 0, 100)}%, ${normalizeHash(hash, 25, 75)}%)`;\r\n};\r\n\r\nexport default (props:AvatarProps) => {\r\n    const backgroundColor = stringToHSL(props.name, props.userId)\r\n    return <Avatar.Text style={{backgroundColor}} size={props.size} label={props.name.split(' ').map(v=>v[0]).join().toUpperCase()} />\r\n};","import React from 'react';\r\n// import { MaterialIcons } from \"@expo/vector-icons\"\r\nimport Avatar from '../lib/react-native-paper/Avatar';\r\nimport { AvatarProps } from '../types';\r\n\r\nexport default (props:AvatarProps)=>{\r\n    // return <MaterialIcons size={38} style={{ marginBottom: -3, marginRight:10 }} name='account-circle'/>\r\n    return <Avatar {...props}/>\r\n}\r\n\r\n","import React from \"react\"\r\nimport { View, Text } from \"../components/Themed\"\r\nimport CommonItem from \"../components/CommonItem\"\r\n// import useBoardChannelList from \"../lib/blacktokki-board/useBoardChannelList\"\r\nimport { useMessengerChannelSorted } from \"../hooks/lists/useMessengerChannelList\"\r\nimport useAuthContext from \"../hooks/useAuthContext\"\r\nimport { navigate } from \"../navigation\"\r\n\r\nconst DrawerTab = (props:{data:{name:string, onPress?:()=>void}[]})=><View style={{flex:1}}>\r\n    {props.data.map((item, index)=><CommonItem key={index} containerStyle={{marginHorizontal:0}} bodyStyle={{alignItems:'flex-start'}} onPress={item.onPress}>\r\n        <Text style={{marginLeft:20}}>{item.name}</Text>\r\n    </CommonItem>\r\n    )}\r\n</View>\r\n\r\nexport default {\r\n    Messenger:()=>{\r\n        const {auth} = useAuthContext()\r\n        const channelList = useMessengerChannelSorted(auth);\r\n        return <DrawerTab data={(channelList || []).map(item=>({...item, onPress:()=>navigate(\"ChatScreen\", {id:item.id})}))}/>\r\n    },\r\n    // Board:()=>{\r\n    //     const {auth} = useAuthContext()\r\n    //     const channelList = useBoardChannelList(auth);\r\n    //     return <DrawerTab data={(channelList || []).map(item=>({...item, onPress:()=>navigate(\"BoardScreen\", {id:item.id})}))}/>\r\n    // },\r\n}","import { Ionicons, FontAwesome } from \"@expo/vector-icons\"\r\nimport React from \"react\"\r\nimport { Text, View } from \"react-native\"\r\nimport CommonItem from \"../components/CommonItem\"\r\nimport useAuthContext from \"../hooks/useAuthContext\"\r\nimport { useMessengerChannelSorted } from \"../hooks/lists/useMessengerChannelList\"\r\nimport { navigate } from \"../navigation\"\r\n\r\nexport default ()=>{\r\n    const {auth} = useAuthContext()\r\n    const channelList = useMessengerChannelSorted(auth)\r\n    const today = (new Date()).toISOString().slice(0, 10)\r\n    return <View style={{flex:1, backgroundColor:'white'}}>\r\n        {channelList?.map((item, index)=>{\r\n            const date = item.last_message?.created.slice(0,10)\r\n            return <CommonItem key={index} bodyStyle={{flexDirection:'row', justifyContent:'space-between'}} onPress={()=>navigate(\"ChatScreen\", {id:item.id})}>\r\n                <View style={{flexDirection:'row'}}>\r\n                    <FontAwesome size={36} style={{ marginBottom: -3, marginRight:20 }} name='users'/>\r\n                    <View>\r\n                        <View style={{flexDirection:'row'}}>\r\n                            <Text style={{fontSize:18}}>{item.name}</Text>\r\n                            <Text style={{fontSize:18, opacity: 0.4, paddingLeft:5}}>{item.member_count}</Text>\r\n                        </View>\r\n                        <Text style={{fontSize:16, opacity: 0.4}}>{item.last_message?.content}</Text>\r\n                    </View>\r\n                </View>\r\n                <View>\r\n                    <Text style={{fontSize:14, opacity: 0.4, textAlign:'right'}}>{date==today?item.last_message?.created.slice(11,16):date}</Text>\r\n                    <Text style={{fontSize:14, textAlign:'right'}}>{item.unread_count?item.unread_count:' '}</Text>\r\n                </View>\r\n            </CommonItem>\r\n        })}\r\n    </View>\r\n}\r\n\r\nexport const MessengerIcon = <Ionicons size={30} style={{ marginBottom: -3 }} name='chatbox'/>","import React from \"react\";\r\nimport MemberTab, {MemberIcon} from \"./MemberTab\";\r\nimport OneTab, {ConfigIcon} from \"./OneTab\";\r\nimport DrawerTab  from './DrawerTab';\r\nimport MessengerTab, {MessengerIcon} from \"./MessengerTab\";\r\n// import BoardTab, {BoardIcon}  from \"../lib/blacktokki-board/BoardTab\";\r\n\r\nexport const bottomTabs = {\r\n    OneTab:{\r\n        title:'member',\r\n        component:MemberTab,\r\n        icon:MemberIcon,\r\n    },\r\n    TwoTab:{\r\n        title:'messenger',\r\n        component:MessengerTab,\r\n        icon:MessengerIcon\r\n    },\r\n    // ThreeTab:{\r\n    //     title:'board',\r\n    //     component:BoardTab,\r\n    //     icon:BoardIcon\r\n    // },\r\n    // FourTab:{\r\n    //     title:'config',\r\n    //     component:OneTab,\r\n    //     icon:ConfigIcon\r\n    // }\r\n} as Record<string, {title:string, component:React.ComponentType<any>, icon:JSX.Element}>\r\n\r\nexport const drawerTabs = {\r\n    TwoTab:{\r\n        title:'messenger',\r\n        component:DrawerTab.Messenger,\r\n        icon:MessengerIcon\r\n    },\r\n    // ThreeTab:{\r\n    //     title:'board',\r\n    //     component:DrawerTab.Board,\r\n    //     icon:BoardIcon\r\n    // }\r\n} as Record<string, {title:string, component:React.ComponentType<any>, icon:JSX.Element}>","import React, { useMemo } from 'react';\r\n\r\nimport { TextProps, StyleProp } from 'react-native';\r\nimport {View, Text } from './Themed'\r\nimport useResizeWindow from '../hooks/useResizeWindow';\r\n\r\ntype Props = {\r\n  name: string,\r\n  width?:number,\r\n  children: React.ReactNode\r\n  textStyle?: StyleProp<TextProps>\r\n}\r\n\r\nexport default function RowField(props:Props) {\r\n  const windowType = useResizeWindow()\r\n  const rowStyle = useMemo(()=>windowType=='landscape'?\r\n    {flexDirection:'row', alignItems: 'center', justifyContent:'space-between'}:\r\n    {flexDirection:'column', alignItems:'flex-start'} as any\r\n  , [windowType])\r\n  return (\r\n    <View style={[{paddingVertical:5, width:'100%'}, rowStyle]}>\r\n        <Text style={[windowType=='landscape'?{flex:1}:{width:'100%'},{paddingHorizontal: 15, fontSize:16}, props.textStyle]}>{props.name}</Text>\r\n        <View style={[windowType=='landscape'?{flex:6}:{width:'100%'},{paddingHorizontal: 15}]}>\r\n          <View style={{width:props.width}}>\r\n            {props.children}\r\n          </View>\r\n        </View>\r\n    </View>\r\n  )\r\n}","import React from 'react';\r\nimport { StyleProp, TextStyle } from 'react-native';\r\nimport { CustomTextInputProps } from '../types';\r\nimport CommonTextInput from './CommonTextInput';\r\nimport RowField from './RowField';\r\n\r\nexport default function TextField(props:CustomTextInputProps & {name: string, width?:any, textStyle?:StyleProp<TextStyle>}) {\r\n  return (\r\n    <RowField name={props.name} width={props.width} textStyle={props.textStyle}>\r\n      <CommonTextInput {...props} />\r\n   </RowField>\r\n  )\r\n}","import { MaterialCommunityIcons } from \"@expo/vector-icons\"\r\nimport React from \"react\"\r\nimport { Text, View } from \"react-native\"\r\nimport CommonItem from \"../components/CommonItem\"\r\nimport useAuthContext from \"../hooks/useAuthContext\"\r\nimport useUserMembershipList from \"../hooks/lists/useUserMembershipList\"\r\nimport { UserMembership } from \"../types\"\r\nimport Avatar from \"../components/Avatar\"\r\nimport useModalsContext from \"../hooks/useModalsContext\"\r\nimport ProfileModal from \"../modals/ProfileModal\"\r\n\r\nexport const renderMemberItem = (item:UserMembership, onPress?:()=>void)=> {\r\n    return <CommonItem key={item.id} bodyStyle={{backgroundColor:'white', flexDirection:'row', justifyContent:'flex-start'}} onPress={onPress}>\r\n        <View style={{marginTop:4, marginRight:12}}><Avatar name={item.name} userId={item.id} size={44}/></View>\r\n        <Text style={{fontSize:20, fontWeight:'400'}}>{item.name}</Text>\r\n    </CommonItem>\r\n}\r\n\r\nexport default ()=>{\r\n    const {auth} = useAuthContext()\r\n    const { setModal } = useModalsContext()\r\n    const userList = useUserMembershipList(auth)\r\n    const memberItem = React.useMemo(\r\n        ()=>userList && userList.map(item=>renderMemberItem(item, ()=>setModal(ProfileModal, {id:item.id}))), [userList])\r\n    return <View style={{flex:1, backgroundColor:'white'}}>\r\n        {memberItem}\r\n    </View>\r\n}\r\n\r\nexport const MemberIcon = <MaterialCommunityIcons size={32} style={{ marginBottom: -3 }} name='account'/>","/**\r\n * Learn more about Light and Dark modes:\r\n * https://docs.expo.io/guides/color-schemes/\r\n */\r\n\r\nimport * as React from 'react';\r\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\r\n\r\nimport Colors from '../constants/Colors'\r\nimport useColorScheme from '../hooks/useColorScheme';\r\n\r\nexport function useThemeColor(\r\n  props: { light?: string; dark?: string },\r\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\r\n) {\r\n  const theme = useColorScheme();\r\n  const colorFromProps = props[theme];\r\n\r\n  if (colorFromProps) {\r\n    return colorFromProps;\r\n  } else {\r\n    return Colors[theme][colorName];\r\n  }\r\n}\r\n\r\ntype ThemeProps = {\r\n  lightColor?: string;\r\n  darkColor?: string;\r\n};\r\n\r\nexport type TextProps = ThemeProps & DefaultText['props'];\r\nexport type ViewProps = ThemeProps & DefaultView['props'];\r\n\r\nexport function Text(props: TextProps) {\r\n  const { style, lightColor, darkColor, ...otherProps } = props;\r\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\r\n\r\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\r\n}\r\n\r\nexport function View(props: ViewProps) {\r\n  const { style, lightColor, darkColor, ...otherProps } = props;\r\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\r\n\r\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\r\n}\r\n","import React from 'react';\r\nimport useAuthContext from '../hooks/useAuthContext';\r\nimport CommonButton from '../components/CommonButton';\r\nimport useModalsContext from '../hooks/useModalsContext';\r\nimport CommonSection from '../components/CommonSection';\r\nimport { Text, View } from '../components/Themed';\r\nimport useLangContext from '../hooks/useLangContext';\r\n\r\nexport default function GuestLogoutModal({id}:{id:number}) {\r\n  const { lang } = useLangContext()\r\n  const { setModal } = useModalsContext()\r\n  const {dispatch} = useAuthContext()\r\n  const back = ()=>{\r\n    setModal(GuestLogoutModal, null)\r\n  }\r\n  return <CommonSection outerContainerStyle={{alignSelf:'center'}}>\r\n    <Text>{lang('Guest users cannot reconnect after logging out. Please create an account or log in.')}</Text>\r\n    <View style={{width:'100%', flexDirection:'row', justifyContent:'flex-end'}}>\r\n      <CommonButton title={lang('sign out')} onPress={()=>dispatch({type:\"LOGOUT_REQUEST\"})}/>\r\n      <CommonButton title={lang('cancel')} onPress={()=>back()}/>\r\n    </View>\r\n  </CommonSection>\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport Profile from '../components/Profile';\r\nimport useAuthContext from '../hooks/useAuthContext';\r\nimport useUserMembershipList from '../hooks/lists/useUserMembershipList';\r\nimport { useMessengerChannelMutation } from '../hooks/lists/useMessengerChannelList';\r\nimport CommonButton from '../components/CommonButton';\r\nimport { DirectChannel } from '../types';\r\nimport { navigate } from '../navigation';\r\nimport useModalsContext from '../hooks/useModalsContext';\r\nimport CommonSection from '../components/CommonSection';\r\nimport { Text, View } from '../components/Themed';\r\nimport useLangContext from '../hooks/useLangContext';\r\n\r\nexport default function ProfileModal({id}:{id:number}) {\r\n  const { lang } = useLangContext()\r\n  const {auth} = useAuthContext()\r\n  const { setModal } = useModalsContext()\r\n  const userList = useUserMembershipList(auth)\r\n  const user = userList?.find(v=>v.id==id)\r\n  const channelMutation = useMessengerChannelMutation()\r\n  const back = ()=>{\r\n    setModal(ProfileModal, null)\r\n  }\r\n  useEffect(()=>{\r\n    if (!(id && user) && userList)\r\n      back()\r\n  }, [userList])\r\n  return user?<CommonSection outerContainerStyle={{alignSelf:'center'}}>\r\n    <View style={{flexDirection:'row', width:'100%'}}>\r\n      <View style={{flex:1}}>\r\n        <CommonButton style={{width:60}} title={'❌'} onPress={back}/>\r\n      </View>\r\n      <View style={{flex:1}}>\r\n        <Text style={{fontSize:20, textAlign:'center'}}>{lang('profile')}</Text>\r\n      </View>\r\n      <View style={{flex:1}}/>\r\n    </View>\r\n    <View style={{marginBottom: 20, height: 1, width: '100%'}} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />\r\n    \r\n    <Profile username={user.username} name={user.name} userId={user.id} />\r\n    <CommonButton title={lang('create messenger')} onPress={()=>{\r\n      if(auth?.user?.id && auth.groupId){\r\n        const newChannel:DirectChannel = {name:auth.user.id!=user.id?`${auth.user.name}, ${user.name}`:auth.user.name, type:'messenger', owner:auth?.user?.id, group:auth.groupId, counterpart:user.id};\r\n        channelMutation.direct(newChannel).then(v=>navigate(\"Main\", {screen:\"ChatScreen\", params: {id:v.id}}))\r\n      }\r\n    }}/>\r\n  </CommonSection>:<></>\r\n}\r\n","import React from 'react';\r\nimport {View} from 'react-native'\r\nimport {Text} from './Themed';\r\nimport { ProfileProps } from '../types';\r\nimport Avatar from './Avatar';\r\nimport TextButton from './TextButton';\r\nimport CommonTextInput from './CommonTextInput';\r\nimport { patchUser } from '../apis';\r\nimport useAuthContext from '../hooks/useAuthContext';\r\n\r\nexport default (props:ProfileProps)=>{\r\n    const [name, setName] = React.useState<string>()\r\n    const { auth, dispatch } = useAuthContext()\r\n    const isSelf = auth.user?.id == props.userId\r\n    const onChange = ()=>{\r\n        isSelf && patchUser({id:props.userId, name:name || ''}).finally(()=>{\r\n            setName(undefined)\r\n            dispatch({type:\"REFRESH\"})\r\n        })\r\n    }\r\n    return <View style={{width:'100%', height:135, justifyContent:'space-evenly', alignItems:'center'}}>\r\n        <Avatar {...props} size={75}/>\r\n        {name===undefined?\r\n            <TextButton textStyle={{fontWeight:'bold', fontSize:15}} onPress={()=>isSelf && setName(props.name)} title={props.name} disabled={!isSelf}/>:\r\n            <CommonTextInput value={name} style={{textAlign:'center'}} setValue={setName} onBlur={onChange} onEndEditing={onChange} />}\r\n        <Text style={{fontWeight:'normal', fontSize:14}}>{props.username}</Text>\r\n    </View>\r\n}","import React, { useState } from 'react';\r\nimport { TextInput } from 'react-native';\r\nimport Colors from '../constants/Colors';\r\nimport useColorScheme from '../hooks/useColorScheme';\r\nimport { CustomTextInputProps } from '../types';\r\n\r\nexport default (props:CustomTextInputProps)=>{\r\n    const [contentHeight, setContentHeight] = useState<number>()\r\n    const minHeight = props.minHeight || 30\r\n    const theme = useColorScheme()\r\n    return <TextInput style={[{\r\n            borderColor:'#d0d7de', \r\n            fontSize:16, \r\n            borderWidth:1, \r\n            borderRadius:6, \r\n            paddingHorizontal:10, \r\n            paddingVertical:3, \r\n            backgroundColor:Colors[theme].background,\r\n            color:Colors[theme].text,\r\n            height:props.multiline?contentHeight:minHeight,\r\n        }, props.style]} \r\n        editable={!props.disabled} \r\n        value={props.value} \r\n        onChangeText={props.setValue}\r\n        onContentSizeChange={props.multiline?(e) => setContentHeight(Math.max(e.nativeEvent.contentSize.height, minHeight) + 2):undefined}\r\n        onBlur={()=>props.onBlur?.(props.value)}\r\n        onEndEditing={()=>props.onEndEditing?.(props.value)}\r\n        multiline={props.multiline}\r\n    />\r\n}","import { useMemo, useReducer } from \"react\"\r\n\r\ntype LocalSearchAction = {type:string, keyword?:string}\r\n\r\ntype LocalSearchState ={active:boolean, keyword:string}\r\n\r\n\r\n\r\nconst localSearchReducer =(initialState:LocalSearchState, action:LocalSearchAction)=>{\r\n    switch (action.type){\r\n        case 'SEARCH':\r\n          return {\r\n            ...initialState,\r\n            keyword: action.keyword\r\n          } as LocalSearchState\r\n        case 'ENABLE_SEARCH':\r\n          return {\r\n            ...initialState,\r\n            active:true,\r\n          }\r\n        case 'DISABLE_SEARCH':\r\n            return{\r\n                ...initialState,\r\n                active:false,\r\n                keyword: ''\r\n            }\r\n        default:\r\n            throw new Error( `Unhandled action type: ${action.type}`)\r\n    }\r\n  }\r\n\r\n\r\nexport default function useLocalSearch<T>(target:T[], compare:(value:T, keyword:string)=>boolean) {\r\n  const [searchState, dispatch] = useReducer(localSearchReducer, {active:false, keyword:''})\r\n  const data = useMemo(()=>searchState.active?target.filter(v=>compare(v, searchState.keyword)):target, [searchState, target])\r\n  return {searchState, dispatch, data}\r\n}","import React, {useRef,MutableRefObject, useMemo, useState, useEffect } from 'react';\r\nimport Clipboard from '@react-native-clipboard/clipboard/dist';\r\nimport { View, Text } from '../components/Themed';\r\nimport CommonSection from '../components/CommonSection';\r\nimport useAuthContext from '../hooks/useAuthContext';\r\nimport useUserMembershipList from '../hooks/lists/useUserMembershipList';\r\nimport { UserMembership } from '../types';\r\nimport CommonButton from '../components/CommonButton';\r\nimport useMessengerMemberList, { useMessengerMemberMutation } from '../hooks/lists/useMessengerMemberList';\r\nimport { renderMemberItem } from '../tabs/MemberTab';\r\nimport useModalsContext from '../hooks/useModalsContext';\r\nimport useExternalMembershipList from '../hooks/lists/useExternalMembershipList';\r\nimport TextField from '../components/TextField';\r\nimport useLocalSearch from '../hooks/useLocalSearch';\r\nimport { TabViewNavigator } from '../navigation/DrawerNavigator';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\nimport useLangContext from '../hooks/useLangContext';\r\n\r\nconst InviteItem = (props:{item:UserMembership, selectedRef:MutableRefObject<Set<number>>})=>{\r\n  const [selected, setSelected] = useState(props.selectedRef.current.has(props.item.id))\r\n  return <View style={selected?{borderWidth:1, borderColor:'blue'}:{}}>\r\n    {renderMemberItem(props.item, ()=>{\r\n      if (selected){\r\n        setSelected(false)\r\n        props.selectedRef.current.delete(props.item.id)\r\n      }\r\n      else{\r\n        setSelected(true)\r\n        props.selectedRef.current.add(props.item.id)\r\n      }\r\n    })}\r\n  </View>\r\n\r\n}\r\ntype InviteTabViewProps = {\r\n  id:number,\r\n  selectedRef:MutableRefObject<Set<number>>\r\n}\r\n\r\nconst GroupTabView = ({id, selectedRef}:InviteTabViewProps)=>{\r\n  const { lang } = useLangContext()\r\n  const {auth} = useAuthContext()\r\n  const { setModal } = useModalsContext()\r\n  const userList = useUserMembershipList(auth)\r\n  const memberList = useMessengerMemberList(id)\r\n  const messengerMemberMutation = useMessengerMemberMutation()\r\n  const rawData = useMemo(()=>{\r\n    const memberSet = new Set(memberList?.map(v=>v.user))\r\n    return userList?.filter(v=>!memberSet.has(v.id)) || []\r\n  }, [userList, memberList])\r\n  const {data, dispatch:dispatchKeyword, searchState} = useLocalSearch(rawData, (v, keyword)=>(v.username.includes(keyword) || v.name.includes(keyword)))\r\n  const search = (k:string)=>{\r\n    if (k?.length>0){\r\n      dispatchKeyword({type:'ENABLE_SEARCH'})\r\n      dispatchKeyword({type:'SEARCH', keyword:k})\r\n    }\r\n    else{\r\n      dispatchKeyword({type:'DISABLE_SEARCH'})\r\n    }\r\n  }\r\n  const back = ()=>{\r\n    setModal(InviteModal, null)\r\n  }\r\n  return <View style={{alignItems:'center'}}>\r\n    <View style={{backgroundColor:'white', 'width': '50%'}}>\r\n      <TextField name={`${lang('Username')} & ${lang('Name')}`} value={searchState.keyword} setValue={search} width={'80%'}/>\r\n      {id && data?.map((item, index)=><InviteItem key={index} item={item} selectedRef={selectedRef}/>)}\r\n    </View>\r\n    <View style={[{width:'50%', flexDirection:'row', padding:10,}, {justifyContent:'flex-end'}]}>\r\n      <CommonButton title={lang('invite')} onPress={()=>{\r\n        messengerMemberMutation.invite({\r\n          channel_id:id,\r\n          user_ids:[...selectedRef.current]\r\n        }).then(back)\r\n      }}/>\r\n      <CommonButton title={lang('cancel')} onPress={back}/>\r\n    </View>\r\n  </View>\r\n}\r\n\r\nconst DELAY = 500\r\n\r\nconst ExternalMembershipTabView = ({id, selectedRef}:InviteTabViewProps)=>{\r\n  const { lang } = useLangContext()\r\n  const [value, setValue] = useState('')\r\n  const [keyword, setKeyword] = useState('')\r\n  const [copied, setCopied] = useState(false)\r\n  const timeoutRef = useRef<NodeJS.Timeout>()\r\n  const { setModal } = useModalsContext()\r\n  const memberList = useMessengerMemberList(id)\r\n  const externalMemberList = useExternalMembershipList(keyword)\r\n  const data = useMemo(()=>{\r\n    const memberSet = new Set(memberList?.map(v=>v.user))\r\n    return externalMemberList?.filter(v=>!memberSet.has(v.id)) || []\r\n  }, [externalMemberList, memberList])\r\n  const messengerMemberMutation = useMessengerMemberMutation()\r\n  useEffect(()=>{\r\n    timeoutRef.current = setTimeout(()=>{\r\n      setKeyword(value)\r\n    }, DELAY)\r\n    return ()=>{timeoutRef.current && clearTimeout(timeoutRef.current)}\r\n  }, [value])\r\n  const back = ()=>{\r\n    setModal(InviteModal, null)\r\n  }\r\n  const inviteLink = location.href.replace('chat', 'invitee')\r\n  return <View style={{alignItems:'center'}}>\r\n  <TouchableOpacity style={{paddingVertical:10, flexDirection:\"row\"}} onPress={()=>{Clipboard.setString(inviteLink);setCopied(true)}}>\r\n    <Text style={{fontSize:14}}>{lang('invite link')}{\": \"}</Text>\r\n    <Text style={{fontSize:14, color:'#12b886'}}>{inviteLink}{\" \"}</Text>\r\n    {copied && <Text style={{fontSize:12, color:'red'}}>{lang(\"copied\")}</Text>}\r\n  </TouchableOpacity>\r\n  <View style={{backgroundColor:'white', 'width': '50%'}}>\r\n    <TextField name={lang('Username')} value={value} setValue={setValue} width={'80%'}/>\r\n    {id && data?.map((item, index)=><InviteItem key={index} item={item} selectedRef={selectedRef}/>)}\r\n  </View>\r\n  <View style={[{width:'50%', flexDirection:'row', padding:10,}, {justifyContent:'flex-end'}]}>\r\n    <CommonButton title={lang('invite')} onPress={()=>{\r\n      messengerMemberMutation.invite({\r\n        channel_id:id,\r\n        user_ids:[...selectedRef.current]\r\n      }).then(back)\r\n    }}/>\r\n    <CommonButton title={lang('cancel')} onPress={back}/>\r\n  </View>\r\n</View>\r\n}\r\n\r\nexport default function InviteModal({id}:{id:number}) {\r\n  const { lang } = useLangContext()\r\n  const selectedRef = useRef<Set<number>>(new Set())\r\n  const drawerTabs:Record<string, {title:string, component:React.ComponentType<any>, icon:JSX.Element}> = {\r\n    group:{\r\n      title: lang('Group'),\r\n      component: ()=><GroupTabView id={id} selectedRef={selectedRef}/>,\r\n      icon: <></>\r\n    },\r\n    external:{\r\n      title: lang('External members'),\r\n      component: ()=><ExternalMembershipTabView id={id} selectedRef={selectedRef}/>,\r\n      icon: <></>\r\n    }\r\n  }\r\n  return <CommonSection outerContainerStyle={{alignSelf:'center'}}>\r\n    <View style={{justifyContent:'space-around'}}>\r\n      <Text style={{fontSize:20}}>{lang('invite')}</Text>\r\n    </View>\r\n    <View style={{marginBottom: 20, height: 1, width: '100%'}} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />\r\n    <View style={{width:'100%'}}>\r\n      <TabViewNavigator tabs={drawerTabs} tabBarPosition={\"top\"}/>\r\n    </View>\r\n  </CommonSection>\r\n}\r\n\r\n","import { useQuery } from \"react-query\";\r\nimport { getExternalMembershipList } from \"../../apis\";\r\n\r\nexport default function useExternalMembershipList(keyword?:string){\r\n  const { data } = useQuery([\"UserMembershipList\", keyword] , async()=>keyword?(await getExternalMembershipList(keyword)):[])\r\n  return data\r\n}","import axios, { AxiosRequestConfig } from 'axios';\r\n// @ts-ignore\r\nimport {API_URL} from \"@env\"\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nexport const accountURL =  `${API_URL}/account/`\r\nconst baseURL =  `${API_URL}/messenger/`\r\nconst defaultOption:AxiosRequestConfig = {\r\n    baseURL,\r\n    withCredentials: true,\r\n    headers: {}\r\n};\r\nconst _axios = axios.create(defaultOption);\r\n\r\n_axios.interceptors.request.use(\r\n    config => {\r\n        return config;\r\n    },\r\n    error => {\r\n        return Promise.reject(error);\r\n    }\r\n)\r\n\r\n_axios.interceptors.response.use(\r\n    response => {\r\n        // if((response.request.responseURL as string).indexOf('/task/login')>=0 && response.data.length != 0){\r\n        //     // redirect login\r\n        // }\r\n        return response;\r\n    },\r\n    error => {\r\n        if (error.response.status === 401) {\r\n            return getToken().then(async(token)=>{\r\n                if (token){\r\n                    const r = await _axios.post(\"/api/v1/user/sso/refresh/\", {token}, {headers:{'Authorization':''}, baseURL: accountURL})\r\n                    if (r.status == 200 && r.data !== ''){\r\n                        setToken(r.data)\r\n                    }\r\n                }\r\n            }).finally(()=>{\r\n                return Promise.reject(error)\r\n            })\r\n        }\r\n        return Promise.reject(error)\r\n    }\r\n)\r\n\r\nexport const setToken = async (token:string|null)=>{\r\n    _axios.defaults.headers['Authorization'] = `JWT ${token}`\r\n    if (token)\r\n        await AsyncStorage.setItem(\"Authorization\", token)\r\n    else\r\n        AsyncStorage.removeItem(\"Authorization\")\r\n}\r\nexport const getToken = async ()=>{\r\n    const token = await AsyncStorage.getItem(\"Authorization\")\r\n    _axios.defaults.headers['Authorization'] = token?`JWT ${token}`:null\r\n    return token\r\n}\r\n\r\nexport default _axios\r\n","import React, { createContext, useContext, useEffect, useReducer, useMemo, Dispatch, useState } from \"react\"\r\nimport { checkLogin, login, logout } from \"../apis\"\r\nimport { getNotification, putNotification } from \"../apis/notification\"\r\nimport { UserMembership } from \"../types\"\r\n\r\ntype AuthAction = {type:string, username?:string, password?:string, user?:UserMembership|null}\r\n\r\nexport type Auth = {user?:UserMembership|null, groupId?:number}\r\n\r\ntype AuthState ={user?:UserMembership|null, request?:{username:string, password:string}|null}\r\n\r\nconst AuthContext = createContext<{auth:Auth, error?:string, dispatch:Dispatch<AuthAction>}>({auth:{}, dispatch:()=>{}});\r\n\r\nconst authReducer =(initialState:AuthState, action:AuthAction)=>{\r\n  switch (action.type){\r\n      case 'LOGIN_REQUEST':\r\n        return {\r\n          ...initialState,\r\n          request:{username:action.username, password:action.password},\r\n        } as AuthState\r\n      case 'LOGIN_GUEST':\r\n        return {\r\n          ...initialState,\r\n          request:{username:'guest', password:'guest'},\r\n        } as AuthState\r\n      case 'LOGIN_SUCCESS':\r\n          return{\r\n              ...initialState,\r\n              user:action.user,\r\n              request:undefined\r\n          }\r\n      case 'LOGIN_FAILED':\r\n          return{\r\n              ...initialState,\r\n              request:undefined\r\n          }\r\n      case 'LOGOUT_REQUEST':\r\n          return{\r\n              ...initialState,\r\n              request:null\r\n          }\r\n      case 'LOGOUT_SUCCESS':\r\n          return {\r\n            ...initialState,\r\n            user:null,\r\n            request:undefined\r\n          }\r\n      case 'REFRESH':\r\n        return {\r\n          ...initialState,\r\n          user:undefined\r\n        }\r\n      default:\r\n          throw new Error( `Unhandled action type: ${action.type}`)\r\n  }\r\n}\r\n\r\n\r\nexport const AuthProvider = ({children}:{children:React.ReactNode})=>{\r\n  const [authState, dispatch] = useReducer(authReducer, {} as Auth)\r\n  const [error, setError] = useState<string>()\r\n  const auth = useMemo(()=>({\r\n    user:authState.user,\r\n    groupId: authState.user?.membership_set.find(g=>g.root_group_id==null)?.group\r\n  }), [authState])\r\n  useEffect(()=>{\r\n    if(authState.user===undefined){\r\n      checkLogin().then((user)=>{\r\n        dispatch({type:\"LOGIN_SUCCESS\", user})\r\n      }).catch((e)=>{\r\n        console.log(e)\r\n        dispatch({type:\"LOGOUT_SUCCESS\"})\r\n      })\r\n    }\r\n    else if(authState.user===null && authState.request){\r\n      login(authState.request.username, authState.request.password).then(user=>{\r\n        dispatch({type:\"LOGIN_SUCCESS\", user})\r\n      }).catch((data)=>{\r\n        dispatch({type:\"LOGIN_FAILED\"})\r\n        setError(data.response?.data?.message)\r\n      })\r\n    }\r\n    else if(authState.user && authState.request===null){\r\n      getNotification(authState.user.id).then(noti=>{\r\n        noti && putNotification({...noti, token:''}).then(()=>{\r\n          logout().then(()=>dispatch({type:\"LOGOUT_SUCCESS\"}))\r\n        })\r\n      })\r\n    }\r\n  }, [authState])\r\n  return <AuthContext.Provider value={{auth, error, dispatch}}>\r\n    {children}\r\n  </AuthContext.Provider>\r\n}\r\n\r\nexport default ()=>{\r\n  const authContext = useContext(AuthContext)\r\n  return authContext\r\n}\r\n","/**\r\n * Learn more about deep linking with React Navigation\r\n * https://reactnavigation.org/docs/deep-linking\r\n * https://reactnavigation.org/docs/configuring-links\r\n */\r\n\r\nimport { LinkingOptions } from '@react-navigation/native';\r\nimport * as Linking from 'expo-linking';\r\nimport {main, login, modal} from '../screens';\r\n\r\nconst ROOTPATH = 'tokki-tok'  // github repository name\r\n\r\nObject.values(modal).forEach(v=>v.path = ROOTPATH + '/' + v.path)\r\n\r\nexport default  {\r\n  prefixes: [Linking.makeUrl('/')],\r\n  config: {\r\n    screens: {\r\n      Main: {\r\n        screens:{\r\n          ...main,\r\n          ...login,\r\n          NotFound: '*',\r\n        },\r\n        path: ROOTPATH\r\n      },\r\n      ...modal\r\n    },\r\n  },\r\n} as LinkingOptions;\r\n","const tintColorLight = '#2f95dc';\r\nconst tintColorDark = '#fff';\r\n\r\nexport default {\r\n  light: {\r\n    text: '#000',\r\n    background: '#fff',\r\n    tint: tintColorLight,\r\n    tabIconDefault: '#ccc',\r\n    tabIconSelected: tintColorLight,\r\n    header:'#24292f',\r\n    buttonColor:'rgb(242,242,242)',\r\n    buttonBackgroundColor: '#f6f8fa', //'rgba(9,30,66,0.08)',//rgb(242,242,242)\r\n  },\r\n  dark: {\r\n    text: '#fff',\r\n    background: '#000',\r\n    tint: tintColorDark,\r\n    tabIconDefault: '#ccc',\r\n    tabIconSelected: tintColorDark,\r\n    header:'#dbd6d1',\r\n    buttonColor:'rgb(14,14,14)',\r\n    buttonBackgroundColor: '#080604',\r\n  },\r\n  button:{\r\n    borderColor:'rgba(27,31,36,0.15)',\r\n  },\r\n  borderColor:'#d0d7de',\r\n  \r\n  focus:'#0065A4',\r\n};\r\n","import { StackScreenProps } from '@react-navigation/stack';\r\nimport * as React from 'react';\r\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\r\nimport useLangContext from '../hooks/useLangContext';\r\n\r\nexport default function NotFoundScreen({\r\n  navigation,\r\n}: StackScreenProps<any, 'NotFound'>) {\r\n  const { lang } = useLangContext()\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>{lang(\"This screen doesn't exist.\")}</Text>\r\n      <TouchableOpacity onPress={() => navigation.replace('HomeScreen')} style={styles.link}>\r\n        <Text style={styles.linkText}>{lang(\"Go to home screen!\")}</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n  link: {\r\n    marginTop: 15,\r\n    paddingVertical: 15,\r\n  },\r\n  linkText: {\r\n    fontSize: 14,\r\n    color: '#2e78b7',\r\n  },\r\n});\r\n","import React, { createContext, useContext, useEffect } from \"react\"\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/messaging\";\r\n//@ts-ignore\r\nimport {FCM_PUBLIC_VAPID_KEY, FCM_API_KEY} from \"@env\"\r\nimport { Notification as NotificationType, UserMembership } from \"../types\";\r\nimport { getNotification, postNotification, putNotification } from \"../apis/notification\";\r\nimport { Auth } from \"./useAuthContext\";\r\nconst firebaseConfig = require(\"../../web/firebase-config.js\")\r\n// Initialize Firebase\r\nconst key = firebaseConfig.messagingSenderId\r\nconst apiKeyEncrypted = (FCM_API_KEY as string).split('').map((v, i)=> (v.charCodeAt(0) ^ key.charCodeAt(i)).toString(16).padStart(2, '0')).join('')\r\nconst app = firebase.initializeApp({...firebaseConfig, apiKey:FCM_API_KEY});\r\n// const analytics = getAnalytics(app);\r\nconst messaging = firebase.messaging(app);\r\n\r\nmessaging.onMessage((payload) => {\r\n  if (!(\"Notification\" in window)) {\r\n    alert(\"This browser does not support desktop notification\");\r\n  }\r\n  else if (Notification.permission === \"granted\") {\r\n    const message_set = JSON.parse(payload.data['message_set'])[0]\r\n    new Notification(payload.data.channel_name, { body: `${payload.data.name}: ${message_set.content}` });\r\n  }\r\n});\r\n\r\nconst requestToken = async()=>{\r\n  const permission = await Notification.requestPermission();\r\n  if (permission === 'granted') {\r\n    const serviceWorkerRegistration = await navigator.serviceWorker.register(`${process.env.PUBLIC_URL}/firebase-messaging-sw.js?${apiKeyEncrypted}`)\r\n    console.log('[SW]: SCOPE: ', serviceWorkerRegistration.scope);\r\n    const currentToken = await messaging.getToken({serviceWorkerRegistration, vapidKey: FCM_PUBLIC_VAPID_KEY })\r\n    window.addEventListener('beforeunload', (event:any) => {\r\n      event.preventDefault();\r\n      serviceWorkerRegistration.unregister()\r\n    });\r\n    if (currentToken)\r\n      return currentToken\r\n  }\r\n  return undefined\r\n}\r\n\r\n\r\nlet noti:NotificationType|undefined\r\n\r\nconst setEnable = async(enable:boolean, user?:UserMembership|null)=>{\r\n  context.enable = enable\r\n  if(user && enable){\r\n    const token = await requestToken() || null\r\n    noti = await getNotification(user.id)\r\n    if (noti == undefined)\r\n      noti = await postNotification({user:user.id, type:'WEB', token})\r\n    else\r\n      noti = await putNotification({...noti, token})\r\n  }\r\n  else if (noti){\r\n    await putNotification({...noti, token:null})\r\n  }\r\n}\r\n\r\nconst context:{enable:boolean, setEnable:(enable:boolean, user?:UserMembership|null)=>void} = {enable:false, setEnable}\r\nconst FirebaseContext = createContext(context);\r\n\r\nexport default (auth:Auth)=>{\r\n  useEffect(()=>{\r\n    setEnable(true, auth.user)\r\n  }, [auth.user])\r\n  const firebaseContext = useContext(FirebaseContext)\r\n  return firebaseContext\r\n}\r\n","import InviteModal from \"./InviteModal\";\r\nimport ProfileModal from \"./ProfileModal\";\r\nimport ChannelEditModal from \"./ChannelEditModal\"\r\nimport GuestLogoutModal from \"./GuestLogoutModal\";\r\n\r\nexport default [\r\n    InviteModal,\r\n    ProfileModal,\r\n    ChannelEditModal,\r\n    GuestLogoutModal\r\n]","import { CardStyleInterpolators, createStackNavigator } from '@react-navigation/stack';\r\nimport React, {useMemo} from 'react';\r\nimport { View } from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport useResizeWindow from '../hooks/useResizeWindow';\r\nimport NotFoundScreen from '../screens/NotFoundScreen';\r\nimport {main, login, modal} from '../screens';\r\nimport DrawerNavigator from './DrawerNavigator';\r\nimport useAuthContext from '../hooks/useAuthContext';\r\nimport { WebSocketProvider } from '../hooks/useWebsocketContext';\r\nimport HeaderRight from '../components/HeaderRight'\r\nimport Colors from '../constants/Colors';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\nimport useFirebaseContext from '../hooks/useFirebaseContext';\r\nimport useIsMobile from '../hooks/useIsMobile';\r\nimport useColorScheme from '../hooks/useColorScheme';\r\nimport { ModalsProvider } from '../hooks/useModalsContext';\r\nimport modals from '../modals';\r\n\r\nconst Root = createStackNavigator();\r\n\r\nexport default function RootNavigator() {\r\n    const windowType = useResizeWindow();\r\n    return <Root.Navigator\r\n        mode= 'modal'\r\n        headerMode= 'screen'\r\n        screenOptions={{\r\n            cardStyle:{backgroundColor:\"white\"},\r\n            animationEnabled: true,\r\n            cardStyleInterpolator: CardStyleInterpolators.forVerticalIOS,\r\n        }}\r\n    >\r\n        <Root.Screen name=\"Main\" component={MainNavigator} options={{headerShown:false}}/>\r\n        {Object.entries(modal).map(([key, screen])=><Root.Screen key={key} name={key} component={screen.component} options={{\r\n            title: screen.title,\r\n            gestureDirection: windowType == 'landscape'?'vertical-inverted':'vertical'\r\n        }} />)}\r\n    </Root.Navigator>\r\n}\r\n\r\nconst Main = createStackNavigator();\r\n\r\nfunction headerLeft(navigation:any, route:any, windowType:string, isMobile:boolean){\r\n    const canGOBackScreen = ['HomeScreen', 'LoginScreen'].findIndex(v=>v == route.name) == -1\r\n    const goBack = ()=>{\r\n        if (navigation.canGoBack())\r\n            navigation.goBack()\r\n        else if (canGOBackScreen)\r\n            navigation.replace('HomeScreen')\r\n    }\r\n    if (windowType=='portrait' && canGOBackScreen)\r\n        return <TouchableOpacity onPress={goBack}><Ionicons size={isMobile?20:24} style={{marginHorizontal:isMobile?16:20 }} name=\"arrow-back\"/></TouchableOpacity>\r\n    return null\r\n}\r\n\r\nconst MainNavigator = ()=>{\r\n    const windowType = useResizeWindow();\r\n    const isMobile = useIsMobile()\r\n    const {auth} = useAuthContext()\r\n    const theme = useColorScheme()\r\n    const entries = useMemo(()=>{\r\n        if (auth.user === undefined)\r\n            return []\r\n        console.log('current user: ', auth.user)\r\n        return Object.entries(auth.user === null?login:main)\r\n    }, [auth])\r\n    const modalValues = useMemo(()=>{\r\n        if (auth.user === undefined)\r\n            return []\r\n        return auth.user === null?[]:modals\r\n    }, [auth])\r\n\r\n    useFirebaseContext(auth)\r\n    return (auth.user!==undefined?<View style={{flexDirection:'row', flex:1}}>\r\n        {auth.user?<DrawerNavigator user={auth.user}/>:undefined}\r\n        <View style={{flex:1}}>\r\n            <WebSocketProvider disable={auth.user === null || auth.user === undefined}>\r\n                <ModalsProvider modals={modalValues}>\r\n                    <Main.Navigator\r\n                        screenOptions={({navigation, route})=>({\r\n                            headerStyle:{backgroundColor:Colors[theme].header, height:isMobile?50:undefined},\r\n                            headerTitleStyle:{color:'white'},\r\n                            headerLeft:()=>headerLeft(navigation, route, windowType, isMobile),\r\n                            headerRight:()=><HeaderRight/>,\r\n                            headerLeftContainerStyle:{backgroundColor:'white', borderBottomWidth:1, borderColor:Colors.borderColor},\r\n                            cardStyle:{flexShrink:1},\r\n                            animationEnabled:windowType=='portrait',\r\n                            cardStyleInterpolator: CardStyleInterpolators.forHorizontalIOS\r\n                        })}\r\n                    >\r\n                        {entries.map(([key, screen])=><Main.Screen key={key} name={key} component={screen.component} options={{ title: screen.title }} />)}\r\n                        <Main.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\r\n                    </Main.Navigator>\r\n                </ModalsProvider>\r\n            </WebSocketProvider>\r\n        </View>\r\n    </View>:<></>);\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Dimensions, Platform, View } from 'react-native'\r\nimport useIsMobile from '../hooks/useIsMobile'\r\n\r\n\r\nexport default (props:{children:React.ReactNode})=>{\r\n    const isMobile = useIsMobile()\r\n    const [height, setHeight] = useState(window.innerHeight + 1)\r\n    useEffect(()=>{\r\n        if(isMobile && Platform.OS == 'web'){\r\n            const onChange = (e:any)=>{\r\n                setHeight(window.innerHeight + 1)\r\n            }\r\n            Dimensions.addEventListener(\"change\",onChange)\r\n            return () => Dimensions.removeEventListener(\"change\", onChange)\r\n            \r\n        }\r\n    },[ isMobile])\r\n    return <View style={{height:isMobile&&Platform.OS == 'web'?height:'100%'}}>\r\n        {props.children}\r\n    </View>\r\n\r\n}\r\n  ","import React from 'react';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\r\nimport Navigation from './src/navigation';\r\nimport useCachedResources from './src/hooks/useCachedResources';\r\nimport { useInitColorScheme } from './src/hooks/useColorScheme';\r\nimport MobileSafeAreaView from './src/components/MobileSafeAreaView';\r\nimport { AuthProvider } from './src/hooks/useAuthContext';\r\nimport { QueryClient, QueryClientProvider } from 'react-query';\r\nimport { IntlProvider } from './src/hooks/useLangContext';\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nexport default function App() {\r\n  const isLoadingComplete = useCachedResources();\r\n  const isAppearenceComplete = useInitColorScheme()\r\n  if (!isLoadingComplete || !isAppearenceComplete) {\r\n    return null;\r\n  } else {\r\n    return (\r\n      <SafeAreaProvider>\r\n        <MobileSafeAreaView>\r\n          <AuthProvider>\r\n            <QueryClientProvider client={queryClient}>\r\n              <IntlProvider>\r\n                {/* devtools */}\r\n                {/* <ReactQueryDevtools initialIsOpen={true} /> */}\r\n                <Navigation/>\r\n                <StatusBar />\r\n              </IntlProvider>\r\n            </QueryClientProvider>\r\n          </AuthProvider>\r\n        </MobileSafeAreaView>\r\n      </SafeAreaProvider>\r\n    );\r\n  }\r\n}\r\n","import { Ionicons } from '@expo/vector-icons';\r\nimport * as Font from 'expo-font';\r\nimport * as SplashScreen from 'expo-splash-screen';\r\nimport * as React from 'react';\r\n\r\nexport default function useCachedResources() {\r\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\r\n\r\n  // Load any resources or data that we need prior to rendering the app\r\n  React.useEffect(() => {\r\n    async function loadResourcesAndDataAsync() {\r\n      try {\r\n        SplashScreen.preventAutoHideAsync();\r\n\r\n        // Load fonts\r\n        await Font.loadAsync({\r\n          ...Ionicons.font,\r\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\r\n        });\r\n      } catch (e) {\r\n        // We might want to provide this error information to an error reporting service\r\n        console.warn(e);\r\n      } finally {\r\n        setLoadingComplete(true);\r\n        SplashScreen.hideAsync();\r\n      }\r\n    }\r\n\r\n    loadResourcesAndDataAsync();\r\n  }, []);\r\n\r\n  return isLoadingComplete;\r\n}\r\n","import { createIntl, createIntlCache } from \"@formatjs/intl\";\r\nimport {I18nManager} from \"react-native\";\r\nimport * as RNLocalize from \"react-native-localize\";\r\n\r\nexport const translations = {\r\n  ko: require(\"./ko.json\"),\r\n} as const;\r\n\r\ntype Translation = keyof typeof translations;\r\n\r\n// fallback if no available language fits\r\nconst fallback = { languageTag: \"en\", isRTL: false };\r\n\r\nconst { languageTag, isRTL } =\r\n  RNLocalize.findBestLanguageTag(Object.keys(translations)) ?? fallback;\r\n\r\n// update layout direction\r\nI18nManager.forceRTL(isRTL);\r\n\r\n// console.log(languageTag)\r\nconst intl = createIntl(\r\n  {\r\n    defaultLocale: \"en\",\r\n    locale: languageTag,\r\n    messages: translations[languageTag as Translation],\r\n  },\r\n  createIntlCache(),\r\n);\r\n\r\nexport default intl","import React, { createContext, useContext, useState, useEffect } from \"react\";\r\nimport { IntlShape } from \"@formatjs/intl\";\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport intl, { translations } from \"../lang\";\r\n\r\nconst IntlContext = createContext<{locale?:string, setLocale:(locale:string|undefined)=>void}>({setLocale:()=>{}});\r\n\r\nexport const IntlProvider = ({children}:{children:React.ReactNode})=>{\r\n  const [complete, setComplete] = useState(false)\r\n  const [locale, setLocale] = useState<string>()\r\n  useEffect(()=>{\r\n    AsyncStorage.getItem(\"locale\").then(v=>{\r\n      setLocale(v || undefined)\r\n      setComplete(true)\r\n    })\r\n  }, [])\r\n  return complete?<IntlContext.Provider value={{locale, setLocale}}>\r\n      {children}\r\n    </IntlContext.Provider>:<></>\r\n}\r\n\r\n\r\n\r\ntype TranslationParams = Parameters<IntlShape<string>[\"formatMessage\"]>[1];\r\n\r\nexport default ()=>{\r\n  const { locale, setLocale } = useContext(IntlContext)\r\n  return {\r\n    lang:(key: string, params?: TranslationParams) => {\r\n      console.log(locale)\r\n      if (locale == 'en')\r\n        return key\r\n      if (locale != undefined && locale !='auto')\r\n        return translations[locale as 'ko'][key]\r\n      return intl\r\n        .formatMessage({ id: key, defaultMessage: key }, params)\r\n        .toString()\r\n    },\r\n    locale,\r\n    setLocale: (locale:string)=>{AsyncStorage.setItem('locale', locale).then(()=>setLocale(locale))}\r\n  }\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Text, StyleSheet, Pressable, StyleProp, ViewStyle} from 'react-native';\r\nimport Colors from '../constants/Colors';\r\nimport useColorScheme from '../hooks/useColorScheme';\r\nimport { CustomButtonProps } from '../types';\r\n\r\nconst DefaultButton = (props:CustomButtonProps)=>{\r\n    const [hover, setHover] = useState(false)\r\n    return <Pressable\r\n        onPress={()=>props.onPress()}\r\n        //@ts-ignore\r\n        onHoverIn={()=>setHover(true)}\r\n        onHoverOut={()=>setHover(false)}\r\n        style={[\r\n            {\r\n                paddingVertical:5, \r\n                paddingHorizontal:16\r\n            },\r\n            props.style,\r\n            hover?{backgroundColor:props.color}:{}\r\n        ]}>\r\n            <Text selectable={false} style={[{fontSize:14}, props.textStyle]}>{props.title}</Text>\r\n        </Pressable>\r\n}\r\n\r\nexport default (props:CustomButtonProps)=>{\r\n    const theme = useColorScheme()\r\n    const _props = {\r\n        color:Colors[theme].buttonColor,\r\n        ...props,\r\n        style:[\r\n            styles.style,\r\n            {\r\n                backgroundColor:Colors[theme].buttonBackgroundColor\r\n            },\r\n            props.style,\r\n        ] as StyleProp<ViewStyle>,\r\n        textStyle:[\r\n            styles.text, \r\n            {color:Colors[theme].text},\r\n            props.textStyle\r\n        ]\r\n    }\r\n    return <DefaultButton {..._props}/>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    style:{\r\n        borderRadius:6, \r\n        borderColor:Colors.button.borderColor, \r\n        borderWidth:1, \r\n    },\r\n    text:{\r\n        textAlign:'center', \r\n        fontWeight:'600'\r\n    }\r\n});\r\n","firebaseConfig = {\n    \"authDomain\": \"virtual-metrics-355712.firebaseapp.com\",\n    \"projectId\": \"virtual-metrics-355712\",\n    \"storageBucket\": \"virtual-metrics-355712.appspot.com\",\n    \"messagingSenderId\": \"76003576924\",\n    \"appId\": \"1:76003576924:web:c8c8a006d07918bbc02a99\",\n    \"measurementId\": \"G-SEL35L4N5R\"\n}\nif (typeof module !== 'undefined') {\n    module.exports = firebaseConfig\n}\n","\r\nimport { User, UserMembership } from '../types';\r\nimport axios, { getToken, setToken, accountURL as baseURL } from './axios';\r\n\r\nexport const login = async(username:string, password:string) => {\r\n    if(username.endsWith('.guest') && password.length == 0)\r\n        password = 'guest'\r\n    const r = await axios.post(\"/api-token-auth/\", {username, password});\r\n    if(r.status == 200){\r\n        await setToken(r.data)\r\n        return await checkLogin()\r\n    }\r\n}\r\n\r\nexport const logout = async() => {\r\n    await setToken(null)\r\n    return await axios.get(\"/api-auth/logout/\")\r\n}\r\n\r\nexport const guestLogin =  async() => {\r\n    return await login('guest', 'guest')\r\n}\r\n\r\nconst checkLoginToken = async ()=>{\r\n    const value = (await axios.get(\"/api/v1/users/memberships/?_self=true\"))?.data\r\n    if (value && value.length){\r\n        return value[0] as UserMembership\r\n    }\r\n    return null\r\n}\r\n\r\nexport const checkLogin = async() => {\r\n    const token = await getToken()\r\n    if (token === null)\r\n        return null\r\n    try{\r\n       return await checkLoginToken()\r\n    }\r\n    catch(e:any){\r\n        let error = e\r\n        if(e.response !== undefined && e.response.status==401){\r\n            try{\r\n                return await checkLoginToken()\r\n            }\r\n            catch(e2){\r\n                error = e2\r\n            }\r\n        }\r\n        const isOffline = ((error as any).code == \"ERR_NETWORK\" || (error as any).message && ((error as any).message as string).startsWith(\"Cannot read\"))\r\n        throw {error, isOffline}\r\n    }\r\n}\r\n\r\nexport const getUserList = async (group_id:number)=>{\r\n    return (await axios.get(`/api/v1/users/?group_id=${group_id}`) ).data as User[]\r\n}\r\n\r\nexport const patchUser = async (user:{id:number, name:string})=>{\r\n    await axios.patch(`/api/v1/user/`, {ids:[user.id], updated: {name:user.name}}, {baseURL})\r\n}\r\n\r\nexport const getUserMembershipList = async (group_id:number)=>{\r\n    return (await axios.get(`/api/v1/users/memberships/?group_id=${group_id}`) ).data as UserMembership[]\r\n}\r\n\r\nexport const getExternalMembershipList = async (username:string)=>{\r\n    return (await axios.get(`/api/v1/users/memberships/?username=${username}`) ).data as UserMembership[]\r\n}","import { Channel, MessengerMember, MessengerContent, EditMessage, MessengerChannel, DirectChannel } from '../types';\r\nimport axios from './axios';\r\n\r\nexport const getMessengerChannelList = async (user_id:number)=>{\r\n    return (await axios.get(`/api/v1/channels/messenger/?type=messenger&messenger_user_id=${user_id}`) ).data as MessengerChannel[]\r\n}\r\n\r\nexport const postChannel = async(channel:Channel)=>{\r\n    return (await axios.post(`/api/v1/channels/`, channel)).data as Channel\r\n}\r\n\r\nexport const postDirectChannel = async(channel:DirectChannel)=>{\r\n    return (await axios.post(`/api/v1/channels/direct/`, channel)).data as Channel\r\n}\r\n\r\nexport const putChannel = async(channel:Channel)=>{\r\n    return (await axios.put(`/api/v1/channels/${channel.id}/`, channel)).data as Channel\r\n}\r\n\r\nexport const deleteChannel = async(channel_id:number)=>{\r\n    await axios.delete(`/api/v1/channels/${channel_id}/`)\r\n}\r\n\r\nexport const getMessengerMemberList = async(channel_id:number)=>{\r\n    return (await axios.get(`/api/v1/messengermembers/?channel=${channel_id}`) ).data as MessengerMember[]\r\n}\r\n\r\nexport const postBulkMessengerMember = async(data:{channel_id:number, user_ids:number[]})=>{\r\n    await axios.post(`/api/v1/messengermembers/bulk/`, {channel:data.channel_id, user_ids:data.user_ids})\r\n}\r\n\r\nexport const deleteMessengerMember = async(member_id:number)=>{\r\n    await axios.delete(`/api/v1/messengermembers/${member_id}/`)\r\n}\r\n\r\nexport const getMessengerContentList = async (channel_id:number, id_lt?:number)=>{\r\n    const id_lt_param = id_lt?`&id_lt=${id_lt}`:''\r\n    return (await axios.get(`/api/v1/messengercontents/?limit=30&channel=${channel_id}${id_lt_param}`)).data.results as MessengerContent[]\r\n}\r\n\r\nexport const postMessage = async (message:EditMessage)=>{\r\n    if (message.file){\r\n        const formData = new FormData(); // formData 객체를 생성한다.\r\n        formData.append(\"file\", message.file)\r\n        Object.entries(message).forEach(value=>{\r\n            formData.append(value[0], `${value[1]}`)\r\n        })\r\n        await axios.post(`/api/v1/messengercontents/messages/`, formData, {headers:{\r\n            ...(axios.defaults.headers as any), \"Content-Type\": \"multipart/form-data\",\r\n        }})\r\n    }\r\n    else{\r\n        await axios.post(`/api/v1/messengercontents/messages/`, message)\r\n    }\r\n}\r\n\r\nexport const deleteMessengerContent = async (content_id:number)=>{\r\n    await axios.delete(`/api/v1/messengercontents/${content_id}/`)\r\n}","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","import React, { useState, createContext, useContext, useEffect } from \"react\";\r\nimport { Modal } from \"react-native\";\r\nimport useResizeWindow from \"./useResizeWindow\";\r\n\r\ntype ModalProps = any\r\n\r\ntype ModalState = {\r\n  Component:React.ComponentType<ModalProps>,\r\n  ExactComponent?:React.ComponentType<ModalProps>\r\n}\r\ntype SetModal = (Component:ModalState[\"Component\"], props:ModalProps|null)=>void\r\n\r\nconst ModalsContext = createContext<{setModal: SetModal}>({\r\n    setModal: () => {}\r\n});\r\n\r\nexport const ModalsProvider = ({children, modals:allModals}:{children:React.ReactNode, modals:React.ComponentType<ModalProps>[]}) => {\r\n    const [modals, setModals] = useState<ModalState[]>(allModals.map((Component)=>({Component})));\r\n    const windowType = useResizeWindow();\r\n    const [animationType, setAnimationType] = useState('none')\r\n    const setModal:SetModal = (Component, props) => {\r\n        const newModals = modals.map(m=>{\r\n            if(m.Component == Component){\r\n                return {\r\n                    Component, \r\n                    ExactComponent:props != null?React.memo(()=><Component {...props}/>):undefined\r\n                }\r\n            }\r\n            return m        \r\n        })\r\n        setModals(newModals);\r\n    }\r\n    useEffect(()=>{\r\n        modals.filter(v=>v.ExactComponent!==undefined).length == 0 && setAnimationType(windowType == 'landscape'?'fade':'slide')\r\n    }, [windowType, modals])\r\n    return <ModalsContext.Provider value={{setModal}}>\r\n        {children}\r\n        {modals.map((modal, index)=>{\r\n            const { ExactComponent } = modal;\r\n            return <Modal key={index} animationType={animationType as any} visible={ExactComponent!==undefined}>\r\n                {ExactComponent?<ExactComponent/>:<></>}\r\n            </Modal>\r\n        })}\r\n    </ModalsContext.Provider>\r\n}\r\n\r\nexport default ()=>{\r\n    const modalsContext = useContext(ModalsContext)\r\n    return modalsContext\r\n}\r\n\r\n","import React, { useState, useEffect, createContext, useContext, useMemo } from 'react';\r\nimport { Dimensions, ScaledSize, useWindowDimensions } from 'react-native';\r\n//@ts-ignore\r\nimport useMobileDetect from 'use-mobile-detect-hook';\r\n\r\ntype WindowType = 'portrait' | 'landscape'\r\n\r\nconst getWindowType = (window:{width:number, height:number})=> window.height >= window.width?'portrait':'landscape' as WindowType;\r\n\r\nconst ResizeWindowContext = createContext<WindowType>(getWindowType(Dimensions.get('window')));\r\n\r\nexport const ResizeWindowProvider = ({children}:{children:React.ReactNode})=>{\r\n  const detectMobile = useMobileDetect();\r\n  const {width, height} = useWindowDimensions()\r\n  const [windowType, setWindowType] = useState(getWindowType({width, height}))\r\n  useEffect(()=>{\r\n    setWindowType(getWindowType({width, height}))\r\n  }, [width, height])\r\n  return <ResizeWindowContext.Provider value={detectMobile.isMobile()?'portrait':windowType}>\r\n    {children}\r\n  </ResizeWindowContext.Provider>\r\n}\r\n\r\nexport default function useResizeWindow() {\r\n  const windowType = useContext(ResizeWindowContext)\r\n  return windowType\r\n}","import AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { useTheme } from '@react-navigation/native';\r\nimport { useMemo, useEffect, useState } from 'react';\r\nimport { ColorSchemeName } from 'react-native';\r\nimport { Appearance, ColorSchemeName as UserColorSchemeName } from 'react-native-appearance';\r\n\r\n// The useColorScheme value is always either light or dark, but the built-in\r\n// type suggests that it can be null. This will not happen in practice, so this\r\n// makes it a bit easier to work with.\r\n\r\nexport function useInitColorScheme(){\r\n  const [complete, setComplete] = useState(false)\r\n  useEffect(()=>{\r\n    if (!complete){\r\n      AsyncStorage.getItem(\"color\").then(v=>{\r\n        Appearance.set({colorScheme:(v==null)?'no-preference':(v as any)})\r\n        setComplete(true)\r\n      })\r\n    }\r\n  }, [complete])\r\n  return complete\r\n}\r\n\r\nexport function setColorScheme(colorScheme:UserColorSchemeName){\r\n  AsyncStorage.setItem('color',colorScheme as string).then(()=>Appearance.set({colorScheme}))\r\n}\r\n\r\nexport default function useColorScheme(): NonNullable<ColorSchemeName> {\r\n  const { dark } = useTheme()\r\n  const colorScheme = useMemo(()=> dark?'dark':'light', [dark]) as NonNullable<ColorSchemeName>;\r\n  return colorScheme\r\n}\r\n","import * as React from 'react';\r\nimport { View, Text } from './Themed';\r\nimport { StyleSheet, StyleProp, ViewStyle, TextStyle } from 'react-native';\r\nimport Colors from '../constants/Colors';\r\n\r\nexport type SectionParamList = {\r\n    title?: string,\r\n    titleStyle?:StyleProp<TextStyle>\r\n    outerContainerStyle?:StyleProp<TextStyle>\r\n    containerStyle?:StyleProp<ViewStyle>\r\n    bodyStyle?:StyleProp<ViewStyle>\r\n    subtitle?: string\r\n    withSeparator?: boolean\r\n    children?: React.ReactNode\r\n}\r\n\r\nexport default function CommonSection(props:SectionParamList){\r\n  return (\r\n    <View style={[styles.outerContainer, props.outerContainerStyle]}>\r\n        <View style={[styles.container, props.containerStyle]}>\r\n            {props.withSeparator?<View style={styles.separator} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />:undefined}\r\n            {props.title?<View style={styles.titleView}>\r\n              <Text style={[styles.title, props.titleStyle]}>{props.title}</Text>\r\n              <Text style={styles.subtitle}>{props.subtitle}</Text>\r\n            </View>:undefined}\r\n            <View style={[styles.bodyView, props.bodyStyle]}>\r\n            {props.children}\r\n            </View>\r\n          </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  outerContainer:{\r\n    width:'100%',\r\n    maxWidth:1080,\r\n    alignItems:'stretch',\r\n    backgroundColor:'transparent'\r\n  },  \r\n  container: {\r\n      marginHorizontal:20,\r\n      marginVertical: 10,\r\n      backgroundColor:'transparent',\r\n    },\r\n    titleView:{\r\n      width: '100%',\r\n      flexDirection:'row',\r\n      backgroundColor:'transparent',\r\n      marginBottom:5,\r\n    },\r\n    title: {\r\n      flex:1,\r\n      fontSize: 16,\r\n    },\r\n    subtitle: {\r\n      flex:1,\r\n      fontSize: 12,\r\n      textAlign: 'right',\r\n      marginTop:4\r\n    },\r\n    separator: {\r\n      marginBottom: 20,\r\n      height: 1,\r\n      width: '100%',\r\n    },\r\n    bodyView:{\r\n      width: '100%',\r\n      padding: 20,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      borderWidth:1,\r\n      borderColor:Colors.borderColor,\r\n      borderRadius:6\r\n    }\r\n  });\r\n  ","import { useEffect } from \"react\";\r\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\r\nimport { getMessengerChannelList, postChannel, postDirectChannel, putChannel } from \"../../apis\";\r\nimport { MessengerChannel, MessengerContent } from \"../../types\";\r\nimport { Auth } from \"../useAuthContext\";\r\nimport useWebsocketContext from \"../useWebsocketContext\";\r\n\r\nexport default function useMessengerChannelList(auth?:Auth){\r\n  const queryClient = useQueryClient()\r\n  const {lastJsonMessage} = useWebsocketContext()\r\n  const { data } = useQuery(\"MessengerChannelList\" , async()=>auth?.user?.id?(await getMessengerChannelList(auth.user.id)):[])\r\n\r\n  useEffect(()=>{\r\n    if(lastJsonMessage !=null){\r\n      if(lastJsonMessage['type']=='enter'){\r\n        queryClient.setQueryData<MessengerChannel[]>(\"MessengerChannelList\", (_data)=>{\r\n          return (_data?.find(v=>v.id==lastJsonMessage['data']['id'])?_data:[lastJsonMessage['data'] , ...(_data|| [])]).sort((a, b)=>a.id - b.id)\r\n        })\r\n      }\r\n      if (lastJsonMessage['type']=='next_message'){\r\n        const data:MessengerContent = lastJsonMessage['data']\r\n        queryClient.setQueryData<MessengerChannel[]>(\"MessengerChannelList\", (_data)=>(_data || []).map(v=>{\r\n          if (v.id == data.channel){\r\n            return {...v, last_message:{content:data.message_set[0]?.content, created:data.created}}\r\n          }\r\n          return v\r\n        }))\r\n      }\r\n      // if(lastJsonMessage['type']=='leave'){\r\n      //   queryClient.setQueryData<Channel[]>(\"MessengerChannelList\", (_data)=>_data?.filter(v=>v.id!=lastJsonMessage['data']['channel_id']) || [])\r\n      // }\r\n    }\r\n  }, [lastJsonMessage])\r\n  return data\r\n}\r\n\r\nexport function useMessengerChannelSorted(auth?:Auth){\r\n  const channelList = useMessengerChannelList(auth);\r\n  return channelList?.sort((a, b)=>(a.last_message?.created || '') < (b.last_message?.created || '')?1:-1)\r\n}\r\nexport function useMessengerChannelMutation(){\r\n  const queryClient = useQueryClient()\r\n\r\n  const create = useMutation(postChannel, {\r\n    onSuccess: ()=>queryClient.invalidateQueries(\"MessengerChannelList\")\r\n  });\r\n\r\n  const update = useMutation(putChannel, {\r\n    onSuccess: () => queryClient.invalidateQueries(\"MessengerChannelList\")\r\n  })\r\n\r\n  const direct = useMutation(postDirectChannel, {\r\n    onSuccess: () => queryClient.invalidateQueries(\"MessengerChannelList\")\r\n  })\r\n\r\n  return { create:create.mutateAsync, update:update.mutateAsync, direct:direct.mutateAsync}\r\n}"],"sourceRoot":""}